uint64_t destroy for PendingServerResponses.ExpungedMessages(uint64_t a1)
{
  return sub_10005A3F4(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for PendingServerResponses.ExpungedMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_10003C120(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_10005A3F4(v5, v6);
  return a1;
}

uint64_t assignWithTake for PendingServerResponses.ExpungedMessages(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_10005A3F4(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PendingServerResponses.ExpungedMessages(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PartialRange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10007C16C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_10007C174(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PendingServerResponses.ExpungedMessages()
{
  return &type metadata for PendingServerResponses.ExpungedMessages;
}

unint64_t sub_10007C194()
{
  unint64_t result = qword_10070B2B8;
  if (!qword_10070B2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B2B8);
  }
  return result;
}

uint64_t sub_10007C1E8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(unsigned char *)(a2 + 48) = *((unsigned char *)a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

unint64_t sub_10007C208()
{
  unint64_t result = qword_10070B2D8;
  if (!qword_10070B2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B2D8);
  }
  return result;
}

unint64_t sub_10007C25C()
{
  unint64_t result = qword_10070B2E0;
  if (!qword_10070B2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B2E0);
  }
  return result;
}

unint64_t sub_10007C2B0()
{
  unint64_t result = qword_10070B2E8;
  if (!qword_10070B2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B2E8);
  }
  return result;
}

unint64_t sub_10007C304()
{
  unint64_t result = qword_10070B2F0;
  if (!qword_10070B2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B2F0);
  }
  return result;
}

unint64_t sub_10007C358()
{
  unint64_t result = qword_10070B2F8;
  if (!qword_10070B2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B2F8);
  }
  return result;
}

uint64_t sub_10007C3AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6369736162 && a2 == 0xE500000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F7453646E6F63 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_10007C4A4(unint64_t result)
{
  switch((result >> 58) & 0x3C | (result >> 1) & 3)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x20uLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
      unint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10007C594(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007C5FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007C664(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for PendingServerResponses.CapturedValue.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007C790);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PendingServerResponses.CapturedValue.CodingKeys()
{
  return &type metadata for PendingServerResponses.CapturedValue.CodingKeys;
}

ValueMetadata *type metadata accessor for PendingServerResponses.CapturedValue.BasicCodingKeys()
{
  return &type metadata for PendingServerResponses.CapturedValue.BasicCodingKeys;
}

uint64_t getEnumTagSinglePayload for ClientCommand.SelectOption(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s13IMAP2Behavior22PendingServerResponsesV13CapturedValueO15BasicCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10007C8D0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PendingServerResponses.CapturedValue.CondStoreCodingKeys()
{
  return &type metadata for PendingServerResponses.CapturedValue.CondStoreCodingKeys;
}

ValueMetadata *type metadata accessor for PendingServerResponses.SequenceChange()
{
  return &type metadata for PendingServerResponses.SequenceChange;
}

uint64_t destroy for PendingServerResponses.ChangeWithoutUID()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PendingServerResponses.ChangeWithoutUID(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PendingServerResponses.ChangeWithoutUID(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PendingServerResponses.ChangeWithoutUID(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PendingServerResponses.ChangeWithoutUID(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PendingServerResponses.ChangeWithoutUID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PendingServerResponses.ChangeWithoutUID()
{
  return &type metadata for PendingServerResponses.ChangeWithoutUID;
}

unint64_t sub_10007CACC()
{
  unint64_t result = qword_10070B310;
  if (!qword_10070B310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B310);
  }
  return result;
}

unint64_t sub_10007CB24()
{
  unint64_t result = qword_10070B318;
  if (!qword_10070B318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B318);
  }
  return result;
}

unint64_t sub_10007CB7C()
{
  unint64_t result = qword_10070B320;
  if (!qword_10070B320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B320);
  }
  return result;
}

unint64_t sub_10007CBD4()
{
  unint64_t result = qword_10070B328;
  if (!qword_10070B328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B328);
  }
  return result;
}

unint64_t sub_10007CC2C()
{
  unint64_t result = qword_10070B330;
  if (!qword_10070B330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B330);
  }
  return result;
}

unint64_t sub_10007CC84()
{
  unint64_t result = qword_10070B338;
  if (!qword_10070B338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B338);
  }
  return result;
}

unint64_t sub_10007CCDC()
{
  unint64_t result = qword_10070B340;
  if (!qword_10070B340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B340);
  }
  return result;
}

unint64_t sub_10007CD34()
{
  unint64_t result = qword_10070B348;
  if (!qword_10070B348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B348);
  }
  return result;
}

unint64_t sub_10007CD8C()
{
  unint64_t result = qword_10070B350;
  if (!qword_10070B350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B350);
  }
  return result;
}

uint64_t sub_10007CDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  int v9 = *(unsigned __int8 *)(a2 + 40);
  if ((sub_10007E37C(*(void *)(a2 + 8), *(void *)(a1 + 8)) & 1) == 0) {
    return 0;
  }
  if ((sub_10007DEAC(v2, v6) & 1) == 0) {
    return 0;
  }
  uint64_t result = sub_100079830(v3, v7);
  if ((result & 1) == 0) {
    return 0;
  }
  if (v5)
  {
    if (v4)
    {
      if (v9) {
        return v8 != 0;
      }
    }
    else if (v9)
    {
      return v8 == 0;
    }
    return 0;
  }
  if (v9) {
    return 0;
  }
  if (((v8 | v4) & 0x8000000000000000) == 0) {
    return v8 == v4;
  }
  __break(1u);
  return result;
}

int64_t sub_10007CEB0(uint64_t a1, uint64_t a2)
{
  return sub_10007D2AC(*(uint64_t (**)())a1, *(unsigned __int8 *)(a1 + 8), *(void *)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32), *(unsigned int *)(a1 + 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 36) << 32), a2);
}

uint64_t WatchOSHeaderInfo.cc.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10007CF00(uint64_t a1)
{
  return sub_10007B110(a1);
}

uint64_t BodyStructure.Multipart.Extension.parameters.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  swift_retain();
  swift_retain();
  return v1;
}

uint64_t sub_10007CF74()
{
  uint64_t v1 = sub_1000A7178((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  uint64_t *v0 = v1;
  v0[1] = v3;
  v0[2] = v5;
  return result;
}

uint64_t sub_10007CFD0(uint64_t a1, uint64_t a2)
{
  return sub_10007EA70(a2);
}

void sub_10007CFD8()
{
  *(void *)(v0 + 32) = 0;
  *(unsigned char *)(v0 + 40) = 1;
}

uint64_t sub_10007CFE8@<X0>(uint64_t a1@<X8>)
{
  sub_10007E7B8(*v1, v1[1], v1[3], (uint64_t)v4);
  return sub_10007C1E8(v4, a1);
}

uint64_t sub_10007D02C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = a4;
  v12[1] = a5;
  uint64_t v7 = sub_10000566C(&qword_10070B360);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_10007F130();
  sub_1005E3500();
  char v14 = 0;
  sub_1005E3130();
  if (!v5)
  {
    char v13 = 1;
    sub_1005E3130();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_10007D1A0()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x577365676E616863;
  }
}

uint64_t sub_10007D1EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10007F390(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10007D214(uint64_t a1)
{
  unint64_t v2 = sub_10007F130();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10007D250(uint64_t a1)
{
  unint64_t v2 = sub_10007F130();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10007D28C(void *a1)
{
  return sub_10007D02C(a1, *v1, v1[1], v1[2], v1[3]);
}

int64_t sub_10007D2AC(uint64_t (*a1)(), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v94 = a3;
  uint64_t v92 = a2;
  v93 = a1;
  uint64_t v90 = _s12LocalMailboxV6LoggerVMa();
  uint64_t v9 = __chkstk_darwin(v90);
  v11 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  char v14 = (char *)&v85 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  v17 = (char *)&v85 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  v20 = (char *)&v85 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  v23 = (char *)&v85 - v22;
  __chkstk_darwin(v21);
  v25 = (char *)&v85 - v24;
  uint64_t v26 = sub_1005E0ED0();
  __chkstk_darwin(v26);
  uint64_t v28 = __chkstk_darwin((char *)&v85 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = __chkstk_darwin(v28);
  v34 = (char *)&v85 - v30;
  uint64_t v89 = a5;
  if ((a5 & 0x100000000) != 0)
  {
    uint64_t v91 = v31;
    v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
    if ((a4 & 0x100000000) != 0)
    {
      uint64_t v66 = v29;
      uint64_t v67 = v32;
      v50(v29, a6, v32);
      sub_10007EE74(a6, (uint64_t)v14, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      sub_10007EE74(a6, (uint64_t)v11, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      v68 = sub_1005E0EB0();
      os_log_type_t v69 = sub_1005E25A0();
      int v70 = v69;
      if (os_log_type_enabled(v68, v69))
      {
        uint64_t v71 = swift_slowAlloc();
        LODWORD(v94) = v70;
        uint64_t v72 = v71;
        uint64_t v95 = swift_slowAlloc();
        uint64_t v98 = v95;
        *(_DWORD *)uint64_t v72 = 68158979;
        LODWORD(v96) = 2;
        sub_1005E2960();
        *(_WORD *)(v72 + 8) = 256;
        uint64_t v88 = v67;
        uint64_t v73 = v90;
        char v74 = v14[*(int *)(v90 + 20)];
        v93 = _s12LocalMailboxV6LoggerVMa;
        sub_10007EEDC((uint64_t)v14, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
        LOBYTE(v96) = v74;
        sub_1005E2960();
        *(_WORD *)(v72 + 11) = 1040;
        LODWORD(v96) = 2;
        sub_1005E2960();
        *(_WORD *)(v72 + 17) = 512;
        v75 = &v11[*(int *)(v73 + 20)];
        LOWORD(v96) = *((_WORD *)v75 + 1);
        sub_1005E2960();
        *(_WORD *)(v72 + 21) = 2160;
        uint64_t v96 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v72 + 31) = 2085;
        int v76 = *((_DWORD *)v75 + 4);
        uint64_t v96 = *((void *)v75 + 1);
        int v97 = v76;
        swift_bridgeObjectRetain();
        uint64_t v77 = sub_1005E1CC0();
        uint64_t v96 = sub_1000C6914(v77, v78, &v98);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_10007EEDC((uint64_t)v11, (uint64_t (*)(void))v93);
        _os_log_impl((void *)&_mh_execute_header, v68, (os_log_type_t)v94, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Flag/label change without UID and without sequence number.", (uint8_t *)v72, 0x29u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 8))(v66, v88);
      }
      else
      {
        sub_10007EEDC((uint64_t)v14, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
        sub_10007EEDC((uint64_t)v11, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);

        return (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 8))(v66, v67);
      }
    }
    else
    {
      uint64_t v51 = v33;
      uint64_t v52 = v32;
      v50(v33, a6, v32);
      sub_10007EE74(a6, (uint64_t)v20, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      sub_10007EE74(a6, (uint64_t)v17, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      v53 = sub_1005E0EB0();
      os_log_type_t v54 = sub_1005E2590();
      int v55 = v54;
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v56 = swift_slowAlloc();
        int v86 = v55;
        uint64_t v57 = v56;
        uint64_t v87 = swift_slowAlloc();
        uint64_t v98 = v87;
        *(_DWORD *)uint64_t v57 = 68159235;
        LODWORD(v96) = 2;
        uint64_t v89 = a4;
        sub_1005E2960();
        *(_WORD *)(v57 + 8) = 256;
        uint64_t v88 = v52;
        uint64_t v58 = v90;
        char v59 = v20[*(int *)(v90 + 20)];
        v85 = _s12LocalMailboxV6LoggerVMa;
        sub_10007EEDC((uint64_t)v20, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
        LOBYTE(v96) = v59;
        sub_1005E2960();
        *(_WORD *)(v57 + 11) = 1040;
        LODWORD(v96) = 2;
        sub_1005E2960();
        *(_WORD *)(v57 + 17) = 512;
        v60 = &v17[*(int *)(v58 + 20)];
        LOWORD(v96) = *((_WORD *)v60 + 1);
        sub_1005E2960();
        *(_WORD *)(v57 + 21) = 2160;
        uint64_t v96 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v57 + 31) = 2085;
        int v61 = *((_DWORD *)v60 + 4);
        uint64_t v96 = *((void *)v60 + 1);
        int v97 = v61;
        swift_bridgeObjectRetain();
        uint64_t v62 = sub_1005E1CC0();
        uint64_t v96 = sub_1000C6914(v62, v63, &v98);
        sub_1005E2960();
        LODWORD(a4) = v89;
        swift_bridgeObjectRelease();
        sub_10007EEDC((uint64_t)v17, (uint64_t (*)(void))v85);
        *(_WORD *)(v57 + 41) = 1024;
        LODWORD(v96) = a4;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v86, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Inserting flag/label change without UID. Sequence number %u.", (uint8_t *)v57, 0x2Fu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v51, v88);
      }
      else
      {
        sub_10007EEDC((uint64_t)v20, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
        sub_10007EEDC((uint64_t)v17, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);

        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v51, v52);
      }
      uint64_t v80 = v94;
      uint64_t v79 = v95;
      v81 = *(void **)(v95 + 24);
      swift_bridgeObjectRetain();
      int64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        int64_t result = (int64_t)sub_100016180(0, v81[2] + 1, 1, v81);
        v81 = (void *)result;
      }
      unint64_t v83 = v81[2];
      unint64_t v82 = v81[3];
      if (v83 >= v82 >> 1)
      {
        int64_t result = (int64_t)sub_100016180((void *)(v82 > 1), v83 + 1, 1, v81);
        v81 = (void *)result;
      }
      v81[2] = v83 + 1;
      v84 = &v81[4 * v83];
      *((_DWORD *)v84 + 8) = a4;
      v84[5] = v93;
      *((unsigned char *)v84 + 48) = v92;
      v84[7] = v80;
      *(void *)(v79 + 24) = v81;
    }
  }
  else
  {
    uint64_t v35 = v32;
    uint64_t v36 = v31;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))((char *)&v85 - v30, a6, v32);
    sub_10007EE74(a6, (uint64_t)v25, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
    sub_10007EE74(a6, (uint64_t)v23, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    v37 = sub_1005E0EB0();
    os_log_type_t v38 = sub_1005E2590();
    int v39 = v38;
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v91 = v36;
      uint64_t v41 = v40;
      uint64_t v87 = swift_slowAlloc();
      uint64_t v98 = v87;
      *(_DWORD *)uint64_t v41 = 68159235;
      LODWORD(v96) = 2;
      uint64_t v88 = v35;
      sub_1005E2960();
      *(_WORD *)(v41 + 8) = 256;
      int v86 = v39;
      uint64_t v42 = v90;
      char v43 = v25[*(int *)(v90 + 20)];
      v85 = _s12LocalMailboxV6LoggerVMa;
      sub_10007EEDC((uint64_t)v25, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      LOBYTE(v96) = v43;
      sub_1005E2960();
      *(_WORD *)(v41 + 11) = 1040;
      LODWORD(v96) = 2;
      sub_1005E2960();
      *(_WORD *)(v41 + 17) = 512;
      v44 = &v23[*(int *)(v42 + 20)];
      LOWORD(v96) = *((_WORD *)v44 + 1);
      sub_1005E2960();
      *(_WORD *)(v41 + 21) = 2160;
      uint64_t v96 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v41 + 31) = 2085;
      int v45 = *((_DWORD *)v44 + 4);
      uint64_t v96 = *((void *)v44 + 1);
      int v97 = v45;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_1005E1CC0();
      uint64_t v96 = sub_1000C6914(v46, v47, &v98);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10007EEDC((uint64_t)v23, (uint64_t (*)(void))v85);
      *(_WORD *)(v41 + 41) = 1024;
      uint64_t v48 = v89;
      LODWORD(v96) = v89;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v37, (os_log_type_t)v86, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Inserting flag/label change for UID %u.", (uint8_t *)v41, 0x2Fu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v91 + 8))(v34, v88);
      uint64_t v49 = v94;
    }
    else
    {
      sub_10007EEDC((uint64_t)v25, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      sub_10007EEDC((uint64_t)v23, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
      uint64_t v49 = v94;
      uint64_t v48 = v89;
    }
    uint64_t v64 = v92;
    swift_bridgeObjectRetain();
    return sub_10009DF4C((uint64_t)v93, v64, v49, v48);
  }
  return result;
}

uint64_t sub_10007DEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (uint64_t *)(a2 + 48);
  for (i = (uint64_t *)(a1 + 48); ; i += 3)
  {
    uint64_t v5 = *i;
    uint64_t v6 = *v3;
    uint64_t v7 = *(v3 - 2);
    if (*(i - 2) == 2)
    {
      if (v7 != 2) {
        return 0;
      }
    }
    else if (v7 == 2 {
           || (static FlagsUpdate.__derived_struct_equals(_:_:)(*(i - 2) & 0xFFFFFFFF01010101, *((unsigned char *)i - 8), *(v3 - 2) & 0xFFFFFFFF01010101, *((unsigned char *)v3 - 8)) & 1) == 0)
    }
    {
      return 0;
    }
    if (!v5) {
      break;
    }
    if (!v6) {
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v8 = sub_100013754(v5, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      return 0;
    }
LABEL_6:
    v3 += 3;
    if (!--v2) {
      return 1;
    }
  }
  if (!v6) {
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10007DFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int16 *)(a1 + 32);
    uint64_t v4 = (unsigned __int16 *)(a2 + 32);
    while (2)
    {
      unsigned int v7 = *v3++;
      unsigned int v6 = v7;
      unsigned int v9 = *v4++;
      unsigned int v8 = v9;
      switch(v6 >> 14)
      {
        case 1u:
          int v10 = v8 & 0xC000;
          int v11 = (v8 ^ v6);
          if (v10 != 0x4000 || v11 != 0) {
            return 0;
          }
          goto LABEL_10;
        case 2u:
          int v13 = v8 & 0xC000;
          int v14 = (v8 ^ v6);
          if (v13 != 0x8000 || v14 != 0) {
            return 0;
          }
          goto LABEL_10;
        case 3u:
          switch(v6)
          {
            case 0xC001u:
              if (v8 != 49153) {
                return 0;
              }
              goto LABEL_10;
            case 0xC002u:
              if (v8 != 49154) {
                return 0;
              }
              goto LABEL_10;
            case 0xC003u:
              if (v8 != 49155) {
                return 0;
              }
              goto LABEL_10;
            default:
              if (v8 != 49152) {
                return 0;
              }
              goto LABEL_10;
          }
        default:
          if (v8 >> 14) {
            BOOL v5 = 0;
          }
          else {
            BOOL v5 = v6 == v8;
          }
          if (!v5) {
            return 0;
          }
LABEL_10:
          if (--v2) {
            continue;
          }
          return 1;
      }
    }
  }
  return 1;
}

uint64_t sub_10007E0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a4 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v21 = a4 + 32;
  uint64_t v6 = a2 + 32;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t result = swift_retain();
  uint64_t v8 = 0;
  unint64_t v9 = 0;
  while (v9 == v4)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    unint64_t v9 = v4;
    if (v8 == v5) {
      goto LABEL_30;
    }
LABEL_9:
    if (v8 == v5)
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    int v14 = (uint64_t *)(v6 + 16 * v8);
    uint64_t v15 = *((unsigned int *)v14 + 2);
    uint64_t v12 = *v14;
    swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_30;
    }
    if (!v12) {
      goto LABEL_28;
    }
    if ((v10 | (v10 << 32)) != (v15 | (v15 << 32)) || (uint64_t v16 = *(void *)(v11 + 16), v16 != *(void *)(v12 + 16)))
    {
LABEL_26:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      return 0;
    }
    if (v16 && v12 != v11)
    {
      if (*(unsigned __int8 *)(v11 + 32) != *(unsigned __int8 *)(v12 + 32)) {
        goto LABEL_26;
      }
      if (v16 != 1)
      {
        if (*(unsigned __int8 *)(v11 + 33) != *(unsigned __int8 *)(v12 + 33)) {
          goto LABEL_26;
        }
        if (v16 != 2)
        {
          if (*(unsigned __int8 *)(v11 + 34) != *(unsigned __int8 *)(v12 + 34)) {
            goto LABEL_26;
          }
          if (v16 != 3)
          {
            if (*(unsigned __int8 *)(v11 + 35) != *(unsigned __int8 *)(v12 + 35)) {
              goto LABEL_26;
            }
            uint64_t v17 = 0;
            uint64_t v18 = v16 - 4;
            while (v18 != v17)
            {
              int v19 = *(unsigned __int8 *)(v11 + v17 + 36);
              int v20 = *(unsigned __int8 *)(v12 + 36 + v17++);
              if (v19 != v20) {
                goto LABEL_26;
              }
            }
          }
        }
      }
    }
    ++v8;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (v9 >= v4) {
    goto LABEL_35;
  }
  int v13 = (uint64_t *)(v21 + 16 * v9);
  uint64_t v10 = *((unsigned int *)v13 + 2);
  uint64_t v11 = *v13;
  uint64_t result = swift_bridgeObjectRetain();
  if (v8 != v5)
  {
    ++v9;
    goto LABEL_9;
  }
  if (v11)
  {
LABEL_28:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
LABEL_31:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v12 = 0;
LABEL_30:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (v12) {
    goto LABEL_31;
  }
  return 1;
}

uint64_t sub_10007E37C(uint64_t result, uint64_t a2)
{
  unint64_t v2 = 0;
  unint64_t v3 = 0;
  unint64_t v4 = *(void *)(a2 + 16);
  unint64_t v5 = *(void *)(result + 16);
  uint64_t v6 = result + 32;
  while (1)
  {
    if (v3 == v4)
    {
      int v7 = 0;
      unint64_t v8 = *(void *)(a2 + 16);
      goto LABEL_6;
    }
    if (v3 >= v4) {
      break;
    }
    int v7 = *(_DWORD *)(a2 + 32 + 4 * v3);
    unint64_t v8 = v3 + 1;
LABEL_6:
    uint64_t result = v2 == v5;
    if (v2 == v5)
    {
      int v9 = 0;
      unint64_t v10 = v5;
      if (v3 == v4) {
        return result;
      }
    }
    else
    {
      if (v2 >= v5) {
        goto LABEL_15;
      }
      int v9 = *(_DWORD *)(v6 + 4 * v2);
      unint64_t v10 = v2 + 1;
      if (v3 == v4) {
        return result;
      }
    }
    uint64_t result = 0;
    if (v2 != v5)
    {
      unint64_t v2 = v10;
      unint64_t v3 = v8;
      if (v9 == v7) {
        continue;
      }
    }
    return result;
  }
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_10007E414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if ((sub_10007E37C(a6, a1) & 1) == 0) {
    return 0;
  }
  if ((sub_10007DEAC(a2, a7) & 1) == 0) {
    return 0;
  }
  uint64_t result = sub_100079830(a3, a8);
  if ((result & 1) == 0) {
    return 0;
  }
  if (a5)
  {
    if (a4)
    {
      if (a10) {
        return a9 != 0;
      }
      return 0;
    }
    if (a10) {
      return a9 == 0;
    }
    return 0;
  }
  if (a10) {
    return 0;
  }
  if (((a9 | a4) & 0x8000000000000000) == 0) {
    return a9 == a4;
  }
  __break(1u);
  return result;
}

uint64_t _s14BasicResponsesVwxx()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t _s14BasicResponsesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14BasicResponsesVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  return a1;
}

uint64_t _s14BasicResponsesVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t _s14BasicResponsesVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14BasicResponsesVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s14BasicResponsesVMa()
{
  return &_s14BasicResponsesVN;
}

unint64_t sub_10007E73C(uint64_t a1)
{
  unint64_t result = sub_10007E764();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10007E764()
{
  unint64_t result = qword_10070B358;
  if (!qword_10070B358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B358);
  }
  return result;
}

uint64_t sub_10007E7B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_10000566C(&qword_10070AB30);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v34 = (uint64_t)v33 - v12;
  uint64_t v13 = sub_10000566C(&qword_100709E38);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v33 - v17;
  unint64_t v19 = sub_10001FC6C();
  swift_retain();
  swift_retain();
  v33[1] = v19;
  sub_1005E3680();
  uint64_t v20 = *(void *)(a2 + 16);
  if (v20)
  {
    v33[0] = a1;
    swift_retain();
    swift_retain();
    for (uint64_t i = 0; i != v20; ++i)
    {
      int v22 = *(_DWORD *)(a2 + 4 * i + 32);
      int v35 = v22;
      MessageIdentifierSet.insert(_:)();
    }
    swift_release();
    swift_release();
  }
  sub_10001FDF0((uint64_t)v16, (uint64_t)v18, &qword_100709E38);
  swift_release();
  swift_release();
  uint64_t v23 = sub_1000AADEC();
  uint64_t v25 = v24;
  sub_100007A48((uint64_t)v18, &qword_100709E38);
  swift_bridgeObjectRetain();
  sub_1005E3680();
  uint64_t v26 = *(void *)(a3 + 16);
  if (v26)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = 32;
    do
    {
      int v35 = *(_DWORD *)(a3 + v27);
      MessageIdentifierSet.insert(_:)();
      v27 += 32;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
  }
  uint64_t v28 = v34;
  sub_10001FDF0((uint64_t)v11, v34, &qword_10070AB30);
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_1000AB344();
  uint64_t v31 = v30;
  uint64_t result = sub_100007A48(v28, &qword_10070AB30);
  *(void *)a4 = v23;
  *(void *)(a4 + 8) = v25;
  *(void *)(a4 + 16) = v29;
  *(void *)(a4 + 24) = v31;
  *(void *)(a4 + 32) = 0;
  *(void *)(a4 + 40) = 0;
  *(unsigned char *)(a4 + 48) = 0;
  return result;
}

uint64_t sub_10007EA70(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E0ED0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  sub_10007EE74(a1, (uint64_t)v4, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v9 = sub_1005E0EB0();
  os_log_type_t v10 = sub_1005E25A0();
  int v11 = v10;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v12 = swift_slowAlloc();
    int v23 = v11;
    uint64_t v13 = v12;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = v22;
    *(_DWORD *)uint64_t v13 = 68159235;
    LODWORD(v25) = 2;
    sub_1005E2960();
    *(_WORD *)(v13 + 8) = 256;
    uint64_t v14 = *(int *)(v2 + 20);
    uint64_t v24 = v5;
    uint64_t v15 = &v4[v14];
    LOBYTE(v25) = v4[v14];
    sub_1005E2960();
    *(_WORD *)(v13 + 11) = 2082;
    uint64_t v17 = *((void *)v15 + 1);
    unint64_t v16 = *((void *)v15 + 2);
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1000C6914(v17, v16, &v27);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 21) = 1040;
    LODWORD(v25) = 2;
    sub_1005E2960();
    *(_WORD *)(v13 + 27) = 512;
    LOWORD(v25) = *((_WORD *)v15 + 12);
    sub_1005E2960();
    *(_WORD *)(v13 + 31) = 2160;
    uint64_t v25 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v13 + 41) = 2085;
    int v18 = *((_DWORD *)v15 + 10);
    uint64_t v25 = *((void *)v15 + 4);
    int v26 = v18;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1005E1CC0();
    uint64_t v25 = sub_1000C6914(v19, v20, &v27);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10007EEDC((uint64_t)v4, type metadata accessor for MailboxTaskLogger);
    _os_log_impl((void *)&_mh_execute_header, v9, (os_log_type_t)v23, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Attempting to store HIGHESTMODSEQ, but PendingServerResponses does not support CONDSTORE.", (uint8_t *)v13, 0x33u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v24);
  }
  else
  {
    sub_10007EEDC((uint64_t)v4, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_10007EE74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007EEDC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s14BasicResponsesV13CapturedValueVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s14BasicResponsesV13CapturedValueVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s14BasicResponsesV13CapturedValueVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s14BasicResponsesV13CapturedValueVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for State.InProgressSync(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for State.InProgressSync(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *_s14BasicResponsesV13CapturedValueVMa()
{
  return &_s14BasicResponsesV13CapturedValueVN;
}

unint64_t sub_10007F130()
{
  unint64_t result = qword_10070B368;
  if (!qword_10070B368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B368);
  }
  return result;
}

unsigned char *_s14BasicResponsesV13CapturedValueV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007F250);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14BasicResponsesV13CapturedValueV10CodingKeysOMa()
{
  return &_s14BasicResponsesV13CapturedValueV10CodingKeysON;
}

unint64_t sub_10007F28C()
{
  unint64_t result = qword_10070B370;
  if (!qword_10070B370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B370);
  }
  return result;
}

unint64_t sub_10007F2E4()
{
  unint64_t result = qword_10070B378;
  if (!qword_10070B378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B378);
  }
  return result;
}

unint64_t sub_10007F33C()
{
  unint64_t result = qword_10070B380;
  if (!qword_10070B380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B380);
  }
  return result;
}

uint64_t sub_10007F390(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x577365676E616863 && a2 == 0xEE00444955687469;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001005E4D10)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10007F4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a2 + 24);
  uint64_t result = static ConnectionCommandIDSet.__derived_struct_equals(_:_:)(*(_DWORD *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(_DWORD *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16));
  if ((result & 1) == 0) {
    return 0;
  }
  if (((v3 | v2) & 0x8000000000000000) == 0) {
    return v3 == v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007F504@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  unint64_t v63 = a1;
  uint64_t v3 = sub_10000566C(&qword_10070AB30);
  uint64_t v4 = __chkstk_darwin(v3);
  char v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v59 - v7;
  uint64_t v9 = sub_10000566C(&qword_100709E38);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v59 - v13;
  uint64_t v64 = v2;
  long long v82 = *(_OWORD *)(v2 + 1);
  sub_10001FDF0((uint64_t)&v82, (uint64_t)v84, &qword_10070B390);
  uint64_t v15 = *((void *)&v82 + 1);
  uint64_t v83 = *((void *)&v82 + 1);
  sub_1000811BC((uint64_t)v84);
  sub_1000811BC((uint64_t)&v83);
  sub_10001FC6C();
  sub_1005E3680();
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v17 = (int *)(v15 + 32);
    sub_1000811BC((uint64_t)v84);
    sub_1000811BC((uint64_t)&v83);
    do
    {
      int v18 = *v17++;
      LODWORD(v81) = v18;
      MessageIdentifierSet.insert(_:)();
      --v16;
    }
    while (v16);
    sub_1000811E8((uint64_t)v84);
    sub_1000811E8((uint64_t)&v83);
  }
  sub_10001FDF0((uint64_t)v12, (uint64_t)v14, &qword_100709E38);
  sub_1000811E8((uint64_t)v84);
  sub_1000811E8((uint64_t)&v83);
  uint64_t v62 = sub_1000AADEC();
  uint64_t v61 = v19;
  sub_100007A48((uint64_t)v14, &qword_100709E38);
  uint64_t v81 = v64[4];
  uint64_t v20 = v81;
  swift_bridgeObjectRetain();
  sub_1005E3680();
  uint64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    uint64_t v22 = (int *)(v20 + 32);
    swift_bridgeObjectRetain();
    do
    {
      int v23 = *v22;
      v22 += 8;
      LODWORD(v80) = v23;
      MessageIdentifierSet.insert(_:)();
      --v21;
    }
    while (v21);
    sub_10001D550((uint64_t)&v81);
  }
  sub_10001FDF0((uint64_t)v6, (uint64_t)v8, &qword_10070AB30);
  sub_10001D550((uint64_t)&v81);
  uint64_t v24 = sub_1000AB344();
  uint64_t v60 = v25;
  uint64_t result = sub_100007A48((uint64_t)v8, &qword_10070AB30);
  uint64_t v27 = *v64;
  uint64_t v80 = v27;
  int64_t v28 = *(void *)(v27 + 16);
  if (v28)
  {
    uint64_t v59 = v24;
    uint64_t v79 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10001A7F4(0, v28, 0);
    uint64_t v29 = 0;
    uint64_t v30 = v79;
    int64_t v65 = v28;
    uint64_t v66 = v27 + 32;
    while (1)
    {
      uint64_t v31 = v66 + 32 * v29;
      uint64_t v32 = *(void *)(v31 + 8);
      uint64_t v33 = *(void *)(v31 + 24);
      int64_t v34 = *(void *)(v32 + 16);
      if (v34) {
        break;
      }
      uint64_t v36 = _swiftEmptyArrayStorage;
LABEL_22:
      uint64_t v79 = v30;
      unint64_t v52 = v30[2];
      unint64_t v51 = v30[3];
      if (v52 >= v51 >> 1)
      {
        uint64_t v54 = v33;
        sub_10001A7F4(v51 > 1, v52 + 1, 1);
        uint64_t v33 = v54;
        uint64_t v30 = v79;
      }
      ++v29;
      v30[2] = v52 + 1;
      v53 = &v30[2 * v52];
      v53[4] = v36;
      v53[5] = v33;
      if (v29 == v28)
      {
        uint64_t result = sub_10001D550((uint64_t)&v80);
        uint64_t v24 = v59;
        goto LABEL_27;
      }
    }
    uint64_t v68 = *(void *)(v31 + 24);
    uint64_t v69 = v29;
    int v70 = v30;
    v71.rawValue = *(_DWORD *)v31;
    uint64_t v35 = *(void *)(v31 + 16);
    unint64_t v78 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain_n();
    uint64_t v67 = v35;
    swift_bridgeObjectRetain_n();
    sub_10001A574(0, v34, 0);
    uint64_t v36 = v78;
    uint64_t result = sub_1000D38CC(v32);
    uint64_t v37 = result;
    uint64_t v39 = v38;
    uint64_t v72 = v32 + 56;
    int v41 = v40 & 1;
    while ((v37 & 0x8000000000000000) == 0 && v37 < 1 << *(unsigned char *)(v32 + 32))
    {
      if (((*(void *)(v72 + (((unint64_t)v37 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v37) & 1) == 0) {
        goto LABEL_31;
      }
      if (*(_DWORD *)(v32 + 36) != v39) {
        goto LABEL_32;
      }
      int v73 = v41;
      IMAP2Connection::CommandID v42 = CommandID.init(connection:commandCounter:)(v71, *(IMAP2Connection::CommandCounter *)(*(void *)(v32 + 48) + 4 * v37));
      uint64_t v76 = 0;
      unint64_t v77 = 0xE000000000000000;
      unint64_t v43 = CommandID.tag.getter(*(void *)&v42);
      char v74 = v43;
      int v75 = HIDWORD(v43);
      sub_1005E2E90();
      uint64_t v45 = v76;
      unint64_t v44 = v77;
      unint64_t v78 = v36;
      unint64_t v47 = v36[2];
      unint64_t v46 = v36[3];
      if (v47 >= v46 >> 1)
      {
        sub_10001A574(v46 > 1, v47 + 1, 1);
        uint64_t v36 = v78;
      }
      v36[2] = v47 + 1;
      uint64_t v48 = &v36[2 * v47];
      v48[4] = v45;
      v48[5] = v44;
      uint64_t result = sub_1000D3970(v37, v39, v73 & 1, v32);
      uint64_t v37 = result;
      uint64_t v39 = v49;
      int v41 = v50 & 1;
      if (!--v34)
      {
        sub_100060FF0(result, v49, v41);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        int64_t v28 = v65;
        uint64_t v29 = v69;
        uint64_t v30 = v70;
        uint64_t v33 = v68;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  else
  {
    uint64_t v30 = _swiftEmptyArrayStorage;
LABEL_27:
    uint64_t v55 = v64[5];
    char v56 = *((unsigned char *)v64 + 48);
    if (v56) {
      uint64_t v55 = 0;
    }
    uint64_t v57 = v63;
    uint64_t v58 = v62;
    *unint64_t v63 = v30;
    v57[1] = v58;
    v57[2] = v61;
    v57[3] = v24;
    v57[4] = v60;
    v57[5] = v55;
    *((unsigned char *)v57 + 48) = v56 | 0x80;
  }
  return result;
}

uint64_t sub_10007FAB4(uint64_t a1, uint64_t a2)
{
  return sub_100080E78(*(void *)a1, *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48), *(void *)a2, *(void *)(a2 + 16), *(void *)(a2 + 24), *(void *)(a2 + 32), *(void *)(a2 + 40), *(unsigned char *)(a2 + 48)) & 1;
}

uint64_t sub_10007FB14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v83 = a2;
  uint64_t v5 = (unsigned char *)_s12LocalMailboxV6LoggerVMa();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v81 = &v77[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = &v77[-v9];
  uint64_t v11 = __chkstk_darwin(v8);
  long long v82 = &v77[-v12];
  __chkstk_darwin(v11);
  uint64_t v14 = &v77[-v13];
  uint64_t v15 = sub_1005E0ED0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = &v77[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  uint64_t v21 = &v77[-v20];
  sub_10001FDF0(a1 + 32, (uint64_t)v89, &qword_10070A8B8);
  sub_10001FDF0((uint64_t)v89, (uint64_t)&v90, &qword_10070A8B8);
  if ((v91 & 1) == 0)
  {
    uint64_t v80 = v15;
    uint64_t v81 = v5;
    uint64_t v38 = v90;
    uint64_t v39 = *(void *)a1;
    uint64_t v40 = *(unsigned __int8 *)(a1 + 8);
    uint64_t v41 = *(void *)(a1 + 16);
    swift_bridgeObjectRetain();
    sub_10009DF4C(v39, v40, v41, v38);
    sub_10001FDF0(a1 + 40, (uint64_t)&v87, &qword_10070A6F8);
    sub_10001FDF0((uint64_t)&v87, (uint64_t)&v92, &qword_10070A6F8);
    if (v93)
    {
      uint64_t v42 = v16;
      unint64_t v43 = v21;
      uint64_t v44 = v83;
      uint64_t v45 = v80;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v16 + 16))(v21, v83, v80);
      sub_100081308(v44, (uint64_t)v14);
      unint64_t v46 = v82;
      sub_100081308(v44, (uint64_t)v82);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      unint64_t v47 = sub_1005E0EB0();
      os_log_type_t v48 = sub_1005E25B0();
      int v49 = v48;
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v50 = swift_slowAlloc();
        uint64_t v83 = (uint64_t)v43;
        uint64_t v51 = v50;
        uint64_t v79 = swift_slowAlloc();
        uint64_t v84 = v79;
        *(_DWORD *)uint64_t v51 = 68158979;
        LODWORD(v85) = 2;
        sub_1005E2960();
        *(_WORD *)(v51 + 8) = 256;
        int v78 = v49;
        uint64_t v52 = (uint64_t)v46;
        v53 = v81;
        char v54 = v14[*((int *)v81 + 5)];
        sub_10008136C((uint64_t)v14);
        LOBYTE(v85) = v54;
        sub_1005E2960();
        *(_WORD *)(v51 + 11) = 1040;
        LODWORD(v85) = 2;
        sub_1005E2960();
        *(_WORD *)(v51 + 17) = 512;
        uint64_t v55 = v52 + *((int *)v53 + 5);
        LOWORD(v85) = *(_WORD *)(v55 + 2);
        sub_1005E2960();
        *(_WORD *)(v51 + 21) = 2160;
        uint64_t v85 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v51 + 31) = 2085;
        int v56 = *(_DWORD *)(v55 + 16);
        uint64_t v85 = *(void *)(v55 + 8);
        int v86 = v56;
        swift_bridgeObjectRetain();
        uint64_t v57 = sub_1005E1CC0();
        uint64_t v85 = sub_1000C6914(v57, v58, &v84);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_10008136C(v52);
        _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v78, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Mailbox supports CONDSTORE, but flag change has no MODSEQ.", (uint8_t *)v51, 0x29u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v83, v80);
      }
      else
      {
        sub_10008136C((uint64_t)v14);
        sub_10008136C((uint64_t)v46);

        return (*(uint64_t (**)(unsigned char *, uint64_t))(v42 + 8))(v43, v45);
      }
    }
    uint64_t v67 = v92;
    int v68 = *(_DWORD *)(a1 + 56);
    Swift::Int v69 = *(void *)(a1 + 64);
    Swift::Int v70 = *(void *)(a1 + 72);
    IMAP2Protocol::ConnectionID v71 = (void *)*v3;
    uint64_t v72 = *(void *)(*v3 + 16);
    if (!v72
      || (static ConnectionCommandIDSet.__derived_struct_equals(_:_:)(v68, v69, v70, v71[4 * v72], v71[4 * v72 + 1], v71[4 * v72 + 2]) & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100016290(0, v71[2] + 1, 1, v71);
        IMAP2Protocol::ConnectionID v71 = (void *)result;
      }
      unint64_t v76 = v71[2];
      unint64_t v75 = v71[3];
      if (v76 >= v75 >> 1)
      {
        uint64_t result = (uint64_t)sub_100016290((void *)(v75 > 1), v76 + 1, 1, v71);
        IMAP2Protocol::ConnectionID v71 = (void *)result;
      }
      v71[2] = v76 + 1;
      char v74 = &v71[4 * v76];
      *((_DWORD *)v74 + 8) = v68;
      v74[5] = v69;
      v74[6] = v70;
      goto LABEL_26;
    }
    unint64_t v73 = v71[2];
    if (v73)
    {
      Swift::Int v69 = v73 - 1;
      if ((unint64_t)v67 <= v71[4 * v73 + 3]) {
        uint64_t v67 = (unsigned char *)v71[4 * v73 + 3];
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result) {
        goto LABEL_19;
      }
    }
    else
    {
      __break(1u);
    }
    uint64_t result = (uint64_t)sub_100093404(v71);
    IMAP2Protocol::ConnectionID v71 = (void *)result;
LABEL_19:
    if (v73 > v71[2])
    {
      __break(1u);
      return result;
    }
    char v74 = &v71[4 * v69];
LABEL_26:
    v74[7] = v67;
    *uint64_t v3 = v71;
    return result;
  }
  sub_10001FDF0(a1 + 24, (uint64_t)&v84, &qword_10070B398);
  sub_10001FDF0((uint64_t)&v84, (uint64_t)&v87, &qword_10070B398);
  if (v88)
  {
    uint64_t v22 = v19;
    uint64_t v23 = v83;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v16 + 16))(v19, v83, v15);
    sub_100081308(v23, (uint64_t)v10);
    uint64_t v24 = v23;
    uint64_t v25 = v81;
    sub_100081308(v24, (uint64_t)v81);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v26 = v15;
    uint64_t v27 = sub_1005E0EB0();
    os_log_type_t v28 = sub_1005E25A0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v83 = v16;
      uint64_t v30 = v29;
      long long v82 = (unsigned char *)swift_slowAlloc();
      uint64_t v92 = v82;
      *(_DWORD *)uint64_t v30 = 68158979;
      LODWORD(v85) = 2;
      uint64_t v79 = (uint64_t)v22;
      uint64_t v80 = v26;
      sub_1005E2960();
      *(_WORD *)(v30 + 8) = 256;
      os_log_type_t v31 = v28;
      char v32 = v10[*((int *)v5 + 5)];
      sub_10008136C((uint64_t)v10);
      LOBYTE(v85) = v32;
      sub_1005E2960();
      *(_WORD *)(v30 + 11) = 1040;
      LODWORD(v85) = 2;
      sub_1005E2960();
      *(_WORD *)(v30 + 17) = 512;
      uint64_t v33 = &v25[*((int *)v5 + 5)];
      LOWORD(v85) = *((_WORD *)v33 + 1);
      sub_1005E2960();
      *(_WORD *)(v30 + 21) = 2160;
      uint64_t v85 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v30 + 31) = 2085;
      int v34 = *((_DWORD *)v33 + 4);
      uint64_t v85 = *((void *)v33 + 1);
      int v86 = v34;
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_1005E1CC0();
      uint64_t v85 = sub_1000C6914(v35, v36, (uint64_t *)&v92);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10008136C((uint64_t)v25);
      _os_log_impl((void *)&_mh_execute_header, v27, v31, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Flag change has no UID and no sequence number.", (uint8_t *)v30, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 8))(v79, v80);
    }
    else
    {
      sub_10008136C((uint64_t)v10);
      sub_10008136C((uint64_t)v25);

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v16 + 8))(v22, v26);
    }
  }
  else
  {
    int v59 = v87;
    uint64_t v60 = *(void *)a1;
    char v61 = *(unsigned char *)(a1 + 8);
    uint64_t v62 = *(void *)(a1 + 16);
    unint64_t v63 = (void *)v3[4];
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100016180(0, v63[2] + 1, 1, v63);
      unint64_t v63 = (void *)result;
    }
    unint64_t v65 = v63[2];
    unint64_t v64 = v63[3];
    if (v65 >= v64 >> 1)
    {
      uint64_t result = (uint64_t)sub_100016180((void *)(v64 > 1), v65 + 1, 1, v63);
      unint64_t v63 = (void *)result;
    }
    v63[2] = v65 + 1;
    uint64_t v66 = &v63[4 * v65];
    *((_DWORD *)v66 + 8) = v59;
    v66[5] = v60;
    *((unsigned char *)v66 + 48) = v61;
    v66[7] = v62;
    v3[4] = v63;
  }
  return result;
}

uint64_t WatchOSHeaderInfo.bcc.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100080488(uint64_t a1)
{
  return sub_10007B110(a1);
}

uint64_t sub_1000804AC()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  return v1;
}

uint64_t sub_1000804FC()
{
  uint64_t v1 = sub_1000A7178((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  v0[1] = v1;
  v0[2] = v3;
  v0[3] = v5;
  return result;
}

uint64_t sub_10008055C(int a1, Swift::Int a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_100081214(v9, a1, a2, a3);
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v17 = v15 >> 1;
  int64_t v18 = v17 - v13;
  if (__OFSUB__(v17, v13)) {
    goto LABEL_25;
  }
  if (v18)
  {
    uint64_t result = sub_10001A5F4(0, v18 & ~(v18 >> 63), 0);
    if (v18 < 0)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    if (v13 <= v17) {
      uint64_t v19 = v17;
    }
    else {
      uint64_t v19 = v13;
    }
    uint64_t v20 = v19 - v13;
    uint64_t v21 = (uint64_t *)(v11 + 32 * v13 + 24);
    int64_t v22 = v18;
    while (v20)
    {
      uint64_t v23 = *v21;
      unint64_t v25 = _swiftEmptyArrayStorage[2];
      unint64_t v24 = _swiftEmptyArrayStorage[3];
      if (v25 >= v24 >> 1) {
        uint64_t result = sub_10001A5F4(v24 > 1, v25 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v25 + 1;
      _swiftEmptyArrayStorage[v25 + 4] = v23;
      --v20;
      v21 += 4;
      if (!--v22) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
LABEL_12:
  unint64_t v26 = sub_100037988((uint64_t)_swiftEmptyArrayStorage);
  char v28 = v27;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v28 & 1) == 0)
  {
    if ((v4[6] & 1) == 0 && v26 <= v4[5]) {
      unint64_t v26 = v4[5];
    }
    v4[5] = v26;
    *((unsigned char *)v4 + 48) = 0;
  }
  if (v18)
  {
    if (v18 < 0)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    if (*(void *)(v8 + 16) < (unint64_t)v18)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    sub_1000D5AB8(0, v18);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_10008073C(uint64_t result)
{
  uint64_t v2 = result;
  uint64_t v3 = *(void **)v1;
  if (*(void *)(*(void *)v1 + 16))
  {
    int v4 = static ConnectionCommandIDSet.empty.getter();
    uint64_t v6 = v5;
    uint64_t v8 = v7;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100016290(0, v3[2] + 1, 1, v3);
      uint64_t v3 = (void *)result;
    }
    unint64_t v10 = v3[2];
    unint64_t v9 = v3[3];
    if (v10 >= v9 >> 1)
    {
      uint64_t result = (uint64_t)sub_100016290((void *)(v9 > 1), v10 + 1, 1, v3);
      uint64_t v3 = (void *)result;
    }
    v3[2] = v10 + 1;
    uint64_t v11 = &v3[4 * v10];
    *((_DWORD *)v11 + 8) = v4;
    v11[5] = v6;
    v11[6] = v8;
    v11[7] = v2;
    *(void *)uint64_t v1 = v3;
  }
  else
  {
    *(void *)(v1 + 40) = result;
    *(unsigned char *)(v1 + 48) = 0;
  }
  return result;
}

uint64_t sub_100080810()
{
  if ((*(void *)(*(void *)(v0 + 32) + 16) != 0) | *(unsigned char *)(v0 + 48) & 1) {
    return 0;
  }
  else {
    return *(void *)(v0 + 40);
  }
}

void sub_100080834()
{
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 48) = 1;
}

uint64_t sub_100080844@<X0>(uint64_t a1@<X8>)
{
  sub_10007F504(v3);
  return sub_10007C1E8(v3, a1);
}

uint64_t sub_100080880(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_10000566C(&qword_10070B3C8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003BCDC(a1, a1[3]);
  sub_1000819DC();
  sub_1005E3500();
  uint64_t v11 = a2;
  v10[15] = 0;
  sub_10000566C(&qword_100709F58);
  sub_100081A30();
  sub_1005E31C0();
  if (!v2)
  {
    v10[14] = 1;
    sub_1005E31F0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100080A0C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000566C(&qword_10070B3A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003BCDC(a1, a1[3]);
  sub_1000818C0();
  sub_1005E3500();
  uint64_t v11 = *v3;
  v10[7] = 0;
  sub_10000566C(&qword_10070B3B0);
  sub_100081914();
  sub_1005E31C0();
  if (!v2)
  {
    v10[6] = 1;
    sub_1005E3130();
    v10[5] = 2;
    sub_1005E3130();
    v10[4] = 3;
    sub_1005E3180();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100080BE4()
{
  if (*v0) {
    return 0x65636E6575716573;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_100080C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100081F4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100080C58(uint64_t a1)
{
  unint64_t v2 = sub_1000819DC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100080C94(uint64_t a1)
{
  unint64_t v2 = sub_1000819DC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100080CD0(void *a1)
{
  return sub_100080880(a1, *v1);
}

BOOL sub_100080CEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_100080D00()
{
  unint64_t result = 0x65636E6575716573;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x577365676E616863;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100080DB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100082060(a1, a2);
  *a3 = result;
  return result;
}

void sub_100080DDC(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_100080DE8(uint64_t a1)
{
  unint64_t v2 = sub_1000818C0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100080E24(uint64_t a1)
{
  unint64_t v2 = sub_1000818C0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100080E60(void *a1)
{
  return sub_100080A0C(a1);
}

uint64_t sub_100080E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  if ((sub_100079A08(a1, a7) & 1) == 0) {
    return 0;
  }
  if ((sub_10007E37C(a8, a2) & 1) == 0) {
    return 0;
  }
  if ((sub_10007DEAC(a3, a9) & 1) == 0) {
    return 0;
  }
  uint64_t result = sub_100079830(a4, a10);
  if ((result & 1) == 0) {
    return 0;
  }
  if (a6) {
    return (a12 & 1) != 0;
  }
  if (a12) {
    return 0;
  }
  if (((a11 | a5) & 0x8000000000000000) == 0) {
    return a11 == a5;
  }
  __break(1u);
  return result;
}

uint64_t _s18CondStoreResponsesVwxx()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t _s18CondStoreResponsesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s18CondStoreResponsesVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  return a1;
}

uint64_t _s18CondStoreResponsesVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

ValueMetadata *_s18CondStoreResponsesVMa()
{
  return &_s18CondStoreResponsesVN;
}

unint64_t sub_100081140(uint64_t a1)
{
  unint64_t result = sub_100081168();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100081168()
{
  unint64_t result = qword_10070B388;
  if (!qword_10070B388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B388);
  }
  return result;
}

uint64_t sub_1000811BC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000811E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100081214(uint64_t result, int a2, Swift::Int a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    unint64_t v8 = 0;
    uint64_t v13 = result;
    uint64_t v9 = result + 48;
    while (1)
    {
      int v10 = *(_DWORD *)(v9 - 16);
      Swift::Int v11 = *(void *)(v9 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v12 = ConnectionCommandIDSet.isDisjoint(with:)(a2, a3, a4, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0) {
        break;
      }
      v9 += 32;
      if (v4 == ++v8)
      {
        unint64_t v8 = v4;
        break;
      }
    }
    unint64_t result = v13;
    if (*(void *)(v13 + 16) < v8) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100081308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12LocalMailboxV6LoggerVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008136C(uint64_t a1)
{
  uint64_t v2 = _s12LocalMailboxV6LoggerVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeBufferWithCopyOfBuffer for OpaqueMailboxID(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for OpaqueMailboxID(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for OpaqueMailboxID(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *_s18CondStoreResponsesV13CapturedValueV14SequenceUpdateVMa()
{
  return &_s18CondStoreResponsesV13CapturedValueV14SequenceUpdateVN;
}

uint64_t destroy for ConnectionCommandIDSet()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s18CondStoreResponsesV14SequenceUpdateVwcp(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s18CondStoreResponsesV14SequenceUpdateVwca(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t _s18CondStoreResponsesV14SequenceUpdateVwta(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t _s18CondStoreResponsesV14SequenceUpdateVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchModificationSequence(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s18CondStoreResponsesV14SequenceUpdateVMa()
{
  return &_s18CondStoreResponsesV14SequenceUpdateVN;
}

uint64_t _s18CondStoreResponsesV13CapturedValueVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s18CondStoreResponsesV13CapturedValueVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s18CondStoreResponsesV13CapturedValueVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  return a1;
}

uint64_t _s18CondStoreResponsesV13CapturedValueVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t _s5BatchVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s5BatchVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s18CondStoreResponsesV13CapturedValueVMa()
{
  return &_s18CondStoreResponsesV13CapturedValueVN;
}

unint64_t sub_1000818C0()
{
  unint64_t result = qword_10070B3A8;
  if (!qword_10070B3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B3A8);
  }
  return result;
}

unint64_t sub_100081914()
{
  unint64_t result = qword_10070B3B8;
  if (!qword_10070B3B8)
  {
    sub_10000744C(&qword_10070B3B0);
    sub_100081988();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B3B8);
  }
  return result;
}

unint64_t sub_100081988()
{
  unint64_t result = qword_10070B3C0;
  if (!qword_10070B3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B3C0);
  }
  return result;
}

unint64_t sub_1000819DC()
{
  unint64_t result = qword_10070B3D0;
  if (!qword_10070B3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B3D0);
  }
  return result;
}

unint64_t sub_100081A30()
{
  unint64_t result = qword_10070B3D8;
  if (!qword_10070B3D8)
  {
    sub_10000744C(&qword_100709F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B3D8);
  }
  return result;
}

unsigned char *_s18CondStoreResponsesV13CapturedValueV14SequenceUpdateV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100081B68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s18CondStoreResponsesV13CapturedValueV14SequenceUpdateV10CodingKeysOMa()
{
  return &_s18CondStoreResponsesV13CapturedValueV14SequenceUpdateV10CodingKeysON;
}

uint64_t getEnumTagSinglePayload for SyncRequest.Kind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s18CondStoreResponsesV13CapturedValueV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100081CFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *sub_100081D24(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *_s18CondStoreResponsesV13CapturedValueV10CodingKeysOMa()
{
  return &_s18CondStoreResponsesV13CapturedValueV10CodingKeysON;
}

unint64_t sub_100081D40()
{
  unint64_t result = qword_10070B3E0;
  if (!qword_10070B3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B3E0);
  }
  return result;
}

unint64_t sub_100081D98()
{
  unint64_t result = qword_10070B3E8;
  if (!qword_10070B3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B3E8);
  }
  return result;
}

unint64_t sub_100081DF0()
{
  unint64_t result = qword_10070B3F0;
  if (!qword_10070B3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B3F0);
  }
  return result;
}

unint64_t sub_100081E48()
{
  unint64_t result = qword_10070B3F8;
  if (!qword_10070B3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B3F8);
  }
  return result;
}

unint64_t sub_100081EA0()
{
  unint64_t result = qword_10070B400;
  if (!qword_10070B400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B400);
  }
  return result;
}

unint64_t sub_100081EF8()
{
  unint64_t result = qword_10070B408;
  if (!qword_10070B408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B408);
  }
  return result;
}

uint64_t sub_100081F4C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001005E4D50 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65636E6575716573 && a2 == 0xED000065756C6156)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100082060(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65636E6575716573 && a2 == 0xEF73657461647055;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x577365676E616863 && a2 == 0xEE00444955687469 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001005E4D10 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001005E4D30)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t _s6RemoteVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 72);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s6RemoteVwcp(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  uint64_t v7 = a2 + 72;
  uint64_t v6 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 80);
    uint64_t v9 = *(void *)(a2 + 88);
    *(void *)(a1 + 72) = v6;
    *(void *)(a1 + 80) = v8;
    *(void *)(a1 + 88) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v7;
    *(void *)(a1 + 88) = *(void *)(v7 + 16);
  }
  return a1;
}

uint64_t _s6RemoteVwca(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  long long v5 = a2[1];
  *(_OWORD *)(a1 + 26) = *(long long *)((char *)a2 + 26);
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *((void *)a2 + 7);
  uint64_t v7 = (_OWORD *)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 72);
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 65) = *((unsigned char *)a2 + 65);
  int v10 = (long long *)((char *)a2 + 72);
  uint64_t v9 = *((void *)a2 + 9);
  if (v8)
  {
    if (v9)
    {
      *(void *)(a1 + 72) = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 80) = *((void *)a2 + 10);
      *(void *)(a1 + 88) = *((void *)a2 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10008245C(a1 + 72);
      uint64_t v11 = *((void *)a2 + 11);
      *uint64_t v7 = *v10;
      *(void *)(a1 + 88) = v11;
    }
  }
  else if (v9)
  {
    *(void *)(a1 + 72) = v9;
    *(void *)(a1 + 80) = *((void *)a2 + 10);
    *(void *)(a1 + 88) = *((void *)a2 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *v10;
    *(void *)(a1 + 88) = *((void *)a2 + 11);
    *uint64_t v7 = v12;
  }
  return a1;
}

uint64_t sub_10008245C(uint64_t a1)
{
  return a1;
}

__n128 _s6RemoteVwtk(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t _s6RemoteVwta(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 72);
  uint64_t v6 = *(void *)(a1 + 72);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  if (!v6) {
    goto LABEL_5;
  }
  if (!v5)
  {
    sub_10008245C(a1 + 72);
LABEL_5:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    return a1;
  }
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6RemoteVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 96)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 48);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s6RemoteVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 96) = 0;
    }
    if (a2) {
      *(void *)(result + 48) = a2;
    }
  }
  return result;
}

ValueMetadata *_s6RemoteVMa()
{
  return &_s6RemoteVN;
}

__n128 _s6RemoteV6ServerVwcp(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s6RemoteV6ServerVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[42]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s6RemoteV6ServerVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 42) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *_s6RemoteV6ServerVMa()
{
  return &_s6RemoteV6ServerVN;
}

uint64_t sub_100082710(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[3];
  v9[2] = a1[2];
  v9[3] = v2;
  long long v3 = a1[5];
  v9[4] = a1[4];
  v9[5] = v3;
  long long v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  long long v5 = a2[3];
  v10[2] = a2[2];
  v10[3] = v5;
  long long v6 = a2[5];
  v10[4] = a2[4];
  v10[5] = v6;
  long long v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_100085008((uint64_t)v9, (uint64_t)v10) & 1;
}

BOOL sub_100082774(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

uint64_t sub_10008279C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return (*a1 == *a2) & (a2[1] ^ a1[1] ^ 1u);
}

BOOL sub_1000827C4(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1000827D8(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(unsigned __int8 *)(a2 + 8);
  unsigned int v3 = (*(void *)a1 == *(void *)a2) & ~v2;
  if (*(void *)a2) {
    unsigned int v4 = 0;
  }
  else {
    unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  }
  if (!*(void *)a2) {
    unsigned int v2 = 0;
  }
  if (*(void *)a1) {
    unsigned int v5 = v2;
  }
  else {
    unsigned int v5 = v4;
  }
  if (*(unsigned char *)(a1 + 8) == 1) {
    return v5;
  }
  else {
    return v3;
  }
}

uint64_t sub_100082814(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 10) = *(long long *)((char *)a1 + 26);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 10) = *(long long *)((char *)a2 + 26);
  return sub_100084E54((unsigned __int8 *)&v5, (unsigned __int8 *)&v7) & 1;
}

uint64_t sub_100082860(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UntaggedResponse(0);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v7);
  long long v12 = (char *)&v95 - v11;
  if (a1 >> 62)
  {
    if (a1 >> 62 == 1 && (*(unsigned char *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18) & 1) != 0)
    {
      unint64_t v13 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      if (((v13 >> 59) & 0x1E | (v13 >> 2) & 1) == 2)
      {
        uint64_t v14 = v13 & 0xFFFFFFFFFFFFFFBLL;
        LODWORD(v111) = *(unsigned __int8 *)(v14 + 40);
        uint64_t v15 = *(void *)(v3 + 56);
        char v16 = *(unsigned char *)(v3 + 64);
        uint64_t v17 = *(void *)(v3 + 72);
        uint64_t v18 = v3;
        unsigned __int8 v19 = *(unsigned char *)(v14 + 24);
        swift_bridgeObjectRetain();
        sub_100064054(v17);
        __uint64_t v20 = static MonotonicTime.now()();
        unsigned __int8 v21 = v19;
        uint64_t v22 = v18;
        LOBYTE(v18) = sub_10008650C(v15, v16, v20, v21, v111);
        swift_bridgeObjectRelease();
        uint64_t result = sub_1000852BC(v17);
        if (v18) {
          *(unsigned char *)(v22 + 65) = 1;
        }
      }
    }
  }
  else
  {
    unint64_t v23 = *(void *)(a1 + 24);
    switch(v23 >> 60)
    {
      case 1uLL:
      case 2uLL:
      case 4uLL:
      case 6uLL:
      case 7uLL:
      case 8uLL:
        return result;
      case 3uLL:
        uint64_t v46 = swift_projectBox();
        uint64_t result = swift_getEnumCaseMultiPayload();
        if (result == 7)
        {
          sub_100086AE0(v46, (uint64_t)v12);
          uint64_t v90 = *(void *)v12;
          uint64_t v91 = *((void *)v12 + 1);
          uint64_t v92 = *((unsigned int *)v12 + 4);
          uint64_t v93 = v12[20];
          uint64_t v94 = *((void *)v12 + 3);
          uint64_t v110 = *((void *)v12 + 4);
          *(void *)&long long v111 = v94;
          sub_100086880(v23);
          sub_100086880(v23);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          RemoteMailbox.init(attributes:path:)(v90, v91, v92 | (v93 << 32), (uint64_t)&v119);
          sub_10008318C((uint64_t)&v119);
          sub_100086A88(v23);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10001D550((uint64_t)&v119);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_44;
        }
        if (result == 9)
        {
          sub_100086AE0(v46, (uint64_t)v9);
          uint64_t v47 = *(void *)v9;
          unsigned int v48 = *((_DWORD *)v9 + 2);
          long long v49 = *((_OWORD *)v9 + 6);
          long long v123 = *((_OWORD *)v9 + 5);
          v124[0] = v49;
          *(_OWORD *)((char *)v124 + 9) = *(_OWORD *)(v9 + 105);
          long long v50 = *((_OWORD *)v9 + 2);
          long long v119 = *((_OWORD *)v9 + 1);
          long long v120 = v50;
          long long v51 = *((_OWORD *)v9 + 4);
          long long v121 = *((_OWORD *)v9 + 3);
          long long v122 = v51;
          RemoteMailbox.Status.init(_:)(&v113, (NIOIMAPCore2::MailboxStatus *)&v119);
          sub_10001FDF0((uint64_t)&v113, (uint64_t)&v114, &qword_10070B410);
          if ((v118 & 0x100) == 0 && *(void *)(v3 + 48))
          {
            long long v111 = v114;
            uint64_t v52 = v115;
            uint64_t v53 = v116;
            uint64_t v54 = v117;
            LODWORD(v110) = v118;
            sub_100086880(v23);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            int v56 = sub_1000832D0(v112, v47, v48);
            if (*(void *)v55)
            {
              *(_OWORD *)(v55 + 24) = v111;
              *(void *)(v55 + 40) = v52;
              *(void *)(v55 + 48) = v53;
              *(void *)(v55 + 56) = v54;
              *(_WORD *)(v55 + 64) = v110;
            }
            v56(v112, 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_20;
          }
          uint64_t result = swift_bridgeObjectRelease();
        }
        break;
      case 5uLL:
        if (*(void *)(v3 + 48))
        {
          uint64_t v57 = *(void *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          unsigned int v58 = *(_DWORD *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          unint64_t v59 = *(void *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
          uint64_t v60 = *(void *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
          uint64_t v61 = *(void *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
          sub_100086880(v23);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1000868D8(v59, v60, v61);
          sub_1000839B8(v57, v58, (uint64_t)&v119);
          sub_1000869B0(v59, v60, v61);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_20:
          swift_bridgeObjectRelease();
LABEL_44:
          uint64_t result = sub_100086A88(v23);
        }
        break;
      default:
        uint64_t v24 = *(void *)(v23 + 16);
        long long v25 = *(_OWORD *)(v23 + 40);
        long long v26 = *(_OWORD *)(v23 + 24);
        long long v27 = *(_OWORD *)(v23 + 56);
        long long v28 = *(_OWORD *)(v23 + 88);
        long long v29 = *(_OWORD *)(v23 + 72);
        long long v30 = *(_OWORD *)(v23 + 104);
        long long v31 = *(_OWORD *)(v23 + 120);
        long long v32 = *(_OWORD *)(v23 + 152);
        long long v33 = *(_OWORD *)(v23 + 136);
        long long v34 = *(_OWORD *)(v23 + 184);
        v124[4] = *(_OWORD *)(v23 + 168);
        v124[5] = v34;
        v124[1] = v31;
        v124[2] = v33;
        v124[3] = v32;
        long long v121 = v27;
        long long v122 = v29;
        long long v123 = v28;
        v124[0] = v30;
        long long v119 = v26;
        long long v120 = v25;
        sub_100086880(v23);
        sub_100086880(v23);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100086B44((uint64_t)&v119);
        sub_100086178(v24, &v119, (uint64_t)&v113);
        uint64_t messageCount_low = LOBYTE(v113.value.messageCount);
        LODWORD(v110) = BYTE1(v113.value.messageCount);
        int v108 = BYTE2(v113.value.messageCount);
        LODWORD(v111) = BYTE3(v113.value.messageCount);
        int v100 = BYTE4(v113.value.messageCount);
        int v101 = BYTE5(v113.value.messageCount);
        uint64_t messageCount_high = HIBYTE(v113.value.messageCount);
        uint64_t rawValue_low = LOBYTE(v113.value.nextUID.rawValue);
        uint64_t v104 = BYTE1(v113.value.nextUID.rawValue);
        Swift::Int value = v113.value.unreadMessagesCount.value;
        BOOL is_nil = v113.value.unreadMessagesCount.is_nil;
        Swift::UInt64 v37 = v113.value.highestModificationSequence.value.value;
        BOOL v106 = v113.value.highestModificationSequence.is_nil;
        BOOL v102 = v113.is_nil;
        int v103 = BYTE6(v113.value.messageCount);
        swift_retain();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v38 = sub_1005E0EB0();
        os_log_type_t v39 = sub_1005E25C0();
        int v97 = v39;
        BOOL v40 = os_log_type_enabled(v38, v39);
        uint64_t v109 = messageCount_low;
        if (v40)
        {
          uint64_t v41 = (_DWORD *)swift_slowAlloc();
          Swift::Int v96 = value;
          uint64_t v42 = v41;
          *uint64_t v41 = 68159744;
          LODWORD(v114) = 2;
          os_log_t v98 = v38;
          Swift::UInt64 v95 = v37;
          sub_1005E2960();
          *((_WORD *)v42 + 4) = 256;
          LOBYTE(v114) = *(unsigned char *)(a2 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
          sub_1005E2960();
          swift_release();
          *(_WORD *)((char *)v42 + 11) = 1024;
          LODWORD(v114) = messageCount_low ^ 1;
          sub_1005E2960();
          *(_WORD *)((char *)v42 + 17) = 1024;
          LODWORD(v114) = v110 ^ 1;
          sub_1005E2960();
          *(_WORD *)((char *)v42 + 23) = 1024;
          int v43 = v108;
          LODWORD(v114) = v108 ^ 1;
          sub_1005E2960();
          *(_WORD *)((char *)v42 + 29) = 1024;
          LODWORD(v114) = v111 ^ 1;
          sub_1005E2960();
          *(_WORD *)((char *)v42 + 35) = 1024;
          LODWORD(v114) = (v113.value.nextUID.rawValue & 1) == 0;
          sub_1005E2960();
          *(_WORD *)((char *)v42 + 41) = 1024;
          uint64_t v44 = messageCount_high;
          LODWORD(v114) = messageCount_high == 1;
          sub_1005E2960();
          *(_WORD *)((char *)v42 + 47) = 1024;
          LODWORD(v114) = v44 == 2;
          Swift::UInt64 v37 = v95;
          sub_1005E2960();
          _os_log_impl((void *)&_mh_execute_header, v98, (os_log_type_t)v97, "[%.*hhx] Server support: move: %{BOOL}d, Gmail labels: %{BOOL}d, cond-store: %{BOOL}d, message-seq-numbers: %{BOOL}d special-use: %{BOOL}d list-status: %{BOOL}d status-mod-seq: %{BOOL}d", (uint8_t *)v42, 0x35u);
          Swift::Int value = v96;
          swift_slowDealloc();
          sub_100086A88(v23);
          uint64_t v45 = v44;
          uint64_t v38 = v98;
        }
        else
        {
          sub_100086A88(v23);
          swift_release();
          uint64_t v45 = messageCount_high;
          int v43 = v108;
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v62 = *(void *)v3;
        if (*(void *)v3 == 2)
        {
          uint64_t result = sub_100086A88(v23);
          int v63 = v111;
          uint64_t v64 = v109;
          int v65 = v110;
        }
        else
        {
          __int16 v66 = *(_WORD *)(v3 + 40);
          uint64_t v67 = *(void *)(v3 + 32);
          int v68 = *(_DWORD *)(v3 + 24);
          uint64_t v70 = *(void *)(v3 + 8);
          uint64_t v69 = *(void *)(v3 + 16);
          LOBYTE(v114) = v62 & 1;
          uint64x2_t v71 = (uint64x2_t)vdupq_n_s64(v62);
          int16x8_t v72 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v71, (uint64x2_t)xmmword_1005F66C0), (int32x4_t)vshlq_u64(v71, (uint64x2_t)xmmword_1005F66B0));
          *(int8x8_t *)v72.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v72), (int8x8_t)0x1000100010001);
          *(_DWORD *)((char *)&v114 + 1) = vmovn_s16(v72).u32[0];
          BYTE5(v114) = BYTE5(v62) & 1;
          BYTE6(v114) = BYTE6(v62) & 1;
          BYTE7(v114) = HIBYTE(v62);
          WORD4(v114) = v70 & 0xFF01;
          uint64_t v115 = v69;
          unsigned __int8 v116 = v68 & 1;
          uint64_t v117 = v67;
          __int16 v118 = v66 & 0x101;
          char v73 = sub_100084E54((unsigned __int8 *)&v114, (unsigned __int8 *)&v113);
          uint64_t result = sub_100086A88(v23);
          int v63 = v111;
          uint64_t v64 = v109;
          int v65 = v110;
          if (v73) {
            return result;
          }
        }
        if (v65) {
          uint64_t v74 = 256;
        }
        else {
          uint64_t v74 = 0;
        }
        uint64_t v75 = v74 | v64;
        uint64_t v76 = 0x10000;
        if (!v43) {
          uint64_t v76 = 0;
        }
        BOOL v77 = v63 == 0;
        uint64_t v78 = 0x1000000;
        if (v77) {
          uint64_t v78 = 0;
        }
        uint64_t v79 = v75 | v76 | v78;
        uint64_t v80 = &_mh_execute_header;
        if (!v100) {
          uint64_t v80 = 0;
        }
        uint64_t v81 = 0x10000000000;
        if (!v101) {
          uint64_t v81 = 0;
        }
        unint64_t v82 = (unint64_t)v80 | v81;
        uint64_t v83 = 0x1000000000000;
        if (!v103) {
          uint64_t v83 = 0;
        }
        uint64_t v84 = v79 | v82 | v83 | (v45 << 56);
        uint64_t v85 = rawValue_low | (v104 << 8);
        BOOL v86 = v102;
        *(void *)uint64_t v3 = v84;
        *(void *)(v3 + 8) = v85;
        if (v86) {
          __int16 v87 = 256;
        }
        else {
          __int16 v87 = 0;
        }
        BOOL v88 = is_nil;
        *(void *)(v3 + 16) = value;
        *(void *)(v3 + 24) = v88;
        __int16 v89 = v87 | v106;
        *(void *)(v3 + 32) = v37;
        *(_WORD *)(v3 + 40) = v89;
        break;
    }
  }
  return result;
}

uint64_t sub_10008318C(uint64_t a1)
{
  if (*(void *)(v1 + 48))
  {
    uint64_t v3 = RemoteMailbox.name.getter();
    unsigned int v5 = v4;
    sub_10002292C(a1);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *(void *)(v1 + 48);
    *(void *)(v1 + 48) = 0x8000000000000000;
    sub_100103478(a1, v3, v5, isUniquelyReferenced_nonNull_native);
    *(void *)(v1 + 48) = v14;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000566C(&qword_10070B418);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005F6670;
    *(void *)(inited + 32) = RemoteMailbox.name.getter();
    *(_DWORD *)(inited + 40) = v8;
    *(_OWORD *)(inited + 48) = *(_OWORD *)a1;
    long long v10 = *(_OWORD *)(a1 + 32);
    long long v9 = *(_OWORD *)(a1 + 48);
    long long v11 = *(_OWORD *)(a1 + 16);
    *(_WORD *)(inited + 112) = *(_WORD *)(a1 + 64);
    *(_OWORD *)(inited + 80) = v10;
    *(_OWORD *)(inited + 96) = v9;
    *(_OWORD *)(inited + 64) = v11;
    unint64_t v12 = sub_1000D4CCC(inited);
    swift_setDeallocating();
    sub_10002292C(a1);
    sub_10000566C(&qword_10070B420);
    swift_arrayDestroy();
    *(void *)(v1 + 48) = v12;
  }
  return swift_bridgeObjectRelease();
}

void (*sub_1000832D0(void *a1, uint64_t a2, unsigned int a3))(void *a1, uint64_t a2)
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a2;
  swift_bridgeObjectRetain();
  v6[5] = sub_100084680(v6, a2, a3);
  return sub_100083350;
}

void sub_100083350(void *a1, uint64_t a2)
{
}

void (*sub_100083368(void *a1, uint64_t a2))(void *a1, uint64_t a2)
{
  unsigned int v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[4] = a2;
  swift_retain();
  v4[5] = sub_100084744(v4, a2);
  return sub_1000833D8;
}

void sub_1000833D8(void *a1, uint64_t a2)
{
}

void sub_1000833F0(void *a1, uint64_t a2, void (*a3)(uint64_t))
{
  unsigned int v4 = (void *)*a1;
  uint64_t v5 = *(void *)(*a1 + 32);
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  a3(v5);
  free(v4);
}

uint64_t sub_100083454()
{
  if (*v0) {
    return 0x616C696176616E75;
  }
  else {
    return 0x6574726F70707573;
  }
}

uint64_t sub_10008349C(__int16 a1)
{
  LOBYTE(v1) = a1;
  if ((a1 & 0x100) != 0)
  {
    if (!(_BYTE)a1) {
      return 0x31303533636672;
    }
    int v1 = a1;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t result = 0x2D6C616963657073;
    if (!(_BYTE)v1) {
      return result;
    }
    int v1 = v1;
    uint64_t v5 = 0x2D6C616963657073;
  }
  if (v1 == 2) {
    v3._countAndFlagsBits = 0xD00000000000001BLL;
  }
  else {
    v3._countAndFlagsBits = 0x6174732D7473696CLL;
  }
  if (v1 == 2) {
    unsigned int v4 = (void *)0x80000001005E4D70;
  }
  else {
    unsigned int v4 = (void *)0xEB00000000737574;
  }
  v3._object = v4;
  sub_1005E1E30(v3);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100083590()
{
  if (v0[1]) {
    __int16 v1 = 256;
  }
  else {
    __int16 v1 = 0;
  }
  return sub_10008349C(v1 | *v0);
}

uint64_t sub_1000835AC()
{
  unint64_t v1 = 0x6174732D7473696CLL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD00000000000001BLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x616C696176616E75;
  }
}

unint64_t sub_10008361C(uint64_t a1, unsigned int a2, int a3)
{
  uint64_t v5 = (void *)(v3 + 48);
  uint64_t v4 = *(void *)(v3 + 48);
  if (!v4) {
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)(v4 + 16);
  if (!v6)
  {
LABEL_7:
    BOOL v16 = 1;
LABEL_8:
    LOBYTE(v22[0]) = v16;
    return v6 | ((unint64_t)v16 << 32);
  }
  unint64_t v10 = sub_100024264(a1, a2);
  if ((v11 & 1) == 0
    || (uint64_t v12 = *(void *)(v4 + 56) + 72 * v10,
        unsigned int v13 = *(_DWORD *)(v12 + 32),
        char v14 = *(unsigned char *)(v12 + 65),
        !swift_bridgeObjectRetain())
    || (unint64_t result = swift_bridgeObjectRelease(), (v14 & 1) != 0))
  {
LABEL_6:
    uint64_t v6 = 0;
    goto LABEL_7;
  }
  BOOL v17 = __CFADD__(a3, 1);
  unsigned int v18 = a3 + 1;
  if (!v17)
  {
    if (v18 <= v13) {
      unsigned int v19 = v13;
    }
    else {
      unsigned int v19 = v18;
    }
    if (*v5)
    {
      swift_bridgeObjectRetain();
      unsigned __int8 v21 = sub_1000832D0(v22, a1, a2);
      if (*(void *)v20 && (*(unsigned char *)(v20 + 65) & 1) == 0) {
        *(_DWORD *)(v20 + 32) = v19;
      }
      v21(v22, 0);
      swift_bridgeObjectRelease();
    }
    BOOL v16 = v18 <= v13;
    if (v18 > v13) {
      uint64_t v6 = v19;
    }
    else {
      uint64_t v6 = 0;
    }
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void *sub_100083758()
{
  sub_10001FDF0(v0 + 48, (uint64_t)v22, &qword_10070A900);
  sub_10001FDF0((uint64_t)v22, (uint64_t)&v23, &qword_10070A900);
  uint64_t v1 = v23;
  unint64_t result = &_swiftEmptySetSingleton;
  if (v23)
  {
    unsigned __int8 v21 = &_swiftEmptySetSingleton;
    uint64_t v3 = v23 + 64;
    uint64_t v4 = 1 << *(unsigned char *)(v23 + 32);
    uint64_t v5 = -1;
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    unint64_t v6 = v5 & *(void *)(v23 + 64);
    int64_t v7 = (unint64_t)(v4 + 63) >> 6;
    unint64_t result = (void *)swift_bridgeObjectRetain();
    int64_t v8 = 0;
    if (v6) {
      goto LABEL_32;
    }
LABEL_7:
    int64_t v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_36:
      __break(1u);
      return result;
    }
    if (v9 >= v7) {
      goto LABEL_33;
    }
    unint64_t v10 = *(void *)(v3 + 8 * v9);
    ++v8;
    if (!v10)
    {
      int64_t v8 = v9 + 1;
      if (v9 + 1 >= v7) {
        goto LABEL_33;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v8);
      if (v10) {
        goto LABEL_24;
      }
      int64_t v8 = v9 + 2;
      if (v9 + 2 >= v7) {
        goto LABEL_33;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v8);
      if (v10) {
        goto LABEL_24;
      }
      int64_t v8 = v9 + 3;
      if (v9 + 3 >= v7) {
        goto LABEL_33;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v8);
      if (v10) {
        goto LABEL_24;
      }
      int64_t v8 = v9 + 4;
      if (v9 + 4 >= v7)
      {
LABEL_33:
        swift_release();
        return v21;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v8);
      if (!v10)
      {
        int64_t v11 = v9 + 5;
        if (v11 < v7)
        {
          unint64_t v10 = *(void *)(v3 + 8 * v11);
          if (v10)
          {
            int64_t v8 = v11;
            goto LABEL_24;
          }
          while (1)
          {
            int64_t v8 = v11 + 1;
            if (__OFADD__(v11, 1)) {
              goto LABEL_36;
            }
            if (v8 >= v7) {
              goto LABEL_33;
            }
            unint64_t v10 = *(void *)(v3 + 8 * v8);
            ++v11;
            if (v10) {
              goto LABEL_24;
            }
          }
        }
        goto LABEL_33;
      }
    }
LABEL_24:
    unint64_t v6 = (v10 - 1) & v10;
    for (unint64_t i = __clz(__rbit64(v10)) + (v8 << 6); ; unint64_t i = v19 | (v8 << 6))
    {
      uint64_t v13 = *(void *)(v1 + 48) + 16 * i;
      uint64_t v14 = *(void *)v13;
      unsigned int v15 = *(_DWORD *)(v13 + 8);
      int v16 = *(unsigned __int16 *)(*(void *)(v1 + 56) + 72 * i + 14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int v17 = *(unsigned __int16 *)RemoteMailbox.Attributes.noSelect.unsafeMutableAddressor();
      int v18 = *(unsigned __int16 *)RemoteMailbox.Attributes.nonExistent.unsafeMutableAddressor();
      if (v17)
      {
        if ((v18 & ~v17) == 0)
        {
          if ((v17 & v16) == 0) {
            goto LABEL_6;
          }
          goto LABEL_31;
        }
      }
      else if (!v18)
      {
        goto LABEL_6;
      }
      if (((v18 | v17) & v16) == 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        unint64_t result = (void *)swift_bridgeObjectRelease();
        if (!v6) {
          goto LABEL_7;
        }
        goto LABEL_32;
      }
LABEL_31:
      swift_bridgeObjectRetain();
      sub_1000187DC((uint64_t)&v20, v14, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t result = (void *)swift_bridgeObjectRelease();
      if (!v6) {
        goto LABEL_7;
      }
LABEL_32:
      unint64_t v19 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
    }
  }
  return result;
}

double sub_1000839B8@<D0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  unint64_t v6 = sub_100024264(a1, a2);
  if (v7)
  {
    unint64_t v8 = v6;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v3;
    uint64_t v20 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_100097B14();
      uint64_t v10 = v20;
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void *)(v10 + 56) + 72 * v8;
    int v12 = *(_DWORD *)(v11 + 8);
    char v13 = *(unsigned char *)(v11 + 12);
    __int16 v14 = *(_WORD *)(v11 + 14);
    char v15 = *(unsigned char *)(v11 + 16);
    uint64_t v16 = *(void *)(v11 + 56);
    char v17 = *(unsigned char *)(v11 + 64);
    char v18 = *(unsigned char *)(v11 + 65);
    *(void *)a3 = *(void *)v11;
    *(_DWORD *)(a3 + 8) = v12;
    *(unsigned char *)(a3 + 12) = v13;
    *(_WORD *)(a3 + 14) = v14;
    *(unsigned char *)(a3 + 16) = v15;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v11 + 24);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(v11 + 40);
    *(void *)(a3 + 56) = v16;
    *(unsigned char *)(a3 + 64) = v17;
    *(unsigned char *)(a3 + 65) = v18;
    sub_1000962B0(v8, v10);
    *uint64_t v4 = v10;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_WORD *)(a3 + 64) = 0;
    double result = 0.0;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_100083ADC(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_100024558(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100098E50();
    uint64_t v7 = v10;
  }
  swift_release();
  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_10009664C(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100083BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1005E1F40();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    int64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_100084194();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    int64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    int64_t v9 = (void *)sub_1005E2D30();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_100083C9C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  char v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_100083F18(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }
      if (result)
      {
        unint64_t v28 = 0;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0;
              }
              char v30 = -87;
            }
            else
            {
              char v30 = -55;
            }
          }
          else
          {
            char v30 = -48;
          }
          if (!is_mul_ok(v28, a3)) {
            return 0;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }
  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  char v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0;
        }
        char v22 = -87;
      }
      else
      {
        char v22 = -55;
      }
    }
    else
    {
      char v22 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0;
    }
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_100084194()
{
  unint64_t v0 = sub_1005E1F50();
  uint64_t v4 = sub_100084214(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100084214(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_10008436C(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_1000C6DB4(v9, 0),
          unint64_t v12 = sub_10008446C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_1005E1D80();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_1005E1D80();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_1005E2D30();
LABEL_4:
  return sub_1005E1D80();
}

uint64_t sub_10008436C(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    double result = sub_1000C6E1C(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    double result = sub_1000C6E1C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  return sub_1005E1EB0();
}

unint64_t sub_10008446C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    double result = v12;
    if (v17 == v15) {
      double result = sub_1000C6E1C(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      double result = sub_1005E1EC0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        double result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          double result = sub_1005E2D30();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    double result = sub_1000C6E1C(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1005E1E90();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void (*sub_100084680(void *a1, uint64_t a2, unsigned int a3))(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_100084C04(v6);
  v6[10] = sub_100084874(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_10008472C;
}

void sub_10008472C(uint64_t a1, uint64_t a2)
{
}

void (*sub_100084744(void *a1, uint64_t a2))(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = malloc(0x58uLL);
  *a1 = v4;
  v4[8] = a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_retain();
  v4[9] = sub_100084C40(v4);
  v4[10] = sub_100084A80(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_1000847E0;
}

void sub_1000847E0(uint64_t a1, uint64_t a2)
{
}

void sub_1000847F8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void (**)(void *, void))(*(void *)a1 + 72);
  uint64_t v6 = *(void *)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 80))();
  a3(v6);
  v5(v4, 0);
  free(v4);
}

void (*sub_100084874(void *a1, uint64_t a2, unsigned int a3, char a4))(uint64_t *a1)
{
  uint64_t v5 = v4;
  unint64_t v10 = (char *)malloc(0x60uLL);
  *a1 = v10;
  *((_DWORD *)v10 + 17) = a3;
  *((void *)v10 + 9) = a2;
  *((void *)v10 + 10) = v4;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_100024264(a2, a3);
  v10[66] = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      *((void *)v10 + 11) = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*v5 + 56) + 72 * v13;
        uint64_t v20 = *(void *)v19;
        uint64_t v21 = *(unsigned __int8 *)(v19 + 16);
        long long v22 = *(_OWORD *)(v19 + 24);
        long long v23 = *(_OWORD *)(v19 + 40);
        uint64_t v24 = *(void *)(v19 + 56);
        __int16 v25 = *(unsigned __int8 *)(v19 + 64);
        int v26 = *(unsigned __int8 *)(v19 + 65);
        unint64_t v27 = *(unsigned int *)(v19 + 8) | ((unint64_t)*(unsigned __int8 *)(v19 + 12) << 32) | ((unint64_t)*(unsigned __int16 *)(v19 + 14) << 48);
        if (v26) {
          __int16 v28 = 256;
        }
        else {
          __int16 v28 = 0;
        }
        __int16 v29 = v28 | v25;
        goto LABEL_15;
      }
LABEL_14:
      uint64_t v20 = 0;
      unint64_t v27 = 0;
      uint64_t v21 = 0;
      uint64_t v24 = 0;
      __int16 v29 = 0;
      long long v22 = 0uLL;
      long long v23 = 0uLL;
LABEL_15:
      *(void *)unint64_t v10 = v20;
      *((void *)v10 + 1) = v27;
      *((void *)v10 + 2) = v21;
      *(_OWORD *)(v10 + 24) = v22;
      *(_OWORD *)(v10 + 40) = v23;
      *((void *)v10 + 7) = v24;
      *((_WORD *)v10 + 32) = v29;
      return sub_100084A2C;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_100097B14();
      goto LABEL_7;
    }
    sub_100050768(v16, a4 & 1);
    unint64_t v30 = sub_100024264(a2, a3);
    if ((v17 & 1) == (v31 & 1))
    {
      unint64_t v13 = v30;
      *((void *)v10 + 11) = v30;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
  }
  double result = (void (*)(uint64_t *))sub_1005E3380();
  __break(1u);
  return result;
}

void sub_100084A2C(uint64_t *a1)
{
  unint64_t v1 = (void *)*a1;
  sub_100084C70(*a1, *(unsigned char *)(*a1 + 66), *(uint64_t **)(*a1 + 80), *(void *)(*a1 + 88), *(void *)(*a1 + 72), *(_DWORD *)(*a1 + 68));
  swift_bridgeObjectRelease();
  free(v1);
}

void (*sub_100084A80(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  _OWORD v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_100024558(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *uint64_t v8 = v17;
        return sub_100084BB4;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_100098E50();
      goto LABEL_7;
    }
    sub_100052F94(v14, a3 & 1);
    unint64_t v18 = sub_100024558(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_10000566C(&qword_100709FC8);
  double result = (void (*)(uint64_t **))sub_1005E3380();
  __break(1u);
  return result;
}

void sub_100084BB4(uint64_t **a1)
{
  unint64_t v1 = *a1;
  sub_100084D8C(*a1, *((unsigned char *)*a1 + 32), (uint64_t *)(*a1)[2], (*a1)[3], (*a1)[1]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_100084C04(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *unint64_t v1 = 0x8000000000000000;
  return sub_100084C34;
}

uint64_t sub_100084C34(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t (*sub_100084C40(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *unint64_t v1 = 0x8000000000000000;
  return sub_100087744;
}

uint64_t sub_100084C70(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, int a6)
{
  if (*(void *)a1)
  {
    __int16 v9 = *(_WORD *)(a1 + 64);
    uint64_t v10 = *(void *)(a1 + 56);
    uint64_t v12 = *(void *)(a1 + 8);
    uint64_t v11 = *(void *)(a1 + 16);
    *(void *)&long long v19 = *(void *)a1;
    DWORD2(v19) = v12;
    BYTE12(v19) = BYTE4(v12);
    HIWORD(v19) = HIWORD(v12);
    v20[0] = v11;
    long long v13 = *(_OWORD *)(a1 + 40);
    *(_OWORD *)&v20[8] = *(_OWORD *)(a1 + 24);
    *(_OWORD *)&v20[24] = v13;
    *(void *)&v20[40] = v10;
    __int16 v21 = v9 & 0x1FF;
    uint64_t v14 = (void *)*a3;
    if (a2)
    {
      uint64_t v15 = v14[7] + 72 * a4;
      long long v16 = *(_OWORD *)&v20[32];
      *(_OWORD *)(v15 + 32) = *(_OWORD *)&v20[16];
      *(_OWORD *)(v15 + 48) = v16;
      *(_WORD *)(v15 + 64) = v21;
      long long v17 = *(_OWORD *)v20;
      *(_OWORD *)uint64_t v15 = v19;
      *(_OWORD *)(v15 + 16) = v17;
    }
    else
    {
      sub_100102FF0(a4, a5, a6, (uint64_t)&v19, v14);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_1000962B0(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_100084D8C(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v7 = *a1;
  if (*a1)
  {
    uint64_t v8 = (void *)*a3;
    if (a2)
    {
      *(void *)(v8[7] + 8 * a4) = v7;
    }
    else
    {
      sub_1001031E4(a4, a5, v7, v8);
      swift_retain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_10009664C(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_100084E54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2
    || a1[1] != a2[1]
    || a1[2] != a2[2]
    || a1[3] != a2[3]
    || ((a1[4] ^ a2[4]) & 1) != 0
    || ((a1[5] ^ a2[5]) & 1) != 0
    || a1[6] != a2[6]
    || a1[7] != a2[7]
    || ((a1[8] ^ a2[8]) & 1) != 0
    || a1[9] != a2[9])
  {
    goto LABEL_17;
  }
  char v4 = a2[24];
  if ((a1[24] & 1) == 0)
  {
    if (*((void *)a1 + 2) != *((void *)a2 + 2)) {
      char v4 = 1;
    }
    if ((v4 & 1) == 0) {
      goto LABEL_19;
    }
LABEL_17:
    char v4 = 0;
    return v4 & 1;
  }
  if (!a2[24]) {
    return v4 & 1;
  }
LABEL_19:
  sub_10003BFA8((uint64_t)(a1 + 32), (uint64_t)v8);
  sub_10003BFA8((uint64_t)(a2 + 32), (uint64_t)v7);
  sub_10003BFA8((uint64_t)v8, (uint64_t)&v9);
  uint64_t v6 = v9;
  if (v10 == 1)
  {
    if (v9)
    {
      sub_10003BFA8((uint64_t)v7, (uint64_t)&v11);
      char v4 = 0;
      if (v12 != 1 || !v11) {
        return v4 & 1;
      }
LABEL_29:
      char v4 = a1[41] ^ a2[41] ^ 1;
      return v4 & 1;
    }
    sub_10003BFA8((uint64_t)v7, (uint64_t)&v11);
    char v4 = 0;
    if (v12 == 1 && !v11) {
      goto LABEL_29;
    }
  }
  else
  {
    sub_10003BFA8((uint64_t)v7, (uint64_t)&v11);
    char v4 = 0;
    if ((v12 & 1) == 0 && v6 == v11) {
      goto LABEL_29;
    }
  }
  return v4 & 1;
}

uint64_t sub_100085008(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)a2;
  if (*(void *)a1 == 2)
  {
    if (v6 != 2) {
      return 0;
    }
  }
  else
  {
    if (v6 == 2) {
      return 0;
    }
    uint64_t v8 = *(void *)(a1 + 8);
    uint64_t v7 = *(void *)(a1 + 16);
    uint64_t v9 = *(void *)(a1 + 24);
    uint64_t v10 = *(void *)(a1 + 32);
    __int16 v11 = *(_WORD *)(a1 + 40);
    uint64_t v13 = *(void *)(a2 + 8);
    uint64_t v12 = *(void *)(a2 + 16);
    uint64_t v15 = *(void *)(a2 + 24);
    uint64_t v14 = *(void *)(a2 + 32);
    __int16 v16 = *(_WORD *)(a2 + 40);
    unsigned __int8 v32 = v4 & 1;
    uint64x2_t v17 = (uint64x2_t)vdupq_n_s64(v4);
    int16x8_t v18 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v17, (uint64x2_t)xmmword_1005F66C0), (int32x4_t)vshlq_u64(v17, (uint64x2_t)xmmword_1005F66B0));
    *(int8x8_t *)v18.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v18), (int8x8_t)0x1000100010001);
    unsigned __int32 v33 = vmovn_s16(v18).u32[0];
    char v34 = BYTE5(v4) & 1;
    char v35 = BYTE6(v4) & 1;
    char v36 = HIBYTE(v4);
    __int16 v37 = v8 & 0xFF01;
    uint64_t v38 = v7;
    char v39 = v9 & 1;
    uint64_t v40 = v10;
    __int16 v41 = v11 & 0x101;
    uint64x2_t v19 = (uint64x2_t)vdupq_n_s64(v5);
    unsigned __int8 v42 = v5 & 1;
    int16x8_t v20 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v19, (uint64x2_t)xmmword_1005F66C0), (int32x4_t)vshlq_u64(v19, (uint64x2_t)xmmword_1005F66B0));
    *(int8x8_t *)v20.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v20), (int8x8_t)0x1000100010001);
    unsigned __int32 v43 = vmovn_s16(v20).u32[0];
    char v44 = BYTE5(v5) & 1;
    char v45 = BYTE6(v5) & 1;
    char v46 = HIBYTE(v5);
    __int16 v47 = v13 & 0xFF01;
    uint64_t v48 = v12;
    char v49 = v15 & 1;
    uint64_t v50 = v14;
    __int16 v51 = v16 & 0x101;
    if ((sub_100084E54(&v32, &v42) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v21 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (!v21) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = swift_bridgeObjectRetain();
    char v23 = sub_100020158(v22, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0) {
      return 0;
    }
  }
  else if (v21)
  {
    return 0;
  }
  char v24 = *(unsigned char *)(a2 + 64);
  if (*(unsigned char *)(a1 + 64))
  {
    if (!*(unsigned char *)(a2 + 64)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 56) != *(void *)(a2 + 56)) {
      char v24 = 1;
    }
    if (v24) {
      return 0;
    }
  }
  if ((*(unsigned __int8 *)(a1 + 65) ^ *(unsigned __int8 *)(a2 + 65))) {
    return 0;
  }
  uint64_t v26 = *(void *)(a1 + 72);
  uint64_t v27 = *(void *)(a2 + 72);
  if (v26)
  {
    if (!v27) {
      return 0;
    }
    uint64_t v29 = *(void *)(a1 + 80);
    uint64_t v28 = *(void *)(a1 + 88);
    uint64_t v31 = *(void *)(a2 + 80);
    uint64_t v30 = *(void *)(a2 + 88);
    sub_100064054(v26);
    sub_100064054(v26);
    sub_100064054(v27);
    LOBYTE(v31) = static Mailbox.__derived_struct_equals(_:_:)(v26, v29, v28, v27, v31, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000852BC(v26);
    if ((v31 & 1) == 0) {
      return 0;
    }
  }
  else if (v27)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_1000852BC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000852FC(uint64_t a1)
{
  unint64_t v2 = Capability.listStatus.unsafeMutableAddressor();
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  unint64_t v5 = v2[2];
  char v6 = *((unsigned char *)v2 + 24);
  swift_bridgeObjectRetain();
  LOBYTE(v3) = sub_100010B9C(v3, v4, v5, v6, a1);
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v7 = Capability.yahooMailHighestModificationSequence.unsafeMutableAddressor();
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    unint64_t v10 = v7[2];
    char v11 = *((unsigned char *)v7 + 24);
    swift_bridgeObjectRetain();
    LOBYTE(v8) = sub_100010B9C(v8, v9, v10, v11, a1);
    swift_bridgeObjectRelease();
    if (v8)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      uint64_t v13 = Capability.condStore.unsafeMutableAddressor();
      uint64_t v14 = *v13;
      uint64_t v15 = v13[1];
      unint64_t v16 = v13[2];
      char v17 = *((unsigned char *)v13 + 24);
      swift_bridgeObjectRetain();
      LOBYTE(v14) = sub_100010B9C(v14, v15, v16, v17, a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14) {
        return 2;
      }
      else {
        return 1;
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_10008541C(void *a1)
{
  uint64_t v2 = a1[9];
  if (v2)
  {
    BOOL v3 = a1[8] == 0x4920216F6F686159 && v2 == 0xEB000000002E636ELL;
    if (v3 || (sub_1005E3290() & 1) != 0)
    {
      sub_100086C14((uint64_t)a1);
      return 0;
    }
  }
  uint64_t v5 = a1[1];
  if (!v5)
  {
    sub_100086C14((uint64_t)a1);
    return 2;
  }
  if (*a1 != 0x70616D4947 || v5 != 0xE500000000000000)
  {
    char v7 = sub_1005E3290();
    sub_100086C14((uint64_t)a1);
    if (v7) {
      return 1;
    }
    return 2;
  }
  sub_100086C14((uint64_t)a1);
  return 1;
}

uint64_t sub_100085518(uint64_t a1)
{
  uint64_t v43 = a1 + 56;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 56);
  int64_t v44 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v7 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (unint64_t i = v7 | (v6 << 6); ; unint64_t i = __clz(__rbit64(v10)) + (v6 << 6))
  {
    uint64_t v12 = *(void *)(a1 + 48) + 32 * i;
    uint64_t v14 = *(void *)v12;
    unint64_t v13 = *(void *)(v12 + 8);
    uint64_t v45 = *(void *)(v12 + 16);
    char v15 = *(unsigned char *)(v12 + 24);
    swift_bridgeObjectRetain_n();
    if ((v15 & 1) == 0)
    {
      sub_1005E1F50();
      swift_bridgeObjectRelease();
      sub_1005E1D00();
      swift_bridgeObjectRelease();
    }
    uint64_t v16 = sub_1005E1CD0();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    if (v16 == 0x4C4547415353454DLL && v18 == 0xEC00000054494D49)
    {
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    char v20 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v20)
    {
      swift_release();
LABEL_34:
      swift_bridgeObjectRelease();
      uint64_t v21 = Capability.value.getter(v14, v13, v45, v15);
      unint64_t v23 = v22;
      uint64_t result = swift_bridgeObjectRelease();
      if (!v23) {
        return 0;
      }
      uint64_t v24 = HIBYTE(v23) & 0xF;
      uint64_t v25 = v21 & 0xFFFFFFFFFFFFLL;
      if ((v23 & 0x2000000000000000) != 0) {
        uint64_t v26 = HIBYTE(v23) & 0xF;
      }
      else {
        uint64_t v26 = v21 & 0xFFFFFFFFFFFFLL;
      }
      if (!v26)
      {
LABEL_52:
        swift_bridgeObjectRelease();
        return 0;
      }
      if ((v23 & 0x1000000000000000) != 0)
      {
        uint64_t v28 = sub_100083BA4(v21, v23, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_100083C9C);
        LOBYTE(v21) = v42;
        goto LABEL_80;
      }
      if ((v23 & 0x2000000000000000) == 0)
      {
        if ((v21 & 0x1000000000000000) != 0) {
          uint64_t v27 = (unsigned __int8 *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else {
          uint64_t v27 = (unsigned __int8 *)sub_1005E2D30();
        }
        uint64_t v28 = (uint64_t)sub_100083C9C(v27, v25, 10);
        LOBYTE(v21) = v29 & 1;
LABEL_80:
        swift_bridgeObjectRelease();
        if ((v21 & 1) == 0 && v28 >= 1 && v28 < 1000000) {
          return v28;
        }
        return 0;
      }
      v46[0] = v21;
      v46[1] = v23 & 0xFFFFFFFFFFFFFFLL;
      if (v21 == 43)
      {
        if (!v24) {
          goto LABEL_97;
        }
        if (v24 == 1 || (BYTE1(v21) - 48) > 9u) {
          goto LABEL_67;
        }
        uint64_t v28 = (BYTE1(v21) - 48);
        if (v24 != 2)
        {
          if ((BYTE2(v21) - 48) > 9u) {
            goto LABEL_67;
          }
          uint64_t v28 = 10 * (BYTE1(v21) - 48) + (BYTE2(v21) - 48);
          uint64_t v30 = v24 - 3;
          if (v30)
          {
            uint64_t v31 = (unsigned __int8 *)v46 + 3;
            while (1)
            {
              unsigned int v32 = *v31 - 48;
              if (v32 > 9) {
                goto LABEL_67;
              }
              uint64_t v33 = 10 * v28;
              if ((unsigned __int128)(v28 * (__int128)10) >> 64 != (10 * v28) >> 63) {
                goto LABEL_67;
              }
              uint64_t v28 = v33 + v32;
              if (__OFADD__(v33, v32)) {
                goto LABEL_67;
              }
              LOBYTE(v21) = 0;
              ++v31;
              if (!--v30) {
                goto LABEL_80;
              }
            }
          }
        }
      }
      else
      {
        if (v21 == 45)
        {
          if (!v24) {
            goto LABEL_96;
          }
          if (v24 != 1 && (BYTE1(v21) - 48) <= 9u)
          {
            if (v24 == 2)
            {
              LOBYTE(v21) = 0;
              uint64_t v28 = -(uint64_t)(BYTE1(v21) - 48);
              goto LABEL_80;
            }
            if ((BYTE2(v21) - 48) <= 9u)
            {
              uint64_t v28 = -10 * (BYTE1(v21) - 48) - (BYTE2(v21) - 48);
              uint64_t v38 = v24 - 3;
              if (!v38) {
                goto LABEL_79;
              }
              char v39 = (unsigned __int8 *)v46 + 3;
              while (1)
              {
                unsigned int v40 = *v39 - 48;
                if (v40 > 9) {
                  break;
                }
                uint64_t v41 = 10 * v28;
                if ((unsigned __int128)(v28 * (__int128)10) >> 64 != (10 * v28) >> 63) {
                  break;
                }
                uint64_t v28 = v41 - v40;
                if (__OFSUB__(v41, v40)) {
                  break;
                }
                LOBYTE(v21) = 0;
                ++v39;
                if (!--v38) {
                  goto LABEL_80;
                }
              }
            }
          }
LABEL_67:
          uint64_t v28 = 0;
          LOBYTE(v21) = 1;
          goto LABEL_80;
        }
        if (!v24 || (v21 - 48) > 9u) {
          goto LABEL_67;
        }
        uint64_t v28 = (v21 - 48);
        if (v24 != 1)
        {
          if ((BYTE1(v21) - 48) > 9u) {
            goto LABEL_67;
          }
          uint64_t v28 = 10 * (v21 - 48) + (BYTE1(v21) - 48);
          uint64_t v34 = v24 - 2;
          if (v34)
          {
            char v35 = (unsigned __int8 *)v46 + 2;
            while (1)
            {
              unsigned int v36 = *v35 - 48;
              if (v36 > 9) {
                goto LABEL_67;
              }
              uint64_t v37 = 10 * v28;
              if ((unsigned __int128)(v28 * (__int128)10) >> 64 != (10 * v28) >> 63) {
                goto LABEL_67;
              }
              uint64_t v28 = v37 + v36;
              if (__OFADD__(v37, v36)) {
                goto LABEL_67;
              }
              LOBYTE(v21) = 0;
              ++v35;
              if (!--v34) {
                goto LABEL_80;
              }
            }
          }
        }
      }
LABEL_79:
      LOBYTE(v21) = 0;
      goto LABEL_80;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v9 >= v44) {
      goto LABEL_51;
    }
    unint64_t v10 = *(void *)(v43 + 8 * v9);
    ++v6;
    if (!v10)
    {
      int64_t v6 = v9 + 1;
      if (v9 + 1 >= v44) {
        goto LABEL_51;
      }
      unint64_t v10 = *(void *)(v43 + 8 * v6);
      if (!v10)
      {
        int64_t v6 = v9 + 2;
        if (v9 + 2 >= v44) {
          goto LABEL_51;
        }
        unint64_t v10 = *(void *)(v43 + 8 * v6);
        if (!v10)
        {
          int64_t v6 = v9 + 3;
          if (v9 + 3 >= v44) {
            goto LABEL_51;
          }
          unint64_t v10 = *(void *)(v43 + 8 * v6);
          if (!v10)
          {
            int64_t v6 = v9 + 4;
            if (v9 + 4 >= v44) {
              goto LABEL_51;
            }
            unint64_t v10 = *(void *)(v43 + 8 * v6);
            if (!v10) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    unint64_t v4 = (v10 - 1) & v10;
  }
  int64_t v11 = v9 + 5;
  if (v11 >= v44)
  {
LABEL_51:
    swift_release();
    goto LABEL_52;
  }
  unint64_t v10 = *(void *)(v43 + 8 * v11);
  if (v10)
  {
    int64_t v6 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v6 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v6 >= v44) {
      goto LABEL_51;
    }
    unint64_t v10 = *(void *)(v43 + 8 * v6);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
  return result;
}

uint64_t sub_100085B18(uint64_t a1)
{
  uint64_t v52 = a1 + 56;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 56);
  int64_t v53 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v7 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (unint64_t i = v7 | (v6 << 6); ; unint64_t i = __clz(__rbit64(v10)) + (v6 << 6))
  {
    uint64_t v12 = *(void *)(a1 + 48) + 32 * i;
    uint64_t v13 = *(void *)v12;
    unint64_t v14 = *(void *)(v12 + 8);
    uint64_t v54 = *(void *)(v12 + 16);
    char v15 = *(unsigned char *)(v12 + 24);
    swift_bridgeObjectRetain_n();
    if ((v15 & 1) == 0)
    {
      sub_1005E1F50();
      swift_bridgeObjectRelease();
      sub_1005E1D00();
      swift_bridgeObjectRelease();
    }
    uint64_t v16 = sub_1005E1CD0();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    if (v16 == 0x494C444E45505041 && v18 == 0xEB0000000054494DLL)
    {
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    char v20 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v20)
    {
      swift_release();
LABEL_34:
      uint64_t v21 = Capability.value.getter(v13, v14, v54, v15);
      unint64_t v23 = v22;
      uint64_t result = swift_bridgeObjectRelease();
      if (!v23) {
        goto LABEL_101;
      }
      uint64_t v24 = HIBYTE(v23) & 0xF;
      uint64_t v25 = v21 & 0xFFFFFFFFFFFFLL;
      if ((v23 & 0x2000000000000000) != 0) {
        uint64_t v26 = HIBYTE(v23) & 0xF;
      }
      else {
        uint64_t v26 = v21 & 0xFFFFFFFFFFFFLL;
      }
      if (!v26)
      {
LABEL_100:
        swift_bridgeObjectRelease();
        goto LABEL_101;
      }
      if ((v23 & 0x1000000000000000) != 0)
      {
        int64_t v28 = sub_100083BA4(v21, v23, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_100083F18);
        char v30 = v51;
        goto LABEL_72;
      }
      if ((v23 & 0x2000000000000000) == 0)
      {
        if ((v21 & 0x1000000000000000) != 0) {
          uint64_t v27 = (unsigned __int8 *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else {
          uint64_t v27 = (unsigned __int8 *)sub_1005E2D30();
        }
        int64_t v28 = (int64_t)sub_100083F18(v27, v25, 10);
        char v30 = v29 & 1;
LABEL_72:
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0 && (unint64_t)v28 >> 5 >= 0xC35)
        {
          swift_bridgeObjectRelease();
          if (v28 >= 2000000000) {
            uint64_t v37 = 2000000000;
          }
          else {
            uint64_t v37 = v28;
          }
          if (v28 >= 0) {
            return v37;
          }
          else {
            return 2000000000;
          }
        }
LABEL_101:
        appended = Capability.mailboxSpecificAppendLimit.unsafeMutableAddressor();
        uint64_t v47 = *appended;
        uint64_t v48 = appended[1];
        unint64_t v49 = appended[2];
        char v50 = *((unsigned char *)appended + 24);
        swift_bridgeObjectRetain();
        LODWORD(v47) = sub_100010B9C(v47, v48, v49, v50, a1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return ~v47 & 1;
      }
      v55[0] = v21;
      v55[1] = v23 & 0xFFFFFFFFFFFFFFLL;
      if (v21 == 43)
      {
        if (!v24) {
          goto LABEL_106;
        }
        if (v24 == 1 || (BYTE1(v21) - 48) > 9u) {
          goto LABEL_68;
        }
        int64_t v28 = (BYTE1(v21) - 48);
        if (v24 == 2) {
          goto LABEL_71;
        }
        if ((BYTE2(v21) - 48) <= 9u)
        {
          int64_t v28 = 10 * (BYTE1(v21) - 48) + (BYTE2(v21) - 48);
          uint64_t v34 = v24 - 3;
          if (v34)
          {
            char v35 = (unsigned __int8 *)v55 + 3;
            while (1)
            {
              unsigned int v36 = *v35 - 48;
              if (v36 > 9) {
                goto LABEL_68;
              }
              if (!is_mul_ok(v28, 0xAuLL)) {
                goto LABEL_68;
              }
              BOOL v32 = __CFADD__(10 * v28, v36);
              int64_t v28 = 10 * v28 + v36;
              if (v32) {
                goto LABEL_68;
              }
              char v30 = 0;
              ++v35;
              if (!--v34) {
                goto LABEL_72;
              }
            }
          }
          goto LABEL_71;
        }
      }
      else if (v21 == 45)
      {
        if (!v24) {
          goto LABEL_105;
        }
        if (v24 != 1)
        {
          unsigned __int8 v31 = BYTE1(v21) - 48;
          if ((BYTE1(v21) - 48) <= 9u)
          {
            int64_t v28 = 0;
            BOOL v32 = v31 == 0;
            unint64_t v33 = -(uint64_t)v31;
            if (!v32) {
              goto LABEL_69;
            }
            if (v24 == 2)
            {
              char v30 = 0;
              int64_t v28 = v33;
              goto LABEL_72;
            }
            unsigned __int8 v41 = BYTE2(v21) - 48;
            if ((BYTE2(v21) - 48) <= 9u && is_mul_ok(v33, 0xAuLL))
            {
              unint64_t v42 = 10 * v33;
              int64_t v28 = v42 - v41;
              if (v42 >= v41)
              {
                uint64_t v43 = v24 - 3;
                if (v43)
                {
                  int64_t v44 = (unsigned __int8 *)v55 + 3;
                  while (1)
                  {
                    unsigned int v45 = *v44 - 48;
                    if (v45 > 9) {
                      goto LABEL_68;
                    }
                    if (!is_mul_ok(v28, 0xAuLL)) {
                      goto LABEL_68;
                    }
                    BOOL v32 = 10 * v28 >= (unint64_t)v45;
                    int64_t v28 = 10 * v28 - v45;
                    if (!v32) {
                      goto LABEL_68;
                    }
                    char v30 = 0;
                    ++v44;
                    if (!--v43) {
                      goto LABEL_72;
                    }
                  }
                }
LABEL_71:
                char v30 = 0;
                goto LABEL_72;
              }
            }
          }
        }
      }
      else if (v24 && (v21 - 48) <= 9u)
      {
        int64_t v28 = (v21 - 48);
        if (v24 == 1) {
          goto LABEL_71;
        }
        if ((BYTE1(v21) - 48) <= 9u)
        {
          int64_t v28 = 10 * (v21 - 48) + (BYTE1(v21) - 48);
          uint64_t v38 = v24 - 2;
          if (v38)
          {
            char v39 = (unsigned __int8 *)v55 + 2;
            while (1)
            {
              unsigned int v40 = *v39 - 48;
              if (v40 > 9) {
                goto LABEL_68;
              }
              if (!is_mul_ok(v28, 0xAuLL)) {
                goto LABEL_68;
              }
              BOOL v32 = __CFADD__(10 * v28, v40);
              int64_t v28 = 10 * v28 + v40;
              if (v32) {
                goto LABEL_68;
              }
              char v30 = 0;
              ++v39;
              if (!--v38) {
                goto LABEL_72;
              }
            }
          }
          goto LABEL_71;
        }
      }
LABEL_68:
      int64_t v28 = 0;
LABEL_69:
      char v30 = 1;
      goto LABEL_72;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_100;
    }
    if (v9 >= v53) {
      goto LABEL_53;
    }
    unint64_t v10 = *(void *)(v52 + 8 * v9);
    ++v6;
    if (!v10)
    {
      int64_t v6 = v9 + 1;
      if (v9 + 1 >= v53) {
        goto LABEL_53;
      }
      unint64_t v10 = *(void *)(v52 + 8 * v6);
      if (!v10)
      {
        int64_t v6 = v9 + 2;
        if (v9 + 2 >= v53) {
          goto LABEL_53;
        }
        unint64_t v10 = *(void *)(v52 + 8 * v6);
        if (!v10)
        {
          int64_t v6 = v9 + 3;
          if (v9 + 3 >= v53) {
            goto LABEL_53;
          }
          unint64_t v10 = *(void *)(v52 + 8 * v6);
          if (!v10)
          {
            int64_t v6 = v9 + 4;
            if (v9 + 4 >= v53) {
              goto LABEL_53;
            }
            unint64_t v10 = *(void *)(v52 + 8 * v6);
            if (!v10) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    unint64_t v4 = (v10 - 1) & v10;
  }
  int64_t v11 = v9 + 5;
  if (v11 >= v53)
  {
LABEL_53:
    swift_release();
    goto LABEL_101;
  }
  unint64_t v10 = *(void *)(v52 + 8 * v11);
  if (v10)
  {
    int64_t v6 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v6 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v6 >= v53) {
      goto LABEL_53;
    }
    unint64_t v10 = *(void *)(v52 + 8 * v6);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
  return result;
}

uint64_t sub_100086178@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int64_t v6 = Capability.move.unsafeMutableAddressor();
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  unint64_t v9 = v6[2];
  char v10 = *((unsigned char *)v6 + 24);
  swift_bridgeObjectRetain();
  char v11 = sub_100010B9C(v7, v8, v9, v10, a1);
  swift_bridgeObjectRelease();
  uint64_t v12 = Capability.gmailExtensions.unsafeMutableAddressor();
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  unint64_t v15 = v12[2];
  char v16 = *((unsigned char *)v12 + 24);
  swift_bridgeObjectRetain();
  char v17 = sub_100010B9C(v13, v14, v15, v16, a1);
  swift_bridgeObjectRelease();
  uint64_t v18 = Capability.condStore.unsafeMutableAddressor();
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  unint64_t v21 = v18[2];
  char v22 = *((unsigned char *)v18 + 24);
  swift_bridgeObjectRetain();
  LOBYTE(v19) = sub_100010B9C(v19, v20, v21, v22, a1);
  swift_bridgeObjectRelease();
  uint64_t v23 = a2[9];
  char v65 = v17;
  char v66 = v11;
  char v64 = v19;
  BOOL v57 = v23 && (a2[8] == 0x4920216F6F686159 && v23 == 0xEB000000002E636ELL || (sub_1005E3290() & 1) != 0);
  uint64_t v24 = Capability.partial.unsafeMutableAddressor();
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  unint64_t v27 = v24[2];
  char v28 = *((unsigned char *)v24 + 24);
  swift_bridgeObjectRetain();
  char v63 = sub_100010B9C(v25, v26, v27, v28, a1);
  swift_bridgeObjectRelease();
  char v29 = Capability.extendedSearch.unsafeMutableAddressor();
  uint64_t v30 = *v29;
  uint64_t v31 = v29[1];
  unint64_t v32 = v29[2];
  char v33 = *((unsigned char *)v29 + 24);
  swift_bridgeObjectRetain();
  char v62 = sub_100010B9C(v30, v31, v32, v33, a1);
  swift_bridgeObjectRelease();
  uint64_t v34 = Capability.namespace.unsafeMutableAddressor();
  uint64_t v35 = *v34;
  uint64_t v36 = v34[1];
  unint64_t v37 = v34[2];
  char v38 = *((unsigned char *)v34 + 24);
  swift_bridgeObjectRetain();
  char v61 = sub_100010B9C(v35, v36, v37, v38, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  char v60 = sub_1000852FC(a1);
  char v39 = Capability.specialUse.unsafeMutableAddressor();
  uint64_t v40 = *v39;
  uint64_t v41 = v39[1];
  unint64_t v42 = v39[2];
  char v43 = *((unsigned char *)v39 + 24);
  swift_bridgeObjectRetain();
  char v59 = sub_100010B9C(v40, v41, v42, v43, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v58 = sub_10008541C(a2);
  uint64_t v44 = swift_bridgeObjectRetain();
  uint64_t v45 = sub_100085518(v44);
  LOBYTE(v42) = v46;
  uint64_t v47 = swift_bridgeObjectRetain();
  uint64_t v48 = sub_100085B18(v47);
  char v50 = v49;
  char v51 = Capability.idle.unsafeMutableAddressor();
  uint64_t v52 = *v51;
  uint64_t v53 = v51[1];
  unint64_t v54 = v51[2];
  char v55 = *((unsigned char *)v51 + 24);
  swift_bridgeObjectRetain();
  LOBYTE(v54) = sub_100010B9C(v52, v53, v54, v55, a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)a3 = (v66 & 1) == 0;
  *(unsigned char *)(a3 + 1) = (v65 & 1) == 0;
  *(unsigned char *)(a3 + 2) = (v64 & 1) == 0;
  *(unsigned char *)(a3 + 3) = v57;
  *(unsigned char *)(a3 + 4) = (v63 & 1) == 0;
  *(unsigned char *)(a3 + 5) = (v62 & 1) == 0;
  *(unsigned char *)(a3 + 6) = (v61 & 1) == 0;
  *(unsigned char *)(a3 + 7) = v60;
  *(unsigned char *)(a3 + 8) = (v59 & 1) == 0;
  *(unsigned char *)(a3 + 9) = v58;
  *(void *)(a3 + 16) = v45;
  *(unsigned char *)(a3 + 24) = v42 & 1;
  *(void *)(a3 + 32) = v48;
  *(unsigned char *)(a3 + 40) = v50 & 1;
  *(unsigned char *)(a3 + 41) = (v54 & 1) == 0;
  return result;
}

uint64_t sub_10008650C(uint64_t a1, char a2, uint64_t a3, unsigned __int8 a4, char a5)
{
  if (a2) {
    return 1;
  }
  if ((a5 & 1) == 0 && a4 - 3 > 0xFFFFFFFD) {
    return 0;
  }
  uint64_t v5 = a3 - a1;
  if (a3 >= a1)
  {
    if (!__OFSUB__(a3, a1)) {
      goto LABEL_11;
    }
LABEL_23:
    __break(1u);
    JUMPOUT(0x100086870);
  }
  if (__OFSUB__(a1, a3))
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v5 = a3 - a1;
  if (__OFSUB__(0, a1 - a3))
  {
    __break(1u);
    return 1;
  }
LABEL_11:
  double v7 = (double)v5 / 1000000000.0;
  if (a4 == 2) {
    double v8 = 4.0;
  }
  else {
    double v8 = 47.0;
  }
  if (v7 <= v8)
  {
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v12 = sub_1005E0EB0();
    os_log_type_t v13 = sub_1005E25C0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      double v17 = COERCE_DOUBLE(swift_slowAlloc());
      *(_DWORD *)uint64_t v14 = 68158466;
      sub_1005E2960();
      *(_WORD *)(v14 + 8) = 2048;
      sub_1005E2960();
      *(_WORD *)(v14 + 18) = 2082;
      uint64_t v15 = sub_1005E2CB0();
      sub_1000C6914(v15, v16, (uint64_t *)&v17);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 28) = 1024;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Last mailbox list update was %.*g seconds ago. Not requesting update. (kind: %{public}s, update was requested: %{BOOL}d", (uint8_t *)v14, 0x22u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return 0;
  }
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  unint64_t v9 = sub_1005E0EB0();
  os_log_type_t v10 = sub_1005E25C0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 68157952;
    sub_1005E2960();
    *(_WORD *)(v11 + 8) = 2048;
    double v17 = v7;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Last mailbox list update was %.*g seconds ago. Requesting update.", (uint8_t *)v11, 0x12u);
    swift_slowDealloc();
  }

  return 1;
}

unint64_t sub_100086880(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000868D8(unint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_100086918(result);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_100086918(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_10008692C(result);
  }
  return result;
}

unint64_t sub_10008692C(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000869B0(unint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1000869F0(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1000869F0(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_100086A04(result);
  }
  return result;
}

unint64_t sub_100086A04(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100086A88(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100086AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UntaggedResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100086B44(uint64_t a1)
{
  return a1;
}

uint64_t sub_100086C14(uint64_t a1)
{
  return a1;
}

ValueMetadata *_s6RemoteV6ServerV17ListStatusSupportOMa()
{
  return &_s6RemoteV6ServerV17ListStatusSupportON;
}

ValueMetadata *_s6RemoteV6ServerV21BackgroundIdleSupportOMa()
{
  return &_s6RemoteV6ServerV21BackgroundIdleSupportON;
}

ValueMetadata *_s6RemoteV6ServerV11AppendLimitOMa()
{
  return &_s6RemoteV6ServerV11AppendLimitON;
}

ValueMetadata *_s6RemoteV6ServerV12MessageLimitVMa()
{
  return &_s6RemoteV6ServerV12MessageLimitVN;
}

uint64_t getEnumTagSinglePayload for CertificateTrust.Policy(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s6RemoteV6ServerV17ListStatusSupportOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100086E90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6RemoteV6ServerV20ConnectionCountLimitOMa()
{
  return &_s6RemoteV6ServerV20ConnectionCountLimitON;
}

_WORD *_s6RemoteV6ServerV13SearchSupportVwCP(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t _s6RemoteV6ServerV11ListSupportVwet(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t _s6RemoteV6ServerV11ListSupportVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100087034);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6RemoteV6ServerV11ListSupportVMa()
{
  return &_s6RemoteV6ServerV11ListSupportVN;
}

ValueMetadata *_s6RemoteV6ServerV16NamespaceSupportOMa()
{
  return &_s6RemoteV6ServerV16NamespaceSupportON;
}

uint64_t _s6RemoteV6ServerV13SearchSupportVwet(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t _s6RemoteV6ServerV13SearchSupportVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000871DCLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6RemoteV6ServerV13SearchSupportVMa()
{
  return &_s6RemoteV6ServerV13SearchSupportVN;
}

ValueMetadata *_s6RemoteV6ServerV23SequenceNumbersBehaviorOMa()
{
  return &_s6RemoteV6ServerV23SequenceNumbersBehaviorON;
}

ValueMetadata *_s6RemoteV6ServerV16CondStoreSupportOMa()
{
  return &_s6RemoteV6ServerV16CondStoreSupportON;
}

ValueMetadata *_s6RemoteV6ServerV17GmailLabelSupportOMa()
{
  return &_s6RemoteV6ServerV17GmailLabelSupportON;
}

ValueMetadata *_s6RemoteV6ServerV11MoveSupportOMa()
{
  return &_s6RemoteV6ServerV11MoveSupportON;
}

unint64_t sub_100087258()
{
  unint64_t result = qword_10070B428;
  if (!qword_10070B428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B428);
  }
  return result;
}

unint64_t sub_1000872B0()
{
  unint64_t result = qword_10070B430;
  if (!qword_10070B430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B430);
  }
  return result;
}

unint64_t sub_100087308()
{
  unint64_t result = qword_10070B438;
  if (!qword_10070B438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B438);
  }
  return result;
}

unint64_t sub_100087360()
{
  unint64_t result = qword_10070B440;
  if (!qword_10070B440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B440);
  }
  return result;
}

unint64_t sub_1000873B8()
{
  unint64_t result = qword_10070B448;
  if (!qword_10070B448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B448);
  }
  return result;
}

unint64_t sub_100087410()
{
  unint64_t result = qword_10070B450;
  if (!qword_10070B450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B450);
  }
  return result;
}

unint64_t sub_100087468()
{
  unint64_t result = qword_10070B458;
  if (!qword_10070B458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B458);
  }
  return result;
}

unint64_t sub_1000874C0()
{
  unint64_t result = qword_10070B460;
  if (!qword_10070B460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B460);
  }
  return result;
}

ValueMetadata *_s6RemoteV6ServerV17SpecialUseSupportOMa()
{
  return &_s6RemoteV6ServerV17SpecialUseSupportON;
}

ValueMetadata *_s6RemoteV6ServerV13SearchSupportV21ExtendedSearchSupportOMa()
{
  return &_s6RemoteV6ServerV13SearchSupportV21ExtendedSearchSupportON;
}

unsigned char *_s6RemoteV6ServerV11MoveSupportOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100087600);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6RemoteV6ServerV13SearchSupportV18PagesSearchSupportOMa()
{
  return &_s6RemoteV6ServerV13SearchSupportV18PagesSearchSupportON;
}

unint64_t sub_10008763C()
{
  unint64_t result = qword_10070B468;
  if (!qword_10070B468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B468);
  }
  return result;
}

unint64_t sub_100087694()
{
  unint64_t result = qword_10070B470;
  if (!qword_10070B470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B470);
  }
  return result;
}

unint64_t sub_1000876EC()
{
  unint64_t result = qword_10070B478;
  if (!qword_10070B478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B478);
  }
  return result;
}

uint64_t sub_10008775C(uint64_t *a1, uint64_t *a2)
{
  return sub_10008AA28(*a1, *a2);
}

uint64_t sub_10008776C()
{
  sub_10008973C(v0+ OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped, _s13SelectedStateV7WrappedVMa);
  return swift_deallocClassInstance();
}

uint64_t sub_1000877E4()
{
  return _s13SelectedStateV8_StorageCMa(0);
}

uint64_t _s13SelectedStateV8_StorageCMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070B4B0);
}

uint64_t sub_10008780C()
{
  uint64_t result = _s13SelectedStateV7WrappedVMa(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t _s13SelectedStateV7WrappedVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070B590);
}

void *sub_1000878BC(void *a1, void *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v53 = *a2;
    *a1 = *a2;
    unint64_t v54 = (void *)(v53 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    unsigned int v6 = (char *)a1 + v5;
    BOOL v7 = (char *)a2 + v5;
    *(void *)unsigned int v6 = *(void *)((char *)a2 + v5);
    v6[12] = *((unsigned char *)a2 + v5 + 12);
    *((_DWORD *)v6 + 2) = *(_DWORD *)((char *)a2 + v5 + 8);
    v6[20] = *((unsigned char *)a2 + v5 + 20);
    *((_DWORD *)v6 + 4) = *(_DWORD *)((char *)a2 + v5 + 16);
    v6[32] = *((unsigned char *)a2 + v5 + 32);
    *((void *)v6 + 3) = *(void *)((char *)a2 + v5 + 24);
    uint64_t v8 = *(void *)((char *)a2 + v5 + 48);
    *((void *)v6 + 5) = *(void *)((char *)a2 + v5 + 40);
    *((void *)v6 + 6) = v8;
    uint64_t v9 = *(void *)((char *)a2 + v5 + 64);
    *((void *)v6 + 7) = *(void *)((char *)a2 + v5 + 56);
    *((void *)v6 + 8) = v9;
    uint64_t v10 = *(void *)((char *)a2 + v5 + 80);
    *((void *)v6 + 9) = *(void *)((char *)a2 + v5 + 72);
    *((void *)v6 + 10) = v10;
    uint64_t v12 = *(void *)((char *)a2 + v5 + 88);
    uint64_t v11 = *(void *)((char *)a2 + v5 + 96);
    *((void *)v6 + 11) = v12;
    *((void *)v6 + 12) = v11;
    uint64_t v13 = *((void *)v7 + 14);
    *((void *)v6 + 13) = *((void *)v7 + 13);
    *((void *)v6 + 14) = v13;
    v6[120] = v7[120];
    uint64_t v14 = *((void *)v7 + 17);
    *((void *)v6 + 16) = *((void *)v7 + 16);
    *((void *)v6 + 17) = v14;
    v6[148] = v7[148];
    *((_DWORD *)v6 + 36) = *((_DWORD *)v7 + 36);
    uint64_t v96 = *((void *)v7 + 20);
    *((void *)v6 + 19) = *((void *)v7 + 19);
    *((void *)v6 + 20) = v96;
    uint64_t v102 = *((void *)v7 + 22);
    *((void *)v6 + 21) = *((void *)v7 + 21);
    *((void *)v6 + 22) = v102;
    int v101 = (int *)type metadata accessor for MailboxSyncState();
    uint64_t v15 = v101[12];
    unint64_t v16 = &v6[v15];
    double v17 = &v7[v15];
    long long v18 = *(_OWORD *)&v7[v15 + 24];
    *(_OWORD *)&v6[v15 + 24] = v18;
    uint64_t v19 = v18;
    Swift::UInt64 v95 = **(void (***)(char *, char *, uint64_t))(v18 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v95(v16, v17, v19);
    uint64_t v20 = *((void *)v17 + 5);
    LOBYTE(v8) = v17[48];
    sub_10003C120(v20, v8);
    *((void *)v16 + 5) = v20;
    v16[48] = v8;
    uint64_t v21 = *(int *)(type metadata accessor for PendingServerResponses() + 24);
    char v22 = &v16[v21];
    uint64_t v23 = &v17[v21];
    uint64_t v24 = sub_10000566C(&qword_100709E60);
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    v25(v22, v23, v24);
    uint64_t v26 = v101[13];
    unint64_t v27 = &v6[v26];
    *unint64_t v27 = v7[v26];
    char v28 = &v7[v26];
    os_log_t v98 = &v6[v26];
    int v100 = &v7[v26];
    *(_WORD *)(v27 + 1) = *(_WORD *)&v7[v26 + 1];
    char v29 = &v6[v26];
    uint64_t v97 = type metadata accessor for PendingPersistenceUpdates();
    uint64_t v30 = *(int *)(v97 + 28);
    uint64_t v31 = &v29[v30];
    unint64_t v32 = &v28[v30];
    *(void *)uint64_t v31 = *(void *)&v28[v30];
    uint64_t v33 = type metadata accessor for MessagesPendingDownload();
    uint64_t v34 = *(int *)(v33 + 20);
    uint64_t v35 = &v31[v34];
    uint64_t v36 = &v32[v34];
    swift_bridgeObjectRetain();
    v25(v35, v36, v24);
    uint64_t v37 = *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
    char v38 = &v31[v37];
    char v39 = &v32[v37];
    *(void *)char v38 = *(void *)v39;
    uint64_t v40 = *(int *)(v33 + 20);
    uint64_t v41 = &v38[v40];
    unint64_t v42 = &v39[v40];
    swift_bridgeObjectRetain();
    v25(v41, v42, v24);
    uint64_t v43 = *(int *)(v97 + 32);
    uint64_t v44 = &v98[v43];
    uint64_t v99 = v24;
    v25(v44, &v100[v43], v24);
    *(void *)&v6[v101[14]] = *(void *)&v7[v101[14]];
    uint64_t v45 = v101[15];
    char v46 = &v6[v45];
    uint64_t v47 = &v7[v45];
    uint64_t v48 = type metadata accessor for MessageBatches(0);
    uint64_t v49 = *(void *)(v48 - 8);
    char v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
    swift_bridgeObjectRetain();
    if (v50(v47, 1, v48))
    {
      uint64_t v51 = sub_10000566C(&qword_10070A338);
      memcpy(v46, v47, *(void *)(*(void *)(v51 - 8) + 64));
      uint64_t v52 = v99;
    }
    else
    {
      uint64_t v55 = *((void *)v47 + 1);
      *(void *)char v46 = *(void *)v47;
      *((void *)v46 + 1) = v55;
      uint64_t v56 = *(int *)(v48 + 24);
      BOOL v57 = &v46[v56];
      char v58 = &v47[v56];
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_10000566C(&qword_100709E30);
      uint64_t v60 = *(void *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        uint64_t v61 = sub_10000566C(&qword_10070A000);
        memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
        uint64_t v52 = v99;
      }
      else
      {
        char v62 = v57;
        char v63 = v58;
        char v64 = v57;
        uint64_t v52 = v99;
        v25(v62, v63, v99);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v64, 0, 1, v59);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    uint64_t v65 = v101[16];
    char v66 = &v6[v65];
    uint64_t v67 = &v7[v65];
    uint64_t v68 = type metadata accessor for NewestMessages();
    uint64_t v69 = *(void *)(v68 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
    {
      uint64_t v70 = sub_10000566C(&qword_10070A390);
      memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      v25(v66, v67, v52);
      *(void *)&v66[*(int *)(v68 + 20)] = *(void *)&v67[*(int *)(v68 + 20)];
      *(void *)&v66[*(int *)(v68 + 24)] = *(void *)&v67[*(int *)(v68 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
    }
    uint64_t v71 = v101[17];
    int16x8_t v72 = &v6[v71];
    char v73 = &v7[v71];
    uint64_t v74 = _s15MissingMessagesOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(_DWORD *)int16x8_t v72 = *(_DWORD *)v73;
      v72[4] = v73[4];
      uint64_t v84 = _s15MissingMessagesO8CompleteVMa(0);
      v25(&v72[*(int *)(v84 + 20)], &v73[*(int *)(v84 + 20)], v52);
      v72[*(int *)(v84 + 24)] = v73[*(int *)(v84 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
    }
    else
    {
      v25(v72, v73, v52);
      uint64_t v76 = _s15MissingMessagesO8ProgressVMa(0);
      v25(&v72[*(int *)(v76 + 20)], &v73[*(int *)(v76 + 20)], v52);
      uint64_t v77 = *(int *)(v76 + 24);
      uint64_t v78 = &v72[v77];
      uint64_t v79 = &v73[v77];
      *(_DWORD *)uint64_t v78 = *(_DWORD *)v79;
      v78[4] = v79[4];
      uint64_t v80 = _s15MissingMessagesO10IncompleteVMa(0);
      uint64_t v81 = *(int *)(v80 + 20);
      unint64_t v82 = &v72[v81];
      uint64_t v83 = &v73[v81];
      *(_DWORD *)unint64_t v82 = *(_DWORD *)v83;
      v82[4] = v83[4];
      v25(&v72[*(int *)(v80 + 24)], &v73[*(int *)(v80 + 24)], v52);
      swift_storeEnumTagMultiPayload();
    }
    unint64_t v54 = a1;
    uint64_t v85 = v101[18];
    BOOL v86 = &v6[v85];
    __int16 v87 = &v7[v85];
    *(void *)BOOL v86 = *(void *)v87;
    *((_WORD *)v86 + 4) = *((_WORD *)v87 + 4);
    uint64_t v88 = *(int *)(a3 + 24);
    __int16 v89 = (char *)a1 + v88;
    uint64_t v90 = (char *)a2 + v88;
    *(_DWORD *)__int16 v89 = *(_DWORD *)v90;
    v89[4] = v90[4];
  }
  return v54;
}

uint64_t sub_1000880E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v3 = (int *)type metadata accessor for MailboxSyncState();
  uint64_t v4 = v2 + v3[12];
  _s13IMAP2Behavior4TaskOwxx_0(v4);
  sub_10005A3F4(*(void *)(v4 + 40), *(unsigned char *)(v4 + 48));
  uint64_t v5 = v4 + *(int *)(type metadata accessor for PendingServerResponses() + 24);
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v25)((void *)(v6 - 8), v5, v6);
  uint64_t v7 = v2 + v3[13];
  uint64_t v8 = type metadata accessor for PendingPersistenceUpdates();
  uint64_t v9 = v7 + *(int *)(v8 + 28);
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for MessagesPendingDownload();
  v25(v9 + *(int *)(v10 + 20), v6);
  uint64_t v11 = v9 + *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
  swift_bridgeObjectRelease();
  v25(v11 + *(int *)(v10 + 20), v6);
  v25(v7 + *(int *)(v8 + 32), v6);
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v3[15];
  uint64_t v13 = type metadata accessor for MessageBatches(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = v12 + *(int *)(v13 + 24);
    uint64_t v15 = sub_10000566C(&qword_100709E30);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15)) {
      v25(v14, v6);
    }
  }
  uint64_t v16 = v2 + v3[16];
  uint64_t v17 = type metadata accessor for NewestMessages();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17)) {
    v25(v16, v6);
  }
  uint64_t v18 = v2 + v3[17];
  _s15MissingMessagesOMa(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v21 = _s15MissingMessagesO8CompleteVMa(0);
    uint64_t v23 = 5;
    char v22 = (uint64_t (*)(uint64_t, uint64_t))v25;
  }
  else
  {
    if (result) {
      return result;
    }
    v25(v18, v6);
    uint64_t v20 = _s15MissingMessagesO8ProgressVMa(0);
    v25(v18 + *(int *)(v20 + 20), v6);
    uint64_t v21 = _s15MissingMessagesO10IncompleteVMa(0);
    char v22 = (uint64_t (*)(uint64_t, uint64_t))v25;
    uint64_t v23 = 6;
  }
  uint64_t v24 = v18 + *(int *)(v21 + 4 * v23);
  return v22(v24, v6);
}

_DWORD *sub_100088498(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (char *)a1 + v3;
  uint64_t v5 = (char *)a2 + v3;
  *(void *)uint64_t v4 = *(void *)((char *)a2 + v3);
  v4[12] = *((unsigned char *)a2 + v3 + 12);
  *((_DWORD *)v4 + 2) = *(_DWORD *)((char *)a2 + v3 + 8);
  v4[20] = *((unsigned char *)a2 + v3 + 20);
  *((_DWORD *)v4 + 4) = *(_DWORD *)((char *)a2 + v3 + 16);
  v4[32] = *((unsigned char *)a2 + v3 + 32);
  *((void *)v4 + 3) = *(void *)((char *)a2 + v3 + 24);
  uint64_t v6 = *(void *)((char *)a2 + v3 + 48);
  *((void *)v4 + 5) = *(void *)((char *)a2 + v3 + 40);
  *((void *)v4 + 6) = v6;
  uint64_t v7 = *(void *)((char *)a2 + v3 + 64);
  *((void *)v4 + 7) = *(void *)((char *)a2 + v3 + 56);
  *((void *)v4 + 8) = v7;
  uint64_t v8 = *(void *)((char *)a2 + v3 + 80);
  *((void *)v4 + 9) = *(void *)((char *)a2 + v3 + 72);
  *((void *)v4 + 10) = v8;
  uint64_t v10 = *(void *)((char *)a2 + v3 + 88);
  uint64_t v9 = *(void *)((char *)a2 + v3 + 96);
  *((void *)v4 + 11) = v10;
  *((void *)v4 + 12) = v9;
  uint64_t v11 = *((void *)v5 + 14);
  *((void *)v4 + 13) = *((void *)v5 + 13);
  *((void *)v4 + 14) = v11;
  v4[120] = v5[120];
  uint64_t v12 = *((void *)v5 + 17);
  *((void *)v4 + 16) = *((void *)v5 + 16);
  *((void *)v4 + 17) = v12;
  v4[148] = v5[148];
  *((_DWORD *)v4 + 36) = *((_DWORD *)v5 + 36);
  uint64_t v92 = *((void *)v5 + 20);
  *((void *)v4 + 19) = *((void *)v5 + 19);
  *((void *)v4 + 20) = v92;
  uint64_t v98 = *((void *)v5 + 22);
  *((void *)v4 + 21) = *((void *)v5 + 21);
  *((void *)v4 + 22) = v98;
  uint64_t v97 = (int *)type metadata accessor for MailboxSyncState();
  uint64_t v13 = v97[12];
  uint64_t v14 = &v4[v13];
  uint64_t v15 = &v5[v13];
  long long v16 = *(_OWORD *)&v5[v13 + 24];
  *(_OWORD *)&v4[v13 + 24] = v16;
  uint64_t v17 = v16;
  uint64_t v91 = **(void (***)(char *, char *, uint64_t))(v16 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v91(v14, v15, v17);
  uint64_t v18 = *((void *)v15 + 5);
  LOBYTE(v6) = v15[48];
  sub_10003C120(v18, v6);
  *((void *)v14 + 5) = v18;
  v14[48] = v6;
  uint64_t v19 = *(int *)(type metadata accessor for PendingServerResponses() + 24);
  uint64_t v20 = &v14[v19];
  uint64_t v21 = &v15[v19];
  uint64_t v22 = sub_10000566C(&qword_100709E60);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
  v23(v20, v21, v22);
  uint64_t v24 = v97[13];
  uint64_t v25 = &v4[v24];
  char *v25 = v5[v24];
  uint64_t v26 = &v5[v24];
  uint64_t v94 = &v4[v24];
  uint64_t v96 = &v5[v24];
  *(_WORD *)(v25 + 1) = *(_WORD *)&v5[v24 + 1];
  unint64_t v27 = &v4[v24];
  uint64_t v93 = type metadata accessor for PendingPersistenceUpdates();
  uint64_t v28 = *(int *)(v93 + 28);
  char v29 = &v27[v28];
  uint64_t v30 = &v26[v28];
  *(void *)char v29 = *(void *)&v26[v28];
  uint64_t v31 = type metadata accessor for MessagesPendingDownload();
  uint64_t v32 = *(int *)(v31 + 20);
  uint64_t v33 = &v29[v32];
  uint64_t v34 = &v30[v32];
  swift_bridgeObjectRetain();
  v23(v33, v34, v22);
  uint64_t v35 = *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
  uint64_t v36 = &v29[v35];
  uint64_t v37 = &v30[v35];
  *(void *)uint64_t v36 = *(void *)v37;
  uint64_t v38 = *(int *)(v31 + 20);
  char v39 = &v36[v38];
  uint64_t v40 = &v37[v38];
  swift_bridgeObjectRetain();
  v23(v39, v40, v22);
  uint64_t v41 = *(int *)(v93 + 32);
  unint64_t v42 = &v94[v41];
  uint64_t v95 = v22;
  v23(v42, &v96[v41], v22);
  *(void *)&v4[v97[14]] = *(void *)&v5[v97[14]];
  uint64_t v43 = v97[15];
  uint64_t v44 = &v4[v43];
  uint64_t v45 = &v5[v43];
  uint64_t v46 = type metadata accessor for MessageBatches(0);
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  swift_bridgeObjectRetain();
  if (v48(v45, 1, v46))
  {
    uint64_t v49 = sub_10000566C(&qword_10070A338);
    memcpy(v44, v45, *(void *)(*(void *)(v49 - 8) + 64));
    uint64_t v50 = v95;
  }
  else
  {
    uint64_t v51 = *((void *)v45 + 1);
    *(void *)uint64_t v44 = *(void *)v45;
    *((void *)v44 + 1) = v51;
    uint64_t v52 = *(int *)(v46 + 24);
    uint64_t v53 = &v44[v52];
    unint64_t v54 = &v45[v52];
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_10000566C(&qword_100709E30);
    uint64_t v56 = *(void *)(v55 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
    {
      uint64_t v57 = sub_10000566C(&qword_10070A000);
      memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
      uint64_t v50 = v95;
    }
    else
    {
      char v58 = v53;
      uint64_t v59 = v54;
      uint64_t v60 = v53;
      uint64_t v50 = v95;
      v23(v58, v59, v95);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v60, 0, 1, v55);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  uint64_t v61 = v97[16];
  char v62 = &v4[v61];
  char v63 = &v5[v61];
  uint64_t v64 = type metadata accessor for NewestMessages();
  uint64_t v65 = *(void *)(v64 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
  {
    uint64_t v66 = sub_10000566C(&qword_10070A390);
    memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
  }
  else
  {
    v23(v62, v63, v50);
    *(void *)&v62[*(int *)(v64 + 20)] = *(void *)&v63[*(int *)(v64 + 20)];
    *(void *)&v62[*(int *)(v64 + 24)] = *(void *)&v63[*(int *)(v64 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
  }
  uint64_t v67 = v97[17];
  uint64_t v68 = &v4[v67];
  uint64_t v69 = &v5[v67];
  uint64_t v70 = _s15MissingMessagesOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_DWORD *)uint64_t v68 = *(_DWORD *)v69;
    v68[4] = v69[4];
    uint64_t v80 = _s15MissingMessagesO8CompleteVMa(0);
    v23(&v68[*(int *)(v80 + 20)], &v69[*(int *)(v80 + 20)], v50);
    v68[*(int *)(v80 + 24)] = v69[*(int *)(v80 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
  }
  else
  {
    v23(v68, v69, v50);
    uint64_t v72 = _s15MissingMessagesO8ProgressVMa(0);
    v23(&v68[*(int *)(v72 + 20)], &v69[*(int *)(v72 + 20)], v50);
    uint64_t v73 = *(int *)(v72 + 24);
    uint64_t v74 = &v68[v73];
    uint64_t v75 = &v69[v73];
    *(_DWORD *)uint64_t v74 = *(_DWORD *)v75;
    v74[4] = v75[4];
    uint64_t v76 = _s15MissingMessagesO10IncompleteVMa(0);
    uint64_t v77 = *(int *)(v76 + 20);
    uint64_t v78 = &v68[v77];
    uint64_t v79 = &v69[v77];
    *(_DWORD *)uint64_t v78 = *(_DWORD *)v79;
    v78[4] = v79[4];
    v23(&v68[*(int *)(v76 + 24)], &v69[*(int *)(v76 + 24)], v50);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t result = a1;
  uint64_t v82 = v97[18];
  uint64_t v83 = &v4[v82];
  uint64_t v84 = &v5[v82];
  *(void *)uint64_t v83 = *(void *)v84;
  *((_WORD *)v83 + 4) = *((_WORD *)v84 + 4);
  uint64_t v85 = *(int *)(a3 + 24);
  BOOL v86 = (char *)a1 + v85;
  __int16 v87 = (char *)a2 + v85;
  *(_DWORD *)BOOL v86 = *(_DWORD *)v87;
  v86[4] = v87[4];
  return result;
}

_DWORD *sub_100088C68(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (char *)a1 + v3;
  uint64_t v5 = (char *)a2 + v3;
  *(void *)uint64_t v4 = *(void *)((char *)a2 + v3);
  LODWORD(v3) = *(_DWORD *)((char *)a2 + v3 + 8);
  v4[12] = v5[12];
  *((_DWORD *)v4 + 2) = v3;
  LODWORD(v3) = *((_DWORD *)v5 + 4);
  v4[20] = v5[20];
  *((_DWORD *)v4 + 4) = v3;
  uint64_t v6 = *((void *)v5 + 3);
  v4[32] = v5[32];
  *((void *)v4 + 3) = v6;
  *((void *)v4 + 5) = *((void *)v5 + 5);
  *((void *)v4 + 6) = *((void *)v5 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v4 + 7) = *((void *)v5 + 7);
  *((void *)v4 + 8) = *((void *)v5 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v4 + 9) = *((void *)v5 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v4 + 10) = *((void *)v5 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v4 + 11) = *((void *)v5 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v4 + 12) = *((void *)v5 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v4 + 13) = *((void *)v5 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v4 + 14) = *((void *)v5 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4[120] = v5[120];
  *((void *)v4 + 16) = *((void *)v5 + 16);
  *((void *)v4 + 17) = *((void *)v5 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4[144] = v5[144];
  v4[145] = v5[145];
  v4[146] = v5[146];
  v4[147] = v5[147];
  v4[148] = v5[148];
  *((void *)v4 + 19) = *((void *)v5 + 19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v4 + 20) = *((void *)v5 + 20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v4 + 21) = *((void *)v5 + 21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v4 + 22) = *((void *)v5 + 22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for MailboxSyncState();
  uint64_t v8 = *(int *)(v7 + 48);
  uint64_t v9 = v7;
  uint64_t v102 = (int *)v7;
  uint64_t v10 = &v4[v8];
  uint64_t v11 = &v5[v8];
  sub_100022498((uint64_t *)&v4[v8], (uint64_t *)&v5[v8]);
  uint64_t v12 = *((void *)v11 + 5);
  char v13 = v11[48];
  sub_10003C120(v12, v13);
  uint64_t v14 = *((void *)v10 + 5);
  char v15 = v10[48];
  *((void *)v10 + 5) = v12;
  v10[48] = v13;
  sub_10005A3F4(v14, v15);
  uint64_t v16 = *(int *)(type metadata accessor for PendingServerResponses() + 24);
  uint64_t v17 = &v10[v16];
  uint64_t v18 = &v11[v16];
  uint64_t v19 = sub_10000566C(&qword_100709E60);
  uint64_t v94 = *(void *)(v19 - 8);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v94 + 24);
  v20(v17, v18, v19);
  int v100 = v20;
  uint64_t v21 = *(int *)(v9 + 52);
  uint64_t v22 = &v4[v21];
  uint64_t v23 = &v5[v21];
  *uint64_t v22 = v5[v21];
  v22[1] = v5[v21 + 1];
  v22[2] = v5[v21 + 2];
  uint64_t v98 = type metadata accessor for PendingPersistenceUpdates();
  uint64_t v24 = *(int *)(v98 + 28);
  uint64_t v25 = &v22[v24];
  uint64_t v26 = &v23[v24];
  *(void *)&v22[v24] = *(void *)&v23[v24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = type metadata accessor for MessagesPendingDownload();
  v20(&v25[*(int *)(v27 + 20)], &v26[*(int *)(v27 + 20)], v19);
  uint64_t v28 = *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
  char v29 = &v25[v28];
  uint64_t v30 = &v26[v28];
  *(void *)&v25[v28] = *(void *)v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v100(&v29[*(int *)(v27 + 20)], &v30[*(int *)(v27 + 20)], v19);
  uint64_t v31 = *(int *)(v98 + 32);
  uint64_t v99 = v19;
  v100(&v22[v31], &v23[v31], v19);
  *(void *)&v4[v102[14]] = *(void *)&v5[v102[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = v102[15];
  uint64_t v33 = &v4[v32];
  uint64_t v34 = &v5[v32];
  uint64_t v35 = type metadata accessor for MessageBatches(0);
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  LODWORD(v23) = v37(v33, 1, v35);
  int v38 = v37(v34, 1, v35);
  if (!v23)
  {
    if (!v38)
    {
      *(void *)uint64_t v33 = *(void *)v34;
      *((void *)v33 + 1) = *((void *)v34 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v48 = *(int *)(v35 + 24);
      uint64_t v49 = (uint64_t)&v33[v48];
      uint64_t v50 = &v34[v48];
      uint64_t v51 = sub_10000566C(&qword_100709E30);
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
      int v54 = v53(v49, 1, v51);
      int v55 = v53((uint64_t)v50, 1, v51);
      if (v54)
      {
        if (!v55)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v94 + 16))(v49, v50, v99);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v55)
        {
          v100((char *)v49, v50, v99);
          goto LABEL_14;
        }
        sub_1000896DC(v49);
      }
      size_t v45 = *(void *)(*(void *)(sub_10000566C(&qword_10070A000) - 8) + 64);
      uint64_t v46 = (void *)v49;
      uint64_t v47 = v50;
LABEL_8:
      memcpy(v46, v47, v45);
      goto LABEL_14;
    }
    sub_10008973C((uint64_t)v33, type metadata accessor for MessageBatches);
LABEL_7:
    size_t v45 = *(void *)(*(void *)(sub_10000566C(&qword_10070A338) - 8) + 64);
    uint64_t v46 = v33;
    uint64_t v47 = v34;
    goto LABEL_8;
  }
  if (v38) {
    goto LABEL_7;
  }
  *(void *)uint64_t v33 = *(void *)v34;
  *((void *)v33 + 1) = *((void *)v34 + 1);
  uint64_t v39 = *(int *)(v35 + 24);
  uint64_t v40 = &v33[v39];
  uint64_t v41 = &v34[v39];
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_10000566C(&qword_100709E30);
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    uint64_t v44 = sub_10000566C(&qword_10070A000);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v40, v41, v99);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
LABEL_14:
  uint64_t v56 = v102[16];
  uint64_t v57 = &v4[v56];
  char v58 = &v5[v56];
  uint64_t v59 = type metadata accessor for NewestMessages();
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48);
  int v62 = v61(v57, 1, v59);
  int v63 = v61(v58, 1, v59);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v57, v58, v99);
      *(void *)&v57[*(int *)(v59 + 20)] = *(void *)&v58[*(int *)(v59 + 20)];
      *(void *)&v57[*(int *)(v59 + 24)] = *(void *)&v58[*(int *)(v59 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v63)
  {
    sub_10008973C((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for NewestMessages);
LABEL_19:
    uint64_t v64 = sub_10000566C(&qword_10070A390);
    memcpy(v57, v58, *(void *)(*(void *)(v64 - 8) + 64));
    goto LABEL_20;
  }
  v100(v57, v58, v99);
  *(void *)&v57[*(int *)(v59 + 20)] = *(void *)&v58[*(int *)(v59 + 20)];
  *(void *)&v57[*(int *)(v59 + 24)] = *(void *)&v58[*(int *)(v59 + 24)];
LABEL_20:
  uint64_t v65 = a1;
  uint64_t v66 = a3;
  if (a1 != a2)
  {
    uint64_t v67 = v102[17];
    uint64_t v68 = &v4[v67];
    uint64_t v69 = &v5[v67];
    sub_10008973C((uint64_t)&v4[v67], _s15MissingMessagesOMa);
    uint64_t v70 = _s15MissingMessagesOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      int v84 = *(_DWORD *)v69;
      v68[4] = v69[4];
      *(_DWORD *)uint64_t v68 = v84;
      uint64_t v85 = _s15MissingMessagesO8CompleteVMa(0);
      (*(void (**)(char *, char *, uint64_t))(v94 + 16))(&v68[*(int *)(v85 + 20)], &v69[*(int *)(v85 + 20)], v99);
      v68[*(int *)(v85 + 24)] = v69[*(int *)(v85 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
      v72(v68, v69, v99);
      uint64_t v73 = v72;
      uint64_t v97 = v72;
      uint64_t v74 = _s15MissingMessagesO8ProgressVMa(0);
      v73(&v68[*(int *)(v74 + 20)], &v69[*(int *)(v74 + 20)], v99);
      uint64_t v75 = *(int *)(v74 + 24);
      uint64_t v76 = &v68[v75];
      uint64_t v77 = &v69[v75];
      char v78 = v77[4];
      *(_DWORD *)uint64_t v76 = *(_DWORD *)v77;
      v76[4] = v78;
      uint64_t v79 = _s15MissingMessagesO10IncompleteVMa(0);
      uint64_t v80 = *(int *)(v79 + 20);
      uint64_t v81 = &v68[v80];
      uint64_t v82 = &v69[v80];
      char v83 = v82[4];
      *(_DWORD *)uint64_t v81 = *(_DWORD *)v82;
      v81[4] = v83;
      uint64_t v66 = a3;
      v97(&v68[*(int *)(v79 + 24)], &v69[*(int *)(v79 + 24)], v99);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v86 = v102[18];
  __int16 v87 = &v4[v86];
  uint64_t v88 = &v5[v86];
  uint64_t v89 = *(void *)v88;
  *((_WORD *)v87 + 4) = *((_WORD *)v88 + 4);
  *(void *)__int16 v87 = v89;
  uint64_t v90 = *(int *)(v66 + 24);
  uint64_t v91 = (char *)v65 + v90;
  uint64_t v92 = (char *)a2 + v90;
  LODWORD(v89) = *(_DWORD *)v92;
  v91[4] = v92[4];
  *(_DWORD *)uint64_t v91 = v89;
  return v65;
}

uint64_t sub_1000896DC(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100709E30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008973C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_DWORD *sub_10008979C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (char *)a1 + v3;
  uint64_t v5 = (char *)a2 + v3;
  *(void *)uint64_t v4 = *(void *)((char *)a2 + v3);
  v4[12] = *((unsigned char *)a2 + v3 + 12);
  *((_DWORD *)v4 + 2) = *(_DWORD *)((char *)a2 + v3 + 8);
  v4[20] = *((unsigned char *)a2 + v3 + 20);
  *((_DWORD *)v4 + 4) = *(_DWORD *)((char *)a2 + v3 + 16);
  v4[32] = *((unsigned char *)a2 + v3 + 32);
  *((void *)v4 + 3) = *(void *)((char *)a2 + v3 + 24);
  long long v6 = *(_OWORD *)((char *)a2 + v3 + 40);
  long long v7 = *(_OWORD *)((char *)a2 + v3 + 56);
  *(_OWORD *)(v4 + 72) = *(_OWORD *)((char *)a2 + v3 + 72);
  *(_OWORD *)(v4 + 56) = v7;
  *(_OWORD *)(v4 + 40) = v6;
  long long v8 = *(_OWORD *)((char *)a2 + v3 + 88);
  long long v9 = *(_OWORD *)((char *)a2 + v3 + 104);
  long long v10 = *(_OWORD *)((char *)a2 + v3 + 120);
  *((void *)v4 + 17) = *(void *)((char *)a2 + v3 + 136);
  *(_OWORD *)(v4 + 120) = v10;
  *(_OWORD *)(v4 + 104) = v9;
  *(_OWORD *)(v4 + 88) = v8;
  LODWORD(v3) = *(_DWORD *)((char *)a2 + v3 + 144);
  v4[148] = v5[148];
  *((_DWORD *)v4 + 36) = v3;
  *(_OWORD *)(v4 + 152) = *(_OWORD *)(v5 + 152);
  uint64_t v11 = *((void *)v5 + 22);
  *((void *)v4 + 21) = *((void *)v5 + 21);
  *((void *)v4 + 22) = v11;
  uint64_t v12 = type metadata accessor for MailboxSyncState();
  uint64_t v13 = *(int *)(v12 + 48);
  uint64_t v14 = v12;
  uint64_t v76 = (int *)v12;
  char v15 = &v4[v13];
  uint64_t v16 = &v5[v13];
  long long v17 = *(_OWORD *)&v5[v13 + 16];
  *(_OWORD *)char v15 = *(_OWORD *)&v5[v13];
  *((_OWORD *)v15 + 1) = v17;
  uint64_t v18 = *(void *)&v5[v13 + 40];
  *((void *)v15 + 4) = *(void *)&v5[v13 + 32];
  *((void *)v15 + 5) = v18;
  v15[48] = v5[v13 + 48];
  uint64_t v19 = *(int *)(type metadata accessor for PendingServerResponses() + 24);
  uint64_t v20 = &v15[v19];
  uint64_t v21 = &v16[v19];
  uint64_t v22 = sub_10000566C(&qword_100709E60);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
  v23(v20, v21, v22);
  uint64_t v24 = *(int *)(v14 + 52);
  uint64_t v25 = &v4[v24];
  uint64_t v26 = &v5[v24];
  char *v25 = v5[v24];
  *(_WORD *)(v25 + 1) = *(_WORD *)&v5[v24 + 1];
  uint64_t v77 = type metadata accessor for PendingPersistenceUpdates();
  uint64_t v27 = *(int *)(v77 + 28);
  uint64_t v28 = &v25[v27];
  char v29 = &v26[v27];
  *(void *)&v25[v27] = *(void *)&v26[v27];
  uint64_t v30 = type metadata accessor for MessagesPendingDownload();
  v23(&v28[*(int *)(v30 + 20)], &v29[*(int *)(v30 + 20)], v22);
  uint64_t v31 = *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
  uint64_t v32 = &v28[v31];
  uint64_t v33 = &v29[v31];
  *(void *)uint64_t v32 = *(void *)v33;
  v23(&v32[*(int *)(v30 + 20)], &v33[*(int *)(v30 + 20)], v22);
  v23(&v25[*(int *)(v77 + 32)], &v26[*(int *)(v77 + 32)], v22);
  *(void *)&v4[v76[14]] = *(void *)&v5[v76[14]];
  uint64_t v34 = v76[15];
  uint64_t v35 = &v4[v34];
  uint64_t v36 = &v5[v34];
  uint64_t v37 = type metadata accessor for MessageBatches(0);
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    uint64_t v39 = sub_10000566C(&qword_10070A338);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    uint64_t v40 = *(int *)(v37 + 24);
    __dst = &v35[v40];
    uint64_t v41 = &v36[v40];
    uint64_t v42 = sub_10000566C(&qword_100709E30);
    uint64_t v43 = *(void *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      uint64_t v44 = sub_10000566C(&qword_10070A000);
      memcpy(__dst, v41, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      v23(__dst, v41, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v42);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  uint64_t v45 = v76[16];
  uint64_t v46 = &v4[v45];
  uint64_t v47 = &v5[v45];
  uint64_t v48 = type metadata accessor for NewestMessages();
  uint64_t v49 = *(void *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    uint64_t v50 = sub_10000566C(&qword_10070A390);
    memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    v23(v46, v47, v22);
    *(void *)&v46[*(int *)(v48 + 20)] = *(void *)&v47[*(int *)(v48 + 20)];
    *(void *)&v46[*(int *)(v48 + 24)] = *(void *)&v47[*(int *)(v48 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  uint64_t v51 = v76[17];
  uint64_t v52 = &v4[v51];
  uint64_t v53 = &v5[v51];
  uint64_t v54 = _s15MissingMessagesOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_DWORD *)uint64_t v52 = *(_DWORD *)v53;
    v52[4] = v53[4];
    uint64_t v64 = _s15MissingMessagesO8CompleteVMa(0);
    v23(&v52[*(int *)(v64 + 20)], &v53[*(int *)(v64 + 20)], v22);
    v52[*(int *)(v64 + 24)] = v53[*(int *)(v64 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    v23(v52, v53, v22);
    uint64_t v56 = _s15MissingMessagesO8ProgressVMa(0);
    v23(&v52[*(int *)(v56 + 20)], &v53[*(int *)(v56 + 20)], v22);
    uint64_t v57 = *(int *)(v56 + 24);
    char v58 = &v52[v57];
    uint64_t v59 = &v53[v57];
    *(_DWORD *)char v58 = *(_DWORD *)v59;
    v58[4] = v59[4];
    uint64_t v60 = _s15MissingMessagesO10IncompleteVMa(0);
    uint64_t v61 = *(int *)(v60 + 20);
    int v62 = &v52[v61];
    int v63 = &v53[v61];
    *(_DWORD *)int v62 = *(_DWORD *)v63;
    v62[4] = v63[4];
    v23(&v52[*(int *)(v60 + 24)], &v53[*(int *)(v60 + 24)], v22);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t result = a1;
  uint64_t v66 = v76[18];
  uint64_t v67 = &v4[v66];
  uint64_t v68 = &v5[v66];
  *(void *)uint64_t v67 = *(void *)v68;
  *((_WORD *)v67 + 4) = *((_WORD *)v68 + 4);
  uint64_t v69 = *(int *)(a3 + 24);
  uint64_t v70 = (char *)a1 + v69;
  uint64_t v71 = (char *)a2 + v69;
  *(_DWORD *)uint64_t v70 = *(_DWORD *)v71;
  v70[4] = v71[4];
  return result;
}

_DWORD *sub_100089E2C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (char *)a1 + v3;
  uint64_t v5 = (char *)a2 + v3;
  *(void *)uint64_t v4 = *(void *)((char *)a2 + v3);
  v4[12] = *((unsigned char *)a2 + v3 + 12);
  *((_DWORD *)v4 + 2) = *(_DWORD *)((char *)a2 + v3 + 8);
  v4[20] = *((unsigned char *)a2 + v3 + 20);
  *((_DWORD *)v4 + 4) = *(_DWORD *)((char *)a2 + v3 + 16);
  v4[32] = *((unsigned char *)a2 + v3 + 32);
  *((void *)v4 + 3) = *(void *)((char *)a2 + v3 + 24);
  uint64_t v6 = *(void *)((char *)a2 + v3 + 48);
  *((void *)v4 + 5) = *(void *)((char *)a2 + v3 + 40);
  *((void *)v4 + 6) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *((void *)v5 + 8);
  *((void *)v4 + 7) = *((void *)v5 + 7);
  *((void *)v4 + 8) = v7;
  swift_bridgeObjectRelease();
  *((void *)v4 + 9) = *((void *)v5 + 9);
  swift_bridgeObjectRelease();
  *((void *)v4 + 10) = *((void *)v5 + 10);
  swift_bridgeObjectRelease();
  *((void *)v4 + 11) = *((void *)v5 + 11);
  swift_bridgeObjectRelease();
  *((void *)v4 + 12) = *((void *)v5 + 12);
  swift_bridgeObjectRelease();
  *((void *)v4 + 13) = *((void *)v5 + 13);
  swift_bridgeObjectRelease();
  *((void *)v4 + 14) = *((void *)v5 + 14);
  swift_bridgeObjectRelease();
  v4[120] = v5[120];
  uint64_t v8 = *((void *)v5 + 17);
  *((void *)v4 + 16) = *((void *)v5 + 16);
  *((void *)v4 + 17) = v8;
  swift_bridgeObjectRelease();
  v4[144] = v5[144];
  v4[145] = v5[145];
  v4[146] = v5[146];
  v4[147] = v5[147];
  v4[148] = v5[148];
  *((void *)v4 + 19) = *((void *)v5 + 19);
  swift_bridgeObjectRelease();
  *((void *)v4 + 20) = *((void *)v5 + 20);
  swift_bridgeObjectRelease();
  *((void *)v4 + 21) = *((void *)v5 + 21);
  swift_bridgeObjectRelease();
  *((void *)v4 + 22) = *((void *)v5 + 22);
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for MailboxSyncState();
  uint64_t v10 = *(int *)(v9 + 48);
  uint64_t v11 = v9;
  int v101 = (int *)v9;
  uint64_t v12 = &v4[v10];
  uint64_t v13 = &v5[v10];
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v4[v10]);
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  uint64_t v15 = *((void *)v13 + 5);
  char v16 = v13[48];
  uint64_t v17 = *((void *)v12 + 5);
  char v18 = v12[48];
  *((void *)v12 + 4) = *((void *)v13 + 4);
  *((void *)v12 + 5) = v15;
  v12[48] = v16;
  sub_10005A3F4(v17, v18);
  uint64_t v19 = *(int *)(type metadata accessor for PendingServerResponses() + 24);
  uint64_t v20 = &v12[v19];
  uint64_t v21 = &v13[v19];
  uint64_t v22 = sub_10000566C(&qword_100709E60);
  uint64_t v94 = *(void *)(v22 - 8);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v94 + 40);
  v23(v20, v21, v22);
  uint64_t v24 = *(int *)(v11 + 52);
  uint64_t v25 = &v4[v24];
  uint64_t v26 = &v5[v24];
  char *v25 = v5[v24];
  v25[1] = v5[v24 + 1];
  v25[2] = v5[v24 + 2];
  uint64_t v100 = type metadata accessor for PendingPersistenceUpdates();
  uint64_t v27 = *(int *)(v100 + 28);
  uint64_t v28 = &v25[v27];
  char v29 = &v26[v27];
  *(void *)&v25[v27] = *(void *)&v26[v27];
  swift_bridgeObjectRelease();
  uint64_t v30 = type metadata accessor for MessagesPendingDownload();
  v23(&v28[*(int *)(v30 + 20)], &v29[*(int *)(v30 + 20)], v22);
  uint64_t v31 = *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
  uint64_t v32 = &v28[v31];
  uint64_t v33 = &v29[v31];
  *(void *)uint64_t v32 = *(void *)v33;
  swift_bridgeObjectRelease();
  v23(&v32[*(int *)(v30 + 20)], &v33[*(int *)(v30 + 20)], v22);
  uint64_t v95 = v22;
  uint64_t v93 = (void (*)(uint64_t, char *, uint64_t))v23;
  v23(&v25[*(int *)(v100 + 32)], &v26[*(int *)(v100 + 32)], v22);
  *(void *)&v4[v101[14]] = *(void *)&v5[v101[14]];
  swift_bridgeObjectRelease();
  uint64_t v34 = v101[15];
  uint64_t v35 = &v4[v34];
  uint64_t v36 = &v5[v34];
  uint64_t v37 = type metadata accessor for MessageBatches(0);
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  LODWORD(v32) = v39(v35, 1, v37);
  int v40 = v39(v36, 1, v37);
  if (!v32)
  {
    if (!v40)
    {
      uint64_t v50 = *((void *)v36 + 1);
      *(void *)uint64_t v35 = *(void *)v36;
      *((void *)v35 + 1) = v50;
      swift_bridgeObjectRelease();
      uint64_t v51 = *(int *)(v37 + 24);
      uint64_t v52 = (uint64_t)&v35[v51];
      uint64_t v53 = &v36[v51];
      uint64_t v54 = sub_10000566C(&qword_100709E30);
      uint64_t v55 = *(void *)(v54 - 8);
      uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
      int v57 = v56(v52, 1, v54);
      int v58 = v56((uint64_t)v53, 1, v54);
      if (v57)
      {
        if (!v58)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v94 + 32))(v52, v53, v95);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v58)
        {
          v93(v52, v53, v95);
          goto LABEL_14;
        }
        sub_1000896DC(v52);
      }
      size_t v47 = *(void *)(*(void *)(sub_10000566C(&qword_10070A000) - 8) + 64);
      uint64_t v48 = (void *)v52;
      uint64_t v49 = v53;
LABEL_8:
      memcpy(v48, v49, v47);
      goto LABEL_14;
    }
    sub_10008973C((uint64_t)v35, type metadata accessor for MessageBatches);
LABEL_7:
    size_t v47 = *(void *)(*(void *)(sub_10000566C(&qword_10070A338) - 8) + 64);
    uint64_t v48 = v35;
    uint64_t v49 = v36;
    goto LABEL_8;
  }
  if (v40) {
    goto LABEL_7;
  }
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  uint64_t v41 = *(int *)(v37 + 24);
  uint64_t v42 = &v35[v41];
  uint64_t v43 = &v36[v41];
  uint64_t v44 = sub_10000566C(&qword_100709E30);
  uint64_t v45 = *(void *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    uint64_t v46 = sub_10000566C(&qword_10070A000);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v42, v43, v95);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
LABEL_14:
  uint64_t v59 = v101[16];
  uint64_t v60 = &v4[v59];
  uint64_t v61 = &v5[v59];
  uint64_t v62 = type metadata accessor for NewestMessages();
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v64 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48);
  int v65 = v64(v60, 1, v62);
  int v66 = v64(v61, 1, v62);
  if (v65)
  {
    if (!v66)
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v60, v61, v95);
      *(void *)&v60[*(int *)(v62 + 20)] = *(void *)&v61[*(int *)(v62 + 20)];
      *(void *)&v60[*(int *)(v62 + 24)] = *(void *)&v61[*(int *)(v62 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v66)
  {
    sub_10008973C((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for NewestMessages);
LABEL_19:
    uint64_t v67 = sub_10000566C(&qword_10070A390);
    memcpy(v60, v61, *(void *)(*(void *)(v67 - 8) + 64));
    goto LABEL_20;
  }
  v93((uint64_t)v60, v61, v95);
  *(void *)&v60[*(int *)(v62 + 20)] = *(void *)&v61[*(int *)(v62 + 20)];
  *(void *)&v60[*(int *)(v62 + 24)] = *(void *)&v61[*(int *)(v62 + 24)];
LABEL_20:
  uint64_t v68 = a1;
  uint64_t v69 = a3;
  if (a1 != a2)
  {
    uint64_t v70 = v101[17];
    uint64_t v71 = &v4[v70];
    uint64_t v72 = &v5[v70];
    sub_10008973C((uint64_t)&v4[v70], _s15MissingMessagesOMa);
    uint64_t v73 = _s15MissingMessagesOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(_DWORD *)uint64_t v71 = *(_DWORD *)v72;
      v71[4] = v72[4];
      uint64_t v85 = _s15MissingMessagesO8CompleteVMa(0);
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(&v71[*(int *)(v85 + 20)], &v72[*(int *)(v85 + 20)], v95);
      v71[*(int *)(v85 + 24)] = v72[*(int *)(v85 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      uint64_t v75 = *(void (**)(char *, char *, uint64_t))(v94 + 32);
      v75(v71, v72, v95);
      uint64_t v76 = v75;
      uint64_t v98 = v75;
      uint64_t v77 = _s15MissingMessagesO8ProgressVMa(0);
      v76(&v71[*(int *)(v77 + 20)], &v72[*(int *)(v77 + 20)], v95);
      uint64_t v78 = *(int *)(v77 + 24);
      uint64_t v79 = &v71[v78];
      uint64_t v80 = &v72[v78];
      *(_DWORD *)uint64_t v79 = *(_DWORD *)v80;
      v79[4] = v80[4];
      uint64_t v81 = _s15MissingMessagesO10IncompleteVMa(0);
      uint64_t v82 = *(int *)(v81 + 20);
      char v83 = &v71[v82];
      int v84 = &v72[v82];
      *(_DWORD *)char v83 = *(_DWORD *)v84;
      v83[4] = v84[4];
      uint64_t v69 = a3;
      v98(&v71[*(int *)(v81 + 24)], &v72[*(int *)(v81 + 24)], v95);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v86 = v101[18];
  __int16 v87 = &v4[v86];
  uint64_t v88 = &v5[v86];
  *(void *)__int16 v87 = *(void *)v88;
  *((_WORD *)v87 + 4) = *((_WORD *)v88 + 4);
  uint64_t v89 = *(int *)(v69 + 24);
  uint64_t v90 = (char *)v68 + v89;
  uint64_t v91 = (char *)a2 + v89;
  *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  return v68;
}

uint64_t sub_10008A7D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008A7E4);
}

uint64_t sub_10008A7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for MailboxSyncState();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_10008A854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008A868);
}

uint64_t sub_10008A868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for MailboxSyncState();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_10008A8DC()
{
  uint64_t result = type metadata accessor for MailboxSyncState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *_s13SelectedStateVMa()
{
  return &_s13SelectedStateVN;
}

uint64_t sub_10008A990(_DWORD *a1, _DWORD *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v4 = _s13SelectedStateV7WrappedVMa(0);
  if (!sub_1000603E8((uint64_t)a1 + *(int *)(v4 + 20), (uint64_t)a2 + *(int *)(v4 + 20))) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = (_DWORD *)((char *)a1 + v5);
  char v7 = *((unsigned char *)a1 + v5 + 4);
  uint64_t v8 = (_DWORD *)((char *)a2 + v5);
  char v9 = *((unsigned char *)a2 + v5 + 4);
  if (v7)
  {
    if ((v9 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*v6 != *v8) {
      char v9 = 1;
    }
    if (v9) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_10008AA28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s13SelectedStateV7WrappedVMa(0);
  uint64_t v5 = __chkstk_darwin(v4);
  char v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  char v9 = &v19[-v8];
  uint64_t v10 = a1
      + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
  swift_beginAccess();
  sub_10008ABB4(v10, (uint64_t)v9);
  uint64_t v11 = a2
      + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
  swift_beginAccess();
  sub_10008ABB4(v11, (uint64_t)v7);
  if (*v9 != *v7 || !sub_1000603E8((uint64_t)v9 + *(int *)(v4 + 20), (uint64_t)v7 + *(int *)(v4 + 20))) {
    goto LABEL_9;
  }
  uint64_t v12 = *(int *)(v4 + 24);
  uint64_t v13 = (_DWORD *)((char *)v9 + v12);
  char v14 = *((unsigned char *)v9 + v12 + 4);
  uint64_t v15 = (_DWORD *)((char *)v7 + v12);
  int v16 = *((unsigned __int8 *)v7 + v12 + 4);
  if ((v14 & 1) == 0)
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) == 0) {
      goto LABEL_5;
    }
LABEL_9:
    uint64_t v17 = 0;
    goto LABEL_10;
  }
  if (!v16) {
    goto LABEL_9;
  }
LABEL_5:
  uint64_t v17 = 1;
LABEL_10:
  sub_10008973C((uint64_t)v7, _s13SelectedStateV7WrappedVMa);
  sub_10008973C((uint64_t)v9, _s13SelectedStateV7WrappedVMa);
  return v17;
}

uint64_t sub_10008ABB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s13SelectedStateV7WrappedVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10008AC18(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  if (__OFSUB__(a4, a3))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v5 = a3;
  sub_10009BA4C();
  uint64_t v10 = sub_1005E2280();
  if (v5 == a4)
  {
    swift_release();
    swift_release();
    return;
  }
  if ((a4 & 0x8000000000000000) != 0) {
    goto LABEL_12;
  }
  if ((uint64_t)v5 >= (uint64_t)a4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  unint64_t v7 = *(void *)(a2 + 16);
  if (v7 < v5 || v7 < a4) {
    goto LABEL_15;
  }
  do
  {
    uint64_t v8 = *(unsigned int *)(a2 + 4 * v5++ + 32);
    sub_100018BD0(&v9, v8);
  }
  while (a4 != v5);
  swift_release();
  swift_release();
}

uint64_t sub_10008AD10(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  sub_10009BA4C();
  uint64_t result = sub_1005E2280();
  uint64_t v9 = result;
  if (v3)
  {
    unint64_t v5 = 0;
    while (v5 < *(void *)(a2 + 16))
    {
      uint64_t v6 = *(unsigned int *)(a2 + 4 * v5++ + 32);
      uint64_t result = sub_100018BD0(&v8, v6);
      if (v3 == v5)
      {
        swift_release();
        swift_release();
        return v9;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v7 = result;
    swift_release();
    swift_release();
    return v7;
  }
  return result;
}

uint64_t sub_10008ADD4(uint64_t a1)
{
  return sub_10008B108(a1, (void (*)(void))sub_100057440, (uint64_t)&type metadata for SyncRequest.ID, (uint64_t (*)(unsigned char *, void))sub_100018E3C);
}

uint64_t sub_10008AE08(uint64_t *a1)
{
  void (*v22)(uint64_t *__return_ptr, char *);
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;

  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t (*)(char *))a1[1];
  sub_100057440();
  uint64_t result = sub_1005E2280();
  int64_t i = 0;
  uint64_t v30 = result;
  uint64_t v6 = *(void *)(v2 + 64);
  uint64_t v24 = v2 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & v6;
  uint64_t v22 = (void (*)(uint64_t *__return_ptr, char *))a1[3];
  uint64_t v23 = (unint64_t)(63 - v7) >> 6;
  if ((v8 & v6) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v12 = i + 1;
  if (__OFADD__(i, 1))
  {
    __break(1u);
  }
  else
  {
    if (v12 >= v23) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v24 + 8 * v12);
    if (v13)
    {
LABEL_17:
      unint64_t v9 = (v13 - 1) & v13;
      unint64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
      for (i = v12; ; unint64_t v11 = v10 | (i << 6))
      {
        int v16 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v11);
        uint64_t v17 = *(void *)(v2 + 56) + 32 * v11;
        char v18 = *(unsigned char *)v17;
        uint64_t v19 = *(void *)(v17 + 8);
        char v20 = *(unsigned char *)(v17 + 16);
        uint64_t v21 = *(void *)(v17 + 24);
        HIDWORD(v25) = v16;
        uint64_t v26 = v18;
        uint64_t v27 = v19;
        uint64_t v28 = v20;
        char v29 = v21;
        swift_bridgeObjectRetain();
        if (v3((char *)&v25 + 4))
        {
          HIDWORD(v25) = v16;
          uint64_t v26 = v18;
          uint64_t v27 = v19;
          uint64_t v28 = v20;
          char v29 = v21;
          v22(&v25, (char *)&v25 + 4);
          swift_bridgeObjectRelease();
          uint64_t result = sub_100018E3C((_DWORD *)&v25 + 1, v25);
          if (!v9) {
            goto LABEL_8;
          }
        }
        else
        {
          uint64_t result = swift_bridgeObjectRelease();
          if (!v9) {
            goto LABEL_8;
          }
        }
LABEL_7:
        unint64_t v10 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
      }
    }
    int64_t v14 = i + 2;
    if (i + 2 >= v23) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v24 + 8 * v14);
    if (v13)
    {
LABEL_13:
      int64_t v12 = v14;
      goto LABEL_17;
    }
    int64_t v15 = i + 3;
    if (i + 3 >= v23) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v24 + 8 * v15);
    if (v13)
    {
LABEL_16:
      int64_t v12 = v15;
      goto LABEL_17;
    }
    int64_t v14 = i + 4;
    if (i + 4 >= v23) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v24 + 8 * v14);
    if (v13) {
      goto LABEL_13;
    }
    int64_t v15 = i + 5;
    if (i + 5 >= v23) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v24 + 8 * v15);
    if (v13) {
      goto LABEL_16;
    }
    int64_t v14 = i + 6;
    if (i + 6 >= v23)
    {
LABEL_31:
      sub_10003BC80();
      swift_release();
      swift_release();
      return v30;
    }
    unint64_t v13 = *(void *)(v24 + 8 * v14);
    if (v13) {
      goto LABEL_13;
    }
    while (1)
    {
      int64_t v12 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        break;
      }
      if (v12 >= v23) {
        goto LABEL_31;
      }
      unint64_t v13 = *(void *)(v24 + 8 * v12);
      ++v14;
      if (v13) {
        goto LABEL_17;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10008B0D4(uint64_t a1)
{
  return sub_10008B108(a1, (void (*)(void))sub_10009C234, (uint64_t)&type metadata for UID, (uint64_t (*)(unsigned char *, void))sub_100019DE8);
}

uint64_t sub_10008B108(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(unsigned char *, void))
{
  a2();
  uint64_t result = sub_1005E2280();
  int64_t v7 = 0;
  uint64_t v19 = result;
  uint64_t v8 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v12) {
      goto LABEL_23;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      int64_t v7 = v15 + 1;
      if (v15 + 1 >= v12) {
        goto LABEL_23;
      }
      unint64_t v16 = *(void *)(v8 + 8 * v7);
      if (!v16)
      {
        int64_t v7 = v15 + 2;
        if (v15 + 2 >= v12) {
          goto LABEL_23;
        }
        unint64_t v16 = *(void *)(v8 + 8 * v7);
        if (!v16)
        {
          int64_t v7 = v15 + 3;
          if (v15 + 3 >= v12) {
            goto LABEL_23;
          }
          unint64_t v16 = *(void *)(v8 + 8 * v7);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_5:
    uint64_t result = a4(v18, *(unsigned int *)(*(void *)(a1 + 48) + 4 * v14));
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v12)
  {
LABEL_23:
    swift_release();
    return v19;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
    int64_t v7 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_23;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10008B294(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_10070A378);
  uint64_t v3 = v2 - 8;
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v28[-v7];
  uint64_t v9 = sub_10000566C(&qword_100709E38);
  MessageIdentifierSet.count.getter();
  sub_10009C234();
  uint64_t v10 = sub_1005E2280();
  uint64_t v30 = v10;
  sub_100026334(a1, (uint64_t)v6);
  uint64_t v11 = MessageIdentifierSet.startIndex.getter(v9);
  uint64_t v13 = v12;
  sub_100007A48(a1, &qword_100709E38);
  unint64_t v14 = (uint64_t *)&v6[*(int *)(v3 + 44)];
  *unint64_t v14 = v11;
  v14[1] = v13;
  sub_10001FDF0((uint64_t)v6, (uint64_t)v8, &qword_10070A378);
  int64_t v15 = (uint64_t *)&v8[*(int *)(v3 + 44)];
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  if (v16 != MessageIdentifierSet.endIndex.getter(v9) || v17 != v18)
  {
    do
    {
      MessageIdentifierSet.subscript.getter();
      uint64_t v20 = v29;
      MessageIdentifierSet.index(_:offsetBy:)();
      *int64_t v15 = v21;
      v15[1] = v22;
      sub_100019DE8(&v29, v20);
      uint64_t v23 = *v15;
      uint64_t v24 = v15[1];
    }
    while (v23 != MessageIdentifierSet.endIndex.getter(v9) || v24 != v25);
    uint64_t v10 = v30;
  }
  sub_100007A48((uint64_t)v8, &qword_10070A378);
  return v10;
}

uint64_t sub_10008B468(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = (void *)*v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = (uint64_t)v4;
  if (result)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = (uint64_t)sub_100093440(v4);
  uint64_t v4 = (void *)result;
  *uint64_t v2 = result;
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (v4[2] > a2) {
    return (uint64_t)UInt32.init(_:);
  }
LABEL_7:
  __break(1u);
  return result;
}

void *sub_10008B4F8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10001A834(0, v1, 0);
    uint64_t v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v4 = *(v3 - 1);
      uint64_t v5 = *v3;
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v7 >= v6 >> 1) {
        sub_10001A834(v6 > 1, v7 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v7 + 1;
      uint64_t v8 = &_swiftEmptyArrayStorage[2 * v7];
      v8[4] = v4;
      v8[5] = v5;
      v3 += 22;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_10008B5D0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10001A834(0, v1, 0);
    uint64_t v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v4 = *(v3 - 1);
      uint64_t v5 = *v3;
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v7 >= v6 >> 1) {
        sub_10001A834(v6 > 1, v7 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v7 + 1;
      uint64_t v8 = &_swiftEmptyArrayStorage[2 * v7];
      v8[4] = v4;
      v8[5] = v5;
      v3 += 12;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10008B6A8(uint64_t a1)
{
  return sub_10008BDBC(a1, (uint64_t (*)(unsigned char *, void))sub_100018E3C);
}

uint64_t sub_10008B6C0(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = *(void *)(v1 + 48) + 16 * v9;
    uint64_t v11 = *(void *)v10;
    unsigned int v12 = *(_DWORD *)(v10 + 8);
    swift_bridgeObjectRetain();
    sub_1000187DC((uint64_t)&v16, v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_10008B844(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = *(void *)(v1 + 48) + 16 * v9;
    uint64_t v11 = *(void *)v10;
    unsigned int v12 = *(_DWORD *)(v10 + 8);
    swift_bridgeObjectRetain();
    sub_1000187DC((uint64_t)&v16, v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_10008B9C8(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    uint64_t result = sub_100019080(&v13, *(unsigned __int8 *)(*(void *)(v1 + 48) + v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_10008BB24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2 - 8);
  unint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  unint64_t v9 = (char *)&v24 - v8;
  uint64_t result = __chkstk_darwin(v7);
  int64_t v12 = (char *)&v24 - v11;
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v25 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        return swift_release();
      }
      unint64_t v22 = *(void *)(v25 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          return swift_release();
        }
        unint64_t v22 = *(void *)(v25 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            return swift_release();
          }
          unint64_t v22 = *(void *)(v25 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_10009C16C(*(void *)(a1 + 48) + *(void *)(v3 + 72) * v20, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_10009C288((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_100019B60((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_10009C1D4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v25 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10008BDA4(uint64_t a1)
{
  return sub_10008BDBC(a1, (uint64_t (*)(unsigned char *, void))sub_100019DD0);
}

uint64_t sub_10008BDBC(uint64_t result, uint64_t (*a2)(unsigned char *, void))
{
  uint64_t v3 = result;
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v12 >= v9) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_5:
    uint64_t result = a2(v15, *(unsigned int *)(*(void *)(v3 + 48) + 4 * v11));
  }
  int64_t v14 = v12 + 4;
  if (v14 < v9)
  {
    unint64_t v13 = *(void *)(v5 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        int64_t v4 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_27;
        }
        if (v4 >= v9) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        ++v14;
        if (v13) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v14;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_10008BF28(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = 0;
  while (1)
  {
    uint64_t v5 = a3 + 32 + 16 * v4;
    if ((*(unsigned int *)(v5 + 8) | ((unint64_t)*(unsigned int *)(v5 + 8) << 32)) == (a2 | ((unint64_t)a2 << 32)))
    {
      uint64_t v6 = *(void *)v5;
      uint64_t v7 = *(void *)(v6 + 16);
      if (v7 == *(void *)(a1 + 16))
      {
        if (!v7 || v6 == a1) {
          return 1;
        }
        if (*(unsigned __int8 *)(v6 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v7 == 1) {
            return 1;
          }
          if (*(unsigned __int8 *)(v6 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v7 == 2) {
              return 1;
            }
            if (*(unsigned __int8 *)(v6 + 34) == *(unsigned __int8 *)(a1 + 34))
            {
              if (v7 == 3) {
                return 1;
              }
              if (*(unsigned __int8 *)(v6 + 35) == *(unsigned __int8 *)(a1 + 35)) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_3:
    if (++v4 == v3) {
      return 0;
    }
  }
  unint64_t v8 = (unsigned __int8 *)(v6 + 36);
  uint64_t v9 = v7 - 4;
  unint64_t v10 = (unsigned __int8 *)(a1 + 36);
  while (v9)
  {
    int v12 = *v8++;
    int v11 = v12;
    int v13 = *v10++;
    --v9;
    if (v11 != v13) {
      goto LABEL_3;
    }
  }
  return 1;
}

BOOL sub_10008C018(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

void *sub_10008C078()
{
  uint64_t v1 = &_swiftEmptySetSingleton;
  if (*(unsigned char *)(v0 + 184))
  {
    uint64_t v2 = *(void *)(v0 + 160);
    uint64_t v3 = *(void *)(v0 + 168);
    uint64_t v4 = *(void *)(v0 + 176);
    long long v5 = *(_OWORD *)(v0 + 112);
    long long v73 = *(_OWORD *)(v0 + 96);
    v74[0] = v5;
    long long v6 = *(_OWORD *)(v0 + 144);
    v74[1] = *(_OWORD *)(v0 + 128);
    v74[2] = v6;
    long long v7 = *(_OWORD *)(v0 + 80);
    long long v71 = *(_OWORD *)(v0 + 64);
    long long v72 = v7;
    sub_10001FDF0((uint64_t)v74, (uint64_t)v75, &qword_10070A900);
    sub_10001FDF0((uint64_t)v75, (uint64_t)v76, &qword_10070A900);
    uint64_t v8 = v76[0];
    if (v76[0] && *(void *)(v76[0] + 16))
    {
      uint64_t v59 = &_swiftEmptySetSingleton;
      uint64_t v9 = *(void *)(v2 + 16);
      if (v9)
      {
        unint64_t v10 = (long long *)(v2 + 32);
        uint64_t v55 = v3;
        uint64_t v56 = v4;
        sub_10005636C(v2, v3, v4, 1);
        for (uint64_t i = v9 - 1; ; --i)
        {
          long long v12 = *v10;
          long long v13 = v10[2];
          long long v61 = v10[1];
          long long v62 = v13;
          long long v60 = v12;
          long long v14 = v10[3];
          long long v15 = v10[4];
          long long v16 = v10[6];
          long long v65 = v10[5];
          long long v66 = v16;
          long long v64 = v15;
          long long v63 = v14;
          long long v17 = v10[7];
          long long v18 = v10[8];
          long long v19 = v10[10];
          long long v69 = v10[9];
          long long v70 = v19;
          long long v67 = v17;
          long long v68 = v18;
          uint64_t v20 = v61;
          uint64_t v21 = DWORD2(v61);
          uint64_t v22 = *((void *)&v64 + 1);
          uint64_t v23 = v65;
          sub_100007780((uint64_t)&v60);
          if ((static MailboxOfInterest.LocalModification.__derived_enum_equals(_:_:)(v22, v23, 0, 0) & 1) == 0) {
            goto LABEL_17;
          }
          uint64_t v24 = swift_bridgeObjectRetain();
          char v25 = MailboxName.isInbox.getter(v24, v21);
          swift_bridgeObjectRelease();
          if (v25)
          {
LABEL_8:
            swift_bridgeObjectRetain();
            sub_1000187DC((uint64_t)&v58, v20, v21);
            swift_bridgeObjectRelease();
            goto LABEL_17;
          }
          if (*(void *)(v8 + 16))
          {
            unint64_t v26 = sub_100024264(v20, v21);
            if (v27) {
              break;
            }
          }
LABEL_17:
          sub_100007820((uint64_t)&v60);
          if (!i)
          {
            sub_10000F0D4(v2, v55, v56, 1);
            return v59;
          }
          v10 += 11;
        }
        int v57 = *(unsigned __int16 *)(*(void *)(v8 + 56) + 72 * v26 + 14);
        swift_bridgeObjectRetain();
        int v28 = *(unsigned __int16 *)RemoteMailbox.Attributes.noSelect.unsafeMutableAddressor();
        int v29 = *(unsigned __int16 *)RemoteMailbox.Attributes.nonExistent.unsafeMutableAddressor();
        swift_bridgeObjectRelease();
        if (v28)
        {
          if ((v29 & ~v28) == 0)
          {
LABEL_16:
            if ((v28 & v57) == 0) {
              goto LABEL_8;
            }
            goto LABEL_17;
          }
        }
        else if (!v29)
        {
          goto LABEL_8;
        }
        v28 |= v29;
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v30 = *(void *)(v2 + 16);
      if (v30)
      {
        swift_bridgeObjectRetain();
        long long v31 = *(_OWORD *)(v2 + 160);
        long long v67 = *(_OWORD *)(v2 + 144);
        long long v68 = v31;
        long long v32 = *(_OWORD *)(v2 + 192);
        long long v69 = *(_OWORD *)(v2 + 176);
        long long v70 = v32;
        long long v33 = *(_OWORD *)(v2 + 96);
        long long v63 = *(_OWORD *)(v2 + 80);
        long long v34 = *(_OWORD *)(v2 + 112);
        long long v35 = *(_OWORD *)(v2 + 128);
        long long v64 = v33;
        long long v65 = v34;
        long long v66 = v35;
        long long v36 = *(_OWORD *)(v2 + 48);
        long long v60 = *(_OWORD *)(v2 + 32);
        long long v61 = v36;
        long long v62 = *(_OWORD *)(v2 + 64);
        uint64_t v37 = DWORD2(v36);
        sub_100007780((uint64_t)&v60);
        uint64_t v38 = swift_bridgeObjectRetain();
        LOBYTE(v37) = MailboxName.isInbox.getter(v38, v37);
        swift_bridgeObjectRelease();
        sub_100007820((uint64_t)&v60);
        if ((v37 & 1) == 0)
        {
          uint64_t v39 = (long long *)(v2 + 208);
          do
          {
            if (!--v30)
            {
              sub_10000F0D4(v2, v3, v4, 1);
              return &_swiftEmptySetSingleton;
            }
            int v40 = v39 + 11;
            long long v41 = *v39;
            long long v42 = v39[2];
            long long v61 = v39[1];
            long long v62 = v42;
            long long v60 = v41;
            long long v43 = v39[3];
            long long v44 = v39[4];
            long long v45 = v39[6];
            long long v65 = v39[5];
            long long v66 = v45;
            long long v64 = v44;
            long long v63 = v43;
            long long v46 = v39[7];
            long long v47 = v39[8];
            long long v48 = v39[10];
            long long v69 = v39[9];
            long long v70 = v48;
            long long v67 = v46;
            long long v68 = v47;
            uint64_t v49 = DWORD2(v61);
            sub_100007780((uint64_t)&v60);
            uint64_t v50 = swift_bridgeObjectRetain();
            LOBYTE(v49) = MailboxName.isInbox.getter(v50, v49);
            swift_bridgeObjectRelease();
            sub_100007820((uint64_t)&v60);
            uint64_t v39 = v40;
          }
          while ((v49 & 1) == 0);
        }
        sub_10000F0D4(v2, v3, v4, 1);
        sub_10000566C(&qword_10070A630);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1005F6670;
        uint64_t v52 = MailboxName.inbox.unsafeMutableAddressor();
        int v53 = *((_DWORD *)v52 + 2);
        *(void *)(inited + 32) = *v52;
        *(_DWORD *)(inited + 40) = v53;
        uint64_t v1 = (void *)sub_10001BDE8(inited);
        swift_setDeallocating();
        swift_bridgeObjectRetain();
        swift_arrayDestroy();
      }
    }
  }
  return v1;
}

uint64_t sub_10008C44C()
{
  sub_10000566C(&qword_10070A8F8);
  uint64_t v0 = sub_1005E35B0();
  uint64_t v1 = sub_1005E35E0();
  uint64_t v2 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v0 < v2 || result < v0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v5 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v1 < v5 || result < v1) {
    goto LABEL_10;
  }
  uint64_t result = v1 - v0;
  if (__OFSUB__(v1, v0)) {
LABEL_11:
  }
    __break(1u);
  return result;
}

void sub_10008C4F4()
{
  long long v12 = *(long long *)((char *)v0 + 24);
  char v13 = *((unsigned char *)v0 + 40);
  if (v13)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    goto LABEL_18;
  }
  long long v10 = *v0;
  char v11 = *((unsigned char *)v0 + 16);
  if ((v11 & 1) == 0)
  {
    uint64_t v1 = v10;
    if ((uint64_t)v12 >= (uint64_t)v10)
    {
      uint64_t v2 = *((void *)&v10 + 1);
      if (DWORD2(v12) != DWORD2(v10)) {
        goto LABEL_15;
      }
      if ((void)v10 == (void)v12) {
        return;
      }
      uint64_t v3 = 0;
      uint64_t v4 = *((void *)v0 + 6);
      while (!__OFADD__(v3, 1))
      {
        uint64_t v5 = sub_1000D3970(v1, v2, 0, v4);
        uint64_t v7 = v6;
        char v9 = v8;
        sub_100060FF0(v1, v2, 0);
        if (v9) {
          goto LABEL_16;
        }
        if (v7 != DWORD2(v12)) {
          goto LABEL_13;
        }
        ++v3;
        uint64_t v1 = v5;
        uint64_t v2 = v7;
        if (v5 == (void)v12)
        {
          sub_10009AF4C((uint64_t)&v12);
          sub_10009AF4C((uint64_t)&v10);
          return;
        }
      }
      __break(1u);
LABEL_13:
      __break(1u);
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_18:
  __break(1u);
}

Swift::Int sub_10008C62C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 16);
  Swift::UInt64 v3 = *(void *)(v0 + 24);
  unsigned __int8 v4 = *(unsigned char *)v0;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  SyncRequest.hash(into:)((uint64_t)v6, v4, v1, v2);
  swift_bridgeObjectRelease();
  sub_1005E3450(v3);
  return sub_1005E3470();
}

void sub_10008C6AC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  char v4 = *(unsigned char *)(v1 + 16);
  Swift::UInt64 v5 = *(void *)(v1 + 24);
  unsigned __int8 v6 = *(unsigned char *)v1;
  swift_bridgeObjectRetain();
  SyncRequest.hash(into:)(a1, v6, v3, v4);
  swift_bridgeObjectRelease();
  sub_1005E3450(v5);
}

Swift::Int sub_10008C71C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 16);
  Swift::UInt64 v3 = *(void *)(v0 + 24);
  unsigned __int8 v4 = *(unsigned char *)v0;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  SyncRequest.hash(into:)((uint64_t)v6, v4, v1, v2);
  swift_bridgeObjectRelease();
  sub_1005E3450(v3);
  return sub_1005E3470();
}

uint64_t sub_10008C798(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a2 + 24);
  return static SyncRequest.__derived_struct_equals(_:_:)(*(unsigned char *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(unsigned char *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16)) & (v2 == v3);
}

uint64_t sub_10008C7E8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[13];
  v19[12] = a1[12];
  v19[13] = v2;
  long long v3 = a1[15];
  v19[14] = a1[14];
  v19[15] = v3;
  long long v4 = a1[9];
  v19[8] = a1[8];
  v19[9] = v4;
  long long v5 = a1[11];
  v19[10] = a1[10];
  v19[11] = v5;
  long long v6 = a1[5];
  v19[4] = a1[4];
  v19[5] = v6;
  long long v7 = a1[7];
  v19[6] = a1[6];
  v19[7] = v7;
  long long v8 = a1[1];
  v19[0] = *a1;
  v19[1] = v8;
  long long v9 = a1[3];
  v19[2] = a1[2];
  v19[3] = v9;
  long long v10 = a2[13];
  v20[12] = a2[12];
  v20[13] = v10;
  long long v11 = a2[15];
  v20[14] = a2[14];
  v20[15] = v11;
  long long v12 = a2[9];
  v20[8] = a2[8];
  v20[9] = v12;
  long long v13 = a2[11];
  v20[10] = a2[10];
  v20[11] = v13;
  long long v14 = a2[5];
  v20[4] = a2[4];
  v20[5] = v14;
  long long v15 = a2[7];
  v20[6] = a2[6];
  v20[7] = v15;
  long long v16 = a2[1];
  v20[0] = *a2;
  v20[1] = v16;
  long long v17 = a2[3];
  v20[2] = a2[2];
  v20[3] = v17;
  return sub_10009A4E0((uint64_t)v19, (uint64_t)v20) & 1;
}

uint64_t sub_10008C89C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_l;
  uint64_t v2 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_10008C93C()
{
  return type metadata accessor for State.Logger();
}

uint64_t type metadata accessor for State.Logger()
{
  uint64_t result = qword_10070B5F8;
  if (!qword_10070B5F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10008C990()
{
  uint64_t result = sub_1005E0ED0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t initializeWithCopy for State.InProgressSync(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for State.InProgressSync(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for State.InProgressSync(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for State.InProgressSync()
{
  return &type metadata for State.InProgressSync;
}

uint64_t destroy for State(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_10000F0D4(*(void *)(a1 + 160), *(void *)(a1 + 168), *(void *)(a1 + 176), *(unsigned char *)(a1 + 184));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  long long v6 = *(_OWORD *)(a2 + 64);
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 90) = *(_OWORD *)(a2 + 90);
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v7;
  uint64_t v9 = a2 + 136;
  uint64_t v8 = *(void *)(a2 + 136);
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t v11 = *(void *)(a2 + 144);
    uint64_t v12 = *(void *)(a2 + 152);
    *(void *)(a1 + 136) = v8;
    *(void *)(a1 + 144) = v11;
    *(void *)(a1 + 152) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 136) = *(_OWORD *)v9;
    *(void *)(a1 + 152) = *(void *)(v9 + 16);
  }
  uint64_t v13 = *(void *)(a2 + 160);
  uint64_t v14 = *(void *)(a2 + 168);
  uint64_t v15 = *(void *)(a2 + 176);
  char v16 = *(unsigned char *)(a2 + 184);
  sub_10005636C(v13, v14, v15, v16);
  *(void *)(a1 + 160) = v13;
  *(void *)(a1 + 168) = v14;
  *(void *)(a1 + 176) = v15;
  *(unsigned char *)(a1 + 184) = v16;
  uint64_t v17 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v17;
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  uint64_t v19 = *(void *)(a2 + 240);
  uint64_t v18 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = v19;
  *(void *)(a1 + 248) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for State(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  *(unsigned char *)(a1 + 10) = *((unsigned char *)a2 + 10);
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
  *(unsigned char *)(a1 + 18) = *((unsigned char *)a2 + 18);
  *(void *)(a1 + 24) = a2[3];
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v5 = *((_OWORD *)a2 + 4);
  long long v6 = *((_OWORD *)a2 + 5);
  *(_OWORD *)(a1 + 90) = *(_OWORD *)((char *)a2 + 90);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(void *)(a1 + 112) = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[15];
  uint64_t v8 = (_OWORD *)(a1 + 136);
  uint64_t v9 = *(void *)(a1 + 136);
  *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
  *(void *)(a1 + 120) = v7;
  *(unsigned char *)(a1 + 129) = *((unsigned char *)a2 + 129);
  uint64_t v11 = a2 + 17;
  uint64_t v10 = a2[17];
  if (v9)
  {
    if (v10)
    {
      *(void *)(a1 + 136) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = a2[18];
      *(void *)(a1 + 152) = a2[19];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10008245C(a1 + 136);
      uint64_t v12 = a2[19];
      *uint64_t v8 = *v11;
      *(void *)(a1 + 152) = v12;
    }
  }
  else if (v10)
  {
    *(void *)(a1 + 136) = v10;
    *(void *)(a1 + 144) = a2[18];
    *(void *)(a1 + 152) = a2[19];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *v11;
    *(void *)(a1 + 152) = a2[19];
    *uint64_t v8 = v13;
  }
  uint64_t v14 = a2[20];
  uint64_t v15 = a2[21];
  uint64_t v16 = a2[22];
  char v17 = *((unsigned char *)a2 + 184);
  sub_10005636C(v14, v15, v16, v17);
  uint64_t v18 = *(void *)(a1 + 160);
  uint64_t v19 = *(void *)(a1 + 168);
  uint64_t v20 = *(void *)(a1 + 176);
  char v21 = *(unsigned char *)(a1 + 184);
  *(void *)(a1 + 160) = v14;
  *(void *)(a1 + 168) = v15;
  *(void *)(a1 + 176) = v16;
  *(unsigned char *)(a1 + 184) = v17;
  sub_10000F0D4(v18, v19, v20, v21);
  *(void *)(a1 + 192) = a2[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = a2[26];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = a2[27];
  *(void *)(a1 + 224) = a2[28];
  *(_DWORD *)(a1 + 232) = *((_DWORD *)a2 + 58);
  *(void *)(a1 + 240) = a2[30];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = a2[31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for State(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  long long v8 = a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  long long v12 = a2[13];
  long long v13 = a2[15];
  *(_OWORD *)(a1 + 224) = a2[14];
  *(_OWORD *)(a1 + 240) = v13;
  *(__n128 *)(a1 + 192) = result;
  *(_OWORD *)(a1 + 208) = v12;
  return result;
}

uint64_t assignWithTake for State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 90) = *(_OWORD *)(a2 + 90);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 136);
  uint64_t v7 = *(void *)(a1 + 136);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  if (!v7) {
    goto LABEL_5;
  }
  if (!v6)
  {
    sub_10008245C(a1 + 136);
LABEL_5:
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    goto LABEL_6;
  }
  *(void *)(a1 + 136) = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v9 = *(void *)(a2 + 176);
  char v10 = *(unsigned char *)(a2 + 184);
  uint64_t v11 = *(void *)(a1 + 160);
  uint64_t v12 = *(void *)(a1 + 168);
  uint64_t v13 = *(void *)(a1 + 176);
  char v14 = *(unsigned char *)(a1 + 184);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = v9;
  *(unsigned char *)(a1 + 184) = v10;
  sub_10000F0D4(v11, v12, v13, v14);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for State(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 256)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 248) = 0;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 256) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 256) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for State()
{
  return &type metadata for State;
}

unint64_t sub_10008D240()
{
  unint64_t result = qword_10070B688;
  if (!qword_10070B688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B688);
  }
  return result;
}

uint64_t sub_10008D294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v105 = a6;
  uint64_t v114 = a5;
  uint64_t v115 = a4;
  uint64_t v108 = a8;
  uint64_t v118 = a9;
  uint64_t v13 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v123 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ClientCommand(0);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (unint64_t *)((char *)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  char v21 = (char *)&v101 - v20;
  sub_10008E040(a1, (uint64_t)v136);
  if (BYTE8(v137) != 255)
  {
    sub_10009B0FC((uint64_t)v136, (uint64_t)&v150);
    sub_10009B158((uint64_t)&v150, (uint64_t)v136);
    sub_10009B1B4((uint64_t)&v150);
    uint64_t v22 = v108;
    sub_10001FDF0((uint64_t)v136, v108, &qword_10070B698);
LABEL_8:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v38 = &_swiftEmptySetSingleton;
    goto LABEL_9;
  }
  uint64_t v130 = v13;
  uint64_t v131 = v16;
  uint64_t v102 = a1;
  uint64_t v103 = a2;
  uint64_t v104 = a3;
  sub_100007A48((uint64_t)v136, &qword_10070B698);
  unint64_t v23 = *(void *)(a7 + 64);
  if (v23 == 2) {
    goto LABEL_7;
  }
  uint64_t v24 = *(void *)(a7 + 72);
  uint64_t v25 = *(void *)(a7 + 80);
  uint64_t v27 = *(void *)(a7 + 88);
  uint64_t v26 = *(void *)(a7 + 96);
  int v28 = *(unsigned __int16 *)(a7 + 104);
  char v29 = *(unsigned char *)(a7 + 129);
  uint64_t v106 = a7;
  if (v29)
  {
    char v30 = *(unsigned char *)(v106 + 17);
    uint64_t v31 = *(void *)(v106 + 24);
    LODWORD(v124) = *(unsigned __int8 *)(v106 + 10);
    uint64_t v121 = *(void *)(v106 + 40);
    unint64_t v122 = v31;
    uint64_t v32 = *(void *)(v106 + 48);
    char v33 = *(unsigned char *)(v106 + 32);
    char v34 = *(unsigned char *)(v106 + 16);
    LODWORD(v129) = v28;
    uint64_t v127 = v27;
    uint64_t v128 = v26;
    uint64_t v125 = v24;
    uint64_t v126 = v25;
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1000D8938();
    unint64_t v36 = sub_1000D8D74(v34, v30 & 1, v122, v33, v121, v124, v32, v35);
    LOWORD(v24) = v125;
    uint64_t v25 = v126;
    LOBYTE(v27) = v127;
    uint64_t v26 = v128;
    LOWORD(v28) = v129;
    if ((v23 & 0x10000) == 0 && (v36 & 0x100000000) != 0)
    {
LABEL_7:
      uint64_t v22 = v108;
      *(void *)(v108 + 32) = 0;
      *(_OWORD *)uint64_t v22 = 0u;
      *(_OWORD *)(v22 + 16) = 0u;
      *(unsigned char *)(v22 + 40) = -1;
      goto LABEL_8;
    }
  }
  uint64_t v39 = &_swiftEmptySetSingleton;
  v135 = &_swiftEmptySetSingleton;
  uint64_t v112 = *(void *)(v105 + 16);
  if (!v112)
  {
    uint64_t v100 = v108;
LABEL_82:
    *(void *)(v100 + 32) = 0;
    *(_OWORD *)uint64_t v100 = 0u;
    *(_OWORD *)(v100 + 16) = 0u;
    *(unsigned char *)(v100 + 40) = -1;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v100 + 48) = v39;
    return result;
  }
  char v140 = v23 & 1;
  uint64x2_t v40 = (uint64x2_t)vdupq_n_s64(v23);
  int16x8_t v41 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v40, (uint64x2_t)xmmword_1005F66C0), (int32x4_t)vshlq_u64(v40, (uint64x2_t)xmmword_1005F66B0));
  *(int8x8_t *)v41.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v41), (int8x8_t)0x1000100010001);
  unsigned __int32 v141 = vmovn_s16(v41).u32[0];
  char v142 = BYTE5(v23) & 1;
  char v143 = BYTE6(v23) & 1;
  char v144 = HIBYTE(v23);
  __int16 v145 = v24 & 0xFF01;
  uint64_t v42 = v114;
  uint64_t v110 = v114 + 32;
  uint64_t v109 = v105 + 32;
  uint64_t v146 = v25;
  char v147 = v27 & 1;
  uint64_t v148 = v26;
  __int16 v149 = v28 & 0x101;
  long long v43 = *(_OWORD *)(v106 + 192);
  v138[0] = *(_OWORD *)(v106 + 208);
  *(_OWORD *)((char *)v138 + 12) = *(_OWORD *)(v106 + 220);
  long long v44 = *(_OWORD *)(v106 + 160);
  v136[1] = *(_OWORD *)(v106 + 176);
  long long v137 = v43;
  v136[0] = v44;
  sub_100055A48(v136, v139);
  uint64_t v111 = *(void *)(v42 + 16);
  uint64_t v45 = v118;
  uint64_t v107 = v118 + 48;
  long long v119 = v19 + 1;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v46 = 0;
  while (1)
  {
    if (v46 == v111)
    {
      __break(1u);
      JUMPOUT(0x10008DFD0);
    }
    uint64_t v47 = v110 + 16 * v46;
    uint64_t v48 = *(void *)v47;
    uint64_t v49 = *(unsigned int *)(v47 + 8);
    int v113 = *(unsigned __int16 *)(v109 + 2 * v46);
    uint64_t v50 = *(void *)(v45 + 16);
    uint64_t v121 = v48;
    uint64_t v127 = v50;
    uint64_t v116 = v49;
    if (v50)
    {
      uint64_t v117 = v46;
      uint64_t v51 = *(void *)(type metadata accessor for RunningTask() - 8);
      uint64_t v126 = v107 + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
      uint64_t v124 = v49 | (v49 << 32);
      uint64_t v125 = *(void *)(v51 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v52 = 0;
      uint64_t v120 = v121 + 35;
      uint64_t v53 = v123;
      while (1)
      {
        uint64_t v54 = *(void *)(v126 + v125 * v52);
        uint64_t v55 = *(void *)(v54 + 16);
        if (v55) {
          break;
        }
LABEL_18:
        if (++v52 == v127)
        {
          uint64_t v45 = v118;
          swift_bridgeObjectRelease();
          int v72 = 1;
          goto LABEL_58;
        }
      }
      uint64_t v128 = v52;
      uint64_t v129 = v54;
      uint64_t v56 = v54 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
      uint64_t v57 = *(void *)(v53 + 72);
      swift_bridgeObjectRetain_n();
      uint64_t v58 = 0;
      while (1)
      {
        sub_10009C16C(v56 + v57 * v58, (uint64_t)v15, type metadata accessor for TaskHistory.Running);
        if (swift_getEnumCaseMultiPayload() != 1) {
          break;
        }
        uint64_t v59 = type metadata accessor for TaskHistory.Running;
        uint64_t v60 = (uint64_t)v15;
LABEL_22:
        sub_10009C1D4(v60, v59);
LABEL_23:
        if (++v58 == v55)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v53 = v123;
          uint64_t v52 = v128;
          goto LABEL_18;
        }
      }
      uint64_t v61 = sub_10000566C(&qword_10070B6A0);
      sub_10009C288((uint64_t)&v15[*(int *)(v61 + 64)], (uint64_t)v21, type metadata accessor for ClientCommand);
      sub_10009C16C((uint64_t)v21, (uint64_t)v19, type metadata accessor for ClientCommand);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 2u:
        case 6u:
        case 8u:
          sub_10009C1D4((uint64_t)v21, type metadata accessor for ClientCommand);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_23;
        case 3u:
        case 4u:
        case 5u:
          sub_10009C1D4((uint64_t)v21, type metadata accessor for ClientCommand);
          swift_bridgeObjectRelease();
          goto LABEL_23;
        case 7u:
          sub_10009C1D4((uint64_t)v21, type metadata accessor for ClientCommand);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_47;
        case 9u:
          sub_10009C1D4((uint64_t)v21, type metadata accessor for ClientCommand);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v70 = sub_10000566C(&qword_100709E50);
          uint64_t v71 = (uint64_t)v19 + *(int *)(v70 + 64);
          sub_1000094D4(*(unint64_t *)((char *)v19 + *(int *)(v70 + 80)), *(unint64_t *)((char *)v19 + *(int *)(v70 + 80) + 8));
          sub_100007A48(v71, &qword_100709E58);
          goto LABEL_23;
        case 0xAu:
        case 0xCu:
          sub_10009C1D4((uint64_t)v21, type metadata accessor for ClientCommand);
          sub_10000952C(*v19);
          goto LABEL_23;
        case 0xBu:
        case 0xDu:
          sub_10009C1D4((uint64_t)v21, type metadata accessor for ClientCommand);
          sub_10000952C(*v19);
LABEL_47:
          swift_bridgeObjectRelease();
          goto LABEL_23;
        case 0xEu:
          sub_10009C1D4((uint64_t)v21, type metadata accessor for ClientCommand);
          sub_10000566C(&qword_100709E68);
          goto LABEL_51;
        case 0xFu:
          sub_10009C1D4((uint64_t)v21, type metadata accessor for ClientCommand);
          sub_10000566C(&qword_100709E70);
LABEL_51:
          swift_bridgeObjectRelease();
          sub_100007A48((uint64_t)v19, &qword_100709E38);
          goto LABEL_23;
        case 0x10u:
        case 0x11u:
          long long v62 = (char *)v19 + *(int *)(sub_10000566C(&qword_100709E78) + 48);
          uint64_t v63 = *(void *)v62;
          uint64_t v64 = *((unsigned int *)v62 + 2);
          sub_100007A48((uint64_t)v19, &qword_100709E38);
          if ((v64 | (v64 << 32)) != v124) {
            goto LABEL_42;
          }
          uint64_t v65 = *(void *)(v63 + 16);
          if (v65 != *(void *)(v121 + 16)) {
            goto LABEL_42;
          }
          if (!v65 || v63 == v121) {
            goto LABEL_57;
          }
          if (*(unsigned __int8 *)(v63 + 32) != *(unsigned __int8 *)(v121 + 32)) {
            goto LABEL_42;
          }
          if (v65 == 1) {
            goto LABEL_57;
          }
          if (*(unsigned __int8 *)(v63 + 33) != *(unsigned __int8 *)(v121 + 33)) {
            goto LABEL_42;
          }
          if (v65 == 2) {
            goto LABEL_57;
          }
          if (*(unsigned __int8 *)(v63 + 34) != *(unsigned __int8 *)(v121 + 34)) {
            goto LABEL_42;
          }
          uint64_t v66 = 0;
          uint64_t v67 = v65 - 3;
          break;
        case 0x12u:
          sub_10009C1D4((uint64_t)v21, type metadata accessor for ClientCommand);
          swift_release();
          swift_release();
          goto LABEL_53;
        case 0x13u:
          sub_10009C1D4((uint64_t)v21, type metadata accessor for ClientCommand);
          unint64_t v122 = v19[2];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_23;
        case 0x14u:
        case 0x15u:
        case 0x16u:
        case 0x17u:
        case 0x18u:
        case 0x19u:
        case 0x1Au:
        case 0x1Bu:
          uint64_t v59 = type metadata accessor for ClientCommand;
          uint64_t v60 = (uint64_t)v21;
          goto LABEL_22;
        default:
          sub_10009C1D4((uint64_t)v21, type metadata accessor for ClientCommand);
          swift_bridgeObjectRelease();
LABEL_53:
          swift_release();
          goto LABEL_23;
      }
      while (v67 != v66)
      {
        int v68 = *(unsigned __int8 *)(v63 + v66 + 35);
        int v69 = *(unsigned __int8 *)(v120 + v66++);
        if (v68 != v69)
        {
LABEL_42:
          swift_bridgeObjectRelease();
          sub_10009C1D4((uint64_t)v21, type metadata accessor for ClientCommand);
          goto LABEL_23;
        }
      }
LABEL_57:
      swift_bridgeObjectRelease();
      sub_10009C1D4((uint64_t)v21, type metadata accessor for ClientCommand);
      uint64_t v45 = v118;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      int v72 = 0;
LABEL_58:
      uint64_t v46 = v117;
    }
    else
    {
      swift_bridgeObjectRetain();
      int v72 = 1;
    }
    sub_100055A48(v139, &v161);
    if (v162)
    {
      uint64_t v73 = *(void *)(v161 + 16);
      if (v73) {
        break;
      }
    }
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    if (++v46 == v112)
    {
      swift_release();
      swift_release();
      swift_release();
      uint64_t v39 = v135;
      uint64_t v100 = v108;
      goto LABEL_82;
    }
  }
  LODWORD(v129) = v72;
  uint64_t v74 = 0;
  unsigned int v75 = v116;
  while (1)
  {
    uint64_t v76 = (long long *)(v161 + 32 + 176 * v74);
    long long v77 = *v76;
    long long v78 = v76[2];
    long long v151 = v76[1];
    long long v152 = v78;
    long long v150 = v77;
    long long v79 = v76[3];
    long long v80 = v76[4];
    long long v81 = v76[6];
    long long v155 = v76[5];
    long long v156 = v81;
    long long v153 = v79;
    long long v154 = v80;
    long long v82 = v76[7];
    long long v83 = v76[8];
    long long v84 = v76[10];
    long long v159 = v76[9];
    long long v160 = v84;
    long long v157 = v82;
    long long v158 = v83;
    if ((DWORD2(v151) | ((unint64_t)DWORD2(v151) << 32)) == (v116 | (v116 << 32)))
    {
      uint64_t v85 = *(void *)(v151 + 16);
      if (v85 == *(void *)(v121 + 16))
      {
        if (!v85 || (void)v151 == v121) {
          goto LABEL_78;
        }
        if (*(unsigned __int8 *)(v151 + 32) == *(unsigned __int8 *)(v121 + 32))
        {
          if (v85 == 1) {
            goto LABEL_78;
          }
          if (*(unsigned __int8 *)(v151 + 33) == *(unsigned __int8 *)(v121 + 33))
          {
            if (v85 == 2) {
              goto LABEL_78;
            }
            if (*(unsigned __int8 *)(v151 + 34) == *(unsigned __int8 *)(v121 + 34))
            {
              if (v85 == 3) {
                goto LABEL_78;
              }
              if (*(unsigned __int8 *)(v151 + 35) == *(unsigned __int8 *)(v121 + 35)) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_62:
    if (++v74 == v73) {
      goto LABEL_12;
    }
  }
  uint64_t v86 = (unsigned __int8 *)(v151 + 36);
  uint64_t v87 = v85 - 4;
  uint64_t v88 = (unsigned __int8 *)(v121 + 36);
  while (v87)
  {
    int v90 = *v86++;
    int v89 = v90;
    int v91 = *v88++;
    --v87;
    if (v89 != v91) {
      goto LABEL_62;
    }
  }
LABEL_78:
  uint64_t v117 = v46;
  uint64_t v92 = v106;
  char v93 = *(unsigned char *)(v106 + 17);
  uint64_t v94 = *(void *)(v106 + 24);
  LODWORD(v128) = *(unsigned __int8 *)(v106 + 10);
  uint64_t v95 = *(void *)(v106 + 48);
  uint64_t v126 = *(void *)(v106 + 40);
  uint64_t v127 = v94;
  char v96 = *(unsigned char *)(v106 + 32);
  char v97 = *(unsigned char *)(v106 + 16);
  sub_100007780((uint64_t)&v150);
  swift_bridgeObjectRetain();
  uint64_t v98 = sub_1000D8938();
  unint64_t v99 = sub_1000D8D74(v97, v93 & 1, v127, v96, v126, v128, v95, v98);
  sub_10002D1B8(v102, v103, v104, (uint64_t)&v140, v113, v99 & 0x101010101FFFF01, *(void *)v92, *(unsigned char *)(v92 + 8), (uint64_t)&v132, v129);
  sub_100007820((uint64_t)&v150);
  if (!v133)
  {
    sub_100007A48((uint64_t)&v132, &qword_10070A2E8);
    sub_1000187DC((uint64_t)&v132, v121, v75);
    swift_bridgeObjectRelease();
    uint64_t v46 = v117;
    uint64_t v45 = v118;
    goto LABEL_13;
  }
  sub_100021BFC(&v132, (uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v22 = v108;
  sub_100021BFC(v134, v108);
  *(unsigned char *)(v22 + 40) = 1;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v38 = v135;
LABEL_9:
  *(void *)(v22 + 48) = v38;
  return result;
}

uint64_t sub_10008E040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_100063F70(v2);
  sub_1001A1DB0(v2, (uint64_t)&v95);
  if ((void)v95)
  {
    uint64_t v78 = a2;
    long long v86 = v97;
    long long v87 = v98;
    v88[0] = *(void *)&v99[0];
    long long v84 = v95;
    long long v85 = v96;
    if (!*(void *)(a1 + 16)
      || (sub_1005E33F0(),
          sub_1005E2BE0(),
          Swift::Int v6 = sub_1005E3470(),
          uint64_t v7 = -1 << *(unsigned char *)(a1 + 32),
          unint64_t v8 = v6 & ~v7,
          uint64_t v9 = a1 + 56,
          ((*(void *)(a1 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
    {
LABEL_10:
      *(void *)(v78 + 24) = sub_10000566C(&qword_10070B718);
      *(void *)(v78 + 32) = sub_100007494(&qword_10070B720, &qword_10070B718);
      uint64_t v15 = swift_allocObject();
      *(void *)uint64_t v78 = v15;
      sub_10009B848((uint64_t)&v84, v15 + 16);
      *(void *)(v15 + 88) = _swiftEmptyArrayStorage;
      *(void *)(v15 + 96) = _swiftEmptyArrayStorage;
      *(unsigned char *)(v78 + 40) = 0;
      return sub_10009B8A4((uint64_t)&v84);
    }
    uint64_t v10 = ~v7;
    while (1)
    {
      uint64_t v11 = a1;
      sub_10003C94C(*(void *)(a1 + 48) + 48 * v8, (uint64_t)&v95);
      uint64_t v12 = v95;
      uint64_t v13 = v84;
      sub_10003C94C((uint64_t)&v95, (uint64_t)v92);
      sub_10003C94C((uint64_t)&v84, (uint64_t)v81);
      if (v12 == v13)
      {
        char v14 = sub_1005E2BD0();
        sub_10003C9A8((uint64_t)v81);
        sub_10003C9A8((uint64_t)v92);
        sub_10003C9A8((uint64_t)&v95);
        if (v14)
        {
          sub_10009B8A4((uint64_t)&v84);
          a1 = v11;
          uint64_t v3 = v2;
          a2 = v78;
          goto LABEL_12;
        }
      }
      else
      {
        sub_10003C9A8((uint64_t)v81);
        sub_10003C9A8((uint64_t)v92);
        sub_10003C9A8((uint64_t)&v95);
      }
      unint64_t v8 = (v8 + 1) & v10;
      a1 = v11;
      if (((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_10;
      }
    }
  }
  sub_100007A48((uint64_t)&v95, &qword_10070B6B0);
LABEL_12:
  long long v17 = *(_OWORD *)(v3 + 112);
  long long v97 = *(_OWORD *)(v3 + 96);
  long long v98 = v17;
  long long v18 = *(_OWORD *)(v3 + 144);
  v99[0] = *(_OWORD *)(v3 + 128);
  v99[1] = v18;
  long long v19 = *(_OWORD *)(v3 + 80);
  long long v95 = *(_OWORD *)(v3 + 64);
  long long v96 = v19;
  sub_10001FDF0((uint64_t)&v95, (uint64_t)v102, &qword_100709F30);
  uint64_t result = sub_10001FDF0((uint64_t)v102, (uint64_t)v103, &qword_100709F30);
  char v20 = v103[6];
  if (v103[0] == 2)
  {
LABEL_13:
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(unsigned char *)(a2 + 40) = -1;
    return result;
  }
  __int16 v21 = *(_WORD *)&v103[7];
  sub_10001FDF0((uint64_t)&v98, (uint64_t)v101, &qword_10070A900);
  sub_10001FDF0((uint64_t)v101, (uint64_t)&v104, &qword_10070A900);
  uint64_t v79 = a2;
  if (!v104)
  {
    sub_10001FDF0((uint64_t)v99 + 8, (uint64_t)v80, &qword_10070B6B8);
    *(void *)&long long v84 = sub_1000D4CCC((uint64_t)_swiftEmptyArrayStorage);
    *((void *)&v84 + 1) = sub_1000D4FAC((uint64_t)_swiftEmptyArrayStorage);
    sub_10009B25C(v80);
    if (qword_100709DB0 != -1) {
      swift_once();
    }
    sub_10003C94C((uint64_t)&qword_100761778, (uint64_t)&v85);
    strcpy((char *)v88, "ListMailboxes");
    HIWORD(v88[1]) = -4864;
    char v89 = v20 & 1;
    sub_10001FDF0((uint64_t)v80, (uint64_t)v90, &qword_10070B6B8);
    __int16 v91 = v21;
    if (*(void *)(a1 + 16))
    {
      sub_1005E33F0();
      sub_1005E2BE0();
      Swift::Int v32 = sub_1005E3470();
      uint64_t v33 = -1 << *(unsigned char *)(a1 + 32);
      unint64_t v34 = v32 & ~v33;
      if ((*(void *)(a1 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34))
      {
        uint64_t v35 = ~v33;
        do
        {
          sub_10003C94C(*(void *)(a1 + 48) + 48 * v34, (uint64_t)v92);
          uint64_t v36 = *(void *)&v92[0];
          uint64_t v37 = v85;
          sub_10003C94C((uint64_t)v92, (uint64_t)v81);
          sub_10003C94C((uint64_t)&v85, (uint64_t)v83);
          if (v36 == v37)
          {
            char v38 = sub_1005E2BD0();
            sub_10003C9A8((uint64_t)v83);
            sub_10003C9A8((uint64_t)v81);
            sub_10003C9A8((uint64_t)v92);
            if (v38)
            {
              uint64_t result = sub_10009B35C((uint64_t)&v84);
              *(_OWORD *)uint64_t v79 = 0u;
              *(_OWORD *)(v79 + 16) = 0u;
              *(void *)(v79 + 32) = 0;
              *(unsigned char *)(v79 + 40) = -1;
              return result;
            }
          }
          else
          {
            sub_10003C9A8((uint64_t)v83);
            sub_10003C9A8((uint64_t)v81);
            sub_10003C9A8((uint64_t)v92);
          }
          unint64_t v34 = (v34 + 1) & v35;
        }
        while (((*(void *)(a1 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) != 0);
      }
    }
    goto LABEL_45;
  }
  if ((BYTE1(v99[0]) & 1) == 0) {
    goto LABEL_16;
  }
  sub_10001FDF0((uint64_t)v99 + 8, (uint64_t)v100, &qword_10070B6B8);
  *(void *)&long long v84 = sub_1000D4CCC((uint64_t)_swiftEmptyArrayStorage);
  *((void *)&v84 + 1) = sub_1000D4FAC((uint64_t)_swiftEmptyArrayStorage);
  sub_10009B25C(v100);
  if (qword_100709DB0 != -1) {
    swift_once();
  }
  sub_10003C94C((uint64_t)&qword_100761778, (uint64_t)&v85);
  strcpy((char *)v88, "ListMailboxes");
  HIWORD(v88[1]) = -4864;
  char v89 = v20 & 1;
  sub_10001FDF0((uint64_t)v100, (uint64_t)v90, &qword_10070B6B8);
  __int16 v91 = v21;
  if (!*(void *)(a1 + 16)
    || (sub_1005E33F0(),
        sub_1005E2BE0(),
        Swift::Int v39 = sub_1005E3470(),
        uint64_t v40 = -1 << *(unsigned char *)(a1 + 32),
        unint64_t v41 = v39 & ~v40,
        ((*(void *)(a1 + 56 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41) & 1) == 0))
  {
LABEL_45:
    *(void *)(v79 + 24) = sub_10000566C(&qword_10070B6C0);
    *(void *)(v79 + 32) = sub_100007494(&qword_10070B6C8, &qword_10070B6C0);
    uint64_t v46 = swift_allocObject();
    *(void *)uint64_t v79 = v46;
    sub_10009B300((uint64_t)&v84, v46 + 16);
    *(void *)(v46 + 136) = _swiftEmptyArrayStorage;
    *(void *)(v46 + 144) = _swiftEmptyArrayStorage;
    *(unsigned char *)(v79 + 40) = 0;
    return sub_10009B35C((uint64_t)&v84);
  }
  uint64_t v42 = ~v40;
  while (1)
  {
    sub_10003C94C(*(void *)(a1 + 48) + 48 * v41, (uint64_t)v92);
    uint64_t v43 = *(void *)&v92[0];
    uint64_t v44 = v85;
    sub_10003C94C((uint64_t)v92, (uint64_t)v81);
    sub_10003C94C((uint64_t)&v85, (uint64_t)v83);
    if (v43 == v44) {
      break;
    }
    sub_10003C9A8((uint64_t)v83);
    sub_10003C9A8((uint64_t)v81);
    sub_10003C9A8((uint64_t)v92);
LABEL_41:
    unint64_t v41 = (v41 + 1) & v42;
    if (((*(void *)(a1 + 56 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41) & 1) == 0) {
      goto LABEL_45;
    }
  }
  char v45 = sub_1005E2BD0();
  sub_10003C9A8((uint64_t)v83);
  sub_10003C9A8((uint64_t)v81);
  sub_10003C9A8((uint64_t)v92);
  if ((v45 & 1) == 0) {
    goto LABEL_41;
  }
  sub_10009B35C((uint64_t)&v84);
  a2 = v79;
LABEL_16:
  long long v22 = *(_OWORD *)(v3 + 208);
  v92[2] = *(_OWORD *)(v3 + 192);
  v93[0] = v22;
  *(_OWORD *)((char *)v93 + 12) = *(_OWORD *)(v3 + 220);
  long long v23 = *(_OWORD *)(v3 + 176);
  v92[0] = *(_OWORD *)(v3 + 160);
  v92[1] = v23;
  uint64_t v24 = sub_10004D2F4();
  sub_1001B065C((uint64_t)v24, (uint64_t)v81);
  if (!*(void *)&v81[0])
  {
    sub_100007A48((uint64_t)v81, &qword_10070B6D0);
    goto LABEL_48;
  }
  long long v86 = v81[2];
  long long v87 = v81[3];
  v88[0] = v82;
  long long v84 = v81[0];
  long long v85 = v81[1];
  if (!*(void *)(a1 + 16)
    || (sub_1005E33F0(),
        sub_1005E2BE0(),
        Swift::Int v25 = sub_1005E3470(),
        uint64_t v26 = -1 << *(unsigned char *)(a1 + 32),
        unint64_t v27 = v25 & ~v26,
        ((*(void *)(a1 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0))
  {
LABEL_46:
    *(void *)(v79 + 24) = sub_10000566C(&qword_10070B708);
    *(void *)(v79 + 32) = sub_100007494(&qword_10070B710, &qword_10070B708);
    uint64_t v47 = swift_allocObject();
    *(void *)uint64_t v79 = v47;
    sub_10009B740((uint64_t)&v84, v47 + 16);
    *(void *)(v47 + 88) = _swiftEmptyArrayStorage;
    *(void *)(v47 + 96) = _swiftEmptyArrayStorage;
    *(unsigned char *)(v79 + 40) = 0;
    return sub_10009B79C((uint64_t)&v84);
  }
  uint64_t v28 = ~v26;
  while (2)
  {
    sub_10003C94C(*(void *)(a1 + 48) + 48 * v27, (uint64_t)v81);
    uint64_t v29 = *(void *)&v81[0];
    uint64_t v30 = *((void *)&v84 + 1);
    sub_10003C94C((uint64_t)v81, (uint64_t)v83);
    sub_10003C94C((uint64_t)&v84 + 8, (uint64_t)v80);
    if (v29 != v30)
    {
      sub_10003C9A8((uint64_t)v80);
      sub_10003C9A8((uint64_t)v83);
      sub_10003C9A8((uint64_t)v81);
      goto LABEL_21;
    }
    char v31 = sub_1005E2BD0();
    sub_10003C9A8((uint64_t)v80);
    sub_10003C9A8((uint64_t)v83);
    sub_10003C9A8((uint64_t)v81);
    if ((v31 & 1) == 0)
    {
LABEL_21:
      unint64_t v27 = (v27 + 1) & v28;
      if (((*(void *)(a1 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
        goto LABEL_46;
      }
      continue;
    }
    break;
  }
  sub_10009B79C((uint64_t)&v84);
  a2 = v79;
LABEL_48:
  sub_100055A48(v92, v94);
  uint64_t result = (uint64_t)sub_100055A48(v94, &v105);
  if (v106 != 1) {
    goto LABEL_13;
  }
  uint64_t v48 = sub_10003FAA0()[2];
  swift_bridgeObjectRelease();
  if (v48)
  {
    uint64_t v49 = a2;
    v88[0] = sub_10003FAA0();
    v88[1] = &_swiftEmptySetSingleton;
    *((void *)&v87 + 1) = 0x80000001005E4E60;
    *(void *)&long long v87 = 0xD000000000000010;
    *(void *)&long long v84 = &type metadata for CreateMailboxes;
    LOBYTE(v81[0]) = 1;
    sub_1005E2BF0();
    if (*(void *)(a1 + 16))
    {
      sub_1005E33F0();
      sub_1005E2BE0();
      Swift::Int v50 = sub_1005E3470();
      uint64_t v51 = -1 << *(unsigned char *)(a1 + 32);
      unint64_t v52 = v50 & ~v51;
      if ((*(void *)(a1 + 56 + ((v52 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v52))
      {
        uint64_t v53 = ~v51;
        do
        {
          sub_10003C94C(*(void *)(a1 + 48) + 48 * v52, (uint64_t)v81);
          uint64_t v54 = *(void *)&v81[0];
          uint64_t v55 = v84;
          sub_10003C94C((uint64_t)v81, (uint64_t)v83);
          sub_10003C94C((uint64_t)&v84, (uint64_t)v80);
          if (v54 == v55)
          {
            char v56 = sub_1005E2BD0();
            sub_10003C9A8((uint64_t)v80);
            sub_10003C9A8((uint64_t)v83);
            sub_10003C9A8((uint64_t)v81);
            if (v56)
            {
              uint64_t result = sub_10009B46C((uint64_t)&v84);
              goto LABEL_79;
            }
          }
          else
          {
            sub_10003C9A8((uint64_t)v80);
            sub_10003C9A8((uint64_t)v83);
            sub_10003C9A8((uint64_t)v81);
          }
          unint64_t v52 = (v52 + 1) & v53;
        }
        while (((*(void *)(a1 + 56 + ((v52 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v52) & 1) != 0);
      }
    }
    *(void *)(v49 + 24) = sub_10000566C(&qword_10070B6D8);
    *(void *)(v49 + 32) = sub_100007494(&qword_10070B6E0, &qword_10070B6D8);
    uint64_t v57 = swift_allocObject();
    *(void *)uint64_t v49 = v57;
    sub_10009B410((uint64_t)&v84, v57 + 16);
    *(void *)(v57 + 96) = _swiftEmptyArrayStorage;
    *(void *)(v57 + 104) = _swiftEmptyArrayStorage;
    *(unsigned char *)(v49 + 40) = 0;
    return sub_10009B46C((uint64_t)&v84);
  }
  uint64_t v58 = sub_10003FA98()[2];
  swift_bridgeObjectRelease();
  if (v58 && !sub_10008C018(3, *(void *)(v3 + 240)))
  {
    uint64_t v49 = a2;
    int v69 = sub_10003FA98();
    sub_1001013DC((uint64_t)v69, &v84);
    if (!*(void *)(a1 + 16)
      || (sub_1005E33F0(),
          sub_1005E2BE0(),
          Swift::Int v70 = sub_1005E3470(),
          uint64_t v71 = -1 << *(unsigned char *)(a1 + 32),
          unint64_t v72 = v70 & ~v71,
          ((*(void *)(a1 + 56 + ((v72 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v72) & 1) == 0))
    {
LABEL_80:
      *(void *)(v49 + 24) = sub_10000566C(&qword_10070B6E8);
      *(void *)(v49 + 32) = sub_100007494(&qword_10070B6F0, &qword_10070B6E8);
      uint64_t v77 = swift_allocObject();
      *(void *)uint64_t v49 = v77;
      sub_10009B528((uint64_t)&v84, v77 + 16);
      *(void *)(v77 + 96) = _swiftEmptyArrayStorage;
      *(void *)(v77 + 104) = _swiftEmptyArrayStorage;
      *(unsigned char *)(v49 + 40) = 0;
      return sub_10009B584((uint64_t)&v84);
    }
    uint64_t v73 = ~v71;
    while (1)
    {
      sub_10003C94C(*(void *)(a1 + 48) + 48 * v72, (uint64_t)v81);
      uint64_t v74 = *(void *)&v81[0];
      uint64_t v75 = v84;
      sub_10003C94C((uint64_t)v81, (uint64_t)v83);
      sub_10003C94C((uint64_t)&v84, (uint64_t)v80);
      if (v74 == v75)
      {
        char v76 = sub_1005E2BD0();
        sub_10003C9A8((uint64_t)v80);
        sub_10003C9A8((uint64_t)v83);
        sub_10003C9A8((uint64_t)v81);
        if (v76)
        {
          uint64_t result = sub_10009B584((uint64_t)&v84);
LABEL_79:
          *(_OWORD *)uint64_t v49 = 0u;
          *(_OWORD *)(v49 + 16) = 0u;
          *(void *)(v49 + 32) = 0;
          *(unsigned char *)(v49 + 40) = -1;
          return result;
        }
      }
      else
      {
        sub_10003C9A8((uint64_t)v80);
        sub_10003C9A8((uint64_t)v83);
        sub_10003C9A8((uint64_t)v81);
      }
      unint64_t v72 = (v72 + 1) & v73;
      if (((*(void *)(a1 + 56 + ((v72 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v72) & 1) == 0) {
        goto LABEL_80;
      }
    }
  }
  uint64_t v59 = sub_10003FDB4()[2];
  uint64_t result = swift_bridgeObjectRelease();
  if (!v59) {
    goto LABEL_13;
  }
  uint64_t v49 = a2;
  uint64_t v60 = sub_10003FDB4();
  *((void *)&v87 + 1) = &_swiftEmptySetSingleton;
  v88[0] = &_swiftEmptySetSingleton;
  *(void *)&long long v87 = v60;
  *(void *)&long long v84 = &type metadata for RenameMailboxes;
  LOBYTE(v81[0]) = 1;
  sub_1005E2BF0();
  if (*(void *)(a1 + 16))
  {
    sub_1005E33F0();
    sub_1005E2BE0();
    Swift::Int v61 = sub_1005E3470();
    uint64_t v62 = -1 << *(unsigned char *)(a1 + 32);
    unint64_t v63 = v61 & ~v62;
    if ((*(void *)(a1 + 56 + ((v63 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v63))
    {
      uint64_t v64 = ~v62;
      do
      {
        sub_10003C94C(*(void *)(a1 + 48) + 48 * v63, (uint64_t)v81);
        uint64_t v65 = *(void *)&v81[0];
        uint64_t v66 = v84;
        sub_10003C94C((uint64_t)v81, (uint64_t)v83);
        sub_10003C94C((uint64_t)&v84, (uint64_t)v80);
        if (v65 == v66)
        {
          char v67 = sub_1005E2BD0();
          sub_10003C9A8((uint64_t)v80);
          sub_10003C9A8((uint64_t)v83);
          sub_10003C9A8((uint64_t)v81);
          if (v67)
          {
            uint64_t result = sub_10009B694((uint64_t)&v84);
            goto LABEL_79;
          }
        }
        else
        {
          sub_10003C9A8((uint64_t)v80);
          sub_10003C9A8((uint64_t)v83);
          sub_10003C9A8((uint64_t)v81);
        }
        unint64_t v63 = (v63 + 1) & v64;
      }
      while (((*(void *)(a1 + 56 + ((v63 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v63) & 1) != 0);
    }
  }
  *(void *)(v49 + 24) = sub_10000566C(&qword_10070B6F8);
  *(void *)(v49 + 32) = sub_100007494(&qword_10070B700, &qword_10070B6F8);
  uint64_t v68 = swift_allocObject();
  *(void *)uint64_t v49 = v68;
  sub_10009B638((uint64_t)&v84, v68 + 16);
  *(void *)(v68 + 88) = _swiftEmptyArrayStorage;
  *(void *)(v68 + 96) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v49 + 40) = 0;
  return sub_10009B694((uint64_t)&v84);
}

uint64_t sub_10008EFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v7 = *(void *)(v2 + 160);
  uint64_t v8 = *(void *)(v2 + 168);
  uint64_t v6 = v2 + 160;
  uint64_t v9 = *(void *)(v6 + 16);
  char v10 = *(unsigned char *)(v6 + 24);
  sub_10005636C(v7, v8, v9, v10);
  uint64_t v11 = sub_100040BAC(a1, a2);
  if ((v10 & 1) == 0)
  {
    sub_10000F0D4(v7, v8, v9, 0);
    if (*(void *)(v3 + 112)) {
      goto LABEL_31;
    }
    return v11;
  }
  uint64_t v37 = v9;
  uint64_t v38 = v8;
  uint64_t v39 = v7;
  uint64_t v12 = sub_10008B4F8(v7);
  uint64_t v13 = sub_10009A9CC((uint64_t)v12);
  swift_bridgeObjectRelease();
  char v14 = sub_10008B5D0(a1);
  uint64_t v15 = sub_10009A9CC((uint64_t)v14);
  swift_bridgeObjectRelease();
  uint64_t v41 = v11;
  if (*(void *)(v13 + 16) <= *(void *)(v15 + 16) >> 3) {
    sub_1000D2530(v13);
  }
  else {
    sub_1000CF8C8(v13, v15);
  }
  swift_bridgeObjectRelease();
  uint64_t v40 = v3;
  uint64_t v16 = *(void *)(v3 + 56);
  uint64_t v42 = v16 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(v16 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v16 + 64);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v22 = 0;
  while (1)
  {
    if (v19)
    {
      unint64_t v25 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v26 = v25 | (v22 << 6);
      goto LABEL_28;
    }
    int64_t v27 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v27 >= v20) {
      goto LABEL_30;
    }
    unint64_t v28 = *(void *)(v42 + 8 * v27);
    ++v22;
    if (!v28)
    {
      int64_t v22 = v27 + 1;
      if (v27 + 1 >= v20) {
        goto LABEL_30;
      }
      unint64_t v28 = *(void *)(v42 + 8 * v22);
      if (!v28)
      {
        int64_t v22 = v27 + 2;
        if (v27 + 2 >= v20) {
          goto LABEL_30;
        }
        unint64_t v28 = *(void *)(v42 + 8 * v22);
        if (!v28) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v19 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v22 << 6);
LABEL_28:
    uint64_t v30 = *(unsigned int *)(*(void *)(v16 + 48) + 4 * v26);
    uint64_t v31 = *(void *)(v16 + 56) + 32 * v26;
    char v32 = *(unsigned char *)v31;
    uint64_t v33 = *(void *)(v31 + 8);
    char v34 = *(unsigned char *)(v31 + 16);
    if (v33)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v23 = swift_bridgeObjectRetain();
      uint64_t v24 = sub_1000C0BCC(v23, v33);
    }
    else
    {
      uint64_t v24 = 0;
    }
    sub_100048100(v30, v32, v33, v34, v24);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v29 = v27 + 3;
  if (v29 < v20)
  {
    unint64_t v28 = *(void *)(v42 + 8 * v29);
    if (!v28)
    {
      while (1)
      {
        int64_t v22 = v29 + 1;
        if (__OFADD__(v29, 1)) {
          goto LABEL_35;
        }
        if (v22 >= v20) {
          goto LABEL_30;
        }
        unint64_t v28 = *(void *)(v42 + 8 * v22);
        ++v29;
        if (v28) {
          goto LABEL_27;
        }
      }
    }
    int64_t v22 = v29;
    goto LABEL_27;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  sub_10000F0D4(v39, v38, v37, 1);
  swift_release();
  uint64_t v3 = v40;
  uint64_t v11 = v41;
  if (!*(void *)(v40 + 112)) {
    return v11;
  }
LABEL_31:
  if (*(unsigned char *)(v3 + 184) == 1)
  {
    uint64_t v35 = swift_bridgeObjectRetain();
    uint64_t v36 = sub_10008F304(v35);
    swift_bridgeObjectRelease();
    sub_10004CF6C(v36);
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_10008F304(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(63 - v3) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v5) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v10 = v9 | (v8 << 6);
  while (1)
  {
    uint64_t v11 = *(void *)(a1 + 56) + 72 * v10;
    if (*(unsigned char *)(v11 + 65))
    {
      if (v5) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v16 = *(void *)(a1 + 48) + 16 * v10;
      uint64_t v42 = *(unsigned int *)(v16 + 8);
      uint64_t v17 = *(void *)(v11 + 32);
      uint64_t v35 = *(void *)(v11 + 24);
      uint64_t v36 = *(void *)v16;
      uint64_t v19 = *(void *)(v11 + 40);
      uint64_t v18 = *(void *)(v11 + 48);
      uint64_t v20 = *(void *)(v11 + 56);
      char v21 = *(unsigned char *)(v11 + 64);
      unint64_t v22 = *((void *)&_swiftEmptyDictionarySingleton + 2);
      uint64_t v41 = v20;
      char v40 = v21;
      uint64_t v38 = v19;
      char v39 = v18;
      uint64_t v37 = v17;
      if (*((void *)&_swiftEmptyDictionarySingleton + 3) <= v22)
      {
        uint64_t v23 = v22 + 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100050DE0(v23, 1);
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3410(v42 | (v42 << 32));
      uint64_t result = sub_1005E3470();
      uint64_t v24 = (char *)&_swiftEmptyDictionarySingleton + 64;
      uint64_t v25 = -1 << *((unsigned char *)&_swiftEmptyDictionarySingleton + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*((void *)&_swiftEmptyDictionarySingleton + (v26 >> 6) + 8)) == 0)
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v25) >> 6;
        while (++v27 != v30 || (v29 & 1) == 0)
        {
          BOOL v31 = v27 == v30;
          if (v27 == v30) {
            unint64_t v27 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)&v24[8 * v27];
          if (v32 != -1)
          {
            unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
            goto LABEL_37;
          }
        }
        goto LABEL_41;
      }
      unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*((void *)&_swiftEmptyDictionarySingleton + (v26 >> 6) + 8))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_37:
      *(void *)&v24[(v28 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v28;
      uint64_t v33 = *((void *)&_swiftEmptyDictionarySingleton + 6) + 16 * v28;
      *(void *)uint64_t v33 = v36;
      *(_DWORD *)(v33 + 8) = v42;
      uint64_t v34 = *((void *)&_swiftEmptyDictionarySingleton + 7) + 48 * v28;
      *(void *)uint64_t v34 = v35;
      *(void *)(v34 + 8) = v37;
      *(void *)(v34 + 16) = v38;
      *(unsigned char *)(v34 + 24) = v39 & 1;
      *(void *)(v34 + 32) = v41;
      *(unsigned char *)(v34 + 40) = v40 & 1;
      ++*((void *)&_swiftEmptyDictionarySingleton + 2);
      uint64_t result = swift_bridgeObjectRelease();
      if (v5) {
        goto LABEL_5;
      }
    }
LABEL_8:
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v12 >= v6) {
      goto LABEL_39;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    int64_t v14 = v8 + 1;
    if (!v13)
    {
      int64_t v14 = v8 + 2;
      if (v8 + 2 >= v6) {
        goto LABEL_39;
      }
      unint64_t v13 = *(void *)(v2 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v8 + 3;
        if (v8 + 3 >= v6) {
          goto LABEL_39;
        }
        unint64_t v13 = *(void *)(v2 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v8 + 4;
          if (v8 + 4 >= v6) {
            goto LABEL_39;
          }
          unint64_t v13 = *(void *)(v2 + 8 * v14);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v14 << 6);
    int64_t v8 = v14;
  }
  int64_t v15 = v8 + 5;
  if (v8 + 5 >= v6)
  {
LABEL_39:
    sub_10003BC80();
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  unint64_t v13 = *(void *)(v2 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v8 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v6) {
      goto LABEL_39;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_10008F678(unint64_t a1, unsigned __int8 *a2)
{
  char v3 = *((unsigned char *)v2 + 184);
  char v25 = sub_100040B10();
  char v4 = *((unsigned char *)v2 + 10);
  unsigned __int8 v5 = *((unsigned char *)v2 + 17);
  uint64_t v6 = *((void *)v2 + 3);
  uint64_t v7 = *((void *)v2 + 5);
  char v8 = *((unsigned char *)v2 + 128);
  char v33 = *((unsigned char *)v2 + 8);
  char v32 = v8;
  char v9 = *((unsigned char *)v2 + 32);
  char v10 = *((unsigned char *)v2 + 16);
  char v31 = v3;
  uint64_t v11 = *((void *)v2 + 6);
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1000D8938();
  unint64_t v13 = sub_1000D8D74(v10, v5, v6, v9, v7, v4, v11, v12);
  sub_10008FA54(a1, a2);
  char v14 = BYTE1(v2[1]);
  uint64_t v15 = *((void *)v2 + 3);
  LOBYTE(v11) = BYTE2(*((void *)v2 + 1));
  uint64_t v16 = *((void *)v2 + 5);
  uint64_t v17 = *((void *)v2 + 6);
  char v18 = v2[2];
  LOBYTE(v6) = v2[1];
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1000D8938();
  unint64_t v20 = sub_1000D8D74(v6, v14 & 1, v15, v18, v16, v11, v17, v19);
  uint64_t result = sub_1000D9018(v13 & 0x101010101FFFF01, v20 & 0x101010101FFFF01);
  if (result)
  {
    if ((v25 & 1) == 0) {
      return result;
    }
  }
  else
  {
    sub_100090390(v13 & 0xFF01);
    long long v26 = *v2;
    long long v27 = v2[1];
    long long v28 = v2[2];
    long long v29 = v2[3];
    uint64_t v30 = *((void *)v2 + 31);
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1000D8938();
    sub_1000D8D74(v27, BYTE1(v27) & 1, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), SBYTE10(v26), v29, v22);
    uint64_t result = sub_10001D550((uint64_t)&v30);
    *((void *)v2 + 31) = &_swiftEmptySetSingleton;
    if ((v25 & 1) == 0) {
      return result;
    }
  }
  uint64_t result = sub_100040B10();
  if ((result & 1) == 0) {
    *((unsigned char *)v2 + 129) = 0;
  }
  return result;
}

uint64_t sub_10008FA54(unint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin(v6);
  char v8 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = a1 >> 62;
  if (a1 >> 62)
  {
    if v9 == 1 && (*(unsigned char *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18))
    {
      unint64_t v10 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      int v11 = (v10 >> 59) & 0x1E | (v10 >> 2) & 1;
      if (v11)
      {
        if (v11 == 18)
        {
          uint64_t v56 = *(void *)((v10 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          swift_retain_n();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          swift_bridgeObjectRetain_n();
          uint64_t v57 = sub_1005E0EB0();
          os_log_type_t v58 = sub_1005E2580();
          int v82 = v58;
          if (os_log_type_enabled(v57, v58))
          {
            uint64_t v59 = (_DWORD *)swift_slowAlloc();
            uint64_t v83 = v56;
            uint64_t v60 = v59;
            *uint64_t v59 = 68158208;
            LODWORD(v106[0]) = 2;
            sub_1005E2960();
            *((_WORD *)v60 + 4) = 256;
            os_log_t v81 = (os_log_t)((char *)v60 + 10);
            unsigned __int8 v61 = a2[OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id];
            swift_release();
            LOBYTE(v106[0]) = v61;
            sub_1005E2960();
            swift_release();
            *(_WORD *)((char *)v60 + 11) = 2048;
            os_log_t v81 = v57;
            uint64_t v62 = *(void *)(v83 + 16);
            swift_bridgeObjectRelease();
            *(void *)&v106[0] = v62;
            sub_1005E2960();
            swift_bridgeObjectRelease();
            os_log_t v63 = v81;
            _os_log_impl((void *)&_mh_execute_header, v81, (os_log_type_t)v82, "[%.*hhx] Setting %ld search requests.", (uint8_t *)v60, 0x15u);
            uint64_t v56 = v83;
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
            swift_bridgeObjectRelease_n();
          }
          if (*(void *)(v3 + 112)) {
            unint64_t v74 = *(void *)(v3 + 112);
          }
          else {
            unint64_t v74 = sub_1000D4CCC((uint64_t)_swiftEmptyArrayStorage);
          }
          v107[0] = v74;
          v107[1] = (uint64_t)sub_100090E64;
          v107[2] = 0;
          v107[3] = (uint64_t)sub_10009A414;
          v107[4] = 0;
          v107[5] = (uint64_t)sub_10009A424;
          v107[6] = 0;
          *(void *)&v106[0] = &_swiftEmptyDictionarySingleton;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_100099D1C(v107, 1, v106);
          swift_bridgeObjectRelease();
          sub_100042BA8(v56, *(uint64_t *)&v106[0]);
          swift_release();
        }
        else if (v11 == 2)
        {
          uint64_t v12 = v10 & 0xFFFFFFFFFFFFFFBLL;
          int v13 = *(_DWORD *)(v12 + 16);
          uint64_t v14 = *(void *)(v12 + 32);
          int v82 = *(unsigned __int8 *)(v12 + 40);
          LODWORD(v83) = v13;
          LODWORD(v81) = *(unsigned __int8 *)(v12 + 24);
          swift_bridgeObjectRetain();
          __uint64_t v15 = static MonotonicTime.now()();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&v106[0] = *(void *)(v2 + 56);
          *(void *)(v2 + 56) = 0x8000000000000000;
          sub_100103784((char)v81, v14, v82, v15, v83, isUniquelyReferenced_nonNull_native);
          *(void *)(v2 + 56) = *(void *)&v106[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)(v2 + 248) = &_swiftEmptySetSingleton;
        }
      }
      else
      {
        LODWORD(v64) = *(unsigned __int8 *)(v10 + 16);
        int v65 = *(unsigned __int8 *)(v10 + 17);
        int v82 = *(unsigned __int8 *)(v10 + 18);
        LODWORD(v83) = v65;
        os_log_t v81 = *(os_log_t *)(v10 + 24);
        int v80 = *(unsigned __int8 *)(v10 + 32);
        uint64_t v79 = *(void *)(v10 + 40);
        swift_retain();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v66 = sub_1005E0EB0();
        os_log_type_t v67 = sub_1005E25C0();
        int v77 = v67;
        if (os_log_type_enabled(v66, v67))
        {
          uint64_t v68 = swift_slowAlloc();
          int v78 = v64;
          uint64_t v64 = v68;
          uint64_t v76 = swift_slowAlloc();
          *(void *)&v106[0] = v76;
          *(_DWORD *)uint64_t v64 = 68158210;
          LODWORD(v96.messageCount.value) = 2;
          sub_1005E2960();
          *(_WORD *)(v64 + 8) = 256;
          LOBYTE(v96.messageCount.value) = a2[OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id];
          sub_1005E2960();
          swift_release();
          *(_WORD *)(v64 + 11) = 2080;
          v75[1] = v64 + 13;
          if (v83) {
            int v69 = 256;
          }
          else {
            int v69 = 0;
          }
          int v70 = v69 | v78;
          if (v82) {
            int v71 = 0x10000;
          }
          else {
            int v71 = 0;
          }
          uint64_t v72 = Environment.description.getter(v70 | v71, (uint64_t)v81, v80);
          v96.messageCount.Swift::Int value = sub_1000C6914(v72, v73, (uint64_t *)v106);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v66, (os_log_type_t)v77, "[%.*hhx] Received environment update: %s", (uint8_t *)v64, 0x15u);
          swift_arrayDestroy();
          swift_slowDealloc();
          LOBYTE(v64) = v78;
          swift_slowDealloc();
        }
        else
        {
          swift_release();
        }
        *(unsigned char *)(v3 + 16) = v64;
        *(unsigned char *)(v3 + 17) = v83;
        *(unsigned char *)(v3 + 18) = v82;
        *(void *)(v3 + 24) = v81;
        *(unsigned char *)(v3 + 32) = v80;
        *(void *)(v3 + 40) = v79;
      }
    }
  }
  else
  {
    unint64_t v17 = *(void *)(a1 + 24);
    if (v17 >> 60 == 6)
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v3 + 48) = v18;
    }
  }
  unint64_t v19 = *(void *)(v3 + 64);
  if (v19 == 2)
  {
    unint64_t v20 = ServerID.empty.unsafeMutableAddressor();
    long long v22 = v20[1];
    long long v21 = v20[2];
    v106[0] = *v20;
    v106[1] = v22;
    v106[2] = v21;
    long long v23 = v20[6];
    long long v25 = v20[3];
    long long v24 = v20[4];
    v106[5] = v20[5];
    v106[6] = v23;
    v106[3] = v25;
    v106[4] = v24;
    long long v26 = v20[10];
    long long v28 = v20[7];
    long long v27 = v20[8];
    v106[9] = v20[9];
    v106[10] = v26;
    v106[7] = v28;
    v106[8] = v27;
    sub_100086B44((uint64_t)v106);
    sub_100086178((uint64_t)&_swiftEmptySetSingleton, v106, (uint64_t)v84);
    LOBYTE(v29) = v84[0];
    LOBYTE(v30) = v84[1];
    LOBYTE(v31) = v84[2];
    LOBYTE(v32) = v84[3];
    LOBYTE(v33) = v84[4];
    LOBYTE(v34) = v84[5];
    LOBYTE(v35) = v84[6];
    LOBYTE(v36) = v84[7];
    LOBYTE(v37) = v84[8];
    LOBYTE(v38) = v84[9];
    uint64_t v39 = v85;
    char v40 = v86;
    uint64_t v41 = v87;
    char v42 = v88;
    LOBYTE(v43) = v89;
  }
  else
  {
    unsigned int v44 = *(unsigned __int16 *)(v3 + 104);
    uint64_t v41 = *(void *)(v3 + 96);
    uint64_t v39 = *(void *)(v3 + 80);
    unint64_t v36 = HIBYTE(v19);
    uint64_t v38 = *(void *)(v3 + 72) >> 8;
    uint64_t v29 = *(void *)(v3 + 64) & 1;
    uint64_t v30 = (v19 >> 8) & 1;
    uint64_t v31 = (v19 >> 16) & 1;
    uint64_t v32 = (v19 >> 24) & 1;
    uint64_t v33 = HIDWORD(v19) & 1;
    uint64_t v34 = (v19 >> 40) & 1;
    uint64_t v35 = HIWORD(v19) & 1;
    uint64_t v37 = *(void *)(v3 + 72) & 1;
    char v40 = *(unsigned char *)(v3 + 88) & 1;
    char v42 = v44 & 1;
    int v43 = (v44 >> 8) & 1;
  }
  v100[0] = v29;
  v100[1] = v30;
  v100[2] = v31;
  uint64_t v100[3] = v32;
  v100[4] = v33;
  v100[5] = v34;
  v100[6] = v35;
  v100[7] = v36;
  v100[8] = v37;
  v100[9] = v38;
  uint64_t v101 = v39;
  char v102 = v40;
  uint64_t v103 = v41;
  char v104 = v42;
  char v105 = v43;
  if (v9)
  {
    if (v9 == 1)
    {
      unint64_t v45 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      char v46 = *(unsigned char *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1000575F0(v45, v46);
      sub_10004C158(v45, v46, (uint64_t)a2);
      sub_100057604(v45, v46);
    }
    return sub_100082860(a1, (uint64_t)a2);
  }
  else
  {
    long long v48 = *(_OWORD *)(a1 + 32);
    long long v97 = *(_OWORD *)(a1 + 16);
    long long v98 = v48;
    uint64_t v99 = *(void *)(a1 + 48);
    sub_100057594((uint64_t)&v97 + 8, (uint64_t)&v108);
    uint64_t v109 = v99;
    v110[0] = *((void *)&v98 + 1);
    sub_10009B94C(&v108);
    sub_10002292C((uint64_t)v110);
    sub_10002292C((uint64_t)&v109);
    sub_10004AF38((uint64_t)&v97, (uint64_t)v100, a2);
    sub_10009B978(&v108);
    sub_10001D550((uint64_t)v110);
    sub_10001D550((uint64_t)&v109);
    uint64_t result = sub_100082860(a1, (uint64_t)a2);
    unint64_t v49 = *(void *)(a1 + 24);
    if (v49 >> 60 == 3)
    {
      uint64_t v50 = swift_projectBox();
      sub_10009C16C(v50, (uint64_t)v8, type metadata accessor for UntaggedResponse);
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        uint64_t v51 = *(void *)v8;
        unsigned int v52 = *((_DWORD *)v8 + 2);
        long long v53 = *((_OWORD *)v8 + 6);
        *(_OWORD *)&v96.size.Swift::Int value = *((_OWORD *)v8 + 5);
        *(_OWORD *)&v96.highestModificationSequence.value.Swift::Int value = v53;
        *(_OWORD *)v96.gap59 = *(_OWORD *)(v8 + 105);
        long long v54 = *((_OWORD *)v8 + 2);
        *(_OWORD *)&v96.messageCount.Swift::Int value = *((_OWORD *)v8 + 1);
        *(_OWORD *)&v96.recentCount.Swift::Int value = v54;
        long long v55 = *((_OWORD *)v8 + 4);
        *(_OWORD *)&v96.nextUID.BOOL is_nil = *((_OWORD *)v8 + 3);
        *(_OWORD *)&v96.unseenCount.Swift::Int value = v55;
        RemoteMailbox.Status.init(_:)(&v90, &v96);
        sub_10001FDF0((uint64_t)&v90, (uint64_t)&v91, &qword_10070B410);
        if (v93 != 1)
        {
          long long v94 = v91;
          v95[0] = *(_OWORD *)v92;
          *(_OWORD *)((char *)v95 + 9) = *(_OWORD *)&v92[9];
          sub_100086880(v49);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10004D104(v51, v52, (uint64_t)&v94);
          swift_bridgeObjectRelease();
          sub_100086A88(v49);
          swift_bridgeObjectRelease();
        }
        return swift_bridgeObjectRelease();
      }
      else
      {
        return sub_10009C1D4((uint64_t)v8, type metadata accessor for UntaggedResponse);
      }
    }
  }
  return result;
}

uint64_t sub_100090390(__int16 a1)
{
  long long v3 = v1[13];
  long long v112 = v1[12];
  *(_OWORD *)int v113 = v3;
  long long v4 = v1[15];
  *(_OWORD *)&v113[16] = v1[14];
  long long v114 = v4;
  long long v5 = v1[9];
  *(_OWORD *)uint64_t v109 = v1[8];
  *(_OWORD *)&v109[16] = v5;
  long long v6 = v1[11];
  long long v110 = v1[10];
  long long v111 = v6;
  long long v7 = v1[5];
  long long v105 = v1[4];
  long long v106 = v7;
  long long v8 = v1[7];
  long long v107 = v1[6];
  long long v108 = v8;
  long long v9 = v1[1];
  long long v101 = *v1;
  long long v102 = v9;
  long long v10 = v1[3];
  long long v103 = v1[2];
  long long v104 = v10;
  uint64_t result = (uint64_t)sub_100090EBC();
  int64_t v12 = 0;
  uint64_t v39 = result + 56;
  uint64_t v60 = v101;
  uint64_t v61 = result;
  uint64_t v13 = 1 << *(unsigned char *)(result + 32);
  uint64_t v14 = -1;
  char v59 = BYTE8(v101);
  char v58 = BYTE9(v101);
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(result + 56);
  unsigned __int8 v57 = BYTE1(v102);
  char v56 = BYTE2(v102);
  long long v53 = v106;
  long long v54 = v105;
  uint64_t v52 = v107;
  __int16 v51 = WORD4(v107);
  long long v50 = v108;
  char v48 = v109[1];
  char v49 = v109[0];
  long long v47 = *(_OWORD *)&v109[8];
  uint64_t v46 = *(void *)&v109[24];
  uint64_t v16 = *((void *)&v110 + 1);
  uint64_t v17 = v110;
  uint64_t v18 = v111;
  long long v45 = v112;
  uint64_t v44 = *(void *)v113;
  long long v43 = *(_OWORD *)&v113[8];
  int64_t v40 = (unint64_t)(v13 + 63) >> 6;
  int v42 = *(_DWORD *)&v113[24];
  __int16 v37 = a1 & 0xFF01;
  uint64_t v38 = v1;
  unint64_t v36 = (void *)v1 + 21;
  long long v55 = v104;
  long long v41 = v114;
  char v19 = BYTE8(v111);
  char v20 = BYTE10(v101);
  char v21 = v102;
  uint64_t v22 = *((void *)&v102 + 1);
  char v23 = v103;
  uint64_t v24 = *((void *)&v103 + 1);
  uint64_t v25 = v104;
  if (v15) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v27 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
LABEL_28:
    __break(1u);
    return result;
  }
  if (v27 < v40)
  {
    unint64_t v28 = *(void *)(v39 + 8 * v27);
    int64_t v29 = v12 + 1;
    if (v28) {
      goto LABEL_20;
    }
    int64_t v29 = v12 + 2;
    if (v12 + 2 >= v40) {
      goto LABEL_24;
    }
    unint64_t v28 = *(void *)(v39 + 8 * v29);
    if (v28) {
      goto LABEL_20;
    }
    int64_t v29 = v12 + 3;
    if (v12 + 3 >= v40) {
      goto LABEL_24;
    }
    unint64_t v28 = *(void *)(v39 + 8 * v29);
    if (v28)
    {
LABEL_20:
      uint64_t v66 = (v28 - 1) & v28;
      int64_t v67 = v29;
      for (unint64_t i = __clz(__rbit64(v28)) + (v29 << 6); ; unint64_t i = __clz(__rbit64(v15)) | (v12 << 6))
      {
        uint64_t v31 = *(void *)(v61 + 48) + 16 * i;
        uint64_t v32 = *(void **)v31;
        unsigned int v62 = *(_DWORD *)(v31 + 8);
        char v71 = v59;
        char v70 = v49;
        char v69 = v19 & 1;
        uint64_t v72 = v60;
        char v73 = v59;
        char v74 = v58;
        char v75 = v20;
        char v76 = v21;
        unsigned __int8 v77 = v57;
        char v78 = v56;
        uint64_t v79 = v22;
        char v80 = v23;
        uint64_t v81 = v24;
        long long v82 = v55;
        long long v83 = v54;
        long long v84 = v53;
        uint64_t v85 = v52;
        __int16 v86 = v51;
        long long v87 = v50;
        char v88 = v49;
        char v89 = v48;
        long long v90 = v47;
        uint64_t v91 = v46;
        uint64_t v92 = v17;
        uint64_t v93 = v16;
        uint64_t v94 = v18;
        char v95 = v19 & 1;
        long long v96 = v45;
        uint64_t v97 = v44;
        long long v98 = v43;
        int v99 = v42;
        long long v100 = v41;
        uint64_t v64 = v18;
        int v65 = v32;
        uint64_t v63 = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v33 = sub_1000D8938();
        unint64_t v34 = sub_1000D8D74(v21, v57, v22, v23, v24, v20, v25, v33);
        if (v19)
        {
          uint64_t v68 = v17;
          uint64_t v35 = (void *)(v34 & 0x101010101FFFF01);
          swift_bridgeObjectRetain();
          sub_1000494F4((uint64_t)&v68, v65, v62, 0, v37, v35);
          sub_10000F0D4(v17, v63, v64, 1);
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v16 = 0;
          uint64_t v18 = 0;
          int64_t v12 = v67;
          uint64_t v17 = v68;
          *((void *)v38 + 20) = v68;
          *unint64_t v36 = 0;
          v36[1] = 0;
          *((unsigned char *)v38 + 184) = 1;
          unint64_t v15 = v66;
          if (!v66) {
            goto LABEL_7;
          }
        }
        else
        {
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v15 = v66;
          int64_t v12 = v67;
          uint64_t v16 = v63;
          uint64_t v18 = v64;
          if (!v66) {
            goto LABEL_7;
          }
        }
LABEL_6:
        uint64_t v66 = (v15 - 1) & v15;
        int64_t v67 = v12;
      }
    }
    uint64_t v30 = v12 + 4;
    if (v12 + 4 < v40)
    {
      unint64_t v28 = *(void *)(v39 + 8 * v30);
      if (v28)
      {
        int64_t v29 = v12 + 4;
        goto LABEL_20;
      }
      while (1)
      {
        int64_t v29 = v30 + 1;
        if (__OFADD__(v30, 1)) {
          goto LABEL_28;
        }
        if (v29 >= v40) {
          break;
        }
        unint64_t v28 = *(void *)(v39 + 8 * v29);
        ++v30;
        if (v28) {
          goto LABEL_20;
        }
      }
    }
  }
LABEL_24:
  return swift_release();
}

void sub_100090834(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  long long v6 = a3[12];
  long long v7 = a3[14];
  long long v8 = a3[15];
  long long v79 = a3[13];
  long long v80 = v7;
  long long v81 = v8;
  long long v9 = a3[8];
  long long v10 = a3[10];
  long long v11 = a3[11];
  long long v75 = a3[9];
  long long v76 = v10;
  long long v77 = v11;
  long long v78 = v6;
  long long v12 = a3[5];
  long long v70 = a3[4];
  long long v71 = v12;
  long long v13 = a3[7];
  long long v72 = a3[6];
  long long v73 = v13;
  long long v74 = v9;
  long long v14 = a3[1];
  long long v66 = *a3;
  long long v67 = v14;
  long long v15 = a3[3];
  long long v68 = a3[2];
  long long v69 = v15;
  v82[0] = *((void *)&v81 + 1);
  uint64_t v16 = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1000D8938();
  if ((sub_1000D8D74(v67, BYTE1(v67) & 1, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), SBYTE10(v66), v16, v17) & 0x10100FF00) != 0x101000200
    || (BYTE1(v67) & 1) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v18 = *(void *)(a4 + 264);
  uint64_t v19 = *(unsigned __int8 *)(a4 + 256);
  swift_bridgeObjectRetain();
  char v20 = sub_1000EAE28(v19, v18);
  swift_bridgeObjectRelease();
  unint64_t v21 = v20[2];
  if (!v21)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_10001D550((uint64_t)v82);
    *((void *)a3 + 31) = &_swiftEmptySetSingleton;
    return;
  }
  uint64_t v22 = a3;
  if (v21 <= *(void *)(a1 + 16) >> 3)
  {
    swift_bridgeObjectRetain();
    sub_1000D26D4((uint64_t)v20);
    swift_bridgeObjectRelease();
    char v23 = (unsigned char *)a1;
  }
  else
  {
    swift_bridgeObjectRetain();
    char v23 = sub_1000CFD38((uint64_t)v20, a1);
    swift_bridgeObjectRelease();
  }
  uint64_t v61 = v23 + 56;
  uint64_t v24 = 1 << v23[32];
  uint64_t v25 = -1;
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  unint64_t v26 = v25 & *((void *)v23 + 7);
  uint64_t v59 = OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id;
  int64_t v62 = (unint64_t)(v24 + 63) >> 6;
  int64_t v27 = (uint64_t *)a3 + 31;
  swift_bridgeObjectRetain();
  int64_t v28 = 0;
  char v58 = v23;
  while (v26)
  {
    unint64_t v29 = __clz(__rbit64(v26));
    v26 &= v26 - 1;
    unint64_t v30 = v29 | (v28 << 6);
LABEL_28:
    uint64_t v34 = *((void *)v23 + 6) + 16 * v30;
    uint64_t v35 = *(void *)v34;
    uint64_t v36 = *(unsigned int *)(v34 + 8);
    if ((sub_100010004(*(void *)v34, *(_DWORD *)(v34 + 8), *v27) & 1) == 0)
    {
      if (*((unsigned char *)v22 + 184) == 1 && (v37 = *((void *)v22 + 20), (uint64_t v38 = *(void *)(v37 + 16)) != 0))
      {
        uint64_t v39 = 0;
        uint64_t v40 = v37 + 32;
        while (1)
        {
          uint64_t v41 = v40 + 176 * v39;
          if ((*(unsigned int *)(v41 + 24) | ((unint64_t)*(unsigned int *)(v41 + 24) << 32)) == (v36 | (v36 << 32)))
          {
            uint64_t v42 = *(void *)(v41 + 16);
            uint64_t v43 = *(void *)(v42 + 16);
            if (v43 == *(void *)(v35 + 16))
            {
              if (v43) {
                BOOL v44 = v42 == v35;
              }
              else {
                BOOL v44 = 1;
              }
              if (v44) {
                goto LABEL_54;
              }
              if (*(unsigned __int8 *)(v42 + 32) == *(unsigned __int8 *)(v35 + 32))
              {
                if (v43 == 1) {
                  goto LABEL_54;
                }
                if (*(unsigned __int8 *)(v42 + 33) == *(unsigned __int8 *)(v35 + 33))
                {
                  if (v43 == 2) {
                    goto LABEL_54;
                  }
                  if (*(unsigned __int8 *)(v42 + 34) == *(unsigned __int8 *)(v35 + 34))
                  {
                    if (v43 == 3) {
                      goto LABEL_54;
                    }
                    if (*(unsigned __int8 *)(v42 + 35) == *(unsigned __int8 *)(v35 + 35)) {
                      break;
                    }
                  }
                }
              }
            }
          }
LABEL_32:
          if (++v39 == v38) {
            goto LABEL_50;
          }
        }
        long long v45 = (unsigned __int8 *)(v42 + 36);
        uint64_t v46 = v43 - 4;
        long long v47 = (unsigned __int8 *)(v35 + 36);
        while (v46)
        {
          int v49 = *v45++;
          int v48 = v49;
          int v50 = *v47++;
          --v46;
          if (v48 != v50) {
            goto LABEL_32;
          }
        }
LABEL_54:
        int v51 = *(_DWORD *)(v40 + 176 * v39 + 172);
      }
      else
      {
LABEL_50:
        LOWORD(v51) = -1;
      }
      __int16 v63 = v51;
      swift_retain_n();
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_1005E0EB0();
      os_log_type_t v53 = sub_1005E25C0();
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v54 = swift_slowAlloc();
        uint64_t v65 = swift_slowAlloc();
        *(_DWORD *)uint64_t v54 = 68158979;
        *(_DWORD *)(v54 + 4) = 2;
        *(_WORD *)(v54 + 8) = 256;
        char v55 = *(unsigned char *)(a2 + v59);
        swift_release();
        *(unsigned char *)(v54 + 10) = v55;
        uint64_t v22 = a3;
        swift_release();
        *(_WORD *)(v54 + 11) = 1040;
        *(_DWORD *)(v54 + 13) = 2;
        *(_WORD *)(v54 + 17) = 512;
        *(_WORD *)(v54 + 19) = v63;
        *(_WORD *)(v54 + 21) = 2160;
        *(void *)(v54 + 23) = 0x786F626C69616DLL;
        *(_WORD *)(v54 + 31) = 2085;
        swift_bridgeObjectRetain();
        uint64_t v56 = sub_1005E1CC0();
        *(void *)(v54 + 33) = sub_1000C6914(v56, v57, &v65);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "[%.*hhx] [Background] Skipping mailbox {%.*hx} '%{sensitive,mask.mailbox}s' until next sync.", (uint8_t *)v54, 0x29u);
        swift_arrayDestroy();
        swift_slowDealloc();
        char v23 = v58;
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();

        swift_release_n();
      }
      int64_t v27 = (uint64_t *)a3 + 31;
    }
  }
  int64_t v31 = v28 + 1;
  if (__OFADD__(v28, 1))
  {
    __break(1u);
    goto LABEL_57;
  }
  if (v31 >= v62) {
    goto LABEL_55;
  }
  unint64_t v32 = *(void *)&v61[8 * v31];
  ++v28;
  if (v32) {
    goto LABEL_27;
  }
  int64_t v28 = v31 + 1;
  if (v31 + 1 >= v62) {
    goto LABEL_55;
  }
  unint64_t v32 = *(void *)&v61[8 * v28];
  if (v32) {
    goto LABEL_27;
  }
  int64_t v28 = v31 + 2;
  if (v31 + 2 >= v62) {
    goto LABEL_55;
  }
  unint64_t v32 = *(void *)&v61[8 * v28];
  if (v32) {
    goto LABEL_27;
  }
  int64_t v33 = v31 + 3;
  if (v33 >= v62)
  {
LABEL_55:
    swift_release();
    sub_10008B844((uint64_t)v23);
    return;
  }
  unint64_t v32 = *(void *)&v61[8 * v33];
  int64_t v28 = v33;
  if (v32)
  {
LABEL_27:
    unint64_t v26 = (v32 - 1) & v32;
    unint64_t v30 = __clz(__rbit64(v32)) + (v28 << 6);
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v28 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v28 >= v62) {
      goto LABEL_55;
    }
    unint64_t v32 = *(void *)&v61[8 * v28];
    ++v33;
    if (v32) {
      goto LABEL_27;
    }
  }
LABEL_57:
  __break(1u);
}

uint64_t sub_100090E64@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (*(unsigned char *)(a1 + 81))
  {
    uint64_t result = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v4 = *(unsigned int *)(a1 + 8);
    uint64_t result = swift_bridgeObjectRetain();
  }
  *a2 = result;
  a2[1] = v4;
  a2[2] = v5;
  return result;
}

void *sub_100090EBC()
{
  uint64_t result = &_swiftEmptySetSingleton;
  if (*(unsigned char *)(v0 + 184))
  {
    uint64_t v2 = *(void *)(v0 + 160);
    uint64_t v3 = *(void *)(v0 + 168);
    uint64_t v4 = *(void *)(v0 + 176);
    long long v12 = &_swiftEmptySetSingleton;
    uint64_t v5 = *(void *)(v2 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      long long v6 = (void *)(v2 + 128);
      long long v7 = (void *)(v2 + 128);
      do
      {
        uint64_t v8 = *v7;
        v7 += 22;
        if (v8)
        {
          unsigned int v9 = *((_DWORD *)v6 - 18);
          uint64_t v10 = *(v6 - 10);
          swift_bridgeObjectRetain();
          sub_1000187DC((uint64_t)&v11, v10, v9);
          swift_bridgeObjectRelease();
        }
        long long v6 = v7;
        --v5;
      }
      while (v5);
      sub_10000F0D4(v2, v3, v4, 1);
      return v12;
    }
  }
  return result;
}

uint64_t sub_100090F8C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_10009B0B4;
  *(void *)(v6 + 24) = v5;
  v47[0] = v4;
  v47[1] = (uint64_t)sub_10009B0F4;
  v47[2] = v6;
  v47[3] = (uint64_t)sub_100091468;
  v47[4] = 0;
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v7 = sub_10008AE08(v47);
  uint64_t v42 = v7 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(v7 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v7 + 56);
  int64_t v43 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  uint64_t v44 = result;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v12 << 6);
    }
    else
    {
      int64_t v18 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_47;
      }
      if (v18 >= v43)
      {
LABEL_45:
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        return v7;
      }
      unint64_t v19 = *(void *)(v42 + 8 * v18);
      ++v12;
      if (!v19)
      {
        int64_t v12 = v18 + 1;
        if (v18 + 1 >= v43) {
          goto LABEL_45;
        }
        unint64_t v19 = *(void *)(v42 + 8 * v12);
        if (!v19)
        {
          int64_t v12 = v18 + 2;
          if (v18 + 2 >= v43) {
            goto LABEL_45;
          }
          unint64_t v19 = *(void *)(v42 + 8 * v12);
          if (!v19)
          {
            int64_t v20 = v18 + 3;
            if (v20 >= v43) {
              goto LABEL_45;
            }
            unint64_t v19 = *(void *)(v42 + 8 * v20);
            if (!v19)
            {
              while (1)
              {
                int64_t v12 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_48;
                }
                if (v12 >= v43) {
                  goto LABEL_45;
                }
                unint64_t v19 = *(void *)(v42 + 8 * v12);
                ++v20;
                if (v19) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v12 = v20;
          }
        }
      }
LABEL_22:
      unint64_t v10 = (v19 - 1) & v19;
      unint64_t v17 = __clz(__rbit64(v19)) + (v12 << 6);
    }
    uint64_t v21 = *(unsigned int *)(*(void *)(v7 + 48) + 4 * v17);
    uint64_t v22 = *(void *)(v2 + 160);
    uint64_t v45 = *(void *)(v2 + 168);
    uint64_t v14 = *(void *)(v2 + 176);
    char v15 = *(unsigned char *)(v2 + 184);
    if (v15) {
      break;
    }
    int64_t v36 = v12;
    uint64_t result = sub_100024260(v21);
    if (v37)
    {
      unint64_t v38 = result;
      swift_bridgeObjectRetain();
      uint64_t v13 = v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v24 = (void *)v22;
      if (!swift_isUniquelyReferenced_nonNull_native())
      {
        sub_100097798();
        uint64_t v24 = (void *)v22;
      }
      sub_1000960D4(v38, (uint64_t)v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = sub_10000F0D4(v22, v45, v14, 0);
      int64_t v12 = v36;
      uint64_t v7 = v44;
    }
    else
    {
      uint64_t v24 = (void *)v22;
      int64_t v12 = v36;
      uint64_t v7 = v44;
      uint64_t v13 = v45;
    }
LABEL_6:
    *(void *)(v2 + 160) = v24;
    *(void *)(v2 + 168) = v13;
    *(void *)(v2 + 176) = v14;
    *(unsigned char *)(v2 + 184) = v15;
  }
  if (!*(void *)(v22 + 16))
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v24 = *(void **)(v2 + 160);
    goto LABEL_6;
  }
  char v39 = *(unsigned char *)(v2 + 184);
  unint64_t v40 = v10;
  int64_t v41 = v12;
  swift_bridgeObjectRetain();
  unint64_t v23 = 0;
  uint64_t v24 = (void *)v22;
  while (1)
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100093440(v24);
      uint64_t v24 = (void *)result;
    }
    if (v23 >= v24[2]) {
      break;
    }
    unint64_t v26 = &v24[22 * v23];
    uint64_t v29 = v26[21];
    int64_t v28 = v26 + 21;
    uint64_t v27 = v29;
    sub_1005E33F0();
    sub_1005E3440(v21);
    Swift::Int v30 = sub_1005E3470();
    uint64_t v31 = -1 << *(unsigned char *)(v29 + 32);
    unint64_t v32 = v30 & ~v31;
    uint64_t v33 = v29 + 56;
    if ((*(void *)(v29 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32))
    {
      uint64_t v34 = *(void *)(v27 + 48);
      if (*(_DWORD *)(v34 + 4 * v32) == v21)
      {
LABEL_26:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v46 = *v28;
        *int64_t v28 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1000CB208();
        }
        sub_100094B80(v32);
        *int64_t v28 = v46;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v35 = ~v31;
        while (1)
        {
          unint64_t v32 = (v32 + 1) & v35;
          if (((*(void *)(v33 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) == 0) {
            break;
          }
          if (*(_DWORD *)(v34 + 4 * v32) == v21) {
            goto LABEL_26;
          }
        }
      }
    }
    if (++v23 == v24[2])
    {
      uint64_t result = sub_10000F0D4(v22, v45, v14, 1);
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v7 = v44;
      unint64_t v10 = v40;
      int64_t v12 = v41;
      char v15 = v39;
      goto LABEL_6;
    }
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

BOOL sub_100091404(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2 > 1u) {
    return 0;
  }
  uint64_t v6 = a6 - a5;
  if (a6 >= a5)
  {
    if (!__OFSUB__(a6, a5)) {
      return (double)v6 / 1000000000.0 > 60.0;
    }
  }
  else
  {
    if (!__OFSUB__(a5, a6))
    {
      uint64_t v6 = a6 - a5;
      if (!__OFSUB__(0, a5 - a6)) {
        return (double)v6 / 1000000000.0 > 60.0;
      }
      __break(1u);
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

_DWORD *sub_100091468@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_100091474()
{
  BOOL result = &_swiftEmptySetSingleton;
  if (*(unsigned char *)(v0 + 184))
  {
    uint64_t v2 = *(void *)(v0 + 160);
    uint64_t v3 = *(void *)(v0 + 168);
    uint64_t v4 = *(void *)(v0 + 176);
    unint64_t v32 = &_swiftEmptySetSingleton;
    uint64_t v5 = *(void *)(v2 + 16);
    if (v5)
    {
      uint64_t v6 = (long long *)(v2 + 32);
      swift_bridgeObjectRetain();
      for (uint64_t i = v5 - 1; ; --i)
      {
        long long v8 = *v6;
        long long v9 = v6[2];
        long long v22 = v6[1];
        long long v23 = v9;
        long long v21 = v8;
        long long v10 = v6[3];
        long long v11 = v6[4];
        long long v12 = v6[6];
        long long v26 = v6[5];
        long long v27 = v12;
        long long v24 = v10;
        long long v25 = v11;
        long long v13 = v6[7];
        long long v14 = v6[8];
        long long v15 = v6[10];
        long long v30 = v6[9];
        long long v31 = v15;
        long long v28 = v13;
        long long v29 = v14;
        uint64_t v16 = v22;
        unsigned int v17 = DWORD2(v22);
        uint64_t v18 = *((void *)&v25 + 1);
        uint64_t v19 = v26;
        sub_100007780((uint64_t)&v21);
        if ((static MailboxOfInterest.LocalModification.__derived_enum_equals(_:_:)(v18, v19, 0, 0) & 1) == 0)
        {
          swift_bridgeObjectRetain();
          sub_1000187DC((uint64_t)&v20, v16, v17);
          swift_bridgeObjectRelease();
        }
        sub_100007820((uint64_t)&v21);
        if (!i) {
          break;
        }
        v6 += 11;
      }
      sub_10000F0D4(v2, v3, v4, 1);
      return v32;
    }
  }
  return result;
}

void sub_1000915A0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 56);
  if (*(void *)(v3 + 16))
  {
    uint64_t v4 = (void **)static SyncRequest.Kind.allCases.getter();
    long long v67 = v4[2];
    if (v67)
    {
      unint64_t v5 = 0;
      os_log_t oslog = (os_log_t)(v3 + 64);
      long long v66 = (_UNKNOWN **)(v4 + 4);
      uint64_t v61 = OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id;
      uint64_t v63 = a1;
      uint64_t v65 = v4;
      while (1)
      {
        if (v5 >= (unint64_t)v4[2]) {
          goto LABEL_64;
        }
        int v6 = *((unsigned __int8 *)v66 + v5);
        long long v68 = (void *)(v5 + 1);
        long long v73 = &_swiftEmptySetSingleton;
        uint64_t v7 = 1 << *(unsigned char *)(v3 + 32);
        if (v7 < 64) {
          uint64_t v8 = ~(-1 << v7);
        }
        else {
          uint64_t v8 = -1;
        }
        unint64_t v9 = v8 & *(void *)(v3 + 64);
        swift_beginAccess();
        int64_t v10 = (unint64_t)(v7 + 63) >> 6;
        swift_bridgeObjectRetain();
        int64_t v11 = 0;
LABEL_11:
        while (v9)
        {
          unint64_t v13 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          unint64_t v14 = v13 | (v11 << 6);
LABEL_27:
          if (*(unsigned __int8 *)(*(void *)(v3 + 56) + 32 * v14) == v6)
          {
            Swift::Int v18 = *(unsigned int *)(*(void *)(v3 + 48) + 4 * v14);
            uint64_t v19 = v73;
            sub_1005E33F0();
            sub_1005E3440(v18);
            Swift::Int v20 = sub_1005E3470();
            uint64_t v21 = -1 << *((unsigned char *)v19 + 32);
            unint64_t v22 = v20 & ~v21;
            if (((*(void *)((char *)v19 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v22) & 1) == 0) {
              goto LABEL_10;
            }
            uint64_t v23 = v19[6];
            if (*(_DWORD *)(v23 + 4 * v22) != v18)
            {
              uint64_t v24 = ~v21;
              while (1)
              {
                unint64_t v22 = (v22 + 1) & v24;
                if (((*(void *)((char *)v19 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v22) & 1) == 0) {
                  break;
                }
                if (*(_DWORD *)(v23 + 4 * v22) == v18) {
                  goto LABEL_11;
                }
              }
LABEL_10:
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)&v71[0] = v73;
              long long v73 = (void *)0x8000000000000000;
              sub_1000C9BCC(v18, v22, isUniquelyReferenced_nonNull_native);
              long long v73 = *(void **)&v71[0];
              swift_bridgeObjectRelease();
            }
          }
        }
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
          goto LABEL_62;
        }
        if (v15 >= v10) {
          goto LABEL_34;
        }
        unint64_t isa = (unint64_t)oslog[v15].isa;
        ++v11;
        if (isa) {
          goto LABEL_26;
        }
        int64_t v11 = v15 + 1;
        if (v15 + 1 >= v10) {
          goto LABEL_34;
        }
        unint64_t isa = (unint64_t)oslog[v11].isa;
        if (isa) {
          goto LABEL_26;
        }
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_34;
        }
        unint64_t isa = (unint64_t)oslog[v11].isa;
        if (isa) {
          goto LABEL_26;
        }
        int64_t v17 = v15 + 3;
        if (v17 < v10) {
          break;
        }
LABEL_34:
        swift_endAccess();
        swift_release();
        if (v73[2])
        {
          if (*(unsigned char *)(v64 + 184))
          {
            uint64_t v28 = *(void *)(v64 + 160);
            uint64_t v29 = *(void *)(v28 + 16);
            if (v29)
            {
              uint64_t v30 = *(void *)(v64 + 168);
              uint64_t v62 = *(void *)(v64 + 176);
              long long v31 = (long long *)(v28 + 32);
              swift_bridgeObjectRetain();
              uint64_t v32 = 0;
              for (uint64_t i = v29 - 1; ; --i)
              {
                long long v34 = *v31;
                long long v35 = v31[2];
                v71[1] = v31[1];
                v71[2] = v35;
                v71[0] = v34;
                long long v36 = v31[3];
                long long v37 = v31[4];
                long long v38 = v31[6];
                v71[5] = v31[5];
                v71[6] = v38;
                v71[3] = v36;
                v71[4] = v37;
                long long v39 = v31[7];
                long long v40 = v31[8];
                long long v41 = v31[10];
                v71[9] = v31[9];
                v71[10] = v41;
                v71[7] = v39;
                v71[8] = v40;
                Swift::Int v42 = *((void *)&v40 + 1);
                sub_100007780((uint64_t)v71);
                Swift::Int v43 = swift_bridgeObjectRetain();
                LOBYTE(v42) = sub_100092240(v43, v42);
                swift_bridgeObjectRelease();
                sub_100007820((uint64_t)v71);
                if ((v42 & 1) == 0 && __OFADD__(v32++, 1)) {
                  goto LABEL_63;
                }
                if (!i) {
                  break;
                }
                v31 += 11;
              }
              sub_10000F0D4(v28, v30, v62, 1);
            }
            else
            {
              uint64_t v32 = 0;
            }
            swift_retain();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            long long v25 = sub_1005E0EB0();
            os_log_type_t v45 = sub_1005E25C0();
            if (!os_log_type_enabled(v25, v45)) {
              goto LABEL_48;
            }
            uint64_t v46 = swift_slowAlloc();
            *(void *)&v71[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v46 = 68159234;
            LODWORD(v72) = 2;
            sub_1005E2960();
            *(_WORD *)(v46 + 8) = 256;
            LOBYTE(v72) = *(unsigned char *)(v63 + v61);
            sub_1005E2960();
            swift_release();
            *(_WORD *)(v46 + 11) = 2082;
            uint64_t v53 = sub_1005E2CB0();
            uint64_t v72 = sub_1000C6914(v53, v54, (uint64_t *)v71);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            *(_WORD *)(v46 + 21) = 2048;
            uint64_t v72 = v73[2];
            sub_1005E2960();
            *(_WORD *)(v46 + 31) = 2082;
            uint64_t v55 = swift_bridgeObjectRetain();
            uint64_t v56 = sub_100092C58(v55);
            unint64_t v58 = v57;
            swift_bridgeObjectRelease();
            uint64_t v72 = sub_1000C6914(v56, v58, (uint64_t *)v71);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            *(_WORD *)(v46 + 41) = 2048;
            uint64_t v72 = v32;
            sub_1005E2960();
            *(_WORD *)(v46 + 51) = 2048;
            uint64_t v72 = v29;
            sub_1005E2960();
            _os_log_impl((void *)&_mh_execute_header, v25, v45, "[%.*hhx] Sync kind '%{public}s': %ld running sync request(s) {%{public}s} with total of %ld of %ld mailbox(es).", (uint8_t *)v46, 0x3Du);
            swift_arrayDestroy();
            swift_slowDealloc();
LABEL_49:
            swift_slowDealloc();
          }
          else
          {
            swift_retain();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            long long v25 = sub_1005E0EB0();
            os_log_type_t v26 = sub_1005E25C0();
            if (os_log_type_enabled(v25, v26))
            {
              uint64_t v27 = swift_slowAlloc();
              *(void *)&v71[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v27 = 68158722;
              LODWORD(v72) = 2;
              sub_1005E2960();
              *(_WORD *)(v27 + 8) = 256;
              LOBYTE(v72) = *(unsigned char *)(v63 + v61);
              sub_1005E2960();
              swift_release();
              *(_WORD *)(v27 + 11) = 2082;
              uint64_t v47 = sub_1005E2CB0();
              uint64_t v72 = sub_1000C6914(v47, v48, (uint64_t *)v71);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              *(_WORD *)(v27 + 21) = 2048;
              uint64_t v72 = v73[2];
              sub_1005E2960();
              *(_WORD *)(v27 + 31) = 2082;
              uint64_t v49 = swift_bridgeObjectRetain();
              uint64_t v50 = sub_100092C58(v49);
              unint64_t v52 = v51;
              swift_bridgeObjectRelease();
              uint64_t v72 = sub_1000C6914(v50, v52, (uint64_t *)v71);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v25, v26, "[%.*hhx] Sync kind '%{public}s': %ld running sync request(s) {%{public}s}. Mailbox(es) are unknown.", (uint8_t *)v27, 0x29u);
              swift_arrayDestroy();
              swift_slowDealloc();
              goto LABEL_49;
            }
LABEL_48:
            swift_release();
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v4 = v65;
        unint64_t v5 = (unint64_t)v68;
        if (v68 == v67)
        {
          swift_bridgeObjectRelease();
          return;
        }
      }
      unint64_t isa = (unint64_t)oslog[v17].isa;
      if (!isa)
      {
        while (1)
        {
          int64_t v11 = v17 + 1;
          if (__OFADD__(v17, 1)) {
            break;
          }
          if (v11 >= v10) {
            goto LABEL_34;
          }
          unint64_t isa = (unint64_t)oslog[v11].isa;
          ++v17;
          if (isa) {
            goto LABEL_26;
          }
        }
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
        JUMPOUT(0x100091FCCLL);
      }
      int64_t v11 = v17;
LABEL_26:
      unint64_t v9 = (isa - 1) & isa;
      unint64_t v14 = __clz(__rbit64(isa)) + (v11 << 6);
      goto LABEL_27;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    osloga = sub_1005E0EB0();
    os_log_type_t v59 = sub_1005E25C0();
    if (os_log_type_enabled(osloga, v59))
    {
      uint64_t v60 = swift_slowAlloc();
      *(_DWORD *)uint64_t v60 = 68157952;
      LODWORD(v71[0]) = 2;
      sub_1005E2960();
      *(_WORD *)(v60 + 8) = 256;
      LOBYTE(v71[0]) = *(unsigned char *)(a1 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
      sub_1005E2960();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, osloga, v59, "[%.*hhx] No running sync requests.", (uint8_t *)v60, 0xBu);
      swift_slowDealloc();
    }
    else
    {
      swift_release();
    }
  }
}

Swift::Int sub_100091FEC(Swift::Int result, Swift::Int a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return 1;
  }
  int64_t v4 = 0;
  if (v2 >= v3) {
    Swift::Int v5 = result;
  }
  else {
    Swift::Int v5 = a2;
  }
  if (v2 >= v3) {
    Swift::Int v6 = a2;
  }
  else {
    Swift::Int v6 = result;
  }
  Swift::Int v7 = v5 + 56;
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  if (-v8 < 64) {
    uint64_t v9 = ~(-1 << -(char)v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 56);
  int64_t v24 = (unint64_t)(63 - v8) >> 6;
  Swift::Int v11 = v6 + 56;
  while (1)
  {
    while (1)
    {
      int64_t v12 = v4;
      if (!v10) {
        break;
      }
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v4 << 6);
      if (*(void *)(v6 + 16))
      {
LABEL_29:
        Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v14);
        sub_1005E33F0();
        sub_1005E3410(v18);
        BOOL result = sub_1005E3470();
        uint64_t v19 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v20 = result & ~v19;
        if ((*(void *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
        {
          uint64_t v21 = *(void *)(v6 + 48);
          if (*(unsigned __int8 *)(v21 + v20) == v18)
          {
LABEL_34:
            swift_bridgeObjectRetain();
            uint64_t v23 = 0;
LABEL_35:
            sub_10003BC80();
            return v23;
          }
          uint64_t v22 = ~v19;
          while (1)
          {
            unint64_t v20 = (v20 + 1) & v22;
            if (((*(void *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
              break;
            }
            if (*(unsigned __int8 *)(v21 + v20) == v18) {
              goto LABEL_34;
            }
          }
        }
      }
    }
    int64_t v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v24) {
      goto LABEL_38;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v15);
    ++v4;
    if (!v16)
    {
      int64_t v4 = v12 + 2;
      if (v12 + 2 >= v24) {
        goto LABEL_38;
      }
      unint64_t v16 = *(void *)(v7 + 8 * v4);
      if (!v16)
      {
        int64_t v4 = v12 + 3;
        if (v12 + 3 >= v24) {
          goto LABEL_38;
        }
        unint64_t v16 = *(void *)(v7 + 8 * v4);
        if (!v16)
        {
          int64_t v17 = v12 + 4;
          if (v12 + 4 >= v24)
          {
LABEL_38:
            swift_bridgeObjectRetain();
            uint64_t v23 = 1;
            goto LABEL_35;
          }
          unint64_t v16 = *(void *)(v7 + 8 * v17);
          int64_t v4 = v12 + 4;
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_28:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v4 << 6);
    if (*(void *)(v6 + 16)) {
      goto LABEL_29;
    }
  }
  while (1)
  {
    int64_t v4 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v4 >= v24) {
      goto LABEL_38;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v4);
    ++v17;
    if (v16) {
      goto LABEL_28;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

Swift::Int sub_100092240(Swift::Int result, Swift::Int a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return 1;
  }
  int64_t v4 = 0;
  if (v2 >= v3) {
    Swift::Int v5 = result;
  }
  else {
    Swift::Int v5 = a2;
  }
  if (v2 >= v3) {
    Swift::Int v6 = a2;
  }
  else {
    Swift::Int v6 = result;
  }
  Swift::Int v7 = v5 + 56;
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  if (-v8 < 64) {
    uint64_t v9 = ~(-1 << -(char)v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 56);
  int64_t v24 = (unint64_t)(63 - v8) >> 6;
  Swift::Int v11 = v6 + 56;
  while (1)
  {
    while (1)
    {
      int64_t v12 = v4;
      if (!v10) {
        break;
      }
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v4 << 6);
      if (*(void *)(v6 + 16))
      {
LABEL_29:
        Swift::UInt32 v18 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v14);
        sub_1005E33F0();
        sub_1005E3440(v18);
        BOOL result = sub_1005E3470();
        uint64_t v19 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v20 = result & ~v19;
        if ((*(void *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
        {
          uint64_t v21 = *(void *)(v6 + 48);
          if (*(_DWORD *)(v21 + 4 * v20) == v18)
          {
LABEL_34:
            swift_bridgeObjectRetain();
            uint64_t v23 = 0;
LABEL_35:
            sub_10003BC80();
            return v23;
          }
          uint64_t v22 = ~v19;
          while (1)
          {
            unint64_t v20 = (v20 + 1) & v22;
            if (((*(void *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
              break;
            }
            if (*(_DWORD *)(v21 + 4 * v20) == v18) {
              goto LABEL_34;
            }
          }
        }
      }
    }
    int64_t v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v24) {
      goto LABEL_38;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v15);
    ++v4;
    if (!v16)
    {
      int64_t v4 = v12 + 2;
      if (v12 + 2 >= v24) {
        goto LABEL_38;
      }
      unint64_t v16 = *(void *)(v7 + 8 * v4);
      if (!v16)
      {
        int64_t v4 = v12 + 3;
        if (v12 + 3 >= v24) {
          goto LABEL_38;
        }
        unint64_t v16 = *(void *)(v7 + 8 * v4);
        if (!v16)
        {
          int64_t v17 = v12 + 4;
          if (v12 + 4 >= v24)
          {
LABEL_38:
            swift_bridgeObjectRetain();
            uint64_t v23 = 1;
            goto LABEL_35;
          }
          unint64_t v16 = *(void *)(v7 + 8 * v17);
          int64_t v4 = v12 + 4;
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_28:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v4 << 6);
    if (*(void *)(v6 + 16)) {
      goto LABEL_29;
    }
  }
  while (1)
  {
    int64_t v4 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v4 >= v24) {
      goto LABEL_38;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v4);
    ++v17;
    if (v16) {
      goto LABEL_28;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

Swift::Int sub_100092494(Swift::Int result, Swift::Int a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return 1;
  }
  int64_t v4 = 0;
  if (v2 >= v3) {
    Swift::Int v5 = result;
  }
  else {
    Swift::Int v5 = a2;
  }
  if (v2 >= v3) {
    Swift::Int v6 = a2;
  }
  else {
    Swift::Int v6 = result;
  }
  Swift::Int v7 = v5 + 56;
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  if (-v8 < 64) {
    uint64_t v9 = ~(-1 << -(char)v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 56);
  int64_t v24 = (unint64_t)(63 - v8) >> 6;
  Swift::Int v11 = v6 + 56;
  while (1)
  {
    while (1)
    {
      int64_t v12 = v4;
      if (!v10) {
        break;
      }
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v4 << 6);
      if (*(void *)(v6 + 16))
      {
LABEL_29:
        Swift::UInt32 v18 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v14);
        sub_1005E33F0();
        sub_1005E3440(v18);
        BOOL result = sub_1005E3470();
        uint64_t v19 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v20 = result & ~v19;
        if ((*(void *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
        {
          uint64_t v21 = *(void *)(v6 + 48);
          if (v18 == *(_DWORD *)(v21 + 4 * v20))
          {
LABEL_34:
            swift_bridgeObjectRetain();
            uint64_t v23 = 0;
LABEL_35:
            sub_10003BC80();
            return v23;
          }
          uint64_t v22 = ~v19;
          while (1)
          {
            unint64_t v20 = (v20 + 1) & v22;
            if (((*(void *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
              break;
            }
            if (v18 == *(_DWORD *)(v21 + 4 * v20)) {
              goto LABEL_34;
            }
          }
        }
      }
    }
    int64_t v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v24) {
      goto LABEL_38;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v15);
    ++v4;
    if (!v16)
    {
      int64_t v4 = v12 + 2;
      if (v12 + 2 >= v24) {
        goto LABEL_38;
      }
      unint64_t v16 = *(void *)(v7 + 8 * v4);
      if (!v16)
      {
        int64_t v4 = v12 + 3;
        if (v12 + 3 >= v24) {
          goto LABEL_38;
        }
        unint64_t v16 = *(void *)(v7 + 8 * v4);
        if (!v16)
        {
          int64_t v17 = v12 + 4;
          if (v12 + 4 >= v24)
          {
LABEL_38:
            swift_bridgeObjectRetain();
            uint64_t v23 = 1;
            goto LABEL_35;
          }
          unint64_t v16 = *(void *)(v7 + 8 * v17);
          int64_t v4 = v12 + 4;
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_28:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v4 << 6);
    if (*(void *)(v6 + 16)) {
      goto LABEL_29;
    }
  }
  while (1)
  {
    int64_t v4 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v4 >= v24) {
      goto LABEL_38;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v4);
    ++v17;
    if (v16) {
      goto LABEL_28;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1000926E8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 56);
  uint64_t v31 = v5 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(v5 + 64);
  uint64_t v27 = OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id;
  int64_t v32 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v29 = v5;
  uint64_t v30 = a2;
  uint64_t v28 = a1;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_21;
    }
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_42;
    }
    if (v12 >= v32) {
      break;
    }
    unint64_t v13 = *(void *)(v31 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v32) {
        break;
      }
      unint64_t v13 = *(void *)(v31 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v32) {
          break;
        }
        unint64_t v13 = *(void *)(v31 + 8 * v9);
        if (!v13)
        {
          int64_t v14 = v12 + 3;
          if (v14 >= v32) {
            break;
          }
          unint64_t v13 = *(void *)(v31 + 8 * v14);
          if (!v13)
          {
            while (1)
            {
              int64_t v9 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_43;
              }
              if (v9 >= v32) {
                goto LABEL_33;
              }
              unint64_t v13 = *(void *)(v31 + 8 * v9);
              ++v14;
              if (v13) {
                goto LABEL_20;
              }
            }
          }
          int64_t v9 = v14;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_21:
    int v15 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v11);
    uint64_t v16 = *(void *)(*(void *)(v5 + 56) + 32 * v11 + 24);
    if (v16 <= a1)
    {
      uint64_t v17 = a1 - v16;
      if (__OFSUB__(a1, v16)) {
        goto LABEL_41;
      }
    }
    else
    {
      if (__OFSUB__(v16, a1)) {
        goto LABEL_39;
      }
      uint64_t v17 = a1 - v16;
      if (__OFSUB__(0, v16 - a1)) {
        goto LABEL_40;
      }
    }
    double v18 = (double)v17 / 1000000000.0;
    if ((~*(void *)&v18 & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      JUMPOUT(0x100092B44);
    }
    if (v18 <= -9.22337204e18) {
      goto LABEL_37;
    }
    if (v18 >= 9.22337204e18) {
      goto LABEL_38;
    }
    uint64_t v19 = (uint64_t)v18;
    if ((uint64_t)v18 >= 301)
    {
      int v33 = v15;
      swift_bridgeObjectRetain();
      swift_retain_n();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain();
      unint64_t v20 = sub_1005E0EB0();
      os_log_type_t v21 = sub_1005E25C0();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 68158722;
        *(_DWORD *)(v22 + 4) = 2;
        *(_WORD *)(v22 + 8) = 256;
        char v23 = *(unsigned char *)(a2 + v27);
        swift_release();
        *(unsigned char *)(v22 + 10) = v23;
        swift_release();
        *(_WORD *)(v22 + 11) = 1024;
        *(_DWORD *)(v22 + 13) = v33;
        *(_WORD *)(v22 + 17) = 2082;
        uint64_t v24 = sub_1005E2CB0();
        *(void *)(v22 + 19) = sub_1000C6914(v24, v25, &v34);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 27) = 2048;
        *(void *)(v22 + 29) = v19;
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%.*hhx] Sync #%u (%{public}s) still running after %ld seconds.", (uint8_t *)v22, 0x25u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v5 = v29;
        a2 = v30;
        a1 = v28;
      }
      else
      {
        swift_bridgeObjectRelease_n();

        swift_release_n();
      }
    }
  }
LABEL_33:
  return swift_release();
}

uint64_t sub_100092B54@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v5 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  char v6 = *(unsigned char *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  char v9 = *(unsigned char *)(v2 + 40);
  uint64_t v10 = *(void *)(v2 + 48);
  BOOL result = sub_10009AFB4(*(void *)v2, v4, v6, result, v7, v8, v9, v10);
  if (v12 == -1)
  {
    sub_10009AF40(v7, v8, v9);
    uint64_t v11 = v8;
    BOOL result = v7;
    if (v9)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
  }
  else if (v12)
  {
    goto LABEL_18;
  }
  if (v6) {
    goto LABEL_18;
  }
  if (v11 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (result < v5)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((v9 & 1) == 0)
  {
    if (v8 == v11)
    {
      if (v7 >= result)
      {
        *(void *)a2 = v5;
        *(void *)(a2 + 8) = v4;
        *(unsigned char *)(a2 + 16) = 0;
        *(void *)(a2 + 24) = result;
        *(void *)(a2 + 32) = v11;
        *(unsigned char *)(a2 + 40) = 0;
        *(void *)(a2 + 48) = v10;
        return result;
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_100092C58(uint64_t a1)
{
  sub_10009BFBC(6, a1, (uint64_t (*)(uint64_t))sub_1000D38CC, sub_1000D3970, (uint64_t (*)(uint64_t))sub_1000D38CC, (uint64_t)&v46);
  long long v65 = v46;
  char v66 = v47;
  long long v63 = v48;
  char v64 = v49;
  uint64_t v62 = v50;
  sub_10008C4F4();
  if (v1 < 6)
  {
    sub_10008C4F4();
    if (v18)
    {
      uint64_t v19 = v18;
      v59[0] = _swiftEmptyArrayStorage;
      int64_t v20 = v18 & ~(v18 >> 63);
      unint64_t v22 = *((void *)&v65 + 1);
      uint64_t v21 = v65;
      char v23 = v66;
      sub_10001FDF0((uint64_t)&v63, (uint64_t)&v67, &qword_10070B690);
      uint64_t v24 = v62;
      char v9 = (char *)v59;
      sub_10001A574(0, v20, 0);
      if ((v19 & 0x8000000000000000) == 0)
      {
        uint64_t v25 = v59[0];
        uint64_t result = sub_10009AF40(v21, v22, v23);
        int v45 = v22;
        uint64_t v27 = v21;
        unint64_t v28 = v22;
        char v29 = v23;
        char v43 = v23;
        uint64_t v41 = v21;
        while ((v29 & 1) == 0)
        {
          if (v23) {
            goto LABEL_65;
          }
          if (v28 != v22)
          {
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
          if (v27 < v21) {
            goto LABEL_47;
          }
          uint64_t result = sub_10001FDF0((uint64_t)&v67, (uint64_t)&v51, &qword_10070B690);
          if (v52) {
            goto LABEL_66;
          }
          if (DWORD2(v51) != v22) {
            goto LABEL_49;
          }
          if (v27 >= (uint64_t)v51) {
            goto LABEL_51;
          }
          if (v27 < 0 || v27 >= 1 << *(unsigned char *)(v24 + 32)) {
            goto LABEL_53;
          }
          if (((*(void *)(v24 + 56 + (((unint64_t)v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
            goto LABEL_55;
          }
          if (*(_DWORD *)(v24 + 36) != v22) {
            goto LABEL_57;
          }
          v30.rawValue = *(_DWORD *)(*(void *)(v24 + 48) + 4 * v27);
          *(void *)&long long v60 = 35;
          *((void *)&v60 + 1) = 0xE100000000000000;
          Swift::String v71 = String.init(_:)(v30);
          char v9 = (char *)&v60;
          sub_1005E1E30(v71);
          swift_bridgeObjectRelease();
          long long v31 = v60;
          uint64_t v32 = v25;
          v59[0] = v25;
          unint64_t v22 = *(void *)(v25 + 16);
          unint64_t v33 = *(void *)(v25 + 24);
          if (v22 >= v33 >> 1)
          {
            char v9 = (char *)v59;
            sub_10001A574(v33 > 1, v22 + 1, 1);
            uint64_t v32 = v59[0];
          }
          *(void *)(v32 + 16) = v22 + 1;
          uint64_t v25 = v32;
          *(_OWORD *)(v32 + 16 * v22 + 32) = v31;
          uint64_t result = sub_1000D3970(v27, v28, 0, v24);
          uint64_t v27 = result;
          unint64_t v28 = v34;
          char v29 = v35 & 1;
          --v19;
          uint64_t v21 = v41;
          LODWORD(v22) = v45;
          char v23 = v43;
          if (!v19)
          {
            sub_100060FF0(result, v34, v29);
            goto LABEL_43;
          }
        }
        goto LABEL_64;
      }
      goto LABEL_60;
    }
LABEL_43:
    sub_10000566C(&qword_100709F58);
    sub_100007494((unint64_t *)&qword_100709F60, &qword_100709F58);
    uint64_t v40 = sub_1005E1A80();
    swift_bridgeObjectRelease();
    sub_10009AF4C((uint64_t)&v65);
    sub_10009AF4C((uint64_t)&v63);
    sub_10001D550((uint64_t)&v62);
    return v40;
  }
  sub_100092B54(5, (uint64_t)&v51);
  long long v60 = v51;
  char v61 = v52;
  long long v57 = v53;
  char v58 = v54;
  uint64_t v56 = v55;
  sub_10009AF80((uint64_t)&v65);
  sub_10009AF80((uint64_t)&v63);
  sub_10002292C((uint64_t)&v62);
  sub_10008C4F4();
  if (!v2)
  {
    sub_10009AF4C((uint64_t)&v60);
    sub_10009AF4C((uint64_t)&v57);
    sub_10001D550((uint64_t)&v56);
    char v9 = (char *)_swiftEmptyArrayStorage;
LABEL_39:
    swift_bridgeObjectRetain();
    long long v36 = (char *)_swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_58:
    }
      long long v36 = sub_1000932B0(0, *((void *)v9 + 2) + 1, 1, v9);
    unint64_t v38 = *((void *)v36 + 2);
    unint64_t v37 = *((void *)v36 + 3);
    if (v38 >= v37 >> 1) {
      long long v36 = sub_1000932B0((char *)(v37 > 1), v38 + 1, 1, v36);
    }
    *((void *)v36 + 2) = v38 + 1;
    long long v39 = &v36[16 * v38];
    *((void *)v39 + 4) = 10911970;
    *((void *)v39 + 5) = 0xA300000000000000;
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  uint64_t v3 = v2;
  int64_t v4 = v2 & ~(v2 >> 63);
  unint64_t v5 = *((void *)&v60 + 1);
  uint64_t v6 = v60;
  char v7 = v61;
  sub_10001FDF0((uint64_t)&v57, (uint64_t)v59, &qword_10070B690);
  uint64_t v8 = v56;
  sub_10001A574(0, v4, 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    char v9 = (char *)_swiftEmptyArrayStorage;
    sub_10009AF40(v6, v5, v7);
    uint64_t v10 = v6;
    unint64_t v11 = v5;
    char v12 = v7;
    char v44 = v7;
    int v42 = v5;
    while ((v12 & 1) == 0)
    {
      if (v7) {
        goto LABEL_62;
      }
      if (v11 != v5)
      {
        __break(1u);
        goto LABEL_45;
      }
      if (v10 < v6) {
        goto LABEL_46;
      }
      sub_10001FDF0((uint64_t)v59, (uint64_t)&v67, &qword_10070B690);
      if (v69) {
        goto LABEL_63;
      }
      if (v68 != v5) {
        goto LABEL_48;
      }
      if (v10 >= v67) {
        goto LABEL_50;
      }
      if (v10 < 0 || v10 >= 1 << *(unsigned char *)(v8 + 32)) {
        goto LABEL_52;
      }
      if (((*(void *)(v8 + 56 + (((unint64_t)v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_54;
      }
      if (*(_DWORD *)(v8 + 36) != v5) {
        goto LABEL_56;
      }
      Swift::String v70 = String.init(_:)(*(IMAP2Persistence::SyncRequest::ID *)(*(void *)(v8 + 48) + 4 * v10));
      sub_1005E1E30(v70);
      swift_bridgeObjectRelease();
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      unint64_t v13 = _swiftEmptyArrayStorage[3];
      if (v5 >= v13 >> 1) {
        sub_10001A574(v13 > 1, v5 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v5 + 1;
      int64_t v14 = &_swiftEmptyArrayStorage[2 * v5];
      v14[4] = 35;
      v14[5] = 0xE100000000000000;
      uint64_t v15 = sub_1000D3970(v10, v11, 0, v8);
      uint64_t v10 = v15;
      unint64_t v11 = v16;
      char v12 = v17 & 1;
      --v3;
      LODWORD(v5) = v42;
      char v7 = v44;
      if (!v3)
      {
        sub_100060FF0(v15, v16, v12);
        sub_10001D550((uint64_t)&v56);
        goto LABEL_39;
      }
    }
    goto LABEL_61;
  }
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  swift_bridgeObjectRetain();
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  uint64_t result = swift_bridgeObjectRetain();
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

char *sub_1000932B0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070A088);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1000933B4(void *a1)
{
  return sub_10001597C(0, a1[2], 0, a1);
}

void *sub_1000933C8(void *a1)
{
  return sub_100015CD4(0, a1[2], 0, a1);
}

uint64_t sub_1000933DC(unint64_t a1)
{
  return sub_10001612C(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1000933F0(void *a1)
{
  return sub_100016160(0, a1[2], 0, a1);
}

void *sub_100093404(void *a1)
{
  return sub_100016290(0, a1[2], 0, a1);
}

void *sub_100093418(void *a1)
{
  return sub_1000163AC(0, a1[2], 0, a1);
}

void *sub_10009342C(void *a1)
{
  return sub_1000168B0(0, a1[2], 0, a1);
}

void *sub_100093440(void *a1)
{
  return sub_100016C38(0, a1[2], 0, a1);
}

uint64_t sub_100093454(unint64_t a1)
{
  return sub_100017558(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100093468(unint64_t a1)
{
  return sub_10001758C(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_10009347C(void *a1)
{
  return sub_1000175C0(0, a1[2], 0, a1);
}

uint64_t sub_100093490(unint64_t a1)
{
  return sub_1000164D8(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1000934A4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1005E2FB0();
    swift_bridgeObjectRelease();
  }
  return sub_1005E2D00();
}

void *sub_100093520(void *a1)
{
  return sub_100017B88(0, a1[2], 0, a1);
}

uint64_t sub_100093534(unint64_t a1)
{
  return sub_100017CAC(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_100093548(void *a1)
{
  return sub_10001678C(0, a1[2], 0, a1);
}

uint64_t sub_10009355C(unint64_t a1)
{
  return sub_1000181F8(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100093570(unint64_t a1)
{
  return sub_10001809C(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_100093584(void *a1)
{
  return sub_1000180D0(0, a1[2], 0, a1);
}

unint64_t sub_100093598(Swift::UInt32 a1)
{
  return sub_1000936EC(a1, (void (*)(void))sub_1000CB208);
}

uint64_t sub_1000935B0(unsigned __int8 a1)
{
  uint64_t v3 = *v1;
  sub_1005E33F0();
  sub_1005E3410(a1);
  Swift::Int v4 = sub_1005E3470();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 15;
  }
  uint64_t v7 = *(void *)(v3 + 48);
  if (*(unsigned __int8 *)(v7 + v6) != a1)
  {
    uint64_t v8 = ~v5;
    do
    {
      unint64_t v6 = (v6 + 1) & v8;
      if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        return 15;
      }
    }
    while (*(unsigned __int8 *)(v7 + v6) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v1;
  uint64_t v13 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000CB3C4();
    uint64_t v10 = v13;
  }
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v10 + 48) + v6);
  sub_1000949D4(v6);
  *uint64_t v1 = v13;
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_1000936D4(Swift::UInt32 a1)
{
  return sub_1000936EC(a1, (void (*)(void))sub_1000CB8B8);
}

unint64_t sub_1000936EC(Swift::UInt32 a1, void (*a2)(void))
{
  uint64_t v5 = *v2;
  sub_1005E33F0();
  sub_1005E3440(a1);
  Swift::Int v6 = sub_1005E3470();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_9:
    uint64_t v13 = 0;
    unsigned __int8 v14 = 1;
    return v13 | ((unint64_t)v14 << 32);
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(_DWORD *)(v9 + 4 * v8) != a1)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_9;
      }
    }
    while (*(_DWORD *)(v9 + 4 * v8) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *v2;
  uint64_t v16 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a2();
    uint64_t v12 = v16;
  }
  uint64_t v13 = *(unsigned int *)(*(void *)(v12 + 48) + 4 * v8);
  sub_100094B80(v8);
  *uint64_t v2 = v16;
  swift_bridgeObjectRelease();
  unsigned __int8 v14 = 0;
  return v13 | ((unint64_t)v14 << 32);
}

unint64_t sub_100093824(Swift::UInt32 a1)
{
  return sub_1000936EC(a1, (void (*)(void))sub_1000CB8C4);
}

uint64_t sub_10009383C(uint64_t a1, Swift::UInt a2)
{
  uint64_t v5 = *v2;
  sub_1005E33F0();
  sub_1005E3410(a2);
  Swift::Int v6 = sub_1005E3470();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return 0;
  }
  uint64_t v9 = ~v7;
  while (1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v8);
    if (v10[1] == a2)
    {
      uint64_t v11 = *v10;
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12 == *(void *)(a1 + 16))
      {
        if (v12) {
          BOOL v13 = v11 == a1;
        }
        else {
          BOOL v13 = 1;
        }
        if (v13) {
          goto LABEL_22;
        }
        if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v12 == 1) {
            goto LABEL_22;
          }
          if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v12 == 2) {
              goto LABEL_22;
            }
            if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(a1 + 34))
            {
              if (v12 == 3) {
                goto LABEL_22;
              }
              if (*(unsigned __int8 *)(v11 + 35) == *(unsigned __int8 *)(a1 + 35)) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_3:
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      return 0;
    }
  }
  unsigned __int8 v14 = (unsigned __int8 *)(v11 + 36);
  uint64_t v15 = v12 - 4;
  uint64_t v16 = (unsigned __int8 *)(a1 + 36);
  while (v15)
  {
    int v18 = *v14++;
    int v17 = v18;
    int v19 = *v16++;
    --v15;
    if (v17 != v19) {
      goto LABEL_3;
    }
  }
LABEL_22:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = *v2;
  uint64_t v24 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1000CAEA0();
    uint64_t v22 = v24;
  }
  uint64_t v20 = *(void *)(*(void *)(v22 + 48) + 16 * v8);
  sub_100094D2C(v8);
  *uint64_t v2 = v24;
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_100093A0C(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  sub_1005E33F0();
  Swift::UInt v7 = a2 | ((unint64_t)a2 << 32);
  sub_1005E3410(v7);
  Swift::Int v8 = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
    return 0;
  }
  uint64_t v11 = ~v9;
  while (1)
  {
    uint64_t v12 = *(void *)(v6 + 48) + 16 * v10;
    if ((*(unsigned int *)(v12 + 8) | ((unint64_t)*(unsigned int *)(v12 + 8) << 32)) == v7)
    {
      uint64_t v13 = *(void *)v12;
      uint64_t v14 = *(void *)(v13 + 16);
      if (v14 == *(void *)(a1 + 16))
      {
        if (v14) {
          BOOL v15 = v13 == a1;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15) {
          goto LABEL_22;
        }
        if (*(unsigned __int8 *)(v13 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v14 == 1) {
            goto LABEL_22;
          }
          if (*(unsigned __int8 *)(v13 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v14 == 2) {
              goto LABEL_22;
            }
            if (*(unsigned __int8 *)(v13 + 34) == *(unsigned __int8 *)(a1 + 34))
            {
              if (v14 == 3) {
                goto LABEL_22;
              }
              if (*(unsigned __int8 *)(v13 + 35) == *(unsigned __int8 *)(a1 + 35)) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_3:
    unint64_t v10 = (v10 + 1) & v11;
    if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v16 = (unsigned __int8 *)(v13 + 36);
  uint64_t v17 = v14 - 4;
  int v18 = (unsigned __int8 *)(a1 + 36);
  while (v17)
  {
    int v20 = *v16++;
    int v19 = v20;
    int v21 = *v18++;
    --v17;
    if (v19 != v21) {
      goto LABEL_3;
    }
  }
LABEL_22:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = *v3;
  uint64_t v26 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1000CACF8();
    uint64_t v24 = v26;
  }
  uint64_t v22 = *(void *)(*(void *)(v24 + 48) + 16 * v10);
  sub_100094EDC(v10);
  *uint64_t v3 = v26;
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_100093BF0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  Swift::UInt v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v10 < 0) {
      uint64_t v11 = *v2;
    }
    else {
      uint64_t v11 = v10 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    char v12 = sub_1005E2B90();
    swift_release();
    if (v12)
    {
      uint64_t v13 = sub_1000946B0(v11, a1);
      swift_bridgeObjectRelease();
      return v13;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1005E33F0();
  uint64_t v14 = a1 + *(void *)(*(void *)a1 + 96);
  swift_beginAccess();
  sub_10009C16C(v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  swift_bridgeObjectRetain();
  sub_10018A5EC((uint64_t)v27);
  sub_10009C1D4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  Swift::Int v15 = sub_1005E3470();
  uint64_t v16 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v17 = v15 & ~v16;
  if (((*(void *)(v10 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v25 = v2;
  uint64_t v18 = ~v16;
  while (1)
  {
    uint64_t v19 = *(void *)(*(void *)(v10 + 48) + 8 * v17);
    uint64_t v20 = v19 + *(void *)(*(void *)v19 + 96);
    swift_beginAccess();
    sub_10009C16C(v20, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_10009C16C(v14, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    swift_retain();
    LOBYTE(v20) = sub_1001961B8((uint64_t)v9, (uint64_t)v7);
    sub_10009C1D4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_10009C1D4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    swift_release();
    if (v20) {
      break;
    }
    unint64_t v17 = (v17 + 1) & v18;
    if (((*(void *)(v10 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = v25;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = *v22;
  uint64_t v26 = *v22;
  *uint64_t v22 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1000CB70C();
    uint64_t v24 = v26;
  }
  uint64_t v13 = *(void *)(*(void *)(v24 + 48) + 8 * v17);
  sub_100095094(v17);
  *uint64_t v22 = v26;
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_100093EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_10018A5EC((uint64_t)v26);
  Swift::Int v10 = sub_1005E3470();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v22 = v2;
    uint64_t v23 = v6;
    uint64_t v24 = v5;
    uint64_t v25 = a2;
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v6 + 72);
    while (1)
    {
      sub_10009C16C(*(void *)(v9 + 48) + v14 * v12, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      char v15 = sub_1001961B8((uint64_t)v8, a1);
      sub_10009C1D4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      if (v15) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = 1;
        a2 = v25;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v17 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v17;
    v26[0] = *v17;
    uint64_t *v17 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1000CBA9C();
      uint64_t v19 = v26[0];
    }
    a2 = v25;
    sub_10009C288(*(void *)(v19 + 48) + v14 * v12, v25, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_1000954E0(v12);
    uint64_t *v17 = v26[0];
    swift_bridgeObjectRelease();
    uint64_t v16 = 0;
LABEL_10:
    uint64_t v6 = v23;
    uint64_t v5 = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
}

uint64_t sub_10009413C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v7 = *v3;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_100008D24(a1, a2);
  sub_1005E08B0();
  sub_1000094D4(a1, a2);
  Swift::Int v8 = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  uint64_t v11 = v7 + 56;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
LABEL_40:
    *a3 = xmmword_1005F66D0;
    return result;
  }
  uint64_t v32 = a3;
  uint64_t v36 = ~v9;
  BOOL v12 = __OFSUB__(HIDWORD(a1), a1);
  BOOL v35 = v12;
  uint64_t v34 = v7;
  uint64_t v33 = v7 + 56;
  while (2)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v10);
    uint64_t v14 = *v13;
    unint64_t v15 = v13[1];
    uint64_t v16 = 0;
    switch(v15 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v14), v14))
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
        uint64_t v16 = HIDWORD(v14) - (int)v14;
LABEL_14:
        sub_100008D24(v14, v15);
        sub_100008D24(v14, v15);
        break;
      case 2uLL:
        uint64_t v18 = *(void *)(v14 + 16);
        uint64_t v17 = *(void *)(v14 + 24);
        uint64_t v16 = v17 - v18;
        if (!__OFSUB__(v17, v18)) {
          goto LABEL_14;
        }
        goto LABEL_45;
      case 3uLL:
        break;
      default:
        uint64_t v16 = BYTE6(v15);
        break;
    }
    uint64_t v19 = BYTE6(a2);
    switch(a2 >> 62)
    {
      case 1uLL:
        uint64_t v19 = HIDWORD(a1) - (int)a1;
        if (v35) {
          goto LABEL_46;
        }
        goto LABEL_19;
      case 2uLL:
        uint64_t v21 = *(void *)(a1 + 16);
        uint64_t v20 = *(void *)(a1 + 24);
        BOOL v22 = __OFSUB__(v20, v21);
        uint64_t v19 = v20 - v21;
        if (v22) {
          goto LABEL_47;
        }
        goto LABEL_19;
      case 3uLL:
        if (v16) {
          goto LABEL_7;
        }
        goto LABEL_41;
      default:
LABEL_19:
        if (v16 != v19)
        {
LABEL_7:
          sub_1000094D4(v14, v15);
          sub_1000094D4(v14, v15);
LABEL_8:
          unint64_t v10 = (v10 + 1) & v36;
          if (((*(void *)(v11 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            a3 = v32;
            goto LABEL_40;
          }
          continue;
        }
        if (v16 >= 1)
        {
          switch(v15 >> 62)
          {
            case 1uLL:
              if (v14 >> 32 < (int)v14) {
                goto LABEL_48;
              }
              sub_100008D24(a1, a2);
              sub_100008D24(v14, v15);
              uint64_t v23 = sub_1005E0550();
              if (v23)
              {
                uint64_t v24 = sub_1005E0580();
                if (__OFSUB__((int)v14, v24)) {
                  goto LABEL_51;
                }
                v23 += (int)v14 - v24;
              }
              sub_1005E0570();
              sub_1000260B8(v23, a1, a2, __s1);
              sub_1000094D4(v14, v15);
              goto LABEL_33;
            case 2uLL:
              uint64_t v26 = *(void *)(v14 + 16);
              uint64_t v25 = *(void *)(v14 + 24);
              sub_100008D24(a1, a2);
              swift_retain();
              swift_retain();
              uint64_t v27 = sub_1005E0550();
              if (!v27) {
                goto LABEL_31;
              }
              uint64_t v28 = sub_1005E0580();
              if (__OFSUB__(v26, v28)) {
                goto LABEL_50;
              }
              v27 += v26 - v28;
LABEL_31:
              if (__OFSUB__(v25, v26)) {
                goto LABEL_49;
              }
              sub_1005E0570();
              sub_1000260B8(v27, a1, a2, __s1);
              swift_release();
              swift_release();
LABEL_33:
              sub_1000094D4(a1, a2);
              sub_1000094D4(v14, v15);
              sub_1000094D4(v14, v15);
              uint64_t v11 = v33;
              uint64_t v7 = v34;
              if (__s1[0]) {
                goto LABEL_42;
              }
              goto LABEL_8;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              sub_100008D24(a1, a2);
              goto LABEL_36;
            default:
              *(void *)__s1 = v14;
              *(_WORD *)&__s1[8] = v15;
              __s1[10] = BYTE2(v15);
              __s1[11] = BYTE3(v15);
              __s1[12] = BYTE4(v15);
              __s1[13] = BYTE5(v15);
              sub_100008D24(a1, a2);
LABEL_36:
              sub_1000260B8((uint64_t)__s1, a1, a2, &v37);
              sub_1000094D4(a1, a2);
              sub_1000094D4(v14, v15);
              sub_1000094D4(v14, v15);
              if (v37) {
                goto LABEL_42;
              }
              goto LABEL_8;
          }
        }
LABEL_41:
        sub_1000094D4(v14, v15);
        sub_1000094D4(v14, v15);
LABEL_42:
        swift_bridgeObjectRelease();
        uint64_t v14 = (uint64_t)v3;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v31 = *v3;
        *(void *)__s1 = *v3;
        *uint64_t v3 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
LABEL_52:
          sub_1000CB558();
          uint64_t v31 = *(void *)__s1;
        }
        *uint64_t v32 = *(_OWORD *)(*(void *)(v31 + 48) + 16 * v10);
        sub_100095948(v10);
        *(void *)uint64_t v14 = *(void *)__s1;
        return swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1000946B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v24 = v2;
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1005E2B50();
  uint64_t v11 = swift_unknownObjectRetain();
  BOOL v12 = sub_100019F30(v11, v10);
  uint64_t v26 = v12;
  sub_1005E33F0();
  uint64_t v13 = a2 + *(void *)(*(void *)a2 + 96);
  swift_beginAccess();
  sub_10009C16C(v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  swift_retain();
  sub_10018A5EC((uint64_t)v25);
  sub_10009C1D4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  Swift::Int v14 = sub_1005E3470();
  uint64_t v15 = -1 << v12[32];
  unint64_t v16 = v14 & ~v15;
  if ((*(void *)&v12[((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v16))
  {
    uint64_t v17 = ~v15;
    while (1)
    {
      uint64_t v18 = *(void *)(*((void *)v12 + 6) + 8 * v16);
      uint64_t v19 = v18 + *(void *)(*(void *)v18 + 96);
      swift_beginAccess();
      sub_10009C16C(v19, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_10009C16C(v13, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      swift_retain();
      LOBYTE(v19) = sub_1001961B8((uint64_t)v9, (uint64_t)v7);
      sub_10009C1D4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_10009C1D4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      swift_release();
      if (v19) {
        break;
      }
      unint64_t v16 = (v16 + 1) & v17;
      if (((*(void *)&v12[((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v16) & 1) == 0)
      {
        swift_release();
        __break(1u);
        break;
      }
    }
    swift_release();
    uint64_t v20 = *(void *)(*((void *)v12 + 6) + 8 * v16);
    sub_100095094(v16);
    sub_10009C16C(v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    uint64_t v21 = v20 + *(void *)(*(void *)v20 + 96);
    swift_beginAccess();
    sub_10009C16C(v21, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    LOBYTE(v21) = sub_1001961B8((uint64_t)v9, (uint64_t)v7);
    sub_10009C1D4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_10009C1D4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    if (v21)
    {
      *uint64_t v24 = v26;
      return v20;
    }
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1000949D4(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1005E2AE0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::UInt v10 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v6);
        sub_1005E33F0();
        sub_1005E3410(v10);
        unint64_t v11 = sub_1005E3470() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (unsigned char *)(v12 + v2);
          Swift::Int v14 = (unsigned char *)(v12 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_100094B80(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1005E2AE0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::UInt32 v10 = *(_DWORD *)(*(void *)(v3 + 48) + 4 * v6);
        sub_1005E33F0();
        sub_1005E3440(v10);
        unint64_t v11 = sub_1005E3470() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_DWORD *)(v12 + 4 * v2);
          Swift::Int v14 = (_DWORD *)(v12 + 4 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_100094D2C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1005E2AE0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::UInt v10 = *(void *)(*(void *)(v3 + 48) + 16 * v6 + 8);
        sub_1005E33F0();
        sub_1005E3410(v10);
        unint64_t v11 = sub_1005E3470() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          Swift::Int v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_100094EDC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1005E2AE0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = 16 * v6;
        uint64_t v11 = *(unsigned int *)(*(void *)(v3 + 48) + 16 * v6 + 8);
        sub_1005E33F0();
        sub_1005E3410(v11 | (v11 << 32));
        unint64_t v12 = sub_1005E3470() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 < v9) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(v3 + 48);
          Swift::Int v14 = (_OWORD *)(v13 + 16 * v2);
          uint64_t v15 = (_OWORD *)(v13 + v10);
          if (16 * v2 != v10 || (int64_t v2 = v6, v14 >= v15 + 1))
          {
            *Swift::Int v14 = *v15;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_100095094(unint64_t a1)
{
  uint64_t v3 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v3 - 8);
  uint64_t v35 = (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v5 = __chkstk_darwin(v38);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v34 - v8;
  uint64_t v34 = v1;
  uint64_t result = *v1;
  uint64_t v11 = *v1 + 56;
  uint64_t v12 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v13 = (a1 + 1) & ~v12;
  if (((1 << v13) & *(void *)(v11 + 8 * (v13 >> 6))) != 0)
  {
    uint64_t v14 = ~v12;
    uint64_t v39 = *v1;
    swift_retain();
    uint64_t v15 = sub_1005E2AE0();
    if ((*(void *)(v11 + 8 * (v13 >> 6)) & (1 << v13)) != 0)
    {
      uint64_t v36 = v11;
      unint64_t v37 = (v15 + 1) & v14;
      uint64_t v16 = v39;
      do
      {
        uint64_t v17 = *(void *)(*(void *)(v16 + 48) + 8 * v13);
        sub_1005E33F0();
        uint64_t v18 = v17 + *(void *)(*(void *)v17 + 96);
        swift_beginAccess();
        sub_10009C16C(v18, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        sub_10009C16C((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v21 = *((unsigned int *)v7 + 2);
            uint64_t v22 = *((void *)v7 + 2);
            sub_1005E3410(2uLL);
            sub_1005E3410(v21 | (v21 << 32));
            swift_retain();
            sub_1000D3538((uint64_t)v40, v22);
            goto LABEL_10;
          case 2u:
            uint64_t v23 = *((unsigned int *)v7 + 2);
            uint64_t v24 = *((void *)v7 + 2);
            sub_1005E3410(3uLL);
            sub_1005E3410(v23 | (v23 << 32));
            swift_retain();
            sub_1000D3378((uint64_t)v40, v24);
LABEL_10:
            uint64_t v11 = v36;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            break;
          case 3u:
            sub_1005E3410(1uLL);
            swift_retain();
            break;
          default:
            uint64_t v19 = v35;
            sub_10001FDF0((uint64_t)v7, v35, &qword_100709E38);
            sub_1005E3410(0);
            swift_retain();
            sub_10000566C(&qword_100709E60);
            sub_10001FBA4();
            sub_1005E19C0();
            uint64_t v20 = v19;
            uint64_t v11 = v36;
            sub_100007A48(v20, &qword_100709E38);
            break;
        }
        sub_10009C1D4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        Swift::Int v25 = sub_1005E3470();
        swift_release();
        unint64_t v26 = v25 & v14;
        if ((uint64_t)a1 >= (uint64_t)v37)
        {
          uint64_t v16 = v39;
          if (v26 < v37) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v16 = v39;
          if (v26 >= v37) {
            goto LABEL_17;
          }
        }
        if ((uint64_t)a1 >= (uint64_t)v26)
        {
LABEL_17:
          uint64_t v27 = *(void *)(v16 + 48);
          uint64_t v28 = (void *)(v27 + 8 * a1);
          char v29 = (void *)(v27 + 8 * v13);
          if (a1 != v13 || (a1 = v13, v28 >= v29 + 1))
          {
            *uint64_t v28 = *v29;
            a1 = v13;
          }
        }
LABEL_5:
        unint64_t v13 = (v13 + 1) & v14;
      }
      while (((*(void *)(v11 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
    }
    *(void *)(v11 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v11 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v30 = *v34;
  uint64_t v31 = *(void *)(*v34 + 16);
  BOOL v32 = __OFSUB__(v31, 1);
  uint64_t v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
    JUMPOUT(0x1000954D0);
  }
  *(void *)(v30 + 16) = v33;
  ++*(_DWORD *)(v30 + 36);
  return result;
}

uint64_t sub_1000954E0(unint64_t a1)
{
  uint64_t v3 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v3 - 8);
  uint64_t v37 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v5 = *(void *)(v40 - 8);
  uint64_t v6 = __chkstk_darwin(v40);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v42 = (uint64_t)&v36 - v9;
  uint64_t result = *v1;
  uint64_t v11 = *v1 + 56;
  uint64_t v12 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v13 = (a1 + 1) & ~v12;
  if (((1 << v13) & *(void *)(v11 + 8 * (v13 >> 6))) != 0)
  {
    uint64_t v36 = v1;
    uint64_t v14 = ~v12;
    uint64_t v39 = result;
    swift_retain();
    uint64_t v15 = sub_1005E2AE0();
    uint64_t v38 = v11;
    if ((*(void *)(v11 + 8 * (v13 >> 6)) & (1 << v13)) != 0)
    {
      unint64_t v16 = (v15 + 1) & v14;
      uint64_t v17 = *(void *)(v5 + 72);
      uint64_t v19 = v38;
      uint64_t v18 = v39;
      while (1)
      {
        int64_t v41 = a1;
        uint64_t v20 = v17;
        int64_t v21 = v17 * v13;
        uint64_t v22 = *(void *)(v18 + 48) + v17 * v13;
        uint64_t v23 = v42;
        sub_10009C16C(v22, v42, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        sub_1005E33F0();
        sub_10009C16C(v23, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v26 = *((unsigned int *)v8 + 2);
            uint64_t v27 = *((void *)v8 + 2);
            sub_1005E3410(2uLL);
            sub_1005E3410(v26 | (v26 << 32));
            sub_1000D3538((uint64_t)v43, v27);
            goto LABEL_11;
          case 2u:
            uint64_t v28 = *((unsigned int *)v8 + 2);
            uint64_t v29 = *((void *)v8 + 2);
            sub_1005E3410(3uLL);
            sub_1005E3410(v28 | (v28 << 32));
            sub_1000D3378((uint64_t)v43, v29);
LABEL_11:
            uint64_t v19 = v38;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            break;
          case 3u:
            sub_1005E3410(1uLL);
            break;
          default:
            uint64_t v24 = v37;
            sub_10001FDF0((uint64_t)v8, v37, &qword_100709E38);
            sub_1005E3410(0);
            sub_10000566C(&qword_100709E60);
            sub_10001FBA4();
            sub_1005E19C0();
            uint64_t v25 = v24;
            uint64_t v19 = v38;
            sub_100007A48(v25, &qword_100709E38);
            break;
        }
        uint64_t v17 = v20;
        Swift::Int v30 = sub_1005E3470();
        sub_10009C1D4(v42, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        unint64_t v31 = v30 & v14;
        a1 = v41;
        if (v41 >= (uint64_t)v16) {
          break;
        }
        uint64_t v18 = v39;
        if (v31 < v16) {
          goto LABEL_17;
        }
LABEL_18:
        if (v20 * v41 < v21
          || *(void *)(v18 + 48) + v20 * v41 >= (unint64_t)(*(void *)(v18 + 48) + v21 + v20))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v13;
          if (v20 * v41 == v21) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v13;
LABEL_6:
        unint64_t v13 = (v13 + 1) & v14;
        if (((*(void *)(v19 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          goto LABEL_24;
        }
      }
      uint64_t v18 = v39;
      if (v31 < v16) {
        goto LABEL_6;
      }
LABEL_17:
      if (v41 < (uint64_t)v31) {
        goto LABEL_6;
      }
      goto LABEL_18;
    }
    uint64_t v19 = v38;
LABEL_24:
    *(void *)(v19 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v36;
  }
  else
  {
    *(void *)(v11 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v32 = *v1;
  uint64_t v33 = *(void *)(*v1 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
    JUMPOUT(0x100095938);
  }
  *(void *)(v32 + 16) = v35;
  ++*(_DWORD *)(v32 + 36);
  return result;
}

unint64_t sub_100095948(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1005E2AE0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v6);
        uint64_t v11 = *v10;
        unint64_t v12 = v10[1];
        sub_1005E33F0();
        sub_100008D24(v11, v12);
        sub_1005E08B0();
        Swift::Int v13 = sub_1005E3470();
        sub_1000094D4(v11, v12);
        unint64_t v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 < v9) {
            goto LABEL_5;
          }
        }
        else if (v14 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v14)
        {
LABEL_11:
          uint64_t v15 = *(void *)(v3 + 48);
          unint64_t v16 = (_OWORD *)(v15 + 16 * v2);
          uint64_t v17 = (_OWORD *)(v15 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v16 >= v17 + 1))
          {
            *unint64_t v16 = *v17;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_100095B20(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1005E2AE0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v10 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v6);
        uint64_t v11 = *v10;
        unint64_t v12 = v10[1];
        sub_1005E33F0();
        sub_100008D24(v11, v12);
        sub_1005E08B0();
        Swift::Int v13 = sub_1005E3470();
        uint64_t result = sub_1000094D4(v11, v12);
        unint64_t v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8) {
            goto LABEL_5;
          }
        }
        else if (v14 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          uint64_t v15 = *(void *)(a2 + 48);
          unint64_t v16 = (_OWORD *)(v15 + 16 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 16 * v6);
          if (v3 != v6 || v16 >= v17 + 1) {
            *unint64_t v16 = *v17;
          }
          uint64_t v18 = *(void *)(a2 + 56);
          unint64_t v19 = v18 + 24 * v3;
          uint64_t v20 = (long long *)(v18 + 24 * v6);
          if (24 * v3 < (uint64_t)(24 * v6) || v19 >= (unint64_t)v20 + 24 || (v21 = v3 == v6, int64_t v3 = v6, !v21))
          {
            long long v9 = *v20;
            *(void *)(v19 + 16) = *((void *)v20 + 2);
            *(_OWORD *)unint64_t v19 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100095D28(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1005E2AE0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Swift::UInt v9 = *(void *)(*(void *)(a2 + 48) + 16 * v6 + 8);
        sub_1005E33F0();
        sub_1005E3410(v9);
        uint64_t result = sub_1005E3470();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          Swift::Int v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          unint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (16 * v3 != 16 * v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100095EF0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1005E2AE0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = 16 * v6;
        uint64_t v10 = *(unsigned int *)(*(void *)(a2 + 48) + 16 * v6 + 8);
        sub_1005E33F0();
        sub_1005E3410(v10 | (v10 << 32));
        uint64_t result = sub_1005E3470();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          Swift::Int v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + v9);
          if (16 * v3 != v9 || v13 >= v14 + 1) {
            *Swift::Int v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t result = v15 + 96 * v3;
          unint64_t v16 = (const void *)(v15 + 96 * v6);
          if (96 * v3 < (uint64_t)(96 * v6) || result >= (unint64_t)v16 + 96 || (v17 = v3 == v6, int64_t v3 = v6, !v17))
          {
            uint64_t result = (unint64_t)memmove((void *)result, v16, 0x60uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000960D4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1005E2AE0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Swift::UInt32 v10 = *(_DWORD *)(*(void *)(a2 + 48) + 4 * v6);
        sub_1005E33F0();
        sub_1005E3440(v10);
        uint64_t result = sub_1005E3470();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          Swift::Int v13 = (_DWORD *)(v12 + 4 * v3);
          uint64_t v14 = (_DWORD *)(v12 + 4 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *Swift::Int v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = v15 + 24 * v3;
          BOOL v17 = (long long *)(v15 + 24 * v6);
          if (24 * v3 < (uint64_t)(24 * v6) || v16 >= (unint64_t)v17 + 24 || (v18 = v3 == v6, int64_t v3 = v6, !v18))
          {
            long long v9 = *v17;
            *(void *)(v16 + 16) = *((void *)v17 + 2);
            *(_OWORD *)unint64_t v16 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000962B0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1005E2AE0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = 16 * v6;
        uint64_t v10 = *(unsigned int *)(*(void *)(a2 + 48) + 16 * v6 + 8);
        sub_1005E33F0();
        sub_1005E3410(v10 | (v10 << 32));
        uint64_t result = sub_1005E3470();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          Swift::Int v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + v9);
          if (16 * v3 != v9 || v13 >= v14 + 1) {
            *Swift::Int v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t result = v15 + 72 * v3;
          unint64_t v16 = (const void *)(v15 + 72 * v6);
          if (72 * v3 < (uint64_t)(72 * v6) || result >= (unint64_t)v16 + 72 || (v17 = v3 == v6, int64_t v3 = v6, !v17))
          {
            uint64_t result = (unint64_t)memmove((void *)result, v16, 0x48uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *BOOL v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100096490(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1005E2AE0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Swift::UInt32 v10 = *(_DWORD *)(*(void *)(a2 + 48) + 4 * v6);
        sub_1005E33F0();
        sub_1005E3440(v10);
        uint64_t result = sub_1005E3470();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          Swift::Int v13 = (_DWORD *)(v12 + 4 * v3);
          uint64_t v14 = (_DWORD *)(v12 + 4 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *Swift::Int v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          BOOL v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *unint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *BOOL v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_10009664C(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v4 - 8);
  uint64_t v42 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v6 = __chkstk_darwin(v44);
  unint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v6);
  uint64_t v45 = a2;
  uint64_t v46 = (uint64_t)&v41 - v10;
  uint64_t v11 = a2 + 64;
  uint64_t v12 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v13 = (a1 + 1) & ~v12;
  if (((1 << v13) & *(void *)(a2 + 64 + 8 * (v13 >> 6))) != 0)
  {
    uint64_t v14 = ~v12;
    uint64_t result = sub_1005E2AE0();
    if ((*(void *)(v11 + 8 * (v13 >> 6)) & (1 << v13)) != 0)
    {
      unint64_t v15 = (result + 1) & v14;
      uint64_t v43 = v11;
      uint64_t v16 = v45;
      while (1)
      {
        uint64_t v17 = *(void *)(*(void *)(v16 + 48) + 8 * v13);
        sub_1005E33F0();
        uint64_t v18 = v17 + *(void *)(*(void *)v17 + 96);
        swift_beginAccess();
        uint64_t v19 = v18;
        uint64_t v20 = v46;
        sub_10009C16C(v19, v46, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        sub_10009C16C(v20, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v23 = *((unsigned int *)v8 + 2);
            uint64_t v24 = *((void *)v8 + 2);
            sub_1005E3410(2uLL);
            sub_1005E3410(v23 | (v23 << 32));
            swift_retain();
            sub_1000D3538((uint64_t)v47, v24);
            goto LABEL_10;
          case 2u:
            uint64_t v25 = *((unsigned int *)v8 + 2);
            uint64_t v26 = *((void *)v8 + 2);
            sub_1005E3410(3uLL);
            sub_1005E3410(v25 | (v25 << 32));
            swift_retain();
            sub_1000D3378((uint64_t)v47, v26);
LABEL_10:
            uint64_t v11 = v43;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            break;
          case 3u:
            sub_1005E3410(1uLL);
            swift_retain();
            break;
          default:
            uint64_t v21 = v42;
            sub_10001FDF0((uint64_t)v8, v42, &qword_100709E38);
            sub_1005E3410(0);
            swift_retain();
            sub_10000566C(&qword_100709E60);
            sub_10001FBA4();
            sub_1005E19C0();
            uint64_t v22 = v21;
            uint64_t v11 = v43;
            sub_100007A48(v22, &qword_100709E38);
            break;
        }
        sub_10009C1D4(v46, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        Swift::Int v27 = sub_1005E3470();
        uint64_t result = swift_release();
        unint64_t v28 = v27 & v14;
        if ((uint64_t)a1 >= (uint64_t)v15)
        {
          uint64_t v16 = v45;
          if (v28 < v15) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v16 = v45;
          if (v28 >= v15) {
            goto LABEL_17;
          }
        }
        if ((uint64_t)a1 >= (uint64_t)v28)
        {
LABEL_17:
          uint64_t v29 = *(void *)(v16 + 48);
          Swift::Int v30 = (void *)(v29 + 8 * a1);
          unint64_t v31 = (void *)(v29 + 8 * v13);
          if (a1 != v13 || v30 >= v31 + 1) {
            *Swift::Int v30 = *v31;
          }
          uint64_t v32 = *(void *)(v16 + 56);
          uint64_t v33 = (void *)(v32 + 8 * a1);
          BOOL v34 = (void *)(v32 + 8 * v13);
          if (a1 != v13 || (a1 = v13, v33 >= v34 + 1))
          {
            *uint64_t v33 = *v34;
            a1 = v13;
          }
        }
LABEL_5:
        unint64_t v13 = (v13 + 1) & v14;
        if (((*(void *)(v11 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          goto LABEL_25;
        }
      }
    }
    uint64_t v16 = v45;
LABEL_25:
    uint64_t v35 = (uint64_t *)(v11 + 8 * (a1 >> 6));
    uint64_t v37 = *v35;
    uint64_t v36 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v35 = (uint64_t *)(v11 + 8 * (a1 >> 6));
    uint64_t v36 = *v35;
    uint64_t v37 = (-1 << a1) - 1;
    uint64_t v16 = v45;
  }
  *uint64_t v35 = v36 & v37;
  uint64_t v38 = *(void *)(v16 + 16);
  BOOL v39 = __OFSUB__(v38, 1);
  uint64_t v40 = v38 - 1;
  if (v39)
  {
    __break(1u);
    JUMPOUT(0x100096A98);
  }
  *(void *)(v16 + 16) = v40;
  ++*(_DWORD *)(v16 + 36);
  return result;
}

void *sub_100096AA8()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A770);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = 24 * v15;
    uint64_t v18 = *(void *)(v2 + 56) + v17;
    int v19 = *(_DWORD *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    char v21 = *(unsigned char *)(v18 + 16);
    LOBYTE(v18) = *(unsigned char *)(v18 + 17);
    long long v22 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v22;
    uint64_t v23 = *(void *)(v4 + 56) + v17;
    *(_DWORD *)uint64_t v23 = v19;
    *(void *)(v23 + 8) = v20;
    *(unsigned char *)(v23 + 16) = v21;
    *(unsigned char *)(v23 + 17) = v18;
    uint64_t result = (void *)sub_100008D24(v22, *((unint64_t *)&v22 + 1));
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100096C7C()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A678);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v26 = __clz(__rbit64(v24));
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = v26 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    LOBYTE(v19) = *(unsigned char *)(v19 + 9);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v22 = v20;
    *(unsigned char *)(v22 + 8) = v21;
    *(unsigned char *)(v22 + 9) = v19;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100096E28()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A720);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 2 * v15;
    __int16 v21 = *(_WORD *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v22 = v18;
    v22[1] = v19;
    *(_WORD *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100096FD8()
{
  return sub_100097D34(&qword_10070A668);
}

void *sub_100096FE4()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A690);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = *(void *)(v2 + 56) + v16;
    uint64_t v21 = *(void *)v20;
    LODWORD(v20) = *(_DWORD *)(v20 + 8);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v22 = v18;
    v22[1] = v19;
    uint64_t v23 = *(void *)(v4 + 56) + v16;
    *(void *)uint64_t v23 = v21;
    *(_DWORD *)(v23 + 8) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000971A8()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A740);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v22 = v18;
    v22[1] = v19;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100097360()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A680);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    int v23 = *(_DWORD *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    LODWORD(v21) = *(_DWORD *)(v21 + 24);
    int64_t v25 = (void *)(*(void *)(v4 + 48) + v16);
    void *v25 = v18;
    v25[1] = v19;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v26 = v22;
    *(_DWORD *)(v26 + 8) = v23;
    *(void *)(v26 + 16) = v24;
    *(_DWORD *)(v26 + 24) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100097548()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A6B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v13) {
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v36);
    ++v9;
    if (!v37)
    {
      int64_t v9 = v36 + 1;
      if (v36 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v37 = *(void *)(v6 + 8 * v9);
      if (!v37) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v37 - 1) & v37;
    unint64_t v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v15;
    uint64_t v18 = *(void *)v17;
    LODWORD(v17) = *(_DWORD *)(v17 + 8);
    uint64_t v19 = 96 * v15;
    uint64_t v20 = *(void *)(v2 + 56) + v19;
    uint64_t v22 = *(void *)v20;
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    int v24 = *(_DWORD *)(v20 + 24);
    int v25 = *(_DWORD *)(v20 + 32);
    char v26 = *(unsigned char *)(v20 + 36);
    uint64_t v27 = *(void *)(v20 + 40);
    char v28 = *(unsigned char *)(v20 + 48);
    uint64_t v29 = *(void *)(v20 + 56);
    char v30 = *(unsigned char *)(v20 + 64);
    unint64_t v31 = *(void *)(v20 + 72);
    char v32 = *(unsigned char *)(v20 + 88);
    uint64_t v33 = *(void *)(v4 + 48) + v16;
    uint64_t v34 = *(void *)(v20 + 80);
    *(void *)uint64_t v33 = v18;
    *(_DWORD *)(v33 + 8) = v17;
    uint64_t v35 = *(void *)(v4 + 56) + v19;
    *(void *)uint64_t v35 = v22;
    *(void *)(v35 + 8) = v21;
    *(void *)(v35 + 16) = v23;
    *(_DWORD *)(v35 + 24) = v24;
    *(_DWORD *)(v35 + 32) = v25;
    *(unsigned char *)(v35 + 36) = v26;
    *(void *)(v35 + 40) = v27;
    *(unsigned char *)(v35 + 48) = v28;
    *(void *)(v35 + 56) = v29;
    *(unsigned char *)(v35 + 64) = v30;
    *(void *)(v35 + 72) = v31;
    *(void *)(v35 + 80) = v34;
    *(unsigned char *)(v35 + 88) = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_100007810(v31);
  }
  int64_t v38 = v36 + 2;
  if (v38 >= v13) {
    goto LABEL_26;
  }
  unint64_t v37 = *(void *)(v6 + 8 * v38);
  if (v37)
  {
    int64_t v9 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v9);
    ++v38;
    if (v37) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100097798()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A6B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    char v20 = *(unsigned char *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    LOBYTE(v19) = *(unsigned char *)(v19 + 16);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(unsigned char *)uint64_t v22 = v20;
    *(void *)(v22 + 8) = v21;
    *(unsigned char *)(v22 + 16) = v19;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_10009795C()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A768);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (char *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (char *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = (char *)memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v27 = __clz(__rbit64(v25));
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = v27 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    int v20 = *(_DWORD *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    char v22 = *(unsigned char *)(v19 + 16);
    LOBYTE(v19) = *(unsigned char *)(v19 + 17);
    uint64_t result = *(char **)(v4 + 48);
    *(_DWORD *)&result[v16] = v17;
    uint64_t v23 = *(void *)(v4 + 56) + v18;
    *(_DWORD *)uint64_t v23 = v20;
    *(void *)(v23 + 8) = v21;
    *(unsigned char *)(v23 + 16) = v22;
    *(unsigned char *)(v23 + 17) = v19;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100097B14()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A718);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v33 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v33 >= v13) {
      goto LABEL_26;
    }
    unint64_t v34 = *(void *)(v6 + 8 * v33);
    ++v9;
    if (!v34)
    {
      int64_t v9 = v33 + 1;
      if (v33 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v34 = *(void *)(v6 + 8 * v9);
      if (!v34) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v34 - 1) & v34;
    unint64_t v15 = __clz(__rbit64(v34)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v15;
    uint64_t v18 = *(void *)v17;
    LODWORD(v17) = *(_DWORD *)(v17 + 8);
    uint64_t v19 = 72 * v15;
    uint64_t v20 = *(void *)(v2 + 56) + v19;
    uint64_t v21 = *(void *)v20;
    int v22 = *(_DWORD *)(v20 + 8);
    char v23 = *(unsigned char *)(v20 + 12);
    __int16 v24 = *(_WORD *)(v20 + 14);
    char v25 = *(unsigned char *)(v20 + 16);
    uint64_t v26 = *(void *)(v20 + 56);
    char v27 = *(unsigned char *)(v20 + 64);
    char v28 = *(unsigned char *)(v20 + 65);
    uint64_t v29 = *(void *)(v4 + 48) + v16;
    long long v30 = *(_OWORD *)(v20 + 24);
    long long v31 = *(_OWORD *)(v20 + 40);
    *(void *)uint64_t v29 = v18;
    *(_DWORD *)(v29 + 8) = v17;
    uint64_t v32 = *(void *)(v4 + 56) + v19;
    *(void *)uint64_t v32 = v21;
    *(_DWORD *)(v32 + 8) = v22;
    *(unsigned char *)(v32 + 12) = v23;
    *(_WORD *)(v32 + 14) = v24;
    *(unsigned char *)(v32 + 16) = v25;
    *(_OWORD *)(v32 + 24) = v30;
    *(_OWORD *)(v32 + 40) = v31;
    *(void *)(v32 + 56) = v26;
    *(unsigned char *)(v32 + 64) = v27;
    *(unsigned char *)(v32 + 65) = v28;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v35 = v33 + 2;
  if (v35 >= v13) {
    goto LABEL_26;
  }
  unint64_t v34 = *(void *)(v6 + 8 * v35);
  if (v34)
  {
    int64_t v9 = v35;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v34 = *(void *)(v6 + 8 * v9);
    ++v35;
    if (v34) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100097D28()
{
  return sub_100097D34(&qword_10070A688);
}

void *sub_100097D34(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10000566C(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1005E2FD0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = *(void *)(v3 + 48) + 16 * v16;
    uint64_t v18 = *(void *)v17;
    LODWORD(v17) = *(_DWORD *)(v17 + 8);
    char v19 = *(unsigned char *)(*(void *)(v3 + 56) + v16);
    uint64_t v20 = *(void *)(v5 + 48) + 16 * v16;
    *(void *)uint64_t v20 = v18;
    *(_DWORD *)(v20 + 8) = v17;
    *(unsigned char *)(*(void *)(v5 + 56) + v16) = v19;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100097EE0()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A708);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v15;
    uint64_t v18 = *(void *)v17;
    LODWORD(v17) = *(_DWORD *)(v17 + 8);
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v21 = v18;
    *(_DWORD *)(v21 + 8) = v17;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100098098()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A700);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 32 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    char v20 = *(unsigned char *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    char v22 = *(unsigned char *)(v19 + 16);
    uint64_t v23 = *(void *)(v19 + 24);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v24 = *(void *)(v4 + 56) + v18;
    *(unsigned char *)uint64_t v24 = v20;
    *(void *)(v24 + 8) = v21;
    *(unsigned char *)(v24 + 16) = v22;
    *(void *)(v24 + 24) = v23;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100098260()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A738);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    char v22 = (void *)(*(void *)(v4 + 48) + v16);
    *char v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100098410()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A670);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    int v22 = *(_DWORD *)v21;
    char v23 = *(unsigned char *)(v21 + 4);
    uint64_t v24 = *(void *)(v21 + 8);
    LOBYTE(v21) = *(unsigned char *)(v21 + 16);
    int64_t v25 = (void *)(*(void *)(v4 + 48) + v16);
    void *v25 = v18;
    v25[1] = v19;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(_DWORD *)uint64_t v26 = v22;
    *(unsigned char *)(v26 + 4) = v23;
    *(void *)(v26 + 8) = v24;
    *(unsigned char *)(v26 + 16) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000985E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_100709E38);
  uint64_t v29 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_10070A6A0);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1005E2FD0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  int64_t v27 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = *(void *)(v5 + 48) + 16 * v16;
    uint64_t v19 = *(void *)v18;
    int v20 = *(_DWORD *)(v18 + 8);
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_100026334(*(void *)(v5 + 56) + v21, (uint64_t)v4);
    uint64_t v22 = *(void *)(v7 + 48) + v17;
    *(void *)uint64_t v22 = v19;
    *(_DWORD *)(v22 + 8) = v20;
    sub_10001FDF0((uint64_t)v4, *(void *)(v7 + 56) + v21, &qword_100709E38);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_100098864()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A698);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v15;
    uint64_t v18 = *(void *)v17;
    LODWORD(v17) = *(_DWORD *)(v17 + 8);
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v21 = v18;
    *(_DWORD *)(v21 + 8) = v17;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100098A24()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A748);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v22 = v18;
    v22[1] = v19;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100098BD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v24 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_10070A798);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1005E2FD0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  int64_t v23 = v1;
  uint64_t result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v15) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v9 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v24 + 72) * v17;
    sub_10009C16C(*(void *)(v5 + 48) + v18, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    char v19 = *(unsigned char *)(*(void *)(v5 + 56) + v17);
    uint64_t result = (void *)sub_10009C288((uint64_t)v4, *(void *)(v7 + 48) + v18, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    *(unsigned char *)(*(void *)(v7 + 56) + v17) = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v15)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v9 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_100098E50()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A788);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_retain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100098FFC()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A758);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v18);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000991A4()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A7A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      int64_t v9 = v29 + 1;
      if (v29 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v6 + 8 * v9);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 40 * v15;
    char v18 = *(unsigned char *)v17;
    int v19 = *(_DWORD *)(v17 + 4);
    uint64_t v20 = *(void *)(v17 + 8);
    int v21 = *(_DWORD *)(v17 + 16);
    uint64_t v22 = *(void *)(v17 + 24);
    unint64_t v23 = *(void *)(v17 + 32);
    uint64_t v24 = 12 * v15;
    uint64_t v25 = *(void *)(v2 + 56) + v24;
    uint64_t v26 = *(void *)v25;
    LOBYTE(v25) = *(unsigned char *)(v25 + 8);
    uint64_t v27 = *(void *)(v4 + 48) + v16;
    *(unsigned char *)uint64_t v27 = v18;
    *(_DWORD *)(v27 + 4) = v19;
    *(void *)(v27 + 8) = v20;
    *(_DWORD *)(v27 + 16) = v21;
    *(void *)(v27 + 24) = v22;
    *(void *)(v27 + 32) = v23;
    uint64_t v28 = *(void *)(v4 + 56) + v24;
    *(void *)uint64_t v28 = v26;
    *(unsigned char *)(v28 + 8) = v25;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_100008D24(v22, v23);
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v13) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v6 + 8 * v31);
  if (v30)
  {
    int64_t v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v9);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000993A0()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A7B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    uint64_t result = (void *)sub_100008D24(v19, *((unint64_t *)&v19 + 1));
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100099550()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A7A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    char v20 = *(unsigned char *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    unint64_t v22 = *(void *)(v19 + 16);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v23 = *(void *)(v4 + 56) + v18;
    *(unsigned char *)uint64_t v23 = v20;
    *(void *)(v23 + 8) = v21;
    *(void *)(v23 + 16) = v22;
    uint64_t result = (void *)sub_100008D24(v21, v22);
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10009970C()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A790);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 40 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    char v20 = *(unsigned char *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    char v22 = *(unsigned char *)(v19 + 32);
    long long v23 = *(_OWORD *)(v19 + 16);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v24 = *(void *)(v4 + 56) + v18;
    *(unsigned char *)uint64_t v24 = v20;
    *(void *)(v24 + 8) = v21;
    *(_OWORD *)(v24 + 16) = v23;
    *(unsigned char *)(v24 + 32) = v22;
    uint64_t result = (void *)sub_100008D24(v21, v23);
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000998DC()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A750);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v23 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v23 = v20;
    *(unsigned char *)(v23 + 8) = v21;
    *(void *)(v23 + 16) = v22;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100099AA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_100709E38);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_10070A760);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1005E2FD0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v26 = v1;
  uint64_t result = (void *)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v16) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v12;
    if (!v23)
    {
      int64_t v12 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v12);
      if (!v23) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_9:
    uint64_t v19 = 16 * v18;
    unint64_t v20 = *(void *)(v3 + 72) * v18;
    uint64_t v21 = *(void *)(v6 + 56) + v20;
    long long v27 = *(_OWORD *)(*(void *)(v6 + 48) + 16 * v18);
    sub_100026334(v21, (uint64_t)v5);
    *(_OWORD *)(*(void *)(v8 + 48) + v19) = v27;
    sub_10001FDF0((uint64_t)v5, *(void *)(v8 + 56) + v20, &qword_100709E38);
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v26;
    goto LABEL_25;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v12 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100099D1C(uint64_t *a1, char a2, void *a3)
{
  void (*v4)(uint64_t *__return_ptr, uint64_t *);
  uint64_t (*v5)(uint64_t *);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  __int16 v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  int64_t v29;
  void *v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  void (*v47)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v48;
  unsigned int v49;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  int v60;
  char v61;
  __int16 v62;
  char v63;
  long long v64;
  long long v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  Swift::String v73;
  Swift::String v74;

  uint64_t v4 = (void (*)(uint64_t *__return_ptr, uint64_t *))a1[1];
  uint64_t v5 = (uint64_t (*)(uint64_t *))a1[3];
  uint64_t v72 = *a1;
  uint64_t v3 = v72;
  long long v53 = v72 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v72 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  uint64_t v8 = v7 & *(void *)(v72 + 64);
  char v47 = (void (*)(uint64_t *__return_ptr, uint64_t *))a1[5];
  sub_10002292C((uint64_t)&v72);
  char v52 = (unint64_t)(63 - v6) >> 6;
  swift_retain();
  swift_retain();
  swift_retain();
  int64_t v9 = 0;
  if (!v8) {
    goto LABEL_8;
  }
LABEL_5:
  uint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v11 = v10 | (v9 << 6);
  while (1)
  {
    int64_t v12 = *(void *)(v3 + 48) + 16 * v11;
    uint64_t v13 = *(void *)v12;
    LODWORD(v12) = *(_DWORD *)(v12 + 8);
    uint64_t v14 = *(void *)(v3 + 56) + 72 * v11;
    unint64_t v15 = *(void *)v14;
    int64_t v16 = *(_DWORD *)(v14 + 8);
    unint64_t v17 = *(unsigned char *)(v14 + 12);
    unint64_t v18 = *(_WORD *)(v14 + 14);
    uint64_t v19 = *(unsigned char *)(v14 + 16);
    unint64_t v20 = *(void *)(v14 + 56);
    uint64_t v21 = *(unsigned char *)(v14 + 64);
    int64_t v22 = *(unsigned char *)(v14 + 65);
    long long v57 = v13;
    LODWORD(v58) = v12;
    os_log_type_t v59 = v15;
    long long v60 = v16;
    char v61 = v17;
    uint64_t v62 = v18;
    long long v63 = v19;
    char v64 = *(_OWORD *)(v14 + 24);
    long long v65 = *(_OWORD *)(v14 + 40);
    char v66 = v20;
    uint64_t v67 = v21;
    int v68 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v4(&v54, &v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v23 = v54;
    int64_t v24 = v55;
    uint64_t v25 = v56;
    char v69 = v54;
    Swift::String v70 = v55;
    Swift::String v71 = v56;
    if (v5(&v69))
    {
      long long v57 = v23;
      char v58 = v24;
      os_log_type_t v59 = v25;
      v47(&v69, &v57);
      swift_bridgeObjectRelease();
      long long v48 = v71;
      unint64_t v30 = (void *)*a3;
      int64_t v31 = v69;
      char v49 = v70;
      int64_t v33 = sub_100024264(v69, v70);
      unint64_t v34 = v30[2];
      int64_t v35 = (v32 & 1) == 0;
      int64_t v36 = v34 + v35;
      if (__OFADD__(v34, v35)) {
        goto LABEL_43;
      }
      unint64_t v37 = v32;
      if (v30[3] >= v36)
      {
        if (a2)
        {
          if (v32) {
            goto LABEL_39;
          }
        }
        else
        {
          sub_100097EE0();
          if (v37) {
            goto LABEL_39;
          }
        }
      }
      else
      {
        sub_100051124(v36, a2 & 1);
        int64_t v38 = sub_100024264(v31, v49);
        if ((v37 & 1) != (v39 & 1)) {
          goto LABEL_46;
        }
        int64_t v33 = v38;
        if (v37)
        {
LABEL_39:
          uint64_t v45 = swift_allocError();
          swift_willThrow();
          char v54 = v45;
          swift_errorRetain();
          sub_10000566C(&qword_10070B730);
          if ((swift_dynamicCast() & 1) == 0)
          {
            sub_10001D550((uint64_t)&v72);
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            sub_10003BC80();
            swift_release();
            swift_release();
            swift_release();
            return swift_errorRelease();
          }
          goto LABEL_47;
        }
      }
      uint64_t v40 = (void *)*a3;
      *(void *)(*a3 + 8 * (v33 >> 6) + 64) |= 1 << v33;
      uint64_t v41 = v40[6] + 16 * v33;
      *(void *)uint64_t v41 = v31;
      *(_DWORD *)(v41 + 8) = v49;
      *(void *)(v40[7] + 8 * v33) = v48;
      uint64_t v42 = v40[2];
      uint64_t v43 = __OFADD__(v42, 1);
      uint64_t v44 = v42 + 1;
      if (v43) {
        goto LABEL_44;
      }
      v40[2] = v44;
      a2 = 1;
      if (v8) {
        goto LABEL_5;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v8) {
        goto LABEL_5;
      }
    }
LABEL_8:
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v26 >= v52) {
      goto LABEL_41;
    }
    long long v27 = *(void *)(v53 + 8 * v26);
    if (!v27)
    {
      uint64_t v28 = v9 + 2;
      if (v9 + 2 >= v52) {
        goto LABEL_41;
      }
      long long v27 = *(void *)(v53 + 8 * v28);
      if (v27) {
        goto LABEL_13;
      }
      int64_t v29 = v9 + 3;
      if (v9 + 3 >= v52) {
        goto LABEL_41;
      }
      long long v27 = *(void *)(v53 + 8 * v29);
      if (!v27)
      {
        uint64_t v28 = v9 + 4;
        if (v9 + 4 >= v52) {
          goto LABEL_41;
        }
        long long v27 = *(void *)(v53 + 8 * v28);
        if (v27) {
          goto LABEL_13;
        }
        int64_t v29 = v9 + 5;
        if (v9 + 5 >= v52) {
          goto LABEL_41;
        }
        long long v27 = *(void *)(v53 + 8 * v29);
        if (!v27)
        {
          uint64_t v28 = v9 + 6;
          if (v9 + 6 >= v52)
          {
LABEL_41:
            sub_10001D550((uint64_t)&v72);
            swift_release();
            swift_release();
            swift_release();
            sub_10003BC80();
            swift_release();
            swift_release();
            return swift_release();
          }
          long long v27 = *(void *)(v53 + 8 * v28);
          if (!v27)
          {
            while (1)
            {
              int64_t v26 = v28 + 1;
              if (__OFADD__(v28, 1)) {
                goto LABEL_45;
              }
              if (v26 >= v52) {
                goto LABEL_41;
              }
              long long v27 = *(void *)(v53 + 8 * v26);
              ++v28;
              if (v27) {
                goto LABEL_17;
              }
            }
          }
LABEL_13:
          int64_t v26 = v28;
          goto LABEL_17;
        }
      }
      int64_t v26 = v29;
    }
LABEL_17:
    uint64_t v8 = (v27 - 1) & v27;
    unint64_t v11 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v9 = v26;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  sub_1005E3380();
  __break(1u);
LABEL_47:
  long long v57 = 0;
  char v58 = 0xE000000000000000;
  sub_1005E2C80(30);
  v73._object = (void *)0x80000001005E4EC0;
  v73._countAndFlagsBits = 0xD00000000000001BLL;
  sub_1005E1E30(v73);
  sub_1005E2E90();
  v74._countAndFlagsBits = 39;
  v74._object = (void *)0xE100000000000000;
  sub_1005E1E30(v74);
  uint64_t result = sub_1005E2F20();
  __break(1u);
  return result;
}

uint64_t sub_10009A328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = a3(a2);
  if (v9) {
    goto LABEL_19;
  }
  int v10 = *(_DWORD *)(a2 + 36);
  if (v10 != v8)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v11 = 1 << *(unsigned char *)(a2 + 32);
  if (v11 < result)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(unsigned char *)(a1 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v10 != v12) {
    goto LABEL_15;
  }
  if (*(void *)a1 < result)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (*(unsigned char *)(a1 + 40))
  {
LABEL_21:
    __break(1u);
    return result;
  }
  uint64_t v13 = *(void *)(a1 + 32);
  if (v10 != v13) {
    goto LABEL_17;
  }
  uint64_t v14 = *(void *)(a1 + 24);
  if (v11 < v14)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v12;
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = v14;
  *(void *)(a4 + 32) = v13;
  *(unsigned char *)(a4 + 40) = 0;
  *(void *)(a4 + 48) = a2;
  return swift_bridgeObjectRetain();
}

BOOL sub_10009A414(void *a1)
{
  return *a1 != 0;
}

uint64_t sub_10009A424@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = *a1;
  if (result)
  {
    uint64_t v6 = a1 + 1;
    uint64_t v4 = a1[1];
    uint64_t v5 = v6[1];
    *(void *)a2 = result;
    *(_DWORD *)(a2 + 8) = v4;
    *(void *)(a2 + 16) = v5;
    return swift_bridgeObjectRetain();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10009A448(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_10003BC88();
  uint64_t result = sub_1005E2280();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned int *)(a1 + 40);
    do
    {
      uint64_t v5 = *((void *)v4 - 1);
      unsigned int v6 = *v4;
      v4 += 4;
      swift_bridgeObjectRetain();
      sub_1000187DC((uint64_t)&v7, v5, v6);
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_10009A4E0(uint64_t a1, uint64_t a2)
{
  sub_10009A6E0(a1, (uint64_t)v32);
  sub_10009A6E0(a2, (uint64_t)v31);
  sub_10009A6E0((uint64_t)v32, (uint64_t)&v33);
  if (v34 == 1)
  {
    sub_10009A6E0((uint64_t)v31, (uint64_t)&v35);
    if ((v36 & 1) == 0)
    {
LABEL_8:
      char v5 = 0;
      return v5 & 1;
    }
  }
  else
  {
    uint64_t v4 = v33;
    sub_10009A6E0((uint64_t)v31, (uint64_t)&v35);
    char v5 = 0;
    if ((v36 & 1) != 0 || v4 != v35) {
      return v5 & 1;
    }
  }
  if (*(unsigned __int8 *)(a1 + 9) != *(unsigned __int8 *)(a2 + 9)
    || *(unsigned __int8 *)(a1 + 10) != *(unsigned __int8 *)(a2 + 10))
  {
    goto LABEL_8;
  }
  if (*(unsigned char *)(a1 + 17)) {
    int v7 = 256;
  }
  else {
    int v7 = 0;
  }
  int v8 = v7 | *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 18)) {
    int v9 = 0x10000;
  }
  else {
    int v9 = 0;
  }
  int v10 = v8 | v9;
  if (*(unsigned char *)(a2 + 17)) {
    int v11 = 256;
  }
  else {
    int v11 = 0;
  }
  int v12 = v11 | *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned char *)(a2 + 18)) {
    int v13 = 0x10000;
  }
  else {
    int v13 = 0;
  }
  BOOL v14 = static Environment.__derived_struct_equals(_:_:)(v10, *(void *)(a1 + 24), *(unsigned char *)(a1 + 32), *(void *)(a1 + 40), v12 | v13, *(void *)(a2 + 24), *(unsigned char *)(a2 + 32), *(void *)(a2 + 40));
  char v5 = 0;
  if (v14)
  {
    if ((sub_100013158(*(void *)(a1 + 48), *(void *)(a2 + 48)) & 1) != 0
      && (sub_10001FF2C(*(void *)(a1 + 56), *(void *)(a2 + 56)) & 1) != 0)
    {
      long long v15 = *(_OWORD *)(a1 + 112);
      v30[2] = *(_OWORD *)(a1 + 96);
      v30[3] = v15;
      long long v16 = *(_OWORD *)(a1 + 144);
      v30[4] = *(_OWORD *)(a1 + 128);
      v30[5] = v16;
      long long v17 = *(_OWORD *)(a1 + 80);
      v30[0] = *(_OWORD *)(a1 + 64);
      v30[1] = v17;
      long long v18 = *(_OWORD *)(a2 + 112);
      v29[2] = *(_OWORD *)(a2 + 96);
      v29[3] = v18;
      long long v19 = *(_OWORD *)(a2 + 144);
      v29[4] = *(_OWORD *)(a2 + 128);
      v29[5] = v19;
      long long v20 = *(_OWORD *)(a2 + 80);
      v29[0] = *(_OWORD *)(a2 + 64);
      v29[1] = v20;
      if (sub_100085008((uint64_t)v30, (uint64_t)v29))
      {
        long long v21 = *(_OWORD *)(a1 + 208);
        v27[2] = *(_OWORD *)(a1 + 192);
        v28[0] = v21;
        *(_OWORD *)((char *)v28 + 12) = *(_OWORD *)(a1 + 220);
        long long v22 = *(_OWORD *)(a1 + 176);
        v27[0] = *(_OWORD *)(a1 + 160);
        v27[1] = v22;
        long long v23 = *(_OWORD *)(a2 + 208);
        v25[2] = *(_OWORD *)(a2 + 192);
        v26[0] = v23;
        *(_OWORD *)((char *)v26 + 12) = *(_OWORD *)(a2 + 220);
        long long v24 = *(_OWORD *)(a2 + 176);
        v25[0] = *(_OWORD *)(a2 + 160);
        v25[1] = v24;
        if (sub_100055900((uint64_t)v27, (uint64_t)v25)
          && _s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(*(void *)(a1 + 240), *(void *)(a2 + 240)))
        {
          char v5 = sub_1000132C8(*(void *)(a1 + 248), *(void *)(a2 + 248));
          return v5 & 1;
        }
      }
    }
    goto LABEL_8;
  }
  return v5 & 1;
}

uint64_t sub_10009A6E0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10009A73C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_10009B9A4();
  uint64_t result = sub_1005E2280();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_100018E54(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_10009A7D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_10009B208();
  uint64_t result = sub_1005E2280();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_100019080(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_10009A848(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_10005FACC();
  uint64_t result = sub_1005E2280();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      sub_100008D24(v5, *v4);
      sub_1000191A0(v7, v5, v6);
      sub_1000094D4(v7[0], v7[1]);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_10009A8E4(uint64_t a1)
{
  return sub_10009A94C(a1, (void (*)(void))sub_100057440, (uint64_t)&type metadata for SyncRequest.ID, (void (*)(unsigned char *, void))sub_100018E3C);
}

uint64_t sub_10009A918(uint64_t a1)
{
  return sub_10009A94C(a1, (void (*)(void))sub_10009B9F8, (uint64_t)&type metadata for SearchRequest.ID, (void (*)(unsigned char *, void))sub_100019B30);
}

uint64_t sub_10009A94C(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(unsigned char *, void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  a2();
  uint64_t result = sub_1005E2280();
  uint64_t v11 = result;
  if (v6)
  {
    uint64_t v8 = (unsigned int *)(a1 + 32);
    do
    {
      unsigned int v9 = *v8++;
      a4(v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

uint64_t sub_10009A9CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1000078C0();
  uint64_t result = sub_1005E2280();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::UInt *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      Swift::UInt v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1000189E4(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_10009AA64(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_10009B8F8();
  uint64_t v3 = sub_1005E2280();
  uint64_t v27 = v2;
  if (!v2) {
    return v3;
  }
  uint64_t v4 = 0;
  uint64_t v26 = a1 + 32;
  while (1)
  {
    sub_10003C94C(v26 + 48 * v4, (uint64_t)v33);
    sub_1005E33F0();
    swift_bridgeObjectRetain();
    sub_1005E2BE0();
    Swift::Int v11 = sub_1005E3470();
    uint64_t v12 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v3 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      uint64_t v14 = ~v12;
      do
      {
        sub_10003C94C(*(void *)(v3 + 48) + 48 * v13, (uint64_t)v32);
        uint64_t v15 = v32[0];
        uint64_t v16 = v33[0];
        sub_10003C94C((uint64_t)v32, (uint64_t)v31);
        sub_10003C94C((uint64_t)v33, (uint64_t)v30);
        if (v15 == v16)
        {
          char v17 = sub_1005E2BD0();
          sub_10003C9A8((uint64_t)v30);
          sub_10003C9A8((uint64_t)v31);
          sub_10003C9A8((uint64_t)v32);
          if (v17) {
            goto LABEL_7;
          }
        }
        else
        {
          sub_10003C9A8((uint64_t)v30);
          sub_10003C9A8((uint64_t)v31);
          sub_10003C9A8((uint64_t)v32);
        }
        unint64_t v13 = (v13 + 1) & v14;
      }
      while (((*(void *)(v3 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
    }
    swift_bridgeObjectRelease();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_10003C94C((uint64_t)v33, (uint64_t)v31);
    uint64_t v29 = v3;
    if (*(void *)(v3 + 24) > *(void *)(v3 + 16))
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1000CB8D0();
        uint64_t v3 = v29;
      }
    }
    else
    {
      if (isUniquelyReferenced_nonNull_native) {
        sub_1000C890C();
      }
      else {
        sub_1000CD690();
      }
      uint64_t v3 = v29;
      sub_1005E33F0();
      sub_1005E2BE0();
      Swift::Int v19 = sub_1005E3470();
      uint64_t v20 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v13 = v19 & ~v20;
      if ((*(void *)(v3 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
      {
        uint64_t v21 = ~v20;
        do
        {
          sub_10003C94C(*(void *)(v3 + 48) + 48 * v13, (uint64_t)v32);
          uint64_t v22 = v32[0];
          uint64_t v23 = *(void *)&v31[0];
          sub_10003C94C((uint64_t)v32, (uint64_t)v30);
          sub_10003C94C((uint64_t)v31, (uint64_t)v28);
          if (v22 == v23)
          {
            char v24 = sub_1005E2BD0();
            sub_10003C9A8((uint64_t)v28);
            sub_10003C9A8((uint64_t)v30);
            sub_10003C9A8((uint64_t)v32);
            if (v24) {
              goto LABEL_28;
            }
          }
          else
          {
            sub_10003C9A8((uint64_t)v28);
            sub_10003C9A8((uint64_t)v30);
            sub_10003C9A8((uint64_t)v32);
          }
          unint64_t v13 = (v13 + 1) & v21;
        }
        while (((*(void *)(v3 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
      }
    }
    *(void *)(v3 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v13;
    uint64_t v5 = (_OWORD *)(*(void *)(v3 + 48) + 48 * v13);
    long long v6 = v31[0];
    long long v7 = v31[2];
    v5[1] = v31[1];
    v5[2] = v7;
    *uint64_t v5 = v6;
    uint64_t v8 = *(void *)(v3 + 16);
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9) {
      break;
    }
    *(void *)(v3 + 16) = v10;
LABEL_7:
    swift_bridgeObjectRelease();
    ++v4;
    sub_10003C9A8((uint64_t)v33);
    if (v4 == v27) {
      return v3;
    }
  }
  __break(1u);
LABEL_28:
  uint64_t result = sub_1005E3370();
  __break(1u);
  return result;
}

uint64_t sub_10009ADE4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  long long v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_10009C114();
  uint64_t result = sub_1005E2280();
  uint64_t v14 = result;
  if (v9)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_10009C16C(v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_100019B60((uint64_t)v8, (uint64_t)v6);
      sub_10009C1D4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v14;
  }
  return result;
}

uint64_t sub_10009AF40(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10009AF4C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10009AF80(uint64_t a1)
{
  return a1;
}

uint64_t sub_10009AFB4(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, int a6, char a7, uint64_t a8)
{
  if (a4 < 0)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  uint64_t v8 = a4;
  uint64_t v11 = result;
  char v12 = a3 & 1;
  if (a4)
  {
    if ((a7 & 1) == 0)
    {
      uint64_t v16 = result;
      uint64_t v17 = a2;
      while ((v12 & 1) == 0)
      {
        if (v17 != a6)
        {
          __break(1u);
          goto LABEL_14;
        }
        if (v16 == a5)
        {
          uint64_t v16 = 0;
          goto LABEL_12;
        }
        uint64_t result = sub_1000D3970(v16, v17, 0, a8);
        uint64_t v16 = result;
        uint64_t v17 = v18;
        char v12 = v19 & 1;
        if (!--v8) {
          goto LABEL_12;
        }
      }
    }
    goto LABEL_15;
  }
  uint64_t v16 = result;
LABEL_12:
  sub_10009AF40(v11, a2, a3 & 1);
  return v16;
}

uint64_t sub_10009B0A4()
{
  return _swift_deallocObject(v0, 24, 7);
}

BOOL sub_10009B0B4(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100091404(a1, a2, a3, a4, a5, *(void *)(v5 + 16));
}

uint64_t sub_10009B0BC()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009B0F4(unsigned int *a1)
{
  return sub_10002214C(a1, *(uint64_t (**)(void, void, void, void, void))(v1 + 16));
}

uint64_t sub_10009B0FC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10009B158(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10009B1B4(uint64_t a1)
{
  return a1;
}

unint64_t sub_10009B208()
{
  unint64_t result = qword_10070B6A8;
  if (!qword_10070B6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B6A8);
  }
  return result;
}

uint64_t *sub_10009B25C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_10009B28C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(v0 + 40);
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_10009B300(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10009B35C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10009B3B0()
{
  _s13IMAP2Behavior4TaskOwxx_0(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_10009B410(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10009B46C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10009B4C0()
{
  _s13IMAP2Behavior4TaskOwxx_0(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_10009B528(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10009B584(uint64_t a1)
{
  return a1;
}

uint64_t sub_10009B5D8()
{
  _s13IMAP2Behavior4TaskOwxx_0(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_10009B638(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10009B694(uint64_t a1)
{
  return a1;
}

uint64_t sub_10009B6E8()
{
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(v0 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_10009B740(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10009B79C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10009B7F0()
{
  _s13IMAP2Behavior4TaskOwxx_0(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_10009B848(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10009B8A4(uint64_t a1)
{
  return a1;
}

unint64_t sub_10009B8F8()
{
  unint64_t result = qword_10070B728;
  if (!qword_10070B728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B728);
  }
  return result;
}

unint64_t *sub_10009B94C(unint64_t *a1)
{
  return a1;
}

unint64_t *sub_10009B978(unint64_t *a1)
{
  return a1;
}

unint64_t sub_10009B9A4()
{
  unint64_t result = qword_10070B738;
  if (!qword_10070B738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B738);
  }
  return result;
}

unint64_t sub_10009B9F8()
{
  unint64_t result = qword_10070B740;
  if (!qword_10070B740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B740);
  }
  return result;
}

unint64_t sub_10009BA4C()
{
  unint64_t result = qword_10070B748;
  if (!qword_10070B748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B748);
  }
  return result;
}

uint64_t destroy for State.NextTask(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) != 255) {
    _s13IMAP2Behavior4TaskOwxx_0(a1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for State.NextTask(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 40);
  if (v4 == 255)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    if (v4)
    {
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 1;
    }
    else
    {
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 0;
    }
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for State.NextTask(uint64_t a1, long long *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    if (v4 == 255)
    {
      long long v7 = *a2;
      long long v8 = a2[1];
      *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v8;
      goto LABEL_11;
    }
    if (v4)
    {
LABEL_8:
      uint64_t v9 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v9;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v9 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 1;
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v10 = *((void *)a2 + 3);
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v10 - 8))(a1, a2);
    *(unsigned char *)(a1 + 40) = 0;
    goto LABEL_11;
  }
  if (v4 != 255)
  {
    if ((long long *)a1 == a2) {
      goto LABEL_11;
    }
    sub_10009B1B4(a1);
    if (*((unsigned char *)a2 + 40)) {
      goto LABEL_8;
    }
    goto LABEL_10;
  }
  sub_10009B1B4(a1);
  long long v5 = *(long long *)((char *)a2 + 25);
  long long v6 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 25) = v5;
LABEL_11:
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for State.NextTask(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for State.NextTask(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 40) == 255) {
    goto LABEL_7;
  }
  if (*(unsigned __int8 *)(a2 + 40) == 255 || a1 != a2)
  {
    sub_10009B1B4(a1);
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for State.NextTask(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for State.NextTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for State.NextTask()
{
  return &type metadata for State.NextTask;
}

unsigned char *storeEnumTagSinglePayload for State.SyncSteps(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10009BEFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for State.SyncSteps()
{
  return &type metadata for State.SyncSteps;
}

unint64_t sub_10009BF38()
{
  unint64_t result = qword_10070B750;
  if (!qword_10070B750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B750);
  }
  return result;
}

uint64_t sub_10009BF8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10009BFBC(a1, a2, sub_1000D38CC, sub_1000D3970, sub_1000D38CC, a3);
}

uint64_t sub_10009BFBC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t (*a4)(uint64_t, uint64_t, void, uint64_t)@<X3>, uint64_t (*a5)(uint64_t)@<X4>, uint64_t a6@<X8>)
{
  if (result < 0)
  {
LABEL_16:
    __break(1u);
  }
  else
  {
    uint64_t v9 = result;
    unint64_t result = a3(a2);
    uint64_t v11 = result;
    uint64_t v13 = v12;
    char v15 = v14 & 1;
    if (v9)
    {
      uint64_t v16 = *(unsigned int *)(a2 + 36);
      uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
      while ((v15 & 1) == 0)
      {
        if (v16 != v13)
        {
          __break(1u);
          goto LABEL_16;
        }
        if (v11 == v17)
        {
          char v15 = 0;
          uint64_t v11 = v17;
          uint64_t v13 = v16;
          goto LABEL_10;
        }
        unint64_t result = a4(v11, v13, 0, a2);
        uint64_t v11 = result;
        uint64_t v13 = v18;
        char v15 = v19 & 1;
        if (!--v9) {
          goto LABEL_10;
        }
      }
      goto LABEL_19;
    }
LABEL_10:
    unint64_t result = a3(a2);
    if (v15 & 1) != 0 || (v21) {
      goto LABEL_20;
    }
    if (v13 == v20)
    {
      if (v11 >= result)
      {
        v26[0] = result;
        v26[1] = v20;
        char v27 = 0;
        uint64_t v28 = v11;
        uint64_t v29 = v13;
        char v30 = 0;
        unint64_t result = sub_10009A328((uint64_t)v26, a2, a5, (uint64_t)v24);
        long long v22 = v24[1];
        *(_OWORD *)a6 = v24[0];
        *(_OWORD *)(a6 + 16) = v22;
        *(_OWORD *)(a6 + 32) = v24[2];
        *(void *)(a6 + 48) = v25;
        return result;
      }
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

unint64_t sub_10009C114()
{
  unint64_t result = qword_10070B758;
  if (!qword_10070B758)
  {
    type metadata accessor for MoveAndCopyMessages.CommandID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B758);
  }
  return result;
}

uint64_t sub_10009C16C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10009C1D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10009C234()
{
  unint64_t result = qword_10070B760;
  if (!qword_10070B760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B760);
  }
  return result;
}

uint64_t sub_10009C288(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_10009C2F0(void *a1@<X8>)
{
  *a1 = &off_1006B9EB0;
}

unint64_t sub_10009C300(char a1)
{
  unint64_t result = 0x636E79736552;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x73654D6863746546;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 6:
      unint64_t result = 0x654D64616F6C7055;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
    case 12:
    case 14:
      unint64_t result = 0xD000000000000013;
      break;
    case 9:
      unint64_t result = 0xD000000000000016;
      break;
    case 10:
      unint64_t result = 0xD000000000000016;
      break;
    case 11:
      unint64_t result = 0xD000000000000010;
      break;
    case 13:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10009C4D0()
{
  return sub_10009C300(*v0);
}

Swift::Int sub_10009C4D8(Swift::Int *a1, uint64_t *a2)
{
  Swift::Int v2 = a1[1];
  Swift::Int v3 = a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  if ((sub_100012F74(*a1, *a2) & 1) == 0 || (sub_100012F74(v2, v4) & 1) == 0) {
    return 0;
  }
  return sub_100012F74(v3, v5);
}

void *sub_10009C558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v5 = 0;
  uint64_t v6 = a1 + 56;
  uint64_t v47 = a2 + 56;
  uint64_t v7 = a3 + 56;
  long long v8 = _swiftEmptyArrayStorage;
  do
  {
    Swift::UInt v9 = *((unsigned __int8 *)&off_1006B9EB0 + v5 + 32);
    if (*(void *)(a1 + 16))
    {
      sub_1005E33F0();
      sub_1005E3410(v9);
      Swift::Int v10 = sub_1005E3470();
      uint64_t v11 = -1 << *(unsigned char *)(a1 + 32);
      unint64_t v12 = v10 & ~v11;
      if ((*(void *)(v6 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
      {
        uint64_t v13 = *(void *)(a1 + 48);
        char v14 = _swiftEmptyArrayStorage;
        if (*(unsigned __int8 *)(v13 + v12) == v9) {
          goto LABEL_14;
        }
        uint64_t v15 = ~v11;
        while (1)
        {
          unint64_t v12 = (v12 + 1) & v15;
          if (((*(void *)(v6 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v13 + v12) == v9)
          {
            char v14 = _swiftEmptyArrayStorage;
            goto LABEL_14;
          }
        }
      }
    }
    char v14 = sub_100015F0C(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1) {
      char v14 = sub_100015F0C((void *)(v16 > 1), v17 + 1, 1, v14);
    }
    v14[2] = v17 + 1;
    uint64_t v18 = (char *)&v14[2 * v17];
    strcpy(v18 + 32, "not-completed");
    *((_WORD *)v18 + 23) = -4864;
    uint64_t v3 = a3;
LABEL_14:
    if (!*(void *)(a2 + 16)
      || (sub_1005E33F0(),
          sub_1005E3410(v9),
          Swift::Int v19 = sub_1005E3470(),
          uint64_t v20 = -1 << *(unsigned char *)(a2 + 32),
          unint64_t v21 = v19 & ~v20,
          ((*(void *)(v47 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0))
    {
      if (!*(void *)(v3 + 16)) {
        goto LABEL_38;
      }
LABEL_28:
      sub_1005E33F0();
      sub_1005E3410(v9);
      Swift::Int v27 = sub_1005E3470();
      uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v29 = v27 & ~v28;
      if ((*(void *)(v7 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29))
      {
        uint64_t v30 = *(void *)(v3 + 48);
        if (*(unsigned __int8 *)(v30 + v29) == v9)
        {
LABEL_33:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v14 = sub_100015F0C(0, v14[2] + 1, 1, v14);
          }
          unint64_t v33 = v14[2];
          unint64_t v32 = v14[3];
          if (v33 >= v32 >> 1) {
            char v14 = sub_100015F0C((void *)(v32 > 1), v33 + 1, 1, v14);
          }
          v14[2] = v33 + 1;
          char v34 = &v14[2 * v33];
          v34[4] = 0x6E65646E65706564;
          v34[5] = 0xEA00000000007963;
          uint64_t v3 = a3;
        }
        else
        {
          uint64_t v31 = ~v28;
          while (1)
          {
            unint64_t v29 = (v29 + 1) & v31;
            if (((*(void *)(v7 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
              break;
            }
            if (*(unsigned __int8 *)(v30 + v29) == v9) {
              goto LABEL_33;
            }
          }
        }
      }
      goto LABEL_38;
    }
    uint64_t v22 = *(void *)(a2 + 48);
    if (*(unsigned __int8 *)(v22 + v21) == v9)
    {
LABEL_20:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v14 = sub_100015F0C(0, v14[2] + 1, 1, v14);
      }
      unint64_t v25 = v14[2];
      unint64_t v24 = v14[3];
      if (v25 >= v24 >> 1) {
        char v14 = sub_100015F0C((void *)(v24 > 1), v25 + 1, 1, v14);
      }
      v14[2] = v25 + 1;
      uint64_t v26 = &v14[2 * v25];
      v26[4] = 0x74726174736572;
      v26[5] = 0xE700000000000000;
      uint64_t v3 = a3;
    }
    else
    {
      uint64_t v23 = ~v20;
      while (1)
      {
        unint64_t v21 = (v21 + 1) & v23;
        if (((*(void *)(v47 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v22 + v21) == v9) {
          goto LABEL_20;
        }
      }
    }
    if (*(void *)(v3 + 16)) {
      goto LABEL_28;
    }
LABEL_38:
    if (v14[2])
    {
      uint64_t v35 = (void *)0xE600000000000000;
      v36._countAndFlagsBits = 0x636E79736552;
      switch(v9)
      {
        case 1uLL:
          uint64_t v35 = (void *)0xED00007365676173;
          v36._countAndFlagsBits = 0x73654D6863746546;
          break;
        case 2uLL:
          v36._countAndFlagsBits = 0xD000000000000015;
          uint64_t v35 = (void *)0x80000001005E4FE0;
          break;
        case 3uLL:
          v36._countAndFlagsBits = 0xD00000000000001DLL;
          uint64_t v35 = (void *)0x80000001005E4FC0;
          break;
        case 4uLL:
          v36._countAndFlagsBits = 0xD000000000000011;
          uint64_t v35 = (void *)0x80000001005E4FA0;
          break;
        case 5uLL:
          v36._countAndFlagsBits = 0xD000000000000019;
          uint64_t v35 = (void *)0x80000001005E4F80;
          break;
        case 6uLL:
          uint64_t v35 = (void *)0xEE00736567617373;
          v36._countAndFlagsBits = 0x654D64616F6C7055;
          break;
        case 7uLL:
          v36._countAndFlagsBits = 0xD000000000000011;
          uint64_t v35 = (void *)0x80000001005E4F60;
          break;
        case 8uLL:
          unint64_t v37 = "UpdateLocalFlags";
          goto LABEL_54;
        case 9uLL:
          v36._countAndFlagsBits = 0xD000000000000016;
          uint64_t v35 = (void *)0x80000001005E5020;
          break;
        case 0xAuLL:
          v36._countAndFlagsBits = 0xD000000000000016;
          uint64_t v35 = (void *)0x80000001005E5000;
          break;
        case 0xBuLL:
          v36._countAndFlagsBits = 0xD000000000000010;
          uint64_t v35 = (void *)0x80000001005E4F20;
          break;
        case 0xCuLL:
          unint64_t v37 = "FindPending1stDownload";
          goto LABEL_54;
        case 0xDuLL:
          v36._countAndFlagsBits = 0xD00000000000001CLL;
          uint64_t v35 = (void *)0x80000001005E4F00;
          break;
        case 0xEuLL:
          unint64_t v37 = "Duplicate values for key: '";
LABEL_54:
          uint64_t v35 = (void *)((unint64_t)v37 | 0x8000000000000000);
          v36._countAndFlagsBits = 0xD000000000000013;
          break;
        default:
          break;
      }
      v36._object = v35;
      sub_1005E1E30(v36);
      swift_bridgeObjectRelease();
      v48._countAndFlagsBits = 8250;
      v48._object = (void *)0xE200000000000000;
      sub_1005E1E30(v48);
      sub_10000566C(&qword_100709F58);
      sub_100007494((unint64_t *)&qword_100709F60, &qword_100709F58);
      uint64_t v38 = sub_1005E1A80();
      uint64_t v40 = v39;
      swift_bridgeObjectRelease();
      v49._countAndFlagsBits = v38;
      v49._object = v40;
      sub_1005E1E30(v49);
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v8 = sub_100015F0C(0, v8[2] + 1, 1, v8);
      }
      unint64_t v42 = v8[2];
      unint64_t v41 = v8[3];
      if (v42 >= v41 >> 1) {
        long long v8 = sub_100015F0C((void *)(v41 > 1), v42 + 1, 1, v8);
      }
      _OWORD v8[2] = v42 + 1;
      uint64_t v43 = &v8[2 * v42];
      v43[4] = 0;
      v43[5] = 0xE000000000000000;
      uint64_t v3 = a3;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    ++v5;
  }
  while (v5 != 15);
  return v8;
}

BOOL sub_10009CCF4(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned __int8 v7 = *a1;
  if (!sub_100010180(*a1, a2) || sub_100010180(v7, a3)) {
    return 1;
  }
  uint64_t v8 = 0;
  uint64_t v9 = a2 + 56;
  uint64_t v10 = a3 + 56;
  while (*(void *)(a2 + 16))
  {
    Swift::UInt v11 = *((unsigned __int8 *)&off_1006B9EB0 + v8 + 32);
    sub_1005E33F0();
    sub_1005E3410(v11);
    Swift::Int v12 = sub_1005E3470();
    uint64_t v13 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v14 = v12 & ~v13;
    if (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
      break;
    }
    uint64_t v15 = *(void *)(a2 + 48);
    if (*(unsigned __int8 *)(v15 + v14) != v11)
    {
      uint64_t v16 = ~v13;
      do
      {
        unint64_t v14 = (v14 + 1) & v16;
        if (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          return 0;
        }
      }
      while (*(unsigned __int8 *)(v15 + v14) != v11);
    }
    if (*(void *)(a3 + 16))
    {
      sub_1005E33F0();
      sub_1005E3410(v11);
      Swift::Int v17 = sub_1005E3470();
      uint64_t v18 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v19 = v17 & ~v18;
      if ((*(void *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
      {
        uint64_t v20 = *(void *)(a3 + 48);
        if (*(unsigned __int8 *)(v20 + v19) == v11) {
          return 0;
        }
        uint64_t v21 = ~v18;
        while (1)
        {
          unint64_t v19 = (v19 + 1) & v21;
          if (((*(void *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v20 + v19) == v11) {
            return 0;
          }
        }
      }
    }
    if (++v8 == 15) {
      return sub_100010180(v7, a4);
    }
  }
  return 0;
}

uint64_t sub_10009CEE0()
{
  return sub_10009D060(*v0, v0[1]);
}

uint64_t sub_10009CEE8(uint64_t a1)
{
  unint64_t v2 = 0;
  uint64_t v3 = 0;
  uint64_t v4 = a1 + 56;
  while (1)
  {
    if (*(void *)(a1 + 16))
    {
      Swift::UInt v6 = *((unsigned __int8 *)&off_1006B9EB0 + v2 + 32);
      sub_1005E33F0();
      sub_1005E3410(v6);
      Swift::Int v7 = sub_1005E3470();
      uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
      unint64_t v9 = v7 & ~v8;
      if ((*(void *)(v4 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9)) {
        break;
      }
    }
LABEL_6:
    if (++v2 == 15) {
      return v3;
    }
  }
  uint64_t v10 = *(void *)(a1 + 48);
  if (*(unsigned __int8 *)(v10 + v9) != v6)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v4 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_6;
      }
    }
    while (*(unsigned __int8 *)(v10 + v9) != v6);
  }
  if (!HIDWORD(v2))
  {
    int v5 = 1 << v2;
    if (v2 >= 0x20) {
      int v5 = 0;
    }
    uint64_t v3 = v5 | v3;
    goto LABEL_6;
  }
  uint64_t result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_10009D060(uint64_t a1, uint64_t a2)
{
  sub_1005E2C80(30);
  swift_bridgeObjectRelease();
  strcpy((char *)v46, "completed: {");
  BYTE5(v46[1]) = 0;
  HIWORD(v46[1]) = -5120;
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v44 = a1;
    swift_bridgeObjectRetain();
    sub_10001A574(0, v3, 0);
    uint64_t v4 = sub_1000D38CC(a1);
    uint64_t v6 = v5;
    char v8 = v7 & 1;
    uint64_t v42 = a1 + 56;
    uint64_t v9 = a1;
    do
    {
      if (v4 < 0 || v4 >= 1 << *(unsigned char *)(v9 + 32))
      {
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
        JUMPOUT(0x10009D8ECLL);
      }
      if (((*(void *)(v42 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_56;
      }
      if (*(_DWORD *)(v9 + 36) != v6) {
        goto LABEL_57;
      }
      uint64_t v10 = (void *)0xE600000000000000;
      v11._countAndFlagsBits = 0x636E79736552;
      switch(*(unsigned char *)(*(void *)(v9 + 48) + v4))
      {
        case 1:
          v11._countAndFlagsBits = 0x73654D6863746546;
          uint64_t v10 = (void *)0xED00007365676173;
          break;
        case 2:
          v11._countAndFlagsBits = 0xD000000000000015;
          uint64_t v10 = (void *)0x80000001005E4FE0;
          break;
        case 3:
          v11._countAndFlagsBits = 0xD00000000000001DLL;
          uint64_t v10 = (void *)0x80000001005E4FC0;
          break;
        case 4:
          v11._countAndFlagsBits = 0xD000000000000011;
          uint64_t v10 = (void *)0x80000001005E4FA0;
          break;
        case 5:
          v11._countAndFlagsBits = 0xD000000000000019;
          uint64_t v10 = (void *)0x80000001005E4F80;
          break;
        case 6:
          v11._countAndFlagsBits = 0x654D64616F6C7055;
          uint64_t v10 = (void *)0xEE00736567617373;
          break;
        case 7:
          v11._countAndFlagsBits = 0xD000000000000011;
          uint64_t v10 = (void *)0x80000001005E4F60;
          break;
        case 8:
          Swift::Int v12 = "UpdateLocalFlags";
          goto LABEL_22;
        case 9:
          v11._countAndFlagsBits = 0xD000000000000016;
          uint64_t v10 = (void *)0x80000001005E5020;
          break;
        case 0xA:
          v11._countAndFlagsBits = 0xD000000000000016;
          uint64_t v10 = (void *)0x80000001005E5000;
          break;
        case 0xB:
          v11._countAndFlagsBits = 0xD000000000000010;
          uint64_t v10 = (void *)0x80000001005E4F20;
          break;
        case 0xC:
          Swift::Int v12 = "FindPending1stDownload";
          goto LABEL_22;
        case 0xD:
          v11._countAndFlagsBits = 0xD00000000000001CLL;
          uint64_t v10 = (void *)0x80000001005E4F00;
          break;
        case 0xE:
          Swift::Int v12 = "Duplicate values for key: '";
LABEL_22:
          uint64_t v10 = (void *)((unint64_t)v12 | 0x8000000000000000);
          v11._countAndFlagsBits = 0xD000000000000013;
          break;
        default:
          break;
      }
      v11._object = v10;
      sub_1005E1E30(v11);
      swift_bridgeObjectRelease();
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      unint64_t v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1) {
        sub_10001A574(v13 > 1, v14 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v14 + 1;
      uint64_t v15 = &_swiftEmptyArrayStorage[2 * v14];
      unsigned char v15[4] = 0;
      v15[5] = 0xE000000000000000;
      uint64_t v9 = v44;
      uint64_t v16 = sub_1000D3970(v4, v6, v8 & 1, v44);
      uint64_t v4 = v16;
      uint64_t v6 = v17;
      char v8 = v18 & 1;
      --v3;
    }
    while (v3);
    sub_100060FF0(v16, v17, v18 & 1);
    swift_bridgeObjectRelease();
    uint64_t v19 = a2;
  }
  else
  {
    uint64_t v19 = a2;
  }
  sub_10000566C(&qword_100709F58);
  sub_100007494((unint64_t *)&qword_100709F60, &qword_100709F58);
  uint64_t v20 = sub_1005E1A80();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  v47._countAndFlagsBits = v20;
  v47._object = v22;
  sub_1005E1E30(v47);
  swift_bridgeObjectRelease();
  v48._countAndFlagsBits = 0x6174736572202C7DLL;
  v48._object = (void *)0xED00007B203A7472;
  sub_1005E1E30(v48);
  int64_t v23 = *(void *)(v19 + 16);
  if (v23)
  {
    swift_bridgeObjectRetain();
    sub_10001A574(0, v23, 0);
    uint64_t v24 = sub_1000D38CC(v19);
    uint64_t v26 = v25;
    char v28 = v27 & 1;
    uint64_t v45 = v19 + 56;
    do
    {
      if (v24 < 0 || v24 >= 1 << *(unsigned char *)(v19 + 32)) {
        goto LABEL_58;
      }
      if (((*(void *)(v45 + (((unint64_t)v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
        goto LABEL_59;
      }
      if (*(_DWORD *)(v19 + 36) != v26) {
        goto LABEL_60;
      }
      unint64_t v29 = (void *)0xE600000000000000;
      v30._countAndFlagsBits = 0x636E79736552;
      switch(*(unsigned char *)(*(void *)(v19 + 48) + v24))
      {
        case 1:
          v30._countAndFlagsBits = 0x73654D6863746546;
          unint64_t v29 = (void *)0xED00007365676173;
          break;
        case 2:
          v30._countAndFlagsBits = 0xD000000000000015;
          unint64_t v29 = (void *)0x80000001005E4FE0;
          break;
        case 3:
          v30._countAndFlagsBits = 0xD00000000000001DLL;
          unint64_t v29 = (void *)0x80000001005E4FC0;
          break;
        case 4:
          v30._countAndFlagsBits = 0xD000000000000011;
          unint64_t v29 = (void *)0x80000001005E4FA0;
          break;
        case 5:
          v30._countAndFlagsBits = 0xD000000000000019;
          unint64_t v29 = (void *)0x80000001005E4F80;
          break;
        case 6:
          v30._countAndFlagsBits = 0x654D64616F6C7055;
          unint64_t v29 = (void *)0xEE00736567617373;
          break;
        case 7:
          v30._countAndFlagsBits = 0xD000000000000011;
          unint64_t v29 = (void *)0x80000001005E4F60;
          break;
        case 8:
          uint64_t v31 = "UpdateLocalFlags";
          goto LABEL_49;
        case 9:
          v30._countAndFlagsBits = 0xD000000000000016;
          unint64_t v29 = (void *)0x80000001005E5020;
          break;
        case 0xA:
          v30._countAndFlagsBits = 0xD000000000000016;
          unint64_t v29 = (void *)0x80000001005E5000;
          break;
        case 0xB:
          v30._countAndFlagsBits = 0xD000000000000010;
          unint64_t v29 = (void *)0x80000001005E4F20;
          break;
        case 0xC:
          uint64_t v31 = "FindPending1stDownload";
          goto LABEL_49;
        case 0xD:
          v30._countAndFlagsBits = 0xD00000000000001CLL;
          unint64_t v29 = (void *)0x80000001005E4F00;
          break;
        case 0xE:
          uint64_t v31 = "Duplicate values for key: '";
LABEL_49:
          unint64_t v29 = (void *)((unint64_t)v31 | 0x8000000000000000);
          v30._countAndFlagsBits = 0xD000000000000013;
          break;
        default:
          break;
      }
      v30._object = v29;
      sub_1005E1E30(v30);
      swift_bridgeObjectRelease();
      unint64_t v33 = _swiftEmptyArrayStorage[2];
      unint64_t v32 = _swiftEmptyArrayStorage[3];
      if (v33 >= v32 >> 1) {
        sub_10001A574(v32 > 1, v33 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v33 + 1;
      char v34 = &_swiftEmptyArrayStorage[2 * v33];
      v34[4] = 0;
      v34[5] = 0xE000000000000000;
      uint64_t v19 = a2;
      uint64_t v35 = sub_1000D3970(v24, v26, v28 & 1, a2);
      uint64_t v24 = v35;
      uint64_t v26 = v36;
      char v28 = v37 & 1;
      --v23;
    }
    while (v23);
    sub_100060FF0(v35, v36, v37 & 1);
    swift_bridgeObjectRelease();
  }
  uint64_t v38 = sub_1005E1A80();
  uint64_t v40 = v39;
  swift_bridgeObjectRelease();
  v49._countAndFlagsBits = v38;
  v49._object = v40;
  sub_1005E1E30(v49);
  swift_bridgeObjectRelease();
  v50._countAndFlagsBits = 125;
  v50._object = (void *)0xE100000000000000;
  sub_1005E1E30(v50);
  return v46[0];
}

uint64_t getEnumTagSinglePayload for SyncStep(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SyncStep(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *uint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10009DAC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncStep()
{
  return &type metadata for SyncStep;
}

uint64_t destroy for SyncSteps()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s13IMAP2Behavior9SyncStepsVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SyncSteps(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SyncSteps(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SyncSteps()
{
  return &type metadata for SyncSteps;
}

uint64_t sub_10009DC68()
{
  return sub_100007494(&qword_10070B768, &qword_10070B770);
}

unint64_t sub_10009DCA8()
{
  unint64_t result = qword_10070B778;
  if (!qword_10070B778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B778);
  }
  return result;
}

uint64_t sub_10009DD04(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_10009DD1C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *_s13UpdatedStatusV5ValueOMa()
{
  return &_s13UpdatedStatusV5ValueON;
}

uint64_t getEnumTagSinglePayload for UploadMessages.AppendLimit(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SectionSpecifier.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *_s13UpdatedStatusVMa()
{
  return &_s13UpdatedStatusVN;
}

BOOL sub_10009DDE0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  int v4 = *((unsigned __int8 *)a2 + 8);
  if (!*((unsigned char *)a1 + 8)) {
    return !*((unsigned char *)a2 + 8) && v2 == v3;
  }
  if (*((unsigned char *)a1 + 8) != 1) {
    return v4 == 2 && v3 == 0;
  }
  return v4 == 1 && v2 == v3;
}

BOOL sub_10009DE34(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  int v3 = *((unsigned __int8 *)a2 + 8);
  if (!*(unsigned char *)(a1 + 8))
  {
    if (*((unsigned char *)a2 + 8)) {
      return 0;
    }
    return *(void *)a1 == v2;
  }
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    if (v3 != 1) {
      return 0;
    }
    return *(void *)a1 == v2;
  }
  return v3 == 2 && v2 == 0;
}

void *sub_10009DE88(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_10001A874(0, v2, 0);
    unint64_t result = _swiftEmptyArrayStorage;
    int v4 = (int *)(a1 + 32);
    do
    {
      int v6 = *v4++;
      int v5 = v6;
      uint64_t v9 = result;
      unint64_t v8 = result[2];
      unint64_t v7 = result[3];
      if (v8 >= v7 >> 1)
      {
        sub_10001A874(v7 > 1, v8 + 1, 1);
        unint64_t result = v9;
      }
      result[2] = v8 + 1;
      *((unsigned char *)result + v8 + 32) = (v5 & 0x40000000) != 0;
      --v2;
    }
    while (v2);
  }
  return result;
}

int64_t sub_10009DF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = a4;
  int64_t result = sub_1000A3BB0(a4, *v4, v4[1]);
  uint64_t v11 = v10;
  if ((v12 & 1) == 0)
  {
    unint64_t v13 = result;
    if (a3 == 1)
    {
      sub_1000A4584(result, v10);
      sub_1000A47A8(v13, (uint64_t)v23);
      return swift_bridgeObjectRelease();
    }
    uint64_t v21 = v4[2];
    swift_bridgeObjectRetain();
    int64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      int64_t result = sub_1000A4BC0(v21);
      uint64_t v21 = result;
    }
    if ((v13 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v13 < *(void *)(v21 + 16))
    {
      unint64_t v22 = v21 + 24 * v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v22 + 32) = a1;
      *(unsigned char *)(v22 + 40) = a2;
      *(void *)(v22 + 48) = a3;
      sub_1000A9E8C(a1, a2, a3);
      int64_t result = sub_1000A9E8C(a1, a2, a3);
      v4[2] = v21;
      return result;
    }
    __break(1u);
    return result;
  }
  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1000A3E5C(v5, v11, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001A5B4);
    uint64_t v16 = v4[2];
    unint64_t v14 = v4 + 2;
    uint64_t v15 = v16;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v14 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10001A594(0, *(void *)(v15 + 16) + 1, 1);
      uint64_t v15 = *v14;
    }
    unint64_t v19 = *(void *)(v15 + 16);
    unint64_t v18 = *(void *)(v15 + 24);
    if (v19 >= v18 >> 1)
    {
      sub_10001A594(v18 > 1, v19 + 1, 1);
      uint64_t v15 = *v14;
    }
    *(void *)(v15 + 16) = v19 + 1;
    unint64_t v20 = v15 + 24 * v19;
    *(void *)(v20 + 32) = a1;
    *(unsigned char *)(v20 + 40) = a2;
    *(void *)(v20 + 48) = a3;
    sub_1000A9E8C(a1, a2, a3);
    int64_t result = sub_1000A9E8C(a1, a2, a3);
    *unint64_t v14 = v15;
  }
  return result;
}

uint64_t sub_10009E138(uint64_t a1, uint64_t a2, unsigned int a3)
{
  sub_10001FDF0(a1, (uint64_t)v61, &qword_10070A6C8);
  sub_10001FDF0((uint64_t)v61, (uint64_t)v63, &qword_10070A6C8);
  uint64_t v7 = v3[1];
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(void *)(v7 + 16);
  if (!*v3)
  {
    uint64_t v10 = sub_1000CE0E8(a2, a3, v8, v9);
    unint64_t v12 = 0;
    if ((v16 & 1) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    sub_10001FDF0(a1, (uint64_t)v62, &qword_10070A6C8);
    if (sub_1000571F8(v62) == 1) {
      return swift_bridgeObjectRelease();
    }
    sub_10001FDF0((uint64_t)v63, (uint64_t)&v49, &qword_10070A6C8);
    sub_100007780((uint64_t)&v49);
    sub_1000A3CE4(a2, a3);
    uint64_t v37 = v3[2];
    v3 += 2;
    uint64_t v36 = v37;
    sub_10001FDF0((uint64_t)v63, (uint64_t)v60, &qword_10070A6C8);
    sub_100007780((uint64_t)v60);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *int v3 = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10001A4F4(0, *(void *)(v36 + 16) + 1, 1);
      uint64_t v36 = *v3;
    }
    unint64_t v12 = *(void *)(v36 + 16);
    unint64_t v18 = *(void *)(v36 + 24);
    unint64_t v14 = v12 + 1;
    if (v12 < v18 >> 1) {
      goto LABEL_16;
    }
    goto LABEL_20;
  }
  uint64_t v10 = sub_1000CE1DC(a2, a3, v8, v9, (void *)(*v3 + 16));
  unint64_t v12 = v11;
  if (v13) {
    goto LABEL_6;
  }
LABEL_3:
  unint64_t v14 = v10;
  sub_10001FDF0(a1, (uint64_t)v62, &qword_10070A6C8);
  if (sub_1000571F8(v62) == 1)
  {
    sub_1000A4434(v14, v12);
    swift_bridgeObjectRelease();
    sub_1000A496C(v14, &v49);
    swift_bridgeObjectRelease();
    v60[8] = v57;
    v60[9] = v58;
    v60[10] = v59;
    v60[4] = v53;
    v60[5] = v54;
    v60[6] = v55;
    v60[7] = v56;
    v60[0] = v49;
    v60[1] = v50;
    v60[2] = v51;
    v60[3] = v52;
    return sub_100007820((uint64_t)v60);
  }
  uint64_t v17 = v3[2];
  sub_10001FDF0((uint64_t)v63, (uint64_t)v60, &qword_10070A6C8);
  sub_100007780((uint64_t)v60);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v17 = sub_1000A4C78(v17);
  }
  sub_10001FDF0((uint64_t)v63, (uint64_t)v48, &qword_10070A6C8);
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v18 = *(void *)(v17 + 16);
    if (v14 < v18)
    {
      unint64_t v19 = (_OWORD *)(v17 + 176 * v14);
      long long v20 = v19[2];
      long long v21 = v19[4];
      long long v50 = v19[3];
      long long v51 = v21;
      long long v49 = v20;
      long long v22 = v19[5];
      long long v23 = v19[6];
      long long v24 = v19[8];
      long long v54 = v19[7];
      long long v55 = v24;
      long long v52 = v22;
      long long v53 = v23;
      long long v25 = v19[9];
      long long v26 = v19[10];
      long long v27 = v19[12];
      long long v58 = v19[11];
      long long v59 = v27;
      long long v56 = v25;
      long long v57 = v26;
      sub_100007780((uint64_t)v48);
      sub_100007820((uint64_t)&v49);
      long long v29 = v48[1];
      long long v28 = v48[2];
      v19[2] = v48[0];
      v19[3] = v29;
      v19[4] = v28;
      long long v30 = v48[6];
      long long v32 = v48[3];
      long long v31 = v48[4];
      v19[7] = v48[5];
      v19[8] = v30;
      v19[5] = v32;
      v19[6] = v31;
      long long v33 = v48[10];
      long long v35 = v48[7];
      long long v34 = v48[8];
      v19[11] = v48[9];
      v19[12] = v33;
      v19[9] = v35;
      v19[10] = v34;
      swift_bridgeObjectRelease();
      sub_1000A9694(a1);
      uint64_t result = sub_1000A9694(a1);
      v3[2] = v17;
      return result;
    }
  }
  __break(1u);
LABEL_20:
  sub_10001A4F4(v18 > 1, v14, 1);
  uint64_t v36 = *v3;
LABEL_16:
  *(void *)(v36 + 16) = v14;
  BOOL v39 = (_OWORD *)(v36 + 176 * v12);
  long long v40 = v49;
  long long v41 = v51;
  v39[3] = v50;
  v39[4] = v41;
  v39[2] = v40;
  long long v42 = v52;
  long long v43 = v53;
  long long v44 = v55;
  v39[7] = v54;
  v39[8] = v44;
  v39[5] = v42;
  v39[6] = v43;
  long long v45 = v56;
  long long v46 = v57;
  long long v47 = v59;
  v39[11] = v58;
  v39[12] = v47;
  v39[9] = v45;
  v39[10] = v46;
  swift_bridgeObjectRelease();
  sub_1000A9694(a1);
  uint64_t result = sub_1000A9694(a1);
  *int v3 = v36;
  return result;
}

unint64_t sub_10009E48C(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = a4 + 32;
  uint64_t v8 = *(void *)(a4 + 16);
  if (!a3)
  {
    unint64_t result = sub_1000CE0E8(a1, a2, v7, v8);
    if ((v11 & 1) == 0) {
      goto LABEL_3;
    }
    return 2;
  }
  unint64_t result = sub_1000CE1DC(a1, a2, v7, v8, (void *)(a3 + 16));
  if (v10) {
    return 2;
  }
LABEL_3:
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(a5 + 16))
  {
    return *(unsigned __int8 *)(a5 + result + 32);
  }
  __break(1u);
  return result;
}

BOOL sub_10009E4FC(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return sub_1000A6EC0(*a1, *a2);
}

BOOL sub_10009E508(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  return (sub_10007E0F8(*a2, a2[1], *a1, a1[1]) & 1) != 0 && (sub_10007DFC8(v2, v3) & 1) != 0;
}

uint64_t sub_10009E55C()
{
  uint64_t v1 = v0;
  long long v21 = v0[12];
  *(_OWORD *)long long v22 = v0[13];
  *(_OWORD *)&v22[16] = v0[14];
  long long v17 = v0[8];
  long long v18 = v0[9];
  long long v19 = v0[10];
  long long v20 = v0[11];
  long long v14 = v0[4];
  long long v15 = v0[5];
  long long v16 = v0[7];
  v25[2] = v0[6];
  _OWORD v25[3] = v16;
  v25[4] = v17;
  v25[5] = v18;
  v25[0] = v14;
  v25[1] = v15;
  sub_10001FDF0((uint64_t)v25, (uint64_t)v26, &qword_100709F30);
  sub_10001FDF0((uint64_t)v26, (uint64_t)v27, &qword_100709F30);
  if (v27[0] == 2) {
    uint64_t v2 = 3;
  }
  else {
    uint64_t v2 = v27[9] + 1;
  }
  uint64_t v3 = sub_10000C8D8();
  if ((_BYTE)v3)
  {
    char v4 = 0;
    if (v3 == 1) {
      uint64_t v2 = 1;
    }
  }
  else
  {
    uint64_t v2 = 1;
    char v4 = 1;
  }
  uint64_t v5 = sub_10009E6CC(v3, v2, v4);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  unint64_t v12 = (char *)v1 + 296;
  uint64_t v10 = *((void *)v1 + 37);
  char v11 = (void *)*((void *)v12 + 1);
  v23[2] = v21;
  v24[0] = *(_OWORD *)v22;
  *(_OWORD *)((char *)v24 + 12) = *(_OWORD *)&v22[12];
  v23[0] = v19;
  v23[1] = v20;
  sub_1000A9398((uint64_t)v23);
  sub_1000A8CAC(v5, v7, v9, v10, v11, v23);
  sub_1000A93F4((uint64_t)v23);
  return v5;
}

uint64_t sub_10009E6CC(uint64_t a1, uint64_t a2, char a3)
{
  long long v4 = v3[13];
  long long v47 = v3[12];
  *(_OWORD *)Swift::String v48 = v4;
  long long v5 = v3[15];
  *(_OWORD *)&v48[16] = v3[14];
  long long v49 = v5;
  long long v6 = v3[9];
  long long v43 = v3[8];
  long long v44 = v6;
  long long v7 = v3[11];
  long long v45 = v3[10];
  long long v46 = v7;
  long long v8 = v3[5];
  long long v39 = v3[4];
  long long v40 = v8;
  long long v9 = v3[7];
  long long v41 = v3[6];
  long long v42 = v9;
  long long v10 = v3[1];
  long long v35 = *v3;
  long long v36 = v10;
  long long v11 = v3[3];
  long long v37 = v3[2];
  long long v38 = v11;
  long long v50 = v45;
  long long v51 = v46;
  long long v52 = v47;
  v53[0] = *(_OWORD *)v48;
  *(_OWORD *)((char *)v53 + 12) = *(_OWORD *)&v48[12];
  unint64_t v12 = sub_10008C078();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1000D8938();
  unint64_t v14 = sub_1000D8D74(v36, BYTE1(v36) & 1, *((uint64_t *)&v36 + 1), v37, *((uint64_t *)&v37 + 1), SBYTE10(v35), v38, v13);
  uint64_t v15 = sub_100058C7C(v45, *((uint64_t *)&v45 + 1), v46, SBYTE8(v46), v42, (uint64_t)v12, BYTE4(v14) & 1, *((uint64_t *)&v47 + 1));
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  long long v31 = v3;
  uint64_t v32 = v15;
  uint64_t v33 = v17;
  uint64_t v34 = v19;
  swift_retain();
  swift_retain();
  uint64_t v20 = swift_retain();
  long long v21 = sub_10009DE88(v20);
  swift_release();
  long long v29 = v3;
  swift_bridgeObjectRetain();
  unint64_t v22 = sub_10003F748();
  long long v23 = sub_10003E9F0();
  uint64_t v24 = sub_1000A7B74(a2, a3, (uint64_t (*)(uint64_t))sub_1000A949C, (uint64_t)v30, v15, v17, (uint64_t)v21, (uint64_t (*)(void))sub_1000A94C8, (uint64_t)v28, *((uint64_t *)&v49 + 1), v22, (uint64_t)v23);
  swift_release();
  swift_release();
  swift_release();
  return v24;
}

void *sub_10009E8FC(long long *a1)
{
  long long v1 = a1[13];
  long long v40 = a1[12];
  long long v41 = v1;
  long long v2 = a1[15];
  long long v42 = a1[14];
  long long v43 = v2;
  long long v3 = a1[9];
  long long v36 = a1[8];
  long long v37 = v3;
  long long v4 = a1[11];
  long long v38 = a1[10];
  long long v39 = v4;
  long long v5 = a1[5];
  long long v32 = a1[4];
  long long v33 = v5;
  long long v6 = a1[7];
  long long v34 = a1[6];
  long long v35 = v6;
  long long v7 = a1[1];
  long long v28 = *a1;
  long long v29 = v7;
  long long v8 = a1[3];
  long long v30 = a1[2];
  long long v31 = v8;
  if ((BYTE8(v39) & 1) == 0) {
    return &_swiftEmptySetSingleton;
  }
  uint64_t v9 = *((void *)&v40 + 1);
  long long v46 = v34;
  v47[0] = v35;
  v47[1] = v36;
  v47[2] = v37;
  long long v44 = v32;
  long long v45 = v33;
  sub_10001FDF0((uint64_t)v47, (uint64_t)v48, &qword_10070A900);
  sub_10001FDF0((uint64_t)v48, (uint64_t)&v58, &qword_10070A900);
  if (!v58) {
    return &_swiftEmptySetSingleton;
  }
  char v27 = BYTE9(v28);
  uint64_t v25 = v38;
  uint64_t v26 = v58;
  sub_10005636C(v38, *((uint64_t *)&v38 + 1), v39, 1);
  sub_10002292C((uint64_t)v48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1000D8938();
  unint64_t v24 = sub_1000D8D74(v29, BYTE1(v29) & 1, *((uint64_t *)&v29 + 1), v30, *((uint64_t *)&v30 + 1), SBYTE10(v28), v31, v10);
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1000D8938();
  unint64_t v12 = sub_1000D8D74(v29, BYTE1(v29) & 1, *((uint64_t *)&v29 + 1), v30, *((uint64_t *)&v30 + 1), SBYTE10(v28), v31, v11) >> 16;
  uint64_t v13 = (_OWORD *)swift_allocObject();
  long long v14 = v41;
  v13[13] = v40;
  v13[14] = v14;
  long long v15 = v43;
  v13[15] = v42;
  v13[16] = v15;
  long long v16 = v37;
  v13[9] = v36;
  v13[10] = v16;
  long long v17 = v39;
  v13[11] = v38;
  v13[12] = v17;
  long long v18 = v33;
  v13[5] = v32;
  v13[6] = v18;
  long long v19 = v35;
  v13[7] = v34;
  v13[8] = v19;
  long long v20 = v29;
  v13[1] = v28;
  v13[2] = v20;
  long long v21 = v31;
  v13[3] = v30;
  v13[4] = v21;
  uint64_t v49 = v25;
  uint64_t v50 = v26;
  char v51 = v27;
  uint64_t v52 = v9;
  char v53 = BYTE4(v24) & 1;
  char v54 = v12;
  long long v55 = sub_100063F68;
  long long v56 = v13;
  uint64_t v57 = 7;
  sub_100063F70((uint64_t)&v28);
  uint64_t v22 = sub_100061F38();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (void *)v22;
}

uint64_t sub_10009EB78()
{
  sub_1000A6FC4(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t _s30MailboxesToSelectLoggingHelperCMa()
{
  return self;
}

uint64_t destroy for SearchModificationSequence()
{
  swift_release();
  swift_release();
  return swift_release();
}

void *_s17MailboxesToSelectVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *_s17MailboxesToSelectVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s17MailboxesToSelectVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConnectionCommandIDSet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConnectionCommandIDSet(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s17MailboxesToSelectVMa()
{
  return &_s17MailboxesToSelectVN;
}

Swift::Int sub_10009EDD0(unsigned __int8 a1)
{
  sub_1005E33F0();
  if ((a1 - 5) >= 6u)
  {
    sub_1005E3410(0);
    Swift::UInt v2 = a1;
  }
  else
  {
    Swift::UInt v2 = (a1 - 5) + 1;
  }
  sub_1005E3410(v2);
  return sub_1005E3470();
}

Swift::Int sub_10009EE40()
{
  return sub_10009EDD0(*v0);
}

void sub_10009EE48()
{
  Swift::UInt v1 = *v0;
  if ((v1 - 5) >= 6u) {
    sub_1005E3410(0);
  }
  else {
    Swift::UInt v1 = (v1 - 5) + 1;
  }
  sub_1005E3410(v1);
}

Swift::Int sub_10009EE9C()
{
  Swift::UInt v1 = *v0;
  sub_1005E33F0();
  if ((v1 - 5) >= 6u) {
    sub_1005E3410(0);
  }
  else {
    Swift::UInt v1 = (v1 - 5) + 1;
  }
  sub_1005E3410(v1);
  return sub_1005E3470();
}

BOOL sub_10009EF08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000A6DF4(*a1, *a2);
}

uint64_t sub_10009EF14()
{
  switch(*v0)
  {
    case 5:
      uint64_t result = 0x7261655372657375;
      break;
    case 6:
      uint64_t result = 0x656C6269736976;
      break;
    case 7:
      uint64_t result = 1802723700;
      break;
    case 8:
      uint64_t result = 1668184435;
      break;
    case 9:
      uint64_t result = 0x6E7953736465656ELL;
      break;
    case 0xA:
      uint64_t result = 0x797469726F697270;
      break;
    default:
      uint64_t result = 0x6E776F4472657375;
      break;
  }
  return result;
}

uint64_t sub_10009F004(unsigned __int16 a1)
{
  switch(a1 >> 14)
  {
    case 1:
      sub_1005E2C80(23);
      v1._object = (void *)0x80000001005E5100;
      v1._countAndFlagsBits = 0xD000000000000014;
      goto LABEL_7;
    case 2:
      v1._countAndFlagsBits = 0x6154657669746361;
      v1._object = (void *)0xEB00000000286B73;
LABEL_7:
      sub_1005E1E30(v1);
      sub_1005E2E90();
      goto LABEL_8;
    case 3:
      int v2 = a1;
      uint64_t result = 0x6973695672657375;
      switch(v2)
      {
        case 49153:
          uint64_t result = 0x7953657669746361;
          break;
        case 49154:
          uint64_t result = 0x6E7953736465656ELL;
          break;
        case 49155:
          uint64_t result = 0x797469726F697270;
          break;
        default:
          return result;
      }
      return result;
    default:
      sub_1005E2C80(29);
      v4._countAndFlagsBits = 0xD000000000000016;
      v4._object = (void *)0x80000001005E5120;
      sub_1005E1E30(v4);
      sub_1005E2E90();
      v5._countAndFlagsBits = 8236;
      v5._object = (void *)0xE200000000000000;
      sub_1005E1E30(v5);
      v6._countAndFlagsBits = sub_1005E1CC0();
      sub_1005E1E30(v6);
      swift_bridgeObjectRelease();
LABEL_8:
      v7._countAndFlagsBits = 41;
      v7._object = (void *)0xE100000000000000;
      sub_1005E1E30(v7);
      return 0;
  }
}

uint64_t sub_10009F264()
{
  return sub_10009F004(*v0);
}

uint64_t sub_10009F26C()
{
  uint64_t result = 1668184435;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64616F6C6E776F64;
      break;
    case 2:
      uint64_t result = 0x686372616573;
      break;
    case 3:
      uint64_t result = 45;
      break;
    default:
      return result;
  }
  return result;
}

void sub_10009F2F0(void *a1@<X8>)
{
  *a1 = &off_1006BA6C8;
}

uint64_t sub_10009F300()
{
  if (*v0) {
    return 0x69736956746F6E2ELL;
  }
  else {
    return 0x656C62697369762ELL;
  }
}

uint64_t sub_10009F344(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = (uint64_t *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v4 = v2;
  }
  else
  {
    uint64_t v4 = a2();
    swift_beginAccess();
    *uint64_t v3 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v4;
}

Swift::Int sub_10009F3CC(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_1000A4CA0(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_1000A5D0C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_10009F438(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070A630);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  long long v14 = a4 + 32;
  size_t v15 = 16 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10009F5A0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100709F70);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 176);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[176 * v8]) {
      memmove(v12, v13, 176 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[176 * v8] || v12 >= &v13[176 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10009F728(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2E8C(a1, a2, a3, a4, &qword_10070A0C0);
}

uint64_t sub_10009F734(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070A0C8);
}

uint64_t sub_10009F740(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070B918);
}

uint64_t sub_10009F74C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070A088);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10009F8B8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B8D0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10009FA40(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070A190);
}

uint64_t sub_10009FA4C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B8C8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10009FBB8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B960);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10009FD18(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100709FF8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10009FE78(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B858);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10009FFD8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2E8C(a1, a2, a3, a4, &qword_100709FB0);
}

uint64_t sub_10009FFE4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2E8C(a1, a2, a3, a4, &qword_10070B878);
}

uint64_t sub_10009FFF0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2E8C(a1, a2, a3, a4, &qword_10070B870);
}

uint64_t sub_10009FFFC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B868);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  long long v14 = a4 + 32;
  size_t v15 = 16 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A0158(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070A148);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A02C4(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000A31AC(a1, a2, a3, a4, &qword_10070A008, &qword_100709E30);
}

uint64_t sub_1000A02D8(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000A28A0(a1, a2, a3, a4, &qword_10070A138, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
}

uint64_t sub_1000A02F8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A0F6C(a1, a2, a3, a4, &qword_10070B8C0);
}

uint64_t sub_1000A030C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B8A0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 192);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 192 * v8) {
      memmove(v10 + 4, a4 + 4, 192 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 192 * v8 || v12 >= v13 + 192 * v8)
  {
    sub_10000566C(&qword_10070B8A8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A04B4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B8B0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 112);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 4;
  unint64_t v13 = a4 + 4;
  size_t v14 = 14 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_10000566C(&qword_10070B8B8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A0654(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070B890);
}

uint64_t sub_1000A0660(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070B848);
}

uint64_t sub_1000A066C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070B850);
}

uint64_t sub_1000A0678(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B948);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 4;
  size_t v14 = a4 + 4;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v10 + 4, a4 + 4, v8 << 6);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    sub_10000566C(&qword_10070B950);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A0804(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A09B4(a1, a2, a3, a4, &qword_10070B958);
}

uint64_t sub_1000A0818(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B880);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 4;
  size_t v14 = a4 + 4;
  size_t v15 = 4 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v10 + 4, a4 + 4, v15 * 8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    sub_10000566C(&qword_10070B888);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A09A0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A09B4(a1, a2, a3, a4, &qword_10070A0F0);
}

uint64_t sub_1000A09B4(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_10000566C(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    int64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  size_t v14 = v11 + 32;
  size_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9]) {
      memmove(v14, v15, 16 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A0B24(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B828);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8]) {
      memmove(v13, v14, 2 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[2 * v8] || v13 >= &v14[2 * v8])
  {
    memcpy(v13, v14, 2 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A0C80(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B840);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A0DD0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B820);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 4;
  size_t v14 = a4 + 4;
  size_t v15 = 2 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v10 + 4, a4 + 4, v15 * 8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    sub_10000566C(&qword_10070B830);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A0F58(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A0F6C(a1, a2, a3, a4, &qword_10070B8F8);
}

uint64_t sub_1000A0F6C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_10000566C(a5);
    int64_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 96);
  }
  else
  {
    int64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v11 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = 96 * v9;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A10EC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B900);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_10000566C(&qword_10070B908);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A1294(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B910);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A141C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070A078);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A157C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070A060);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_10000566C(&qword_10070A068);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A1708(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B8D8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A1874(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B8F0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 48 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A19F0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B8E0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A1B5C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B8E8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A1CC8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B898);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A1E50(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100709FA0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A1FB0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B860);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A2110(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000A28A0(a1, a2, a3, a4, &qword_10070A1A8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
}

uint64_t sub_1000A2130(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000A28A0(a1, a2, a3, a4, &qword_10070BA90, type metadata accessor for FetchSearchResultMessages.Requests.Search);
}

uint64_t sub_1000A2150(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070B968);
}

uint64_t sub_1000A215C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A3040(a1, a2, a3, a4, &qword_10070B9D8);
}

uint64_t sub_1000A2168(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070B980);
}

uint64_t sub_1000A2174(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_10000566C(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 29;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 2);
  }
  else
  {
    int64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  size_t v14 = v11 + 32;
  size_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[4 * v9]) {
      memmove(v14, v15, 4 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[4 * v9] || v14 >= &v15[4 * v9])
  {
    memcpy(v14, v15, 4 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A22D0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A3040(a1, a2, a3, a4, &qword_10070B9D0);
}

uint64_t sub_1000A22DC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000A269C(a1, a2, a3, a4, &qword_10070B988, &qword_10070B990);
}

uint64_t sub_1000A22F0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B9B8);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_10000566C(&qword_10070B9C0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A2498(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070B9C8);
}

uint64_t sub_1000A24A4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070B9E0);
}

uint64_t sub_1000A24B0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000A31AC(a1, a2, a3, a4, &qword_10070BAD0, &qword_10070A640);
}

uint64_t sub_1000A24C4(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000A28A0(a1, a2, a3, a4, &qword_10070A158, type metadata accessor for DownloadTask.CommandID);
}

uint64_t sub_1000A24E4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070A178);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 40 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A265C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070BA00);
}

uint64_t sub_1000A2668(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070BA70);
}

uint64_t sub_1000A2674(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000A269C(a1, a2, a3, a4, &qword_10070BAD8, &qword_10070BAE0);
}

uint64_t sub_1000A2688(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000A269C(a1, a2, a3, a4, &qword_10070BAE8, &qword_10070BAF0);
}

uint64_t sub_1000A269C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_10000566C(a5);
    unint64_t v13 = (void *)swift_allocObject();
    size_t v14 = j__malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
  }
  else
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 24 * v11) {
      memmove(v13 + 4, a4 + 4, 24 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 24 * v11 || v15 >= v16 + 24 * v11)
  {
    sub_10000566C(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A2848(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000A28A0(a1, a2, a3, a4, &qword_10070BA40, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
}

uint64_t sub_1000A2868(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A3040(a1, a2, a3, a4, &qword_10070BA38);
}

uint64_t sub_1000A2874(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070BA48);
}

uint64_t sub_1000A2880(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000A28A0(a1, a2, a3, a4, &qword_10070A120, type metadata accessor for FindMissingMessages.CommandID);
}

uint64_t sub_1000A28A0(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000566C(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  long long v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  unint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A2AE8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A3040(a1, a2, a3, a4, &qword_10070BAF8);
}

uint64_t sub_1000A2AF4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070BA20);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A2C54(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070BA28);
}

uint64_t sub_1000A2C60(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A3040(a1, a2, a3, a4, &qword_10070BA80);
}

uint64_t sub_1000A2C6C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070BAA0);
}

uint64_t sub_1000A2C78(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000A31AC(a1, a2, a3, a4, &qword_10070BAC8, &qword_10070BAC0);
}

uint64_t sub_1000A2C8C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070BA08);
}

uint64_t sub_1000A2C98(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070B9E8);
}

uint64_t sub_1000A2CA4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2E8C(a1, a2, a3, a4, &qword_10070BA10);
}

uint64_t sub_1000A2CB0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A3040(a1, a2, a3, a4, &qword_10070BA30);
}

uint64_t sub_1000A2CBC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070BA50);
}

uint64_t sub_1000A2CC8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2E8C(a1, a2, a3, a4, &qword_10070B9F0);
}

uint64_t sub_1000A2CD4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070BA60);
}

uint64_t sub_1000A2CE0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070BB00);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 4;
  uint64_t v13 = a4 + 4;
  size_t v14 = 7 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_10000566C(&qword_10070BB08);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A2E80(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2E8C(a1, a2, a3, a4, &qword_10070BA18);
}

uint64_t sub_1000A2E8C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_10000566C(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    size_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v11 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = 24 * v9;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A2FF8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070BA58);
}

uint64_t sub_1000A3004(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A3040(a1, a2, a3, a4, &qword_10070BA78);
}

uint64_t sub_1000A3010(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070BA68);
}

uint64_t sub_1000A301C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A389C(a1, a2, a3, a4, &qword_10070BA98);
}

uint64_t sub_1000A3028(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2174(a1, a2, a3, a4, &qword_10070BAA8);
}

uint64_t sub_1000A3034(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A3040(a1, a2, a3, a4, &qword_10070BA88);
}

uint64_t sub_1000A3040(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_10000566C(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    size_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  size_t v14 = v11 + 32;
  size_t v15 = a4 + 32;
  size_t v16 = 8 * v9;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[v16]) {
      memmove(v14, v15, v16);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    memcpy(v14, v15, v16);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A3198(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000A31AC(a1, a2, a3, a4, &qword_10070B9F8, &qword_10070A638);
}

uint64_t sub_1000A31AC(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    size_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000566C(a5);
  uint64_t v13 = *(void *)(sub_10000566C(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  size_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_10000566C(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  long long v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  unint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A33EC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070BAB0);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A354C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B9A8);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 4;
  uint64_t v13 = a4 + 4;
  size_t v14 = 3 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_10000566C(&qword_10070B9B0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A36E8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B998);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_10000566C(&qword_10070B9A0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A3890(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A389C(a1, a2, a3, a4, &qword_10070BAB8);
}

uint64_t sub_1000A389C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_10000566C(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 12);
  }
  else
  {
    size_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v11 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = 12 * v9;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A3A08(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B970);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_10000566C(&qword_10070B978);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A3BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::String v5 = (_DWORD *)(a3 + 32);
  uint64_t v6 = *(void *)(a3 + 16);
  if (a2) {
    return sub_1000CE1D8(a1, v5, v6, a2 + 16, a2 + 32);
  }
  if (!v6) {
    return 0;
  }
  if (*v5 == a1) {
    return 0;
  }
  if (v6 == 1) {
    return 0;
  }
  if (*(_DWORD *)(a3 + 36) == a1) {
    return 1;
  }
  if (v6 == 2) {
    return 0;
  }
  if (*(_DWORD *)(a3 + 40) == a1) {
    return 2;
  }
  if (v6 == 3) {
    return 0;
  }
  if (*(_DWORD *)(a3 + 44) == a1) {
    return 3;
  }
  uint64_t v8 = 0;
  uint64_t v9 = a3 + 48;
  while (v6 - 4 != v8)
  {
    int v10 = *(_DWORD *)(v9 + 4 * v8++);
    if (v10 == a1) {
      return v8 + 3;
    }
  }
  return 0;
}

uint64_t sub_1000A3CCC(int a1, uint64_t a2)
{
  return sub_1000A3E5C(a1, a2, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001A534);
}

uint64_t sub_1000A3CE4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v8 = v2[1];
  uint64_t v6 = v2 + 1;
  uint64_t v7 = v8;
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v6 = v8;
  if ((result & 1) == 0)
  {
    uint64_t result = sub_10001A4D4(0, *(void *)(v7 + 16) + 1, 1);
    uint64_t v7 = *v6;
  }
  unint64_t v11 = *(void *)(v7 + 16);
  unint64_t v10 = *(void *)(v7 + 24);
  if (v11 >= v10 >> 1)
  {
    uint64_t result = sub_10001A4D4(v10 > 1, v11 + 1, 1);
    uint64_t v7 = *v6;
  }
  *(void *)(v7 + 16) = v11 + 1;
  unint64_t v12 = v7 + 16 * v11;
  *(void *)(v12 + 32) = a1;
  *(_DWORD *)(v12 + 40) = a2;
  v3[1] = v7;
  if (*v3)
  {
    swift_beginAccess();
    if (sub_1005E0BA0() > (uint64_t)v11)
    {
      uint64_t result = swift_isUniquelyReferenced_native();
      uint64_t v13 = *v3;
      if (!result)
      {
        if (!v13)
        {
LABEL_16:
          __break(1u);
          return result;
        }
        uint64_t v13 = sub_1005E0BC0();
        uint64_t result = swift_release();
        *uint64_t v3 = v13;
      }
      if (v13) {
        return sub_1005E0B60();
      }
      __break(1u);
      goto LABEL_16;
    }
  }
  else if (v11 < 0xF)
  {
    return result;
  }
  return sub_1000A3FD4();
}

uint64_t sub_1000A3E5C(int a1, uint64_t a2, uint64_t (*a3)(BOOL, uint64_t, uint64_t))
{
  Swift::String v5 = v3;
  uint64_t v9 = v3[1];
  uint64_t v7 = v3 + 1;
  uint64_t v8 = v9;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v7 = v9;
  if ((result & 1) == 0)
  {
    uint64_t result = a3(0, *(void *)(v8 + 16) + 1, 1);
    uint64_t v8 = *v7;
  }
  unint64_t v12 = *(void *)(v8 + 16);
  unint64_t v11 = *(void *)(v8 + 24);
  if (v12 >= v11 >> 1)
  {
    uint64_t result = a3(v11 > 1, v12 + 1, 1);
    uint64_t v8 = *v7;
  }
  *(void *)(v8 + 16) = v12 + 1;
  *(_DWORD *)(v8 + 4 * v12 + 32) = a1;
  v5[1] = v8;
  if (*v5)
  {
    swift_beginAccess();
    if (sub_1005E0BA0() > (uint64_t)v12)
    {
      uint64_t result = swift_isUniquelyReferenced_native();
      uint64_t v13 = *v5;
      if (!result)
      {
        if (!v13)
        {
LABEL_16:
          __break(1u);
          return result;
        }
        uint64_t v13 = sub_1005E0BC0();
        uint64_t result = swift_release();
        *Swift::String v5 = v13;
      }
      if (v13) {
        return sub_1005E0B60();
      }
      __break(1u);
      goto LABEL_16;
    }
  }
  else if (v12 < 0xF)
  {
    return result;
  }
  return sub_1000A407C();
}

uint64_t sub_1000A3FD4()
{
  uint64_t v1 = *v0;
  Swift::Int v2 = v0[1];
  if (*v0)
  {
    swift_beginAccess();
    uint64_t v3 = *(void *)(v1 + 24) & 0x3FLL;
    unint64_t v4 = *(void *)(v2 + 16);
    if (v3) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v4 = *(void *)(v2 + 16);
  }
  if (v4 < 0x10)
  {
    uint64_t v5 = 0;
    goto LABEL_11;
  }
LABEL_7:
  uint64_t v6 = sub_1005E0BD0();
  if (v3 <= v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = v3;
  }
  uint64_t v5 = sub_1000A4124(v2, v7, 0, v3);
LABEL_11:
  uint64_t result = swift_release();
  uint64_t *v0 = v5;
  return result;
}

uint64_t sub_1000A407C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  if (*v0)
  {
    swift_beginAccess();
    uint64_t v3 = *(void *)(v1 + 24) & 0x3FLL;
    unint64_t v4 = *(void *)(v2 + 16);
    if (v3) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v4 = *(void *)(v2 + 16);
  }
  if (v4 < 0x10)
  {
    uint64_t v5 = 0;
    goto LABEL_11;
  }
LABEL_7:
  uint64_t v6 = sub_1005E0BD0();
  if (v3 <= v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = v3;
  }
  uint64_t v5 = sub_1000A41AC(v2, v7, 0, v3);
LABEL_11:
  uint64_t result = swift_release();
  uint64_t *v0 = v5;
  return result;
}

uint64_t sub_1000A4124(Swift::Int a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = sub_1005E0BD0();
  uint64_t v9 = 0;
  if (a3) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10 <= v8) {
    uint64_t v10 = v8;
  }
  if (v10 <= a4) {
    uint64_t v11 = a4;
  }
  else {
    uint64_t v11 = v10;
  }
  if (v11 >= 5)
  {
    uint64_t v9 = sub_1005E0BE0();
    sub_1000A4340(a1, (void *)(v9 + 16));
  }
  return v9;
}

uint64_t sub_1000A41AC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = sub_1005E0BD0();
  uint64_t v9 = 0;
  if (a3) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10 <= v8) {
    uint64_t v10 = v8;
  }
  if (v10 <= a4) {
    uint64_t v11 = a4;
  }
  else {
    uint64_t v11 = v10;
  }
  if (v11 >= 5)
  {
    uint64_t v9 = sub_1005E0BE0();
    sub_1000A4240(v9 + 16, v9 + 32, a1);
  }
  return v9;
}

Swift::Int sub_1000A4240(Swift::Int result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    unint64_t v4 = (void *)result;
    uint64_t v5 = 0;
    uint64_t v6 = a3 + 32;
    while (1)
    {
      Swift::UInt32 v7 = *(_DWORD *)(v6 + 4 * v5);
      sub_1005E33F0();
      sub_1005E3440(v7);
      uint64_t result = sub_1005E3470();
      if (__OFSUB__(1 << *v4, 1)) {
        break;
      }
      if (sub_1005E0B40())
      {
        while (1)
          sub_1005E0B90();
      }
      uint64_t result = sub_1005E0B80();
      if (++v5 == v3) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

Swift::Int sub_1000A4340(Swift::Int result, void *a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v4 = 0;
    Swift::Int v5 = result + 40;
    while (1)
    {
      uint64_t v6 = *(unsigned int *)(v5 + 16 * v4);
      sub_1005E33F0();
      sub_1005E3410(v6 | (v6 << 32));
      uint64_t result = sub_1005E3470();
      if (__OFSUB__(1 << *a2, 1)) {
        break;
      }
      if (sub_1005E0B40())
      {
        while (1)
          sub_1005E0B90();
      }
      uint64_t result = sub_1005E0B80();
      if (++v4 == v2) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_1000A4434(int64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2[1] + 16);
  uint64_t v5 = *v2;
  if (!*v2)
  {
    if (v4) {
      return sub_1000A46C8(a1);
    }
    goto LABEL_15;
  }
  swift_beginAccess();
  if ((*(void *)(v5 + 16) & 0x3FLL) == (*(void *)(v5 + 24) & 0x3FLL))
  {
    if (!v4) {
      goto LABEL_15;
    }
  }
  else if (v4 <= sub_1005E0BB0())
  {
LABEL_15:
    uint64_t v10 = sub_1000A46C8(a1);
    sub_1000A3FD4();
    return v10;
  }
  unint64_t result = swift_isUniquelyReferenced_native();
  uint64_t v8 = *v2;
  if (!result)
  {
    if (!v8) {
      goto LABEL_20;
    }
    uint64_t v8 = sub_1005E0BC0();
    unint64_t result = swift_release();
    *uint64_t v2 = v8;
  }
  if (v8)
  {
    unint64_t result = sub_1000A4F10(a2, (void *)(v8 + 16), v8 + 32, (uint64_t)v2);
    uint64_t v9 = a1 + 1;
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else if (v9 >= a1)
    {
      sub_1000A50DC(a1, v9, v2[1], (void *)(v8 + 16));
      return sub_1000A46C8(a1);
    }
    __break(1u);
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

unint64_t sub_1000A4584(int64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2[1] + 16);
  uint64_t v5 = *v2;
  if (!*v2)
  {
    if (v4) {
      return sub_1000A489C(a1);
    }
    goto LABEL_15;
  }
  swift_beginAccess();
  if ((*(void *)(v5 + 16) & 0x3FLL) == (*(void *)(v5 + 24) & 0x3FLL))
  {
    if (!v4) {
      goto LABEL_15;
    }
  }
  else if (v4 <= sub_1005E0BB0())
  {
LABEL_15:
    uint64_t v10 = sub_1000A489C(a1);
    sub_1000A407C();
    return v10;
  }
  unint64_t result = swift_isUniquelyReferenced_native();
  uint64_t v8 = *v2;
  if (!result)
  {
    if (!v8) {
      goto LABEL_20;
    }
    uint64_t v8 = sub_1005E0BC0();
    unint64_t result = swift_release();
    *uint64_t v2 = v8;
  }
  if (v8)
  {
    unint64_t result = sub_1000A4D44(a2, (void *)(v8 + 16), v8 + 32, (uint64_t)v2);
    uint64_t v9 = a1 + 1;
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else if (v9 >= a1)
    {
      sub_1000A5510(a1, v9, v2[1], (void *)(v8 + 16));
      return sub_1000A489C(a1);
    }
    __break(1u);
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1000A46C8(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_1000A4B7C(v3);
  }
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = v3 + 16 * a1;
      uint64_t v8 = *(void *)(v7 + 32);
      memmove((void *)(v7 + 32), (const void *)(v7 + 48), 16 * v6);
      *(void *)(v3 + 16) = v5;
      *uint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A47A8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_1000A4BC0(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v5 + 24 * a1;
    uint64_t v10 = *(void *)(v8 + 32);
    uint64_t v9 = v8 + 32;
    char v11 = *(unsigned char *)(v9 + 8);
    uint64_t v12 = *(void *)(v9 + 16);
    *(void *)a2 = v10;
    *(unsigned char *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v12;
    uint64_t v13 = v6 - 1 - a1;
    if (v13 >= 0)
    {
      uint64_t result = (uint64_t)memmove((void *)v9, (const void *)(v9 + 24), 24 * v13);
      *(void *)(v5 + 16) = v7;
      *uint64_t v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A489C(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_1000A4B90(v3);
  }
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = v3 + 4 * a1;
      uint64_t v8 = *(unsigned int *)(v7 + 32);
      memmove((void *)(v7 + 32), (const void *)(v7 + 36), 4 * v6);
      *(void *)(v3 + 16) = v5;
      *uint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A496C@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_1000A4C78(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = (_OWORD *)(v5 + 176 * a1);
    long long v8 = v7[11];
    unint64_t v9 = v6 - 1;
    a2[8] = v7[10];
    a2[9] = v8;
    a2[10] = v7[12];
    long long v10 = v7[7];
    a2[4] = v7[6];
    a2[5] = v10;
    long long v11 = v7[9];
    a2[6] = v7[8];
    a2[7] = v11;
    long long v12 = v7[3];
    *a2 = v7[2];
    a2[1] = v12;
    long long v13 = v7[5];
    a2[2] = v7[4];
    a2[3] = v13;
    uint64_t v14 = v6 - 1 - a1;
    if (v14 >= 0)
    {
      uint64_t result = (uint64_t)memmove(v7 + 2, v7 + 13, 176 * v14);
      *(void *)(v5 + 16) = v9;
      *uint64_t v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A4A7C(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_1000A4C8C(v3);
  }
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = v3 + 2 * a1;
      uint64_t v8 = *(unsigned __int16 *)(v7 + 32);
      memmove((void *)(v7 + 32), (const void *)(v7 + 34), 2 * v6);
      *(void *)(v3 + 16) = v5;
      *uint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000A4B4C(uint64_t a1)
{
  return sub_1000A2174(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_10070B918);
}

uint64_t sub_1000A4B7C(uint64_t a1)
{
  return sub_10009F438(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1000A4B90(uint64_t a1)
{
  return sub_1000A2174(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_10070A190);
}

uint64_t sub_1000A4BC0(uint64_t a1)
{
  return sub_10009F8B8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1000A4BD4(uint64_t a1)
{
  return sub_10009FD18(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1000A4BE8(uint64_t a1)
{
  return sub_1000A2E8C(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_10070B878);
}

uint64_t sub_1000A4C18(uint64_t a1)
{
  return sub_1000A2E8C(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_100709FB0);
}

uint64_t sub_1000A4C48(uint64_t a1)
{
  return sub_1000A2E8C(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_10070A208);
}

uint64_t sub_1000A4C78(uint64_t a1)
{
  return sub_10009F5A0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1000A4C8C(uint64_t a1)
{
  return sub_1000A0B24(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1000A4CA0(void *a1)
{
  return sub_1000A0DD0(0, a1[2], 0, a1);
}

uint64_t sub_1000A4CB4(uint64_t a1)
{
  return sub_1000A141C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1000A4CC8(void *a1)
{
  return sub_1000A28A0(0, a1[2], 0, a1, &qword_10070BA40, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
}

uint64_t sub_1000A4D0C(void *a1)
{
  return sub_1000A31AC(0, a1[2], 0, a1, &qword_10070BAC8, &qword_10070BAC0);
}

unint64_t sub_1000A4D44(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a1;
  uint64_t v16 = sub_1005E0B40();
  sub_1005E0B90();
  if (v16)
  {
    uint64_t v7 = a1;
    uint64_t v8 = sub_1005E0B50();
    while (1)
    {
      unint64_t result = sub_1005E0B70();
      if (v10)
      {
LABEL_20:
        __break(1u);
        return result;
      }
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      uint64_t v11 = *(void *)(a4 + 8);
      if (result >= *(void *)(v11 + 16)) {
        goto LABEL_18;
      }
      Swift::UInt32 v12 = *(_DWORD *)(v11 + 4 * result + 32);
      sub_1005E33F0();
      sub_1005E3440(v12);
      unint64_t result = sub_1005E3470();
      uint64_t v13 = 1 << *a2;
      if (__OFSUB__(v13, 1)) {
        goto LABEL_19;
      }
      uint64_t v14 = (v13 - 1) & result;
      if (v6 >= v8) {
        break;
      }
      if (v14 < v8) {
        goto LABEL_12;
      }
LABEL_13:
      sub_1005E0B70();
      sub_1005E0B60();
      uint64_t v6 = v7;
LABEL_3:
      sub_1005E0B90();
      uint64_t v7 = a1;
    }
    if (v14 < v8) {
      goto LABEL_3;
    }
LABEL_12:
    if (v6 < v14) {
      goto LABEL_3;
    }
    goto LABEL_13;
  }
  return sub_1005E0B60();
}

unint64_t sub_1000A4F10(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a1;
  uint64_t v16 = sub_1005E0B40();
  sub_1005E0B90();
  if (v16)
  {
    uint64_t v7 = a1;
    uint64_t v8 = sub_1005E0B50();
    while (1)
    {
      unint64_t result = sub_1005E0B70();
      if (v10)
      {
LABEL_20:
        __break(1u);
        return result;
      }
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      uint64_t v11 = *(void *)(a4 + 8);
      if (result >= *(void *)(v11 + 16)) {
        goto LABEL_18;
      }
      uint64_t v12 = *(unsigned int *)(v11 + 16 * result + 40);
      sub_1005E33F0();
      sub_1005E3410(v12 | (v12 << 32));
      unint64_t result = sub_1005E3470();
      uint64_t v13 = 1 << *a2;
      if (__OFSUB__(v13, 1)) {
        goto LABEL_19;
      }
      uint64_t v14 = (v13 - 1) & result;
      if (v6 >= v8) {
        break;
      }
      if (v14 < v8) {
        goto LABEL_12;
      }
LABEL_13:
      sub_1005E0B70();
      sub_1005E0B60();
      uint64_t v6 = v7;
LABEL_3:
      sub_1005E0B90();
      uint64_t v7 = a1;
    }
    if (v14 < v8) {
      goto LABEL_3;
    }
LABEL_12:
    if (v6 < v14) {
      goto LABEL_3;
    }
    goto LABEL_13;
  }
  return sub_1005E0B60();
}

void sub_1000A50DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  if (v5 >= 1)
  {
    unint64_t v9 = *(void *)(a3 + 16);
    uint64_t v10 = v9 - v5;
    if ((uint64_t)v9 < v5) {
      ++v10;
    }
    if (a1 < v10 >> 1)
    {
      if (sub_1005E0BA0() / 3 > a1)
      {
        if (a1 < 0)
        {
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        if (v9 < a1)
        {
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
        if (a1)
        {
          uint64_t v11 = 0;
          uint64_t v12 = a3 + 40;
          while (1)
          {
            uint64_t v13 = *(unsigned int *)(v12 + 16 * v11);
            sub_1005E33F0();
            sub_1005E3410(v13 | (v13 << 32));
            sub_1005E3470();
            if (__OFSUB__(1 << *a4, 1)) {
              break;
            }
            if (sub_1005E0B40())
            {
              while (1)
              {
                uint64_t v14 = sub_1005E0B70();
                if ((v15 & 1) == 0 && v14 == v11) {
                  break;
                }
                sub_1005E0B90();
              }
            }
            if (__OFADD__(v11, v5)) {
              goto LABEL_54;
            }
            ++v11;
            sub_1005E0B80();
            if (v11 == a1) {
              goto LABEL_19;
            }
          }
          __break(1u);
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
        goto LABEL_19;
      }
      sub_1005E0B40();
      uint64_t v25 = sub_1005E0B70();
      if ((v26 & 1) != 0 || v25 >= a1)
      {
LABEL_41:
        sub_1005E0B90();
LABEL_19:
        uint64_t v16 = a4[1];
        if (__OFSUB__(v16 >> 6, v5))
        {
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
        uint64_t v17 = 1 << *a4;
        BOOL v18 = __OFSUB__(v17, 1);
        uint64_t v19 = v17 - 1;
        if (v18)
        {
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
        uint64_t v20 = (v19 & (((v16 >> 6) - v5) >> 63)) + (v16 >> 6) - v5;
        if (v20 < v19) {
          uint64_t v19 = 0;
        }
        a4[1] = a4[1] & 0x3FLL | ((v20 - v19) << 6);
        return;
      }
      if (!__OFADD__(v25, v5))
      {
        sub_1005E0B80();
        goto LABEL_41;
      }
      __break(1u);
LABEL_47:
      sub_1005E0B40();
      uint64_t v27 = sub_1005E0B70();
      if ((v28 & 1) == 0 && v27 >= v4)
      {
        if (__OFSUB__(v27, v5))
        {
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        sub_1005E0B80();
      }
      sub_1005E0B90();
      return;
    }
    uint64_t v4 = a2;
    if (__OFSUB__(v9, a2))
    {
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    if ((uint64_t)(v9 - a2) >= sub_1005E0BA0() / 3) {
      goto LABEL_47;
    }
    if ((uint64_t)v9 < v4)
    {
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    if (v4 < 0)
    {
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    if (v9 != v4)
    {
      if (v9 <= v4)
      {
LABEL_66:
        __break(1u);
        return;
      }
      uint64_t v21 = a3 + 40;
      while (1)
      {
        uint64_t v22 = *(unsigned int *)(v21 + 16 * v4);
        sub_1005E33F0();
        sub_1005E3410(v22 | (v22 << 32));
        sub_1005E3470();
        if (__OFSUB__(1 << *a4, 1)) {
          goto LABEL_56;
        }
        if (sub_1005E0B40())
        {
          while (1)
          {
            uint64_t v23 = sub_1005E0B70();
            if ((v24 & 1) == 0 && v23 == v4) {
              break;
            }
            sub_1005E0B90();
          }
        }
        if (__OFSUB__(v4, v5)) {
          goto LABEL_57;
        }
        ++v4;
        sub_1005E0B80();
        if (v4 == v9) {
          return;
        }
      }
    }
  }
}

void sub_1000A5510(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (v5 >= 1)
  {
    unint64_t v9 = *(void *)(a3 + 16);
    uint64_t v10 = v9 - v5;
    if ((uint64_t)v9 < v5) {
      ++v10;
    }
    if (a1 < v10 >> 1)
    {
      if (sub_1005E0BA0() / 3 > a1)
      {
        if (a1 < 0)
        {
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
        if (v9 < a1)
        {
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        if (a1)
        {
          uint64_t v11 = 0;
          while (1)
          {
            Swift::UInt32 v12 = *(_DWORD *)(a3 + 32 + 4 * v11);
            sub_1005E33F0();
            sub_1005E3440(v12);
            sub_1005E3470();
            if (__OFSUB__(1 << *a4, 1)) {
              break;
            }
            if (sub_1005E0B40())
            {
              while (1)
              {
                uint64_t v13 = sub_1005E0B70();
                if ((v14 & 1) == 0 && v13 == v11) {
                  break;
                }
                sub_1005E0B90();
              }
            }
            if (__OFADD__(v11, v5)) {
              goto LABEL_53;
            }
            ++v11;
            sub_1005E0B80();
            if (v11 == a1) {
              goto LABEL_19;
            }
          }
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        goto LABEL_19;
      }
      sub_1005E0B40();
      uint64_t v23 = sub_1005E0B70();
      if ((v24 & 1) != 0 || v23 >= a1)
      {
LABEL_40:
        sub_1005E0B90();
LABEL_19:
        uint64_t v15 = a4[1];
        if (__OFSUB__(v15 >> 6, v5))
        {
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
        uint64_t v16 = 1 << *a4;
        BOOL v17 = __OFSUB__(v16, 1);
        uint64_t v18 = v16 - 1;
        if (v17)
        {
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
        uint64_t v19 = (v18 & (((v15 >> 6) - v5) >> 63)) + (v15 >> 6) - v5;
        if (v19 < v18) {
          uint64_t v18 = 0;
        }
        a4[1] = a4[1] & 0x3FLL | ((v19 - v18) << 6);
        return;
      }
      if (!__OFADD__(v23, v5))
      {
        sub_1005E0B80();
        goto LABEL_40;
      }
      __break(1u);
LABEL_46:
      sub_1005E0B40();
      uint64_t v25 = sub_1005E0B70();
      if ((v26 & 1) == 0 && v25 >= v4)
      {
        if (__OFSUB__(v25, v5))
        {
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
          goto LABEL_57;
        }
        sub_1005E0B80();
      }
      sub_1005E0B90();
      return;
    }
    uint64_t v4 = a2;
    if (__OFSUB__(v9, a2))
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    if ((uint64_t)(v9 - a2) >= sub_1005E0BA0() / 3) {
      goto LABEL_46;
    }
    if ((uint64_t)v9 < v4)
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    if (v4 < 0)
    {
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    if (v9 != v4)
    {
      if (v9 <= v4)
      {
LABEL_65:
        __break(1u);
        return;
      }
      while (1)
      {
        Swift::UInt32 v20 = *(_DWORD *)(a3 + 32 + 4 * v4);
        sub_1005E33F0();
        sub_1005E3440(v20);
        sub_1005E3470();
        if (__OFSUB__(1 << *a4, 1)) {
          goto LABEL_55;
        }
        if (sub_1005E0B40())
        {
          while (1)
          {
            uint64_t v21 = sub_1005E0B70();
            if ((v22 & 1) == 0 && v21 == v4) {
              break;
            }
            sub_1005E0B90();
          }
        }
        if (__OFSUB__(v4, v5)) {
          goto LABEL_56;
        }
        ++v4;
        sub_1005E0B80();
        if (v4 == v9) {
          return;
        }
      }
    }
  }
}

uint64_t sub_1000A5944(uint64_t result, char a2)
{
  if (result < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v3 = v2;
  int64_t v5 = result;
  Swift::Int v8 = v2[1];
  uint64_t v6 = v2 + 1;
  Swift::Int v7 = v8;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v6 = v8;
  if (isUniquelyReferenced_nonNull_native && (unint64_t)v5 <= *(void *)(v7 + 24) >> 1)
  {
    uint64_t v10 = *v3;
    if (*v3) {
      goto LABEL_5;
    }
  }
  else
  {
    if (*(void *)(v7 + 16) <= v5) {
      int64_t v15 = v5;
    }
    else {
      int64_t v15 = *(void *)(v7 + 16);
    }
    sub_10001A4D4(isUniquelyReferenced_nonNull_native, v15, 0);
    Swift::Int v7 = *v6;
    uint64_t v10 = *v3;
    if (*v3)
    {
LABEL_5:
      swift_beginAccess();
      uint64_t v11 = *(void *)(v10 + 16) & 0x3FLL;
      uint64_t v12 = sub_1005E0BD0();
      uint64_t v13 = v12;
      if (a2)
      {
        uint64_t v14 = v12;
        if (v11 >= v12) {
          goto LABEL_20;
        }
      }
      else
      {
        swift_beginAccess();
        uint64_t v14 = *(void *)(v10 + 24) & 0x3FLL;
        if (v11 >= v13) {
          goto LABEL_20;
        }
      }
LABEL_16:
      if (v14 <= v13) {
        uint64_t v17 = v13;
      }
      else {
        uint64_t v17 = v14;
      }
      goto LABEL_30;
    }
  }
  uint64_t v16 = sub_1005E0BD0();
  uint64_t v13 = v16;
  uint64_t v11 = 0;
  if (a2) {
    uint64_t v14 = v16;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v16 > 0) {
    goto LABEL_16;
  }
LABEL_20:
  if (v14 <= v13) {
    uint64_t v18 = v13;
  }
  else {
    uint64_t v18 = v14;
  }
  unint64_t result = sub_1005E0BD0();
  if (result <= v18) {
    uint64_t v19 = v18;
  }
  else {
    uint64_t v19 = result;
  }
  if (v19 < v11)
  {
    if (v14 <= v19) {
      uint64_t v17 = v19;
    }
    else {
      uint64_t v17 = v14;
    }
LABEL_30:
    uint64_t v20 = sub_1000A4124(v7, v17, 0, v14);
    unint64_t result = swift_release();
    *uint64_t v3 = v20;
    return result;
  }
  if (!v10 || (unint64_t result = swift_isUniquelyReferenced_native(), result))
  {
    uint64_t v21 = *v3;
    if (*v3) {
      goto LABEL_35;
    }
LABEL_39:
    if (!v14) {
      return result;
    }
    __break(1u);
    goto LABEL_41;
  }
  unint64_t result = *v3;
  if (!*v3)
  {
LABEL_42:
    __break(1u);
    return result;
  }
  uint64_t v21 = sub_1005E0BC0();
  unint64_t result = swift_release();
  *uint64_t v3 = v21;
  if (!v21) {
    goto LABEL_39;
  }
LABEL_35:
  unint64_t result = swift_beginAccess();
  if ((*(void *)(v21 + 24) & 0x3FLL) != v14) {
    *(void *)(v21 + 24) = *(void *)(v21 + 24) & 0xFFFFFFFFFFFFFFC0 | v14 & 0x3F;
  }
  return result;
}

uint64_t sub_1000A5B28(uint64_t result, char a2)
{
  if (result < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v3 = v2;
  int64_t v5 = result;
  uint64_t v8 = v2[1];
  uint64_t v6 = v2 + 1;
  uint64_t v7 = v8;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v6 = v8;
  if (isUniquelyReferenced_nonNull_native && (unint64_t)v5 <= *(void *)(v7 + 24) >> 1)
  {
    uint64_t v10 = *v3;
    if (*v3) {
      goto LABEL_5;
    }
  }
  else
  {
    if (*(void *)(v7 + 16) <= v5) {
      int64_t v15 = v5;
    }
    else {
      int64_t v15 = *(void *)(v7 + 16);
    }
    sub_10001A5B4(isUniquelyReferenced_nonNull_native, v15, 0);
    uint64_t v7 = *v6;
    uint64_t v10 = *v3;
    if (*v3)
    {
LABEL_5:
      swift_beginAccess();
      uint64_t v11 = *(void *)(v10 + 16) & 0x3FLL;
      uint64_t v12 = sub_1005E0BD0();
      uint64_t v13 = v12;
      if (a2)
      {
        uint64_t v14 = v12;
        if (v11 >= v12) {
          goto LABEL_20;
        }
      }
      else
      {
        swift_beginAccess();
        uint64_t v14 = *(void *)(v10 + 24) & 0x3FLL;
        if (v11 >= v13) {
          goto LABEL_20;
        }
      }
LABEL_16:
      if (v14 <= v13) {
        uint64_t v17 = v13;
      }
      else {
        uint64_t v17 = v14;
      }
      goto LABEL_30;
    }
  }
  uint64_t v16 = sub_1005E0BD0();
  uint64_t v13 = v16;
  uint64_t v11 = 0;
  if (a2) {
    uint64_t v14 = v16;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v16 > 0) {
    goto LABEL_16;
  }
LABEL_20:
  if (v14 <= v13) {
    uint64_t v18 = v13;
  }
  else {
    uint64_t v18 = v14;
  }
  unint64_t result = sub_1005E0BD0();
  if (result <= v18) {
    uint64_t v19 = v18;
  }
  else {
    uint64_t v19 = result;
  }
  if (v19 < v11)
  {
    if (v14 <= v19) {
      uint64_t v17 = v19;
    }
    else {
      uint64_t v17 = v14;
    }
LABEL_30:
    uint64_t v20 = sub_1000A41AC(v7, v17, 0, v14);
    unint64_t result = swift_release();
    *uint64_t v3 = v20;
    return result;
  }
  if (!v10 || (unint64_t result = swift_isUniquelyReferenced_native(), result))
  {
    uint64_t v21 = *v3;
    if (*v3) {
      goto LABEL_35;
    }
LABEL_39:
    if (!v14) {
      return result;
    }
    __break(1u);
    goto LABEL_41;
  }
  unint64_t result = *v3;
  if (!*v3)
  {
LABEL_42:
    __break(1u);
    return result;
  }
  uint64_t v21 = sub_1005E0BC0();
  unint64_t result = swift_release();
  *uint64_t v3 = v21;
  if (!v21) {
    goto LABEL_39;
  }
LABEL_35:
  unint64_t result = swift_beginAccess();
  if ((*(void *)(v21 + 24) & 0x3FLL) != v14) {
    *(void *)(v21 + 24) = *(void *)(v21 + 24) & 0xFFFFFFFFFFFFFFC0 | v14 & 0x3F;
  }
  return result;
}

Swift::Int sub_1000A5D0C(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1005E3210(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_141;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v85 = *a1;
      uint64_t v86 = *a1 + 16;
      uint64_t v87 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v89 = v86;
        uint64_t v90 = v87;
        do
        {
          unsigned int v91 = *(unsigned __int8 *)(v89 + 12);
          if (*(unsigned __int8 *)(v89 - 4) >= v91) {
            break;
          }
          if (!v85) {
            goto LABEL_145;
          }
          uint64_t v92 = *(void *)v89;
          int v93 = *(_DWORD *)(v89 + 8);
          *(_OWORD *)uint64_t v89 = *(_OWORD *)(v89 - 16);
          *(_DWORD *)(v89 - 8) = v93;
          *(unsigned char *)(v89 - 4) = v91;
          *(void *)(v89 - 16) = v92;
          v89 -= 16;
        }
        while (!__CFADD__(v90++, 1));
        --v87;
        v86 += 16;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_150;
  }
  Swift::Int v6 = result;
  uint64_t v111 = v1;
  long long v103 = a1;
  if (v3 < 2)
  {
    unint64_t v9 = _swiftEmptyArrayStorage;
    __dst = (unsigned __int8 *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      uint64_t v12 = (char *)_swiftEmptyArrayStorage;
LABEL_107:
      char v95 = v12;
      long long v106 = v9;
      if (v13 >= 2)
      {
        uint64_t v96 = *v103;
        do
        {
          unint64_t v97 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_136;
          }
          if (!v96) {
            goto LABEL_149;
          }
          long long v98 = v95;
          uint64_t v99 = *(void *)&v95[16 * v97 + 32];
          uint64_t v100 = *(void *)&v95[16 * v13 + 24];
          sub_1000A6418((unsigned __int8 *)(v96 + 16 * v99), (unsigned __int8 *)(v96 + 16 * *(void *)&v95[16 * v13 + 16]), v96 + 16 * v100, __dst);
          if (v111) {
            break;
          }
          if (v100 < v99) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v98 = sub_1000A6DE0((uint64_t)v98);
          }
          if (v97 >= *((void *)v98 + 2)) {
            goto LABEL_138;
          }
          long long v101 = &v98[16 * v97 + 32];
          *(void *)long long v101 = v99;
          *((void *)v101 + 1) = v100;
          unint64_t v102 = *((void *)v98 + 2);
          if (v13 > v102) {
            goto LABEL_139;
          }
          memmove(&v98[16 * v13 + 16], &v98[16 * v13 + 32], 16 * (v102 - v13));
          char v95 = v98;
          *((void *)v98 + 2) = v102 - 1;
          unint64_t v13 = v102 - 1;
        }
        while (v102 > 2);
      }
LABEL_97:
      swift_bridgeObjectRelease();
      v106[2] = 0;
      return swift_bridgeObjectRelease();
    }
    long long v106 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    sub_10000566C(&qword_10070B830);
    uint64_t v8 = sub_1005E2150();
    *(void *)(v8 + 16) = v7;
    long long v106 = (void *)v8;
    __dst = (unsigned __int8 *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v104 = *a1 + 44;
  uint64_t v105 = *a1 + 12;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v107 = v6;
  Swift::Int v108 = v3;
  uint64_t v109 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      unsigned int v15 = *(unsigned __int8 *)(v105 + 16 * v10);
      uint64_t v16 = 16 * v14;
      unsigned int v17 = *(unsigned __int8 *)(v105 + 16 * v14);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v18 = (unsigned __int8 *)(v104 + 16 * v14);
        while (v17 < v15 != *(v18 - 16) >= *v18)
        {
          v18 += 16;
          if (v3 == ++v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v17 < v15)
      {
        if (v10 < v14) {
          goto LABEL_142;
        }
        if (v14 < v10)
        {
          uint64_t v19 = 16 * v10 - 16;
          Swift::Int v20 = v10;
          Swift::Int v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11) {
                goto LABEL_148;
              }
              uint64_t v23 = (_OWORD *)(v11 + v16);
              char v24 = (_OWORD *)(v11 + v19);
              uint64_t v25 = *(void *)(v11 + v16);
              int v26 = *(_DWORD *)(v11 + v16 + 8);
              char v27 = *(unsigned char *)(v11 + v16 + 12);
              if (v16 != v19 || v23 >= v24 + 1) {
                _OWORD *v23 = *v24;
              }
              uint64_t v22 = v11 + v19;
              *(void *)uint64_t v22 = v25;
              *(_DWORD *)(v22 + 8) = v26;
              *(unsigned char *)(v22 + 12) = v27;
            }
            ++v21;
            v19 -= 16;
            v16 += 16;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_50;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_140;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_50;
    }
    Swift::Int v28 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_143;
    }
    if (v28 >= v3) {
      Swift::Int v28 = v3;
    }
    if (v28 < v14) {
      break;
    }
    if (v10 != v28)
    {
      long long v29 = (uint64_t *)(v11 + 16 * v10);
      do
      {
        long long v30 = v29;
        Swift::Int v31 = v14;
        do
        {
          unsigned int v32 = *((unsigned __int8 *)v30 + 12);
          if (*((unsigned __int8 *)v30 - 4) >= v32) {
            break;
          }
          if (!v11) {
            goto LABEL_146;
          }
          uint64_t v33 = *v30;
          int v34 = *((_DWORD *)v30 + 2);
          *(_OWORD *)long long v30 = *((_OWORD *)v30 - 1);
          *((_DWORD *)v30 - 2) = v34;
          *((unsigned char *)v30 - 4) = v32;
          *(v30 - 2) = v33;
          v30 -= 2;
          ++v31;
        }
        while (v10 != v31);
        ++v10;
        v29 += 2;
      }
      while (v10 != v28);
      Swift::Int v10 = v28;
    }
LABEL_50:
    if (v10 < v14) {
      goto LABEL_135;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1000A66A4(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v36 = *((void *)v12 + 2);
    unint64_t v35 = *((void *)v12 + 3);
    unint64_t v13 = v36 + 1;
    uint64_t v11 = v109;
    if (v36 >= v35 >> 1)
    {
      uint64_t v11 = v109;
      uint64_t v12 = sub_1000A66A4((char *)(v35 > 1), v36 + 1, 1, v12);
    }
    *((void *)v12 + 2) = v13;
    long long v37 = v12 + 32;
    long long v38 = &v12[16 * v36 + 32];
    *(void *)long long v38 = v14;
    *((void *)v38 + 1) = v10;
    if (v36)
    {
      while (1)
      {
        unint64_t v39 = v13 - 1;
        if (v13 >= 4)
        {
          long long v44 = &v37[16 * v13];
          uint64_t v45 = *((void *)v44 - 8);
          uint64_t v46 = *((void *)v44 - 7);
          BOOL v50 = __OFSUB__(v46, v45);
          uint64_t v47 = v46 - v45;
          if (v50) {
            goto LABEL_124;
          }
          uint64_t v49 = *((void *)v44 - 6);
          uint64_t v48 = *((void *)v44 - 5);
          BOOL v50 = __OFSUB__(v48, v49);
          uint64_t v42 = v48 - v49;
          char v43 = v50;
          if (v50) {
            goto LABEL_125;
          }
          unint64_t v51 = v13 - 2;
          uint64_t v52 = &v37[16 * v13 - 32];
          uint64_t v54 = *(void *)v52;
          uint64_t v53 = *((void *)v52 + 1);
          BOOL v50 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          if (v50) {
            goto LABEL_127;
          }
          BOOL v50 = __OFADD__(v42, v55);
          uint64_t v56 = v42 + v55;
          if (v50) {
            goto LABEL_130;
          }
          if (v56 >= v47)
          {
            long long v74 = &v37[16 * v39];
            uint64_t v76 = *(void *)v74;
            uint64_t v75 = *((void *)v74 + 1);
            BOOL v50 = __OFSUB__(v75, v76);
            uint64_t v77 = v75 - v76;
            if (v50) {
              goto LABEL_134;
            }
            BOOL v67 = v42 < v77;
            goto LABEL_87;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v68 = *((void *)v12 + 4);
            uint64_t v69 = *((void *)v12 + 5);
            BOOL v50 = __OFSUB__(v69, v68);
            uint64_t v61 = v69 - v68;
            char v62 = v50;
            goto LABEL_81;
          }
          uint64_t v41 = *((void *)v12 + 4);
          uint64_t v40 = *((void *)v12 + 5);
          BOOL v50 = __OFSUB__(v40, v41);
          uint64_t v42 = v40 - v41;
          char v43 = v50;
        }
        if (v43) {
          goto LABEL_126;
        }
        unint64_t v51 = v13 - 2;
        uint64_t v57 = &v37[16 * v13 - 32];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v60 = __OFSUB__(v58, v59);
        uint64_t v61 = v58 - v59;
        char v62 = v60;
        if (v60) {
          goto LABEL_129;
        }
        long long v63 = &v37[16 * v39];
        uint64_t v65 = *(void *)v63;
        uint64_t v64 = *((void *)v63 + 1);
        BOOL v50 = __OFSUB__(v64, v65);
        uint64_t v66 = v64 - v65;
        if (v50) {
          goto LABEL_132;
        }
        if (__OFADD__(v61, v66)) {
          goto LABEL_133;
        }
        if (v61 + v66 >= v42)
        {
          BOOL v67 = v42 < v66;
LABEL_87:
          if (v67) {
            unint64_t v39 = v51;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v62) {
          goto LABEL_128;
        }
        Swift::String v70 = &v37[16 * v39];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v50 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v50) {
          goto LABEL_131;
        }
        if (v73 < v61) {
          goto LABEL_15;
        }
LABEL_89:
        unint64_t v78 = v39 - 1;
        if (v39 - 1 >= v13)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v11) {
          goto LABEL_147;
        }
        long long v79 = v12;
        long long v80 = &v37[16 * v78];
        uint64_t v81 = *(void *)v80;
        long long v82 = &v37[16 * v39];
        uint64_t v83 = *((void *)v82 + 1);
        sub_1000A6418((unsigned __int8 *)(v11 + 16 * *(void *)v80), (unsigned __int8 *)(v11 + 16 * *(void *)v82), v11 + 16 * v83, __dst);
        if (v111) {
          goto LABEL_97;
        }
        if (v83 < v81) {
          goto LABEL_121;
        }
        if (v39 > *((void *)v79 + 2)) {
          goto LABEL_122;
        }
        *(void *)long long v80 = v81;
        *(void *)&v37[16 * v78 + 8] = v83;
        unint64_t v84 = *((void *)v79 + 2);
        if (v39 >= v84) {
          goto LABEL_123;
        }
        uint64_t v12 = v79;
        unint64_t v13 = v84 - 1;
        memmove(&v37[16 * v39], v82 + 16, 16 * (v84 - 1 - v39));
        *((void *)v79 + 2) = v84 - 1;
        uint64_t v11 = v109;
        if (v84 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v107;
    Swift::Int v3 = v108;
    if (v10 >= v108)
    {
      unint64_t v9 = v106;
      goto LABEL_107;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  Swift::Int result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_1000A6418(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  uint64_t v4 = __dst;
  Swift::Int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  int v26 = __dst;
  char v27 = __src;
  if (v10 >= v13)
  {
    if (v11 >= -15)
    {
      uint64_t v19 = 16 * v13;
      if (__dst != a2 || &a2[v19] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      Swift::Int v20 = &v4[v19];
      uint64_t v25 = (char *)&v4[v19];
      char v27 = v6;
      if (v7 < v6 && (unint64_t)(v11 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        Swift::Int v21 = (unsigned __int8 *)(a3 - 16);
        do
        {
          uint64_t v22 = v21 + 16;
          if (*(v6 - 4) >= *(v20 - 4))
          {
            uint64_t v25 = (char *)(v20 - 16);
            if (v22 < v20 || v21 >= v20 || v22 != v20) {
              *(_OWORD *)Swift::Int v21 = *((_OWORD *)v20 - 1);
            }
            uint64_t v23 = v6;
            v20 -= 16;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v23 = v6 - 16;
            if (v22 != v6 || v21 >= v6) {
              *(_OWORD *)Swift::Int v21 = *(_OWORD *)v23;
            }
            char v27 = v6 - 16;
            if (v23 <= v7) {
              break;
            }
          }
          v21 -= 16;
          Swift::Int v6 = v23;
        }
        while (v20 > v4);
      }
LABEL_44:
      sub_1000A692C((void **)&v27, (const void **)&v26, &v25);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    size_t v14 = 16 * v10;
    if (__dst != __src || &__src[v14] <= __dst) {
      memmove(__dst, __src, v14);
    }
    unsigned int v15 = (char *)&v4[v14];
    uint64_t v25 = (char *)&v4[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      uint64_t v16 = v4;
      while (1)
      {
        if (v16[12] >= v6[12])
        {
          uint64_t v4 = v16 + 16;
          uint64_t v18 = v16;
          unsigned int v17 = v6;
          if (v7 == v16)
          {
            v16 += 16;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v16 += 16;
          }
        }
        else
        {
          unsigned int v17 = v6 + 16;
          uint64_t v18 = v6;
          if (v7 == v6 && v7 < v17) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v18;
LABEL_22:
        v7 += 16;
        if (v16 < (unsigned __int8 *)v15)
        {
          Swift::Int v6 = v17;
          if ((unint64_t)v17 < a3) {
            continue;
          }
        }
        int v26 = v4;
        char v27 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

char *sub_1000A66A4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070B838);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1000A67A0(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_1005E3000();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_1000A6860(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_1005E3000();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 24 * (v4 / 24);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_1000A692C(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_1005E3000();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = (v4 + (v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0;
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_1000A69E4(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 3;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -4)
  {
    uint64_t result = (char *)sub_1005E3000();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 2;
    if (result != v3 || result >= &v3[4 * v7])
    {
      return (char *)memmove(result, v3, 4 * v7);
    }
  }
  return result;
}

char *sub_1000A6AA0(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_1005E3000();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

uint64_t sub_1000A6B5C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_1005E3000();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

uint64_t sub_1000A6C9C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_10000566C(&qword_10070BAC0);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_1005E3000();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1000A6DE0(uint64_t a1)
{
  return sub_1000A66A4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

BOOL sub_1000A6DF4(unsigned __int8 a1, unsigned __int8 a2)
{
  switch(a1)
  {
    case 5u:
      if (a2 != 5) {
        goto LABEL_15;
      }
      BOOL result = 1;
      break;
    case 6u:
      if (a2 != 6) {
        goto LABEL_15;
      }
      BOOL result = 1;
      break;
    case 7u:
      if (a2 != 7) {
        goto LABEL_15;
      }
      BOOL result = 1;
      break;
    case 8u:
      if (a2 != 8) {
        goto LABEL_15;
      }
      BOOL result = 1;
      break;
    case 9u:
      if (a2 != 9) {
        goto LABEL_15;
      }
      BOOL result = 1;
      break;
    case 0xAu:
      if (a2 != 10) {
        goto LABEL_15;
      }
      BOOL result = 1;
      break;
    default:
      if (a2 - 5 >= 6) {
        BOOL result = a1 == a2;
      }
      else {
LABEL_15:
      }
        BOOL result = 0;
      break;
  }
  return result;
}

BOOL sub_1000A6EC0(unsigned __int16 a1, unsigned __int16 a2)
{
  switch(a1 >> 14)
  {
    case 1:
      if ((a2 & 0xC000) != 0x4000) {
        goto LABEL_17;
      }
      goto LABEL_10;
    case 2:
      if ((a2 & 0xC000) != 0x8000) {
        goto LABEL_17;
      }
LABEL_10:
      BOOL result = (a2 ^ a1) == 0;
      break;
    case 3:
      switch(a1)
      {
        case 0xC001u:
          if (a2 != 49153) {
            goto LABEL_17;
          }
          BOOL result = 1;
          break;
        case 0xC002u:
          if (a2 != 49154) {
            goto LABEL_17;
          }
          BOOL result = 1;
          break;
        case 0xC003u:
          if (a2 != 49155) {
            goto LABEL_17;
          }
          BOOL result = 1;
          break;
        default:
          if (a2 != 49152) {
            goto LABEL_17;
          }
          BOOL result = 1;
          break;
      }
      return result;
    default:
      if (a2 >= 0x4000u) {
LABEL_17:
      }
        BOOL result = 0;
      else {
        BOOL result = a1 == a2;
      }
      break;
  }
  return result;
}

uint64_t sub_1000A6FC4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000A7014(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1000A5944(v2, 0);
  sub_10001A554(0, v2, 0);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v3 = (int *)(a1 + 44);
  while (1)
  {
    unsigned int v4 = *(v3 - 1);
    int v5 = *v3;
    uint64_t result = sub_1000CE0E8(*(void *)(v3 - 3), v4, (uint64_t)&_swiftEmptyArrayStorage[4], _swiftEmptyArrayStorage[2]);
    if ((v7 & 1) == 0) {
      break;
    }
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_1000A3CE4(v8, v4);
    unint64_t v10 = _swiftEmptyArrayStorage[2];
    unint64_t v9 = _swiftEmptyArrayStorage[3];
    if (v10 >= v9 >> 1) {
      sub_10001A554(v9 > 1, v10 + 1, 1);
    }
    v3 += 4;
    _swiftEmptyArrayStorage[2] = v10 + 1;
    *((_DWORD *)&_swiftEmptyArrayStorage[4] + v10) = v5;
    swift_bridgeObjectRelease();
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A7178(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1000A5B28(v2, 0);
  sub_10001A594(0, v2, 0);
  swift_bridgeObjectRetain();
  if (v2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = a1 + 32;
    do
    {
      uint64_t v5 = v4 + 32 * v3;
      char v6 = *(unsigned char *)(v5 + 16);
      int v7 = *(_DWORD *)v5;
      uint64_t v8 = *(void *)(v5 + 24);
      uint64_t v9 = *(void *)(v5 + 8);
      uint64_t result = swift_bridgeObjectRetain();
      if (v8 == 1) {
        break;
      }
      uint64_t v11 = _swiftEmptyArrayStorage[2];
      if (v11)
      {
        if (v7 == LODWORD(_swiftEmptyArrayStorage[4])) {
          goto LABEL_22;
        }
        if (v11 != 1)
        {
          if (v7 == HIDWORD(_swiftEmptyArrayStorage[4])) {
            goto LABEL_22;
          }
          if (v11 != 2)
          {
            if (v7 == LODWORD(_swiftEmptyArrayStorage[5])) {
              goto LABEL_22;
            }
            if (v11 != 3)
            {
              if (v7 == HIDWORD(_swiftEmptyArrayStorage[5]))
              {
LABEL_22:
                __break(1u);
                return result;
              }
              uint64_t v15 = v11 - 4;
              uint64_t v16 = (int *)&_swiftEmptyArrayStorage[6];
              while (v15)
              {
                int v17 = *v16++;
                --v15;
                if (v7 == v17) {
                  goto LABEL_22;
                }
              }
            }
          }
        }
        uint64_t v11 = 0;
      }
      sub_1000A3E5C(v7, v11, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001A5B4);
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        sub_10001A594(v12 > 1, v13 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v13 + 1;
      size_t v14 = &_swiftEmptyArrayStorage[3 * v13];
      v14[4] = v9;
      ++v3;
      *((unsigned char *)v14 + 40) = v6;
      v14[6] = v8;
    }
    while (v3 != v2);
  }
  swift_bridgeObjectRelease();
  return 0;
}

Swift::Int sub_1000A7364(unsigned __int16 a1, uint64_t a2, unsigned int a3)
{
  int v6 = a1;
  uint64_t v7 = v3[1];
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(void *)(v7 + 16);
  if (*v3)
  {
    Swift::Int result = sub_1000CE1DC(a2, a3, v8, v9, (void *)(*v3 + 16));
    if ((v12 & 1) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    Swift::Int result = sub_1000CE0E8(a2, a3, v8, v9);
    uint64_t v11 = 0;
    if ((v14 & 1) == 0)
    {
LABEL_3:
      unint64_t v13 = result;
      if ((~v6 & 0xF8FC) == 0)
      {
        sub_1000A4434(result, v11);
        swift_bridgeObjectRelease();
        return sub_1000A4A7C(v13);
      }
      uint64_t v20 = v3[2];
      Swift::Int result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        Swift::Int result = sub_1000A4C8C(v20);
        uint64_t v20 = result;
      }
      if ((v13 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v13 < *(void *)(v20 + 16))
      {
        *(_WORD *)(v20 + 2 * v13 + 32) = v6;
        v3[2] = v20;
        return result;
      }
      __break(1u);
      return result;
    }
  }
  if ((~v6 & 0xF8FC) != 0)
  {
    sub_1000A3CE4(a2, a3);
    uint64_t v17 = v3[2];
    uint64_t v16 = v3 + 2;
    uint64_t v15 = v17;
    Swift::Int result = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v16 = v17;
    if ((result & 1) == 0)
    {
      Swift::Int result = sub_10001A854(0, *(void *)(v15 + 16) + 1, 1);
      uint64_t v15 = *v16;
    }
    unint64_t v19 = *(void *)(v15 + 16);
    unint64_t v18 = *(void *)(v15 + 24);
    if (v19 >= v18 >> 1)
    {
      Swift::Int result = sub_10001A854(v18 > 1, v19 + 1, 1);
      uint64_t v15 = *v16;
    }
    *(void *)(v15 + 16) = v19 + 1;
    *(_WORD *)(v15 + 2 * v19 + 32) = v6;
    *uint64_t v16 = v15;
  }
  return result;
}

uint64_t sub_1000A74CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1000A5944(v2, 0);
  sub_10001A854(0, v2, 0);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = (_WORD *)(a1 + 44); ; i += 8)
  {
    __int16 v4 = *i;
    unsigned int v5 = *((_DWORD *)i - 1);
    uint64_t result = sub_1000CE0E8(*(void *)(i - 6), v5, (uint64_t)&_swiftEmptyArrayStorage[4], _swiftEmptyArrayStorage[2]);
    if ((v7 & 1) == 0) {
      break;
    }
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_1000A3CE4(v8, v5);
    unint64_t v10 = _swiftEmptyArrayStorage[2];
    unint64_t v9 = _swiftEmptyArrayStorage[3];
    if (v10 >= v9 >> 1) {
      sub_10001A854(v9 > 1, v10 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v10 + 1;
    *((_WORD *)&_swiftEmptyArrayStorage[4] + v10) = v4;
    swift_bridgeObjectRelease();
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A7634(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  unint64_t v8 = *(void *)(a5 + 16);
  if (!v8) {
    return 1;
  }
  uint64_t v12 = *(void *)(a4 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t result = swift_retain();
  if (!v12) {
    goto LABEL_21;
  }
  unint64_t v14 = 0;
  uint64_t v15 = (unsigned int *)(a4 + 40);
  while (v8 != v14)
  {
    uint64_t v16 = *((void *)v15 - 1);
    uint64_t v17 = *v15;
    ++v14;
    uint64_t v18 = swift_bridgeObjectRetain();
    if (a1(v18, v17) & 1) == 0 || (sub_100010004(v16, v17, a6))
    {
LABEL_9:
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    uint64_t v19 = a7[1];
    uint64_t v20 = v19 + 32;
    uint64_t v21 = *(void *)(v19 + 16);
    if (*a7)
    {
      sub_1000CE1DC(v16, v17, v20, v21, (void *)(*a7 + 16));
      if ((v22 & 1) == 0) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1000CE0E8(v16, v17, v20, v21);
      if ((v23 & 1) == 0) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRetain();
    sub_1000A7364(0xC002u, v16, v17);
    swift_bridgeObjectRelease();
    uint64_t v24 = *(void *)(a7[1] + 16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v24 >= a8)
    {
      uint64_t v25 = 0;
LABEL_17:
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v25;
    }
LABEL_10:
    if (v14 >= v8)
    {
      uint64_t v25 = 1;
      goto LABEL_17;
    }
    v15 += 4;
    if (v12 == v14) {
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

BOOL sub_1000A77F4(uint64_t a1, unsigned int a2, __int16 a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void), uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (sub_100010004(a1, a2, a4)) {
    return 1;
  }
  uint64_t v22 = a5[1];
  uint64_t v23 = v22 + 32;
  uint64_t v24 = *(void *)(v22 + 16);
  if (*a5)
  {
    sub_1000CE1DC(a1, a2, v23, v24, (void *)(*a5 + 16));
    if ((v25 & 1) == 0) {
      return 1;
    }
  }
  else
  {
    sub_1000CE0E8(a1, a2, v23, v24);
    if ((v27 & 1) == 0) {
      return 1;
    }
  }
  unsigned __int16 v28 = -16383;
  __int16 v29 = -16384;
  switch((char)a3)
  {
    case 5:
      char v30 = sub_10009E48C(a1, a2, a6, a7, a8);
      if (v30 == 2 || (v30)
        && (uint64_t v31 = sub_10009F344(a9, a10), v32 = sub_100010004(a1, a2, v31), swift_bridgeObjectRelease(), (v32 & 1) == 0))
      {
        if (*(void *)(a12 + 16) && (sub_100024264(a1, a2), (v39 & 1) != 0))
        {
          unsigned __int16 v28 = 16385;
        }
        else if (sub_100010004(a1, a2, a13))
        {
          unsigned __int16 v28 = 16386;
        }
        else
        {
          unsigned __int16 v28 = 16387;
        }
      }
      else
      {
        unsigned __int16 v28 = 0x4000;
      }
      goto LABEL_22;
    case 6:
      goto LABEL_21;
    case 7:
      char v36 = sub_10009E48C(a1, a2, a6, a7, a8);
      if (v36 == 2 || (v36)
        && (v37 = sub_10009F344(a9, a10), char v38 = sub_100010004(a1, a2, v37), swift_bridgeObjectRelease(), (v38 & 1) == 0))
      {
        if (*(void *)(a12 + 16) && (sub_100024264(a1, a2), (v41 & 1) != 0))
        {
          unsigned __int16 v28 = -32767;
        }
        else if (sub_100010004(a1, a2, a13))
        {
          unsigned __int16 v28 = -32766;
        }
        else
        {
          unsigned __int16 v28 = -32765;
        }
      }
      else
      {
        unsigned __int16 v28 = 0x8000;
      }
      goto LABEL_22;
    case 8:
      goto LABEL_22;
    case 9:
      unsigned __int16 v28 = -16382;
      goto LABEL_22;
    case 10:
      __int16 v29 = -16381;
LABEL_21:
      unsigned __int16 v28 = v29;
      if ((a15 & 1) == 0) {
        goto LABEL_22;
      }
      goto LABEL_23;
    default:
      char v33 = sub_10009E48C(a1, a2, a6, a7, a8);
      if (v33 == 2 || (v33)
        && (v34 = sub_10009F344(a9, a10), char v35 = sub_100010004(a1, a2, v34), swift_bridgeObjectRelease(), (v35 & 1) == 0))
      {
        if (*(void *)(a12 + 16) && (sub_100024264(a1, a2), (v40 & 1) != 0))
        {
          unsigned __int16 v28 = (a3 << 8) | 1;
        }
        else
        {
          if (sub_100010004(a1, a2, a13)) {
            unsigned __int8 v42 = 2;
          }
          else {
            unsigned __int8 v42 = 3;
          }
          unsigned __int16 v28 = v42 | (unsigned __int16)(a3 << 8);
        }
      }
      else
      {
        unsigned __int16 v28 = a3 << 8;
      }
LABEL_22:
      swift_bridgeObjectRetain();
      sub_1000A7364(v28, a1, a2);
      swift_bridgeObjectRelease();
LABEL_23:
      BOOL result = *(void *)(a5[1] + 16) < a14;
      break;
  }
  return result;
}

uint64_t sub_1000A7B74(uint64_t a1, char a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void), uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15 = (char *)_swiftEmptyArrayStorage;
  uint64_t v154 = sub_1000A74CC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v155 = v16;
  uint64_t v156 = v17;
  uint64_t v146 = swift_allocObject();
  *(void *)(v146 + 16) = 0;
  *(void *)(swift_allocObject() + 16) = a11;
  uint64_t v18 = *(void *)(a7 + 16);
  uint64_t v19 = a6;
  swift_bridgeObjectRetain_n();
  uint64_t v148 = a5;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  uint64_t v152 = a6;
  uint64_t v150 = a7;
  if (!v18)
  {
    uint64_t v21 = 0;
    goto LABEL_28;
  }
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = &_swiftEmptyArrayStorage[4];
  uint64_t v23 = v19 + 40;
  uint64_t v151 = v19 + 40;
  do
  {
    uint64_t v24 = (unsigned int *)(v23 + 16 * v20);
    uint64_t v25 = a11;
    while (1)
    {
      if ((unint64_t)v20 >= *(void *)(v152 + 16))
      {
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
LABEL_178:
        __break(1u);
        goto LABEL_179;
      }
      if (*(void *)(v25 + 16))
      {
        unsigned int v26 = *v24;
        uint64_t v27 = *((void *)v24 - 1);
        unint64_t v28 = sub_100024264(v27, *v24);
        uint64_t v25 = a11;
        if (v29) {
          break;
        }
      }
      ++v20;
      v24 += 4;
      if (v20 >= v18)
      {
        uint64_t v19 = v152;
        goto LABEL_28;
      }
    }
    char v149 = *(unsigned char *)(*(void *)(a11 + 56) + v28);
    if (v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = v152;
      goto LABEL_23;
    }
    unint64_t v30 = *((void *)v15 + 3);
    if ((uint64_t)((v30 >> 1) + 0x4000000000000000) < 0) {
      goto LABEL_183;
    }
    int64_t v31 = v30 & 0xFFFFFFFFFFFFFFFELL;
    if (v31 <= 1) {
      uint64_t v32 = 1;
    }
    else {
      uint64_t v32 = v31;
    }
    sub_10000566C(&qword_10070B820);
    char v33 = (char *)swift_allocObject();
    int64_t v34 = j__malloc_size(v33);
    uint64_t v35 = v34 - 32;
    if (v34 < 32) {
      uint64_t v35 = v34 - 17;
    }
    uint64_t v36 = v35 >> 4;
    *((void *)v33 + 2) = v32;
    *((void *)v33 + 3) = 2 * v36;
    uint64_t v37 = v33 + 32;
    uint64_t v38 = *((void *)v15 + 3) >> 1;
    size_t v39 = 16 * v38;
    uint64_t v21 = (v36 & 0x7FFFFFFFFFFFFFFFLL) - v38;
    uint64_t v22 = (uint64_t *)&v33[16 * v38 + 32];
    if (*((void *)v15 + 2))
    {
      char v40 = v15 + 32;
      if (v33 != v15 || v37 >= &v40[v39]) {
        memmove(v37, v40, v39);
      }
      swift_bridgeObjectRetain();
      *((void *)v15 + 2) = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_release();
    uint64_t v15 = v33;
    uint64_t v19 = v152;
LABEL_23:
    BOOL v41 = __OFSUB__(v21--, 1);
    uint64_t v23 = v151;
    if (v41) {
      goto LABEL_180;
    }
    ++v20;
    *uint64_t v22 = v27;
    *((_DWORD *)v22 + 2) = v26;
    *((unsigned char *)v22 + 12) = v149;
    v22 += 2;
  }
  while (v20 < v18);
LABEL_28:
  swift_release();
  swift_release();
  swift_release();
  uint64_t v42 = v19;
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v43 = *((void *)v15 + 3);
  if (v43 < 2) {
    goto LABEL_31;
  }
  unint64_t v44 = v43 >> 1;
  BOOL v41 = __OFSUB__(v44, v21);
  uint64_t v45 = v44 - v21;
  if (v41)
  {
LABEL_179:
    __break(1u);
LABEL_180:
    __break(1u);
    __break(1u);
LABEL_181:
    __break(1u);
LABEL_182:
    __break(1u);
    __break(1u);
LABEL_183:
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  *((void *)v15 + 2) = v45;
  uint64_t v42 = v152;
LABEL_31:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  long long v153 = v15;
  sub_10009F3CC(&v153);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v46 = v153[2];
  uint64_t v47 = v42;
  if (!v46)
  {
LABEL_71:
    swift_release();
    uint64_t v77 = *(void *)(v150 + 16);
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    if (v77)
    {
      unint64_t v78 = 0;
      long long v79 = (unsigned int *)(v47 + 40);
      do
      {
        if (v78 >= *(void *)(v47 + 16)) {
          goto LABEL_166;
        }
        if (v78 >= *(void *)(v150 + 16)) {
          goto LABEL_167;
        }
        if (*(unsigned char *)(v150 + v78 + 32) != 1)
        {
          uint64_t v81 = *((void *)v79 - 1);
          unsigned int v82 = *v79;
          if ((sub_100010004(v81, *v79, a10) & 1) == 0)
          {
            uint64_t v83 = v155;
            uint64_t v84 = v155 + 32;
            uint64_t v85 = *(void *)(v155 + 16);
            if (v154)
            {
              sub_1000CE1DC(v81, v82, v84, v85, (void *)(v154 + 16));
              if ((v86 & 1) == 0) {
                goto LABEL_74;
              }
            }
            else
            {
              sub_1000CE0E8(v81, v82, v84, v85);
              if ((v87 & 1) == 0) {
                goto LABEL_74;
              }
            }
            swift_bridgeObjectRetain();
            if ((a2 & 1) == 0)
            {
              sub_1000A7364(0xC000u, v81, v82);
              uint64_t v83 = v155;
            }
            uint64_t v80 = *(void *)(v83 + 16);
            swift_bridgeObjectRelease();
            if (v80 >= a1)
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_release_n();
              swift_release_n();
              goto LABEL_163;
            }
          }
        }
LABEL_74:
        ++v78;
        v79 += 4;
        uint64_t v47 = v152;
      }
      while (v77 != v78);
    }
    swift_release_n();
    swift_release_n();
    swift_release_n();
    *(void *)(swift_allocObject() + 16) = a12;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    if (v77)
    {
      unint64_t v88 = 0;
      uint64_t v89 = v47 + 32;
      uint64_t v90 = (unsigned int *)(v47 + 40);
      while (1)
      {
        if (v88 >= *(void *)(v47 + 16)) {
          goto LABEL_168;
        }
        if (v88 >= *(void *)(v150 + 16)) {
          goto LABEL_169;
        }
        uint64_t v95 = *((void *)v90 - 1);
        unsigned int v96 = *v90;
        if ((sub_100010004(v95, *v90, a12) & 1) != 0 && (sub_100010004(v95, v96, a10) & 1) == 0) {
          break;
        }
LABEL_91:
        ++v88;
        v90 += 4;
        if (v77 == v88) {
          goto LABEL_114;
        }
      }
      uint64_t v97 = v155 + 32;
      uint64_t v98 = *(void *)(v155 + 16);
      if (v154)
      {
        sub_1000CE1DC(v95, v96, v97, v98, (void *)(v154 + 16));
        if ((v99 & 1) == 0) {
          goto LABEL_91;
        }
      }
      else
      {
        sub_1000CE0E8(v95, v96, v97, v98);
        if ((v100 & 1) == 0) {
          goto LABEL_91;
        }
      }
      uint64_t v101 = *(void *)(v47 + 16);
      if (v148)
      {
        unint64_t v102 = sub_1000CE1DC(v95, v96, v89, v101, (void *)(v148 + 16));
        if (v103) {
          goto LABEL_107;
        }
      }
      else
      {
        unint64_t v102 = sub_1000CE0E8(v95, v96, v89, v101);
        if (v104) {
          goto LABEL_107;
        }
      }
      if ((v102 & 0x8000000000000000) != 0) {
        goto LABEL_176;
      }
      if (v102 >= *(void *)(v150 + 16)) {
        goto LABEL_177;
      }
      if ((*(unsigned char *)(v150 + 32 + v102) & 1) == 0)
      {
        swift_bridgeObjectRetain();
        goto LABEL_88;
      }
LABEL_107:
      swift_bridgeObjectRetain();
      uint64_t v105 = sub_10009F344(v146, a8);
      char v106 = sub_100010004(v95, v96, v105);
      swift_bridgeObjectRelease();
      if ((v106 & 1) == 0)
      {
        if (*(void *)(a11 + 16) && (sub_100024264(v95, v96), (v107 & 1) != 0))
        {
          unsigned __int8 v91 = 1;
        }
        else if (sub_100010004(v95, v96, a12))
        {
          unsigned __int8 v91 = 2;
        }
        else
        {
          unsigned __int8 v91 = 3;
        }
LABEL_89:
        unsigned __int16 v92 = v91 | 0x4000;
        swift_bridgeObjectRetain();
        sub_1000A7364(v92, v95, v96);
        swift_bridgeObjectRelease();
        uint64_t v93 = *(void *)(v155 + 16);
        swift_bridgeObjectRelease();
        BOOL v94 = v93 < a1;
        uint64_t v47 = v152;
        if (!v94)
        {
          swift_release();
          swift_release_n();
          swift_release_n();
          swift_release_n();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return v154;
        }
        goto LABEL_91;
      }
LABEL_88:
      unsigned __int8 v91 = 0;
      goto LABEL_89;
    }
LABEL_114:
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    uint64_t v108 = swift_bridgeObjectRelease();
    uint64_t v109 = v152;
    uint64_t v110 = a3(v108);
    *(void *)(swift_allocObject() + 16) = v110;
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v77)
    {
      unint64_t v111 = 0;
      uint64_t v143 = v152 + 32;
      long long v112 = (unsigned int *)(v152 + 40);
      do
      {
        if (v111 >= *(void *)(v109 + 16)) {
          goto LABEL_170;
        }
        if (v111 >= *(void *)(v150 + 16)) {
          goto LABEL_171;
        }
        uint64_t v113 = *((void *)v112 - 1);
        unsigned int v114 = *v112;
        uint64_t v115 = swift_bridgeObjectRetain();
        uint64_t v116 = MailboxesSelectionUsage.subscript.getter(v115, v114, v110);
        BOOL v118 = (v117 & 0x101) != 1 || v116 == 0;
        if (v118 || (v116 != 1 ? (int v119 = 7) : (int v119 = 8), (sub_100010004(v113, v114, a10) & 1) != 0))
        {
LABEL_123:
          swift_bridgeObjectRelease();
          goto LABEL_124;
        }
        uint64_t v120 = v155 + 32;
        uint64_t v121 = *(void *)(v155 + 16);
        if (v154)
        {
          sub_1000CE1DC(v113, v114, v120, v121, (void *)(v154 + 16));
          if ((v122 & 1) == 0) {
            goto LABEL_123;
          }
        }
        else
        {
          sub_1000CE0E8(v113, v114, v120, v121);
          if ((v123 & 1) == 0) {
            goto LABEL_123;
          }
        }
        if (v119 != 7)
        {
          unsigned __int16 v124 = -16383;
          goto LABEL_151;
        }
        uint64_t v125 = *(void *)(v109 + 16);
        if (v148)
        {
          unint64_t v126 = sub_1000CE1DC(v113, v114, v143, v125, (void *)(v148 + 16));
          if (v127) {
            goto LABEL_143;
          }
        }
        else
        {
          unint64_t v126 = sub_1000CE0E8(v113, v114, v143, v125);
          if (v128) {
            goto LABEL_143;
          }
        }
        if ((v126 & 0x8000000000000000) != 0) {
          goto LABEL_181;
        }
        if (v126 >= *(void *)(v150 + 16)) {
          goto LABEL_182;
        }
        if (*(unsigned char *)(v150 + 32 + v126) != 1)
        {
LABEL_144:
          unsigned __int16 v124 = 0x8000;
          goto LABEL_151;
        }
LABEL_143:
        uint64_t v129 = sub_10009F344(v146, a8);
        char v130 = sub_100010004(v113, v114, v129);
        swift_bridgeObjectRelease();
        if (v130) {
          goto LABEL_144;
        }
        if (*(void *)(a11 + 16) && (sub_100024264(v113, v114), (v131 & 1) != 0))
        {
          unsigned __int16 v124 = -32767;
        }
        else if (sub_100010004(v113, v114, a12))
        {
          unsigned __int16 v124 = -32766;
        }
        else
        {
          unsigned __int16 v124 = -32765;
        }
LABEL_151:
        swift_bridgeObjectRetain();
        sub_1000A7364(v124, v113, v114);
        swift_bridgeObjectRelease();
        uint64_t v132 = *(void *)(v155 + 16);
        swift_bridgeObjectRelease();
        BOOL v94 = v132 < a1;
        uint64_t v109 = v152;
        if (!v94)
        {
          swift_release();
          swift_release_n();
          swift_release_n();
          swift_release_n();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_163;
        }
LABEL_124:
        ++v111;
        v112 += 4;
      }
      while (v77 != v111);
    }
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease();
    uint64_t v133 = (void *)swift_allocObject();
    v133[2] = v146;
    v133[3] = a8;
    v133[4] = a9;
    uint64_t v134 = swift_allocObject();
    *(void *)(v134 + 16) = sub_1000A9540;
    *(void *)(v134 + 24) = v133;
    swift_retain();
    swift_retain();
    char v135 = sub_1000A7634((uint64_t (*)(uint64_t, uint64_t))sub_1000A95D4, v134, v148, v109, v150, a10, &v154, a1);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      if (v135)
      {
        if (*(void *)(v152 + 16))
        {
          unsigned int v137 = *(_DWORD *)(v152 + 40);
          uint64_t v138 = swift_bridgeObjectRetain();
          sub_1000A77F4(v138, v137, 10, a10, &v154, v148, v152, v150, v146, a8, a9, a11, a12, a1, a2 & 1);
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
      swift_release();
      swift_release();
      return v154;
    }
    goto LABEL_178;
  }
  uint64_t v142 = v42 + 32;
  uint64_t v48 = (unsigned __int8 *)v153 + 44;
  while (1)
  {
    uint64_t v53 = *(void *)(v48 - 12);
    unsigned int v54 = *((_DWORD *)v48 - 1);
    __int16 v55 = *v48;
    if (sub_100010004(v53, v54, a10)) {
      goto LABEL_37;
    }
    uint64_t v56 = v154;
    uint64_t v51 = v155;
    uint64_t v76 = v156;
    uint64_t v57 = *(void *)(v155 + 16);
    if (v154)
    {
      sub_1000CE1DC(v53, v54, v155 + 32, v57, (void *)(v154 + 16));
      if ((v58 & 1) == 0) {
        goto LABEL_37;
      }
    }
    else
    {
      sub_1000CE0E8(v53, v54, v155 + 32, v57);
      if ((v59 & 1) == 0) {
        goto LABEL_37;
      }
    }
    uint64_t v60 = *(void *)(v47 + 16);
    if (v148)
    {
      unint64_t v61 = sub_1000CE1DC(v53, v54, v142, v60, (void *)(v148 + 16));
      if (v62) {
        goto LABEL_50;
      }
    }
    else
    {
      unint64_t v61 = sub_1000CE0E8(v53, v54, v142, v60);
      if (v63) {
        goto LABEL_50;
      }
    }
    if ((v61 & 0x8000000000000000) != 0) {
      goto LABEL_172;
    }
    if (v61 >= *(void *)(v150 + 16)) {
      goto LABEL_174;
    }
    if ((*(unsigned char *)(v150 + 32 + v61) & 1) == 0)
    {
      swift_bridgeObjectRetain();
      unsigned __int8 v66 = 0;
      goto LABEL_60;
    }
LABEL_50:
    __int16 v144 = v55;
    swift_bridgeObjectRetain();
    uint64_t v64 = sub_10009F344(v146, a8);
    char v65 = sub_100010004(v53, v54, v64);
    swift_bridgeObjectRelease();
    if (v65)
    {
      unsigned __int8 v66 = 0;
      __int16 v55 = v144;
    }
    else if (*(void *)(a11 + 16) && (sub_100024264(v53, v54), (v67 & 1) != 0))
    {
      unsigned __int8 v66 = 1;
      __int16 v55 = v144;
    }
    else
    {
      unsigned __int8 v66 = (sub_100010004(v53, v54, a12) & 1) != 0 ? 2 : 3;
      __int16 v55 = v144;
    }
LABEL_60:
    __int16 v68 = v66 | (unsigned __int16)(v55 << 8);
    uint64_t v69 = *(void *)(v51 + 16);
    if (v56)
    {
      Swift::Int v70 = sub_1000CE1DC(v53, v54, v51 + 32, v69, (void *)(v56 + 16));
      if (v71) {
        goto LABEL_69;
      }
    }
    else
    {
      Swift::Int v70 = sub_1000CE0E8(v53, v54, v51 + 32, v69);
      if (v72)
      {
LABEL_69:
        uint64_t v74 = swift_bridgeObjectRetain();
        sub_1000A3CE4(v74, v54);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v156 = v76;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10001A854(0, *(void *)(v76 + 16) + 1, 1);
          uint64_t v76 = v156;
        }
        uint64_t v47 = v152;
        unint64_t v50 = *(void *)(v76 + 16);
        unint64_t v49 = *(void *)(v76 + 24);
        if (v50 >= v49 >> 1)
        {
          sub_10001A854(v49 > 1, v50 + 1, 1);
          uint64_t v47 = v152;
          uint64_t v76 = v156;
        }
        *(void *)(v76 + 16) = v50 + 1;
        *(_WORD *)(v76 + 2 * v50 + 32) = v68;
        swift_bridgeObjectRelease();
        uint64_t v51 = v155;
        goto LABEL_36;
      }
    }
    unint64_t v73 = v70;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v76 = sub_1000A4C8C(v76);
    }
    if ((v73 & 0x8000000000000000) != 0) {
      goto LABEL_173;
    }
    if (v73 >= *(void *)(v76 + 16)) {
      goto LABEL_175;
    }
    *(_WORD *)(v76 + 2 * v73 + 32) = v68;
    swift_bridgeObjectRelease();
    uint64_t v47 = v152;
LABEL_36:
    uint64_t v156 = v76;
    uint64_t v52 = *(void *)(v51 + 16);
    swift_bridgeObjectRelease();
    if (v52 >= a1) {
      break;
    }
LABEL_37:
    v48 += 16;
    if (!--v46) {
      goto LABEL_71;
    }
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_163:
  swift_bridgeObjectRelease();
  return v154;
}

void sub_1000A8CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, long long *a6)
{
  uint64_t v10 = a5[3];
  if (v10)
  {
    uint64_t v11 = a5[2];
    uint64_t v12 = a5[4];
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000A9450(v11, v10);
    if (sub_10007E0F8(a1, a2, v11, v10))
    {
      char v13 = sub_10007DFC8(v12, a3);
      swift_release();
      swift_release();
      swift_release();
      sub_1000A6FC4(v11, v10);
      if (v13) {
        return;
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      sub_1000A6FC4(v11, v10);
    }
  }
  uint64_t v14 = a5[2];
  uint64_t v15 = a5[3];
  a5[2] = a1;
  a5[3] = a2;
  a5[4] = a3;
  sub_1000A6FC4(v14, v15);
  uint64_t v16 = *(void *)(a3 + 16);
  if (v16)
  {
    uint64_t v34 = *(void *)(a2 + 16);
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    uint64_t v17 = 0;
    uint64_t v18 = (unsigned int *)(a2 + 40);
    uint64_t v33 = v16;
    do
    {
      if (v34 == v17)
      {
        __break(1u);
        JUMPOUT(0x1000A9378);
      }
      unsigned int v19 = *(unsigned __int16 *)(a3 + 32 + 2 * v17);
      uint64_t v20 = v17 + 1;
      sub_100040598(*((void *)v18 - 1), *v18, a6);
      if (!v21) {
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v22 = sub_1005E0EB0();
      os_log_type_t v23 = sub_1005E25C0();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = swift_slowAlloc();
        v37[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 68159491;
        sub_1005E2960();
        *(_WORD *)(v24 + 8) = 512;
        sub_1005E2960();
        *(_WORD *)(v24 + 12) = 2160;
        sub_1005E2960();
        *(_WORD *)(v24 + 22) = 2085;
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_1005E1CC0();
        sub_1000C6914(v25, v26, v37);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 32) = 256;
        sub_1005E2960();
        *(_WORD *)(v24 + 35) = 256;
        sub_1005E2960();
        *(_WORD *)(v24 + 38) = 2082;
        uint64_t v27 = sub_1005E1CC0();
        sub_1000C6914(v27, v28, v37);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 48) = 2082;
        switch(v19 >> 14)
        {
          case 0u:
          case 1u:
          case 2u:
          case 3u:
            uint64_t v29 = sub_1005E1CC0();
            sub_1000C6914(v29, v30, v37);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v22, v23, "[{%.*hx}%{sensitive,mask.mailbox}s] [MailboxesToSelect] %hhu/%hhu: %{public}s - %{public}s", (uint8_t *)v24, 0x3Au);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v16 = v33;
            break;
          default:
            JUMPOUT(0);
        }
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
      v18 += 4;
      uint64_t v17 = v20;
    }
    while (v16 != v20);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v36 = sub_1005E0EB0();
    os_log_type_t v31 = sub_1005E25C0();
    if (os_log_type_enabled(v36, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 68157952;
      sub_1005E2960();
      *(_WORD *)(v32 + 8) = 256;
      sub_1005E2960();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v36, v31, "[%.*hhx] [MailboxesToSelect] None.", (uint8_t *)v32, 0xBu);
      swift_slowDealloc();
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1000A9398(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000A93F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000A9450(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

void *sub_1000A949C()
{
  return sub_1000D3B0C(*(void *)(v0 + 32));
}

void *sub_1000A94C8()
{
  return sub_10009E8FC(*(long long **)(v0 + 16));
}

uint64_t sub_1000A94D0()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A9508()
{
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000A9540(uint64_t a1, unsigned int a2)
{
  uint64_t v5 = sub_10009F344(*(void *)(v2 + 16), *(uint64_t (**)(void))(v2 + 24));
  LOBYTE(a2) = sub_100010004(a1, a2, v5);
  swift_bridgeObjectRelease();
  return a2 & 1;
}

uint64_t sub_1000A959C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000A95D4()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1000A9600()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_10000F0D4(*(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192), *(unsigned char *)(v0 + 200));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 272, 7);
}

uint64_t sub_1000A9694(uint64_t a1)
{
  return a1;
}

uint64_t _s17MailboxesToSelectV6ReasonO4KindOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF6)
  {
    unsigned int v2 = a2 + 10;
    if (a2 + 10 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 10;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 10;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1000A97A8);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 10;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 5) {
    unsigned int v8 = v7 - 4;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 7) {
    return v8 - 6;
  }
  else {
    return 0;
  }
}

unsigned char *_s17MailboxesToSelectV6ReasonO4KindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 10;
  if (a3 + 10 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF6) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v7 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1000A9890);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

uint64_t sub_1000A98B8(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 5) {
    return v1 - 4;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1000A98CC(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 4;
  }
  return result;
}

ValueMetadata *_s17MailboxesToSelectV6ReasonO4KindOMa()
{
  return &_s17MailboxesToSelectV6ReasonO4KindON;
}

unsigned char *_s17MailboxesToSelectV6ReasonO4WorkOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A99B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s17MailboxesToSelectV6ReasonO4WorkOMa()
{
  return &_s17MailboxesToSelectV6ReasonO4WorkON;
}

unsigned char *_s11UserVisibleOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A9ABCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11UserVisibleOMa()
{
  return &_s11UserVisibleON;
}

uint64_t _s17MailboxesToSelectV6ReasonOwet(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7FD) {
    goto LABEL_17;
  }
  if (a2 + 63491 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 63491 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 63491;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 63491;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 63491;
    }
  }
LABEL_17:
  unsigned int v6 = (*a1 & 0xFC | (*a1 >> 14) | (*a1 >> 3) & 0x700) ^ 0x7FF;
  if (v6 >= 0x7FC) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

uint64_t _s17MailboxesToSelectV6ReasonOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 63491 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 63491 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7FD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7FC)
  {
    unsigned int v6 = ((a2 - 2045) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 2045;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A9C80);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2)
        {
LABEL_18:
          unsigned int v7 = ((-a2 >> 2) & 0x1FF) - (a2 << 9);
          *(_WORD *)uint64_t result = (32 * v7) & 0xF800 | (4 * (v7 & 0x3F));
        }
        break;
    }
  }
  return result;
}

uint64_t sub_1000A9CA8(unsigned __int16 *a1)
{
  unsigned int v1 = *a1;
  unsigned int v2 = v1 >> 14;
  unsigned int v3 = (v1 & 3 | (4 * ((v1 >> 8) & 7))) + 3;
  if (v2 == 3) {
    return v3;
  }
  else {
    return v2;
  }
}

_WORD *sub_1000A9CCC(_WORD *result)
{
  *result &= 0x3FFFu;
  return result;
}

_WORD *sub_1000A9CDC(_WORD *result, unsigned int a2)
{
  if (a2 < 3) {
    *uint64_t result = *result & 0x703 | ((_WORD)a2 << 14);
  }
  else {
    *uint64_t result = (((_WORD)a2 - 3) << 6) & 0x700 | (a2 - 3) & 3 | 0xC000;
  }
  return result;
}

ValueMetadata *_s17MailboxesToSelectV6ReasonOMa()
{
  return &_s17MailboxesToSelectV6ReasonON;
}

unint64_t sub_1000A9D28()
{
  unint64_t result = qword_10070B920;
  if (!qword_10070B920)
  {
    sub_10000744C(&qword_10070B928);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B920);
  }
  return result;
}

unint64_t sub_1000A9D88()
{
  unint64_t result = qword_10070B930;
  if (!qword_10070B930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B930);
  }
  return result;
}

unint64_t sub_1000A9DE0()
{
  unint64_t result = qword_10070B938;
  if (!qword_10070B938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B938);
  }
  return result;
}

unint64_t sub_1000A9E38()
{
  unint64_t result = qword_10070B940;
  if (!qword_10070B940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B940);
  }
  return result;
}

uint64_t sub_1000A9E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1000A9EAC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v28 = *(void *)(a1 + 16);
    sub_10001A8D4(0, v1, 0);
    uint64_t v3 = sub_100103FD8(a1);
    uint64_t v5 = v28;
    uint64_t v4 = a1;
    uint64_t v6 = 0;
    uint64_t v7 = a1 + 64;
    char v8 = *(unsigned char *)(a1 + 32);
    uint64_t v9 = a1 + 80;
    while ((v3 & 0x8000000000000000) == 0 && v3 < 1 << v8)
    {
      unint64_t v11 = (unint64_t)v3 >> 6;
      if ((*(void *)(v7 + 8 * ((unint64_t)v3 >> 6)) & (1 << v3)) == 0) {
        goto LABEL_27;
      }
      if (*(_DWORD *)(v4 + 36) != v2) {
        goto LABEL_28;
      }
      ++v6;
      int v12 = *(_DWORD *)(*(void *)(v4 + 48) + 4 * v3);
      char v13 = v3 & 0x3F;
      unint64_t v14 = 0xE800000000000000;
      uint64_t v15 = 0x6369646F69726570;
      switch(*(unsigned char *)(*(void *)(v4 + 56) + 32 * v3))
      {
        case 1:
          unint64_t v14 = 0xE400000000000000;
          uint64_t v15 = 1752397168;
          break;
        case 2:
          unint64_t v14 = 0xED00006465746169;
          uint64_t v15 = 0x74696E4972657375;
          break;
        case 3:
          uint64_t v15 = 0x6C6C69466B636162;
          break;
        default:
          break;
      }
      unint64_t v17 = _swiftEmptyArrayStorage[2];
      unint64_t v16 = _swiftEmptyArrayStorage[3];
      if (v17 >= v16 >> 1)
      {
        uint64_t v25 = v9;
        uint64_t v26 = v6;
        uint64_t v27 = v2;
        sub_10001A8D4(v16 > 1, v17 + 1, 1);
        char v13 = v3 & 0x3F;
        uint64_t v9 = v25;
        uint64_t v6 = v26;
        uint64_t v2 = v27;
        uint64_t v5 = v28;
        uint64_t v4 = a1;
      }
      _swiftEmptyArrayStorage[2] = v17 + 1;
      uint64_t v18 = &_swiftEmptyArrayStorage[3 * v17];
      *((_DWORD *)v18 + 8) = v12;
      v18[5] = v15;
      v18[6] = v14;
      char v8 = *(unsigned char *)(v4 + 32);
      unint64_t v10 = 1 << v8;
      if (v3 >= 1 << v8) {
        goto LABEL_29;
      }
      uint64_t v19 = *(void *)(v7 + 8 * v11);
      if ((v19 & (1 << v3)) == 0) {
        goto LABEL_30;
      }
      if (*(_DWORD *)(v4 + 36) != v2) {
        goto LABEL_31;
      }
      unint64_t v20 = v19 & (-2 << v13);
      if (v20)
      {
        unint64_t v10 = __clz(__rbit64(v20)) | v3 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v21 = v11 + 1;
        unint64_t v22 = (v10 + 63) >> 6;
        if (v11 + 1 < v22)
        {
          unint64_t v23 = *(void *)(v7 + 8 * v21);
          if (v23)
          {
LABEL_24:
            unint64_t v10 = __clz(__rbit64(v23)) + (v21 << 6);
          }
          else
          {
            while (v22 - 2 != v11)
            {
              unint64_t v23 = *(void *)(v9 + 8 * v11++);
              if (v23)
              {
                unint64_t v21 = v11 + 1;
                goto LABEL_24;
              }
            }
          }
        }
      }
      uint64_t v3 = v10;
      if (v6 == v5) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    JUMPOUT(0x1000AA138);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1000AA148(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = a1;
  sub_10001A8B4(0, v1, 0);
  uint64_t result = (void *)sub_100103FD8(v2);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = v2 + 64;
  uint64_t v24 = v2 + 80;
  int64_t v25 = v1;
  int v26 = v4;
  uint64_t v27 = v2 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(v2 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v2 + 36) != v4) {
      goto LABEL_24;
    }
    uint64_t v28 = v6;
    uint64_t v29 = *(unsigned __int16 *)(*(void *)(v2 + 56) + 2 * v5);
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = OpaqueMailboxID.description.getter(v11);
    uint64_t v14 = v13;
    uint64_t result = (void *)swift_bridgeObjectRelease();
    uint64_t v15 = v2;
    unint64_t v17 = _swiftEmptyArrayStorage[2];
    unint64_t v16 = _swiftEmptyArrayStorage[3];
    if (v17 >= v16 >> 1) {
      uint64_t result = (void *)sub_10001A8B4(v16 > 1, v17 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v17 + 1;
    uint64_t v18 = &_swiftEmptyArrayStorage[3 * v17];
    unsigned char v18[4] = v12;
    v18[5] = v14;
    v18[6] = v29;
    int64_t v8 = 1 << *(unsigned char *)(v15 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = v27;
    uint64_t v19 = *(void *)(v27 + 8 * v10);
    if ((v19 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    uint64_t v2 = v15;
    int v4 = v26;
    if (*(_DWORD *)(v15 + 36) != v26) {
      goto LABEL_27;
    }
    unint64_t v20 = v19 & (-2 << (v5 & 0x3F));
    if (v20)
    {
      int64_t v8 = __clz(__rbit64(v20)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v25;
    }
    else
    {
      unint64_t v21 = v10 + 1;
      unint64_t v22 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v25;
      if (v10 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v27 + 8 * v21);
        if (v23)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v10)
          {
            unint64_t v23 = *(void *)(v24 + 8 * v10++);
            if (v23)
            {
              unint64_t v21 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v6 = v28 + 1;
    uint64_t v5 = v8;
    if (v28 + 1 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1000AA388(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v23 = *(void *)(a1 + 16);
  sub_10001A8F4(0, v1, 0);
  uint64_t result = (void *)sub_1000D3A58(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = v23;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  uint64_t v9 = a1 + 88;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v5 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_26;
    }
    int v12 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v5);
    unint64_t v14 = _swiftEmptyArrayStorage[2];
    unint64_t v13 = _swiftEmptyArrayStorage[3];
    if (v14 >= v13 >> 1)
    {
      uint64_t v21 = v8;
      uint64_t v22 = v4;
      uint64_t v20 = v9;
      uint64_t result = (void *)sub_10001A8F4(v13 > 1, v14 + 1, 1);
      uint64_t v9 = v20;
      uint64_t v8 = v21;
      uint64_t v4 = v22;
      uint64_t v6 = v23;
    }
    _swiftEmptyArrayStorage[2] = v14 + 1;
    *((_DWORD *)&_swiftEmptyArrayStorage[4] + v14) = v12;
    int64_t v10 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v10) {
      goto LABEL_27;
    }
    uint64_t v15 = *(void *)(v8 + 8 * v11);
    if ((v15 & (1 << v5)) == 0) {
      goto LABEL_28;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_29;
    }
    unint64_t v16 = v15 & (-2 << (v5 & 0x3F));
    if (v16)
    {
      int64_t v10 = __clz(__rbit64(v16)) | v5 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v17 = v11 + 1;
      unint64_t v18 = (unint64_t)(v10 + 63) >> 6;
      if (v11 + 1 < v18)
      {
        unint64_t v19 = *(void *)(v8 + 8 * v17);
        if (!v19)
        {
          unint64_t v17 = v11 + 2;
          if (v11 + 2 >= v18) {
            goto LABEL_4;
          }
          unint64_t v19 = *(void *)(v8 + 8 * v17);
          if (!v19)
          {
            while (v18 - 3 != v11)
            {
              unint64_t v19 = *(void *)(v9 + 8 * v11++);
              if (v19)
              {
                unint64_t v17 = v11 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        int64_t v10 = __clz(__rbit64(v19)) + (v17 << 6);
      }
    }
LABEL_4:
    ++v7;
    uint64_t v5 = v10;
    if (v7 == v6) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1000AA598(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = a1;
  sub_10001A974(0, v1, 0);
  uint64_t result = (void *)sub_100103FD8(v2);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = v2 + 64;
  uint64_t v25 = v2 + 80;
  int64_t v26 = v1;
  int v27 = v4;
  uint64_t v28 = v2 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(v2 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    if (*(_DWORD *)(v2 + 36) != v4) {
      goto LABEL_27;
    }
    uint64_t v29 = v6;
    unint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v5);
    uint64_t v13 = *v11;
    unint64_t v12 = v11[1];
    uint64_t v14 = *(void *)(v2 + 56) + 24 * v5;
    int v31 = *(_DWORD *)v14;
    if (*(unsigned char *)(v14 + 16)) {
      uint64_t v15 = -1;
    }
    else {
      uint64_t v15 = *(void *)(v14 + 8);
    }
    uint64_t v30 = v15;
    uint64_t result = (void *)sub_100008D24(v13, v12);
    uint64_t v16 = v2;
    unint64_t v18 = _swiftEmptyArrayStorage[2];
    unint64_t v17 = _swiftEmptyArrayStorage[3];
    if (v18 >= v17 >> 1) {
      uint64_t result = (void *)sub_10001A974(v17 > 1, v18 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v18 + 1;
    unint64_t v19 = &_swiftEmptyArrayStorage[4 * v18];
    v19[4] = v13;
    v19[5] = v12;
    *((_DWORD *)v19 + 12) = v31;
    v19[7] = v30;
    int64_t v8 = 1 << *(unsigned char *)(v16 + 32);
    if (v5 >= v8) {
      goto LABEL_28;
    }
    uint64_t v7 = v28;
    uint64_t v20 = *(void *)(v28 + 8 * v10);
    if ((v20 & (1 << v5)) == 0) {
      goto LABEL_29;
    }
    uint64_t v2 = v16;
    int v4 = v27;
    if (*(_DWORD *)(v16 + 36) != v27) {
      goto LABEL_30;
    }
    unint64_t v21 = v20 & (-2 << (v5 & 0x3F));
    if (v21)
    {
      int64_t v8 = __clz(__rbit64(v21)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v26;
    }
    else
    {
      unint64_t v22 = v10 + 1;
      unint64_t v23 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v26;
      if (v10 + 1 < v23)
      {
        unint64_t v24 = *(void *)(v28 + 8 * v22);
        if (v24)
        {
LABEL_23:
          int64_t v8 = __clz(__rbit64(v24)) + (v22 << 6);
        }
        else
        {
          while (v23 - 2 != v10)
          {
            unint64_t v24 = *(void *)(v25 + 8 * v10++);
            if (v24)
            {
              unint64_t v22 = v10 + 1;
              goto LABEL_23;
            }
          }
        }
      }
    }
    uint64_t v6 = v29 + 1;
    uint64_t v5 = v8;
    if (v29 + 1 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void sub_1000AA7E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v22 = a2;
  uint64_t v4 = sub_10000566C(&qword_10070BE70);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000079E4((uint64_t)a1, (uint64_t)v7, &qword_10070AB18);
  uint64_t v8 = *a1;
  uint64_t v9 = *(int *)(v5 + 44);
  *(uint64_t *)((char *)v7 + v9) = *a1;
  uint64_t v10 = v7[1];
  if (v8 == v10)
  {
LABEL_11:
    sub_100007A48((uint64_t)v7, &qword_10070BE70);
  }
  else
  {
    uint64_t v19 = v9;
    uint64_t v21 = v2;
    uint64_t v11 = *v7;
    sub_10000566C(&qword_10070AB18);
    uint64_t v20 = v7;
    uint64_t v12 = v8;
    while (v8 >= v11 && v12 < v10)
    {
      sub_10000566C(&qword_10070AB10);
      MessageIdentifierSet.RangeView.subscript.getter();
      uint64_t v13 = v23[0];
      sub_10000566C(&qword_10070A8F8);
      uint64_t v14 = sub_1005E35B0();
      uint64_t v15 = sub_1005E35E0();
      if (v12 < v14 || v12 >= v15) {
        goto LABEL_13;
      }
      v23[0] = v13;
      sub_100064094();
      Range<>.init<A>(_:)((uint64_t)v23, (uint64_t)&type metadata for SequenceNumber);
      v23[4] = v16;
      if (HIDWORD(v16) != v16)
      {
        sub_10000566C(&qword_100709E60);
        unint64_t v17 = (void (*)(void *, void))sub_1005E3620();
        sub_1005E35D0();
        v17(v23, 0);
      }
      if (v10 == ++v12)
      {
        uint64_t v7 = v20;
        *(uint64_t *)((char *)v20 + v19) = v10;
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
  }
}

void sub_1000AA9F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v22 = a2;
  uint64_t v4 = sub_10000566C(&qword_10070BCC8);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000079E4((uint64_t)a1, (uint64_t)v7, &qword_10070A9D8);
  uint64_t v8 = *a1;
  uint64_t v9 = *(int *)(v5 + 44);
  *(uint64_t *)((char *)v7 + v9) = *a1;
  uint64_t v10 = v7[1];
  if (v8 == v10)
  {
LABEL_11:
    sub_100007A48((uint64_t)v7, &qword_10070BCC8);
  }
  else
  {
    uint64_t v19 = v9;
    uint64_t v21 = v2;
    uint64_t v11 = *v7;
    sub_10000566C(&qword_10070A9D8);
    uint64_t v20 = v7;
    uint64_t v12 = v8;
    while (v8 >= v11 && v12 < v10)
    {
      sub_10000566C(&qword_10070A9C0);
      MessageIdentifierSet.RangeView.subscript.getter();
      uint64_t v13 = v23[0];
      sub_10000566C(&qword_10070A8F8);
      uint64_t v14 = sub_1005E35B0();
      uint64_t v15 = sub_1005E35E0();
      if (v12 < v14 || v12 >= v15) {
        goto LABEL_13;
      }
      v23[0] = v13;
      sub_100063E18();
      Range<>.init<A>(_:)((uint64_t)v23, (uint64_t)&type metadata for UID);
      v23[4] = v16;
      if (HIDWORD(v16) != v16)
      {
        sub_10000566C(&qword_100709E60);
        unint64_t v17 = (void (*)(void *, void))sub_1005E3620();
        sub_1005E35D0();
        v17(v23, 0);
      }
      if (v10 == ++v12)
      {
        uint64_t v7 = v20;
        *(uint64_t *)((char *)v20 + v19) = v10;
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
  }
}

uint64_t sub_1000AAC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v5 = *(void *)(a3 + 16);
  sub_10001A574(0, v5, 0);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v7 = a2;
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = a3 + 32;
    swift_retain();
    swift_retain();
    uint64_t result = swift_retain();
    uint64_t v11 = (unsigned int *)(v7 + 40);
    while (v8)
    {
      uint64_t v12 = *((void *)v11 - 1);
      uint64_t v13 = v6;
      unsigned int v14 = *v11;
      swift_bridgeObjectRetain_n();
      v18._countAndFlagsBits = sub_1000AC520(v12, v14);
      sub_1005E1E30(v18);
      swift_bridgeObjectRelease();
      v19._countAndFlagsBits = 0x203E2D2027;
      v19._object = (void *)0xE500000000000000;
      sub_1005E1E30(v19);
      v20._countAndFlagsBits = sub_1005E1CC0();
      sub_1005E1E30(v20);
      uint64_t v6 = v13;
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v16 = v13[2];
      unint64_t v15 = v13[3];
      if (v16 >= v15 >> 1) {
        uint64_t result = sub_10001A574(v15 > 1, v16 + 1, 1);
      }
      v13[2] = v16 + 1;
      unint64_t v17 = &v13[2 * v16];
      v17[4] = 39;
      v17[5] = 0xE100000000000000;
      --v8;
      v11 += 4;
      v9 += 2;
      if (!--v5) {
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_9:
    swift_release();
    swift_release();
    swift_release();
    return (uint64_t)v6;
  }
  return result;
}

uint64_t sub_1000AADEC()
{
  uint64_t v46 = sub_10000566C(&qword_10070A9D8);
  uint64_t v1 = __chkstk_darwin(v46);
  uint64_t v48 = (uint64_t *)((char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v43 - v3);
  uint64_t v5 = sub_10000566C(&qword_100709E38);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v47 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v43 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v43 - v11;
  uint64_t v13 = sub_10000566C(&qword_10070A9C0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  unint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  Swift::String v19 = (char *)&v43 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v43 - v20;
  sub_10000566C(&qword_100709E60);
  uint64_t v22 = 0;
  if (sub_1005E3630()) {
    return v22;
  }
  unint64_t v43 = v12;
  unint64_t v44 = v10;
  uint64_t v45 = v0;
  MessageIdentifierSet.ranges.getter((uint64_t)v21);
  sub_10000566C(&qword_10070A8F8);
  uint64_t v23 = sub_1005E35B0();
  uint64_t v24 = sub_1005E35E0();
  uint64_t v25 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v23 < v25 || result < v23)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v28 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v24 < v28 || result < v24) {
    goto LABEL_22;
  }
  BOOL v30 = __OFSUB__(v24, v23);
  uint64_t v31 = v24 - v23;
  if (v30)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_100007A48((uint64_t)v21, &qword_10070A9C0);
  if (v31 < 100) {
    return MessageIdentifierSet.debugDescription.getter(v5);
  }
  MessageIdentifierSet.ranges.getter((uint64_t)v19);
  uint64_t v32 = sub_1005E35B0();
  uint64_t v33 = sub_1005E35E0();
  uint64_t v34 = sub_1000B1D3C(v32, 45, v33);
  LOBYTE(v32) = v35;
  sub_1000079E4((uint64_t)v19, (uint64_t)v16, &qword_10070A9C0);
  if (v32) {
    uint64_t v34 = sub_1005E35E0();
  }
  sub_100007A48((uint64_t)v16, &qword_10070A9C0);
  uint64_t result = sub_1005E35B0();
  if (v34 < result) {
    goto LABEL_24;
  }
  uint64_t v36 = result;
  uint64_t v37 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (result < v37)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v36 < v37)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (result >= v34)
  {
    sub_1000079E4((uint64_t)v19, (uint64_t)v4 + *(int *)(v46 + 40), &qword_10070A9C0);
    *uint64_t v4 = v36;
    v4[1] = v34;
    sub_100007A48((uint64_t)v19, &qword_10070A9C0);
    sub_10001FC6C();
    uint64_t v38 = (uint64_t)v44;
    sub_1005E3680();
    sub_1000AA9F4(v4, v38);
    sub_100007A48((uint64_t)v4, &qword_10070A9D8);
    uint64_t v39 = (uint64_t)v43;
    sub_10001FDF0(v38, (uint64_t)v43, &qword_100709E38);
    MessageIdentifierSet.ranges.getter((uint64_t)v21);
    char v40 = v48;
    sub_100068004(45, v48);
    uint64_t v41 = (uint64_t)v47;
    sub_1005E3680();
    sub_1000AA9F4(v40, v41);
    sub_100007A48((uint64_t)v40, &qword_10070A9D8);
    sub_10001FDF0(v41, v38, &qword_100709E38);
    uint64_t v50 = 0;
    unint64_t v51 = 0xE000000000000000;
    sub_1005E2E90();
    v52._countAndFlagsBits = 3026478;
    v52._object = (void *)0xE300000000000000;
    sub_1005E1E30(v52);
    sub_1005E2E90();
    v53._countAndFlagsBits = 10272;
    v53._object = (void *)0xE200000000000000;
    sub_1005E1E30(v53);
    MessageIdentifierSet.count.getter();
    uint64_t v49 = v42;
    v54._countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v54);
    swift_bridgeObjectRelease();
    v55._countAndFlagsBits = 41;
    v55._object = (void *)0xE100000000000000;
    sub_1005E1E30(v55);
    uint64_t v22 = v50;
    sub_100007A48(v38, &qword_100709E38);
    sub_100007A48(v39, &qword_100709E38);
    return v22;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1000AB344()
{
  uint64_t v46 = sub_10000566C(&qword_10070AB18);
  uint64_t v1 = __chkstk_darwin(v46);
  uint64_t v48 = (uint64_t *)((char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v43 - v3);
  uint64_t v5 = sub_10000566C(&qword_10070AB30);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v47 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v43 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v43 - v11;
  uint64_t v13 = sub_10000566C(&qword_10070AB10);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  unint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  Swift::String v19 = (char *)&v43 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v43 - v20;
  sub_10000566C(&qword_100709E60);
  uint64_t v22 = 0;
  if (sub_1005E3630()) {
    return v22;
  }
  unint64_t v43 = v12;
  unint64_t v44 = v10;
  uint64_t v45 = v0;
  MessageIdentifierSet.ranges.getter((uint64_t)v21);
  sub_10000566C(&qword_10070A8F8);
  uint64_t v23 = sub_1005E35B0();
  uint64_t v24 = sub_1005E35E0();
  uint64_t v25 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v23 < v25 || result < v23)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v28 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v24 < v28 || result < v24) {
    goto LABEL_22;
  }
  BOOL v30 = __OFSUB__(v24, v23);
  uint64_t v31 = v24 - v23;
  if (v30)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_100007A48((uint64_t)v21, &qword_10070AB10);
  if (v31 < 100) {
    return MessageIdentifierSet.debugDescription.getter(v5);
  }
  MessageIdentifierSet.ranges.getter((uint64_t)v19);
  uint64_t v32 = sub_1005E35B0();
  uint64_t v33 = sub_1005E35E0();
  uint64_t v34 = sub_1000B1D3C(v32, 45, v33);
  LOBYTE(v32) = v35;
  sub_1000079E4((uint64_t)v19, (uint64_t)v16, &qword_10070AB10);
  if (v32) {
    uint64_t v34 = sub_1005E35E0();
  }
  sub_100007A48((uint64_t)v16, &qword_10070AB10);
  uint64_t result = sub_1005E35B0();
  if (v34 < result) {
    goto LABEL_24;
  }
  uint64_t v36 = result;
  uint64_t v37 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (result < v37)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v36 < v37)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (result >= v34)
  {
    sub_1000079E4((uint64_t)v19, (uint64_t)v4 + *(int *)(v46 + 40), &qword_10070AB10);
    *uint64_t v4 = v36;
    v4[1] = v34;
    sub_100007A48((uint64_t)v19, &qword_10070AB10);
    sub_10001FC6C();
    uint64_t v38 = (uint64_t)v44;
    sub_1005E3680();
    sub_1000AA7E4(v4, v38);
    sub_100007A48((uint64_t)v4, &qword_10070AB18);
    uint64_t v39 = (uint64_t)v43;
    sub_10001FDF0(v38, (uint64_t)v43, &qword_10070AB30);
    MessageIdentifierSet.ranges.getter((uint64_t)v21);
    char v40 = v48;
    sub_100067FDC(45, v48);
    uint64_t v41 = (uint64_t)v47;
    sub_1005E3680();
    sub_1000AA7E4(v40, v41);
    sub_100007A48((uint64_t)v40, &qword_10070AB18);
    sub_10001FDF0(v41, v38, &qword_10070AB30);
    uint64_t v50 = 0;
    unint64_t v51 = 0xE000000000000000;
    sub_1005E2E90();
    v52._countAndFlagsBits = 3026478;
    v52._object = (void *)0xE300000000000000;
    sub_1005E1E30(v52);
    sub_1005E2E90();
    v53._countAndFlagsBits = 10272;
    v53._object = (void *)0xE200000000000000;
    sub_1005E1E30(v53);
    MessageIdentifierSet.count.getter();
    uint64_t v49 = v42;
    v54._countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v54);
    swift_bridgeObjectRelease();
    v55._countAndFlagsBits = 41;
    v55._object = (void *)0xE100000000000000;
    sub_1005E1E30(v55);
    uint64_t v22 = v50;
    sub_100007A48(v38, &qword_10070AB30);
    sub_100007A48(v39, &qword_10070AB30);
    return v22;
  }
LABEL_27:
  __break(1u);
  return result;
}

double StateWithTasks.stateCaptureValue(logName:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000B37E0((uint64_t)v3);
  swift_bridgeObjectRetain();
  sub_1000B3380(v3, a1, a2, (uint64_t)v12);
  sub_1000B38FC((uint64_t)v3);
  long long v7 = v12[7];
  *(_OWORD *)(a3 + 96) = v12[6];
  *(_OWORD *)(a3 + 112) = v7;
  *(_OWORD *)(a3 + 128) = v12[8];
  *(void *)(a3 + 144) = v13;
  long long v8 = v12[3];
  *(_OWORD *)(a3 + 32) = v12[2];
  *(_OWORD *)(a3 + 48) = v8;
  long long v9 = v12[5];
  *(_OWORD *)(a3 + 64) = v12[4];
  *(_OWORD *)(a3 + 80) = v9;
  double result = *(double *)v12;
  long long v11 = v12[1];
  *(_OWORD *)a3 = v12[0];
  *(_OWORD *)(a3 + 16) = v11;
  return result;
}

unint64_t StateWithTasks.localDeselectedMailboxesCaptureValue()@<X0>(uint64_t *a1@<X8>)
{
  *(_OWORD *)uint64_t v5 = v1[13];
  *(_OWORD *)&v5[16] = v1[14];
  long long v3 = v1[10];
  long long v4 = v1[11];
  _OWORD v6[2] = v1[12];
  v7[0] = *(_OWORD *)v5;
  *(_OWORD *)((char *)v7 + 12) = *(_OWORD *)&v5[12];
  v6[0] = v3;
  v6[1] = v4;
  return sub_1000AB9C4((uint64_t)v6, a1);
}

unint64_t sub_1000AB9C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  if (*(unsigned char *)(a1 + 24))
  {
    uint64_t v6 = *(void *)(v3 + 16);
    if (v6)
    {
      long long v7 = (long long *)(v3 + 32);
      uint64_t v25 = *(void *)(a1 + 16);
      uint64_t v26 = *(void *)(a1 + 8);
      sub_10005636C(*(void *)a1, v4, v5, 1);
      swift_bridgeObjectRetain();
      long long v8 = _swiftEmptyArrayStorage;
      do
      {
        long long v9 = *v7;
        long long v10 = v7[2];
        v28[1] = v7[1];
        _OWORD v28[2] = v10;
        v28[0] = v9;
        long long v11 = v7[3];
        long long v12 = v7[4];
        long long v13 = v7[6];
        v28[5] = v7[5];
        v29[0] = v13;
        v28[3] = v11;
        unsigned char v28[4] = v12;
        long long v14 = v7[7];
        long long v15 = v7[8];
        long long v16 = v7[10];
        v29[3] = v7[9];
        v29[4] = v16;
        v29[1] = v14;
        v29[2] = v15;
        sub_10001FDF0((uint64_t)v29, (uint64_t)v30, &qword_10070A228);
        sub_10001FDF0((uint64_t)v30, (uint64_t)v31, &qword_10070A228);
        if (!v31[0])
        {
          sub_100007780((uint64_t)v28);
          sub_1000B555C((uint64_t)v28, __src);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v8 = sub_10001731C(0, v8[2] + 1, 1, v8);
          }
          unint64_t v18 = v8[2];
          unint64_t v17 = v8[3];
          if (v18 >= v17 >> 1) {
            long long v8 = sub_10001731C((void *)(v17 > 1), v18 + 1, 1, v8);
          }
          _OWORD v8[2] = v18 + 1;
          memcpy(&v8[47 * v18 + 4], __src, 0x178uLL);
        }
        v7 += 11;
        --v6;
      }
      while (v6);
      sub_10000F0D4(v3, v26, v25, 1);
      sub_10000F0D4(v3, v26, v25, 1);
    }
    else
    {
      long long v8 = _swiftEmptyArrayStorage;
    }
    a2[3] = sub_10000566C(&qword_10070BB20);
    unint64_t result = sub_1000BBEF4(&qword_10070BB18, &qword_10070BB20, (void (*)(void))sub_1000B5FEC);
    a2[4] = result;
    *a2 = (uint64_t)v8;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1000B3A14(v3, v4, v5);
    uint64_t v21 = v20;
    uint64_t v23 = v22;
    a2[3] = (uint64_t)&_s13CapturedStateV16UnknownMailboxesVN;
    unint64_t result = sub_1000B9198();
    a2[4] = result;
    *a2 = v19;
    a2[1] = v21;
    a2[2] = v23;
  }
  return result;
}

void StateWithTasks.localSelectedMailboxesCaptureValue()(void *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 184))
  {
    uint64_t v3 = *(void *)(v1 + 160);
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      unint64_t v18 = a1;
      uint64_t v16 = *(void *)(v1 + 176);
      uint64_t v17 = *(void *)(v1 + 168);
      uint64_t v5 = (long long *)(v3 + 32);
      swift_bridgeObjectRetain();
      uint64_t v2 = _swiftEmptyArrayStorage;
      do
      {
        long long v6 = *v5;
        long long v7 = v5[2];
        v20[1] = v5[1];
        v20[2] = v7;
        v20[0] = v6;
        long long v8 = v5[3];
        long long v9 = v5[4];
        long long v10 = v5[6];
        v20[5] = v5[5];
        v21[0] = v10;
        v20[3] = v8;
        v20[4] = v9;
        long long v11 = v5[7];
        long long v12 = v5[8];
        long long v13 = v5[10];
        v21[3] = v5[9];
        v21[4] = v13;
        v21[1] = v11;
        v21[2] = v12;
        sub_10001FDF0((uint64_t)v21, (uint64_t)v22, &qword_10070A228);
        sub_10001FDF0((uint64_t)v22, (uint64_t)v23, &qword_10070A228);
        if (v23[0])
        {
          sub_100007780((uint64_t)v20);
          sub_1000B555C((uint64_t)v20, __src);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v2 = sub_10001731C(0, v2[2] + 1, 1, v2);
          }
          unint64_t v15 = v2[2];
          unint64_t v14 = v2[3];
          if (v15 >= v14 >> 1) {
            uint64_t v2 = sub_10001731C((void *)(v14 > 1), v15 + 1, 1, v2);
          }
          v2[2] = v15 + 1;
          memcpy(&v2[47 * v15 + 4], __src, 0x178uLL);
        }
        v5 += 11;
        --v4;
      }
      while (v4);
      sub_10000F0D4(v3, v17, v16, 1);
      a1 = v18;
    }
    else
    {
      uint64_t v2 = _swiftEmptyArrayStorage;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *a1 = v2;
}

uint64_t StateWithTasks.remoteMailboxesCaptureValue()@<X0>(uint64_t a1@<X8>)
{
  long long v21 = v1[8];
  long long v22 = v1[9];
  long long v18 = v1[4];
  long long v19 = v1[5];
  long long v20 = v1[7];
  v23[2] = v1[6];
  long long v24 = v20;
  long long v25 = v21;
  long long v26 = v22;
  v23[0] = v18;
  v23[1] = v19;
  if (v18 == 2)
  {
    int v3 = 3;
    if ((void)v24) {
      goto LABEL_3;
    }
LABEL_18:
    sub_1000B5EC0((uint64_t)v23);
    uint64_t v5 = 0;
    uint64_t v6 = *((void *)&v25 + 1);
    if (*((void *)&v25 + 1)) {
      goto LABEL_4;
    }
LABEL_19:
    uint64_t result = sub_1000B5F0C((uint64_t)v23);
    uint64_t v9 = 0;
    uint64_t v11 = 0;
    uint64_t v8 = 0;
    uint64_t v7 = 0;
    goto LABEL_20;
  }
  if ((v18 & 0x1000000) != 0) {
    int v13 = 0x1000000;
  }
  else {
    int v13 = 0x2000000;
  }
  if ((v18 & 0x10000) != 0) {
    int v14 = 0x20000;
  }
  else {
    int v14 = 0x10000;
  }
  if ((v18 & 0x100) != 0) {
    int v15 = 512;
  }
  else {
    int v15 = 256;
  }
  if (v18) {
    int v16 = 2;
  }
  else {
    int v16 = 1;
  }
  int v3 = v15 | v16 | v14 | v13;
  if (!(void)v24) {
    goto LABEL_18;
  }
LABEL_3:
  sub_1000B5EC0((uint64_t)v23);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1000B2348(v4, (uint64_t)v23);
  swift_bridgeObjectRelease();
  uint64_t v6 = *((void *)&v25 + 1);
  if (!*((void *)&v25 + 1)) {
    goto LABEL_19;
  }
LABEL_4:
  uint64_t v7 = *((void *)&v26 + 1);
  uint64_t v8 = v26;
  sub_100064054(v6);
  sub_100064054(v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NIOIMAPCore2::MailboxName v27 = MailboxName.init(_:)((Swift::OpaquePointer)v6);
  uint64_t v9 = sub_1000AC520((uint64_t)v27.bytes._rawValue, v27._hashValue._value);
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000B5F0C((uint64_t)v23);
  sub_1000852BC(v6);
  uint64_t result = swift_bridgeObjectRelease();
LABEL_20:
  char v17 = BYTE1(v25);
  *(_DWORD *)a1 = v3;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v17;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v7;
  return result;
}

unint64_t sub_1000ABFDC(char a1)
{
  unint64_t result = 0x656D614E676F6CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4449656E69676E65;
      break;
    case 2:
      unint64_t result = 0x6D6E6F7269766E65;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x736B736174;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000AC0E4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000566C(&qword_10070BB38);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1000B7EAC();
  sub_1005E3500();
  LOBYTE(v14) = 0;
  sub_1005E3190();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_1005E3190();
    long long v9 = *(_OWORD *)(v3 + 80);
    long long v16 = *(_OWORD *)(v3 + 64);
    long long v17 = v9;
    uint64_t v18 = *(void *)(v3 + 96);
    long long v10 = *(_OWORD *)(v3 + 48);
    long long v14 = *(_OWORD *)(v3 + 32);
    long long v15 = v10;
    char v13 = 2;
    sub_1000B7F00();
    sub_1005E31C0();
    LOBYTE(v14) = *(unsigned char *)(v3 + 104);
    char v13 = 3;
    sub_1000B7F54();
    sub_1005E31C0();
    *(void *)&long long v14 = *(void *)(v3 + 112);
    char v13 = 4;
    sub_10000566C(&qword_10070BB58);
    sub_1000BBEF4(&qword_10070BB60, &qword_10070BB58, (void (*)(void))sub_1000B7FA8);
    sub_1005E31C0();
    long long v14 = *(_OWORD *)(v3 + 120);
    char v13 = 5;
    sub_1000B7FFC();
    sub_1005E31C0();
    *(void *)&long long v14 = *(void *)(v3 + 136);
    char v13 = 6;
    sub_10000566C(&qword_10070BB78);
    sub_1000B8050();
    sub_1005E31C0();
    *(void *)&long long v14 = *(void *)(v3 + 144);
    char v13 = 7;
    sub_1000B80C4();
    sub_1005E31C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1000AC410()
{
  return sub_1000ABFDC(*v0);
}

uint64_t sub_1000AC418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BBA1C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000AC440(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1000AC44C(uint64_t a1)
{
  unint64_t v2 = sub_1000B7EAC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000AC488(uint64_t a1)
{
  unint64_t v2 = sub_1000B7EAC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AC4C4(void *a1)
{
  return sub_1000AC0E4(a1);
}

uint64_t sub_1000AC520(uint64_t a1, unsigned int a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1005E1CA0();
  swift_bridgeObjectRetain();
  uint64_t v5 = MailboxName.inbox.unsafeMutableAddressor();
  if ((a2 | ((unint64_t)a2 << 32)) == (*((unsigned int *)v5 + 2) | ((unint64_t)*((unsigned int *)v5 + 2) << 32)))
  {
    BOOL v6 = sub_1000255D4(a1, *v5);
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_7;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (sub_1005E1DC0() <= 2)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return v4;
  }
  sub_1005E1E00();
  sub_1005E2C80(16);
  sub_1005E1F50();
  uint64_t v7 = sub_1005E1D00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0x6E656C202CA680E2;
  v9._object = (void *)0xAC0000003D687467;
  sub_1005E1E30(v9);
  sub_1005E1DC0();
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1000AC6D4(void *a1)
{
  uint64_t v3 = sub_10000566C(&qword_10070BEA8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  BOOL v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003BCDC(a1, a1[3]);
  sub_1000BE0A0();
  sub_1005E3500();
  v8[15] = 0;
  sub_1005E3190();
  if (!v1)
  {
    v8[14] = 1;
    sub_1005E3190();
    v8[13] = 2;
    sub_1005E3190();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000AC85C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_10000566C(&qword_10070BDA0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  Swift::String v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1000BBDF8();
  sub_1005E3500();
  uint64_t v14 = a2;
  char v13 = 0;
  sub_10000566C(&qword_100709F58);
  sub_1000B8460((unint64_t *)&qword_10070B3D8, &qword_100709F58);
  sub_1005E31C0();
  if (!v3)
  {
    uint64_t v14 = a3;
    char v13 = 1;
    sub_10000566C(&qword_10070BDB0);
    sub_1000BBEF4(&qword_10070BDB8, &qword_10070BDB0, (void (*)(void))sub_1000BBE4C);
    sub_1005E31C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1000ACA44()
{
  uint64_t v1 = 0x786F626C69616DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6567617375;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x697463656E6E6F63;
  }
}

uint64_t sub_1000ACAA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BBFC0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000ACAC8(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1000ACAD4(uint64_t a1)
{
  unint64_t v2 = sub_1000BE0A0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000ACB10(uint64_t a1)
{
  unint64_t v2 = sub_1000BE0A0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000ACB4C(void *a1)
{
  return sub_1000AC6D4(a1);
}

uint64_t sub_1000ACB88()
{
  if (*v0) {
    return 0x6567617375;
  }
  else {
    return 0x65786F626C69616DLL;
  }
}

uint64_t sub_1000ACBC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BC11C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000ACBEC(uint64_t a1)
{
  unint64_t v2 = sub_1000BBDF8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000ACC28(uint64_t a1)
{
  unint64_t v2 = sub_1000BBDF8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000ACC64(void *a1)
{
  return sub_1000AC85C(a1, *v1, v1[1]);
}

uint64_t sub_1000ACC80()
{
  return 0x69617274736E6F63;
}

uint64_t sub_1000ACCA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x69617274736E6F63 && a2 == 0xEB0000000064656ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1000ACD50(uint64_t a1)
{
  unint64_t v2 = sub_1000BBD50();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000ACD8C(uint64_t a1)
{
  unint64_t v2 = sub_1000BBD50();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000ACDC8(void *a1)
{
  uint64_t v2 = sub_10000566C(&qword_10070BD80);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1000BBD50();
  sub_1005E3500();
  sub_1005E3140();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1000ACEFC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[1] = a4;
  uint64_t v6 = sub_10000566C(&qword_10070BD90);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1000BBDA4();
  sub_1005E3500();
  char v13 = 0;
  sub_1005E31E0();
  if (!v4)
  {
    char v12 = 1;
    sub_1005E3190();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1000AD070()
{
  if (*v0) {
    return 1684957547;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1000AD098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BC214(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000AD0C0(uint64_t a1)
{
  unint64_t v2 = sub_1000BBDA4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000AD0FC(uint64_t a1)
{
  unint64_t v2 = sub_1000BBDA4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AD138(void *a1)
{
  return sub_1000ACEFC(a1, *v1, *((void *)v1 + 1), *((void *)v1 + 2));
}

unint64_t sub_1000AD158(char a1)
{
  unint64_t result = 0x7374726F70707573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000AD204(void *a1)
{
  uint64_t v3 = sub_10000566C(&qword_10070BE10);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003BCDC(a1, a1[3]);
  sub_1000BDD20();
  sub_1005E3500();
  v8[15] = 0;
  sub_1005E3140();
  if (!v1)
  {
    v8[14] = 1;
    sub_1005E3140();
    v8[13] = 2;
    sub_1005E3140();
    v8[12] = 3;
    sub_1005E3140();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1000AD3B4()
{
  return sub_1000AD158(*v0);
}

uint64_t sub_1000AD3BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BC2E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000AD3E4(uint64_t a1)
{
  unint64_t v2 = sub_1000BDD20();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000AD420(uint64_t a1)
{
  unint64_t v2 = sub_1000BDD20();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AD45C(void *a1)
{
  return sub_1000AD204(a1);
}

uint64_t sub_1000AD478(void *a1)
{
  uint64_t v3 = sub_10000566C(&qword_10070BE20);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003BCDC(a1, a1[3]);
  sub_1000BDD74();
  sub_1005E3500();
  v8[15] = 0;
  sub_1005E3190();
  if (!v1)
  {
    v8[14] = 1;
    sub_1005E3130();
    v8[13] = 2;
    sub_1005E3130();
    v8[12] = 3;
    sub_1005E3130();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000AD628()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6170655368746170;
      break;
    case 2:
      uint64_t result = 0x7475626972747461;
      break;
    case 3:
      uint64_t result = 0x556C616963657073;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000AD6C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BC498(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000AD6F0(uint64_t a1)
{
  unint64_t v2 = sub_1000BDD74();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000AD72C(uint64_t a1)
{
  unint64_t v2 = sub_1000BDD74();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AD768(void *a1)
{
  return sub_1000AD478(a1);
}

uint64_t sub_1000AD7A4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000566C(&qword_10070BBF0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10003BCDC(a1, a1[3]);
  sub_1000B8268();
  sub_1005E3500();
  sub_10001FDF0(v3, (uint64_t)v15, &qword_10070BC00);
  sub_10001FDF0((uint64_t)v15, (uint64_t)v11, &qword_10070BC00);
  char v12 = 0;
  sub_1000B82BC();
  sub_1005E3160();
  if (!v2)
  {
    sub_10001FDF0(v3 + 8, (uint64_t)v14, &qword_10070BC10);
    sub_10001FDF0((uint64_t)v14, (uint64_t)v11, &qword_10070BC10);
    char v12 = 1;
    sub_10000566C(&qword_10070BC18);
    sub_1000BBEF4(&qword_10070BC20, &qword_10070BC18, (void (*)(void))sub_1000B8310);
    sub_1005E3160();
    v11[0] = 2;
    sub_1005E31A0();
    sub_10001FDF0(v3 + 24, (uint64_t)v13, &qword_10070BC30);
    sub_10001FDF0((uint64_t)v13, (uint64_t)v11, &qword_10070BC30);
    char v12 = 3;
    sub_1000B8364();
    sub_1005E3160();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000ADA2C()
{
  if (*v0) {
    return 0x6F74617261706573;
  }
  else {
    return 0x786966657270;
  }
}

uint64_t sub_1000ADA68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BC678(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000ADA90(uint64_t a1)
{
  unint64_t v2 = sub_1000B83B8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000ADACC(uint64_t a1)
{
  unint64_t v2 = sub_1000B83B8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000ADB08(void *a1)
{
  return sub_1000B036C(a1, *v1, v1[1], v1[2], v1[3], &qword_10070BC40, (void (*)(void))sub_1000B83B8, (uint64_t)&_s13CapturedStateV14CapturedRemoteV9NamespaceV10CodingKeysON, (void (*)(uint64_t, uint64_t, unsigned char *, uint64_t))&KeyedEncodingContainer.encode(_:forKey:));
}

unint64_t sub_1000ADB68()
{
  unint64_t result = 0x726576726573;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x65786F626C69616DLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0x63617073656D616ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000ADC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BC770(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000ADC2C(uint64_t a1)
{
  unint64_t v2 = sub_1000B8268();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000ADC68(uint64_t a1)
{
  unint64_t v2 = sub_1000B8268();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000ADCA4(void *a1)
{
  return sub_1000AD7A4(a1);
}

uint64_t sub_1000ADCE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = a3;
  uint64_t v8 = sub_10000566C(&qword_10070BE78);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1000BDF18();
  sub_1005E3500();
  uint64_t v15 = a2;
  char v14 = 0;
  sub_10000566C(&qword_10070BBC0);
  sub_1000B8460(&qword_10070BBC8, &qword_10070BBC0);
  sub_1005E3160();
  if (!v4)
  {
    uint64_t v15 = v13;
    char v14 = 1;
    sub_10000566C(&qword_10070BE88);
    sub_1000BDF6C();
    sub_1005E3160();
    uint64_t v15 = a4;
    char v14 = 2;
    sub_10000566C(&qword_10070BE98);
    sub_1000BE000();
    sub_1005E3160();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1000ADEFC()
{
  unint64_t v1 = 0x6552686372616573;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x53676E69646E6570;
  }
}

uint64_t sub_1000ADF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BC92C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000ADF98(uint64_t a1)
{
  unint64_t v2 = sub_1000BDF18();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000ADFD4(uint64_t a1)
{
  unint64_t v2 = sub_1000BDF18();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AE010(void *a1)
{
  return sub_1000ADCE8(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1000AE030(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000566C(&qword_10070BDF0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003BCDC(a1, a1[3]);
  sub_1000BDC78();
  sub_1005E3500();
  char v9 = *(unsigned char *)(v3 + 4);
  v11[15] = 0;
  v11[12] = v9;
  sub_1005E3170();
  if (!v2)
  {
    v11[11] = 1;
    sub_1005E3130();
    v11[10] = 2;
    sub_1005E3180();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000AE1CC()
{
  uint64_t v1 = 0x5764656863746566;
  if (*v0 != 1) {
    uint64_t v1 = 0x4D74736568676968;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x64696C6156646975;
  }
}

uint64_t sub_1000AE248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BCABC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000AE270(uint64_t a1)
{
  unint64_t v2 = sub_1000BDC78();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000AE2AC(uint64_t a1)
{
  unint64_t v2 = sub_1000BDC78();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AE2E8(void *a1)
{
  return sub_1000AE030(a1);
}

uint64_t sub_1000AE324(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000566C(&qword_10070BE00);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003BCDC(a1, a1[3]);
  sub_1000BDCCC();
  sub_1005E3500();
  LOBYTE(v11) = 0;
  sub_1005E31E0();
  if (!v2)
  {
    long long v11 = *(_OWORD *)(v3 + 8);
    v10[15] = 1;
    sub_1000B84C4();
    sub_1005E31C0();
    LOBYTE(v11) = 2;
    sub_1005E3190();
    LOBYTE(v11) = 3;
    sub_1005E31E0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000AE4EC()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6567617373656DLL;
      break;
    case 2:
      uint64_t result = 1684957547;
      break;
    case 3:
      uint64_t result = 7565169;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000AE560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BCC74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000AE588(uint64_t a1)
{
  unint64_t v2 = sub_1000BDCCC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000AE5C4(uint64_t a1)
{
  unint64_t v2 = sub_1000BDCCC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AE600(void *a1)
{
  return sub_1000AE324(a1);
}

uint64_t sub_1000AE63C(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  v14[1] = a5;
  int v17 = a4;
  uint64_t v9 = sub_10000566C(&qword_10070BE50);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1000BDE70();
  sub_1005E3500();
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  char v18 = 0;
  sub_1000B84C4();
  sub_1005E31C0();
  if (!v5)
  {
    LOBYTE(v15) = 1;
    sub_1005E31E0();
    LOBYTE(v15) = 2;
    sub_1005E31B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1000AE7F0()
{
  uint64_t v1 = 6580597;
  if (*v0 != 1) {
    uint64_t v1 = 1702521203;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1000AE830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BCDF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000AE858(uint64_t a1)
{
  unint64_t v2 = sub_1000BDE70();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000AE894(uint64_t a1)
{
  unint64_t v2 = sub_1000BDE70();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AE8D0(void *a1)
{
  return sub_1000AE63C(a1, *(void *)v1, *(void *)(v1 + 8), *(_DWORD *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1000AE8F4(char a1)
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x676E697373696DLL;
      break;
    case 2:
      unint64_t result = 1701736292;
      break;
    case 3:
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x5564656972657571;
      break;
    case 6:
      unint64_t result = 0x6574656C706D6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000AE9D4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000566C(&qword_10070BE60);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003BCDC(a1, a1[3]);
  sub_1000BDEC4();
  sub_1005E3500();
  v12[15] = 0;
  sub_1005E3140();
  if (!v2)
  {
    v12[14] = 1;
    sub_1005E3130();
    v12[13] = 2;
    sub_1005E3130();
    char v9 = *(unsigned char *)(v3 + 44);
    v12[12] = 3;
    v12[8] = v9;
    sub_1005E3170();
    v12[7] = 4;
    sub_1005E3130();
    char v10 = *(unsigned char *)(v3 + 68);
    v12[6] = 5;
    v12[4] = v10;
    sub_1005E3170();
    v12[3] = 6;
    sub_1005E3140();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1000AEC1C(char a1)
{
  unint64_t result = 0x436567617373656DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4449557478656ELL;
      break;
    case 2:
      unint64_t result = 0x64696C6156646975;
      break;
    case 3:
      unint64_t result = 0x4D74736568676968;
      break;
    case 4:
      unint64_t result = 0x70657453636E7973;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    case 7:
    case 8:
      unint64_t result = 0xD000000000000019;
      break;
    case 9:
      unint64_t result = 0x4D676E697373696DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000AED84(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000566C(&qword_10070BC50);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1000B840C();
  sub_1005E3500();
  LOBYTE(v16) = 0;
  sub_1005E31B0();
  if (!v2)
  {
    char v9 = *(unsigned char *)(v3 + 12);
    LOBYTE(v16) = 1;
    char v21 = v9;
    sub_1005E3170();
    char v10 = *(unsigned char *)(v3 + 20);
    LOBYTE(v16) = 2;
    char v21 = v10;
    sub_1005E3170();
    LOBYTE(v16) = 3;
    sub_1005E3180();
    *(void *)&long long v16 = *(void *)(v3 + 40);
    char v21 = 4;
    sub_10000566C(&qword_100709F58);
    sub_1000B8460((unint64_t *)&qword_10070B3D8, &qword_100709F58);
    sub_1005E31C0();
    sub_10001FDF0(v3 + 48, (uint64_t)v23, &qword_10070BC60);
    sub_10001FDF0((uint64_t)v23, (uint64_t)&v16, &qword_10070BC60);
    char v21 = 5;
    sub_10000566C(&qword_10070BC68);
    sub_1000BBEF4(&qword_10070BC70, &qword_10070BC68, (void (*)(void))sub_1000B84C4);
    sub_1005E3160();
    sub_10007C1E8((long long *)(v3 + 56), (uint64_t)v22);
    sub_10007C1E8(v22, (uint64_t)&v16);
    char v21 = 6;
    sub_1000B8518();
    sub_1005E31C0();
    long long v11 = *(_OWORD *)(v3 + 160);
    long long v18 = *(_OWORD *)(v3 + 144);
    *(_OWORD *)long long v19 = v11;
    *(_OWORD *)&_OWORD v19[16] = *(_OWORD *)(v3 + 176);
    uint64_t v20 = *(void *)(v3 + 192);
    long long v12 = *(_OWORD *)(v3 + 128);
    long long v16 = *(_OWORD *)(v3 + 112);
    long long v17 = v12;
    char v21 = 7;
    sub_1000B856C();
    sub_1005E31C0();
    *(void *)&long long v16 = *(void *)(v3 + 200);
    char v21 = 8;
    sub_10000566C(&qword_10070BC90);
    sub_1000BBEF4(&qword_10070BC98, &qword_10070BC90, (void (*)(void))sub_1000B85C0);
    sub_1005E31C0();
    long long v13 = *(_OWORD *)(v3 + 256);
    long long v18 = *(_OWORD *)(v3 + 240);
    *(_OWORD *)long long v19 = v13;
    *(void *)&v19[14] = *(void *)(v3 + 270);
    long long v14 = *(_OWORD *)(v3 + 224);
    long long v16 = *(_OWORD *)(v3 + 208);
    long long v17 = v14;
    char v21 = 9;
    sub_1000B8614();
    sub_1005E31C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1000AF1B8()
{
  return sub_1000AE8F4(*v0);
}

uint64_t sub_1000AF1C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BCF18(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000AF1E8(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1000AF1F4(uint64_t a1)
{
  unint64_t v2 = sub_1000BDEC4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000AF230(uint64_t a1)
{
  unint64_t v2 = sub_1000BDEC4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AF26C(void *a1)
{
  return sub_1000AE9D4(a1);
}

unint64_t sub_1000AF2B0()
{
  return sub_1000AEC1C(*v0);
}

uint64_t sub_1000AF2B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BD204(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000AF2E0(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1000AF2EC(uint64_t a1)
{
  unint64_t v2 = sub_1000B840C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000AF328(uint64_t a1)
{
  unint64_t v2 = sub_1000B840C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AF364(void *a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_1000AED84(a1);
}

uint64_t sub_1000AF3B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = a4;
  v12[1] = a5;
  uint64_t v7 = sub_10000566C(&qword_10070BCB0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1000B8668();
  sub_1005E3500();
  char v14 = 0;
  sub_1005E3130();
  if (!v5)
  {
    char v13 = 1;
    sub_1005E3130();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_1000AF52C(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 3:
    case 4:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000AF5E8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000566C(&qword_10070BE30);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1000BDDC8();
  sub_1005E3500();
  v12[0] = 0;
  sub_1005E31A0();
  if (!v2)
  {
    v12[0] = 1;
    sub_1005E31A0();
    v12[0] = 2;
    sub_1005E31A0();
    sub_10001FDF0(v3 + 8, (uint64_t)v14, &qword_10070BE40);
    sub_10001FDF0((uint64_t)v14, (uint64_t)v12, &qword_10070BE40);
    char v11 = 3;
    sub_1000BDE1C();
    sub_1005E3160();
    sub_10001FDF0(v3 + 40, (uint64_t)v13, &qword_10070BE40);
    sub_10001FDF0((uint64_t)v13, (uint64_t)v12, &qword_10070BE40);
    char v11 = 4;
    sub_1005E3160();
    v12[0] = 5;
    sub_1005E3130();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1000AF858(char a1)
{
  unint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x74617453636E7973;
      break;
    case 4:
      unint64_t result = 0x75716552636E7973;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000AF950(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000566C(&qword_10070BB90);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1000B8118();
  sub_1005E3500();
  LOBYTE(v11[0]) = 0;
  sub_1005E3190();
  if (!v2)
  {
    long long v9 = *(_OWORD *)(v3 + 32);
    v11[0] = *(_OWORD *)(v3 + 16);
    v11[1] = v9;
    char v12 = *(unsigned char *)(v3 + 48);
    char v13 = 1;
    sub_1000B816C();
    sub_1005E31C0();
    LOBYTE(v11[0]) = 2;
    sub_1005E3130();
    sub_10001FDF0(v3 + 72, (uint64_t)v16, &qword_10070BBA8);
    sub_10001FDF0((uint64_t)v16, (uint64_t)v11, &qword_10070BBA8);
    char v13 = 3;
    sub_1000B81C0();
    sub_1005E3160();
    sub_10001FDF0(v3 + 352, (uint64_t)v17, &qword_10070BBB8);
    sub_10001FDF0((uint64_t)v17, (uint64_t)v11, &qword_10070BBB8);
    char v13 = 4;
    sub_10000566C(&qword_10070BBC0);
    sub_1000B8460(&qword_10070BBC8, &qword_10070BBC0);
    sub_1005E3160();
    sub_10001FDF0(v3 + 360, (uint64_t)&v15, &qword_10070BBB8);
    sub_10001FDF0((uint64_t)&v15, (uint64_t)v11, &qword_10070BBB8);
    char v13 = 5;
    sub_1005E3160();
    sub_10001FDF0(v3 + 368, (uint64_t)&v14, &qword_10070BBD0);
    sub_10001FDF0((uint64_t)&v14, (uint64_t)v11, &qword_10070BBD0);
    char v13 = 6;
    sub_10000566C(&qword_10070BBD8);
    sub_1000BBEF4(&qword_10070BBE0, &qword_10070BBD8, (void (*)(void))sub_1000B8214);
    sub_1005E3160();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000AFCD4()
{
  if (*v0) {
    return 1701736292;
  }
  else {
    return 0x676E69646E6570;
  }
}

uint64_t sub_1000AFD08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BD674(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000AFD30(uint64_t a1)
{
  unint64_t v2 = sub_1000B8668();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000AFD6C(uint64_t a1)
{
  unint64_t v2 = sub_1000B8668();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AFDA8(void *a1)
{
  return sub_1000AF3B8(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t sub_1000AFDC8()
{
  return sub_1000AF52C(*v0);
}

uint64_t sub_1000AFDD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BD758(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000AFDF8(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1000AFE04(uint64_t a1)
{
  unint64_t v2 = sub_1000BDDC8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000AFE40(uint64_t a1)
{
  unint64_t v2 = sub_1000BDDC8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AFE7C(void *a1)
{
  return sub_1000AF5E8(a1);
}

unint64_t sub_1000AFEC8()
{
  return sub_1000AF858(*v0);
}

uint64_t sub_1000AFED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BD9A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000AFEF8(uint64_t a1)
{
  unint64_t v2 = sub_1000B8118();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000AFF34(uint64_t a1)
{
  unint64_t v2 = sub_1000B8118();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AFF70(void *a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_1000AF950(a1);
}

uint64_t sub_1000AFFC4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = a3;
  uint64_t v15 = a5;
  uint64_t v8 = sub_10000566C(&qword_10070C058);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1000BFFA0();
  sub_1005E3500();
  uint64_t v17 = a2;
  char v16 = 0;
  sub_10000566C(&qword_100709F58);
  sub_1000B8460((unint64_t *)&qword_10070B3D8, &qword_100709F58);
  sub_1005E3160();
  if (!v5)
  {
    uint64_t v17 = v14;
    char v16 = 1;
    sub_10000566C(&qword_10070BBC0);
    sub_1000B8460(&qword_10070BBC8, &qword_10070BBC0);
    sub_1005E3160();
    LOBYTE(v17) = 2;
    sub_1005E31B0();
    LOBYTE(v17) = 3;
    sub_1005E31B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_1000B01F8()
{
  unint64_t result = 0x43676E696E6E7572;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x41676E696E6E7572;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000B02AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BFA28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000B02D4(uint64_t a1)
{
  unint64_t v2 = sub_1000BFFA0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000B0310(uint64_t a1)
{
  unint64_t v2 = sub_1000BFFA0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B034C(void *a1)
{
  return sub_1000AFFC4(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1000B036C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, void (*a7)(void), uint64_t a8, void (*a9)(uint64_t, uint64_t, unsigned char *, uint64_t))
{
  uint64_t v19 = a3;
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  uint64_t v11 = sub_10000566C(a6);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  a7();
  sub_1005E3500();
  v21[1] = 0;
  uint64_t v15 = v20;
  sub_1005E3190();
  if (!v15)
  {
    v21[0] = 1;
    a9(v17, v18, v21, v11);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1000B04E8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000566C(&qword_10070BEB8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1000BE0F4();
  sub_1005E3500();
  long long v9 = v3[1];
  v13[0] = *v3;
  v13[1] = v9;
  char v12 = 0;
  sub_1000BE148();
  sub_1005E31C0();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_1005E3190();
    LOBYTE(v13[0]) = 2;
    sub_1005E3140();
    sub_10001FDF0((uint64_t)v3 + 56, (uint64_t)v14, &qword_10070BED0);
    sub_10001FDF0((uint64_t)v14, (uint64_t)v13, &qword_10070BED0);
    char v12 = 3;
    sub_1000BE19C();
    sub_1005E3160();
    LOBYTE(v13[0]) = 4;
    sub_1005E3140();
    LOBYTE(v13[0]) = 5;
    sub_1005E3140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000B0738(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070BDC8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1000BBEA0();
  sub_1005E3500();
  v9[1] = a2;
  sub_10000566C(&qword_10070BDD8);
  sub_1000BBEF4(&qword_10070BDE0, &qword_10070BDD8, (void (*)(void))sub_1000BBF6C);
  sub_1005E31C0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1000B08AC()
{
  if (*v0) {
    return 0x697463656E6E6F63;
  }
  else {
    return 0x786F626C69616DLL;
  }
}

uint64_t sub_1000B08EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BFC20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000B0914(uint64_t a1)
{
  unint64_t v2 = sub_1000BE1F0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000B0950(uint64_t a1)
{
  unint64_t v2 = sub_1000BE1F0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B098C(void *a1)
{
  return sub_1000B036C(a1, *v1, v1[1], v1[2], v1[3], &qword_10070BEE0, (void (*)(void))sub_1000BE1F0, (uint64_t)&type metadata for RunningTasksCapturedValue.CapturedTask.MailboxTask.CodingKeys, (void (*)(uint64_t, uint64_t, unsigned char *, uint64_t))&KeyedEncodingContainer.encodeIfPresent(_:forKey:));
}

unint64_t sub_1000B09EC()
{
  unint64_t result = 0x79726F74736968;
  switch(*v0)
  {
    case 1:
      unint64_t result = 25705;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x54786F626C69616DLL;
      break;
    case 4:
      unint64_t result = 0x6574656C706D6F63;
      break;
    case 5:
      unint64_t result = 0x64656C696166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000B0AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000BFD20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000B0ADC(uint64_t a1)
{
  unint64_t v2 = sub_1000BE0F4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000B0B18(uint64_t a1)
{
  unint64_t v2 = sub_1000BE0F4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B0B54(void *a1)
{
  return sub_1000B04E8(a1);
}

uint64_t sub_1000B0BA0()
{
  return 0x736B736174;
}

uint64_t sub_1000B0BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x736B736174 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1000B0C44(uint64_t a1)
{
  unint64_t v2 = sub_1000BBEA0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000B0C80(uint64_t a1)
{
  unint64_t v2 = sub_1000BBEA0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B0CBC(void *a1)
{
  return sub_1000B0738(a1, *v1);
}

Swift::Int sub_1000B0CD8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1000A4CB4(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1000B0D44(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_1000B0D44(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1005E3210(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        unsigned int v81 = *(_DWORD *)(v79 + 4 * i);
        uint64_t v82 = v78;
        do
        {
          unsigned int v83 = *(_DWORD *)(v79 + v82);
          if (v81 >= v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(_DWORD *)(v79 + v82 + 4) = v83;
          *(_DWORD *)(v79 + v82) = v81;
          v82 -= 4;
        }
        while (v82 != -4);
        v78 += 4;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  Swift::Int v95 = result;
  Swift::Int v96 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      BOOL v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          char v86 = v11;
          char v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_1000B13D0((char *)(v84 + 4 * v88), (char *)(v84 + 4 * *(void *)&v87[16 * v12 - 16]), v84 + 4 * v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v86 = sub_1000A6DE0((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          uint64_t v90 = &v86[16 * v85 + 32];
          *(void *)uint64_t v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          uint64_t v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      long long v94[2] = 0;
      return swift_bridgeObjectRelease();
    }
    BOOL v94 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1005E2150();
    *(void *)(v7 + 16) = v6;
    Swift::Int v3 = v96;
    BOOL v94 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *v2;
  unsigned __int16 v92 = v2;
  uint64_t v93 = *v2 - 4;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  uint64_t v97 = *v2;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 < v3)
    {
      unsigned int v14 = *(_DWORD *)(v10 + 4 * v9);
      unsigned int v15 = *(_DWORD *)(v10 + 4 * v13);
      Swift::Int v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        unsigned int v16 = v14;
        while (1)
        {
          unsigned int v17 = *(_DWORD *)(v10 + 4 * v9);
          if (v14 < v15 == v17 >= v16) {
            break;
          }
          ++v9;
          unsigned int v16 = v17;
          if (v3 == v9)
          {
            Swift::Int v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          Swift::Int v18 = v9 - 1;
          Swift::Int v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              int v20 = *(_DWORD *)(v10 + 4 * v19);
              *(_DWORD *)(v10 + 4 * v19) = *(_DWORD *)(v10 + 4 * v18);
              *(_DWORD *)(v10 + 4 * v18) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_47;
    }
    Swift::Int v21 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      Swift::Int v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      long long v22 = (unsigned int *)(v93 + 4 * v9);
      do
      {
        unsigned int v23 = *(_DWORD *)(v10 + 4 * v9);
        Swift::Int v24 = v13;
        long long v25 = v22;
        do
        {
          unsigned int v26 = *v25;
          if (v23 >= *v25) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          unsigned int *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      Swift::Int v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1000A66A4(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      uint64_t v77 = sub_1000A66A4((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      uint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v29 = v11 + 32;
    BOOL v30 = &v11[16 * v28 + 32];
    *(void *)BOOL v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          unint64_t v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            unsigned __int8 v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        uint64_t v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        Swift::String v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        char v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        char v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        unint64_t v73 = v29;
        uint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_1000B13D0((char *)(v10 + 4 * *(void *)v71), (char *)(v10 + 4 * *(void *)v74), v10 + 4 * v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)char v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        uint64_t v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v96;
    if (v9 >= v96)
    {
      uint64_t v8 = v94;
      uint64_t v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_1000B13D0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 3;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 2;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 3;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 2;
  Swift::Int v24 = __src;
  unsigned int v23 = __dst;
  if (v10 >= v12 >> 2)
  {
    if (v11 >= -3)
    {
      if (__dst != a2 || &a2[4 * v13] <= __dst) {
        memmove(__dst, a2, 4 * v13);
      }
      unsigned int v16 = &v4[4 * v13];
      long long v22 = v16;
      Swift::Int v24 = v6;
      if (v7 < v6 && v11 >= 4)
      {
        unsigned int v17 = (unsigned int *)(a3 - 4);
        while (1)
        {
          Swift::Int v18 = (char *)(v17 + 1);
          Swift::Int v19 = v6 - 4;
          unsigned int v20 = *((_DWORD *)v6 - 1);
          if (*((_DWORD *)v16 - 1) >= v20)
          {
            long long v22 = v16 - 4;
            if (v18 < v16 || v17 >= (unsigned int *)v16 || v18 != v16) {
              unsigned int *v17 = *((_DWORD *)v16 - 1);
            }
            v16 -= 4;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= (unsigned int *)v6) {
              unsigned int *v17 = v20;
            }
            Swift::Int v24 = v6 - 4;
            v6 -= 4;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          --v17;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -3)
  {
    if (__dst != __src || &__src[4 * v10] <= __dst) {
      memmove(__dst, __src, 4 * v10);
    }
    unsigned int v14 = &v4[4 * v10];
    long long v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 4)
    {
      do
      {
        if (*(_DWORD *)v6 >= *(_DWORD *)v4)
        {
          if (v7 != v4) {
            *(_DWORD *)uint64_t v7 = *(_DWORD *)v4;
          }
          v4 += 4;
          unsigned int v23 = v4;
          unsigned int v15 = v6;
        }
        else
        {
          unsigned int v15 = v6 + 4;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(_DWORD *)uint64_t v7 = *(_DWORD *)v6;
          }
        }
        v7 += 4;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      Swift::Int v24 = v7;
    }
LABEL_42:
    sub_1000A69E4((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000B1640(uint64_t a1)
{
  sub_10000566C(&qword_10070BCD8);
  uint64_t result = sub_1005E2FD0();
  Swift::Int v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v39 = a1;
  uint64_t v5 = *(void *)(a1 + 64);
  char v35 = (void *)result;
  uint64_t v36 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v37 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v38 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v9 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    unsigned int v14 = (uint64_t *)(*(void *)(v39 + 48) + 16 * i);
    uint64_t v15 = *v14;
    uint64_t v16 = *(void *)(*(void *)(v39 + 56) + 8 * i);
    int64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v40 = *v14;
      unint64_t v42 = i;
      unint64_t v43 = v8;
      int64_t v44 = v4;
      uint64_t v41 = v14[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10001A954(0, v17, 0);
      uint64_t v18 = 0;
      Swift::Int v19 = _swiftEmptyArrayStorage;
      uint64_t v20 = v16;
      do
      {
        uint64_t v47 = v19;
        int v46 = *(_DWORD *)(v20 + v18 + 32);
        uint64_t v21 = *(void *)(v20 + v18 + 56);
        unint64_t v22 = *(void *)(v20 + v18 + 64);
        char v23 = *(unsigned char *)(v20 + v18 + 80);
        if (*(void *)(v20 + v18 + 72))
        {
          sub_100008D24(v21, v22);
          sub_100008D24(v21, v22);
          swift_bridgeObjectRetain();
          sub_100008D24(v21, v22);
          swift_bridgeObjectRetain_n();
          v48._countAndFlagsBits = SectionSpecifier.Part.debugDescription.getter();
          sub_1005E1E30(v48);
          swift_bridgeObjectRelease();
          sub_1000094D4(v21, v22);
          swift_bridgeObjectRelease();
          uint64_t v24 = 0x656D686361747461;
          unint64_t v45 = 0xEB0000000020746ELL;
        }
        else
        {
          sub_100008D24(*(void *)(v20 + v18 + 56), *(void *)(v20 + v18 + 64));
          sub_100008D24(v21, v22);
          swift_bridgeObjectRetain();
          sub_100008D24(v21, v22);
          sub_1000094D4(v21, v22);
          swift_bridgeObjectRelease();
          unint64_t v45 = 0xE400000000000000;
          uint64_t v24 = 1954047348;
        }
        int v25 = DownloadRequest.QoS.qosClass.getter(v23);
        swift_bridgeObjectRelease();
        sub_1000094D4(v21, v22);
        swift_bridgeObjectRelease();
        Swift::Int v19 = v47;
        unint64_t v27 = v47[2];
        unint64_t v26 = v47[3];
        if (v27 >= v26 >> 1)
        {
          sub_10001A954(v26 > 1, v27 + 1, 1);
          Swift::Int v19 = v47;
        }
        v19[2] = v27 + 1;
        unint64_t v28 = &v19[6 * v27];
        *((_DWORD *)v28 + 8) = v46;
        v28[5] = v21;
        _OWORD v28[6] = v22;
        v28[7] = v24;
        v28[8] = v45;
        *((_DWORD *)v28 + 18) = v25;
        v18 += 56;
        --v17;
      }
      while (v17);
      uint64_t v29 = v19;
      swift_bridgeObjectRelease();
      BOOL v30 = v29;
      Swift::Int v3 = v35;
      unint64_t v8 = v43;
      int64_t v4 = v44;
      uint64_t result = v41;
      unint64_t i = v42;
      uint64_t v15 = v40;
    }
    else
    {
      uint64_t result = swift_bridgeObjectRetain();
      BOOL v30 = _swiftEmptyArrayStorage;
    }
    *(void *)(v38 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    unint64_t v31 = (void *)(v3[6] + 16 * i);
    *unint64_t v31 = v15;
    v31[1] = result;
    *(void *)(v3[7] + 8 * i) = v30;
    uint64_t v32 = v3[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33)
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v3[2] = v34;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_34;
    }
    if (v11 >= v37) {
      return (uint64_t)v3;
    }
    unint64_t v12 = *(void *)(v36 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v37) {
        return (uint64_t)v3;
      }
      unint64_t v12 = *(void *)(v36 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v37) {
          return (uint64_t)v3;
        }
        unint64_t v12 = *(void *)(v36 + 8 * v4);
        if (!v12) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v37) {
    return (uint64_t)v3;
  }
  unint64_t v12 = *(void *)(v36 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v37) {
      return (uint64_t)v3;
    }
    unint64_t v12 = *(void *)(v36 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_18;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1000B1A80(uint64_t a1)
{
  sub_10000566C(&qword_10070BCE0);
  uint64_t result = sub_1005E2FD0();
  Swift::Int v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v33 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v30 = v6;
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v32 = result + 64;
  uint64_t v29 = (void *)result;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v33 + 48) + 16 * i);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v19 = *(void *)(*(void *)(v33 + 56) + 8 * i);
    int64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v34 = *v16;
      unint64_t v35 = v10;
      int64_t v36 = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10001A8F4(0, v20, 0);
      uint64_t v21 = 44;
      do
      {
        int v22 = *(_DWORD *)(v19 + v21);
        unint64_t v24 = _swiftEmptyArrayStorage[2];
        unint64_t v23 = _swiftEmptyArrayStorage[3];
        if (v24 >= v23 >> 1) {
          sub_10001A8F4(v23 > 1, v24 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v24 + 1;
        *((_DWORD *)&_swiftEmptyArrayStorage[4] + v24) = v22;
        v21 += 16;
        --v20;
      }
      while (v20);
      uint64_t result = swift_bridgeObjectRelease();
      Swift::Int v3 = v29;
      unint64_t v10 = v35;
      int64_t v4 = v36;
      uint64_t v18 = v34;
    }
    else
    {
      uint64_t result = swift_bridgeObjectRetain();
    }
    *(void *)(v32 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    int v25 = (void *)(v3[6] + 16 * i);
    void *v25 = v18;
    v25[1] = v17;
    *(void *)(v3[7] + 8 * i) = _swiftEmptyArrayStorage;
    uint64_t v26 = v3[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    v3[2] = v28;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_31;
    }
    if (v13 >= v31) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v30 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v31) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v30 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v31) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v30 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v31) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v30 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v31) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v30 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1000B1D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10000566C(&qword_10070A8F8);
  uint64_t v6 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v6 > a1 || result < a1)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v9 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v9 > a3 || result < a3) {
    goto LABEL_20;
  }
  uint64_t v10 = a3 - a1;
  if (__OFSUB__(a3, a1))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (a2 >= 1)
  {
    if (v10 < 0 || v10 >= (unint64_t)a2) {
      goto LABEL_15;
    }
    return 0;
  }
  if (v10 <= 0 && v10 > a2) {
    return 0;
  }
LABEL_15:
  BOOL v12 = __OFADD__(a1, a2);
  uint64_t v11 = a1 + a2;
  if (v12)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v13 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v11 >= v13 && result >= v11) {
    return v11;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1000B1E48(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void *sub_1000B1ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = *(void *)(a1 + 16);
  if (!v24) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = a1;
  uint64_t v3 = 0;
  int64_t v4 = _swiftEmptyArrayStorage;
  uint64_t v23 = swift_bridgeObjectRetain();
  do
  {
    if (MailboxesSelectionUsage.subscript.getter(*(unsigned int *)(v2 + 4 * v3 + 32), a2))
    {
      unsigned int v9 = v6;
      uint64_t v10 = v7;
      char v11 = v8;
      uint64_t v12 = sub_1005E1CC0();
      uint64_t v26 = v13;
      uint64_t v14 = swift_bridgeObjectRetain();
      uint64_t v15 = sub_1000AC520(v14, v9);
      uint64_t v17 = v16;
      if (v11)
      {
        if (v10)
        {
          swift_bridgeObjectRelease();
          if (v10 == 1)
          {
            uint64_t v18 = 0x7953657669746361;
            unint64_t v19 = 0xEA0000000000636ELL;
          }
          else
          {
            unint64_t v19 = 0xEA00000000006B73;
            uint64_t v18 = 0x6154657669746361;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          unint64_t v19 = 0xE800000000000000;
          uint64_t v18 = 0x6576697463616E69;
        }
      }
      else
      {
        v27._countAndFlagsBits = sub_1005E3230();
        sub_1005E1E30(v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v18 = 0x6576697463616E69;
        unint64_t v19 = 0xE90000000000002DLL;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int64_t v4 = sub_100016FBC(0, v4[2] + 1, 1, v4);
      }
      unint64_t v21 = v4[2];
      unint64_t v20 = v4[3];
      if (v21 >= v20 >> 1) {
        int64_t v4 = sub_100016FBC((void *)(v20 > 1), v21 + 1, 1, v4);
      }
      v4[2] = v21 + 1;
      char v5 = &v4[6 * v21];
      v5[4] = v12;
      v5[5] = v26;
      v5[6] = v15;
      v5[7] = v17;
      v5[8] = v18;
      v5[9] = v19;
      uint64_t v2 = v23;
    }
    ++v3;
  }
  while (v24 != v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1000B2114(char a1)
{
  if (a1) {
    return sub_1005E1D80();
  }
  else {
    return 0;
  }
}

uint64_t sub_1000B21A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)a1;
  unsigned int v9 = *(_DWORD *)(a1 + 8);
  char v10 = *(unsigned char *)(a1 + 12);
  sub_10002292C(a1);
  uint64_t v11 = sub_1000AC520(v8, v9);
  uint64_t v13 = v12;
  swift_bridgeObjectRetain();
  if (!a3) {
    goto LABEL_16;
  }
  uint64_t v14 = sub_1000B2114(v10);
  if (!v15)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v14 == a2 && v15 == a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  char v17 = sub_1005E3290();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
LABEL_10:
    uint64_t v18 = sub_1000B2114(v10);
    uint64_t v20 = v19;
    if (v19) {
      uint64_t v21 = v18;
    }
    else {
      uint64_t v21 = 0;
    }
    if (!*(_WORD *)(a1 + 14)) {
      goto LABEL_22;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v21 = 0;
  uint64_t v20 = 0;
  if (!*(_WORD *)(a1 + 14))
  {
LABEL_22:
    uint64_t v26 = 0;
    uint64_t v24 = 0;
    goto LABEL_23;
  }
LABEL_17:
  uint64_t v22 = sub_1005E1CC0();
  uint64_t v24 = v23;
  uint64_t v25 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0) {
    uint64_t v25 = v22 & 0xFFFFFFFFFFFFLL;
  }
  if (!v25)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v26 = v22;
LABEL_23:
  uint64_t v27 = 8 * *(char *)(a1 + 16);
  uint64_t v28 = *(void *)((char *)&unk_1005F1E10 + v27);
  uint64_t v29 = *(void *)((char *)&unk_1005F1E50 + v27);
  sub_10001D550(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v11;
  a4[1] = v13;
  a4[2] = v21;
  a4[3] = v20;
  a4[4] = v26;
  a4[5] = v24;
  a4[6] = v28;
  a4[7] = v29;
  return result;
}

uint64_t sub_1000B2348(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  uint64_t v38 = _swiftEmptyArrayStorage;
  sub_10001A934(0, v2, 0);
  uint64_t v3 = _swiftEmptyArrayStorage;
  uint64_t v6 = sub_1000B1E48(a1);
  int v8 = v7;
  uint64_t v32 = a1 + 64;
  uint64_t result = sub_10001FDF0(a2 + 72, (uint64_t)v34, &qword_10070B6B8);
  uint64_t v10 = 0;
  int64_t v31 = v2;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v13 = (unint64_t)v6 >> 6;
    if ((*(void *)(v32 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    if (*(_DWORD *)(a1 + 36) != v8) {
      goto LABEL_27;
    }
    uint64_t v14 = *(void *)(a1 + 56) + 72 * v6;
    v35[0] = *(_OWORD *)v14;
    long long v16 = *(_OWORD *)(v14 + 32);
    long long v15 = *(_OWORD *)(v14 + 48);
    long long v17 = *(_OWORD *)(v14 + 16);
    __int16 v36 = *(_WORD *)(v14 + 64);
    v35[2] = v16;
    v35[3] = v15;
    v35[1] = v17;
    sub_10001FDF0((uint64_t)v34, (uint64_t)v37, &qword_10070B6B8);
    if (v37[0])
    {
      uint64_t v18 = v37[1];
      uint64_t v19 = v37[2];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v18 = 0;
      uint64_t v19 = 0;
    }
    sub_10002292C((uint64_t)v35);
    uint64_t result = sub_1000B21A8((uint64_t)v35, v18, v19, (uint64_t *)v33);
    uint64_t v38 = v3;
    unint64_t v21 = v3[2];
    unint64_t v20 = v3[3];
    if (v21 >= v20 >> 1)
    {
      uint64_t result = sub_10001A934(v20 > 1, v21 + 1, 1);
      uint64_t v3 = v38;
    }
    v3[2] = v21 + 1;
    uint64_t v22 = &v3[8 * v21];
    long long v23 = v33[0];
    long long v24 = v33[1];
    long long v25 = v33[3];
    void v22[4] = v33[2];
    v22[5] = v25;
    v22[2] = v23;
    long long v22[3] = v24;
    int64_t v11 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v11) {
      goto LABEL_28;
    }
    uint64_t v26 = *(void *)(v32 + 8 * v13);
    if ((v26 & (1 << v6)) == 0) {
      goto LABEL_29;
    }
    if (*(_DWORD *)(a1 + 36) != v8) {
      goto LABEL_30;
    }
    unint64_t v27 = v26 & (-2 << (v6 & 0x3F));
    if (v27)
    {
      int64_t v11 = __clz(__rbit64(v27)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v12 = v31;
    }
    else
    {
      unint64_t v28 = v13 + 1;
      unint64_t v29 = (unint64_t)(v11 + 63) >> 6;
      int64_t v12 = v31;
      if (v13 + 1 < v29)
      {
        unint64_t v30 = *(void *)(v32 + 8 * v28);
        if (v30)
        {
LABEL_23:
          int64_t v11 = __clz(__rbit64(v30)) + (v28 << 6);
        }
        else
        {
          while (v29 - 2 != v13)
          {
            unint64_t v30 = *(void *)(a1 + 80 + 8 * v13++);
            if (v30)
            {
              unint64_t v28 = v13 + 1;
              goto LABEL_23;
            }
          }
        }
      }
    }
    ++v10;
    uint64_t v6 = v11;
    if (v10 == v12) {
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1000B25E8(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 2;
  }
  sub_1005E33F0();
  sub_1005E3410(0);
  unint64_t v2 = sub_1005E3470() & ~(-1 << *(unsigned char *)(a1 + 32));
  if ((*(void *)(a1 + ((v2 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v2)) {
    return 1;
  }
  else {
    return 2;
  }
}

void *sub_1000B2670(void *result, char a2, void *a3)
{
  uint64_t v3 = result[2];
  if (v3)
  {
    uint64_t v6 = result;
    uint64_t v8 = result[4];
    uint64_t v7 = result[5];
    uint64_t v41 = result[6];
    unsigned int v9 = (void *)*a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_100024668(v8, v7);
    uint64_t v12 = v9[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    char v15 = v10;
    if (v9[3] < v14)
    {
      sub_100051718(v14, a2 & 1);
      unint64_t v16 = sub_100024668(v8, v7);
      if ((v15 & 1) != (v17 & 1))
      {
LABEL_28:
        uint64_t result = (void *)sub_1005E3380();
        __break(1u);
        return result;
      }
      unint64_t v11 = v16;
      uint64_t v18 = (void *)*a3;
      if ((v15 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_9:
      swift_bridgeObjectRelease();
      *(void *)(v18[7] + 8 * v11) = v41;
      uint64_t v19 = v3 - 1;
      if (v3 == 1) {
        return (void *)swift_bridgeObjectRelease();
      }
LABEL_16:
      for (unint64_t i = v6 + 9; ; i += 3)
      {
        uint64_t v26 = *(i - 2);
        uint64_t v25 = *(i - 1);
        uint64_t v27 = *i;
        unint64_t v28 = (void *)*a3;
        swift_bridgeObjectRetain();
        unint64_t v30 = sub_100024668(v26, v25);
        uint64_t v31 = v28[2];
        BOOL v32 = (v29 & 1) == 0;
        uint64_t v33 = v31 + v32;
        if (__OFADD__(v31, v32)) {
          break;
        }
        char v34 = v29;
        if (v28[3] < v33)
        {
          sub_100051718(v33, 1);
          unint64_t v35 = sub_100024668(v26, v25);
          if ((v34 & 1) != (v36 & 1)) {
            goto LABEL_28;
          }
          unint64_t v30 = v35;
        }
        int64_t v37 = (void *)*a3;
        if (v34)
        {
          swift_bridgeObjectRelease();
          *(void *)(v37[7] + 8 * v30) = v27;
        }
        else
        {
          v37[(v30 >> 6) + 8] |= 1 << v30;
          uint64_t v38 = (uint64_t *)(v37[6] + 16 * v30);
          *uint64_t v38 = v26;
          v38[1] = v25;
          *(void *)(v37[7] + 8 * v30) = v27;
          uint64_t v39 = v37[2];
          BOOL v22 = __OFADD__(v39, 1);
          uint64_t v40 = v39 + 1;
          if (v22) {
            goto LABEL_27;
          }
          uint64_t v37[2] = v40;
        }
        if (!--v19) {
          return (void *)swift_bridgeObjectRelease();
        }
      }
      goto LABEL_26;
    }
    if (a2)
    {
      uint64_t v18 = (void *)*a3;
      if (v10) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_100098260();
      uint64_t v18 = (void *)*a3;
      if (v15) {
        goto LABEL_9;
      }
    }
LABEL_12:
    v18[(v11 >> 6) + 8] |= 1 << v11;
    unint64_t v20 = (uint64_t *)(v18[6] + 16 * v11);
    uint64_t *v20 = v8;
    v20[1] = v7;
    *(void *)(v18[7] + 8 * v11) = v41;
    uint64_t v21 = v18[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v18[2] = v23;
    uint64_t v19 = v3 - 1;
    if (v3 == 1) {
      return (void *)swift_bridgeObjectRelease();
    }
    goto LABEL_16;
  }
  return result;
}

unint64_t sub_1000B28F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v40 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (void *)((char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for TaskHistory.Running(0);
  __chkstk_darwin(v7);
  char v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v41 = a1;
  if (v11)
  {
    v38[1] = v4;
    uint64_t v39 = a2;
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v43 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    BOOL v13 = _swiftEmptyArrayStorage;
    uint64_t v14 = _swiftEmptyArrayStorage;
    unint64_t v42 = v6;
    do
    {
      sub_1000B9378(v12, (uint64_t)v10, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        int v17 = *(_DWORD *)v10;
        sub_10007C4A4(*((void *)v10 + 1));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = sub_100017448(0, v14[2] + 1, 1, v14);
        }
        unint64_t v19 = v14[2];
        unint64_t v18 = v14[3];
        if (v19 >= v18 >> 1) {
          uint64_t v14 = sub_100017448((void *)(v18 > 1), v19 + 1, 1, v14);
        }
        void v14[2] = v19 + 1;
        *((_DWORD *)v14 + v19 + 8) = v17;
      }
      else
      {
        uint64_t v20 = v7;
        uint64_t v21 = *(void *)v10;
        uint64_t v46 = 0;
        unint64_t v47 = 0xE000000000000000;
        unint64_t v22 = CommandID.tag.getter(v21);
        char v44 = v22;
        int v45 = HIDWORD(v22);
        sub_1005E2E90();
        uint64_t v23 = v46;
        unint64_t v24 = v47;
        uint64_t v25 = v14;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          BOOL v13 = sub_100015F0C(0, v13[2] + 1, 1, v13);
        }
        unint64_t v27 = v13[2];
        unint64_t v26 = v13[3];
        unint64_t v28 = v13;
        if (v27 >= v26 >> 1) {
          unint64_t v28 = sub_100015F0C((void *)(v26 > 1), v27 + 1, 1, v13);
        }
        uint64_t v15 = (uint64_t)&v10[*(int *)(sub_10000566C(&qword_10070B6A0) + 64)];
        _OWORD v28[2] = v27 + 1;
        BOOL v13 = v28;
        unint64_t v16 = &v28[2 * v27];
        v16[4] = v23;
        v16[5] = v24;
        sub_1000B93E0(v15, type metadata accessor for ClientCommand);
        uint64_t v7 = v20;
        uint64_t v14 = v25;
        uint64_t v6 = v42;
      }
      v12 += v43;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    a2 = v39;
    if (v13[2]) {
      goto LABEL_16;
    }
  }
  else
  {
    BOOL v13 = _swiftEmptyArrayStorage;
    uint64_t v14 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2])
    {
LABEL_16:
      char v29 = v13;
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease();
  char v29 = 0;
LABEL_19:
  uint64_t v30 = v14[2];
  swift_bridgeObjectRelease();
  if (!v30)
  {
    swift_bridgeObjectRelease();
    uint64_t v31 = *(void *)(a2 + 16);
    if (v31) {
      goto LABEL_21;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    return (unint64_t)v29;
  }
  uint64_t v31 = *(void *)(a2 + 16);
  if (!v31) {
    goto LABEL_29;
  }
LABEL_21:
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = a2 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
  uint64_t v35 = *(void *)(v40 + 72);
  while (1)
  {
    sub_1000B9378(v34, (uint64_t)v6, type metadata accessor for TaskHistory.Previous);
    unint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 1) {
      break;
    }
    BOOL v37 = __OFADD__(v33++, 1);
    if (v37) {
      goto LABEL_31;
    }
    sub_1000B93E0((uint64_t)v6, type metadata accessor for ClientCommand);
LABEL_23:
    v34 += v35;
    if (!--v31) {
      goto LABEL_29;
    }
  }
  unint64_t result = sub_10007C4A4(*v6);
  BOOL v37 = __OFADD__(v32++, 1);
  if (!v37) {
    goto LABEL_23;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1000B2D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void (*v23)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t result;
  unsigned int v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void v41[3];
  uint64_t v42;
  uint64_t v43;
  long long v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  unsigned __int8 v49;
  char v50;
  long long v51;
  uint64_t v52;
  int v53;
  long long v54;
  Swift::String v55;
  Swift::String v56;
  Swift::String v57;
  Swift::String v58;
  Swift::String v59;

  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1000B28F4(v4, v5);
  uint64_t v8 = v7;
  uint64_t v39 = v10;
  uint64_t v40 = v9;
  *(void *)&char v44 = 91;
  *((void *)&v44 + 1) = 0xE100000000000000;
  uint64_t v11 = a1 + *(int *)(type metadata accessor for RunningTask() + 28);
  uint64_t v12 = (void *)(v11 + *(int *)(type metadata accessor for Task.Logger(0) + 20));
  uint64_t v13 = v12[1];
  uint64_t v14 = (void *)v12[2];
  LOBYTE(v41[0]) = *v12;
  sub_1000B91EC();
  unint64_t v15 = v6;
  swift_bridgeObjectRetain();
  uint64_t v38 = v8;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1005E1F20();
  unint64_t v18 = v17;
  if (sub_1005E1DC0() <= 1)
  {
    v55._countAndFlagsBits = 48;
    v55._object = (void *)0xE100000000000000;
    sub_1005E1E30(v55);
  }
  v56._countAndFlagsBits = v16;
  v56._object = v18;
  sub_1005E1E30(v56);
  swift_bridgeObjectRelease();
  v57._countAndFlagsBits = 45;
  v57._object = (void *)0xE100000000000000;
  sub_1005E1E30(v57);
  swift_bridgeObjectRetain();
  v58._countAndFlagsBits = v13;
  v58._object = v14;
  sub_1005E1E30(v58);
  swift_bridgeObjectRelease();
  v59._countAndFlagsBits = 93;
  v59._object = (void *)0xE100000000000000;
  sub_1005E1E30(v59);
  uint64_t v19 = *((void *)&v44 + 1);
  BOOL v37 = v44;
  sub_1000B9240(a1, (uint64_t)&v44);
  if (v50)
  {
    if (v50 == 1)
    {
      uint64_t v35 = v48;
      unsigned __int8 v20 = v49;
      sub_100021BFC(&v44, (uint64_t)v41);
      uint64_t v21 = v42;
      uint64_t v22 = v43;
      sub_10003BCDC(v41, v42);
      uint64_t v23 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v22 + 32);
      swift_bridgeObjectRetain();
      v23(&v51, v21, v22);
      unint64_t v24 = v52;
      LODWORD(v21) = v53;
      char v54 = v51;
      sub_10001D550((uint64_t)&v54);
      uint64_t v25 = sub_1000AC520(v24, v21);
      unint64_t v27 = v26;
      if (v20)
      {
        unint64_t v28 = 0;
        char v29 = 0;
      }
      else
      {
        unint64_t v28 = ConnectionID.debugDescription.getter(v35);
        char v29 = v32;
      }
      sub_1000B93E0(a1, (uint64_t (*)(void))type metadata accessor for RunningTask);
      sub_1000B92E0(0, 0);
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v41);
      char v36 = 2;
      uint64_t v30 = 2;
      goto LABEL_14;
    }
    if (v48 | ((unint64_t)v49 << 32) || v46 | v47 | (unint64_t)v44 | v45 | *((void *)&v44 + 1))
    {
      swift_bridgeObjectRetain();
      sub_1000B93E0(a1, (uint64_t (*)(void))type metadata accessor for RunningTask);
      uint64_t v25 = 0;
      unint64_t v27 = 0;
      unint64_t v28 = 0;
      char v29 = 0;
      uint64_t v33 = 1;
      char v36 = 2;
      uint64_t v30 = 2;
      goto LABEL_15;
    }
    swift_bridgeObjectRetain();
    sub_1000B93E0(a1, (uint64_t (*)(void))type metadata accessor for RunningTask);
    uint64_t v25 = 0;
    unint64_t v27 = 0;
    unint64_t v28 = 0;
    char v29 = 0;
    uint64_t v30 = 1;
    uint64_t v31 = 2;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1000B93E0(a1, (uint64_t (*)(void))type metadata accessor for RunningTask);
    sub_1000B9324((uint64_t)&v44);
    uint64_t v25 = 0;
    unint64_t v27 = 0;
    unint64_t v28 = 0;
    char v29 = 0;
    uint64_t v30 = 2;
    uint64_t v31 = 1;
  }
  char v36 = v31;
LABEL_14:
  uint64_t v33 = 2;
LABEL_15:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000B929C(v25, v27);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  unint64_t result = sub_1000B92E0(v25, v27);
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v38;
  *(void *)(a2 + 16) = v40;
  *(void *)(a2 + 24) = v39;
  *(void *)(a2 + 32) = v37;
  *(void *)(a2 + 40) = v19;
  *(unsigned char *)(a2 + 48) = v36;
  *(void *)(a2 + 56) = v25;
  *(void *)(a2 + 64) = v27;
  *(void *)(a2 + 72) = v28;
  *(void *)(a2 + 80) = v29;
  *(unsigned char *)(a2 + 88) = v30;
  *(unsigned char *)(a2 + 89) = v33;
  return result;
}

void *sub_1000B3174(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RunningTask();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2 - 8);
  unint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v21 - v7;
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    uint64_t v22 = _swiftEmptyArrayStorage;
    sub_10001A894(0, v9, 0);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    uint64_t v10 = v22;
    do
    {
      sub_1000B9378(v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for RunningTask);
      sub_1000B9378((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RunningTask);
      sub_1000B2D64((uint64_t)v6, (uint64_t)v23);
      sub_1000B93E0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for RunningTask);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10001A894(0, v10[2] + 1, 1);
        uint64_t v10 = v22;
      }
      unint64_t v14 = v10[2];
      unint64_t v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        sub_10001A894(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v22;
      }
      v10[2] = v14 + 1;
      unint64_t v15 = &v10[12 * v14];
      long long v16 = v23[1];
      v15[2] = v23[0];
      v15[3] = v16;
      long long v17 = v23[2];
      long long v18 = v23[3];
      long long v19 = v24[0];
      *(_OWORD *)((char *)v15 + 106) = *(_OWORD *)((char *)v24 + 10);
      v15[5] = v18;
      v15[6] = v19;
      unsigned char v15[4] = v17;
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1000B3380@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)&long long v79 = 0;
  *((void *)&v79 + 1) = 0xE000000000000000;
  LOBYTE(v71[0]) = *(unsigned char *)(*((void *)a1 + 37) + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
  sub_1000B91EC();
  uint64_t v6 = sub_1005E1F20();
  uint64_t v8 = v7;
  if (sub_1005E1DC0() <= 1)
  {
    v95._countAndFlagsBits = 48;
    v95._object = (void *)0xE100000000000000;
    sub_1005E1E30(v95);
  }
  v96._countAndFlagsBits = v6;
  v96._object = v8;
  sub_1005E1E30(v96);
  swift_bridgeObjectRelease();
  uint64_t v66 = *((void *)&v79 + 1);
  uint64_t v67 = v79;
  long long v9 = a1[13];
  long long v91 = a1[12];
  long long v92 = v9;
  long long v10 = a1[15];
  long long v93 = a1[14];
  long long v94 = v10;
  long long v11 = a1[9];
  long long v87 = a1[8];
  long long v88 = v11;
  long long v12 = a1[11];
  long long v89 = a1[10];
  long long v90 = v12;
  long long v13 = a1[5];
  long long v83 = a1[4];
  long long v84 = v13;
  long long v14 = a1[7];
  long long v85 = a1[6];
  long long v86 = v14;
  long long v15 = a1[1];
  long long v79 = *a1;
  long long v80 = v15;
  long long v16 = a1[3];
  long long v81 = a1[2];
  long long v82 = v16;
  unsigned __int8 v53 = BYTE1(v80);
  if (BYTE1(v80)) {
    int v17 = 256;
  }
  else {
    int v17 = 0;
  }
  char v50 = v80;
  int v18 = v17 | v80;
  uint64_t v47 = *((void *)&v81 + 1);
  uint64_t v48 = *((void *)&v80 + 1);
  if (BYTE2(v80)) {
    int v19 = 0x10000;
  }
  else {
    int v19 = 0;
  }
  char v46 = v81;
  Environment.capturedValue.getter(v18 | v19, *((uint64_t *)&v80 + 1), v81, (uint64_t)v71);
  uint64_t v64 = v71[1];
  uint64_t v65 = v71[0];
  uint64_t v62 = v71[3];
  uint64_t v63 = v71[2];
  char v61 = v72;
  uint64_t v59 = v74;
  uint64_t v60 = v73;
  uint64_t v57 = v76;
  uint64_t v58 = v75;
  uint64_t v20 = v82;
  char v56 = sub_1000B25E8(v82);
  uint64_t v21 = swift_bridgeObjectRetain();
  Swift::String v55 = sub_1000A9EAC(v21);
  swift_bridgeObjectRelease();
  uint64_t v49 = sub_10009E55C();
  uint64_t v51 = v22;
  uint64_t v52 = v23;
  uint64_t v44 = v90;
  uint64_t v45 = *((void *)&v89 + 1);
  uint64_t v24 = *((void *)&v91 + 1);
  char v25 = BYTE8(v90) & 1;
  uint64_t v26 = v89;
  uint64_t v27 = v86;
  unint64_t v28 = sub_10008C078();
  char v29 = BYTE10(v79);
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1000D8938();
  unint64_t v31 = sub_1000D8D74(v50, v53, v48, v46, v47, v29, v20, v30);
  sub_100058C7C(v26, v45, v44, v25, v27, (uint64_t)v28, BYTE4(v31) & 1, v24);
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_1000D3B0C(v33);
  swift_release();
  swift_release();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v54 = sub_1000AAC04(v49, v51, v52);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v35 = MailboxesSelectionUsage.allConnections.getter((uint64_t)v34);
  swift_bridgeObjectRetain();
  char v36 = sub_1000B1ED0((uint64_t)v35, (uint64_t)v34);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease_n();
  uint64_t v37 = swift_bridgeObjectRetain();
  uint64_t v38 = sub_1000AA148(v37);
  swift_bridgeObjectRelease();
  if (v38[2])
  {
    sub_10000566C(&qword_10070A738);
    uint64_t v39 = (void *)sub_1005E2FF0();
  }
  else
  {
    uint64_t v39 = _swiftEmptyDictionarySingleton;
  }
  unint64_t v70 = v39;
  sub_1000B2670(v38, 1, &v70);
  swift_bridgeObjectRelease();
  uint64_t v40 = v70;
  long long v77 = a1[16];
  int v78 = *((_DWORD *)a1 + 68);
  uint64_t v41 = swift_bridgeObjectRetain();
  unint64_t v42 = sub_1000B3174(v41);
  uint64_t result = sub_10002A77C((uint64_t)&v77);
  *(void *)a4 = a2;
  *(void *)(a4 + 8) = a3;
  *(void *)(a4 + 16) = v67;
  *(void *)(a4 + 24) = v66;
  *(void *)(a4 + 32) = v65;
  *(void *)(a4 + 40) = v64;
  *(void *)(a4 + 48) = v63;
  *(void *)(a4 + 56) = v62;
  *(unsigned char *)(a4 + 64) = v61;
  *(void *)(a4 + 72) = v60;
  *(void *)(a4 + 80) = v59;
  *(void *)(a4 + 88) = v58;
  *(void *)(a4 + 96) = v57;
  *(unsigned char *)(a4 + 104) = v56;
  *(void *)(a4 + 112) = v55;
  *(void *)(a4 + 120) = v54;
  *(void *)(a4 + 128) = v36;
  *(void *)(a4 + 136) = v40;
  *(void *)(a4 + 144) = v42;
  return result;
}

uint64_t sub_1000B37E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v3 = *(void *)(a1 + 160);
  uint64_t v4 = *(void *)(a1 + 168);
  uint64_t v5 = *(void *)(a1 + 176);
  char v6 = *(unsigned char *)(a1 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100064054(v2);
  sub_10005636C(v3, v4, v5, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1000B38FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v3 = *(void *)(a1 + 160);
  uint64_t v4 = *(void *)(a1 + 168);
  char v5 = *(unsigned char *)(a1 + 184);
  uint64_t v7 = *(void *)(a1 + 176);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000852BC(v2);
  sub_10000F0D4(v3, v4, v7, v5);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000B3A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v108 = sub_1000AA388(a1);
  swift_bridgeObjectRelease();
  uint64_t v110 = *(void *)(a2 + 16);
  if (v110)
  {
    uint64_t v111 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    while (1)
    {
      char v5 = (int *)(v111 + 24 * v4);
      int v128 = *v5;
      uint64_t v7 = *((void *)v5 + 1);
      unint64_t v6 = *((void *)v5 + 2);
      int64_t v8 = *(void *)(v7 + 16);
      int64_t v126 = v8;
      if ((v6 & 4) == 0)
      {
        if (v8)
        {
          uint64_t v113 = v4;
          sub_1000572C4(v7, v6);
          sub_1000572C4(v7, v6);
          swift_bridgeObjectRetain();
          sub_10001A914(0, v8, 0);
          uint64_t v9 = sub_1000D3A58(v7);
          int v11 = v10;
          uint64_t v12 = 0;
          uint64_t v13 = v7 + 64;
          char v14 = *(unsigned char *)(v7 + 32);
          int v115 = v10;
          uint64_t v118 = v7 + 64;
          while (1)
          {
            if (v9 < 0 || v9 >= 1 << v14)
            {
              __break(1u);
LABEL_89:
              __break(1u);
LABEL_90:
              __break(1u);
              goto LABEL_91;
            }
            unint64_t v18 = (unint64_t)v9 >> 6;
            if ((*(void *)(v13 + 8 * ((unint64_t)v9 >> 6)) & (1 << v9)) == 0) {
              goto LABEL_90;
            }
            if (*(_DWORD *)(v7 + 36) != v11) {
              goto LABEL_92;
            }
            uint64_t v120 = v12;
            uint64_t v19 = *(void *)(v7 + 48) + 16 * v9;
            uint64_t v20 = *(void *)v19;
            int v123 = *(_DWORD *)(v19 + 8);
            unint64_t v22 = _swiftEmptyArrayStorage[2];
            unint64_t v21 = _swiftEmptyArrayStorage[3];
            swift_bridgeObjectRetain();
            if (v22 >= v21 >> 1) {
              sub_10001A914(v21 > 1, v22 + 1, 1);
            }
            _swiftEmptyArrayStorage[2] = v22 + 1;
            uint64_t v23 = &_swiftEmptyArrayStorage[2 * v22];
            _OWORD v23[4] = v20;
            *((_DWORD *)v23 + 10) = v123;
            *((_DWORD *)v23 + 11) = v128;
            char v14 = *(unsigned char *)(v7 + 32);
            unint64_t v15 = 1 << v14;
            if (v9 >= 1 << v14) {
              goto LABEL_94;
            }
            uint64_t v13 = v7 + 64;
            uint64_t v24 = *(void *)(v118 + 8 * v18);
            if ((v24 & (1 << v9)) == 0) {
              goto LABEL_96;
            }
            if (*(_DWORD *)(v7 + 36) != v11) {
              goto LABEL_98;
            }
            unint64_t v25 = v24 & (-2 << (v9 & 0x3F));
            if (v25)
            {
              unint64_t v15 = __clz(__rbit64(v25)) | v9 & 0xFFFFFFFFFFFFFFC0;
              int64_t v16 = v126;
              uint64_t v17 = v120;
            }
            else
            {
              unint64_t v26 = v18 + 1;
              unint64_t v27 = (v15 + 63) >> 6;
              int64_t v16 = v126;
              uint64_t v17 = v120;
              if (v18 + 1 < v27)
              {
                unint64_t v28 = *(void *)(v118 + 8 * v26);
                if (!v28)
                {
                  unint64_t v26 = v18 + 2;
                  if (v18 + 2 >= v27) {
                    goto LABEL_9;
                  }
                  unint64_t v28 = *(void *)(v118 + 8 * v26);
                  if (!v28)
                  {
                    while (v27 - 3 != v18)
                    {
                      unint64_t v28 = *(void *)(v7 + 88 + 8 * v18++);
                      if (v28)
                      {
                        unint64_t v26 = v18 + 2;
                        goto LABEL_22;
                      }
                    }
                    goto LABEL_9;
                  }
                }
LABEL_22:
                unint64_t v15 = __clz(__rbit64(v28)) + (v26 << 6);
              }
            }
LABEL_9:
            uint64_t v12 = v17 + 1;
            int v11 = v115;
            uint64_t v9 = v15;
            if (v12 == v16)
            {
              swift_bridgeObjectRelease();
              uint64_t v4 = v113;
              goto LABEL_52;
            }
          }
        }
        sub_1000572C4(v7, v6);
        swift_bridgeObjectRetain();
        sub_100023440(v6);
LABEL_52:
        sub_100023388(v6);
        swift_bridgeObjectRelease();
        sub_10005730C(v7, v6);
        goto LABEL_4;
      }
      if (v8) {
        break;
      }
LABEL_4:
      ++v4;
      sub_100011B5C((uint64_t)_swiftEmptyArrayStorage);
      if (v4 == v110)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_56;
      }
    }
    unint64_t v112 = *((void *)v5 + 2);
    uint64_t v114 = v4;
    sub_1000572C4(v7, v6);
    swift_bridgeObjectRetain();
    sub_10001A914(0, v8, 0);
    uint64_t v29 = sub_1000D3A58(v7);
    int v31 = v30;
    uint64_t v32 = 0;
    uint64_t v33 = v7 + 64;
    char v34 = *(unsigned char *)(v7 + 32);
    int v116 = v30;
    uint64_t v119 = v7 + 64;
    while (1)
    {
      if (v29 < 0 || v29 >= 1 << v34) {
        goto LABEL_89;
      }
      unint64_t v38 = (unint64_t)v29 >> 6;
      if ((*(void *)(v33 + 8 * ((unint64_t)v29 >> 6)) & (1 << v29)) == 0)
      {
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        uint64_t result = sub_1005E3380();
        __break(1u);
        return result;
      }
      if (*(_DWORD *)(v7 + 36) != v31) {
        goto LABEL_93;
      }
      uint64_t v121 = v32;
      uint64_t v39 = *(void *)(v7 + 48) + 16 * v29;
      uint64_t v40 = *(void *)v39;
      int v124 = *(_DWORD *)(v39 + 8);
      unint64_t v42 = _swiftEmptyArrayStorage[2];
      unint64_t v41 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v42 >= v41 >> 1) {
        sub_10001A914(v41 > 1, v42 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v42 + 1;
      uint64_t v43 = &_swiftEmptyArrayStorage[2 * v42];
      v43[4] = v40;
      *((_DWORD *)v43 + 10) = v124;
      *((_DWORD *)v43 + 11) = v128;
      char v34 = *(unsigned char *)(v7 + 32);
      unint64_t v35 = 1 << v34;
      if (v29 >= 1 << v34) {
        goto LABEL_95;
      }
      uint64_t v33 = v7 + 64;
      uint64_t v44 = *(void *)(v119 + 8 * v38);
      if ((v44 & (1 << v29)) == 0) {
        goto LABEL_97;
      }
      if (*(_DWORD *)(v7 + 36) != v31) {
        goto LABEL_99;
      }
      unint64_t v45 = v44 & (-2 << (v29 & 0x3F));
      if (v45)
      {
        unint64_t v35 = __clz(__rbit64(v45)) | v29 & 0xFFFFFFFFFFFFFFC0;
        int64_t v36 = v126;
        uint64_t v37 = v121;
      }
      else
      {
        unint64_t v46 = v38 + 1;
        unint64_t v47 = (v35 + 63) >> 6;
        int64_t v36 = v126;
        uint64_t v37 = v121;
        if (v38 + 1 < v47)
        {
          unint64_t v48 = *(void *)(v119 + 8 * v46);
          if (!v48)
          {
            unint64_t v46 = v38 + 2;
            if (v38 + 2 >= v47) {
              goto LABEL_31;
            }
            unint64_t v48 = *(void *)(v119 + 8 * v46);
            if (!v48)
            {
              while (v47 - 3 != v38)
              {
                unint64_t v48 = *(void *)(v7 + 88 + 8 * v38++);
                if (v48)
                {
                  unint64_t v46 = v38 + 2;
                  goto LABEL_44;
                }
              }
              goto LABEL_31;
            }
          }
LABEL_44:
          unint64_t v35 = __clz(__rbit64(v48)) + (v46 << 6);
        }
      }
LABEL_31:
      uint64_t v32 = v37 + 1;
      int v31 = v116;
      uint64_t v29 = v35;
      if (v32 == v36)
      {
        sub_10005730C(v7, v112);
        sub_10005730C(v7, v112);
        uint64_t v4 = v114;
        goto LABEL_4;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_56:
  uint64_t v49 = _swiftEmptyArrayStorage[2];
  if (v49)
  {
    char v50 = &_swiftEmptyArrayStorage[5];
    *((void *)&v51 + 1) = 2;
    do
    {
      uint64_t v53 = *(v50 - 1);
      *(void *)&long long v51 = *v50;
      long long v129 = v51;
      swift_bridgeObjectRetain_n();
      uint64_t v54 = sub_1000AC520(v53, v129);
      uint64_t v56 = v55;
      unint64_t v58 = sub_100024668(v54, v55);
      uint64_t v59 = _swiftEmptyDictionarySingleton[2];
      BOOL v60 = (v57 & 1) == 0;
      uint64_t v61 = v59 + v60;
      if (__OFADD__(v59, v60)) {
        goto LABEL_100;
      }
      char v62 = v57;
      if (_swiftEmptyDictionarySingleton[3] < v61)
      {
        sub_100051A30(v61, 1);
        unint64_t v63 = sub_100024668(v54, v56);
        if ((v62 & 1) != (v64 & 1)) {
          goto LABEL_104;
        }
        unint64_t v58 = v63;
      }
      if (v62)
      {
        swift_bridgeObjectRelease();
        uint64_t v65 = _swiftEmptyDictionarySingleton[7];
        uint64_t v66 = *(void **)(v65 + 8 * v58);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v65 + 8 * v58) = v66;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v66 = sub_10001720C(0, v66[2] + 1, 1, v66);
          *(void *)(v65 + 8 * v58) = v66;
        }
        unint64_t v69 = v66[2];
        unint64_t v68 = v66[3];
        if (v69 >= v68 >> 1)
        {
          uint64_t v66 = sub_10001720C((void *)(v68 > 1), v69 + 1, 1, v66);
          *(void *)(v65 + 8 * v58) = v66;
        }
        v66[2] = v69 + 1;
        uint64_t v52 = &v66[2 * v69];
        v52[4] = v53;
        *((void *)&v51 + 1) = *((void *)&v129 + 1);
        v52[5] = v129;
      }
      else
      {
        sub_10000566C(&qword_10070A060);
        uint64_t v70 = swift_allocObject();
        *(_OWORD *)(v70 + 16) = xmmword_1005F6670;
        *(void *)(v70 + 32) = v53;
        *((void *)&v51 + 1) = *((void *)&v129 + 1);
        *(void *)(v70 + 40) = v129;
        _swiftEmptyDictionarySingleton[(v58 >> 6) + 8] |= 1 << v58;
        char v71 = (uint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v58);
        *char v71 = v54;
        v71[1] = v56;
        *(void *)(_swiftEmptyDictionarySingleton[7] + 8 * v58) = v70;
        uint64_t v72 = _swiftEmptyDictionarySingleton[2];
        BOOL v73 = __OFADD__(v72, 1);
        uint64_t v74 = v72 + 1;
        if (v73) {
          goto LABEL_102;
        }
        _swiftEmptyDictionarySingleton[2] = v74;
      }
      v50 += 2;
    }
    while (--v49);
  }
  swift_bridgeObjectRelease();
  sub_1000B1A80((uint64_t)_swiftEmptyDictionarySingleton);
  swift_release();
  uint64_t v75 = *(void *)(a3 + 16);
  if (v75)
  {
    char v130 = _swiftEmptyDictionarySingleton;
    uint64_t v76 = (unsigned char *)(a3 + 80);
    while (1)
    {
      int v122 = *((_DWORD *)v76 - 12);
      uint64_t v78 = *((void *)v76 - 5);
      unsigned int v79 = *((_DWORD *)v76 - 8);
      uint64_t v81 = *((void *)v76 - 3);
      unint64_t v80 = *((void *)v76 - 2);
      uint64_t v82 = *((void *)v76 - 1);
      char v83 = *v76;
      swift_bridgeObjectRetain();
      sub_100008D24(v81, v80);
      swift_bridgeObjectRetain();
      uint64_t v84 = swift_bridgeObjectRetain();
      uint64_t v127 = v78;
      unsigned int v125 = v79;
      uint64_t v85 = sub_1000AC520(v84, v79);
      uint64_t v87 = v86;
      unint64_t v88 = sub_100024668(v85, v86);
      long long v90 = v130;
      unint64_t v91 = v88;
      uint64_t v92 = v130[2];
      BOOL v93 = (v89 & 1) == 0;
      uint64_t v94 = v92 + v93;
      if (__OFADD__(v92, v93)) {
        goto LABEL_101;
      }
      char v95 = v89;
      if (v130[3] < v94)
      {
        sub_100051A24(v94, 1);
        unint64_t v96 = sub_100024668(v85, v87);
        if ((v95 & 1) != (v97 & 1)) {
          goto LABEL_104;
        }
        unint64_t v91 = v96;
        long long v90 = _swiftEmptyDictionarySingleton;
      }
      char v130 = v90;
      if (v95)
      {
        swift_bridgeObjectRelease();
        uint64_t v98 = v130[7];
        char v99 = *(void **)(v98 + 8 * v91);
        char v100 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v98 + 8 * v91) = v99;
        uint64_t v117 = v98;
        if ((v100 & 1) == 0)
        {
          char v99 = sub_1000170E4(0, v99[2] + 1, 1, v99);
          *(void *)(v98 + 8 * v91) = v99;
        }
        unint64_t v102 = v99[2];
        unint64_t v101 = v99[3];
        if (v102 >= v101 >> 1)
        {
          char v99 = sub_1000170E4((void *)(v101 > 1), v102 + 1, 1, v99);
          *(void *)(v117 + 8 * v91) = v99;
        }
        _OWORD v99[2] = v102 + 1;
        long long v77 = &v99[7 * v102];
        *((_DWORD *)v77 + 8) = v122;
        v77[5] = v127;
        *((_DWORD *)v77 + 12) = v125;
        v77[7] = v81;
        v77[8] = v80;
        v77[9] = v82;
        *((unsigned char *)v77 + 80) = v83;
      }
      else
      {
        sub_10000566C(&qword_10070A070);
        uint64_t v103 = swift_allocObject();
        *(_OWORD *)(v103 + 16) = xmmword_1005F6670;
        *(_DWORD *)(v103 + 32) = v122;
        *(void *)(v103 + 40) = v127;
        *(_DWORD *)(v103 + 48) = v125;
        *(void *)(v103 + 56) = v81;
        *(void *)(v103 + 64) = v80;
        *(void *)(v103 + 72) = v82;
        *(unsigned char *)(v103 + 80) = v83;
        v130[(v91 >> 6) + 8] |= 1 << v91;
        char v104 = (uint64_t *)(v130[6] + 16 * v91);
        *char v104 = v85;
        v104[1] = v87;
        *(void *)(v130[7] + 8 * v91) = v103;
        uint64_t v105 = v130[2];
        BOOL v73 = __OFADD__(v105, 1);
        uint64_t v106 = v105 + 1;
        if (v73) {
          goto LABEL_103;
        }
        v130[2] = v106;
      }
      v76 += 56;
      if (!--v75) {
        goto LABEL_87;
      }
    }
  }
  char v130 = _swiftEmptyDictionarySingleton;
LABEL_87:
  swift_bridgeObjectRelease();
  sub_1000B1640((uint64_t)v130);
  swift_release();
  return (uint64_t)v108;
}

uint64_t sub_1000B4464@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *(_DWORD *)(result + 32);
  char v4 = *(unsigned char *)(result + 36);
  uint64_t v5 = *(void *)(result + 56);
  char v6 = *(unsigned char *)(result + 64);
  if (*(unsigned char *)(result + 48))
  {
    unint64_t v7 = 0;
  }
  else
  {
    sub_10000566C(&qword_10070A9B8);
    uint64_t result = sub_1005E2E90();
    unint64_t v7 = 0xE000000000000000;
  }
  if (v4) {
    int v8 = 0;
  }
  else {
    int v8 = v3;
  }
  *(_DWORD *)a2 = v8;
  *(unsigned char *)(a2 + 4) = v4 & 1;
  if (v6) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v5;
  }
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = v9;
  *(unsigned char *)(a2 + 32) = v6 & 1;
  return result;
}

uint64_t sub_1000B4524(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MessagesPendingDownload();
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(*(void *)a1 + 16);
  sub_1000B9378(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  if (v8)
  {
    sub_1000B93E0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
LABEL_5:
    uint64_t v11 = swift_bridgeObjectRetain();
    sub_1001712FC(v11);
    uint64_t v10 = sub_1000AADEC();
    sub_100007A48((uint64_t)v4, &qword_100709E38);
    sub_1000AADEC();
    goto LABEL_6;
  }
  sub_10000566C(&qword_100709E60);
  uint64_t v9 = sub_1005E3630();
  sub_1000B93E0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  if ((v9 & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v10 = 0;
LABEL_6:
  sub_1000B93E0(a1, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  return v10;
}

uint64_t sub_1000B46F8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MessagesPendingDownload();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v7 = *a1;
  int v31 = a1[1];
  int v32 = v7;
  int v30 = a1[2];
  uint64_t v29 = type metadata accessor for PendingPersistenceUpdates();
  uint64_t v8 = (uint64_t)&a1[*(int *)(v29 + 28)];
  sub_1000B9378(v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  uint64_t v9 = sub_1000B4524((uint64_t)v6);
  uint64_t v28 = v9;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v16 = type metadata accessor for MessagesPendingDownloadPerPass();
  sub_1000B9378(v8 + *(int *)(v16 + 20), (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  sub_1000B882C(v9, v11);
  uint64_t v17 = sub_1000B4524((uint64_t)v6);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  sub_1000B882C(v17, v18);
  uint64_t v29 = sub_1000AADEC();
  uint64_t v25 = v24;
  sub_1000B93E0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for PendingPersistenceUpdates);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = v28;
  sub_1000B882C(v28, v11);
  sub_1000B882C(v17, v19);
  sub_1000B8BD4(v17, v19);
  sub_1000B8BD4(v26, v11);
  sub_1000B8BD4(v26, v11);
  sub_1000B8BD4(v17, v19);
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)a2 = v32;
  *(unsigned char *)(a2 + 1) = v31;
  *(unsigned char *)(a2 + 2) = v30;
  *(void *)(a2 + 8) = v26;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v13;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v17;
  *(void *)(a2 + 48) = v19;
  *(void *)(a2 + 56) = v21;
  *(void *)(a2 + 64) = v23;
  *(void *)(a2 + 72) = v29;
  *(void *)(a2 + 80) = v25;
  return result;
}

uint64_t sub_1000B4934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = _s15MissingMessagesO8CompleteVMa(0);
  __chkstk_darwin(v4);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = _s15MissingMessagesO11QueriedUIDsVMa(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v42[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = _s15MissingMessagesO10IncompleteVMa(0);
  __chkstk_darwin(v13);
  uint64_t v15 = &v42[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = _s15MissingMessagesOMa(0);
  __chkstk_darwin(v16);
  uint64_t v18 = &v42[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000B9378(a1, (uint64_t)v18, _s15MissingMessagesOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1000B9130((uint64_t)v18, (uint64_t)v6, _s15MissingMessagesO8CompleteVMa);
      char v20 = v6[4];
      if (v20) {
        int v21 = 0;
      }
      else {
        int v21 = *(_DWORD *)v6;
      }
      uint64_t v46 = 0;
      unint64_t v47 = 0xE000000000000000;
      sub_1000B9378((uint64_t)&v6[*(int *)(v4 + 20)], (uint64_t)v9, _s15MissingMessagesO11QueriedUIDsVMa);
      sub_10000566C(&qword_100709E38);
      sub_1005E2E90();
      sub_100007A48((uint64_t)v9, &qword_100709E38);
      uint64_t v22 = v46;
      unint64_t v23 = v47;
      sub_1000B93E0(a1, _s15MissingMessagesOMa);
      sub_1000B93E0((uint64_t)v6, _s15MissingMessagesO8CompleteVMa);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      int v29 = 0;
      char v30 = 1;
      char v31 = 2;
      char v32 = 1;
    }
    else
    {
      uint64_t result = sub_1000B93E0(a1, _s15MissingMessagesOMa);
      uint64_t v22 = 0;
      int v21 = 0;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      unint64_t v23 = 0;
      int v29 = 0;
      char v32 = 2;
      char v30 = 1;
      char v20 = 1;
      char v31 = 1;
    }
  }
  else
  {
    sub_1000B9130((uint64_t)v18, (uint64_t)v15, _s15MissingMessagesO10IncompleteVMa);
    sub_1000079E4((uint64_t)v15, (uint64_t)v12, &qword_100709E30);
    uint64_t v33 = sub_1000AADEC();
    uint64_t v44 = v34;
    uint64_t v45 = v33;
    sub_100007A48((uint64_t)v12, &qword_100709E38);
    swift_bridgeObjectRelease();
    uint64_t v35 = _s15MissingMessagesO8ProgressVMa(0);
    uint64_t v26 = sub_1000AADEC();
    uint64_t v25 = v36;
    swift_bridgeObjectRelease();
    uint64_t v37 = *(int *)(v13 + 24);
    unint64_t v38 = &v15[*(int *)(v13 + 20)];
    char v20 = v38[4];
    if (v20) {
      int v39 = 0;
    }
    else {
      int v39 = *(_DWORD *)v38;
    }
    int v43 = v39;
    uint64_t v46 = 0;
    unint64_t v47 = 0xE000000000000000;
    sub_1000B9378((uint64_t)&v15[v37], (uint64_t)v9, _s15MissingMessagesO11QueriedUIDsVMa);
    sub_10000566C(&qword_100709E38);
    sub_1005E2E90();
    sub_100007A48((uint64_t)v9, &qword_100709E38);
    uint64_t v22 = v46;
    unint64_t v23 = v47;
    swift_bridgeObjectRelease();
    uint64_t v40 = &v15[*(int *)(v35 + 24)];
    char v30 = v40[4];
    if (v30) {
      int v29 = 0;
    }
    else {
      int v29 = *(_DWORD *)v40;
    }
    sub_1000B93E0(a1, _s15MissingMessagesOMa);
    uint64_t v41 = (uint64_t)v15;
    int v21 = v43;
    uint64_t result = sub_1000B93E0(v41, _s15MissingMessagesO10IncompleteVMa);
    uint64_t v27 = v44;
    uint64_t v28 = v45;
    char v31 = 2;
    char v32 = 2;
  }
  *(unsigned char *)a2 = v31;
  *(void *)(a2 + 8) = v28;
  *(void *)(a2 + 16) = v27;
  *(void *)(a2 + 24) = v26;
  *(void *)(a2 + 32) = v25;
  *(_DWORD *)(a2 + 40) = v21;
  *(unsigned char *)(a2 + 44) = v20;
  *(void *)(a2 + 48) = v22;
  *(void *)(a2 + 56) = v23;
  *(_DWORD *)(a2 + 64) = v29;
  *(unsigned char *)(a2 + 68) = v30;
  *(unsigned char *)(a2 + 69) = v32;
  return result;
}

void *sub_1000B4E04@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  void (*v35)(long long *__return_ptr, uint64_t, uint64_t);
  unsigned __int8 *v36;
  uint64_t v37;
  void *v38;
  unsigned char *v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned char v47[12];
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  long long v54;
  long long v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  long long v63;
  long long v64;
  int v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  long long v70;
  unsigned __int8 *v71;
  uint64_t v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  unsigned char *v78;
  void *v79;
  void *v80;
  uint64_t v81;
  void *v82;
  long long v83;
  void *v84;
  void v85[35];
  void *v86;
  int v87;
  char v88;
  int v89;
  char v90;
  uint64_t v91;
  char v92;
  void *v93;
  long long v94;
  long long v95;
  long long v96;
  uint64_t v97;
  char v98;
  char v99;
  char v100;
  char v101;
  long long v102;
  long long v103;
  long long v104;
  long long v105;
  long long v106;
  void *v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  char v118;
  char v119;
  void *v120;
  int v121;
  char v122;
  int v123;
  char v124;
  uint64_t v125;
  char v126;
  void *v127;
  _OWORD v128[3];
  uint64_t v129;
  char v130;
  unsigned char v131[88];
  void *v132;
  long long v133[2];
  uint64_t v134;
  uint64_t v135;
  unsigned __int8 v136;
  unsigned char v137[80];
  uint64_t v138;
  char v139[8];
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  unsigned __int8 v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  unsigned __int8 v149;
  unsigned __int8 v150;

  uint64_t v82 = a2;
  uint64_t v3 = _s15MissingMessagesOMa(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v78 = &v47[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for PendingPersistenceUpdates();
  __chkstk_darwin(v5 - 8);
  char v71 = &v47[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unsigned int v79 = *(void **)a1;
  uint64_t v120 = v79;
  int v7 = *(_DWORD *)(a1 + 8);
  int v8 = *(unsigned __int8 *)(a1 + 12);
  if (*(unsigned char *)(a1 + 12)) {
    int v7 = 0;
  }
  uint64_t v76 = v7;
  uint64_t v121 = v7;
  long long v77 = v8;
  int v122 = v8;
  int v9 = *(_DWORD *)(a1 + 16);
  int v10 = *(unsigned __int8 *)(a1 + 20);
  if (*(unsigned char *)(a1 + 20)) {
    int v9 = 0;
  }
  uint64_t v74 = v9;
  uint64_t v75 = v10;
  int v123 = v9;
  int v124 = v10;
  uint64_t v11 = *(void *)(a1 + 24);
  int v12 = *(unsigned __int8 *)(a1 + 32);
  if (*(unsigned char *)(a1 + 32)) {
    uint64_t v11 = 0;
  }
  uint64_t v72 = v11;
  unsigned int v125 = v11;
  BOOL v73 = v12;
  int64_t v126 = v12;
  uint64_t v127 = sub_10009C558(*(void *)(a1 + 152), *(void *)(a1 + 160), *(void *)(a1 + 168));
  unint64_t v80 = v127;
  uint64_t v81 = a1;
  uint64_t v13 = *(void *)(a1 + 176);
  int64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v86 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10001A994(0, v14, 0);
    uint64_t v15 = v86;
    uint64_t result = (void *)sub_1000D38CC(v13);
    uint64_t v17 = (uint64_t)result;
    uint64_t v19 = v18;
    int v21 = v20 & 1;
    *(void *)&char v83 = v13 + 56;
    while ((v17 & 0x8000000000000000) == 0 && v17 < 1 << *(unsigned char *)(v13 + 32))
    {
      if (((*(void *)(v83 + (((unint64_t)v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(v13 + 36) != v19) {
        goto LABEL_23;
      }
      LODWORD(v84) = v21;
      uint64_t v22 = (uint64_t *)(*(void *)(v13 + 48) + 16 * v17);
      uint64_t v23 = *v22;
      unint64_t v24 = v22[1];
      sub_100008D24(*v22, v24);
      uint64_t v86 = v15;
      unint64_t v26 = v15[2];
      unint64_t v25 = v15[3];
      if (v26 >= v25 >> 1)
      {
        sub_10001A994(v25 > 1, v26 + 1, 1);
        uint64_t v15 = v86;
      }
      v15[2] = v26 + 1;
      uint64_t v27 = &v15[2 * v26];
      v27[4] = v23;
      v27[5] = v24;
      uint64_t result = (void *)sub_1000D3970(v17, v19, v84 & 1, v13);
      uint64_t v17 = (uint64_t)result;
      uint64_t v19 = v28;
      int v21 = v29 & 1;
      if (!--v14)
      {
        sub_100060FF0((uint64_t)result, v28, v21);
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _swiftEmptyArrayStorage;
LABEL_18:
    if (!v15[2])
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = 0;
    }
    *(void *)&v128[0] = v15;
    char v30 = (int *)type metadata accessor for MailboxSyncState();
    uint64_t v31 = v81;
    char v32 = (void *)(v81 + v30[12]);
    uint64_t v33 = v32[3];
    uint64_t v34 = v32[4];
    sub_10003BCDC(v32, v33);
    uint64_t v84 = v15;
    uint64_t v35 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v34 + 88);
    swift_bridgeObjectRetain();
    v35(v133, v33, v34);
    char v83 = v133[0];
    uint64_t v70 = v133[1];
    unint64_t v68 = v135;
    unint64_t v69 = v134;
    uint64_t v67 = v136;
    sub_10007C1E8(v133, (uint64_t)v128 + 8);
    uint64_t v36 = v71;
    sub_1000B9378(v31 + v30[13], (uint64_t)v71, (uint64_t (*)(void))type metadata accessor for PendingPersistenceUpdates);
    sub_1000B8FCC((uint64_t)v133, (void (*)(void, void, void, void, void, void, void))sub_10007BCA4);
    sub_1000B46F8(v36, (uint64_t)v137);
    LODWORD(v71) = v137[0];
    uint64_t v65 = v137[2];
    uint64_t v66 = v137[1];
    unint64_t v63 = *(_OWORD *)&v137[24];
    char v64 = *(_OWORD *)&v137[8];
    *(_OWORD *)&v131[16] = *(_OWORD *)&v137[16];
    *(_OWORD *)char v131 = *(_OWORD *)v137;
    *(_OWORD *)&v131[64] = *(_OWORD *)&v137[64];
    uint64_t v54 = *(_OWORD *)&v137[40];
    uint64_t v55 = *(_OWORD *)&v137[56];
    uint64_t v56 = v138;
    char v57 = *(void *)&v137[72];
    *(void *)&v131[80] = v138;
    *(_OWORD *)&v131[48] = *(_OWORD *)&v137[48];
    *(_OWORD *)&v131[32] = *(_OWORD *)&v137[32];
    sub_1000B8DD8((uint64_t *)v137);
    uint64_t v37 = swift_bridgeObjectRetain();
    unint64_t v38 = sub_1000AA598(v37);
    swift_bridgeObjectRelease();
    uint64_t v132 = v38;
    int v39 = v78;
    sub_1000B9378(v31 + v30[17], (uint64_t)v78, _s15MissingMessagesOMa);
    swift_bridgeObjectRetain();
    sub_1000B4934((uint64_t)v39, (uint64_t)v139);
    uint64_t v40 = v139[0];
    LODWORD(v78) = v139[0];
    uint64_t v41 = v140;
    unint64_t v58 = v140;
    unint64_t v42 = v142;
    int v43 = v143;
    char v62 = v142;
    BOOL v60 = v143;
    LODWORD(v35) = v144;
    uint64_t v61 = v144;
    LOBYTE(v30) = v145;
    uint64_t v59 = v145;
    uint64_t v52 = v146;
    uint64_t v53 = v141;
    long long v51 = v147;
    uint64_t v49 = v149;
    char v50 = v148;
    unint64_t v48 = v150;
    sub_1000B93E0(v31, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
    v85[0] = v79;
    LODWORD(v85[1]) = v76;
    BYTE4(v85[1]) = v77;
    LODWORD(v85[2]) = v74;
    BYTE4(v85[2]) = v75;
    v85[3] = v72;
    LOBYTE(v85[4]) = v73;
    v85[5] = v80;
    v85[6] = v84;
    *(_OWORD *)&v85[7] = v83;
    *(_OWORD *)&v85[9] = v70;
    v85[11] = v69;
    v85[12] = v68;
    LOBYTE(v85[13]) = v67;
    LOBYTE(v85[14]) = (_BYTE)v71;
    BYTE1(v85[14]) = v66;
    BYTE2(v85[14]) = v65;
    *(_OWORD *)&v85[15] = v64;
    *(_OWORD *)&v85[17] = v63;
    *(_OWORD *)&v85[19] = v54;
    *(_OWORD *)&v85[21] = v55;
    v85[23] = v57;
    v85[24] = v56;
    v85[25] = v38;
    LOBYTE(v85[26]) = v40;
    v85[27] = v41;
    uint64_t v44 = v53;
    v85[28] = v53;
    v85[29] = v42;
    v85[30] = v43;
    LODWORD(v85[31]) = v35;
    BYTE4(v85[31]) = (_BYTE)v30;
    uint64_t v46 = v51;
    uint64_t v45 = v52;
    v85[32] = v52;
    v85[33] = v51;
    LOBYTE(v35) = v49;
    LODWORD(v42) = v50;
    LODWORD(v85[34]) = v50;
    BYTE4(v85[34]) = v49;
    LOBYTE(v43) = v48;
    BYTE5(v85[34]) = v48;
    sub_1000B8E44((uint64_t)v85);
    swift_bridgeObjectRelease();
    sub_1000B8F60((uint64_t *)v137);
    sub_1000B8FCC((uint64_t)v133, (void (*)(void, void, void, void, void, void, void))sub_10007BD1C);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v86 = v120;
    uint64_t v87 = v121;
    unint64_t v88 = v122;
    char v89 = v123;
    long long v90 = v124;
    unint64_t v91 = v125;
    uint64_t v92 = v126;
    uint64_t v94 = v128[0];
    char v95 = v128[1];
    unint64_t v96 = v128[2];
    BOOL v93 = v127;
    char v97 = v129;
    uint64_t v98 = v130;
    char v99 = v131[0];
    char v100 = v131[1];
    unint64_t v101 = v131[2];
    unint64_t v102 = *(_OWORD *)&v131[8];
    uint64_t v103 = *(_OWORD *)&v131[24];
    char v104 = *(_OWORD *)&v131[40];
    uint64_t v105 = *(_OWORD *)&v131[56];
    uint64_t v106 = *(_OWORD *)&v131[72];
    char v107 = v132;
    uint64_t v108 = (char)v78;
    uint64_t v109 = v58;
    uint64_t v110 = v44;
    uint64_t v111 = v62;
    unint64_t v112 = v60;
    uint64_t v113 = v61;
    uint64_t v114 = v59;
    int v115 = v45;
    int v116 = v46;
    uint64_t v117 = v42;
    uint64_t v118 = (char)v35;
    uint64_t v119 = v43;
    sub_1000B9010((uint64_t)&v86);
    return memcpy(v82, v85, 0x116uLL);
  }
  return result;
}

void *sub_1000B555C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = _s19UserInitiatedSearchVMa(0);
  *(void *)&long long v88 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (int *)((char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for MailboxSyncState();
  __chkstk_darwin(v7 - 8);
  int v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = *(_OWORD *)(a1 + 32);
  long long v11 = *(_OWORD *)(a1 + 48);
  long long v12 = *(_OWORD *)a1;
  long long v111 = *(_OWORD *)(a1 + 16);
  long long v112 = v10;
  long long v13 = *(_OWORD *)(a1 + 64);
  long long v113 = v11;
  v114[0] = v13;
  *(_OWORD *)((char *)v114 + 9) = *(_OWORD *)(a1 + 73);
  uint64_t v103 = 0;
  uint64_t v102 = 0;
  long long v110 = v12;
  unsigned int v14 = DWORD2(v111);
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_1000AC520(v15, v14);
  uint64_t v18 = v17;
  uint64_t v83 = v16;
  uint64_t v94 = v16;
  uint64_t v95 = v17;
  swift_bridgeObjectRetain();
  sub_100057150((uint64_t)&v110);
  sub_1000B4464((uint64_t)&v110, (uint64_t)&v104);
  int v81 = BYTE4(v104);
  int v82 = v104;
  uint64_t v79 = v105;
  uint64_t v80 = *((void *)&v104 + 1);
  uint64_t v78 = *((void *)&v105 + 1);
  int v77 = v106;
  sub_1000571A4((uint64_t)&v110);
  v96[0] = v104;
  v96[1] = v105;
  unsigned __int8 v97 = v106;
  uint64_t v19 = *(void *)(a1 + 96);
  uint64_t v84 = v18;
  uint64_t v85 = a2;
  if (v19)
  {
    char v20 = (_DWORD *)(v19
                   + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
    swift_beginAccess();
    LODWORD(v93[0]) = *v20;
    sub_10001FDF0((uint64_t)&v104 + 8, (uint64_t)v109, &qword_10070BCC0);
    sub_100057B18((uint64_t)v109);
    uint64_t v21 = sub_1005E1CC0();
    uint64_t v23 = v22;
    uint64_t v75 = v21;
    uint64_t v98 = v21;
    uint64_t v99 = v22;
    uint64_t v24 = _s13SelectedStateV7WrappedVMa(0);
    sub_1000B9378((uint64_t)v20 + *(int *)(v24 + 20), (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
    uint64_t v76 = v23;
    swift_bridgeObjectRetain();
    sub_1000B4E04((uint64_t)v9, v91);
    memcpy(v93, v91, 0x116uLL);
    UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v93);
    sub_10001FDF0((uint64_t)v93, (uint64_t)v115, &qword_10070BBA8);
  }
  else
  {
    sub_1000B86BC((uint64_t)v93);
    uint64_t v98 = 0;
    uint64_t v99 = 0;
    sub_10001FDF0((uint64_t)&v104 + 8, (uint64_t)v90, &qword_10070BCC0);
    sub_100057B18((uint64_t)v90);
    sub_10001FDF0((uint64_t)v93, (uint64_t)v115, &qword_10070BBA8);
    uint64_t v75 = 0;
    uint64_t v76 = 0;
  }
  uint64_t v74 = v100;
  sub_10001FDF0((uint64_t)v115, (uint64_t)v100, &qword_10070BBA8);
  uint64_t v25 = *(void *)(a1 + 136);
  int64_t v26 = *(void *)(v25 + 16);
  uint64_t v86 = a1;
  if (!v26)
  {
    sub_1000B8A04((uint64_t)v115, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1000B86F0);
    uint64_t v27 = _swiftEmptyArrayStorage;
LABEL_15:
    v93[0] = (uint64_t)v27;
    swift_bridgeObjectRetain();
    sub_1000B0CD8(v93);
    swift_bridgeObjectRelease();
    uint64_t v39 = v93[0];
    if (!*(void *)(v93[0] + 16))
    {
      swift_release();
      uint64_t v39 = 0;
    }
    uint64_t v101 = v39;
    uint64_t v40 = *(void *)(a1 + 152);
    uint64_t v108 = v40;
    int64_t v41 = *(void *)(v40 + 16);
    uint64_t v73 = v39;
    if (v41)
    {
      swift_bridgeObjectRetain();
      sub_10002292C((uint64_t)&v108);
      v93[0] = (uint64_t)_swiftEmptyArrayStorage;
      sub_10001A8F4(0, v41, 0);
      uint64_t v42 = v40 + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80));
      uint64_t v43 = *(void *)(v88 + 72);
      uint64_t v44 = (void *)v93[0];
      do
      {
        sub_1000B9378(v42, (uint64_t)v6, _s19UserInitiatedSearchVMa);
        int v45 = *v6;
        sub_1000B93E0((uint64_t)v6, _s19UserInitiatedSearchVMa);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10001A8F4(0, v44[2] + 1, 1);
          uint64_t v44 = (void *)v93[0];
        }
        unint64_t v47 = v44[2];
        unint64_t v46 = v44[3];
        if (v47 >= v46 >> 1)
        {
          sub_10001A8F4(v46 > 1, v47 + 1, 1);
          uint64_t v44 = (void *)v93[0];
        }
        v44[2] = v47 + 1;
        *((_DWORD *)v44 + v47 + 8) = v45;
        v42 += v43;
        --v41;
      }
      while (v41);
      sub_10001D550((uint64_t)&v108);
      if (v44[2]) {
        goto LABEL_25;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v44 = _swiftEmptyArrayStorage;
      if (_swiftEmptyArrayStorage[2])
      {
LABEL_25:
        unint64_t v48 = v44;
LABEL_28:
        uint64_t v87 = (uint64_t)v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v49 = *(void *)(a1 + 144);
        uint64_t v107 = v49;
        int64_t v50 = *(void *)(v49 + 16);
        if (v50)
        {
          v91[0] = _swiftEmptyArrayStorage;
          swift_bridgeObjectRetain();
          sub_10001A954(0, v50, 0);
          long long v51 = (void *)v91[0];
          uint64_t v52 = (char *)(v49 + 64);
          do
          {
            LODWORD(v89) = *((_DWORD *)v52 - 8);
            uint64_t v54 = *((void *)v52 - 3);
            unint64_t v53 = *((void *)v52 - 2);
            char v55 = *v52;
            if (*((void *)v52 - 1))
            {
              v93[0] = 0x656D686361747461;
              v93[1] = 0xEB0000000020746ELL;
              sub_100008D24(v54, v53);
              sub_100008D24(v54, v53);
              swift_bridgeObjectRetain();
              v116._countAndFlagsBits = SectionSpecifier.Part.debugDescription.getter();
              sub_1005E1E30(v116);
              swift_bridgeObjectRelease();
              sub_1000094D4(v54, v53);
              swift_bridgeObjectRelease();
              uint64_t v56 = v93[0];
              *(void *)&long long v88 = v93[1];
            }
            else
            {
              sub_100008D24(*((void *)v52 - 3), *((void *)v52 - 2));
              *(void *)&long long v88 = 0xE400000000000000;
              uint64_t v56 = 1954047348;
            }
            int v57 = DownloadRequest.QoS.qosClass.getter(v55);
            v91[0] = v51;
            unint64_t v59 = v51[2];
            unint64_t v58 = v51[3];
            if (v59 >= v58 >> 1)
            {
              sub_10001A954(v58 > 1, v59 + 1, 1);
              long long v51 = (void *)v91[0];
            }
            v51[2] = v59 + 1;
            BOOL v60 = &v51[6 * v59];
            *((_DWORD *)v60 + 8) = v89;
            v52 += 40;
            v60[5] = v54;
            v60[6] = v53;
            uint64_t v61 = v88;
            v60[7] = v56;
            v60[8] = v61;
            *((_DWORD *)v60 + 18) = v57;
            --v50;
          }
          while (v50);
          sub_100007820(v86);
          sub_10001D550((uint64_t)&v107);
        }
        else
        {
          sub_100007820(a1);
          long long v51 = _swiftEmptyArrayStorage;
        }
        if (v51[2])
        {
          char v62 = v51;
        }
        else
        {
          swift_bridgeObjectRelease();
          char v62 = 0;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v91[0] = v83;
        v91[1] = v84;
        LODWORD(v91[2]) = v82;
        BYTE4(v91[2]) = v81;
        v91[3] = v80;
        v91[4] = v79;
        v91[5] = v78;
        LOBYTE(v91[6]) = v77;
        v91[7] = v75;
        v91[8] = v76;
        sub_10001FDF0((uint64_t)v115, (uint64_t)&v91[9], &qword_10070BBA8);
        v91[44] = v73;
        v91[45] = v87;
        uint64_t v89 = (uint64_t)v62;
        v91[46] = v62;
        sub_1000B8874((uint64_t)v91);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000B8A04((uint64_t)v115, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1000B8A98);
        swift_bridgeObjectRelease();
        sub_1000B8C1C((uint64_t)&v104);
        swift_bridgeObjectRelease();
        uint64_t v63 = v94;
        uint64_t v64 = v95;
        int v65 = v96[0];
        char v66 = BYTE4(v96[0]);
        long long v88 = *(_OWORD *)((char *)v96 + 8);
        uint64_t v67 = *((void *)&v96[1] + 1);
        unsigned __int8 v68 = v97;
        uint64_t v69 = v98;
        uint64_t v70 = v99;
        sub_10001FDF0((uint64_t)v74, (uint64_t)v92, &qword_10070BBA8);
        uint64_t v71 = v101;
        v93[0] = v63;
        v93[1] = v64;
        LODWORD(v93[2]) = v65;
        BYTE4(v93[2]) = v66;
        *(_OWORD *)&v93[3] = v88;
        v93[5] = v67;
        LOBYTE(v93[6]) = v68;
        v93[7] = v69;
        v93[8] = v70;
        sub_10001FDF0((uint64_t)v92, (uint64_t)&v93[9], &qword_10070BBA8);
        v93[44] = v71;
        v93[45] = v87;
        v93[46] = v89;
        sub_1000B8C48((uint64_t)v93);
        return memcpy(v85, v91, 0x178uLL);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v48 = 0;
    goto LABEL_28;
  }
  uint64_t v87 = (uint64_t)v6;
  sub_1000B8A04((uint64_t)v115, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1000B86F0);
  v93[0] = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  sub_10001A8F4(0, v26, 0);
  uint64_t v27 = (void *)v93[0];
  uint64_t v28 = sub_1000D38CC(v25);
  uint64_t v30 = v29;
  char v32 = v31 & 1;
  uint64_t v89 = v25 + 56;
  while ((v28 & 0x8000000000000000) == 0 && v28 < 1 << *(unsigned char *)(v25 + 32))
  {
    if (((*(void *)(v89 + (((unint64_t)v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
      goto LABEL_43;
    }
    if (*(_DWORD *)(v25 + 36) != v30) {
      goto LABEL_44;
    }
    int v33 = *(_DWORD *)(*(void *)(v25 + 48) + 4 * v28);
    v93[0] = (uint64_t)v27;
    unint64_t v35 = v27[2];
    unint64_t v34 = v27[3];
    if (v35 >= v34 >> 1)
    {
      sub_10001A8F4(v34 > 1, v35 + 1, 1);
      uint64_t v27 = (void *)v93[0];
    }
    v27[2] = v35 + 1;
    *((_DWORD *)v27 + v35 + 8) = v33;
    uint64_t v36 = sub_1000D3970(v28, v30, v32 & 1, v25);
    uint64_t v28 = v36;
    uint64_t v30 = v37;
    char v32 = v38 & 1;
    if (!--v26)
    {
      sub_100060FF0(v36, v37, v38 & 1);
      swift_bridgeObjectRelease();
      a1 = v86;
      uint64_t v6 = (int *)v87;
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  uint64_t result = (void *)swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1000B5EC0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  swift_bridgeObjectRetain();
  sub_100064054(v2);
  return a1;
}

uint64_t sub_1000B5F0C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  swift_bridgeObjectRelease();
  sub_1000852BC(v2);
  return a1;
}

unint64_t sub_1000B5F5C()
{
  unint64_t result = qword_10070BB10;
  if (!qword_10070BB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BB10);
  }
  return result;
}

uint64_t sub_1000B5FB0()
{
  return sub_1000BBEF4(&qword_10070BB18, &qword_10070BB20, (void (*)(void))sub_1000B5FEC);
}

unint64_t sub_1000B5FEC()
{
  unint64_t result = qword_10070BB28;
  if (!qword_10070BB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BB28);
  }
  return result;
}

unint64_t sub_1000B6044()
{
  unint64_t result = qword_10070BB30;
  if (!qword_10070BB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BB30);
  }
  return result;
}

uint64_t _s13CapturedStateV14CapturedRemoteVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s13CapturedStateV14CapturedRemoteVwcp(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v4)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v4;
    uint64_t v5 = *(void *)(a2 + 40);
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v5;
    *(void *)(a1 + 48) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v7;
  }
  return a1;
}

uint64_t _s13CapturedStateV14CapturedRemoteVwca(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = (_OWORD *)(a1 + 24);
  uint64_t v5 = (_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v6)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000B98D4(a1 + 24);
      long long v7 = *(_OWORD *)(a2 + 40);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 40) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 40);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 40) = v8;
  }
  return a1;
}

uint64_t _s13CapturedStateV14CapturedRemoteVwta(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (!*(void *)(a1 + 32)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 32);
  if (!v4)
  {
    sub_1000B98D4(a1 + 24);
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v6;
    return a1;
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateV14CapturedRemoteVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s13CapturedStateV14CapturedRemoteVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV14CapturedRemoteVMa()
{
  return &_s13CapturedStateV14CapturedRemoteVN;
}

ValueMetadata *_s13CapturedStateV14CapturedRemoteV9NamespaceVMa()
{
  return &_s13CapturedStateV14CapturedRemoteV9NamespaceVN;
}

uint64_t _s13CapturedStateV7MailboxVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10007BD1C(*(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160), *(void *)(a1 + 168), *(unsigned char *)(a1 + 176));
    if (*(void *)(a1 + 200) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(a1 + 232) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13CapturedStateV7MailboxVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
    *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
    *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    uint64_t v8 = *(void *)(a2 + 120);
    uint64_t v9 = *(void *)(a2 + 128);
    *(void *)(a1 + 112) = v7;
    *(void *)(a1 + 120) = v8;
    uint64_t v10 = *(void *)(a2 + 136);
    uint64_t v11 = *(void *)(a2 + 144);
    uint64_t v12 = *(void *)(a2 + 152);
    uint64_t v13 = *(void *)(a2 + 160);
    uint64_t v14 = *(void *)(a2 + 168);
    char v28 = *(unsigned char *)(a2 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10007BCA4(v9, v10, v11, v12, v13, v14, v28);
    *(void *)(a1 + 128) = v9;
    *(void *)(a1 + 136) = v10;
    *(void *)(a1 + 144) = v11;
    *(void *)(a1 + 152) = v12;
    *(void *)(a1 + 160) = v13;
    *(void *)(a1 + 168) = v14;
    *(unsigned char *)(a1 + 176) = v28;
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
    *(_WORD *)(a1 + 185) = *(_WORD *)(a2 + 185);
    uint64_t v15 = *(void *)(a2 + 200);
    if (v15 == 1)
    {
      long long v16 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v16;
    }
    else
    {
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v15;
      uint64_t v17 = *(void *)(a2 + 216);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v18 = *(void *)(a2 + 232);
    if (v18 == 1)
    {
      long long v19 = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 240) = v19;
    }
    else
    {
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = v18;
      uint64_t v20 = *(void *)(a2 + 248);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v21 = *(void *)(a2 + 264);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = v21;
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
    uint64_t v22 = *(void *)(a2 + 296);
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    *(void *)(a1 + 296) = v22;
    uint64_t v23 = *(void *)(a2 + 312);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(void *)(a1 + 312) = v23;
    int v24 = *(_DWORD *)(a2 + 320);
    *(unsigned char *)(a1 + 324) = *(unsigned char *)(a2 + 324);
    *(_DWORD *)(a1 + 320) = v24;
    uint64_t v25 = *(void *)(a2 + 336);
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    *(void *)(a1 + 336) = v25;
    *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
    *(_WORD *)(a1 + 348) = *(_WORD *)(a2 + 348);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(a1 + 72), (const void *)(a2 + 72), 0x116uLL);
  }
  uint64_t v26 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v26;
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13CapturedStateV7MailboxVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 112);
  if (*(void *)(a1 + 112))
  {
    if (v6)
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      int v7 = *(_DWORD *)(a2 + 80);
      *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
      *(_DWORD *)(a1 + 80) = v7;
      int v8 = *(_DWORD *)(a2 + 88);
      *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
      *(_DWORD *)(a1 + 88) = v8;
      uint64_t v9 = *(void *)(a2 + 96);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      *(void *)(a1 + 96) = v9;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 128);
      uint64_t v11 = *(void *)(a2 + 136);
      uint64_t v12 = *(void *)(a2 + 144);
      uint64_t v13 = *(void *)(a2 + 152);
      uint64_t v14 = *(void *)(a2 + 160);
      uint64_t v15 = *(void *)(a2 + 168);
      char v16 = *(unsigned char *)(a2 + 176);
      sub_10007BCA4(v10, v11, v12, v13, v14, v15, v16);
      uint64_t v17 = *(void *)(a1 + 128);
      uint64_t v18 = *(void *)(a1 + 136);
      uint64_t v19 = *(void *)(a1 + 144);
      uint64_t v20 = *(void *)(a1 + 152);
      uint64_t v21 = *(void *)(a1 + 160);
      uint64_t v22 = *(void *)(a1 + 168);
      *(void *)(a1 + 128) = v10;
      *(void *)(a1 + 136) = v11;
      *(void *)(a1 + 144) = v12;
      *(void *)(a1 + 152) = v13;
      *(void *)(a1 + 160) = v14;
      *(void *)(a1 + 168) = v15;
      char v23 = *(unsigned char *)(a1 + 176);
      *(unsigned char *)(a1 + 176) = v16;
      sub_10007BD1C(v17, v18, v19, v20, v21, v22, v23);
      *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
      *(unsigned char *)(a1 + 185) = *(unsigned char *)(a2 + 185);
      *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
      int v24 = (_OWORD *)(a1 + 192);
      uint64_t v25 = (_OWORD *)(a2 + 192);
      uint64_t v26 = *(void *)(a2 + 200);
      if (*(void *)(a1 + 200) == 1)
      {
        if (v26 == 1)
        {
          long long v27 = *(_OWORD *)(a2 + 208);
          *int v24 = *v25;
          *(_OWORD *)(a1 + 208) = v27;
        }
        else
        {
          *(void *)(a1 + 192) = *(void *)(a2 + 192);
          *(void *)(a1 + 200) = *(void *)(a2 + 200);
          *(void *)(a1 + 208) = *(void *)(a2 + 208);
          *(void *)(a1 + 216) = *(void *)(a2 + 216);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
      }
      else if (v26 == 1)
      {
        sub_1000B98D4(a1 + 192);
        long long v39 = *(_OWORD *)(a2 + 208);
        *int v24 = *v25;
        *(_OWORD *)(a1 + 208) = v39;
      }
      else
      {
        *(void *)(a1 + 192) = *(void *)(a2 + 192);
        *(void *)(a1 + 200) = *(void *)(a2 + 200);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(a1 + 208) = *(void *)(a2 + 208);
        *(void *)(a1 + 216) = *(void *)(a2 + 216);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      uint64_t v43 = (_OWORD *)(a1 + 224);
      uint64_t v44 = (_OWORD *)(a2 + 224);
      uint64_t v45 = *(void *)(a2 + 232);
      if (*(void *)(a1 + 232) == 1)
      {
        if (v45 == 1)
        {
          long long v46 = *(_OWORD *)(a2 + 240);
          *uint64_t v43 = *v44;
          *(_OWORD *)(a1 + 240) = v46;
        }
        else
        {
          *(void *)(a1 + 224) = *(void *)(a2 + 224);
          *(void *)(a1 + 232) = *(void *)(a2 + 232);
          *(void *)(a1 + 240) = *(void *)(a2 + 240);
          *(void *)(a1 + 248) = *(void *)(a2 + 248);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
      }
      else if (v45 == 1)
      {
        sub_1000B98D4(a1 + 224);
        long long v47 = *(_OWORD *)(a2 + 240);
        *uint64_t v43 = *v44;
        *(_OWORD *)(a1 + 240) = v47;
      }
      else
      {
        *(void *)(a1 + 224) = *(void *)(a2 + 224);
        *(void *)(a1 + 232) = *(void *)(a2 + 232);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(a1 + 240) = *(void *)(a2 + 240);
        *(void *)(a1 + 248) = *(void *)(a2 + 248);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v48 = *(_DWORD *)(a2 + 320);
      *(unsigned char *)(a1 + 324) = *(unsigned char *)(a2 + 324);
      *(_DWORD *)(a1 + 320) = v48;
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v49 = *(_DWORD *)(a2 + 344);
      *(unsigned char *)(a1 + 348) = *(unsigned char *)(a2 + 348);
      *(_DWORD *)(a1 + 344) = v49;
      *(unsigned char *)(a1 + 349) = *(unsigned char *)(a2 + 349);
      goto LABEL_28;
    }
    sub_1000B6D80(a1 + 72);
LABEL_10:
    memcpy((void *)(a1 + 72), (const void *)(a2 + 72), 0x116uLL);
    goto LABEL_28;
  }
  if (!v6) {
    goto LABEL_10;
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  int v28 = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = v28;
  int v29 = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(a1 + 88) = v29;
  uint64_t v30 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v30;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v31 = *(void *)(a2 + 128);
  uint64_t v32 = *(void *)(a2 + 136);
  uint64_t v33 = *(void *)(a2 + 144);
  uint64_t v34 = *(void *)(a2 + 152);
  uint64_t v35 = *(void *)(a2 + 160);
  uint64_t v36 = *(void *)(a2 + 168);
  char v37 = *(unsigned char *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10007BCA4(v31, v32, v33, v34, v35, v36, v37);
  *(void *)(a1 + 128) = v31;
  *(void *)(a1 + 136) = v32;
  *(void *)(a1 + 144) = v33;
  *(void *)(a1 + 152) = v34;
  *(void *)(a1 + 160) = v35;
  *(void *)(a1 + 168) = v36;
  *(unsigned char *)(a1 + 176) = v37;
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(unsigned char *)(a1 + 185) = *(unsigned char *)(a2 + 185);
  *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
  if (*(void *)(a2 + 200) == 1)
  {
    long long v38 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v38;
  }
  else
  {
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  if (*(void *)(a2 + 232) == 1)
  {
    long long v40 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v40;
  }
  else
  {
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  int v41 = *(_DWORD *)(a2 + 320);
  *(unsigned char *)(a1 + 324) = *(unsigned char *)(a2 + 324);
  *(_DWORD *)(a1 + 320) = v41;
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  int v42 = *(_DWORD *)(a2 + 344);
  *(unsigned char *)(a1 + 348) = *(unsigned char *)(a2 + 348);
  *(_DWORD *)(a1 + 344) = v42;
  *(unsigned char *)(a1 + 349) = *(unsigned char *)(a2 + 349);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_28:
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000B6D80(uint64_t a1)
{
  return a1;
}

void *_s13CapturedStateV7MailboxVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x178uLL);
}

uint64_t _s13CapturedStateV7MailboxVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 112))
  {
    uint64_t v7 = *(void *)(a2 + 112);
    if (v7)
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
      *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
      *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      *(void *)(a1 + 112) = v7;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRelease();
      char v8 = *(unsigned char *)(a2 + 176);
      uint64_t v9 = *(void *)(a1 + 128);
      uint64_t v10 = *(void *)(a1 + 136);
      uint64_t v11 = *(void *)(a1 + 144);
      uint64_t v12 = *(void *)(a1 + 152);
      uint64_t v13 = *(void *)(a1 + 160);
      uint64_t v14 = *(void *)(a1 + 168);
      long long v15 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v15;
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      char v16 = *(unsigned char *)(a1 + 176);
      *(unsigned char *)(a1 + 176) = v8;
      sub_10007BD1C(v9, v10, v11, v12, v13, v14, v16);
      *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
      *(unsigned char *)(a1 + 185) = *(unsigned char *)(a2 + 185);
      *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
      if (*(void *)(a1 + 200) != 1)
      {
        uint64_t v17 = *(void *)(a2 + 200);
        if (v17 != 1)
        {
          *(void *)(a1 + 192) = *(void *)(a2 + 192);
          *(void *)(a1 + 200) = v17;
          swift_bridgeObjectRelease();
          uint64_t v19 = *(void *)(a2 + 216);
          *(void *)(a1 + 208) = *(void *)(a2 + 208);
          *(void *)(a1 + 216) = v19;
          swift_bridgeObjectRelease();
LABEL_10:
          if (*(void *)(a1 + 232) != 1)
          {
            uint64_t v20 = *(void *)(a2 + 232);
            if (v20 != 1)
            {
              *(void *)(a1 + 224) = *(void *)(a2 + 224);
              *(void *)(a1 + 232) = v20;
              swift_bridgeObjectRelease();
              uint64_t v22 = *(void *)(a2 + 248);
              *(void *)(a1 + 240) = *(void *)(a2 + 240);
              *(void *)(a1 + 248) = v22;
              swift_bridgeObjectRelease();
              goto LABEL_15;
            }
            sub_1000B98D4(a1 + 224);
          }
          long long v21 = *(_OWORD *)(a2 + 240);
          *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
          *(_OWORD *)(a1 + 240) = v21;
LABEL_15:
          uint64_t v23 = *(void *)(a2 + 264);
          *(void *)(a1 + 256) = *(void *)(a2 + 256);
          *(void *)(a1 + 264) = v23;
          swift_bridgeObjectRelease();
          *(void *)(a1 + 272) = *(void *)(a2 + 272);
          swift_bridgeObjectRelease();
          *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
          uint64_t v24 = *(void *)(a2 + 296);
          *(void *)(a1 + 288) = *(void *)(a2 + 288);
          *(void *)(a1 + 296) = v24;
          swift_bridgeObjectRelease();
          uint64_t v25 = *(void *)(a2 + 312);
          *(void *)(a1 + 304) = *(void *)(a2 + 304);
          *(void *)(a1 + 312) = v25;
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 320) = *(_DWORD *)(a2 + 320);
          *(unsigned char *)(a1 + 324) = *(unsigned char *)(a2 + 324);
          uint64_t v26 = *(void *)(a2 + 336);
          *(void *)(a1 + 328) = *(void *)(a2 + 328);
          *(void *)(a1 + 336) = v26;
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
          *(_WORD *)(a1 + 348) = *(_WORD *)(a2 + 348);
          goto LABEL_16;
        }
        sub_1000B98D4(a1 + 192);
      }
      long long v18 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v18;
      goto LABEL_10;
    }
    sub_1000B6D80(a1 + 72);
  }
  memcpy((void *)(a1 + 72), (const void *)(a2 + 72), 0x116uLL);
LABEL_16:
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateV7MailboxVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 376)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13CapturedStateV7MailboxVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 376) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 376) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxVMa()
{
  return &_s13CapturedStateV7MailboxVN;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10007BD1C(*(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104));
  if (*(void *)(a1 + 128) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 160) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 96);
  char v11 = *(unsigned char *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10007BCA4(v5, v6, v7, v8, v9, v10, v11);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = v9;
  *(void *)(a1 + 96) = v10;
  *(unsigned char *)(a1 + 104) = v11;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_WORD *)(a1 + 113) = *(_WORD *)(a2 + 113);
  uint64_t v12 = *(void *)(a2 + 128);
  if (v12 == 1)
  {
    long long v13 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v13;
  }
  else
  {
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v12;
    uint64_t v14 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v15 = *(void *)(a2 + 160);
  if (v15 == 1)
  {
    long long v16 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v16;
  }
  else
  {
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = v15;
    uint64_t v17 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v18 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v18;
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  uint64_t v19 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v19;
  uint64_t v20 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v20;
  int v21 = *(_DWORD *)(a2 + 248);
  *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
  *(_DWORD *)(a1 + 248) = v21;
  uint64_t v22 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v22;
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_WORD *)(a1 + 276) = *(_WORD *)(a2 + 276);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  int v4 = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v4;
  int v5 = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 72);
  uint64_t v10 = *(void *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 88);
  uint64_t v12 = *(void *)(a2 + 96);
  char v13 = *(unsigned char *)(a2 + 104);
  sub_10007BCA4(v7, v8, v9, v10, v11, v12, v13);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v16 = *(void *)(a1 + 72);
  uint64_t v17 = *(void *)(a1 + 80);
  uint64_t v18 = *(void *)(a1 + 88);
  uint64_t v19 = *(void *)(a1 + 96);
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = v10;
  *(void *)(a1 + 88) = v11;
  *(void *)(a1 + 96) = v12;
  char v20 = *(unsigned char *)(a1 + 104);
  *(unsigned char *)(a1 + 104) = v13;
  sub_10007BD1C(v14, v15, v16, v17, v18, v19, v20);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  *(unsigned char *)(a1 + 114) = *(unsigned char *)(a2 + 114);
  int v21 = (_OWORD *)(a1 + 120);
  uint64_t v22 = (_OWORD *)(a2 + 120);
  uint64_t v23 = *(void *)(a2 + 128);
  if (*(void *)(a1 + 128) == 1)
  {
    if (v23 == 1)
    {
      long long v24 = *(_OWORD *)(a2 + 136);
      *int v21 = *v22;
      *(_OWORD *)(a1 + 136) = v24;
    }
    else
    {
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v23 == 1)
  {
    sub_1000B98D4(a1 + 120);
    long long v25 = *(_OWORD *)(a2 + 136);
    *int v21 = *v22;
    *(_OWORD *)(a1 + 136) = v25;
  }
  else
  {
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v26 = (_OWORD *)(a1 + 152);
  long long v27 = (_OWORD *)(a2 + 152);
  uint64_t v28 = *(void *)(a2 + 160);
  if (*(void *)(a1 + 160) == 1)
  {
    if (v28 == 1)
    {
      long long v29 = *(_OWORD *)(a2 + 168);
      *uint64_t v26 = *v27;
      *(_OWORD *)(a1 + 168) = v29;
    }
    else
    {
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v28 == 1)
  {
    sub_1000B98D4(a1 + 152);
    long long v30 = *(_OWORD *)(a2 + 168);
    *uint64_t v26 = *v27;
    *(_OWORD *)(a1 + 168) = v30;
  }
  else
  {
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v31 = *(_DWORD *)(a2 + 248);
  *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
  *(_DWORD *)(a1 + 248) = v31;
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v32 = *(_DWORD *)(a2 + 272);
  *(unsigned char *)(a1 + 276) = *(unsigned char *)(a2 + 276);
  *(_DWORD *)(a1 + 272) = v32;
  *(unsigned char *)(a1 + 277) = *(unsigned char *)(a2 + 277);
  return a1;
}

void *_s13CapturedStateV7MailboxV16MailboxSyncStateVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x116uLL);
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 104);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 80);
  uint64_t v9 = *(void *)(a1 + 88);
  uint64_t v10 = *(void *)(a1 + 96);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  char v11 = *(unsigned char *)(a1 + 104);
  *(unsigned char *)(a1 + 104) = v4;
  sub_10007BD1C(v5, v6, v7, v8, v9, v10, v11);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  *(unsigned char *)(a1 + 114) = *(unsigned char *)(a2 + 114);
  if (*(void *)(a1 + 128) == 1) {
    goto LABEL_4;
  }
  uint64_t v12 = *(void *)(a2 + 128);
  if (v12 == 1)
  {
    sub_1000B98D4(a1 + 120);
LABEL_4:
    long long v13 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v13;
    goto LABEL_6;
  }
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v14;
  swift_bridgeObjectRelease();
LABEL_6:
  if (*(void *)(a1 + 160) != 1)
  {
    uint64_t v15 = *(void *)(a2 + 160);
    if (v15 != 1)
    {
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v15;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a2 + 176);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = v17;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1000B98D4(a1 + 152);
  }
  long long v16 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v16;
LABEL_11:
  uint64_t v18 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v18;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  uint64_t v19 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v20;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
  uint64_t v21 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v21;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_WORD *)(a1 + 276) = *(_WORD *)(a2 + 276);
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 278)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 276) = 0;
    *(_DWORD *)(result + 272) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 278) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 278) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV16MailboxSyncStateVMa()
{
  return &_s13CapturedStateV7MailboxV16MailboxSyncStateVN;
}

ValueMetadata *_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV23MessagesPendingDownloadVMa()
{
  return &_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV23MessagesPendingDownloadVN;
}

uint64_t _s13CapturedStateVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13CapturedStateVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13CapturedStateVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s13CapturedStateVwtk(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t _s13CapturedStateVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13CapturedStateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateVMa()
{
  return &_s13CapturedStateVN;
}

unint64_t sub_1000B7EAC()
{
  unint64_t result = qword_10070BB40;
  if (!qword_10070BB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BB40);
  }
  return result;
}

unint64_t sub_1000B7F00()
{
  unint64_t result = qword_10070BB48;
  if (!qword_10070BB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BB48);
  }
  return result;
}

unint64_t sub_1000B7F54()
{
  unint64_t result = qword_10070BB50;
  if (!qword_10070BB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BB50);
  }
  return result;
}

unint64_t sub_1000B7FA8()
{
  unint64_t result = qword_10070BB68;
  if (!qword_10070BB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BB68);
  }
  return result;
}

unint64_t sub_1000B7FFC()
{
  unint64_t result = qword_10070BB70;
  if (!qword_10070BB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BB70);
  }
  return result;
}

unint64_t sub_1000B8050()
{
  unint64_t result = qword_10070BB80;
  if (!qword_10070BB80)
  {
    sub_10000744C(&qword_10070BB78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BB80);
  }
  return result;
}

unint64_t sub_1000B80C4()
{
  unint64_t result = qword_10070BB88;
  if (!qword_10070BB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BB88);
  }
  return result;
}

unint64_t sub_1000B8118()
{
  unint64_t result = qword_10070BB98;
  if (!qword_10070BB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BB98);
  }
  return result;
}

unint64_t sub_1000B816C()
{
  unint64_t result = qword_10070BBA0;
  if (!qword_10070BBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BBA0);
  }
  return result;
}

unint64_t sub_1000B81C0()
{
  unint64_t result = qword_10070BBB0;
  if (!qword_10070BBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BBB0);
  }
  return result;
}

unint64_t sub_1000B8214()
{
  unint64_t result = qword_10070BBE8;
  if (!qword_10070BBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BBE8);
  }
  return result;
}

unint64_t sub_1000B8268()
{
  unint64_t result = qword_10070BBF8;
  if (!qword_10070BBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BBF8);
  }
  return result;
}

unint64_t sub_1000B82BC()
{
  unint64_t result = qword_10070BC08;
  if (!qword_10070BC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BC08);
  }
  return result;
}

unint64_t sub_1000B8310()
{
  unint64_t result = qword_10070BC28;
  if (!qword_10070BC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BC28);
  }
  return result;
}

unint64_t sub_1000B8364()
{
  unint64_t result = qword_10070BC38;
  if (!qword_10070BC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BC38);
  }
  return result;
}

unint64_t sub_1000B83B8()
{
  unint64_t result = qword_10070BC48;
  if (!qword_10070BC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BC48);
  }
  return result;
}

unint64_t sub_1000B840C()
{
  unint64_t result = qword_10070BC58;
  if (!qword_10070BC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BC58);
  }
  return result;
}

uint64_t sub_1000B8460(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000744C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000B84C4()
{
  unint64_t result = qword_10070BC78;
  if (!qword_10070BC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BC78);
  }
  return result;
}

unint64_t sub_1000B8518()
{
  unint64_t result = qword_10070BC80;
  if (!qword_10070BC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BC80);
  }
  return result;
}

unint64_t sub_1000B856C()
{
  unint64_t result = qword_10070BC88;
  if (!qword_10070BC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BC88);
  }
  return result;
}

unint64_t sub_1000B85C0()
{
  unint64_t result = qword_10070BCA0;
  if (!qword_10070BCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BCA0);
  }
  return result;
}

unint64_t sub_1000B8614()
{
  unint64_t result = qword_10070BCA8;
  if (!qword_10070BCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BCA8);
  }
  return result;
}

unint64_t sub_1000B8668()
{
  unint64_t result = qword_10070BCB8;
  if (!qword_10070BCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BCB8);
  }
  return result;
}

double sub_1000B86BC(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 270) = 0;
  return result;
}

uint64_t sub_1000B86F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  if (a6)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10007BCA4(a8, a9, a10, a11, a12, a13, a14);
    sub_1000B882C(a16, a17);
    sub_1000B882C(a20, a21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000B882C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000B8874(uint64_t a1)
{
  uint64_t v16 = *(void *)(a1 + 80);
  uint64_t v17 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 96);
  uint64_t v15 = *(void *)(a1 + 88);
  uint64_t v12 = *(void *)(a1 + 112);
  uint64_t v13 = *(void *)(a1 + 104);
  uint64_t v2 = *(void *)(a1 + 128);
  uint64_t v11 = *(void *)(a1 + 120);
  long long v9 = *(_OWORD *)(a1 + 152);
  long long v10 = *(_OWORD *)(a1 + 136);
  long long v7 = *(_OWORD *)(a1 + 184);
  long long v8 = *(_OWORD *)(a1 + 168);
  long long v5 = *(_OWORD *)(a1 + 216);
  long long v6 = *(_OWORD *)(a1 + 200);
  long long v4 = *(_OWORD *)(a1 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000B86F0(v17, v16, v15, v14, v13, v12, v11, v2, v10, *((uint64_t *)&v10 + 1), v9, *((uint64_t *)&v9 + 1), v8, SBYTE8(v8), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5,
    *((uint64_t *)&v5 + 1),
    v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000B8A04(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))
{
  long long v4 = *(_OWORD *)(a1 + 224);
  long long v5 = *(_OWORD *)(a1 + 240);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    *(void *)(a1 + 256),
    *(void *)(a1 + 264),
    *(unsigned int *)(a1 + 272) | ((unint64_t)*(unsigned __int16 *)(a1 + 276) << 32));
  return a1;
}

uint64_t sub_1000B8A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  if (a6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10007BD1C(a8, a9, a10, a11, a12, a13, a14);
    sub_1000B8BD4(a16, a17);
    sub_1000B8BD4(a20, a21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000B8BD4(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000B8C1C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000B8C48(uint64_t a1)
{
  uint64_t v16 = *(void *)(a1 + 80);
  uint64_t v17 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 96);
  uint64_t v15 = *(void *)(a1 + 88);
  uint64_t v12 = *(void *)(a1 + 112);
  uint64_t v13 = *(void *)(a1 + 104);
  uint64_t v2 = *(void *)(a1 + 128);
  uint64_t v11 = *(void *)(a1 + 120);
  long long v9 = *(_OWORD *)(a1 + 152);
  long long v10 = *(_OWORD *)(a1 + 136);
  long long v7 = *(_OWORD *)(a1 + 184);
  long long v8 = *(_OWORD *)(a1 + 168);
  long long v5 = *(_OWORD *)(a1 + 216);
  long long v6 = *(_OWORD *)(a1 + 200);
  long long v4 = *(_OWORD *)(a1 + 232);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000B8A98(v17, v16, v15, v14, v13, v12, v11, v2, v10, *((uint64_t *)&v10 + 1), v9, *((uint64_t *)&v9 + 1), v8, SBYTE8(v8), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5,
    *((uint64_t *)&v5 + 1),
    v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *sub_1000B8DD8(uint64_t *a1)
{
  uint64_t v2 = a1[5];
  uint64_t v3 = a1[6];
  sub_1000B882C(a1[1], a1[2]);
  sub_1000B882C(v2, v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000B8E44(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  uint64_t v8 = *(void *)(a1 + 128);
  uint64_t v11 = *(void *)(a1 + 120);
  uint64_t v12 = *(void *)(a1 + 160);
  uint64_t v13 = *(void *)(a1 + 152);
  char v9 = *(unsigned char *)(a1 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10007BCA4(v2, v3, v4, v5, v6, v7, v9);
  sub_1000B882C(v11, v8);
  sub_1000B882C(v13, v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_1000B8F60(uint64_t *a1)
{
  uint64_t v2 = a1[5];
  uint64_t v3 = a1[6];
  sub_1000B8BD4(a1[1], a1[2]);
  sub_1000B8BD4(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000B8FCC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1000B9010(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  uint64_t v8 = *(void *)(a1 + 128);
  uint64_t v11 = *(void *)(a1 + 120);
  uint64_t v12 = *(void *)(a1 + 160);
  uint64_t v13 = *(void *)(a1 + 152);
  char v9 = *(unsigned char *)(a1 + 104);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10007BD1C(v2, v3, v4, v5, v6, v7, v9);
  sub_1000B8BD4(v11, v8);
  sub_1000B8BD4(v13, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000B9130(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000B9198()
{
  unint64_t result = qword_10070BCD0;
  if (!qword_10070BCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BCD0);
  }
  return result;
}

unint64_t sub_1000B91EC()
{
  unint64_t result = qword_10070BCE8;
  if (!qword_10070BCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BCE8);
  }
  return result;
}

uint64_t sub_1000B9240(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000B929C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000B92E0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000B9324(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000B9378(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000B93E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s13CapturedStateV17MailboxesToSelectV12UsageElementVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s13CapturedStateV17MailboxesToSelectV12UsageElementVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s13CapturedStateV17MailboxesToSelectV12UsageElementVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s13CapturedStateV17MailboxesToSelectV12UsageElementVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateV17MailboxesToSelectV12UsageElementVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13CapturedStateV17MailboxesToSelectV12UsageElementVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV17MailboxesToSelectV12UsageElementVMa()
{
  return &_s13CapturedStateV17MailboxesToSelectV12UsageElementVN;
}

uint64_t destroy for RunningTasksCapturedValue.CapturedTask(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 64);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for RunningTasksCapturedValue.CapturedTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v6;
    uint64_t v7 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v8;
  }
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  return a1;
}

uint64_t assignWithCopy for RunningTasksCapturedValue.CapturedTask(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v4 = (_OWORD *)(a1 + 56);
  uint64_t v5 = (_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v6)
    {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000B98D4(a1 + 56);
      long long v7 = *(_OWORD *)(a2 + 72);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 72) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 72);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 72) = v8;
  }
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  return a1;
}

uint64_t sub_1000B98D4(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for RunningTasksCapturedValue.CapturedTask(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 74) = *(_OWORD *)(a2 + 74);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for RunningTasksCapturedValue.CapturedTask(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  if (!*(void *)(a1 + 64)) {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(a2 + 64);
  if (!v5)
  {
    sub_1000B98D4(a1 + 56);
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v7;
    goto LABEL_6;
  }
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for RunningTasksCapturedValue.CapturedTask(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 90)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RunningTasksCapturedValue.CapturedTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 90) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 90) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningTasksCapturedValue.CapturedTask()
{
  return &type metadata for RunningTasksCapturedValue.CapturedTask;
}

ValueMetadata *type metadata accessor for RunningTasksCapturedValue.CapturedTask.MailboxTask()
{
  return &type metadata for RunningTasksCapturedValue.CapturedTask.MailboxTask;
}

void *_s13CapturedStateV16UnknownMailboxesVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateV16UnknownMailboxesVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateV16UnknownMailboxesVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s13CapturedStateV16UnknownMailboxesVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV16UnknownMailboxesVMa()
{
  return &_s13CapturedStateV16UnknownMailboxesVN;
}

ValueMetadata *_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV23MessagesPendingDownloadV10CodingKeysOMa()
{
  return &_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV23MessagesPendingDownloadV10CodingKeysON;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13CapturedStateV7MailboxV16MailboxSyncStateV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B9DA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV16MailboxSyncStateV10CodingKeysOMa()
{
  return &_s13CapturedStateV7MailboxV16MailboxSyncStateV10CodingKeysON;
}

ValueMetadata *_s13CapturedStateV14CapturedRemoteV9NamespaceV10CodingKeysOMa()
{
  return &_s13CapturedStateV14CapturedRemoteV9NamespaceV10CodingKeysON;
}

ValueMetadata *_s13CapturedStateV14CapturedRemoteV10CodingKeysOMa()
{
  return &_s13CapturedStateV14CapturedRemoteV10CodingKeysON;
}

ValueMetadata *_s13CapturedStateV7MailboxV10CodingKeysOMa()
{
  return &_s13CapturedStateV7MailboxV10CodingKeysON;
}

uint64_t getEnumTagSinglePayload for Flags.Label(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13CapturedStateV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B9F78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV10CodingKeysOMa()
{
  return &_s13CapturedStateV10CodingKeysON;
}

uint64_t _s13CapturedStateV14CapturedRemoteV7MailboxVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s13CapturedStateV14CapturedRemoteV7MailboxVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s13CapturedStateV14CapturedRemoteV7MailboxVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s13CapturedStateV14CapturedRemoteV7MailboxVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *_s13CapturedStateV14CapturedRemoteV7MailboxVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateV14CapturedRemoteV7MailboxVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13CapturedStateV14CapturedRemoteV7MailboxVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV14CapturedRemoteV7MailboxVMa()
{
  return &_s13CapturedStateV14CapturedRemoteV7MailboxVN;
}

_DWORD *_s13CapturedStateV14CapturedRemoteV6ServerVwCP(_DWORD *result, _DWORD *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t _s13CapturedStateV14CapturedRemoteV6ServerVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[4]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s13CapturedStateV14CapturedRemoteV6ServerVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 4) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 4) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV14CapturedRemoteV6ServerVMa()
{
  return &_s13CapturedStateV14CapturedRemoteV6ServerVN;
}

uint64_t _s13CapturedStateV7MailboxV21UserInitiatedDownloadVwxx(uint64_t a1)
{
  sub_1000094D4(*(void *)(a1 + 8), *(void *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t _s13CapturedStateV7MailboxV21UserInitiatedDownloadVwcp(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_100008D24(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV21UserInitiatedDownloadVwca(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_100008D24(v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  sub_1000094D4(v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

__n128 _s13CapturedStateV7MailboxV21UserInitiatedDownloadVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 28) = *(_OWORD *)(a2 + 28);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s13CapturedStateV7MailboxV21UserInitiatedDownloadVwta(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1000094D4(v4, v5);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV21UserInitiatedDownloadVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 44)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13CapturedStateV7MailboxV21UserInitiatedDownloadVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 44) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 44) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV21UserInitiatedDownloadVMa()
{
  return &_s13CapturedStateV7MailboxV21UserInitiatedDownloadVN;
}

uint64_t _s13CapturedStateV7MailboxV17MailboxOfInterestVwcp(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV17MailboxOfInterestVwca(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v4;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *((void *)a2 + 3);
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 24) = v5;
  return a1;
}

__n128 _s21UserInitiatedDownloadVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s13CapturedStateV7MailboxV17MailboxOfInterestVwta(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV17MailboxOfInterestVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s13CapturedStateV7MailboxV17MailboxOfInterestVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV17MailboxOfInterestVMa()
{
  return &_s13CapturedStateV7MailboxV17MailboxOfInterestVN;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_WORD *)(a1 + 68) = *(_WORD *)(a2 + 68);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(_DWORD *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v5 = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = v5;
  *(unsigned char *)(a1 + 69) = *(unsigned char *)(a2 + 69);
  return a1;
}

__n128 _s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesVwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 62) = *(void *)(a2 + 62);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_WORD *)(a1 + 68) = *(_WORD *)(a2 + 68);
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 70)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 68) = 0;
    *(_DWORD *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 70) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 70) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesVMa()
{
  return &_s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesVN;
}

uint64_t destroy for OpaquePersistedMessageIdentifier(uint64_t a1)
{
  return sub_1000094D4(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_100008D24(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_100008D24(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_1000094D4(v6, v7);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1000094D4(v4, v5);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedVMa()
{
  return &_s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedVN;
}

ValueMetadata *type metadata accessor for RunningTasksCapturedValue()
{
  return &type metadata for RunningTasksCapturedValue;
}

ValueMetadata *_s13CapturedStateV17MailboxesToSelectVMa()
{
  return &_s13CapturedStateV17MailboxesToSelectVN;
}

uint64_t sub_1000BABF4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13CapturedStateV19CapturedSyncRequestVwca(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateV19CapturedSyncRequestVwta(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateV19CapturedSyncRequestVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13CapturedStateV19CapturedSyncRequestVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV19CapturedSyncRequestVMa()
{
  return &_s13CapturedStateV19CapturedSyncRequestVN;
}

uint64_t _s13CapturedStateV14PathAttributesVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  if (v6 >= 2) {
    int v7 = ((v6 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v7 = -2;
  }
  if (v7 < 0) {
    int v7 = -1;
  }
  return (v7 + 1);
}

unsigned char *_s13CapturedStateV14PathAttributesVwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000BAEC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV14PathAttributesVMa()
{
  return &_s13CapturedStateV14PathAttributesVN;
}

uint64_t _s13CapturedStateV7MailboxV25PendingPersistenceUpdatesVwxx(uint64_t a1)
{
  if (*(void *)(a1 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 48) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t _s13CapturedStateV7MailboxV25PendingPersistenceUpdatesVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4 == 1)
  {
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v5;
  }
  else
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v4;
    uint64_t v6 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v7 = *(void *)(a2 + 48);
  if (v7 == 1)
  {
    long long v8 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v8;
  }
  else
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v7;
    uint64_t v9 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV25PendingPersistenceUpdatesVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v4 = (_OWORD *)(a1 + 8);
  long long v5 = (_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) == 1)
  {
    if (v6 == 1)
    {
      long long v7 = *(_OWORD *)(a2 + 24);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 24) = v7;
    }
    else
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_1000B98D4(a1 + 8);
    long long v8 = v5[1];
    *uint64_t v4 = *v5;
    v4[1] = v8;
  }
  else
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = (_OWORD *)(a1 + 40);
  uint64_t v10 = (_OWORD *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48) == 1)
  {
    if (v11 == 1)
    {
      long long v12 = *(_OWORD *)(a2 + 56);
      *uint64_t v9 = *v10;
      *(_OWORD *)(a1 + 56) = v12;
    }
    else
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v11 == 1)
  {
    sub_1000B98D4(a1 + 40);
    long long v13 = *(_OWORD *)(a2 + 56);
    *uint64_t v9 = *v10;
    *(_OWORD *)(a1 + 56) = v13;
  }
  else
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s13CapturedStateV7MailboxV25PendingPersistenceUpdatesVwtk(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t _s13CapturedStateV7MailboxV25PendingPersistenceUpdatesVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  long long v4 = (_OWORD *)(a1 + 8);
  long long v5 = (_OWORD *)(a2 + 8);
  if (*(void *)(a1 + 16) == 1) {
    goto LABEL_4;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  if (v6 == 1)
  {
    sub_1000B98D4((uint64_t)v4);
LABEL_4:
    long long v7 = v5[1];
    *long long v4 = *v5;
    v4[1] = v7;
    goto LABEL_6;
  }
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  if (*(void *)(a1 + 48) != 1)
  {
    uint64_t v9 = *(void *)(a2 + 48);
    if (v9 != 1)
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v9;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1000B98D4(a1 + 40);
  }
  long long v10 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v10;
LABEL_11:
  uint64_t v12 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedStateV7MailboxV25PendingPersistenceUpdatesVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 88)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 80);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s13CapturedStateV7MailboxV25PendingPersistenceUpdatesVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 88) = 0;
    }
    if (a2) {
      *(void *)(result + 80) = a2;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesVMa()
{
  return &_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesVN;
}

unint64_t sub_1000BB3F0()
{
  unint64_t result = qword_10070BCF0;
  if (!qword_10070BCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BCF0);
  }
  return result;
}

unint64_t sub_1000BB448()
{
  unint64_t result = qword_10070BCF8;
  if (!qword_10070BCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BCF8);
  }
  return result;
}

unint64_t sub_1000BB4A0()
{
  unint64_t result = qword_10070BD00;
  if (!qword_10070BD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BD00);
  }
  return result;
}

unint64_t sub_1000BB4F8()
{
  unint64_t result = qword_10070BD08;
  if (!qword_10070BD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BD08);
  }
  return result;
}

unint64_t sub_1000BB550()
{
  unint64_t result = qword_10070BD10;
  if (!qword_10070BD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BD10);
  }
  return result;
}

unint64_t sub_1000BB5A8()
{
  unint64_t result = qword_10070BD18;
  if (!qword_10070BD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BD18);
  }
  return result;
}

unint64_t sub_1000BB600()
{
  unint64_t result = qword_10070BD20;
  if (!qword_10070BD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BD20);
  }
  return result;
}

unint64_t sub_1000BB658()
{
  unint64_t result = qword_10070BD28;
  if (!qword_10070BD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BD28);
  }
  return result;
}

unint64_t sub_1000BB6B0()
{
  unint64_t result = qword_10070BD30;
  if (!qword_10070BD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BD30);
  }
  return result;
}

unint64_t sub_1000BB708()
{
  unint64_t result = qword_10070BD38;
  if (!qword_10070BD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BD38);
  }
  return result;
}

unint64_t sub_1000BB760()
{
  unint64_t result = qword_10070BD40;
  if (!qword_10070BD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BD40);
  }
  return result;
}

unint64_t sub_1000BB7B8()
{
  unint64_t result = qword_10070BD48;
  if (!qword_10070BD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BD48);
  }
  return result;
}

unint64_t sub_1000BB810()
{
  unint64_t result = qword_10070BD50;
  if (!qword_10070BD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BD50);
  }
  return result;
}

unint64_t sub_1000BB868()
{
  unint64_t result = qword_10070BD58;
  if (!qword_10070BD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BD58);
  }
  return result;
}

unint64_t sub_1000BB8C0()
{
  unint64_t result = qword_10070BD60;
  if (!qword_10070BD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BD60);
  }
  return result;
}

unint64_t sub_1000BB918()
{
  unint64_t result = qword_10070BD68;
  if (!qword_10070BD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BD68);
  }
  return result;
}

unint64_t sub_1000BB970()
{
  unint64_t result = qword_10070BD70;
  if (!qword_10070BD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BD70);
  }
  return result;
}

unint64_t sub_1000BB9C8()
{
  unint64_t result = qword_10070BD78;
  if (!qword_10070BD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BD78);
  }
  return result;
}

uint64_t sub_1000BBA1C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D614E676F6CLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656E69676E65 && a2 == 0xE800000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001005E5140 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001005E5160 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001005E5180 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001005E51A0 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x736B736174 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

unint64_t sub_1000BBD50()
{
  unint64_t result = qword_10070BD88;
  if (!qword_10070BD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BD88);
  }
  return result;
}

unint64_t sub_1000BBDA4()
{
  unint64_t result = qword_10070BD98;
  if (!qword_10070BD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BD98);
  }
  return result;
}

unint64_t sub_1000BBDF8()
{
  unint64_t result = qword_10070BDA8;
  if (!qword_10070BDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BDA8);
  }
  return result;
}

unint64_t sub_1000BBE4C()
{
  unint64_t result = qword_10070BDC0;
  if (!qword_10070BDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BDC0);
  }
  return result;
}

unint64_t sub_1000BBEA0()
{
  unint64_t result = qword_10070BDD0;
  if (!qword_10070BDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BDD0);
  }
  return result;
}

uint64_t sub_1000BBEF4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000744C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000BBF6C()
{
  unint64_t result = qword_10070BDE8;
  if (!qword_10070BDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BDE8);
  }
  return result;
}

uint64_t sub_1000BBFC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x697463656E6E6F63 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x786F626C69616DLL && a2 == 0xE700000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6567617375 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1000BC11C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65786F626C69616DLL && a2 == 0xE900000000000073;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617375 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000BC214(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000BC2E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7374726F70707573 && a2 == 0xEC00000065766F4DLL;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001005E52E0 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001005E5300 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001005E5320)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1000BC498(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6170655368746170 && a2 == 0xED0000726F746172 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x556C616963657073 && a2 == 0xEA00000000006573)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1000BC678(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x786966657270 && a2 == 0xE600000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F74617261706573 && a2 == 0xE900000000000072)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000BC770(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726576726573 && a2 == 0xE600000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65786F626C69616DLL && a2 == 0xE900000000000073 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001005E5240 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x63617073656D616ELL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1000BC92C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x53676E69646E6570 && a2 == 0xEB00000000636E79;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6552686372616573 && a2 == 0xEE00737473657571 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001005E5440)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1000BCABC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64696C6156646975 && a2 == 0xEB00000000797469;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5764656863746566 && a2 == 0xED0000776F646E69 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4D74736568676968 && a2 == 0xED0000716553646FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1000BCC74(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7565169 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1000BCDF8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6580597 && a2 == 0xE300000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1000BCF18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E697373696DLL && a2 == 0xE700000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701736292 && a2 == 0xE400000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001005E5400 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5564656972657571 && a2 == 0xEB00000000734449 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001005E5420 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1000BD204(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x436567617373656DLL && a2 == 0xEC000000746E756FLL;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449557478656ELL && a2 == 0xE700000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64696C6156646975 && a2 == 0xEB00000000797469 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4D74736568676968 && a2 == 0xED0000716553646FLL || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x70657453636E7973 && a2 == 0xE900000000000073 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001005E5260 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001005E5280 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001005E52A0 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001005E52C0 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x4D676E697373696DLL && a2 == 0xEF73656761737365)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_1000BD674(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E69646E6570 && a2 == 0xE700000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701736292 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000BD758(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000001005E5340 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001005E5360 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001005E5380 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001005E53A0 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001005E53C0 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001005E53E0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1000BD9A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001005E51C0 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001005E51E0 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74617453636E7973 && a2 == 0xE900000000000065 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x75716552636E7973 && a2 == 0xEC00000073747365 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001005E5200 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001005E5220)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unint64_t sub_1000BDC78()
{
  unint64_t result = qword_10070BDF8;
  if (!qword_10070BDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BDF8);
  }
  return result;
}

unint64_t sub_1000BDCCC()
{
  unint64_t result = qword_10070BE08;
  if (!qword_10070BE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BE08);
  }
  return result;
}

unint64_t sub_1000BDD20()
{
  unint64_t result = qword_10070BE18;
  if (!qword_10070BE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BE18);
  }
  return result;
}

unint64_t sub_1000BDD74()
{
  unint64_t result = qword_10070BE28;
  if (!qword_10070BE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BE28);
  }
  return result;
}

unint64_t sub_1000BDDC8()
{
  unint64_t result = qword_10070BE38;
  if (!qword_10070BE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BE38);
  }
  return result;
}

unint64_t sub_1000BDE1C()
{
  unint64_t result = qword_10070BE48;
  if (!qword_10070BE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BE48);
  }
  return result;
}

unint64_t sub_1000BDE70()
{
  unint64_t result = qword_10070BE58;
  if (!qword_10070BE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BE58);
  }
  return result;
}

unint64_t sub_1000BDEC4()
{
  unint64_t result = qword_10070BE68;
  if (!qword_10070BE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BE68);
  }
  return result;
}

unint64_t sub_1000BDF18()
{
  unint64_t result = qword_10070BE80;
  if (!qword_10070BE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BE80);
  }
  return result;
}

unint64_t sub_1000BDF6C()
{
  unint64_t result = qword_10070BE90;
  if (!qword_10070BE90)
  {
    sub_10000744C(&qword_10070BE88);
    sub_1000B8460(&qword_10070BBC8, &qword_10070BBC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BE90);
  }
  return result;
}

unint64_t sub_1000BE000()
{
  unint64_t result = qword_10070BEA0;
  if (!qword_10070BEA0)
  {
    sub_10000744C(&qword_10070BE98);
    sub_1000BBEF4(&qword_10070BBE0, &qword_10070BBD8, (void (*)(void))sub_1000B8214);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BEA0);
  }
  return result;
}

unint64_t sub_1000BE0A0()
{
  unint64_t result = qword_10070BEB0;
  if (!qword_10070BEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BEB0);
  }
  return result;
}

unint64_t sub_1000BE0F4()
{
  unint64_t result = qword_10070BEC0;
  if (!qword_10070BEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BEC0);
  }
  return result;
}

unint64_t sub_1000BE148()
{
  unint64_t result = qword_10070BEC8;
  if (!qword_10070BEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BEC8);
  }
  return result;
}

unint64_t sub_1000BE19C()
{
  unint64_t result = qword_10070BED8;
  if (!qword_10070BED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BED8);
  }
  return result;
}

unint64_t sub_1000BE1F0()
{
  unint64_t result = qword_10070BEE8;
  if (!qword_10070BEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BEE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningTasksCapturedValue.CapturedTask.MailboxTask.CodingKeys()
{
  return &type metadata for RunningTasksCapturedValue.CapturedTask.MailboxTask.CodingKeys;
}

ValueMetadata *type metadata accessor for RunningTasksCapturedValue.CapturedTask.CodingKeys()
{
  return &type metadata for RunningTasksCapturedValue.CapturedTask.CodingKeys;
}

ValueMetadata *_s13CapturedStateV17MailboxesToSelectV12UsageElementV10CodingKeysOMa()
{
  return &_s13CapturedStateV17MailboxesToSelectV12UsageElementV10CodingKeysON;
}

ValueMetadata *_s13CapturedStateV16UnknownMailboxesV10CodingKeysOMa()
{
  return &_s13CapturedStateV16UnknownMailboxesV10CodingKeysON;
}

uint64_t _s10SpecialUseOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13CapturedStateV7MailboxV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000BE3ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesV10CodingKeysOMa()
{
  return &_s13CapturedStateV7MailboxV16MailboxSyncStateV15MissingMessagesV10CodingKeysON;
}

ValueMetadata *_s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedV10CodingKeysOMa()
{
  return &_s13CapturedStateV7MailboxV16MailboxSyncStateV13UserInitiatedV10CodingKeysON;
}

uint64_t getEnumTagSinglePayload for ConnectionStatus.Error.Kind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13IMAP2Behavior25RunningTasksCapturedValueV12CapturedTaskV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000BE590);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV10CodingKeysOMa()
{
  return &_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV10CodingKeysON;
}

ValueMetadata *_s13CapturedStateV14CapturedRemoteV7MailboxV10CodingKeysOMa()
{
  return &_s13CapturedStateV14CapturedRemoteV7MailboxV10CodingKeysON;
}

ValueMetadata *_s13CapturedStateV14CapturedRemoteV6ServerV10CodingKeysOMa()
{
  return &_s13CapturedStateV14CapturedRemoteV6ServerV10CodingKeysON;
}

ValueMetadata *_s13CapturedStateV7MailboxV21UserInitiatedDownloadV10CodingKeysOMa()
{
  return &_s13CapturedStateV7MailboxV21UserInitiatedDownloadV10CodingKeysON;
}

unsigned char *_s13CapturedStateV17MailboxesToSelectV12UsageElementV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000BE6C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV7MailboxV17MailboxOfInterestV10CodingKeysOMa()
{
  return &_s13CapturedStateV7MailboxV17MailboxOfInterestV10CodingKeysON;
}

ValueMetadata *type metadata accessor for RunningTasksCapturedValue.CodingKeys()
{
  return &type metadata for RunningTasksCapturedValue.CodingKeys;
}

ValueMetadata *_s13CapturedStateV17MailboxesToSelectV10CodingKeysOMa()
{
  return &_s13CapturedStateV17MailboxesToSelectV10CodingKeysON;
}

unsigned char *_s13CapturedStateV7MailboxV25PendingPersistenceUpdatesV23MessagesPendingDownloadV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000BE7ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedStateV19CapturedSyncRequestV10CodingKeysOMa()
{
  return &_s13CapturedStateV19CapturedSyncRequestV10CodingKeysON;
}

unsigned char *_s13IMAP2Behavior25RunningTasksCapturedValueV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000BE8C0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s13CapturedStateV14PathAttributesV10CodingKeysOMa()
{
  return &_s13CapturedStateV14PathAttributesV10CodingKeysON;
}

uint64_t initializeWithCopy for RunningTasksCapturedValue.CapturedTask.History(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RunningTasksCapturedValue.CapturedTask.History(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

_OWORD *assignWithTake for RunningTasksCapturedValue.CapturedTask.History(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for RunningTasksCapturedValue.CapturedTask.History(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RunningTasksCapturedValue.CapturedTask.History(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningTasksCapturedValue.CapturedTask.History()
{
  return &type metadata for RunningTasksCapturedValue.CapturedTask.History;
}

unint64_t sub_1000BEAB4()
{
  unint64_t result = qword_10070BEF0;
  if (!qword_10070BEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BEF0);
  }
  return result;
}

unint64_t sub_1000BEB0C()
{
  unint64_t result = qword_10070BEF8;
  if (!qword_10070BEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BEF8);
  }
  return result;
}

unint64_t sub_1000BEB64()
{
  unint64_t result = qword_10070BF00;
  if (!qword_10070BF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF00);
  }
  return result;
}

unint64_t sub_1000BEBBC()
{
  unint64_t result = qword_10070BF08;
  if (!qword_10070BF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF08);
  }
  return result;
}

unint64_t sub_1000BEC14()
{
  unint64_t result = qword_10070BF10;
  if (!qword_10070BF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF10);
  }
  return result;
}

unint64_t sub_1000BEC6C()
{
  unint64_t result = qword_10070BF18;
  if (!qword_10070BF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF18);
  }
  return result;
}

unint64_t sub_1000BECC4()
{
  unint64_t result = qword_10070BF20;
  if (!qword_10070BF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF20);
  }
  return result;
}

unint64_t sub_1000BED1C()
{
  unint64_t result = qword_10070BF28;
  if (!qword_10070BF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF28);
  }
  return result;
}

unint64_t sub_1000BED74()
{
  unint64_t result = qword_10070BF30;
  if (!qword_10070BF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF30);
  }
  return result;
}

unint64_t sub_1000BEDCC()
{
  unint64_t result = qword_10070BF38;
  if (!qword_10070BF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF38);
  }
  return result;
}

unint64_t sub_1000BEE24()
{
  unint64_t result = qword_10070BF40;
  if (!qword_10070BF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF40);
  }
  return result;
}

unint64_t sub_1000BEE7C()
{
  unint64_t result = qword_10070BF48;
  if (!qword_10070BF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF48);
  }
  return result;
}

unint64_t sub_1000BEED4()
{
  unint64_t result = qword_10070BF50;
  if (!qword_10070BF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF50);
  }
  return result;
}

unint64_t sub_1000BEF2C()
{
  unint64_t result = qword_10070BF58;
  if (!qword_10070BF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF58);
  }
  return result;
}

unint64_t sub_1000BEF84()
{
  unint64_t result = qword_10070BF60;
  if (!qword_10070BF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF60);
  }
  return result;
}

unint64_t sub_1000BEFDC()
{
  unint64_t result = qword_10070BF68;
  if (!qword_10070BF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF68);
  }
  return result;
}

unint64_t sub_1000BF034()
{
  unint64_t result = qword_10070BF70;
  if (!qword_10070BF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF70);
  }
  return result;
}

unint64_t sub_1000BF08C()
{
  unint64_t result = qword_10070BF78;
  if (!qword_10070BF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF78);
  }
  return result;
}

unint64_t sub_1000BF0E4()
{
  unint64_t result = qword_10070BF80;
  if (!qword_10070BF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF80);
  }
  return result;
}

unint64_t sub_1000BF13C()
{
  unint64_t result = qword_10070BF88;
  if (!qword_10070BF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF88);
  }
  return result;
}

unint64_t sub_1000BF194()
{
  unint64_t result = qword_10070BF90;
  if (!qword_10070BF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF90);
  }
  return result;
}

unint64_t sub_1000BF1EC()
{
  unint64_t result = qword_10070BF98;
  if (!qword_10070BF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BF98);
  }
  return result;
}

unint64_t sub_1000BF244()
{
  unint64_t result = qword_10070BFA0;
  if (!qword_10070BFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BFA0);
  }
  return result;
}

unint64_t sub_1000BF29C()
{
  unint64_t result = qword_10070BFA8;
  if (!qword_10070BFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BFA8);
  }
  return result;
}

unint64_t sub_1000BF2F4()
{
  unint64_t result = qword_10070BFB0;
  if (!qword_10070BFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BFB0);
  }
  return result;
}

unint64_t sub_1000BF34C()
{
  unint64_t result = qword_10070BFB8;
  if (!qword_10070BFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BFB8);
  }
  return result;
}

unint64_t sub_1000BF3A4()
{
  unint64_t result = qword_10070BFC0;
  if (!qword_10070BFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BFC0);
  }
  return result;
}

unint64_t sub_1000BF3FC()
{
  unint64_t result = qword_10070BFC8;
  if (!qword_10070BFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BFC8);
  }
  return result;
}

unint64_t sub_1000BF454()
{
  unint64_t result = qword_10070BFD0;
  if (!qword_10070BFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BFD0);
  }
  return result;
}

unint64_t sub_1000BF4AC()
{
  unint64_t result = qword_10070BFD8;
  if (!qword_10070BFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BFD8);
  }
  return result;
}

unint64_t sub_1000BF504()
{
  unint64_t result = qword_10070BFE0;
  if (!qword_10070BFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BFE0);
  }
  return result;
}

unint64_t sub_1000BF55C()
{
  unint64_t result = qword_10070BFE8;
  if (!qword_10070BFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BFE8);
  }
  return result;
}

unint64_t sub_1000BF5B4()
{
  unint64_t result = qword_10070BFF0;
  if (!qword_10070BFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BFF0);
  }
  return result;
}

unint64_t sub_1000BF60C()
{
  unint64_t result = qword_10070BFF8;
  if (!qword_10070BFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BFF8);
  }
  return result;
}

unint64_t sub_1000BF664()
{
  unint64_t result = qword_10070C000;
  if (!qword_10070C000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C000);
  }
  return result;
}

unint64_t sub_1000BF6BC()
{
  unint64_t result = qword_10070C008;
  if (!qword_10070C008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C008);
  }
  return result;
}

unint64_t sub_1000BF714()
{
  unint64_t result = qword_10070C010;
  if (!qword_10070C010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C010);
  }
  return result;
}

unint64_t sub_1000BF76C()
{
  unint64_t result = qword_10070C018;
  if (!qword_10070C018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C018);
  }
  return result;
}

unint64_t sub_1000BF7C4()
{
  unint64_t result = qword_10070C020;
  if (!qword_10070C020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C020);
  }
  return result;
}

unint64_t sub_1000BF81C()
{
  unint64_t result = qword_10070C028;
  if (!qword_10070C028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C028);
  }
  return result;
}

unint64_t sub_1000BF874()
{
  unint64_t result = qword_10070C030;
  if (!qword_10070C030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C030);
  }
  return result;
}

unint64_t sub_1000BF8CC()
{
  unint64_t result = qword_10070C038;
  if (!qword_10070C038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C038);
  }
  return result;
}

unint64_t sub_1000BF924()
{
  unint64_t result = qword_10070C040;
  if (!qword_10070C040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C040);
  }
  return result;
}

unint64_t sub_1000BF97C()
{
  unint64_t result = qword_10070C048;
  if (!qword_10070C048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C048);
  }
  return result;
}

unint64_t sub_1000BF9D4()
{
  unint64_t result = qword_10070C050;
  if (!qword_10070C050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C050);
  }
  return result;
}

uint64_t sub_1000BFA28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x43676E696E6E7572 && a2 == 0xEF73646E616D6D6FLL;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x41676E696E6E7572 && a2 == 0xEE00736E6F697463 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001005E5480 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001005E54A0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1000BFC20(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x786F626C69616DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697463656E6E6F63 && a2 == 0xEA00000000006E6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000BFD20(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79726F74736968 && a2 == 0xE700000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001005E5460 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x54786F626C69616DLL && a2 == 0xEB000000006B7361 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_1000BFFA0()
{
  unint64_t result = qword_10070C060;
  if (!qword_10070C060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C060);
  }
  return result;
}

unsigned char *_s13CapturedStateV14CapturedRemoteV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C00C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningTasksCapturedValue.CapturedTask.History.CodingKeys()
{
  return &type metadata for RunningTasksCapturedValue.CapturedTask.History.CodingKeys;
}

unint64_t sub_1000C00FC()
{
  unint64_t result = qword_10070C068;
  if (!qword_10070C068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C068);
  }
  return result;
}

unint64_t sub_1000C0154()
{
  unint64_t result = qword_10070C070;
  if (!qword_10070C070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C070);
  }
  return result;
}

unint64_t sub_1000C01AC()
{
  unint64_t result = qword_10070C078;
  if (!qword_10070C078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C078);
  }
  return result;
}

void *sub_1000C0208(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10001A574(0, v1, 0);
  unint64_t result = (void *)sub_1000D3A5C(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 64;
  int64_t v22 = v1;
  int v23 = v4;
  uint64_t v24 = a1 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_26;
    }
    uint64_t v25 = v6;
    unint64_t result = (void *)sub_1005E3230();
    uint64_t v11 = result;
    uint64_t v13 = v12;
    unint64_t v15 = _swiftEmptyArrayStorage[2];
    unint64_t v14 = _swiftEmptyArrayStorage[3];
    if (v15 >= v14 >> 1) {
      unint64_t result = (void *)sub_10001A574(v14 > 1, v15 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v15 + 1;
    uint64_t v16 = &_swiftEmptyArrayStorage[2 * v15];
    v16[4] = v11;
    v16[5] = v13;
    int64_t v8 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v8) {
      goto LABEL_27;
    }
    uint64_t v7 = a1 + 64;
    uint64_t v17 = *(void *)(v24 + 8 * v10);
    if ((v17 & (1 << v5)) == 0) {
      goto LABEL_28;
    }
    int v4 = v23;
    if (*(_DWORD *)(a1 + 36) != v23) {
      goto LABEL_29;
    }
    unint64_t v18 = v17 & (-2 << (v5 & 0x3F));
    if (v18)
    {
      int64_t v8 = __clz(__rbit64(v18)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v22;
    }
    else
    {
      unint64_t v19 = v10 + 1;
      unint64_t v20 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v22;
      if (v10 + 1 < v20)
      {
        unint64_t v21 = *(void *)(v24 + 8 * v19);
        if (!v21)
        {
          unint64_t v19 = v10 + 2;
          if (v10 + 2 >= v20) {
            goto LABEL_4;
          }
          unint64_t v21 = *(void *)(v24 + 8 * v19);
          if (!v21)
          {
            while (v20 - 3 != v10)
            {
              unint64_t v21 = *(void *)(a1 + 88 + 8 * v10++);
              if (v21)
              {
                unint64_t v19 = v10 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        int64_t v8 = __clz(__rbit64(v21)) + (v19 << 6);
      }
    }
LABEL_4:
    uint64_t v6 = v25 + 1;
    uint64_t v5 = v8;
    if (v25 + 1 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_1000C0450(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    BOOL v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000566C(&qword_10070A770);
  BOOL v2 = (void *)sub_1005E2FF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  int v4 = (char *)(a1 + 65);
  while (1)
  {
    uint64_t v5 = *(void *)(v4 - 33);
    unint64_t v6 = *(void *)(v4 - 25);
    int v7 = *(_DWORD *)(v4 - 17);
    uint64_t v8 = *(void *)(v4 - 9);
    char v9 = *(v4 - 1);
    char v10 = *v4;
    sub_100008D24(v5, v6);
    unint64_t result = sub_10002445C(v5, v6);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v13 = v5;
    v13[1] = v6;
    uint64_t v14 = v2[7] + 24 * result;
    *(_DWORD *)uint64_t v14 = v7;
    *(void *)(v14 + 8) = v8;
    *(unsigned char *)(v14 + 16) = v9;
    *(unsigned char *)(v14 + 17) = v10;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v2[2] = v17;
    v4 += 40;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000C059C(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_10070C0D0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    int v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000566C(&qword_10070A798);
  uint64_t v6 = sub_1005E2FF0();
  int v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000079E4(v12, (uint64_t)v5, &qword_10070C0D0);
    unint64_t result = sub_1000244EC((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for MoveAndCopyMessages.CommandID();
    unint64_t result = sub_1000D8450((uint64_t)v5, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    *(unsigned char *)(v7[7] + v16) = v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    _OWORD v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000C078C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000566C(&qword_10070A788);
  uint64_t v2 = (void *)sub_1005E2FF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v6 = *(v4 - 1);
    uint64_t v5 = *v4;
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100024558(v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000C0898(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_10070C118);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (long long *)((char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    int v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000566C(&qword_10070A760);
  uint64_t v6 = sub_1005E2FF0();
  int v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000079E4(v12, (uint64_t)v5, &qword_10070C118);
    long long v23 = *v5;
    unint64_t result = sub_1000246E0(v23, *((uint64_t *)&v23 + 1));
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_OWORD *)(v7[6] + 16 * result) = v23;
    uint64_t v17 = v7[7];
    uint64_t v18 = sub_10000566C(&qword_100709E38);
    unint64_t result = sub_10001FDF0(v9, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, &qword_100709E38);
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    _OWORD v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000C0A90(uint64_t a1, uint64_t a2)
{
  return sub_1000C0ED0(a1, a2, (uint64_t (*)(unsigned char *, void))sub_100018E3C);
}

uint64_t sub_1000C0AA8(uint64_t result, void (*a2)(uint64_t *__return_ptr, uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  unint64_t v6 = 0;
  uint64_t v15 = a4;
  uint64_t v7 = result + 32;
  while (1)
  {
LABEL_6:
    unint64_t v11 = *(void *)(v5 + 16);
    if (v6 == v11)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v15;
    }
    if (v6 >= v11) {
      break;
    }
    uint64_t v14 = *(void *)(v7 + 8 * v6);
    swift_retain();
    a2(&v13, &v14);
    swift_release();
    uint64_t v12 = v13;
    unint64_t result = swift_bridgeObjectRelease();
    ++v6;
    if (v12)
    {
      unint64_t v8 = *(void *)(v12 + 16);
      if (v8)
      {
        unint64_t v9 = 0;
        while (v9 < v8)
        {
          unint64_t v10 = v9 + 1;
          unint64_t result = sub_100019B48(&v14, *(unsigned int *)(v12 + 32 + 4 * v9));
          unint64_t v8 = *(void *)(v12 + 16);
          unint64_t v9 = v10;
          if (v10 == v8) {
            goto LABEL_6;
          }
        }
        __break(1u);
        break;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000C0BCC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    unint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    Swift::UInt v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1000189E4(&v17, v12, v13);
    unint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1000C0D4C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = *(void *)(v2 + 48) + 16 * v10;
    uint64_t v12 = *(void *)v11;
    unsigned int v13 = *(_DWORD *)(v11 + 8);
    swift_bridgeObjectRetain();
    sub_1000187DC((uint64_t)&v17, v12, v13);
    unint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1000C0ED0(uint64_t result, uint64_t a2, uint64_t (*a3)(unsigned char *, void))
{
  uint64_t v4 = result;
  int64_t v5 = 0;
  uint64_t v17 = a2;
  uint64_t v6 = result + 56;
  uint64_t v7 = 1 << *(unsigned char *)(result + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(result + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v10) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v10) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v6 + 8 * v5);
      if (!v14)
      {
        int64_t v5 = v13 + 2;
        if (v13 + 2 >= v10) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v6 + 8 * v5);
        if (!v14)
        {
          int64_t v5 = v13 + 3;
          if (v13 + 3 >= v10) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v6 + 8 * v5);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    unint64_t result = a3(v16, *(unsigned int *)(*(void *)(v4 + 48) + 4 * v12));
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v10)
  {
LABEL_23:
    swift_release();
    return v17;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_1000C103C(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10004581C();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1000C0AA8(a1, a2, a3, a4);
  if (v8[2] <= *(void *)(v9 + 16) >> 3)
  {
    int64_t v13 = (void *)v9;
    sub_1000D23A8((uint64_t)v8, (uint64_t (*)(void))sub_100093824);
    swift_bridgeObjectRelease();
    int64_t v10 = v13;
    if (v13[2]) {
      goto LABEL_3;
    }
  }
  else
  {
    int64_t v10 = sub_1000CF510((uint64_t)v8, v9, &qword_10070C0A0);
    swift_bridgeObjectRelease();
    if (v10[2])
    {
LABEL_3:
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v10;
      return v11 | 0xA000000000000002;
    }
  }
  swift_bridgeObjectRelease();
  return 0xF000000000000007;
}

double StateWithTasks.init(windowOfInterest:environment:mailboxFilter:fetchedMessageMetadata:tracingID:logName:)@<D0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, char a10, uint64_t a11, uint64_t a12)
{
  char v22 = a8 & 1;
  char v23 = a7 & 1;
  _s30MailboxesToSelectLoggingHelperCMa();
  int64_t v15 = (void *)swift_allocObject();
  v15[3] = 0;
  unsigned char v15[4] = 0;
  v15[2] = 0;
  unint64_t v16 = sub_1000D4E60((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v21 = sub_1000D4688((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v20 = sub_1000D4570((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v17 = sub_1000D47B8(_swiftEmptyArrayStorage);
  char v28 = a2 & 1;
  type metadata accessor for State.Logger();
  uint64_t v18 = swift_allocObject();
  sub_1005E0EC0();
  *(unsigned char *)(v18 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id) = a10;
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 8) = v28;
  *(unsigned char *)(a9 + 9) = v23;
  *(unsigned char *)(a9 + 10) = v22;
  *(unsigned char *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 17) = BYTE1(a3) & 1;
  *(unsigned char *)(a9 + 18) = BYTE2(a3) & 1;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = &_swiftEmptySetSingleton;
  *(void *)(a9 + 56) = v16;
  *(void *)(a9 + 64) = 2;
  *(_OWORD *)(a9 + 72) = 0u;
  *(_OWORD *)(a9 + 88) = 0u;
  *(_WORD *)(a9 + 104) = 0;
  *(void *)(a9 + 112) = 0;
  *(void *)(a9 + 120) = 0;
  *(unsigned char *)(a9 + 128) = 1;
  *(unsigned char *)(a9 + 129) = 0;
  *(void *)(a9 + 136) = 0;
  *(void *)(a9 + 144) = 0;
  *(void *)(a9 + 152) = 0;
  *(void *)(a9 + 160) = v21;
  *(void *)(a9 + 168) = _swiftEmptyArrayStorage;
  *(void *)(a9 + 176) = _swiftEmptyArrayStorage;
  *(unsigned char *)(a9 + 184) = 0;
  *(void *)(a9 + 192) = v17;
  *(void *)(a9 + 200) = v20;
  *(void *)(a9 + 208) = _swiftEmptyArrayStorage;
  double result = -4.175838e-234;
  *(_OWORD *)(a9 + 216) = xmmword_1005F66E0;
  *(_DWORD *)(a9 + 232) = 0;
  *(void *)(a9 + 240) = _swiftEmptyArrayStorage;
  *(void *)(a9 + 248) = &_swiftEmptySetSingleton;
  *(unsigned char *)(a9 + 256) = a10;
  *(void *)(a9 + 264) = _swiftEmptyArrayStorage;
  *(_DWORD *)(a9 + 272) = 0;
  *(void *)(a9 + 280) = a11;
  *(void *)(a9 + 288) = a12;
  *(void *)(a9 + 296) = v18;
  *(void *)(a9 + 304) = v15;
  return result;
}

uint64_t StateWithTasks.environment.getter()
{
  return v0[16] | ((v0[17] & 1) << 8) | ((v0[18] & 1) << 16);
}

uint64_t StateWithTasks.update(updates:send:persist:)(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, void (*a4)(unint64_t), NSObject *a5)
{
  uint64_t v6 = v5;
  int v77 = v5 + 10;
  long long v12 = v5[13];
  v85[2] = v5[12];
  v86[0] = v12;
  *(_OWORD *)((char *)v86 + 12) = *(_OWORD *)((char *)v5 + 220);
  long long v13 = v5[11];
  v85[0] = v5[10];
  v85[1] = v13;
  uint64_t v75 = sub_1000445D0();
  uint64_t v76 = sub_10004581C();
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v78 = v5;
  uint64_t v80 = a4;
  if (v14)
  {
    uint64_t v83 = a2;
    uint64_t v84 = a3;
    int64_t v15 = (unint64_t *)(a1 + 32);
    sub_1000A9398((uint64_t)v85);
    swift_bridgeObjectRetain();
    uint64_t v16 = 0;
    unint64_t v17 = &_swiftEmptySetSingleton;
    uint64_t v79 = a5;
    int v81 = v15;
    uint64_t v82 = v14;
    while (1)
    {
      unint64_t v19 = v15[v16];
      uint64_t v20 = *((unsigned __int8 *)v6 + 256);
      swift_retain();
      id v21 = (id)*tracingLog.unsafeMutableAddressor();
      char v22 = sub_1005E28A0();

      unint64_t v23 = v19 >> 62;
      if (v22)
      {
        if (v23)
        {
          if (v23 == 1)
          {
            unint64_t v24 = *(void *)((v19 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
            int v25 = *(unsigned __int8 *)((v19 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
            sub_1000575F0(v24, *(unsigned char *)((v19 & 0x3FFFFFFFFFFFFFFFLL) + 0x18));
            sub_1001CBB44(v20, v24, v25);
            sub_100057604(v24, v25);
          }
        }
        else
        {
          unsigned int v26 = *(_DWORD *)(v19 + 16);
          unint64_t v27 = *(void *)(v19 + 24);
          sub_100086880(v27);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1001D59F8(v20, v26, v27);
          sub_100086A88(v27);
          a5 = v79;
          swift_bridgeObjectRelease();
          a4 = v80;
          swift_bridgeObjectRelease();
        }
      }
      sub_1000C1BC0(v19, (uint64_t (*)(char *, void *))v83, v84, a4, (uint64_t)a5);
      if (v23 == 1
        && (*(unsigned char *)((v19 & 0x3FFFFFFFFFFFFFFFLL) + 0x18) & 1) != 0
        && (unint64_t v28 = *(void *)((v19 & 0x3FFFFFFFFFFFFFFFLL) + 0x10),
            ((v28 >> 59) & 0x1E | (v28 >> 2) & 1) == 0x12))
      {
        uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        int64_t v30 = *(void *)(v29 + 16);
        if (v30)
        {
          *(void *)&long long v96 = _swiftEmptyArrayStorage;
          swift_bridgeObjectRetain();
          sub_10001A794(0, v30, 0);
          int v31 = (void *)v96;
          unint64_t v32 = *(void *)(v96 + 16);
          uint64_t v33 = 32;
          do
          {
            int v34 = *(_DWORD *)(v29 + v33);
            *(void *)&long long v96 = v31;
            unint64_t v35 = v31[3];
            if (v32 >= v35 >> 1)
            {
              sub_10001A794(v35 > 1, v32 + 1, 1);
              int v31 = (void *)v96;
            }
            v31[2] = v32 + 1;
            *((_DWORD *)v31 + v32 + 8) = v34;
            v33 += 24;
            ++v32;
            --v30;
          }
          while (v30);
          swift_bridgeObjectRelease();
          uint64_t v6 = v78;
          a5 = v79;
          uint64_t v36 = v31[2];
          if (!v36)
          {
LABEL_31:
            swift_release();
            swift_bridgeObjectRelease();
            a4 = v80;
            goto LABEL_4;
          }
        }
        else
        {
          int v31 = _swiftEmptyArrayStorage;
          uint64_t v36 = _swiftEmptyArrayStorage[2];
          if (!v36) {
            goto LABEL_31;
          }
        }
        uint64_t v37 = 0;
        do
        {
          long long v39 = v17 + 56;
          while (1)
          {
            Swift::Int v40 = *((unsigned int *)v31 + v37++ + 8);
            sub_1005E33F0();
            sub_1005E3440(v40);
            Swift::Int v41 = sub_1005E3470();
            uint64_t v42 = -1 << v17[32];
            unint64_t v43 = v41 & ~v42;
            if (((*(void *)&v39[(v43 >> 3) & 0xFFFFFFFFFFFFFF8] >> v43) & 1) == 0) {
              goto LABEL_20;
            }
            uint64_t v44 = *((void *)v17 + 6);
            if (*(_DWORD *)(v44 + 4 * v43) != v40) {
              break;
            }
LABEL_22:
            if (v37 == v36) {
              goto LABEL_29;
            }
          }
          uint64_t v45 = ~v42;
          while (1)
          {
            unint64_t v43 = (v43 + 1) & v45;
            if (((*(void *)&v39[(v43 >> 3) & 0xFFFFFFFFFFFFFF8] >> v43) & 1) == 0) {
              break;
            }
            if (*(_DWORD *)(v44 + 4 * v43) == v40) {
              goto LABEL_22;
            }
          }
LABEL_20:
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v96 = v17;
          sub_1000C9BE0(v40, v43, isUniquelyReferenced_nonNull_native, &qword_10070C098);
          unint64_t v17 = (unsigned char *)v96;
          swift_bridgeObjectRelease();
        }
        while (v37 != v36);
LABEL_29:
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v6 = v78;
        a5 = v79;
        a4 = v80;
      }
      else
      {
        swift_release();
      }
LABEL_4:
      int64_t v15 = v81;
      uint64_t v18 = v82;
      if (++v16 == v82)
      {
        swift_bridgeObjectRelease();
        sub_1000C2CC8(v83, v84, a4, a5);
        while (1)
        {
          unint64_t v47 = *v15++;
          unint64_t v46 = v47;
          unint64_t v48 = v47 >> 62;
          if (v47 >> 62)
          {
            if (v48 == 1)
            {
              uint64_t v49 = v46 & 0x3FFFFFFFFFFFFFFFLL;
              if (*(unsigned char *)(v49 + 24))
              {
                int v50 = (*(void *)(v49 + 16) >> 59) & 0x1E | (*(void *)(v49 + 16) >> 2) & 1;
                if (v50 == 2 || v50 == 4)
                {
LABEL_45:
                  long long v52 = v6[7];
                  long long v98 = v6[6];
                  long long v99 = v52;
                  long long v53 = v6[9];
                  long long v100 = v6[8];
                  long long v101 = v53;
                  long long v54 = v6[5];
                  long long v96 = v6[4];
                  long long v97 = v54;
                  char v55 = sub_100083758();
                  sub_1000485CC((uint64_t)v55);
                  swift_bridgeObjectRelease();
                  goto LABEL_47;
                }
              }
            }
          }
          else if (*(void *)(v46 + 24) >> 60 == 3)
          {
            type metadata accessor for UntaggedResponse(0);
            swift_projectBox();
            if (swift_getEnumCaseMultiPayload() == 7) {
              goto LABEL_45;
            }
          }
          if (!--v18) {
            goto LABEL_47;
          }
        }
      }
    }
  }
  sub_1000A9398((uint64_t)v85);
  sub_1000C2CC8(a2, a3, a4, a5);
  unint64_t v17 = &_swiftEmptySetSingleton;
LABEL_47:
  long long v56 = v77[3];
  v94[4] = v77[2];
  v95[0] = v56;
  *(_OWORD *)((char *)v95 + 12) = *(_OWORD *)((char *)v77 + 60);
  long long v57 = v77[1];
  long long v94[2] = *v77;
  v94[3] = v57;
  uint64_t v58 = sub_1000C0ED0((uint64_t)v17, (uint64_t)v75, (uint64_t (*)(unsigned char *, void))sub_100019B30);
  unint64_t v59 = sub_100044500(v58);
  swift_bridgeObjectRelease();
  if ((~v59 & 0xF000000000000007) != 0)
  {
    uint64_t v60 = *((void *)v6 + 37);
    swift_retain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v61 = sub_1005E0EB0();
    os_log_type_t v62 = sub_1005E2580();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = swift_slowAlloc();
      *(_DWORD *)uint64_t v63 = 68157952;
      LODWORD(v91) = 2;
      sub_1005E2960();
      *(_WORD *)(v63 + 8) = 256;
      LOBYTE(v91) = *(unsigned char *)(v60 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
      uint64_t v6 = v78;
      sub_1005E2960();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "[%.*hhx] Updating running search requests.", (uint8_t *)v63, 0xBu);
      a4 = v80;
      swift_slowDealloc();
    }
    else
    {
      swift_release();
    }

    a4(v59);
    sub_1000D4F98(v59);
  }
  long long v64 = v77[3];
  long long v93 = v77[2];
  v94[0] = v64;
  *(_OWORD *)((char *)v94 + 12) = *(_OWORD *)((char *)v77 + 60);
  long long v65 = v77[1];
  long long v91 = *v77;
  long long v92 = v65;
  uint64_t v66 = swift_bridgeObjectRetain();
  unint64_t v67 = sub_1000C103C(v66, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100047FD0, 0, (uint64_t)v76);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((~v67 & 0xF000000000000007) != 0)
  {
    uint64_t v68 = *((void *)v6 + 37);
    swift_retain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v69 = sub_1005E0EB0();
    os_log_type_t v70 = sub_1005E2580();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = swift_slowAlloc();
      *(_DWORD *)uint64_t v71 = 68157952;
      LODWORD(v87) = 2;
      sub_1005E2960();
      *(_WORD *)(v71 + 8) = 256;
      LOBYTE(v87) = *(unsigned char *)(v68 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
      sub_1005E2960();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "[%.*hhx] Updating running download requests.", (uint8_t *)v71, 0xBu);
      a4 = v80;
      swift_slowDealloc();
    }
    else
    {
      swift_release();
    }

    a4(v67);
    sub_1000D4F98(v67);
  }
  long long v72 = v77[3];
  long long v89 = v77[2];
  v90[0] = v72;
  *(_OWORD *)((char *)v90 + 12) = *(_OWORD *)((char *)v77 + 60);
  long long v73 = v77[1];
  long long v87 = *v77;
  long long v88 = v73;
  sub_10004D428(*((unsigned __int8 *)v6 + 256), (uint64_t)v85);
  return sub_1000A93F4((uint64_t)v85);
}

uint64_t sub_1000C1BC0(unint64_t a1, uint64_t (*a2)(char *, void *), uint64_t a3, void (*a4)(unint64_t), uint64_t a5)
{
  uint64_t v6 = v5;
  *(void *)&long long v156 = 0;
  uint64_t v12 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v147 = *(void *)(v12 - 8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v144 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = type metadata accessor for RunningTask();
  uint64_t v155 = *(char **)(v152 - 8);
  uint64_t v15 = __chkstk_darwin(v152);
  unint64_t v17 = (char *)&v144 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  long long v157 = (char *)&v144 - v19;
  __chkstk_darwin(v18);
  id v21 = (char *)&v144 - v20;
  unint64_t v158 = a1;
  uint64_t v149 = v6;
  uint64_t v151 = v17;
  uint64_t v144 = a5;
  __int16 v145 = a4;
  unint64_t v146 = a1 >> 62;
  if (a1 >> 62 == 1)
  {
    long long v161 = a2;
    if (*(unsigned char *)((v158 & 0x3FFFFFFFFFFFFFFFLL) + 0x18) == 1)
    {
      unint64_t v39 = *(void *)((v158 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      if (((v39 >> 59) & 0x1E | (v39 >> 2) & 1) == 4)
      {
        unint64_t v160 = a3;
        uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v41 = *(void *)(v6 + 296);
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v42 = sub_10008EFD0(v40, v41);
        swift_release();
        swift_bridgeObjectRelease();
        long long v43 = *(_OWORD *)(v6 + 208);
        long long v181 = *(_OWORD *)(v6 + 192);
        long long v182 = v43;
        long long v44 = *(_OWORD *)(v6 + 240);
        long long v183 = *(_OWORD *)(v6 + 224);
        long long v184 = v44;
        long long v45 = *(_OWORD *)(v6 + 144);
        long long v177 = *(_OWORD *)(v6 + 128);
        long long v178 = v45;
        long long v46 = *(_OWORD *)(v6 + 176);
        long long v179 = *(_OWORD *)(v6 + 160);
        long long v180 = v46;
        long long v47 = *(_OWORD *)(v6 + 80);
        long long v173 = *(_OWORD *)(v6 + 64);
        long long v174 = v47;
        long long v48 = *(_OWORD *)(v6 + 112);
        long long v175 = *(_OWORD *)(v6 + 96);
        long long v176 = v48;
        long long v49 = *(_OWORD *)(v6 + 16);
        long long v169 = *(_OWORD *)v6;
        long long v170 = v49;
        long long v50 = *(_OWORD *)(v6 + 48);
        long long v171 = *(_OWORD *)(v6 + 32);
        long long v172 = v50;
        v185[2] = v175;
        v185[3] = v176;
        v185[4] = v177;
        v185[5] = v178;
        v185[0] = v173;
        v185[1] = v174;
        sub_10001FDF0((uint64_t)v185, (uint64_t)v186, &qword_100709F30);
        sub_10001FDF0((uint64_t)v186, (uint64_t)v187, &qword_100709F30);
        if (v187[0] == 2) {
          uint64_t v51 = 3;
        }
        else {
          uint64_t v51 = v187[9] + 1;
        }
        int v52 = sub_10000C8D8();
        if (v52)
        {
          uint64_t v24 = v156;
          if (v52 == 1)
          {
            uint64_t v51 = 0;
            char v53 = 0;
            uint64_t v54 = 1;
          }
          else
          {
            char v53 = 0;
            uint64_t v54 = v51;
          }
        }
        else
        {
          uint64_t v51 = 0;
          uint64_t v54 = 1;
          char v53 = 1;
          uint64_t v24 = v156;
        }
        unint64_t v17 = v151;
        uint64_t v22 = (uint64_t)v157;
        sub_1000D6864(v42, v6, v161, v160, v51, v54, v53);
        goto LABEL_32;
      }
    }
    goto LABEL_19;
  }
  if (a1 >> 62)
  {
LABEL_19:
    uint64_t v24 = v156;
    uint64_t v22 = (uint64_t)v157;
    goto LABEL_33;
  }
  uint64_t v22 = (uint64_t)v157;
  unint64_t v23 = *(void *)(v158 + 24);
  uint64_t v24 = v156;
  if (v23 >> 60 != 1)
  {
LABEL_33:
    unint64_t v59 = *(unsigned __int8 **)(v6 + 296);
    swift_retain();
    sub_10008F678(v158, v59);
    uint64_t result = swift_release();
    uint64_t v154 = *(void *)(*(void *)(v6 + 264) + 16);
    if (v154)
    {
      unint64_t v61 = 0;
      uint64_t v148 = v21 + 8;
      long long v153 = v21;
      while (1)
      {
        uint64_t v62 = *(void *)(v6 + 264);
        if (v61 >= *(void *)(v62 + 16)) {
          break;
        }
        long long v161 = (uint64_t (*)(char *, void *))((v155[80] + 32) & ~(unint64_t)v155[80]);
        unint64_t v160 = *((void *)v155 + 9) * v61;
        sub_1000D85A8((uint64_t)v161 + v62 + v160, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for RunningTask);
        sub_1000DDF90(v158, (char *)v6);
        if (v24)
        {
          uint64_t v24 = 0;
          sub_1000B9240((uint64_t)v21, (uint64_t)&v165);
          if (v168)
          {
            if (v168 == 1)
            {
              sub_100021BFC(&v165, (uint64_t)v162);
              uint64_t v63 = v163;
              uint64_t v64 = v164;
              sub_10003BCDC(v162, v163);
              long long v65 = *(void (**)(uint64_t, char *, uint64_t, uint64_t))(v64 + 136);
              uint64_t v66 = v63;
              unint64_t v17 = v151;
              uint64_t v67 = v64;
              uint64_t v22 = (uint64_t)v157;
              v65(v6, &v21[*(int *)(v152 + 28)], v66, v67);
              sub_1000B9324((uint64_t)v21);
              *(void *)id v21 = 1;
              uint64_t v68 = v148;
              *uint64_t v148 = 0u;
              v68[1] = 0u;
              *(void *)((char *)v68 + 29) = 0;
              v21[45] = 2;
              _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v162);
            }
          }
          else
          {
            sub_1000B9324((uint64_t)v21);
            *(void *)id v21 = 1;
            uint64_t v69 = v148;
            *uint64_t v148 = 0u;
            v69[1] = 0u;
            *(void *)((char *)v69 + 29) = 0;
            v21[45] = 2;
            sub_1000B9324((uint64_t)&v165);
          }
          swift_errorRelease();
        }
        else
        {
          uint64_t v24 = 0;
        }
        sub_1000D85A8((uint64_t)v21, v22, (uint64_t (*)(void))type metadata accessor for RunningTask);
        uint64_t v70 = *(void *)(v6 + 264);
        if (v61 >= *(void *)(v70 + 16)) {
          goto LABEL_88;
        }
        int v71 = *(unsigned __int8 *)(v6 + 256);
        sub_1000D85A8((uint64_t)v161 + v70 + v160, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for RunningTask);
        id v72 = (id)*tracingLog.unsafeMutableAddressor();
        char v73 = sub_1005E28A0();

        if (v73)
        {
          *(void *)&long long v156 = 0;
          uint64_t v74 = *(void *)(v22 + 48);
          uint64_t v75 = *((void *)v17 + 6);
          *(void *)&long long v165 = _swiftEmptyArrayStorage;
          *((void *)&v165 + 1) = _swiftEmptyArrayStorage;
          KeyPath = (void *)swift_getKeyPath();
          uint64_t v77 = __chkstk_darwin(KeyPath);
          __chkstk_darwin(v77);
          uint64_t v78 = (void (**)(char *, void))sub_1000D8554();
          Array.findAppendOnlyDiff<A>(from:id:added:removed:update:)(v75, KeyPath, (void (**)(char *, void))sub_1000D8544, (void (**)(char *, void))&v144 - 4, (void (*)(char *))sub_1000D854C, (void (**)(char *, void))&v144 - 4, (void (*)(char *, char *))UInt32.init(_:), 0, v74, v78);
          swift_release();
          uint64_t v79 = *((void *)&v165 + 1);
          uint64_t v80 = *(void *)(v165 + 16);
          uint64_t v159 = v165;
          if (v80)
          {
            uint64_t v150 = *((void *)&v165 + 1);
            uint64_t v81 = *(int *)(v152 + 32);
            uint64_t v82 = v147;
            uint64_t v83 = v165 + ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80));
            swift_bridgeObjectRetain();
            uint64_t v84 = *(void *)(v82 + 72);
            uint64_t v85 = v157;
            do
            {
              sub_1000D85A8(v83, (uint64_t)v14, type metadata accessor for TaskHistory.Running);
              sub_1000E3834(v71, *(_DWORD *)&v85[v81]);
              sub_1000D8610((uint64_t)v14, type metadata accessor for TaskHistory.Running);
              v83 += v84;
              --v80;
            }
            while (v80);
            swift_bridgeObjectRelease();
            uint64_t v79 = v150;
          }
          uint64_t v86 = *(void *)(v79 + 16);
          uint64_t v6 = v149;
          uint64_t v22 = (uint64_t)v157;
          if (v86)
          {
            int v87 = *(_DWORD *)&v157[*(int *)(v152 + 32)];
            swift_bridgeObjectRetain();
            long long v88 = (unsigned __int8 *)(v79 + 40);
            do
            {
              long long v89 = *((void *)v88 - 1);
              int v90 = *v88;
              v88 += 12;
              sub_1000E4820(v71, v87, v89, v90);
              --v86;
            }
            while (v86);
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v24 = v156;
          unint64_t v17 = v151;
        }
        id v21 = v153;
        sub_1000D8610((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for RunningTask);
        unint64_t v91 = *(void *)(v6 + 264);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v6 + 264) = v91;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v91 = sub_100093454(v91);
          *(void *)(v6 + 264) = v91;
        }
        if (v61 >= *(void *)(v91 + 16)) {
          goto LABEL_89;
        }
        ++v61;
        sub_1000D8388(v22, (uint64_t)v161 + v91 + v160);
        sub_1000D8610(v22, (uint64_t (*)(void))type metadata accessor for RunningTask);
        uint64_t result = sub_1000D8610((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for RunningTask);
        if (v61 == v154) {
          goto LABEL_58;
        }
      }
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
      goto LABEL_92;
    }
LABEL_58:
    if (v146 != 1) {
      return result;
    }
    if (*(unsigned char *)((v158 & 0x3FFFFFFFFFFFFFFFLL) + 0x18) != 1) {
      return result;
    }
    unint64_t v93 = *(void *)((v158 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    if (((v93 >> 59) & 0x1E | (v93 >> 2) & 1) != 2) {
      return result;
    }
    uint64_t v94 = v93 & 0xFFFFFFFFFFFFFFBLL;
    int v95 = *(unsigned __int8 *)(v94 + 24);
    uint64_t v96 = *(void *)(v94 + 32);
    char v97 = *(unsigned char *)(v94 + 40);
    uint64_t v98 = v6;
    uint64_t v99 = *(void *)(v6 + 160);
    uint64_t v100 = *(void *)(v6 + 168);
    uint64_t v101 = *(void *)(v98 + 176);
    LODWORD(v98) = *(unsigned __int8 *)(v98 + 184);
    LODWORD(v161) = v95;
    if (v98 == 1)
    {
      uint64_t v102 = sub_10000566C(&qword_100709E18);
      uint64_t v166 = v102;
      uint64_t v167 = sub_100007494(&qword_100709E20, &qword_100709E18);
      uint64_t v103 = (void *)swift_allocObject();
      *(void *)&long long v165 = v103;
      v103[2] = v99;
      v103[3] = sub_100005DBC;
      v103[4] = 0;
      v103[5] = sub_100005EF4;
      v103[6] = 0;
      swift_bridgeObjectRetain();
      sub_10005636C(v99, v100, v101, 1);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_10005636C(v99, v100, v101, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v102 = sub_10000566C(&qword_100709E08);
      uint64_t v166 = v102;
      uint64_t v167 = sub_100007494(&qword_100709E10, &qword_100709E08);
      *(void *)&long long v165 = _swiftEmptyArrayStorage;
    }
    long long v104 = sub_10003BCDC(&v165, v102);
    __chkstk_darwin(v104);
    uint64_t v107 = (*(uint64_t (**)(char *))(v106 + 16))((char *)&v144 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0));
    __chkstk_darwin(v107);
    *((unsigned char *)&v144 - 32) = (_BYTE)v161;
    *(&v144 - 3) = v96;
    LOBYTE(v143) = v97;
    uint64_t v108 = sub_1005E2000();
    swift_bridgeObjectRelease();
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v165);
    uint64_t v109 = *(uint64_t (**)(char *, void *))(v108 + 16);
    if (!v109) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v110 = *(void *)(v149 + 296);
    unint64_t v160 = v110 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_l;
    long long v157 = (char *)OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id;
    swift_bridgeObjectRetain();
    uint64_t v154 = v108;
    uint64_t v111 = v108 + 48;
    *(void *)&long long v112 = 68158467;
    long long v156 = v112;
    uint64_t v155 = (char *)&type metadata for Any + 8;
    long long v161 = v109;
    do
    {
      uint64_t v118 = *(void *)(v111 - 16);
      int v119 = *(_DWORD *)(v111 - 8);
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v120 = sub_1005E0EB0();
      os_log_type_t v121 = sub_1005E2580();
      if (os_log_type_enabled(v120, v121))
      {
        uint64_t v113 = swift_slowAlloc();
        LODWORD(v158) = v119;
        uint64_t v114 = v113;
        uint64_t v159 = swift_slowAlloc();
        v162[0] = v159;
        *(_DWORD *)uint64_t v114 = v156;
        *(_DWORD *)(v114 + 4) = 2;
        *(_WORD *)(v114 + 8) = 256;
        char v115 = v157[v110];
        swift_release();
        *(unsigned char *)(v114 + 10) = v115;
        swift_release();
        *(_WORD *)(v114 + 11) = 2160;
        *(void *)(v114 + 13) = 0x786F626C69616DLL;
        *(_WORD *)(v114 + 21) = 2085;
        *(void *)&long long v165 = v118;
        DWORD2(v165) = v158;
        swift_bridgeObjectRetain();
        uint64_t v116 = sub_1005E1CC0();
        *(void *)(v114 + 23) = sub_1000C6914(v116, v117, v162);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v120, v121, "[%.*hhx] Notifying persistence that %{sensitive,mask.mailbox}s is already synced.", (uint8_t *)v114, 0x1Fu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        swift_release_n();
      }
      v111 += 48;
      uint64_t v109 = (uint64_t (*)(char *, void *))((char *)v109 - 1);
    }
    while (v109);
    uint64_t v122 = v154;
    swift_bridgeObjectRelease();
    int v123 = (void *)sub_1000D4FAC((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRetain();
    int v124 = (Swift::UInt *)(v122 + 56);
    while (1)
    {
      uint64_t v127 = *(v124 - 1);
      Swift::UInt v126 = *v124;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      char v128 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v165 = v123;
      unint64_t v130 = sub_1000242DC(v127, v126);
      uint64_t v131 = v123[2];
      BOOL v132 = (v129 & 1) == 0;
      uint64_t v133 = v131 + v132;
      if (__OFADD__(v131, v132)) {
        goto LABEL_90;
      }
      char v134 = v129;
      if (v123[3] >= v133)
      {
        if (v128)
        {
          int v123 = (void *)v165;
          if ((v129 & 1) == 0) {
            goto LABEL_80;
          }
        }
        else
        {
          sub_100098410();
          int v123 = (void *)v165;
          if ((v134 & 1) == 0) {
            goto LABEL_80;
          }
        }
      }
      else
      {
        sub_100051D50(v133, v128);
        unint64_t v135 = sub_1000242DC(v127, v126);
        if ((v134 & 1) != (v136 & 1)) {
          goto LABEL_93;
        }
        unint64_t v130 = v135;
        int v123 = (void *)v165;
        if ((v134 & 1) == 0)
        {
LABEL_80:
          v123[(v130 >> 6) + 8] |= 1 << v130;
          unsigned int v137 = (uint64_t *)(v123[6] + 16 * v130);
          *unsigned int v137 = v127;
          v137[1] = v126;
          uint64_t v138 = v123[7] + 24 * v130;
          *(_DWORD *)uint64_t v138 = 0;
          *(unsigned char *)(v138 + 4) = 1;
          *(void *)(v138 + 8) = 0;
          *(unsigned char *)(v138 + 16) = 1;
          uint64_t v139 = v123[2];
          BOOL v140 = __OFADD__(v139, 1);
          uint64_t v141 = v139 + 1;
          if (v140) {
            goto LABEL_91;
          }
          v123[2] = v141;
          swift_bridgeObjectRetain();
          goto LABEL_72;
        }
      }
      uint64_t v125 = v123[7] + 24 * v130;
      *(_DWORD *)uint64_t v125 = 0;
      *(unsigned char *)(v125 + 4) = 1;
      *(void *)(v125 + 8) = 0;
      *(unsigned char *)(v125 + 16) = 1;
LABEL_72:
      v124 += 6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      long long v161 = (uint64_t (*)(char *, void *))((char *)v161 - 1);
      if (!v161)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v142 = swift_allocObject();
        *(void *)(v142 + 16) = v123;
        v145(v142 | 0x9000000000000002);
        return swift_release();
      }
    }
  }
  int v25 = *(unsigned __int8 *)(v6 + 184);
  int v26 = *(_DWORD *)(v158 + 16);
  uint64_t v27 = v23 & 0xFFFFFFFFFFFFFFFLL;
  int v28 = *(_DWORD *)(v27 + 24);
  uint64_t v29 = *(void *)(v27 + 32);
  long long v161 = *(uint64_t (**)(char *, void *))(v27 + 40);
  long long v153 = (char *)&v144 - v20;
  if (v25)
  {
    uint64_t v30 = *(void *)(v6 + 160);
    uint64_t v31 = *(void *)(v30 + 16);
    if (v31)
    {
      unint64_t v160 = v29;
      unint64_t v32 = (void *)(v30 + 128);
      uint64_t v33 = v32;
      do
      {
        uint64_t v35 = *v33;
        v33 += 22;
        uint64_t v34 = v35;
        if (v35)
        {
          int v36 = *((_DWORD *)v32 - 18);
          uint64_t v37 = *(v32 - 10);
          long long v38 = (_DWORD *)(v34
                         + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
          swift_beginAccess();
          if (*v38 == v26)
          {
            swift_bridgeObjectRetain();
            goto LABEL_22;
          }
        }
        unint64_t v32 = v33;
        --v31;
      }
      while (v31);
      uint64_t v37 = 0;
      int v36 = 0;
LABEL_22:
      uint64_t v6 = v149;
      unint64_t v17 = v151;
      uint64_t v29 = v160;
    }
    else
    {
      uint64_t v37 = 0;
      int v36 = 0;
      unint64_t v17 = v151;
    }
  }
  else
  {
    uint64_t v37 = 0;
    int v36 = 0;
  }
  LODWORD(v169) = v26;
  *((void *)&v169 + 1) = v37;
  LODWORD(v170) = v36;
  DWORD2(v170) = v28;
  *(void *)&long long v171 = v29;
  *((void *)&v171 + 1) = v161;
  uint64_t v55 = *(void *)(v6 + 296);
  uint64_t v56 = *(void *)(*(void *)(v6 + 264) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v56)
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = 0;
    uint64_t v22 = (uint64_t)v157;
    goto LABEL_28;
  }
  swift_retain();
  sub_1000EC3F4((unsigned int *)&v169, v55);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000ED168(v6 + 256, (int *)&v169, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  uint64_t v24 = 0;
  uint64_t v57 = sub_1000CE4F0((unint64_t *)(v6 + 264), (char *)(v6 + 256));
  uint64_t v58 = *(void *)(*(void *)(v6 + 264) + 16);
  uint64_t v22 = (uint64_t)v157;
  if (v58 >= v57)
  {
    sub_1000D666C(v57, v58, (uint64_t (*)(void))sub_100017558, (uint64_t (*)(void))type metadata accessor for RunningTask);
    swift_bridgeObjectRelease();
    swift_release();
LABEL_28:
    swift_bridgeObjectRelease();
    id v21 = v153;
LABEL_32:
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
LABEL_92:
  __break(1u);
LABEL_93:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

uint64_t sub_1000C2CC8(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, void (*a3)(unint64_t), NSObject *a4)
{
  v209 = a3;
  v210 = a4;
  uint64_t v205 = type metadata accessor for RunningTask();
  uint64_t v218 = *(void *)(v205 - 8);
  uint64_t v7 = __chkstk_darwin(v205);
  uint64_t v202 = (uint64_t)&v187 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  v208 = (_OWORD *)((char *)&v187 - v10);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v187 - v12;
  __chkstk_darwin(v11);
  uint64_t v211 = (uint64_t)&v187 - v14;
  uint64_t v15 = type metadata accessor for Command();
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)&v187 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(unsigned __int8 *)(v4 + 64);
  uint64_t v221 = v4;
  v203 = a1;
  uint64_t v204 = a2;
  if (v18 == 2)
  {
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = sub_1000A74CC((uint64_t)_swiftEmptyArrayStorage);
    sub_1000D716C((uint64_t)v17, v19, v20, (long long *)v4, (uint64_t (*)(uint64_t, void *))a1);
    uint64_t v188 = 0;
    sub_1000D8610((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for Command);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v21 = *(void *)(v4 + 296);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v22 = sub_1005E0EB0();
    os_log_type_t v23 = sub_1005E2590();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 68157952;
      v254[0] = 2;
      sub_1005E2960();
      *(_WORD *)(v24 + 8) = 256;
      LOBYTE(v254[0]) = *(unsigned char *)(v21 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
      sub_1005E2960();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "[%.*hhx] Creating initial connection to get capabilities.", (uint8_t *)v24, 0xBu);
      swift_slowDealloc();
      swift_release();
    }
    else
    {
      swift_release_n();
    }
  }
  else
  {
    uint64_t v188 = 0;
  }
  uint64_t v25 = v221;
  uint64_t v26 = *(void *)(v221 + 264);
  uint64_t v27 = *(unsigned __int8 *)(v221 + 256);
  swift_bridgeObjectRetain();
  int v28 = sub_1000EAE28(v27, v26);
  swift_bridgeObjectRelease();
  v216 = (void *)(v25 + 168);
  uint64_t v238 = (uint64_t)v28;
  v192 = (char *)v229 + 1;
  v193 = (char *)v229 + 4;
  v197 = (char *)v229 + 8;
  v198 = (void *)&v247 + 1;
  *(void *)&long long v29 = 68157952;
  long long v189 = v29;
  uint64_t v30 = (_OWORD *)v25;
  *(void *)&long long v29 = 68158723;
  long long v191 = v29;
  v190 = (char *)&type metadata for Any + 8;
  uint64_t v212 = v25 + 256;
  while (2)
  {
    memcpy(v254, v30, 0x138uLL);
    sub_1000B37E0((uint64_t)v254);
    uint64_t v31 = sub_10009E55C();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    sub_1000B38FC((uint64_t)v254);
    swift_retain();
    uint64_t v213 = v31;
    uint64_t v214 = v33;
    uint64_t v207 = v35;
    sub_1000EB040(v31, v33, v35);
    swift_release();
    LODWORD(v206) = 0;
    while (2)
    {
      long long v39 = v30[13];
      v253[12] = v30[12];
      v253[13] = v39;
      long long v40 = v30[15];
      v253[14] = v30[14];
      v253[15] = v40;
      long long v41 = v30[9];
      v253[8] = v30[8];
      v253[9] = v41;
      long long v42 = v30[11];
      v253[10] = v30[10];
      v253[11] = v42;
      long long v43 = v30[5];
      v253[4] = v30[4];
      v253[5] = v43;
      long long v44 = v30[7];
      v253[6] = v30[6];
      v253[7] = v44;
      long long v45 = v30[1];
      v253[0] = *v30;
      v253[1] = v45;
      long long v46 = v30[3];
      v253[2] = v30[2];
      v253[3] = v46;
      uint64_t v47 = *((void *)v30 + 33);
      sub_100063F70((uint64_t)v253);
      uint64_t v48 = swift_bridgeObjectRetain();
      uint64_t v49 = sub_1000D755C(v48);
      uint64_t v51 = v50;
      uint64_t v53 = v52;
      swift_bridgeObjectRelease();
      uint64_t v54 = *((unsigned __int8 *)v30 + 256);
      swift_bridgeObjectRetain_n();
      sub_10008D294(v49, v51, v53, v213, v214, v207, (uint64_t)v253, (uint64_t)v236, v47);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000D7B00((uint64_t)v253);
      sub_1000079E4((uint64_t)v236, (uint64_t)&v232, &qword_10070B698);
      if (v235 == 255)
      {
        sub_100007A48((uint64_t)&v232, &qword_10070B698);
      }
      else
      {
        sub_10009B0FC((uint64_t)&v232, (uint64_t)v229);
        sub_10009B158((uint64_t)v229, (uint64_t)&v232);
        uint64_t v55 = v211;
        sub_1000DD548((uint64_t)&v232, v54, v211);
        sub_1000EDF38(v55 + *(int *)(v205 + 28));
        sub_1000EB7CC(v55);
        sub_1000D8610(v55, (uint64_t (*)(void))type metadata accessor for RunningTask);
        sub_10009B158((uint64_t)v229, (uint64_t)&v232);
        if (v235)
        {
          sub_100021BFC(&v232, (uint64_t)v226);
          uint64_t v56 = v227;
          uint64_t v57 = v228;
          sub_10003BCDC(v226, v227);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v57 + 32))(&v239, v56, v57);
          uint64_t v58 = v240;
          LODWORD(v57) = v241;
          long long v246 = v239;
          sub_10001D550((uint64_t)&v246);
          _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v226);
          sub_1000187DC((uint64_t)&v232, v58, v57);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_10009B1B4((uint64_t)&v232);
        }
        sub_10009B1B4((uint64_t)v229);
        LODWORD(v206) = 1;
      }
      uint64_t v30 = (_OWORD *)v221;
      unint64_t v215 = sub_1000D4FAC((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v59 = *(void *)(v237 + 56);
      uint64_t v219 = v237 + 56;
      uint64_t v60 = 1 << *(unsigned char *)(v237 + 32);
      if (v60 < 64) {
        uint64_t v61 = ~(-1 << v60);
      }
      else {
        uint64_t v61 = -1;
      }
      unint64_t v62 = v61 & v59;
      int64_t v220 = (unint64_t)(v60 + 63) >> 6;
      uint64_t v222 = v237;
      swift_bridgeObjectRetain();
      for (unint64_t i = 0; ; unint64_t i = v224)
      {
        if (v62)
        {
          uint64_t v223 = (v62 - 1) & v62;
          v224 = i;
          unint64_t v64 = __clz(__rbit64(v62)) | ((void)i << 6);
          goto LABEL_39;
        }
        BOOL v65 = __OFADD__(i, 1);
        int64_t v66 = (int64_t)i + 1;
        if (v65)
        {
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          swift_release();
          swift_release();
          swift_release();
          uint64_t v184 = v238;
          uint64_t v185 = *((void *)v30 + 37);
          swift_retain();
          sub_100090834(v184, v185, v30, (uint64_t)v30);
          swift_bridgeObjectRelease();
          return swift_release();
        }
        if (v66 >= v220) {
          goto LABEL_10;
        }
        unint64_t v67 = *(void *)(v219 + 8 * v66);
        if (!v67) {
          break;
        }
LABEL_38:
        uint64_t v223 = (v67 - 1) & v67;
        v224 = (void *)v66;
        unint64_t v64 = __clz(__rbit64(v67)) + (v66 << 6);
LABEL_39:
        uint64_t v69 = *(void *)(v222 + 48) + 16 * v64;
        uint64_t v70 = *(void *)v69;
        uint64_t v225 = *(unsigned int *)(v69 + 8);
        v226[0] = &_swiftEmptySetSingleton;
        uint64_t v71 = *((void *)v30 + 33);
        uint64_t v72 = *(void *)(v71 + 16);
        if (v72)
        {
          uint64_t v73 = v218;
          uint64_t v74 = v71 + ((*(unsigned __int8 *)(v218 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v218 + 80));
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t v75 = *(void *)(v73 + 72);
          do
          {
            sub_1000D85A8(v74, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for RunningTask);
            sub_1000B9240((uint64_t)v13, (uint64_t)v229);
            if (v231)
            {
              if (v231 == 1)
              {
                sub_100021BFC(v229, (uint64_t)&v232);
                uint64_t v77 = v233;
                uint64_t v76 = v234;
                sub_10003BCDC(&v232, v233);
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v76 + 32))(&v242, v77, v76);
                uint64_t v78 = v243;
                LODWORD(v77) = v244;
                long long v245 = v242;
                sub_10001D550((uint64_t)&v245);
                _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v232);
                sub_1000187DC((uint64_t)v229, v78, v77);
                swift_bridgeObjectRelease();
              }
            }
            else
            {
              sub_1000B9324((uint64_t)v229);
            }
            sub_1000D8610((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for RunningTask);
            v74 += v75;
            --v72;
          }
          while (v72);
          swift_bridgeObjectRelease_n();
          uint64_t v79 = (unsigned char *)v226[0];
          uint64_t v30 = (_OWORD *)v221;
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v79 = &_swiftEmptySetSingleton;
        }
        uint64_t v80 = v225;
        if (*((void *)v79 + 2))
        {
          sub_1005E33F0();
          sub_1005E3410(v80 | (v80 << 32));
          Swift::Int v81 = sub_1005E3470();
          uint64_t v82 = -1 << v79[32];
          unint64_t v83 = v81 & ~v82;
          if ((*(void *)&v79[((v83 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v83))
          {
            uint64_t v84 = ~v82;
            while (1)
            {
              uint64_t v85 = *((void *)v79 + 6) + 16 * v83;
              if ((*(unsigned int *)(v85 + 8) | ((unint64_t)*(unsigned int *)(v85 + 8) << 32)) == (v80 | (v80 << 32)))
              {
                uint64_t v86 = *(void *)v85;
                uint64_t v87 = *(void *)(v86 + 16);
                if (v87 == *(void *)(v70 + 16))
                {
                  if (!v87 || v86 == v70) {
                    goto LABEL_89;
                  }
                  if (*(unsigned __int8 *)(v86 + 32) == *(unsigned __int8 *)(v70 + 32))
                  {
                    if (v87 == 1) {
                      goto LABEL_89;
                    }
                    if (*(unsigned __int8 *)(v86 + 33) == *(unsigned __int8 *)(v70 + 33))
                    {
                      if (v87 == 2) {
                        goto LABEL_89;
                      }
                      if (*(unsigned __int8 *)(v86 + 34) == *(unsigned __int8 *)(v70 + 34))
                      {
                        if (v87 == 3) {
                          goto LABEL_89;
                        }
                        if (*(unsigned __int8 *)(v86 + 35) == *(unsigned __int8 *)(v70 + 35)) {
                          break;
                        }
                      }
                    }
                  }
                }
              }
LABEL_52:
              unint64_t v83 = (v83 + 1) & v84;
              if (((*(void *)&v79[((v83 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v83) & 1) == 0) {
                goto LABEL_68;
              }
            }
            uint64_t v88 = 0;
            uint64_t v89 = v86 + 36;
            uint64_t v90 = v87 - 4;
            while (v90 != v88)
            {
              int v91 = *(unsigned __int8 *)(v89 + v88);
              int v92 = *(unsigned __int8 *)(v70 + v88++ + 36);
              if (v91 != v92) {
                goto LABEL_52;
              }
            }
LABEL_89:
            swift_bridgeObjectRelease();
LABEL_24:
            swift_bridgeObjectRelease();
            goto LABEL_25;
          }
        }
LABEL_68:
        swift_bridgeObjectRelease();
        if (*((unsigned char *)v30 + 184) != 1) {
          goto LABEL_24;
        }
        unint64_t v93 = (void *)*((void *)v30 + 20);
        uint64_t v94 = v93[2];
        if (!v94) {
          goto LABEL_24;
        }
        unint64_t v95 = 0;
        uint64_t v96 = *((void *)v30 + 21);
        uint64_t v97 = *((void *)v30 + 22);
        while (1)
        {
          uint64_t v98 = (uint64_t)&v93[22 * v95 + 4];
          if ((*(unsigned int *)(v98 + 24) | ((unint64_t)*(unsigned int *)(v98 + 24) << 32)) == (v80 | (v80 << 32)))
          {
            uint64_t v99 = *(void *)(v98 + 16);
            uint64_t v100 = *(void *)(v99 + 16);
            if (v100 == *(void *)(v70 + 16))
            {
              if (v100) {
                BOOL v101 = v99 == v70;
              }
              else {
                BOOL v101 = 1;
              }
              if (v101) {
                goto LABEL_90;
              }
              if (*(unsigned __int8 *)(v99 + 32) == *(unsigned __int8 *)(v70 + 32))
              {
                if (v100 == 1) {
                  goto LABEL_90;
                }
                if (*(unsigned __int8 *)(v99 + 33) == *(unsigned __int8 *)(v70 + 33))
                {
                  if (v100 == 2) {
                    goto LABEL_90;
                  }
                  if (*(unsigned __int8 *)(v99 + 34) == *(unsigned __int8 *)(v70 + 34))
                  {
                    if (v100 == 3) {
                      goto LABEL_90;
                    }
                    if (*(unsigned __int8 *)(v99 + 35) == *(unsigned __int8 *)(v70 + 35)) {
                      break;
                    }
                  }
                }
              }
            }
          }
LABEL_71:
          if (++v95 == v94) {
            goto LABEL_24;
          }
        }
        uint64_t v102 = (unsigned __int8 *)(v99 + 36);
        uint64_t v103 = v100 - 4;
        long long v104 = (unsigned __int8 *)(v70 + 36);
        while (v103)
        {
          int v106 = *v102++;
          int v105 = v106;
          int v107 = *v104++;
          --v103;
          if (v105 != v107) {
            goto LABEL_71;
          }
        }
LABEL_90:
        uint64_t v108 = *((void *)v30 + 20);
        uint64_t v109 = *((void *)v30 + 21);
        uint64_t v217 = *((void *)v30 + 22);
        sub_10005636C(v108, v96, v97, 1);
        uint64_t v110 = v93;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v110 = sub_100093440(v93);
        }
        if (v95 >= v110[2]) {
          goto LABEL_141;
        }
        uint64_t v111 = (uint64_t)&v110[22 * v95 + 4];
        uint64_t v113 = *(void *)(v111 + 136);
        long long v112 = (void *)(v111 + 136);
        if (*(void *)(v113 + 16))
        {
          swift_bridgeObjectRelease();
          uint64_t v115 = (uint64_t)&v110[22 * v95 + 4];
          *long long v112 = &_swiftEmptySetSingleton;
          uint64_t v116 = *(void *)v115;
          Swift::UInt v206 = *(void *)(v115 + 8);
          int v201 = *(_DWORD *)(v115 + 104);
          int v117 = *(unsigned __int8 *)(v115 + 108);
          uint64_t v200 = v116;
          swift_bridgeObjectRetain();
          sub_10000F0D4((uint64_t)v93, v109, v217, 1);
          uint64_t v30 = (_OWORD *)v221;
          *(void *)(v221 + 160) = v110;
          uint64_t v118 = v216;
          void *v216 = 0;
          v118[1] = 0;
          *((unsigned char *)v30 + 184) = 1;
          uint64_t v119 = *((void *)v30 + 26);
          int v120 = *((_DWORD *)v30 + 58);
          *(void *)&long long v247 = v110;
          os_log_type_t v121 = v198;
          void *v198 = 0;
          v121[1] = 0;
          char v248 = 1;
          long long v249 = v30[12];
          uint64_t v250 = v119;
          long long v251 = *(_OWORD *)((char *)v30 + 216);
          int v252 = v120;
          int v122 = v225;
          unint64_t v123 = sub_100040734(v70, v225, &v247);
          int v199 = v124;
          if ((v124 & 0x100) != 0) {
            uint64_t v125 = 0;
          }
          else {
            uint64_t v125 = v123;
          }
          uint64_t v217 = v125;
          uint64_t v126 = *((void *)v30 + 37);
          swift_retain_n();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          swift_bridgeObjectRetain();
          uint64_t v127 = sub_1005E0EB0();
          int v128 = sub_1005E25C0();
          if (os_log_type_enabled(v127, (os_log_type_t)v128))
          {
            int v196 = v128;
            uint64_t v129 = swift_slowAlloc();
            uint64_t v195 = swift_slowAlloc();
            *(void *)&long long v232 = v195;
            *(_DWORD *)uint64_t v129 = v191;
            LODWORD(v229[0]) = 2;
            sub_1005E2960();
            *(_WORD *)(v129 + 8) = 256;
            int v194 = v117;
            char v130 = *(unsigned char *)(v126 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
            swift_release();
            LOBYTE(v229[0]) = v130;
            sub_1005E2960();
            swift_release();
            *(_WORD *)(v129 + 11) = 2160;
            *(void *)&v229[0] = 0x786F626C69616DLL;
            sub_1005E2960();
            *(_WORD *)(v129 + 21) = 2085;
            *(void *)&v229[0] = v70;
            DWORD2(v229[0]) = v122;
            swift_bridgeObjectRetain();
            uint64_t v131 = sub_1005E1CC0();
            *(void *)&v229[0] = sub_1000C6914(v131, v132, (uint64_t *)&v232);
            sub_1005E2960();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v129 + 31) = 2080;
            char v133 = v194;
            if (v194)
            {
              unint64_t v134 = 0xE100000000000000;
              uint64_t v135 = 45;
            }
            else
            {
              LODWORD(v229[0]) = v201;
              uint64_t v135 = sub_1005E1CA0();
              unint64_t v134 = v137;
            }
            uint64_t v136 = v200;
            *(void *)&v229[0] = sub_1000C6914(v135, v134, (uint64_t *)&v232);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v127, (os_log_type_t)v196, "[%.*hhx] No new and no running tasks for '%{sensitive,mask.mailbox}s' with change ID %s. Marking as done.", (uint8_t *)v129, 0x29u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v30 = (_OWORD *)v221;
          }
          else
          {
            swift_bridgeObjectRelease_n();

            swift_release_n();
            uint64_t v136 = v200;
            char v133 = v117;
          }
          unint64_t v138 = v215;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&v229[0] = v138;
          unint64_t v141 = sub_1000242DC(v136, v206);
          uint64_t v142 = *(void *)(v138 + 16);
          BOOL v143 = (v140 & 1) == 0;
          uint64_t v144 = v142 + v143;
          if (__OFADD__(v142, v143)) {
            goto LABEL_148;
          }
          char v145 = v140;
          if (*(void *)(v138 + 24) >= v144)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_100098410();
            }
          }
          else
          {
            sub_100051D50(v144, isUniquelyReferenced_nonNull_native);
            unint64_t v146 = sub_1000242DC(v136, v206);
            if ((v145 & 1) != (v147 & 1)) {
              goto LABEL_150;
            }
            unint64_t v141 = v146;
          }
          uint64_t v148 = *(void **)&v229[0];
          unint64_t v215 = *(void *)&v229[0];
          BOOL v149 = (v199 & 0x101) == 0;
          if (v145)
          {
            uint64_t v150 = *(void *)(*(void *)&v229[0] + 56) + 24 * v141;
            *(_DWORD *)uint64_t v150 = v201;
            char v151 = !v149;
            *(unsigned char *)(v150 + 4) = v133;
            *(void *)(v150 + 8) = v217;
            *(unsigned char *)(v150 + 16) = v151;
          }
          else
          {
            BOOL v152 = (v199 & 0x101) != 0;
            *(void *)(*(void *)&v229[0] + 8 * (v141 >> 6) + 64) |= 1 << v141;
            long long v153 = (uint64_t *)(v148[6] + 16 * v141);
            Swift::UInt v154 = v206;
            *long long v153 = v136;
            v153[1] = v154;
            uint64_t v155 = v148[7] + 24 * v141;
            *(_DWORD *)uint64_t v155 = v201;
            *(unsigned char *)(v155 + 4) = v133;
            *(void *)(v155 + 8) = v217;
            *(unsigned char *)(v155 + 16) = v152;
            uint64_t v156 = v148[2];
            BOOL v65 = __OFADD__(v156, 1);
            uint64_t v157 = v156 + 1;
            if (v65) {
              goto LABEL_149;
            }
            v148[2] = v157;
            swift_bridgeObjectRetain();
          }
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          LODWORD(v206) = 1;
        }
        else
        {
          sub_10000F0D4((uint64_t)v93, v109, v217, 1);
          swift_bridgeObjectRelease();
          uint64_t v30 = (_OWORD *)v221;
          *(void *)(v221 + 160) = v110;
          uint64_t v114 = v216;
          void *v216 = 0;
          v114[1] = 0;
          *((unsigned char *)v30 + 184) = 1;
        }
LABEL_25:
        unint64_t v62 = v223;
      }
      int64_t v68 = v66 + 1;
      if (v66 + 1 >= v220) {
        goto LABEL_10;
      }
      unint64_t v67 = *(void *)(v219 + 8 * v68);
      if (v67) {
        goto LABEL_37;
      }
      int64_t v68 = v66 + 2;
      if (v66 + 2 >= v220) {
        goto LABEL_10;
      }
      unint64_t v67 = *(void *)(v219 + 8 * v68);
      if (v67)
      {
LABEL_37:
        int64_t v66 = v68;
        goto LABEL_38;
      }
      int64_t v68 = v66 + 3;
      if (v66 + 3 < v220)
      {
        unint64_t v67 = *(void *)(v219 + 8 * v68);
        if (!v67)
        {
          while (1)
          {
            int64_t v66 = v68 + 1;
            if (__OFADD__(v68, 1)) {
              goto LABEL_142;
            }
            if (v66 >= v220) {
              goto LABEL_10;
            }
            unint64_t v67 = *(void *)(v219 + 8 * v66);
            ++v68;
            if (v67) {
              goto LABEL_38;
            }
          }
        }
        goto LABEL_37;
      }
LABEL_10:
      swift_release();
      unint64_t v36 = v215;
      if (*(void *)(v215 + 16))
      {
        uint64_t v37 = swift_allocObject();
        *(void *)(v37 + 16) = v36;
        v209(v37 | 0x9000000000000002);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_1000079E4((uint64_t)v236, (uint64_t)v229, &qword_10070B698);
      sub_1000D7BE0((uint64_t)v236);
      int v38 = v230;
      sub_100007A48((uint64_t)v229, &qword_10070B698);
      if (v38 != 255) {
        continue;
      }
      break;
    }
    uint64_t v158 = v213;
    swift_retain();
    uint64_t v159 = v214;
    swift_retain();
    __uint64_t v160 = static MonotonicTime.now()();
    uint64_t v161 = *((void *)v30 + 33);
    swift_bridgeObjectRetain();
    char v162 = sub_1000C6198(v160, v161, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1000EB6DC, 0, v158, v159);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v163 = v162[2];
    uint64_t v223 = (uint64_t)v162;
    if (!v163)
    {
LABEL_131:
      swift_bridgeObjectRelease();
      uint64_t v30 = (_OWORD *)v221;
      if (sub_1000C449C() & 1) == 0 || (v206)
      {
        swift_release();
        swift_release();
        swift_release();
        continue;
      }
      if (*(void *)(*((void *)v30 + 33) + 16) || !*(void *)(*((void *)v30 + 30) + 16)) {
        goto LABEL_143;
      }
      uint64_t v180 = *((void *)v30 + 37);
      swift_retain_n();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      long long v181 = sub_1005E0EB0();
      os_log_type_t v182 = sub_1005E2590();
      if (os_log_type_enabled(v181, v182))
      {
        uint64_t v183 = swift_slowAlloc();
        *(_DWORD *)uint64_t v183 = v189;
        LODWORD(v229[0]) = 2;
        sub_1005E2960();
        *(_WORD *)(v183 + 8) = 256;
        LOBYTE(v229[0]) = *(unsigned char *)(v180 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
        sub_1005E2960();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v181, v182, "[%.*hhx] Re-starting blocked non-mailbox tasks.", (uint8_t *)v183, 0xBu);
        swift_slowDealloc();
      }
      else
      {
        swift_release();
      }
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      *((void *)v30 + 30) = _swiftEmptyArrayStorage;
      continue;
    }
    break;
  }
  uint64_t v164 = v162 + 4;
  while (1)
  {
    unint64_t v167 = *v164;
    long long v165 = v164 + 1;
    unint64_t v166 = v167;
    if ((v167 & 0x8000000000000000) != 0) {
      break;
    }
    uint64_t v168 = v221;
    uint64_t v169 = *(void *)(v221 + 264);
    if (v166 >= *(void *)(v169 + 16)) {
      goto LABEL_145;
    }
    v224 = v165;
    uint64_t v225 = v163;
    unint64_t v170 = (*(unsigned __int8 *)(v218 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v218 + 80);
    uint64_t v171 = *(void *)(v218 + 72) * v166;
    long long v172 = v208;
    sub_1000D85A8(v169 + v170 + v171, (uint64_t)v208, (uint64_t (*)(void))type metadata accessor for RunningTask);
    sub_1000D7F38(v172, v213, v214, (long long *)v168, v203, v204, (uint64_t)v209, v210);
    uint64_t v173 = (uint64_t)v172;
    uint64_t v174 = v202;
    sub_1000D85A8(v173, v202, (uint64_t (*)(void))type metadata accessor for RunningTask);
    if (v166 >= *(void *)(v169 + 16)) {
      goto LABEL_146;
    }
    int v175 = *(unsigned __int8 *)(v168 + 256);
    uint64_t v176 = v169 + v170 + v171;
    uint64_t v177 = v211;
    sub_1000D85A8(v176, v211, (uint64_t (*)(void))type metadata accessor for RunningTask);
    sub_1000E4F94(v175, v177);
    sub_1000D8610(v177, (uint64_t (*)(void))type metadata accessor for RunningTask);
    unint64_t v178 = *(void *)(v168 + 264);
    char v179 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v168 + 264) = v178;
    if ((v179 & 1) == 0)
    {
      unint64_t v178 = sub_100093454(v178);
      *(void *)(v221 + 264) = v178;
    }
    if (v166 >= *(void *)(v178 + 16)) {
      goto LABEL_147;
    }
    sub_1000D8388(v174, v178 + v170 + v171);
    sub_1000D8610(v174, (uint64_t (*)(void))type metadata accessor for RunningTask);
    sub_1000D8610((uint64_t)v208, (uint64_t (*)(void))type metadata accessor for RunningTask);
    uint64_t v164 = v224;
    uint64_t v163 = v225 - 1;
    if (v225 == 1) {
      goto LABEL_131;
    }
  }
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

uint64_t sub_1000C4294(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v19 = a3;
  uint64_t v8 = sub_10000566C(&qword_10070C0B8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ClientCommand(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007B6C((uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100007A48((uint64_t)v10, &qword_10070C0B8);
    return v19(a1, a5);
  }
  sub_1000D8450((uint64_t)v10, (uint64_t)v14, type metadata accessor for ClientCommand);
  uint64_t v15 = *(void *)(a2 + 264);
  uint64_t v16 = *(unsigned __int8 *)(a2 + 256);
  swift_bridgeObjectRetain();
  LOBYTE(v16) = sub_1000EA9BC((uint64_t)v14, v16, v15);
  swift_bridgeObjectRelease();
  sub_1000D8610((uint64_t)v14, type metadata accessor for ClientCommand);
  if (v16) {
    return v19(a1, a5);
  }
  return 0;
}

uint64_t sub_1000C449C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 264) + 16);
  swift_retain_n();
  uint64_t result = sub_1000CE4F0((unint64_t *)(v0 + 264), (char *)(v0 + 256));
  uint64_t v3 = *(void *)(*(void *)(v0 + 264) + 16);
  if (v3 < result)
  {
    __break(1u);
  }
  else
  {
    sub_1000D666C(result, v3, (uint64_t (*)(void))sub_100017558, (uint64_t (*)(void))type metadata accessor for RunningTask);
    uint64_t v4 = *(void *)(*(void *)(v0 + 264) + 16);
    if (v1 == v4)
    {
      swift_release();
    }
    else
    {
      swift_retain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v5 = sub_1005E0EB0();
      os_log_type_t v6 = sub_1005E2580();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = swift_slowAlloc();
        *(_DWORD *)uint64_t v7 = 68158208;
        sub_1005E2960();
        *(_WORD *)(v7 + 8) = 256;
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v7 + 11) = 2048;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%.*hhx] Pruned %ld completed tasks.", (uint8_t *)v7, 0x15u);
        swift_slowDealloc();
        swift_release();
      }
      else
      {
        swift_release_n();
      }
    }
    return v1 == v4;
  }
  return result;
}

Swift::Void __swiftcall StateWithTasks.logForDidCreateFirstConnection()()
{
  uint64_t v1 = v0;
  char v2 = *(unsigned char *)(v0 + 17);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v145 = *(void *)(v0 + 160);
  uint64_t v136 = *(void *)(v0 + 176);
  uint64_t v137 = *(void *)(v0 + 168);
  char v4 = *(unsigned char *)(v0 + 184);
  v182[0] = v3;
  *(void *)&long long v169 = &_swiftEmptySetSingleton;
  uint64_t v5 = v3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(v3 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_143;
    }
    if (v13 >= v9) {
      break;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v9) {
        break;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v9) {
          break;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v9) {
            break;
          }
          unint64_t v14 = *(void *)(v5 + 8 * v10);
          if (!v14)
          {
            int64_t v10 = v13 + 4;
            if (v13 + 4 >= v9) {
              break;
            }
            unint64_t v14 = *(void *)(v5 + 8 * v10);
            if (!v14)
            {
              int64_t v15 = v13 + 5;
              if (v15 >= v9) {
                break;
              }
              unint64_t v14 = *(void *)(v5 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  int64_t v10 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    break;
                  }
                  if (v10 >= v9) {
                    goto LABEL_25;
                  }
                  unint64_t v14 = *(void *)(v5 + 8 * v10);
                  ++v15;
                  if (v14) {
                    goto LABEL_24;
                  }
                }
LABEL_150:
                __break(1u);
                JUMPOUT(0x1000C5938);
              }
              int64_t v10 = v15;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_5:
    sub_1000186BC(v180, *(unsigned __int8 *)(*(void *)(v3 + 56) + 32 * v12));
  }
LABEL_25:
  swift_release();
  sub_10001D550((uint64_t)v182);
  uint64_t v16 = v169;
  uint64_t v17 = *(void *)(v0 + 296);
  sub_1000B37E0(v0);
  sub_1000B37E0(v0);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_bridgeObjectRetain();
  sub_10002292C((uint64_t)v182);
  sub_1000B37E0(v0);
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1005E0EB0();
  os_log_type_t v19 = sub_1005E25C0();
  uint64_t v154 = v1;
  if (os_log_type_enabled(v18, v19))
  {
    os_log_type_t v156 = v19;
    log = v18;
    char v159 = v2;
    char v150 = v4;
    uint64_t v20 = swift_slowAlloc();
    v180[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 68158978;
    sub_1005E2960();
    *(_WORD *)(v20 + 8) = 256;
    uint64_t v140 = v17;
    sub_1005E2960();
    sub_1000B38FC(v1);
    *(_WORD *)(v20 + 11) = 2048;
    sub_1005E2960();
    *(_WORD *)(v20 + 21) = 2082;
    sub_1000C0208(v3);
    sub_10000566C(&qword_100709F58);
    sub_100007494((unint64_t *)&qword_100709F60, &qword_100709F58);
    uint64_t v21 = sub_1005E1A80();
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    *(void *)&long long v169 = sub_1000C6914(v21, v23, v180);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10001D550((uint64_t)v182);
    sub_10001D550((uint64_t)v182);
    *(_WORD *)(v20 + 31) = 2082;
    int64_t v24 = *(void *)(v16 + 16);
    if (!v24) {
      goto LABEL_42;
    }
    uint64_t v167 = (uint64_t)_swiftEmptyArrayStorage;
    sub_10001A574(0, v24, 0);
    uint64_t v25 = _swiftEmptyArrayStorage;
    int64_t v26 = sub_1000D38D0(v16);
    int v28 = v27;
    uint64_t v162 = v16;
    uint64_t v164 = v16 + 56;
    char v30 = v29 & 1;
    do
    {
      if (v26 < 0 || v26 >= 1 << *(unsigned char *)(v16 + 32)) {
        goto LABEL_144;
      }
      if (((*(void *)(v164 + (((unint64_t)v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
      {
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
        goto LABEL_150;
      }
      if (*(_DWORD *)(v16 + 36) != v28) {
        goto LABEL_146;
      }
      uint64_t v31 = *(unsigned __int8 *)(*(void *)(v16 + 48) + v26);
      *(void *)&long long v169 = 0;
      *((void *)&v169 + 1) = 0xE000000000000000;
      uint64_t v32 = (void *)0xE800000000000000;
      v33._countAndFlagsBits = 0x6369646F69726570;
      switch(v31)
      {
        case 1:
          uint64_t v32 = (void *)0xE400000000000000;
          v33._countAndFlagsBits = 1752397168;
          break;
        case 2:
          uint64_t v32 = (void *)0xED00006465746169;
          v33._countAndFlagsBits = 0x74696E4972657375;
          break;
        case 3:
          uint64_t v32 = (void *)0x80000001005E54C0;
          v33._countAndFlagsBits = 0xD000000000000015;
          break;
        default:
          break;
      }
      v33._object = v32;
      sub_1005E1E30(v33);
      swift_bridgeObjectRelease();
      long long v34 = v169;
      uint64_t v167 = (uint64_t)v25;
      unint64_t v36 = v25[2];
      unint64_t v35 = v25[3];
      if (v36 >= v35 >> 1)
      {
        sub_10001A574(v35 > 1, v36 + 1, 1);
        uint64_t v25 = (void *)v167;
      }
      v25[2] = v36 + 1;
      *(_OWORD *)&v25[2 * v36 + 4] = v34;
      uint64_t v16 = v162;
      int64_t v37 = sub_1000D3974(v26, v28, v30 & 1, v162);
      int64_t v26 = v37;
      int v28 = v38;
      char v30 = v39 & 1;
      --v24;
    }
    while (v24);
    sub_100060FF0(v37, v38, v39 & 1);
    uint64_t v1 = v154;
LABEL_42:
    uint64_t v40 = sub_1005E1A80();
    unint64_t v42 = v41;
    swift_bridgeObjectRelease();
    *(void *)&long long v169 = sub_1000C6914(v40, v42, v180);
    sub_1005E2960();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 41) = 2082;
    if (v159) {
      uint64_t v43 = 0x756F72676B636162;
    }
    else {
      uint64_t v43 = 0x656C6269736976;
    }
    if (v159) {
      unint64_t v44 = 0xEC0000006465646ELL;
    }
    else {
      unint64_t v44 = 0xE700000000000000;
    }
    *(void *)&long long v169 = sub_1000C6914(v43, v44, v180);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_1000B38FC(v1);
    sub_1000B38FC(v1);
    _os_log_impl((void *)&_mh_execute_header, log, v156, "[%.*hhx] [1st connection] Running sync requests %ld: {%{public}s}, kinds: %{public}s; App state: %{public}s",
      (uint8_t *)v20,
      0x33u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    sub_10001D550((uint64_t)v182);

    uint64_t v17 = v140;
    if (v150)
    {
LABEL_49:
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_10009E55C();
      uint64_t v48 = v45;
      uint64_t v181 = 0;
      uint64_t v49 = *(void *)(v145 + 16);
      uint64_t v147 = v46;
      if (v49)
      {
        uint64_t v50 = v46;
        uint64_t v141 = v17;
        uint64_t v51 = v45 + 32;
        uint64_t v135 = OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id;
        uint64_t v52 = v145 + 32;
        swift_beginAccess();
        uint64_t v53 = 0;
        __uint64_t v160 = (void *)(v47 + 16);
        uint64_t v161 = 0;
        uint64_t v143 = v50 + 32;
        uint64_t v54 = v47;
        uint64_t v146 = v48;
        uint64_t v155 = v48 + 32;
        uint64_t v157 = v49;
        uint64_t v142 = v47;
        while (1)
        {
          uint64_t v163 = v53;
          uint64_t v56 = (long long *)(v52 + 176 * v53);
          long long v57 = *v56;
          long long v58 = v56[2];
          long long v170 = v56[1];
          long long v171 = v58;
          long long v169 = v57;
          long long v59 = v56[3];
          long long v60 = v56[4];
          long long v61 = v56[6];
          long long v174 = v56[5];
          long long v175 = v61;
          long long v172 = v59;
          long long v173 = v60;
          long long v62 = v56[7];
          long long v63 = v56[8];
          long long v64 = v56[10];
          long long v178 = v56[9];
          long long v179 = v64;
          long long v176 = v62;
          long long v177 = v63;
          uint64_t v65 = v170;
          unsigned int v66 = DWORD2(v170);
          unsigned int v67 = DWORD1(v174);
          char v68 = BYTE8(v174);
          uint64_t v69 = *(void *)(v48 + 16);
          if (v54)
          {
            sub_1000CE1DC(v170, DWORD2(v170), v51, v69, v160);
            if ((v70 & 1) != 0 && v161 > 7) {
              goto LABEL_54;
            }
            int v71 = v70 & 1;
            BOOL v72 = v71 == 0;
            unint64_t v73 = sub_1000CE1DC(v65, v66, v51, *(void *)(v48 + 16), v160);
            if (v74)
            {
LABEL_66:
              int v75 = 63740;
              goto LABEL_67;
            }
          }
          else
          {
            sub_1000CE0E8(v170, DWORD2(v170), v51, v69);
            if ((v76 & 1) != 0 && v161 > 7) {
              goto LABEL_54;
            }
            int v71 = v76 & 1;
            BOOL v72 = v71 == 0;
            unint64_t v73 = sub_1000CE0E8(v65, v66, v51, *(void *)(v48 + 16));
            if (v77) {
              goto LABEL_66;
            }
          }
          if ((v73 & 0x8000000000000000) != 0) {
            goto LABEL_147;
          }
          if (v73 >= *(void *)(v147 + 16)) {
            goto LABEL_148;
          }
          int v75 = *(unsigned __int16 *)(v143 + 2 * v73);
LABEL_67:
          uint64_t v78 = *(void *)(*((void *)&v177 + 1) + 16);
          uint64_t v79 = *(void *)(v178 + 16);
          uint64_t v80 = *(void *)(*((void *)&v178 + 1) + 16);
          uint64_t v81 = v78 | v79;
          if (v68)
          {
            if (v81 | v80) {
              char v82 = 1;
            }
            else {
              char v82 = v72;
            }
            if ((v82 & 1) == 0) {
              goto LABEL_53;
            }
            BOOL v83 = 0;
            goto LABEL_83;
          }
          if (BYTE12(v175))
          {
            if (v81 | v80) {
              char v84 = 1;
            }
            else {
              char v84 = v72;
            }
            if ((v84 & 1) == 0) {
              goto LABEL_53;
            }
            BOOL v83 = 1;
LABEL_83:
            if (__OFADD__(v181, 1)) {
              goto LABEL_149;
            }
            char v149 = v177;
            int v151 = v75;
            uint64_t v152 = *((void *)&v177 + 1);
            char v148 = BYTE12(v175);
            uint64_t v144 = *((void *)&v176 + 1);
            uint64_t v161 = ++v181;
            BOOL v86 = v78 == 0;
            uint64_t v87 = 82;
            if (v86) {
              uint64_t v87 = 0;
            }
            if (v86) {
              unint64_t v88 = 0xE000000000000000;
            }
            else {
              unint64_t v88 = 0xE100000000000000;
            }
            if (v79) {
              uint64_t v89 = 68;
            }
            else {
              uint64_t v89 = 0;
            }
            if (v79) {
              uint64_t v90 = (void *)0xE100000000000000;
            }
            else {
              uint64_t v90 = (void *)0xE000000000000000;
            }
            uint64_t v167 = v87;
            unint64_t v168 = v88;
            sub_100007780((uint64_t)&v169);
            swift_bridgeObjectRetain();
            v183._countAndFlagsBits = v89;
            v183._object = v90;
            sub_1005E1E30(v183);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v80) {
              uint64_t v91 = 83;
            }
            else {
              uint64_t v91 = 0;
            }
            if (v80) {
              int v92 = (void *)0xE100000000000000;
            }
            else {
              int v92 = (void *)0xE000000000000000;
            }
            swift_bridgeObjectRetain();
            v184._countAndFlagsBits = v91;
            v184._object = v92;
            sub_1005E1E30(v184);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v83) {
              uint64_t v93 = 0;
            }
            else {
              uint64_t v93 = 76;
            }
            if (v83) {
              uint64_t v94 = (void *)0xE000000000000000;
            }
            else {
              uint64_t v94 = (void *)0xE100000000000000;
            }
            swift_bridgeObjectRetain();
            v185._countAndFlagsBits = v93;
            v185._object = v94;
            sub_1005E1E30(v185);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v71) {
              uint64_t v95 = 0;
            }
            else {
              uint64_t v95 = 42;
            }
            if (v71) {
              uint64_t v96 = (void *)0xE000000000000000;
            }
            else {
              uint64_t v96 = (void *)0xE100000000000000;
            }
            swift_bridgeObjectRetain();
            v186._countAndFlagsBits = v95;
            v186._object = v96;
            sub_1005E1E30(v186);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v97 = v167;
            unint64_t v98 = v168;
            sub_1000B37E0(v154);
            sub_1000B37E0(v154);
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            sub_100007780((uint64_t)&v169);
            sub_100007780((uint64_t)&v169);
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            sub_100007780((uint64_t)&v169);
            sub_100007780((uint64_t)&v169);
            sub_100007780((uint64_t)&v169);
            sub_100007780((uint64_t)&v169);
            sub_100007780((uint64_t)&v169);
            sub_100007780((uint64_t)&v169);
            sub_100007780((uint64_t)&v169);
            sub_100007780((uint64_t)&v169);
            swift_bridgeObjectRetain();
            uint64_t v99 = sub_1005E0EB0();
            os_log_type_t v100 = sub_1005E25C0();
            if (os_log_type_enabled(v99, v100))
            {
              os_log_type_t v138 = v100;
              uint64_t v139 = v99;
              __int16 v101 = WORD6(v179);
              unsigned int v102 = v66;
              uint64_t v103 = swift_slowAlloc();
              uint64_t v166 = swift_slowAlloc();
              *(_DWORD *)uint64_t v103 = 68160515;
              LODWORD(v167) = 2;
              sub_1005E2960();
              *(_WORD *)(v103 + 8) = 256;
              uint64_t v165 = v97;
              char v104 = *(unsigned char *)(v141 + v135);
              sub_1000B38FC(v154);
              LOBYTE(v167) = v104;
              sub_1005E2960();
              sub_1000B38FC(v154);
              *(_WORD *)(v103 + 11) = 2048;
              uint64_t v161 = v181;
              uint64_t v167 = v181;
              sub_1005E2960();
              *(_WORD *)(v103 + 21) = 1040;
              LODWORD(v167) = 2;
              sub_1005E2960();
              *(_WORD *)(v103 + 27) = 512;
              sub_100007820((uint64_t)&v169);
              LOWORD(v167) = v101;
              sub_1005E2960();
              sub_100007820((uint64_t)&v169);
              *(_WORD *)(v103 + 31) = 2160;
              uint64_t v167 = 0x786F626C69616DLL;
              sub_1005E2960();
              *(_WORD *)(v103 + 41) = 2085;
              uint64_t v167 = v65;
              LODWORD(v168) = v102;
              swift_bridgeObjectRetain();
              uint64_t v105 = sub_1005E1CC0();
              uint64_t v167 = sub_1000C6914(v105, v106, &v166);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              sub_100007820((uint64_t)&v169);
              sub_100007820((uint64_t)&v169);
              *(_WORD *)(v103 + 51) = 2082;
              swift_bridgeObjectRetain();
              uint64_t v167 = sub_1000C6914(v165, v98, &v166);
              sub_1005E2960();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v103 + 61) = 2082;
              if ((~v151 & 0xF8FC) != 0)
              {
                uint64_t v108 = sub_10009F004(v151);
                unint64_t v107 = v109;
              }
              else
              {
                unint64_t v107 = 0xE100000000000000;
                uint64_t v108 = 47;
              }
              uint64_t v110 = v152;
              uint64_t v167 = sub_1000C6914(v108, v107, &v166);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              *(_WORD *)(v103 + 71) = 2082;
              int64_t v111 = *(void *)(v152 + 16);
              if (v111)
              {
                uint64_t v153 = v103;
                uint64_t v167 = (uint64_t)_swiftEmptyArrayStorage;
                swift_bridgeObjectRetain();
                sub_10001A574(0, v111, 0);
                long long v112 = (void *)v167;
                int64_t v113 = sub_1000D38D0(v110);
                int v115 = v114;
                char v117 = v116 & 1;
                while ((v113 & 0x8000000000000000) == 0 && v113 < 1 << *(unsigned char *)(v110 + 32))
                {
                  if (((*(void *)(v110 + 56 + (((unint64_t)v113 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v113) & 1) == 0) {
                    goto LABEL_141;
                  }
                  if (*(_DWORD *)(v110 + 36) != v115) {
                    goto LABEL_142;
                  }
                  uint64_t v118 = sub_1005E3230();
                  uint64_t v120 = v119;
                  uint64_t v167 = (uint64_t)v112;
                  unint64_t v122 = v112[2];
                  unint64_t v121 = v112[3];
                  if (v122 >= v121 >> 1)
                  {
                    sub_10001A574(v121 > 1, v122 + 1, 1);
                    long long v112 = (void *)v167;
                  }
                  v112[2] = v122 + 1;
                  unint64_t v123 = &v112[2 * v122];
                  v123[4] = v118;
                  v123[5] = v120;
                  int64_t v124 = sub_1000D3974(v113, v115, v117 & 1, v110);
                  int64_t v113 = v124;
                  int v115 = v125;
                  char v117 = v126 & 1;
                  if (!--v111)
                  {
                    sub_100060FF0(v124, v125, v126 & 1);
                    swift_bridgeObjectRelease();
                    uint64_t v103 = v153;
                    goto LABEL_129;
                  }
                }
                __break(1u);
LABEL_141:
                __break(1u);
LABEL_142:
                __break(1u);
LABEL_143:
                __break(1u);
LABEL_144:
                __break(1u);
                goto LABEL_145;
              }
              long long v112 = _swiftEmptyArrayStorage;
LABEL_129:
              uint64_t v167 = (uint64_t)v112;
              sub_10000566C(&qword_100709F58);
              sub_100007494((unint64_t *)&qword_100709F60, &qword_100709F58);
              unint64_t v127 = 0xE100000000000000;
              uint64_t v128 = sub_1005E1A80();
              unint64_t v130 = v129;
              swift_bridgeObjectRelease();
              uint64_t v167 = sub_1000C6914(v128, v130, &v166);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              sub_100007820((uint64_t)&v169);
              sub_100007820((uint64_t)&v169);
              *(_WORD *)(v103 + 81) = 2082;
              uint64_t v48 = v146;
              uint64_t v51 = v155;
              uint64_t v55 = v163;
              if (v148)
              {
                uint64_t v131 = 47;
              }
              else
              {
                uint64_t v167 = 0;
                unint64_t v168 = 0xE000000000000000;
                sub_1005E2E90();
                uint64_t v131 = v167;
                unint64_t v127 = v168;
              }
              uint64_t v54 = v142;
              uint64_t v52 = v145 + 32;
              uint64_t v167 = sub_1000C6914(v131, v127, &v166);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              sub_100007820((uint64_t)&v169);
              sub_100007820((uint64_t)&v169);
              *(_WORD *)(v103 + 91) = 2082;
              if (v149)
              {
                unint64_t v132 = 0xE100000000000000;
                uint64_t v133 = 47;
              }
              else
              {
                uint64_t v167 = v144;
                uint64_t v133 = sub_1005E3230();
                unint64_t v132 = v134;
              }
              uint64_t v49 = v157;
              uint64_t v167 = sub_1000C6914(v133, v132, &v166);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              sub_100007820((uint64_t)&v169);
              sub_100007820((uint64_t)&v169);
              _os_log_impl((void *)&_mh_execute_header, v139, v138, "[%.*hhx] {%ld} [1st connection] Mailbox: {%.*hx} '%{sensitive,mask.mailbox}s' %{public}s, %{public}s, {%{public}s} last sync:  {local: %{public}s, remote: %{public}s}", (uint8_t *)v103, 0x65u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              sub_100007820((uint64_t)&v169);
              goto LABEL_55;
            }
            sub_100007820((uint64_t)&v169);
            sub_1000B38FC(v154);

            sub_100007820((uint64_t)&v169);
            sub_1000B38FC(v154);
            sub_100007820((uint64_t)&v169);
            sub_100007820((uint64_t)&v169);
            sub_100007820((uint64_t)&v169);
            swift_bridgeObjectRelease_n();
            sub_100007820((uint64_t)&v169);
            sub_100007820((uint64_t)&v169);
            sub_100007820((uint64_t)&v169);
            sub_100007820((uint64_t)&v169);
            sub_100007820((uint64_t)&v169);
            sub_100007820((uint64_t)&v169);
            uint64_t v54 = v142;
            goto LABEL_52;
          }
          BOOL v83 = DWORD2(v175) < v67;
          if (v81 | v80) {
            char v85 = 1;
          }
          else {
            char v85 = v72;
          }
          if (v85) {
            goto LABEL_83;
          }
LABEL_52:
          uint64_t v48 = v146;
LABEL_53:
          uint64_t v51 = v155;
          uint64_t v49 = v157;
          uint64_t v52 = v145 + 32;
LABEL_54:
          uint64_t v55 = v163;
LABEL_55:
          uint64_t v53 = v55 + 1;
          if (v53 == v49)
          {
            sub_10000F0D4(v145, v137, v136, 1);
            goto LABEL_138;
          }
        }
      }
      sub_10000F0D4(v145, v137, v136, 1);
LABEL_138:
      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {

    sub_1000B38FC(v1);
    sub_10001D550((uint64_t)v182);
    sub_10001D550((uint64_t)v182);
    sub_10001D550((uint64_t)v182);
    swift_bridgeObjectRelease_n();
    sub_1000B38FC(v1);
    sub_1000B38FC(v1);
    if (v4) {
      goto LABEL_49;
    }
  }
}

void *StateWithTasks.selectedMailboxes.getter()
{
  uint64_t result = &_swiftEmptySetSingleton;
  if (*(unsigned char *)(v0 + 184))
  {
    uint64_t v2 = *(void *)(v0 + 160);
    uint64_t v3 = *(void *)(v0 + 168);
    uint64_t v4 = *(void *)(v0 + 176);
    char v30 = &_swiftEmptySetSingleton;
    uint64_t v5 = *(void *)(v2 + 16);
    if (v5)
    {
      uint64_t v6 = (long long *)(v2 + 32);
      swift_bridgeObjectRetain();
      for (uint64_t i = v5 - 1; ; --i)
      {
        long long v8 = *v6;
        long long v9 = v6[2];
        long long v20 = v6[1];
        long long v21 = v9;
        long long v19 = v8;
        long long v10 = v6[3];
        long long v11 = v6[4];
        long long v12 = v6[6];
        long long v24 = v6[5];
        long long v25 = v12;
        long long v22 = v10;
        long long v23 = v11;
        long long v13 = v6[7];
        long long v14 = v6[8];
        long long v15 = v6[10];
        long long v28 = v6[9];
        long long v29 = v15;
        long long v26 = v13;
        long long v27 = v14;
        if ((void)v25)
        {
          uint64_t v16 = v20;
          unsigned int v17 = DWORD2(v20);
          sub_100007780((uint64_t)&v19);
          swift_bridgeObjectRetain();
          sub_1000187DC((uint64_t)&v18, v16, v17);
          swift_bridgeObjectRelease();
          sub_100007820((uint64_t)&v19);
        }
        if (!i) {
          break;
        }
        v6 += 11;
      }
      sub_10000F0D4(v2, v3, v4, 1);
      return v30;
    }
  }
  return result;
}

uint64_t StateWithTasks.failOldBackgroundSyncRequests()()
{
  __uint64_t v0 = static MonotonicTime.now()();
  return sub_100090F8C(v0);
}

Swift::Void __swiftcall StateWithTasks.logSyncRequests()()
{
  sub_1000915A0(*(void *)(v0 + 296));
}

Swift::Void __swiftcall StateWithTasks.logLongRunningSyncRequests(now:)(IMAP2Helpers::MonotonicTime now)
{
  sub_1000926E8(now.rawValue, *(void *)(v1 + 296));
}

void *sub_1000C5B64(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100709E60);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v53 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_100709E38);
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v48 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  long long v9 = (char *)&v47 - v8;
  uint64_t v10 = sub_10000566C(&qword_10070C0D8);
  __chkstk_darwin(v10 - 8);
  long long v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000566C(&qword_10070A360);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v54 = (uint64_t)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for RunningTask() - 8;
  __chkstk_darwin(v16);
  long long v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(a1 + 16);
  if (!v20) {
    return _swiftEmptyDictionarySingleton;
  }
  uint64_t v55 = v9;
  uint64_t v56 = v2;
  uint64_t v21 = a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  long long v58 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v50 = (void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v22 = *(void *)(v17 + 72);
  uint64_t v47 = a1;
  uint64_t v23 = v22;
  swift_bridgeObjectRetain();
  long long v57 = _swiftEmptyDictionarySingleton;
  uint64_t v24 = v54;
  uint64_t v51 = v13;
  uint64_t v49 = v23;
  while (1)
  {
    sub_1000D85A8(v21, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for RunningTask);
    sub_1000B9240((uint64_t)v19, (uint64_t)v59);
    if (v60 != 1)
    {
      sub_1000B9324((uint64_t)v59);
      goto LABEL_4;
    }
    sub_100021BFC(v59, (uint64_t)v61);
    sub_100021C34((uint64_t)v61, (uint64_t)v59);
    sub_10000566C(&qword_10070C0E0);
    char v25 = swift_dynamicCast();
    long long v26 = *v58;
    if ((v25 & 1) == 0)
    {
      v26(v12, 1, 1, v13);
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v61);
      sub_100007A48((uint64_t)v12, &qword_10070C0D8);
      goto LABEL_4;
    }
    v26(v12, 0, 1, v13);
    sub_10001FDF0((uint64_t)v12, v24, &qword_10070A360);
    uint64_t v27 = swift_bridgeObjectRetain();
    uint64_t v28 = (uint64_t)v55;
    sub_1001712FC(v27);
    if (sub_1005E3630())
    {
      sub_100007A48(v28, &qword_100709E38);
      sub_100007A48(v24, &qword_10070A360);
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v61);
      goto LABEL_4;
    }
    long long v29 = v12;
    uint64_t v30 = *(void *)(v24 + 88);
    unsigned int v31 = *(_DWORD *)(v24 + 96);
    swift_bridgeObjectRetain();
    uint64_t v32 = v57;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v59[0] = v32;
    unint64_t v35 = sub_100024264(v30, v31);
    uint64_t v36 = v32[2];
    BOOL v37 = (v34 & 1) == 0;
    uint64_t v38 = v36 + v37;
    if (__OFADD__(v36, v37)) {
      break;
    }
    char v39 = v34;
    if (v32[3] >= v38)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1000985E4();
      }
    }
    else
    {
      sub_100052070(v38, isUniquelyReferenced_nonNull_native);
      unint64_t v40 = sub_100024264(v30, v31);
      if ((v39 & 1) != (v41 & 1)) {
        goto LABEL_22;
      }
      unint64_t v35 = v40;
    }
    long long v12 = v29;
    unint64_t v42 = *(void **)&v59[0];
    swift_bridgeObjectRelease();
    uint64_t v13 = v51;
    long long v57 = v42;
    if ((v39 & 1) == 0)
    {
      sub_10001FC6C();
      swift_bridgeObjectRetain();
      uint64_t v43 = (uint64_t)v48;
      unint64_t v44 = v57;
      sub_1005E3680();
      sub_100103058(v35, v30, v31, v43, v44);
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v45 = (uint64_t)v55;
    (*v50)(v53, v55, v56);
    sub_1005E3670();
    swift_bridgeObjectRelease();
    sub_100007A48(v45, &qword_100709E38);
    uint64_t v24 = v54;
    sub_100007A48(v54, &qword_10070A360);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v61);
    uint64_t v23 = v49;
LABEL_4:
    sub_1000D8610((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for RunningTask);
    v21 += v23;
    if (!--v20)
    {
      swift_bridgeObjectRelease();
      return v57;
    }
  }
  __break(1u);
LABEL_22:
  uint64_t result = (void *)sub_1005E3380();
  __break(1u);
  return result;
}

void *sub_1000C6198(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = sub_1000C62A4(a1, a2, a3, a4, a5, a6);
  sub_1000C64F4(&v13);
  uint64_t v6 = v13;
  int64_t v7 = v13[2];
  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_10001A614(0, v7, 0);
    unint64_t v8 = _swiftEmptyArrayStorage[2];
    uint64_t v9 = 4;
    do
    {
      uint64_t v10 = v6[v9];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v8 >= v11 >> 1) {
        sub_10001A614(v11 > 1, v8 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v8 + 1;
      _swiftEmptyArrayStorage[v8 + 4] = v10;
      v9 += 2;
      ++v8;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1000C62A4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v12 = sub_1000D56B0(a2, a3, a4, a5, a6, a1);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = (void *)swift_release();
  int64_t v14 = *(void *)(v12 + 16);
  if (v14)
  {
    int64_t v15 = v14 + 1;
    uint64_t v16 = (unsigned char *)(v12 + 48);
    double v17 = 0.0;
    uint64_t v18 = 1;
    do
    {
      if (*v16)
      {
        double v17 = v17 + 1.0;
        if (v14 == v18) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v19 = *((void *)v16 - 1);
        BOOL v20 = __OFSUB__(v15, v19);
        uint64_t v21 = v15 - v19;
        if (v20)
        {
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        double v17 = v17 + (double)v21;
        if (v14 == v18) {
          goto LABEL_11;
        }
      }
      v16 += 32;
      BOOL v20 = __OFADD__(v18++, 1);
    }
    while (!v20);
    __break(1u);
LABEL_11:
    uint64_t result = (void *)sub_10001A9D4(0, v14, 0);
    uint64_t v22 = (void *)(v12 + 56);
    do
    {
      uint64_t v24 = *(v22 - 3);
      uint64_t v23 = *(v22 - 2);
      uint64_t v25 = *v22;
      if (*v22 <= a1)
      {
        uint64_t v26 = a1 - v25;
        if (__OFSUB__(a1, v25)) {
          goto LABEL_28;
        }
      }
      else
      {
        if (__OFSUB__(*v22, a1)) {
          goto LABEL_26;
        }
        uint64_t v26 = a1 - *v22;
        if (__OFSUB__(0, *v22 - a1)) {
          goto LABEL_27;
        }
      }
      double v27 = 1.0;
      if ((*(unsigned char *)(v22 - 1) & 1) == 0)
      {
        BOOL v20 = __OFSUB__(v15, v23);
        uint64_t v28 = v15 - v23;
        if (v20) {
          goto LABEL_29;
        }
        double v27 = (double)v28;
      }
      unint64_t v30 = _swiftEmptyArrayStorage[2];
      unint64_t v29 = _swiftEmptyArrayStorage[3];
      if (v30 >= v29 >> 1) {
        uint64_t result = (void *)sub_10001A9D4(v29 > 1, v30 + 1, 1);
      }
      v22 += 4;
      _swiftEmptyArrayStorage[2] = v30 + 1;
      unsigned int v31 = (double *)&_swiftEmptyArrayStorage[2 * v30];
      *((void *)v31 + 4) = v24;
      v31[5] = (double)v26 / 1000000000.0 + v27 * 5.0 / v17;
      --v14;
    }
    while (v14);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

Swift::Int sub_1000C64F4(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10009347C(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_1000D2A10(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1000C6564()
{
  return swift_slowAlloc();
}

uint64_t sub_1000C656C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1000C65A8()
{
  return swift_slowDealloc();
}

uint64_t sub_1000C65B4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1000C65DC(void (*a1)(void))
{
  return sub_1005E1CC0();
}

uint64_t sub_1000C6624(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1000C664C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1000C667C@<X0>(uint64_t (*a1)(void)@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

unsigned char **sub_1000C66AC(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_1000C66C0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  a4(&v7);
  uint64_t v5 = *a1 + 1;
  uint64_t result = sub_1005E2960();
  *a1 = v5;
  return result;
}

uint64_t sub_1000C6720(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  a4(&v7);
  uint64_t v5 = *a1 + 2;
  uint64_t result = sub_1005E2960();
  *a1 = v5;
  return result;
}

uint64_t sub_1000C6784(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  a4(&v7);
  uint64_t v5 = *a1 + 4;
  uint64_t result = sub_1005E2960();
  *a1 = v5;
  return result;
}

uint64_t sub_1000C67E4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  a4(&v7);
  uint64_t v5 = *a1 + 8;
  uint64_t result = sub_1005E2960();
  *a1 = v5;
  return result;
}

uint64_t sub_1000C6844@<X0>(uint64_t (*a1)(void)@<X0>, _WORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1000C6874(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1000C689C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_1000C6914(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_1005E2960();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1000C6914(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1000C69E8(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1000D65AC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000D65AC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1000C69E8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1005E2970();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1000C6BA4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1005E2D30();
  if (!v8)
  {
    sub_1005E2F10();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1005E3000();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1000C6BA4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_1000C6C3C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1000C6E98(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1000C6E98(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_1000C6C3C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1000C6DB4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1005E2C90();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1005E2F10();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1005E1E80();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    sub_1005E3000();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1005E2F10();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1000C6DB4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000566C(&qword_10070C088);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  long long v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1000C6E1C(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1005E1ED0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = sub_1005E1EA0();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_1000C6E98(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070C088);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000C6FE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_10070C090);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    unint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_31;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_31;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v17 = v15 + 2;
            if (v17 >= v10)
            {
LABEL_31:
              uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
              if (v26 > 63) {
                bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v6 = -1 << v26;
              }
              uint64_t v1 = v0;
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v5 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_37;
                }
                if (v5 >= v10) {
                  goto LABEL_31;
                }
                unint64_t v16 = v6[v5];
                ++v17;
                if (v16) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v5 = v17;
          }
        }
LABEL_21:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
      sub_1005E33F0();
      sub_1005E3410(v18);
      uint64_t result = sub_1005E3470();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1000C7280()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_10070A0B8);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    unint64_t v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        uint64_t result = v2 + 56;
        if (v15 >= v9) {
          goto LABEL_31;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_31;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v17 = v15 + 2;
            if (v17 >= v9)
            {
LABEL_31:
              uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
              if (v28 > 63) {
                bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v29 = -1 << v28;
              }
              uint64_t v1 = v0;
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v29[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v5 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_37;
                }
                if (v5 >= v9) {
                  goto LABEL_31;
                }
                unint64_t v16 = v29[v5];
                ++v17;
                if (v16) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v5 = v17;
          }
        }
LABEL_21:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 16 * v14;
      uint64_t v19 = *(void *)v18;
      uint64_t v20 = *(unsigned int *)(v18 + 8);
      sub_1005E33F0();
      sub_1005E3410(v20 | (v20 << 32));
      uint64_t result = sub_1005E3470();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
      *(void *)uint64_t v12 = v19;
      *(_DWORD *)(v12 + 8) = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1000C752C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_10070C0F8);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    unint64_t v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v9) {
          goto LABEL_33;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v16 = v29[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v29 = -1 << v28;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v29[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
      uint64_t v19 = *v18;
      Swift::UInt v20 = v18[1];
      sub_1005E33F0();
      sub_1005E3410(v20);
      uint64_t result = sub_1005E3470();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
      *uint64_t v12 = v19;
      v12[1] = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1000C77FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_10070A090);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1005E33F0();
      sub_1005E1CD0();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1005E3470();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1000C7AF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_10070C100);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_36;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_36;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_36;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_36:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_42;
                  }
                  if (v11 >= v8) {
                    goto LABEL_36;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      sub_1005E33F0();
      if (v20)
      {
        sub_1005E3410(0);
        sub_1005E1CD0();
        sub_1005E1DB0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1005E3410(1uLL);
      }
      uint64_t result = sub_1005E3470();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v21;
      v13[1] = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1000C7E10()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_100709FA8);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
      sub_1005E33F0();
      sub_1005E3410(v18);
      uint64_t result = sub_1005E3470();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1000C80BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_10070C0C8);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      unint64_t v21 = v19[1];
      sub_1005E33F0();
      sub_100008D24(v20, v21);
      sub_1005E08B0();
      sub_1000094D4(v20, v21);
      uint64_t result = sub_1005E3470();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1000C83B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v2 - 8);
  uint64_t v42 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v4 = __chkstk_darwin(v46);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int64_t v8 = (char *)&v41 - v7;
  uint64_t v9 = *v0;
  sub_10000566C(&qword_100709FD0);
  uint64_t v10 = sub_1005E2C10();
  uint64_t v47 = v9;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_44;
  }
  char v41 = v0;
  uint64_t v11 = 1 << *(unsigned char *)(v47 + 32);
  uint64_t v12 = *(void *)(v47 + 56);
  unint64_t v44 = (void *)(v47 + 56);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v43 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v10 + 56;
  swift_retain();
  int64_t v16 = 0;
  uint64_t v45 = v8;
  while (1)
  {
    if (v14)
    {
      unint64_t v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_45;
    }
    if (v20 >= v43) {
      break;
    }
    unint64_t v21 = v44[v20];
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v43) {
        break;
      }
      unint64_t v21 = v44[v16];
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v43) {
          break;
        }
        unint64_t v21 = v44[v16];
        if (!v21)
        {
          int64_t v22 = v20 + 3;
          if (v22 >= v43) {
            break;
          }
          unint64_t v21 = v44[v22];
          if (!v21)
          {
            while (1)
            {
              int64_t v16 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                goto LABEL_46;
              }
              if (v16 >= v43) {
                goto LABEL_39;
              }
              unint64_t v21 = v44[v16];
              ++v22;
              if (v21) {
                goto LABEL_23;
              }
            }
          }
          int64_t v16 = v22;
        }
      }
    }
LABEL_23:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = *(void *)(*(void *)(v47 + 48) + 8 * v19);
    sub_1005E33F0();
    uint64_t v24 = v23 + *(void *)(*(void *)v23 + 96);
    swift_beginAccess();
    sub_1000D85A8(v24, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_1000D85A8((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v27 = *((unsigned int *)v6 + 2);
        uint64_t v28 = *((void *)v6 + 2);
        sub_1005E3410(2uLL);
        sub_1005E3410(v27 | (v27 << 32));
        sub_1000D3538((uint64_t)v48, v28);
        goto LABEL_28;
      case 2u:
        uint64_t v29 = *((unsigned int *)v6 + 2);
        uint64_t v30 = *((void *)v6 + 2);
        sub_1005E3410(3uLL);
        sub_1005E3410(v29 | (v29 << 32));
        sub_1000D3378((uint64_t)v48, v30);
LABEL_28:
        int64_t v8 = v45;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 3u:
        sub_1005E3410(1uLL);
        break;
      default:
        uint64_t v25 = v42;
        sub_10001FDF0((uint64_t)v6, v42, &qword_100709E38);
        sub_1005E3410(0);
        sub_10000566C(&qword_100709E60);
        sub_10001FBA4();
        sub_1005E19C0();
        uint64_t v26 = v25;
        int64_t v8 = v45;
        sub_100007A48(v26, &qword_100709E38);
        break;
    }
    sub_1000D8610((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    Swift::Int v31 = sub_1005E3470();
    uint64_t v32 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v33 = v31 & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v15 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v33) & ~*(void *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v35 = 0;
    unint64_t v36 = (unint64_t)(63 - v32) >> 6;
    do
    {
      if (++v34 == v36 && (v35 & 1) != 0)
      {
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        JUMPOUT(0x1000C88FCLL);
      }
      BOOL v37 = v34 == v36;
      if (v34 == v36) {
        unint64_t v34 = 0;
      }
      v35 |= v37;
      uint64_t v38 = *(void *)(v15 + 8 * v34);
    }
    while (v38 == -1);
    unint64_t v17 = __clz(__rbit64(~v38)) + (v34 << 6);
LABEL_7:
    *(void *)(v15 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(void *)(*(void *)(v10 + 48) + 8 * v17) = v23;
    ++*(void *)(v10 + 16);
  }
LABEL_39:
  swift_release();
  uint64_t v1 = v41;
  uint64_t v39 = 1 << *(unsigned char *)(v47 + 32);
  if (v39 > 63) {
    bzero(v44, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v44 = -1 << v39;
  }
  *(void *)(v47 + 16) = 0;
LABEL_44:
  uint64_t result = swift_release();
  *uint64_t v1 = v10;
  return result;
}

uint64_t sub_1000C890C()
{
  uint64_t v1 = *v0;
  sub_10000566C(&qword_10070C0E8);
  uint64_t v2 = sub_1005E2C10();
  uint64_t v3 = v2;
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
    uint64_t v27 = (void *)(v1 + 56);
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    else {
      uint64_t v5 = -1;
    }
    unint64_t v6 = v5 & *(void *)(v1 + 56);
    int64_t v7 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v8 = v2 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v6)
      {
        unint64_t v13 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v7) {
          goto LABEL_33;
        }
        unint64_t v16 = v27[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v7) {
            goto LABEL_33;
          }
          unint64_t v16 = v27[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v7) {
              goto LABEL_33;
            }
            unint64_t v16 = v27[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v7)
              {
LABEL_33:
                swift_release();
                uint64_t v26 = 1 << *(unsigned char *)(v1 + 32);
                if (v26 > 63) {
                  bzero(v27, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v27 = -1 << v26;
                }
                *(void *)(v1 + 16) = 0;
                break;
              }
              unint64_t v16 = v27[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v7) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v27[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v6 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      unint64_t v18 = (long long *)(*(void *)(v1 + 48) + 48 * v14);
      long long v28 = *v18;
      long long v29 = v18[1];
      long long v30 = v18[2];
      sub_1005E33F0();
      sub_1005E2BE0();
      uint64_t result = sub_1005E3470();
      uint64_t v19 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = (_OWORD *)(*(void *)(v3 + 48) + 48 * v11);
      *uint64_t v12 = v28;
      v12[1] = v29;
      void v12[2] = v30;
      ++*(void *)(v3 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v0 = v3;
  return result;
}

uint64_t sub_1000C8C0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v2 - 8);
  uint64_t v45 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  int64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v43 - v8;
  uint64_t v10 = *v0;
  sub_10000566C(&qword_10070C128);
  uint64_t v11 = sub_1005E2C10();
  uint64_t v51 = v10;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_44;
  }
  unint64_t v44 = v0;
  uint64_t v12 = 1 << *(unsigned char *)(v51 + 32);
  uint64_t v13 = *(void *)(v51 + 56);
  uint64_t v47 = (void *)(v51 + 56);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v46 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v16 = v11 + 56;
  swift_retain();
  int64_t v17 = 0;
  uint64_t v48 = v9;
  while (1)
  {
    if (v15)
    {
      unint64_t v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      goto LABEL_45;
    }
    if (v21 >= v46) {
      break;
    }
    unint64_t v22 = v47[v21];
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v46) {
        break;
      }
      unint64_t v22 = v47[v17];
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v46) {
          break;
        }
        unint64_t v22 = v47[v17];
        if (!v22)
        {
          int64_t v23 = v21 + 3;
          if (v23 >= v46) {
            break;
          }
          unint64_t v22 = v47[v23];
          if (!v22)
          {
            while (1)
            {
              int64_t v17 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_46;
              }
              if (v17 >= v46) {
                goto LABEL_39;
              }
              unint64_t v22 = v47[v17];
              ++v23;
              if (v22) {
                goto LABEL_23;
              }
            }
          }
          int64_t v17 = v23;
        }
      }
    }
LABEL_23:
    unint64_t v15 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    uint64_t v24 = *(void *)(v49 + 72);
    sub_1000D8450(*(void *)(v51 + 48) + v24 * v20, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_1005E33F0();
    sub_1000D85A8((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v27 = *((unsigned int *)v7 + 2);
        uint64_t v28 = *((void *)v7 + 2);
        sub_1005E3410(2uLL);
        Swift::UInt v29 = v27 | (v27 << 32);
        uint64_t v9 = v48;
        sub_1005E3410(v29);
        sub_1000D3538((uint64_t)v52, v28);
        goto LABEL_28;
      case 2u:
        uint64_t v30 = *((unsigned int *)v7 + 2);
        uint64_t v31 = *((void *)v7 + 2);
        sub_1005E3410(3uLL);
        Swift::UInt v32 = v30 | (v30 << 32);
        uint64_t v9 = v48;
        sub_1005E3410(v32);
        sub_1000D3378((uint64_t)v52, v31);
LABEL_28:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 3u:
        sub_1005E3410(1uLL);
        break;
      default:
        uint64_t v25 = v45;
        sub_10001FDF0((uint64_t)v7, v45, &qword_100709E38);
        sub_1005E3410(0);
        sub_10000566C(&qword_100709E60);
        sub_10001FBA4();
        sub_1005E19C0();
        uint64_t v26 = v25;
        uint64_t v9 = v48;
        sub_100007A48(v26, &qword_100709E38);
        break;
    }
    Swift::Int v33 = sub_1005E3470();
    uint64_t v34 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v35 = v33 & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v16 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v35) & ~*(void *)(v16 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v37 = 0;
    unint64_t v38 = (unint64_t)(63 - v34) >> 6;
    do
    {
      if (++v36 == v38 && (v37 & 1) != 0)
      {
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        JUMPOUT(0x1000C9164);
      }
      BOOL v39 = v36 == v38;
      if (v36 == v38) {
        unint64_t v36 = 0;
      }
      v37 |= v39;
      uint64_t v40 = *(void *)(v16 + 8 * v36);
    }
    while (v40 == -1);
    unint64_t v18 = __clz(__rbit64(~v40)) + (v36 << 6);
LABEL_7:
    *(void *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    sub_1000D8450((uint64_t)v9, *(void *)(v11 + 48) + v18 * v24, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    ++*(void *)(v11 + 16);
  }
LABEL_39:
  swift_release();
  uint64_t v1 = v44;
  uint64_t v41 = 1 << *(unsigned char *)(v51 + 32);
  if (v41 > 63) {
    bzero(v47, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v47 = -1 << v41;
  }
  *(void *)(v51 + 16) = 0;
LABEL_44:
  uint64_t result = swift_release();
  *uint64_t v1 = v11;
  return result;
}

uint64_t sub_1000C9174(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10000566C(a2);
  uint64_t result = sub_1005E2C10();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    uint64_t v8 = (void *)(v4 + 56);
    uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v4 + 56);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v7 << 6);
      }
      else
      {
        int64_t v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          int64_t v7 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v18 = v8[v7];
          if (!v18)
          {
            int64_t v7 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_33;
            }
            unint64_t v18 = v8[v7];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
                if (v28 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v28;
                }
                uint64_t v3 = v2;
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v7 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v7 >= v12) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v8[v7];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v7 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      Swift::UInt32 v20 = *(_DWORD *)(*(void *)(v4 + 48) + 4 * v16);
      sub_1005E33F0();
      sub_1005E3440(v20);
      uint64_t result = sub_1005E3470();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_DWORD *)(*(void *)(v6 + 48) + 4 * v14) = v20;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

Swift::Int sub_1000C941C(Swift::Int result, unint64_t a2, char a3)
{
  Swift::UInt v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1000C6FE8();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_1000CAB78();
      goto LABEL_14;
    }
    sub_1000CBE90();
  }
  uint64_t v8 = *v3;
  sub_1005E33F0();
  sub_1005E3410(v5);
  uint64_t result = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1005E3370();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

Swift::Int sub_1000C956C(Swift::Int result, unsigned int a2, unint64_t a3, char a4)
{
  Swift::Int v7 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0) {
    goto LABEL_28;
  }
  if (a4)
  {
    sub_1000C7280();
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (Swift::Int)sub_1000CACF8();
      goto LABEL_28;
    }
    sub_1000CC0F8();
  }
  uint64_t v10 = *v4;
  sub_1005E33F0();
  sub_1005E3410(a2 | ((unint64_t)a2 << 32));
  uint64_t result = sub_1005E3470();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a3 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v12 = ~v11;
    while (1)
    {
      uint64_t v13 = *(void *)(v10 + 48) + 16 * a3;
      if ((*(unsigned int *)(v13 + 8) | ((unint64_t)*(unsigned int *)(v13 + 8) << 32)) == (a2 | ((unint64_t)a2 << 32)))
      {
        uint64_t v14 = *(void *)v13;
        uint64_t v15 = *(void *)(v14 + 16);
        if (v15 == *(void *)(v7 + 16))
        {
          if (v15) {
            BOOL v16 = v14 == v7;
          }
          else {
            BOOL v16 = 1;
          }
          if (v16) {
            goto LABEL_31;
          }
          if (*(unsigned __int8 *)(v14 + 32) == *(unsigned __int8 *)(v7 + 32))
          {
            if (v15 == 1) {
              goto LABEL_31;
            }
            if (*(unsigned __int8 *)(v14 + 33) == *(unsigned __int8 *)(v7 + 33))
            {
              if (v15 == 2) {
                goto LABEL_31;
              }
              if (*(unsigned __int8 *)(v14 + 34) == *(unsigned __int8 *)(v7 + 34))
              {
                if (v15 == 3) {
                  goto LABEL_31;
                }
                if (*(unsigned __int8 *)(v14 + 35) == *(unsigned __int8 *)(v7 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_10:
      a3 = (a3 + 1) & v12;
      if (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
        goto LABEL_28;
      }
    }
    int64_t v17 = (unsigned __int8 *)(v14 + 36);
    uint64_t v18 = v15 - 4;
    int64_t v19 = (unsigned __int8 *)(v7 + 36);
    while (v18)
    {
      int v21 = *v17++;
      int v20 = v21;
      int v22 = *v19++;
      --v18;
      if (v20 != v22) {
        goto LABEL_10;
      }
    }
    goto LABEL_31;
  }
LABEL_28:
  uint64_t v23 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v24 = *(void *)(v23 + 48) + 16 * a3;
  *(void *)uint64_t v24 = v7;
  *(_DWORD *)(v24 + 8) = a2;
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_31:
  uint64_t result = sub_1005E3370();
  __break(1u);
  return result;
}

Swift::Int sub_1000C977C(Swift::Int result, Swift::UInt a2, unint64_t a3, char a4)
{
  Swift::Int v7 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0) {
    goto LABEL_28;
  }
  if (a4)
  {
    sub_1000C752C();
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (Swift::Int)sub_1000CAEA0();
      goto LABEL_28;
    }
    sub_1000CC380();
  }
  uint64_t v10 = *v4;
  sub_1005E33F0();
  sub_1005E3410(a2);
  uint64_t result = sub_1005E3470();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a3 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v12 = ~v11;
    while (1)
    {
      uint64_t v13 = (uint64_t *)(*(void *)(v10 + 48) + 16 * a3);
      if (v13[1] == a2)
      {
        uint64_t v14 = *v13;
        uint64_t v15 = *(void *)(v14 + 16);
        if (v15 == *(void *)(v7 + 16))
        {
          if (v15) {
            BOOL v16 = v14 == v7;
          }
          else {
            BOOL v16 = 1;
          }
          if (v16) {
            goto LABEL_31;
          }
          if (*(unsigned __int8 *)(v14 + 32) == *(unsigned __int8 *)(v7 + 32))
          {
            if (v15 == 1) {
              goto LABEL_31;
            }
            if (*(unsigned __int8 *)(v14 + 33) == *(unsigned __int8 *)(v7 + 33))
            {
              if (v15 == 2) {
                goto LABEL_31;
              }
              if (*(unsigned __int8 *)(v14 + 34) == *(unsigned __int8 *)(v7 + 34))
              {
                if (v15 == 3) {
                  goto LABEL_31;
                }
                if (*(unsigned __int8 *)(v14 + 35) == *(unsigned __int8 *)(v7 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_10:
      a3 = (a3 + 1) & v12;
      if (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
        goto LABEL_28;
      }
    }
    int64_t v17 = (unsigned __int8 *)(v14 + 36);
    uint64_t v18 = v15 - 4;
    int64_t v19 = (unsigned __int8 *)(v7 + 36);
    while (v18)
    {
      int v21 = *v17++;
      int v20 = v21;
      int v22 = *v19++;
      --v18;
      if (v20 != v22) {
        goto LABEL_10;
      }
    }
    goto LABEL_31;
  }
LABEL_28:
  uint64_t v23 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v24 = (Swift::Int *)(*(void *)(v23 + 48) + 16 * a3);
  *uint64_t v24 = v7;
  v24[1] = a2;
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_31:
  uint64_t result = sub_1005E3370();
  __break(1u);
  return result;
}

Swift::Int sub_1000C9974(Swift::Int a1, unint64_t a2, char a3)
{
  return sub_1000C9BE0(a1, a2, a3, &qword_10070C108);
}

Swift::Int sub_1000C9988(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  Swift::UInt v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1000C77FC();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_1000CB054();
LABEL_22:
      uint64_t v26 = *v5;
      *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
      uint64_t v27 = (Swift::Int *)(*(void *)(v26 + 48) + 16 * a3);
      *uint64_t v27 = v8;
      v27[1] = a2;
      uint64_t v28 = *(void *)(v26 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (!v29)
      {
        *(void *)(v26 + 16) = v30;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1000CC620();
  }
  uint64_t v11 = *v4;
  sub_1005E33F0();
  sub_1005E1CD0();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1005E3470();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  if (((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v13 = sub_1005E1CD0();
  uint64_t v15 = v14;
  if (v13 == sub_1005E1CD0() && v15 == v16)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v18 = sub_1005E3290();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
  {
    uint64_t v19 = ~v12;
    do
    {
      a3 = (a3 + 1) & v19;
      if (((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v20 = sub_1005E1CD0();
      uint64_t v22 = v21;
      if (v20 == sub_1005E1CD0() && v22 == v23) {
        goto LABEL_25;
      }
      char v25 = sub_1005E3290();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v25 & 1) == 0);
  }
LABEL_26:
  uint64_t result = sub_1005E3370();
  __break(1u);
  return result;
}

Swift::Int sub_1000C9BCC(Swift::Int a1, unint64_t a2, char a3)
{
  return sub_1000C9BE0(a1, a2, a3, &qword_10070C080);
}

Swift::Int sub_1000C9BE0(Swift::Int result, unint64_t a2, char a3, uint64_t *a4)
{
  Swift::UInt32 v6 = result;
  unint64_t v7 = *(void *)(*v4 + 16);
  unint64_t v8 = *(void *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v9 = v7 + 1;
  if (a3)
  {
    sub_1000C9174(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (Swift::Int)sub_1000CBD00(a4);
      goto LABEL_14;
    }
    sub_1000CDE70(v9, a4);
  }
  uint64_t v10 = *v4;
  sub_1005E33F0();
  sub_1005E3440(v6);
  uint64_t result = sub_1005E3470();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = *(void *)(v10 + 48);
    if (*(_DWORD *)(v12 + 4 * a2) == v6)
    {
LABEL_13:
      uint64_t result = sub_1005E3370();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(_DWORD *)(v12 + 4 * a2) == v6) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(void *)(v14 + 48) + 4 * a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v17;
  }
  return result;
}

Swift::Int sub_1000C9D3C(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  Swift::UInt v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    if (a4)
    {
      sub_1000C7AF8();
    }
    else
    {
      if (v10 > v9)
      {
        uint64_t result = (Swift::Int)sub_1000CB214();
        goto LABEL_23;
      }
      sub_1000CC904();
    }
    uint64_t v11 = *v4;
    sub_1005E33F0();
    if (a2)
    {
      sub_1005E3410(0);
      sub_1005E1CD0();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1005E3410(1uLL);
    }
    uint64_t result = sub_1005E3470();
    uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
    a3 = result & ~v12;
    if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
    {
      uint64_t v13 = ~v12;
      do
      {
        if (*(void *)(*(void *)(v11 + 48) + 16 * a3 + 8))
        {
          if (a2)
          {
            uint64_t v14 = sub_1005E1CD0();
            uint64_t v16 = v15;
            if (v14 == sub_1005E1CD0() && v16 == v17) {
              goto LABEL_26;
            }
            char v19 = sub_1005E3290();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v19) {
              goto LABEL_27;
            }
          }
        }
        else if (!a2)
        {
          goto LABEL_27;
        }
        a3 = (a3 + 1) & v13;
      }
      while (((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
    }
  }
LABEL_23:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
LABEL_26:
    swift_bridgeObjectRelease_n();
LABEL_27:
    uint64_t result = sub_1005E3370();
    __break(1u);
  }
  else
  {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

Swift::Int sub_1000C9F4C(Swift::Int result, unint64_t a2, char a3)
{
  Swift::UInt v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1000C7E10();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_1000CB3C4();
      goto LABEL_14;
    }
    sub_1000CCC04();
  }
  uint64_t v8 = *v3;
  sub_1005E33F0();
  sub_1005E3410(v5);
  uint64_t result = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1005E3370();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

Swift::Int sub_1000CA09C(Swift::Int result, unint64_t a2, unint64_t a3, char a4)
{
  uint64_t v7 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 <= v8 || (a4 & 1) == 0)
  {
    if (a4)
    {
      sub_1000C80BC();
    }
    else
    {
      if (v9 > v8)
      {
        uint64_t result = (Swift::Int)sub_1000CB558();
        goto LABEL_45;
      }
      sub_1000CCE80();
    }
    uint64_t v10 = *v4;
    sub_1005E33F0();
    sub_100008D24(v7, a2);
    sub_1005E08B0();
    sub_1000094D4(v7, a2);
    uint64_t result = sub_1005E3470();
    uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
    a3 = result & ~v11;
    uint64_t v12 = v10 + 56;
    if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
    {
      uint64_t v38 = ~v11;
      BOOL v13 = __OFSUB__(HIDWORD(v7), v7);
      BOOL v37 = v13;
      uint64_t v34 = v10 + 56;
      uint64_t v35 = v10;
      while (1)
      {
        BOOL v14 = (uint64_t *)(*(void *)(v10 + 48) + 16 * a3);
        uint64_t v16 = *v14;
        unint64_t v15 = v14[1];
        uint64_t v17 = 0;
        switch(v15 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v16), v16))
            {
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
            }
            uint64_t v17 = HIDWORD(v16) - (int)v16;
LABEL_21:
            sub_100008D24(v16, v15);
            sub_100008D24(v16, v15);
LABEL_22:
            uint64_t v20 = BYTE6(a2);
            switch(a2 >> 62)
            {
              case 1uLL:
                uint64_t v20 = HIDWORD(v7) - (int)v7;
                if (v37) {
                  goto LABEL_50;
                }
                goto LABEL_26;
              case 2uLL:
                uint64_t v22 = *(void *)(v7 + 16);
                uint64_t v21 = *(void *)(v7 + 24);
                BOOL v23 = __OFSUB__(v21, v22);
                uint64_t v20 = v21 - v22;
                if (!v23) {
                  goto LABEL_26;
                }
                goto LABEL_49;
              case 3uLL:
                if (v17) {
                  goto LABEL_14;
                }
                goto LABEL_56;
              default:
LABEL_26:
                if (v17 == v20)
                {
                  if (v17 < 1)
                  {
LABEL_56:
                    sub_1000094D4(v16, v15);
                    sub_1000094D4(v16, v15);
LABEL_57:
                    sub_1005E3370();
                    __break(1u);
                    JUMPOUT(0x1000CA5D4);
                  }
                  switch(v15 >> 62)
                  {
                    case 1uLL:
                      if (v16 >> 32 < (int)v16) {
                        goto LABEL_52;
                      }
                      sub_100008D24(v7, a2);
                      sub_100008D24(v16, v15);
                      uint64_t v28 = sub_1005E0550();
                      if (!v28) {
                        goto LABEL_39;
                      }
                      uint64_t v29 = sub_1005E0580();
                      if (__OFSUB__((int)v16, v29)) {
                        goto LABEL_55;
                      }
                      v28 += (int)v16 - v29;
LABEL_39:
                      sub_1005E0570();
                      sub_1000260B8(v28, v7, a2, __s1);
                      sub_1000094D4(v16, v15);
                      break;
                    case 2uLL:
                      uint64_t v25 = *(void *)(v16 + 16);
                      uint64_t v24 = *(void *)(v16 + 24);
                      sub_100008D24(v7, a2);
                      swift_retain();
                      swift_retain();
                      uint64_t v26 = sub_1005E0550();
                      if (!v26) {
                        goto LABEL_33;
                      }
                      uint64_t v27 = sub_1005E0580();
                      if (__OFSUB__(v25, v27)) {
                        goto LABEL_54;
                      }
                      v26 += v25 - v27;
LABEL_33:
                      if (__OFSUB__(v24, v25)) {
                        goto LABEL_53;
                      }
                      sub_1005E0570();
                      sub_1000260B8(v26, v7, a2, __s1);
                      swift_release();
                      swift_release();
                      break;
                    case 3uLL:
                      *(void *)&__s1[6] = 0;
                      *(void *)__s1 = 0;
                      sub_100008D24(v7, a2);
                      goto LABEL_43;
                    default:
                      *(void *)__s1 = v16;
                      *(_WORD *)&__s1[8] = v15;
                      __s1[10] = BYTE2(v15);
                      __s1[11] = BYTE3(v15);
                      __s1[12] = BYTE4(v15);
                      __s1[13] = BYTE5(v15);
                      sub_100008D24(v7, a2);
LABEL_43:
                      sub_1000260B8((uint64_t)__s1, v7, a2, &v39);
                      sub_1000094D4(v7, a2);
                      sub_1000094D4(v16, v15);
                      uint64_t result = sub_1000094D4(v16, v15);
                      if (v39) {
                        goto LABEL_57;
                      }
                      goto LABEL_15;
                  }
                  sub_1000094D4(v7, a2);
                  sub_1000094D4(v16, v15);
                  uint64_t result = sub_1000094D4(v16, v15);
                  uint64_t v12 = v34;
                  uint64_t v10 = v35;
                  if (__s1[0]) {
                    goto LABEL_57;
                  }
                }
                else
                {
LABEL_14:
                  sub_1000094D4(v16, v15);
                  uint64_t result = sub_1000094D4(v16, v15);
                }
LABEL_15:
                a3 = (a3 + 1) & v38;
                if (((*(void *)(v12 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
                  goto LABEL_45;
                }
                break;
            }
            break;
          case 2uLL:
            uint64_t v19 = *(void *)(v16 + 16);
            uint64_t v18 = *(void *)(v16 + 24);
            uint64_t v17 = v18 - v19;
            if (!__OFSUB__(v18, v19)) {
              goto LABEL_21;
            }
            goto LABEL_48;
          case 3uLL:
            goto LABEL_22;
          default:
            uint64_t v17 = BYTE6(v15);
            goto LABEL_22;
        }
      }
    }
  }
LABEL_45:
  uint64_t v30 = *v36;
  *(void *)(*v36 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v31 = (uint64_t *)(*(void *)(v30 + 48) + 16 * a3);
  *uint64_t v31 = v7;
  v31[1] = a2;
  uint64_t v32 = *(void *)(v30 + 16);
  BOOL v23 = __OFADD__(v32, 1);
  uint64_t v33 = v32 + 1;
  if (v23) {
    goto LABEL_51;
  }
  *(void *)(v30 + 16) = v33;
  return result;
}

uint64_t sub_1000CA604(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v7 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  BOOL v13 = (char *)&v26 - v12;
  unint64_t v14 = *(void *)(*v3 + 16);
  unint64_t v15 = *(void *)(*v3 + 24);
  uint64_t v26 = v3;
  uint64_t v27 = a1;
  if (v15 > v14 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1000C83B4();
  }
  else
  {
    if (v15 > v14)
    {
      uint64_t result = (uint64_t)sub_1000CB70C();
      goto LABEL_12;
    }
    sub_1000CD14C();
  }
  uint64_t v16 = *v3;
  sub_1005E33F0();
  uint64_t v17 = a1 + *(void *)(*(void *)a1 + 96);
  swift_beginAccess();
  sub_1000D85A8(v17, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  sub_10018A5EC((uint64_t)v28);
  sub_1000D8610((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  uint64_t result = sub_1005E3470();
  uint64_t v18 = -1 << *(unsigned char *)(v16 + 32);
  a2 = result & ~v18;
  if ((*(void *)(v16 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v19 = ~v18;
    do
    {
      uint64_t v20 = *(void *)(*(void *)(v16 + 48) + 8 * a2);
      uint64_t v21 = v20 + *(void *)(*(void *)v20 + 96);
      swift_beginAccess();
      sub_1000D85A8(v21, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_1000D85A8(v17, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      swift_retain();
      LOBYTE(v21) = sub_1001961B8((uint64_t)v13, (uint64_t)v10);
      sub_1000D8610((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_1000D8610((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      uint64_t result = swift_release();
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v19;
    }
    while (((*(void *)(v16 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = *v26;
  *(void *)(v22 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v22 + 48) + 8 * a2) = v27;
  uint64_t v23 = *(void *)(v22 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v22 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  sub_10000566C(&qword_100709FC8);
  uint64_t result = sub_1005E3370();
  __break(1u);
  return result;
}

Swift::Int sub_1000CA8D8(Swift::Int a1, unint64_t a2, char a3)
{
  return sub_1000C9BE0(a1, a2, a3, &qword_10070C098);
}

Swift::Int sub_1000CA8EC(Swift::Int a1, unint64_t a2, char a3)
{
  return sub_1000C9BE0(a1, a2, a3, &qword_10070C0A0);
}

uint64_t sub_1000CA900(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1000C8C0C();
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_1000CD950();
LABEL_8:
    uint64_t v15 = *v4;
    sub_1005E33F0();
    sub_10018A5EC((uint64_t)v27);
    Swift::Int v16 = sub_1005E3470();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_1000D85A8(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        char v20 = sub_1001961B8((uint64_t)v11, a1);
        sub_1000D8610((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_1000CBA9C();
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1000D8450(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1005E3370();
  __break(1u);
  return result;
}

Swift::Int sub_1000CAB50(Swift::Int a1, unint64_t a2, char a3)
{
  return sub_1000C9BE0(a1, a2, a3, &qword_10070C110);
}

Swift::Int sub_1000CAB64(Swift::Int a1, unint64_t a2, char a3)
{
  return sub_1000C9BE0(a1, a2, a3, &qword_10070C130);
}

void *sub_1000CAB78()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070C090);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17) {
        break;
      }
    }
LABEL_25:
    unint64_t v19 = __clz(__rbit64(v17));
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = v19 + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 2;
  if (v18 >= v13) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000CACF8()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A0B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    LODWORD(v17) = *(_DWORD *)(v17 + 8);
    uint64_t v19 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v19 = v18;
    *(_DWORD *)(v19 + 8) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000CAEA0()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070C0F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v13) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22)
      {
        int64_t v9 = v21 + 2;
        if (v21 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v6 + 8 * v9);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    int64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    void *v20 = v18;
    v20[1] = v19;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v13) {
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000CB054()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070A090);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000CB208()
{
  return sub_1000CBD00(&qword_10070C080);
}

void *sub_1000CB214()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070C100);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000CB3C4()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_100709FA8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000CB558()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070C0C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t result = (void *)sub_100008D24(v17, *((unint64_t *)&v17 + 1));
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000CB70C()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_100709FD0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000CB8B8()
{
  return sub_1000CBD00(&qword_10070C098);
}

void *sub_1000CB8C4()
{
  return sub_1000CBD00(&qword_10070C0A0);
}

void *sub_1000CB8D0()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10070C0E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 48 * v15;
    uint64_t result = (void *)sub_10003C94C(*(void *)(v2 + 48) + 48 * v15, (uint64_t)v23);
    unint64_t v17 = (_OWORD *)(*(void *)(v4 + 48) + v16);
    long long v18 = v23[0];
    long long v19 = v23[2];
    v17[1] = v23[1];
    v17[2] = v19;
    _OWORD *v17 = v18;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000CBA9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  Swift::UInt v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_10070C128);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1005E2C00();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v16) {
        goto LABEL_25;
      }
      unint64_t v21 = *(void *)(v10 + 8 * v12);
      if (!v21)
      {
        int64_t v12 = v20 + 2;
        if (v20 + 2 >= v16) {
          goto LABEL_25;
        }
        unint64_t v21 = *(void *)(v10 + 8 * v12);
        if (!v21) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    sub_1000D85A8(*(void *)(v6 + 48) + v19, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    uint64_t result = (void *)sub_1000D8450((uint64_t)v5, *(void *)(v8 + 48) + v19, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v16) {
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v10 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1000CBD00(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10000566C(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1005E2C00();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_DWORD *)(*(void *)(v5 + 48) + 4 * v16) = *(_DWORD *)(*(void *)(v3 + 48) + 4 * v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1000CBE90()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_10070C090);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_33:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v15 >= v10) {
      goto LABEL_31;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_31;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16) {
        break;
      }
    }
LABEL_21:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_22:
    Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
    sub_1005E33F0();
    sub_1005E3410(v18);
    uint64_t result = sub_1005E3470();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 2;
  if (v17 >= v10)
  {
LABEL_31:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_33;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_31;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_21;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1000CC0F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_10070A0B8);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_33:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v15 >= v28) {
      goto LABEL_31;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_31;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16) {
        break;
      }
    }
LABEL_21:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_22:
    uint64_t v18 = *(void *)(v2 + 48) + 16 * v14;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(unsigned int *)(v18 + 8);
    sub_1005E33F0();
    sub_1005E3410(v20 | (v20 << 32));
    uint64_t result = sub_1005E3470();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
    *(void *)uint64_t v12 = v19;
    *(_DWORD *)(v12 + 8) = v20;
    ++*(void *)(v4 + 16);
    uint64_t result = swift_bridgeObjectRetain();
  }
  int64_t v17 = v15 + 2;
  if (v17 >= v28)
  {
LABEL_31:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_33;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_31;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_21;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1000CC380()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_10070C0F8);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v28) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v19 = *v18;
    Swift::UInt v20 = v18[1];
    sub_1005E33F0();
    sub_1005E3410(v20);
    uint64_t result = sub_1005E3470();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    *uint64_t v12 = v19;
    v12[1] = v20;
    ++*(void *)(v4 + 16);
    uint64_t result = swift_bridgeObjectRetain();
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000CC620()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_10070A090);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v29) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v28 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v28 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v28 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    uint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    sub_1005E33F0();
    sub_1005E1CD0();
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1005E3470();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v8 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v8 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    *uint64_t v12 = v19;
    v12[1] = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v28 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v28 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000CC904()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_10070C100);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v29) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v28 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v29) {
        goto LABEL_36;
      }
      unint64_t v16 = *(void *)(v28 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v29) {
          goto LABEL_36;
        }
        unint64_t v16 = *(void *)(v28 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    uint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_1005E33F0();
    if (v19)
    {
      sub_1005E3410(0);
      sub_1005E1CD0();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1005E3410(1uLL);
    }
    uint64_t result = sub_1005E3470();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v8 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v8 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    *uint64_t v12 = v20;
    v12[1] = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v29)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_38;
  }
  unint64_t v16 = *(void *)(v28 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v28 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1000CCC04()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_100709FA8);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
    sub_1005E33F0();
    sub_1005E3410(v18);
    uint64_t result = sub_1005E3470();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000CCE80()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_10070C0C8);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    unint64_t v21 = v19[1];
    sub_1005E33F0();
    sub_100008D24(v20, v21);
    sub_100008D24(v20, v21);
    sub_1005E08B0();
    sub_1000094D4(v20, v21);
    uint64_t result = sub_1005E3470();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000CD14C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v2 - 8);
  uint64_t v45 = (uint64_t)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v4 = __chkstk_darwin(v49);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v50 = (uint64_t)&v44 - v7;
  uint64_t v8 = *v0;
  sub_10000566C(&qword_100709FD0);
  uint64_t v9 = sub_1005E2C10();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_41;
  }
  unint64_t v44 = v0;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 56);
  uint64_t v46 = v8 + 56;
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v47 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 56;
  swift_retain();
  int64_t v16 = 0;
  uint64_t v48 = v8;
  while (1)
  {
    if (v14)
    {
      unint64_t v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_42;
    }
    if (v20 >= v47) {
      break;
    }
    unint64_t v21 = *(void *)(v46 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v47) {
        break;
      }
      unint64_t v21 = *(void *)(v46 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v47) {
          break;
        }
        unint64_t v21 = *(void *)(v46 + 8 * v16);
        if (!v21)
        {
          int64_t v22 = v20 + 3;
          if (v22 >= v47) {
            break;
          }
          unint64_t v21 = *(void *)(v46 + 8 * v22);
          if (!v21)
          {
            while (1)
            {
              int64_t v16 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                goto LABEL_43;
              }
              if (v16 >= v47) {
                goto LABEL_39;
              }
              unint64_t v21 = *(void *)(v46 + 8 * v16);
              ++v22;
              if (v21) {
                goto LABEL_23;
              }
            }
          }
          int64_t v16 = v22;
        }
      }
    }
LABEL_23:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = *(void *)(*(void *)(v8 + 48) + 8 * v19);
    sub_1005E33F0();
    uint64_t v24 = v23 + *(void *)(*(void *)v23 + 96);
    swift_beginAccess();
    uint64_t v25 = v24;
    uint64_t v26 = v50;
    sub_1000D85A8(v25, v50, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_1000D85A8(v26, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v29 = *((unsigned int *)v6 + 2);
        uint64_t v30 = *((void *)v6 + 2);
        sub_1005E3410(2uLL);
        Swift::UInt v31 = v29 | (v29 << 32);
        uint64_t v8 = v48;
        sub_1005E3410(v31);
        swift_retain();
        sub_1000D3538((uint64_t)v51, v30);
        swift_bridgeObjectRelease();
        goto LABEL_28;
      case 2u:
        uint64_t v32 = *((unsigned int *)v6 + 2);
        uint64_t v33 = *((void *)v6 + 2);
        sub_1005E3410(3uLL);
        Swift::UInt v34 = v32 | (v32 << 32);
        uint64_t v8 = v48;
        sub_1005E3410(v34);
        swift_retain();
        sub_1000D3378((uint64_t)v51, v33);
        swift_bridgeObjectRelease();
LABEL_28:
        swift_bridgeObjectRelease();
        break;
      case 3u:
        sub_1005E3410(1uLL);
        swift_retain();
        break;
      default:
        uint64_t v27 = v45;
        sub_10001FDF0((uint64_t)v6, v45, &qword_100709E38);
        sub_1005E3410(0);
        swift_retain();
        sub_10000566C(&qword_100709E60);
        sub_10001FBA4();
        sub_1005E19C0();
        uint64_t v28 = v27;
        uint64_t v8 = v48;
        sub_100007A48(v28, &qword_100709E38);
        break;
    }
    sub_1000D8610(v50, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    Swift::Int v35 = sub_1005E3470();
    uint64_t v36 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v37 = v35 & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v15 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v37) & ~*(void *)(v15 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v39 = 0;
    unint64_t v40 = (unint64_t)(63 - v36) >> 6;
    do
    {
      if (++v38 == v40 && (v39 & 1) != 0)
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        JUMPOUT(0x1000CD680);
      }
      BOOL v41 = v38 == v40;
      if (v38 == v40) {
        unint64_t v38 = 0;
      }
      v39 |= v41;
      uint64_t v42 = *(void *)(v15 + 8 * v38);
    }
    while (v42 == -1);
    unint64_t v17 = __clz(__rbit64(~v42)) + (v38 << 6);
LABEL_7:
    *(void *)(v15 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(void *)(*(void *)(v10 + 48) + 8 * v17) = v23;
    ++*(void *)(v10 + 16);
  }
LABEL_39:
  uint64_t result = swift_release_n();
  uint64_t v1 = v44;
LABEL_41:
  *uint64_t v1 = v10;
  return result;
}

uint64_t sub_1000CD690()
{
  uint64_t v1 = *v0;
  sub_10000566C(&qword_10070C0E8);
  uint64_t v2 = sub_1005E2C10();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v5 = v1 + 56;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v1 + 56);
  int64_t v27 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = v2 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v15 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v27) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v5 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v27) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v5 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v27) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v5 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_24:
    sub_10003C94C(*(void *)(v1 + 48) + 48 * v16, (uint64_t)v28);
    sub_1005E33F0();
    sub_1005E2BE0();
    uint64_t result = sub_1005E3470();
    uint64_t v20 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = (_OWORD *)(*(void *)(v3 + 48) + 48 * v11);
    long long v13 = v28[0];
    long long v14 = v28[2];
    v12[1] = v28[1];
    void v12[2] = v14;
    *uint64_t v12 = v13;
    ++*(void *)(v3 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v27)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v5 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v27) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v5 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000CD950()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v2 - 8);
  uint64_t v45 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v49 = (char *)&v43 - v8;
  uint64_t v9 = *v0;
  sub_10000566C(&qword_10070C128);
  uint64_t v10 = sub_1005E2C10();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_41;
  }
  unint64_t v44 = v0;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 56);
  uint64_t v46 = v9 + 56;
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v47 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v16 = v10 + 56;
  swift_retain();
  int64_t v17 = 0;
  uint64_t v48 = v9;
  uint64_t v18 = (uint64_t)v49;
  while (1)
  {
    if (v15)
    {
      unint64_t v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      goto LABEL_42;
    }
    if (v22 >= v47) {
      break;
    }
    unint64_t v23 = *(void *)(v46 + 8 * v22);
    ++v17;
    if (!v23)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v47) {
        break;
      }
      unint64_t v23 = *(void *)(v46 + 8 * v17);
      if (!v23)
      {
        int64_t v17 = v22 + 2;
        if (v22 + 2 >= v47) {
          break;
        }
        unint64_t v23 = *(void *)(v46 + 8 * v17);
        if (!v23)
        {
          int64_t v24 = v22 + 3;
          if (v24 >= v47) {
            break;
          }
          unint64_t v23 = *(void *)(v46 + 8 * v24);
          if (!v23)
          {
            while (1)
            {
              int64_t v17 = v24 + 1;
              if (__OFADD__(v24, 1)) {
                goto LABEL_43;
              }
              if (v17 >= v47) {
                goto LABEL_39;
              }
              unint64_t v23 = *(void *)(v46 + 8 * v17);
              ++v24;
              if (v23) {
                goto LABEL_23;
              }
            }
          }
          int64_t v17 = v24;
        }
      }
    }
LABEL_23:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    uint64_t v25 = *(void *)(v50 + 72);
    sub_1000D85A8(*(void *)(v9 + 48) + v25 * v21, v18, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_1005E33F0();
    sub_1000D85A8(v18, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v28 = *((unsigned int *)v7 + 2);
        uint64_t v29 = *((void *)v7 + 2);
        sub_1005E3410(2uLL);
        Swift::UInt v30 = v28 | (v28 << 32);
        uint64_t v9 = v48;
        sub_1005E3410(v30);
        sub_1000D3538((uint64_t)v52, v29);
        goto LABEL_28;
      case 2u:
        uint64_t v31 = *((unsigned int *)v7 + 2);
        uint64_t v32 = *((void *)v7 + 2);
        sub_1005E3410(3uLL);
        Swift::UInt v33 = v31 | (v31 << 32);
        uint64_t v9 = v48;
        sub_1005E3410(v33);
        sub_1000D3378((uint64_t)v52, v32);
LABEL_28:
        swift_bridgeObjectRelease();
        uint64_t v18 = (uint64_t)v49;
        swift_bridgeObjectRelease();
        break;
      case 3u:
        sub_1005E3410(1uLL);
        break;
      default:
        uint64_t v26 = v45;
        sub_10001FDF0((uint64_t)v7, v45, &qword_100709E38);
        sub_1005E3410(0);
        sub_10000566C(&qword_100709E60);
        sub_10001FBA4();
        uint64_t v18 = (uint64_t)v49;
        sub_1005E19C0();
        uint64_t v27 = v26;
        uint64_t v9 = v48;
        sub_100007A48(v27, &qword_100709E38);
        break;
    }
    Swift::Int v34 = sub_1005E3470();
    uint64_t v35 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v36 = v34 & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v16 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v36) & ~*(void *)(v16 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v38 = 0;
    unint64_t v39 = (unint64_t)(63 - v35) >> 6;
    do
    {
      if (++v37 == v39 && (v38 & 1) != 0)
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        JUMPOUT(0x1000CDE60);
      }
      BOOL v40 = v37 == v39;
      if (v37 == v39) {
        unint64_t v37 = 0;
      }
      v38 |= v40;
      uint64_t v41 = *(void *)(v16 + 8 * v37);
    }
    while (v41 == -1);
    unint64_t v19 = __clz(__rbit64(~v41)) + (v37 << 6);
LABEL_7:
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    sub_1000D8450(v18, *(void *)(v11 + 48) + v19 * v25, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    ++*(void *)(v11 + 16);
  }
LABEL_39:
  uint64_t result = swift_release_n();
  uint64_t v1 = v44;
LABEL_41:
  *uint64_t v1 = v11;
  return result;
}

uint64_t sub_1000CDE70(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10000566C(a2);
  uint64_t result = sub_1005E2C10();
  uint64_t v6 = result;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  int64_t v7 = 0;
  uint64_t v8 = v4 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v4 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    Swift::UInt32 v20 = *(_DWORD *)(*(void *)(v4 + 48) + 4 * v16);
    sub_1005E33F0();
    sub_1005E3440(v20);
    uint64_t result = sub_1005E3470();
    uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_DWORD *)(*(void *)(v6 + 48) + 4 * v14) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v3 = v2;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000CE0E8(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  if (!a4) {
    return 0;
  }
  uint64_t result = 0;
  while (1)
  {
    uint64_t v6 = (uint64_t *)(a3 + 16 * result);
    if ((*((unsigned int *)v6 + 2) | ((unint64_t)*((unsigned int *)v6 + 2) << 32)) == (a2 | ((unint64_t)a2 << 32)))
    {
      uint64_t v7 = *v6;
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8 == *(void *)(a1 + 16))
      {
        if (!v8 || v7 == a1) {
          return result;
        }
        if (*(unsigned __int8 *)(v7 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v8 == 1) {
            return result;
          }
          if (*(unsigned __int8 *)(v7 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v8 == 2) {
              return result;
            }
            if (*(unsigned __int8 *)(v7 + 34) == *(unsigned __int8 *)(a1 + 34))
            {
              if (v8 == 3) {
                return result;
              }
              if (*(unsigned __int8 *)(v7 + 35) == *(unsigned __int8 *)(a1 + 35)) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_3:
    if (++result == a4) {
      return 0;
    }
  }
  uint64_t v9 = (unsigned __int8 *)(v7 + 36);
  uint64_t v10 = v8 - 4;
  unint64_t v11 = (unsigned __int8 *)(a1 + 36);
  while (v10)
  {
    int v13 = *v9++;
    int v12 = v13;
    int v14 = *v11++;
    --v10;
    if (v12 != v14) {
      goto LABEL_3;
    }
  }
  return result;
}

Swift::Int sub_1000CE1DC(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1005E33F0();
  sub_1005E3410(a2 | ((unint64_t)a2 << 32));
  Swift::Int result = sub_1005E3470();
  if (__OFSUB__(1 << *a5, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1005E0B40();
    Swift::Int result = sub_1005E0B70();
    if ((v10 & 1) == 0)
    {
      while (1)
      {
        int v12 = (uint64_t *)(a3 + 16 * result);
        if ((*((unsigned int *)v12 + 2) | ((unint64_t)*((unsigned int *)v12 + 2) << 32)) == (a2 | ((unint64_t)a2 << 32)))
        {
          uint64_t v13 = *v12;
          uint64_t v14 = *(void *)(v13 + 16);
          if (v14 == *(void *)(a1 + 16))
          {
            if (!v14 || v13 == a1) {
              return result;
            }
            if (*(unsigned __int8 *)(v13 + 32) == *(unsigned __int8 *)(a1 + 32))
            {
              if (v14 == 1) {
                return result;
              }
              if (*(unsigned __int8 *)(v13 + 33) == *(unsigned __int8 *)(a1 + 33))
              {
                if (v14 == 2) {
                  return result;
                }
                if (*(unsigned __int8 *)(v13 + 34) == *(unsigned __int8 *)(a1 + 34))
                {
                  if (v14 == 3) {
                    return result;
                  }
                  if (*(unsigned __int8 *)(v13 + 35) == *(unsigned __int8 *)(a1 + 35)) {
                    break;
                  }
                }
              }
            }
          }
        }
LABEL_4:
        sub_1005E0B90();
        Swift::Int result = sub_1005E0B70();
        if (v11) {
          return result;
        }
      }
      unint64_t v15 = (unsigned __int8 *)(v13 + 36);
      uint64_t v16 = v14 - 4;
      int64_t v17 = (unsigned __int8 *)(a1 + 36);
      while (v16)
      {
        int v19 = *v15++;
        int v18 = v19;
        int v20 = *v17++;
        --v16;
        if (v18 != v20) {
          goto LABEL_4;
        }
      }
    }
  }
  return result;
}

Swift::Int sub_1000CE3B8(Swift::UInt32 a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1005E33F0();
  sub_1005E3440(a1);
  Swift::Int result = sub_1005E3470();
  if (__OFSUB__(1 << *a4, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1005E0B40();
    Swift::Int result = sub_1005E0B70();
    if ((v8 & 1) == 0 && *(_DWORD *)(a2 + 4 * result) != a1)
    {
      do
      {
        sub_1005E0B90();
        Swift::Int result = sub_1005E0B70();
      }
      while ((v9 & 1) == 0 && *(_DWORD *)(a2 + 4 * result) != a1);
    }
  }
  return result;
}

uint64_t sub_1000CE4F0(unint64_t *a1, char *a2)
{
  uint64_t v5 = type metadata accessor for RunningTask() - 8;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v33 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v32 = (uint64_t)&v30 - v9;
  __chkstk_darwin(v8);
  uint64_t v34 = (uint64_t)&v30 - v11;
  unint64_t v12 = *a1;
  uint64_t v13 = *(void *)(*a1 + 16);
  if (!v13)
  {
    unint64_t v16 = 0;
    goto LABEL_11;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v10 + 72);
  swift_bridgeObjectRetain();
  unint64_t v16 = 0;
  unint64_t v31 = v14;
  while (1)
  {
    char v17 = sub_1000EB9A0(v12 + v14, a2);
    if (v2)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v16;
    }
    if (v17) {
      break;
    }
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      unint64_t v16 = *(void *)(v12 + 16);
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFADD__(v16, 1))
  {
LABEL_38:
    __break(1u);
    return result;
  }
  unint64_t v19 = *(void *)(v12 + 16);
  if (v16 + 1 != v19)
  {
    uint64_t v20 = v15 + v14;
    unint64_t v21 = v16 + 1;
    Swift::UInt v30 = a1;
    while (v21 < v19)
    {
      unint64_t v36 = v21;
      unint64_t v22 = a1;
      uint64_t v35 = v20;
      uint64_t v23 = v34;
      sub_1000D85A8(v12 + v20, v34, (uint64_t (*)(void))type metadata accessor for RunningTask);
      char v24 = sub_1000EB9A0(v23, a2);
      uint64_t result = sub_1000D8610(v23, (uint64_t (*)(void))type metadata accessor for RunningTask);
      if (v24)
      {
        a1 = v22;
        unint64_t v25 = v36;
      }
      else
      {
        unint64_t v25 = v36;
        a1 = v22;
        if (v36 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0) {
            goto LABEL_33;
          }
          unint64_t v26 = *v22;
          unint64_t v27 = *(void *)(*v22 + 16);
          if (v16 >= v27) {
            goto LABEL_34;
          }
          uint64_t result = sub_1000D85A8(v26 + v31 + v16 * v15, v32, (uint64_t (*)(void))type metadata accessor for RunningTask);
          if (v36 >= v27) {
            goto LABEL_35;
          }
          sub_1000D85A8(v26 + v35, v33, (uint64_t (*)(void))type metadata accessor for RunningTask);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          a1 = v30;
          *Swift::UInt v30 = v26;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_100093454(v26);
            unint64_t v26 = result;
            *a1 = result;
          }
          if (v16 >= *(void *)(v26 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = sub_1000D83EC(v33, v26 + v31 + v16 * v15);
          if (v36 >= *(void *)(*a1 + 16)) {
            goto LABEL_37;
          }
          uint64_t result = sub_1000D83EC(v32, *a1 + v35);
          unint64_t v25 = v36;
        }
        if (__OFADD__(v16++, 1)) {
          goto LABEL_32;
        }
      }
      unint64_t v29 = v25 + 1;
      if (__OFADD__(v25, 1)) {
        goto LABEL_31;
      }
      unint64_t v12 = *a1;
      unint64_t v19 = *(void *)(*a1 + 16);
      unint64_t v21 = v25 + 1;
      uint64_t v20 = v35 + v15;
      if (v29 == v19) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
LABEL_11:
  swift_release();
  return v16;
}

void *sub_1000CE8AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v76 = a1 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v71 = ~v4;
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & v3;
  int64_t v72 = (unint64_t)(63 - v4) >> 6;
  uint64_t v7 = (char *)(a2 + 56);
  uint64_t v8 = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v86 = 0;
  uint64_t v82 = v2;
  char v85 = v7;
  uint64_t v77 = v8;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      uint64_t v11 = (v6 - 1) & v6;
      int64_t v80 = v9;
      unint64_t v12 = v10 | (v9 << 6);
    }
    else
    {
      int64_t v13 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
        goto LABEL_122;
      }
      if (v13 >= v72) {
        goto LABEL_103;
      }
      unint64_t v14 = *(void *)(v76 + 8 * v13);
      if (!v14)
      {
        int64_t v15 = v9 + 2;
        if (v9 + 2 >= v72) {
          goto LABEL_103;
        }
        unint64_t v14 = *(void *)(v76 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v9 + 3;
          if (v9 + 3 >= v72) {
            goto LABEL_103;
          }
          unint64_t v14 = *(void *)(v76 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v9 + 4;
            if (v9 + 4 >= v72) {
              goto LABEL_103;
            }
            unint64_t v14 = *(void *)(v76 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v9 + 5;
              if (v9 + 5 >= v72)
              {
LABEL_103:
                sub_10003BC80();
                return (void *)v2;
              }
              unint64_t v14 = *(void *)(v76 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  int64_t v13 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    break;
                  }
                  if (v13 >= v72) {
                    goto LABEL_103;
                  }
                  unint64_t v14 = *(void *)(v76 + 8 * v13);
                  ++v15;
                  if (v14) {
                    goto LABEL_21;
                  }
                }
LABEL_122:
                __break(1u);
              }
            }
          }
        }
        int64_t v13 = v15;
      }
LABEL_21:
      uint64_t v11 = (v14 - 1) & v14;
      unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
      int64_t v80 = v13;
    }
    unint64_t v79 = v11;
    unint64_t v16 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v12);
    uint64_t v18 = *v16;
    unint64_t v17 = v16[1];
    sub_1005E33F0();
    sub_100008D24(v18, v17);
    sub_100008D24(v18, v17);
    sub_1005E08B0();
    sub_1000094D4(v18, v17);
    Swift::Int v19 = sub_1005E3470();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = v19 & ~v20;
    if ((*(void *)&v7[(v21 >> 3) & 0xFFFFFFFFFFFFFF8] >> v21)) {
      break;
    }
LABEL_6:
    sub_1000094D4(v18, v17);
    uint64_t v8 = v77;
    int64_t v9 = v80;
    unint64_t v6 = v79;
  }
  unint64_t v22 = v17 >> 62;
  uint64_t v87 = ~v20;
  unint64_t v75 = HIDWORD(v18);
  BOOL v23 = __OFSUB__(HIDWORD(v18), v18);
  BOOL v84 = v23;
  size_t v83 = HIDWORD(v18) - (int)v18;
  size_t v88 = BYTE6(v17);
  uint64_t v81 = v17 & 0x3FFFFFFFFFFFFFFFLL;
  uint64_t v78 = (int)v18;
  uint64_t v74 = v18 >> 32;
  uint64_t v73 = (v18 >> 32) - (int)v18;
  while (2)
  {
    char v24 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v21);
    uint64_t v26 = *v24;
    unint64_t v25 = v24[1];
    uint64_t v27 = 0;
    switch(v25 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v26), v26)) {
          goto LABEL_106;
        }
        uint64_t v27 = HIDWORD(v26) - (int)v26;
LABEL_35:
        sub_100008D24(v26, v25);
        sub_100008D24(v26, v25);
        break;
      case 2uLL:
        uint64_t v29 = *(void *)(v26 + 16);
        uint64_t v28 = *(void *)(v26 + 24);
        uint64_t v27 = v28 - v29;
        if (!__OFSUB__(v28, v29)) {
          goto LABEL_35;
        }
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        __break(1u);
LABEL_108:
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
        goto LABEL_113;
      case 3uLL:
        break;
      default:
        uint64_t v27 = BYTE6(v25);
        break;
    }
    size_t v30 = v88;
    switch((int)v22)
    {
      case 1:
        size_t v30 = v83;
        if (v84) {
          goto LABEL_107;
        }
        goto LABEL_40;
      case 2:
        uint64_t v32 = *(void *)(v18 + 16);
        uint64_t v31 = *(void *)(v18 + 24);
        BOOL v33 = __OFSUB__(v31, v32);
        size_t v30 = v31 - v32;
        if (!v33) {
          goto LABEL_40;
        }
        goto LABEL_108;
      case 3:
        if (v27) {
          goto LABEL_28;
        }
        goto LABEL_97;
      default:
LABEL_40:
        if (v27 != v30)
        {
LABEL_28:
          sub_1000094D4(v26, v25);
          sub_1000094D4(v26, v25);
          goto LABEL_29;
        }
        if (v27 >= 1)
        {
          switch(v25 >> 62)
          {
            case 1uLL:
              if (v26 >> 32 < (int)v26) {
                goto LABEL_109;
              }
              sub_100008D24(v18, v17);
              sub_100008D24(v26, v25);
              uint64_t v47 = sub_1005E0550();
              if (!v47) {
                goto LABEL_69;
              }
              uint64_t v48 = sub_1005E0580();
              if (__OFSUB__((int)v26, v48)) {
                goto LABEL_112;
              }
              v47 += (int)v26 - v48;
LABEL_69:
              sub_1005E0570();
              sub_1000260B8(v47, v18, v17, __s1);
              sub_1000094D4(v26, v25);
              goto LABEL_70;
            case 2uLL:
              uint64_t v39 = *(void *)(v26 + 16);
              uint64_t v38 = *(void *)(v26 + 24);
              sub_100008D24(v18, v17);
              swift_retain();
              swift_retain();
              uint64_t v40 = sub_1005E0550();
              if (!v40) {
                goto LABEL_53;
              }
              uint64_t v41 = sub_1005E0580();
              if (__OFSUB__(v39, v41)) {
                goto LABEL_111;
              }
              v40 += v39 - v41;
LABEL_53:
              if (__OFSUB__(v38, v39)) {
                goto LABEL_110;
              }
              sub_1005E0570();
              sub_1000260B8(v40, v18, v17, __s1);
              swift_release();
              swift_release();
LABEL_70:
              sub_1000094D4(v18, v17);
              sub_1000094D4(v26, v25);
              sub_1000094D4(v26, v25);
              uint64_t v2 = v82;
              uint64_t v7 = v85;
              if (__s1[0]) {
                goto LABEL_98;
              }
              break;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              if (!v22)
              {
                __int16 __s2 = v18;
                char v90 = BYTE2(v18);
                char v91 = BYTE3(v18);
                char v92 = v75;
                char v93 = BYTE5(v18);
                char v94 = BYTE6(v18);
                char v95 = HIBYTE(v18);
                __int16 v96 = v17;
                char v97 = BYTE2(v17);
                char v98 = BYTE3(v17);
                char v99 = BYTE4(v17);
                char v100 = BYTE5(v17);
                int v49 = memcmp(__s1, &__s2, v88);
                goto LABEL_74;
              }
              if (v22 == 1)
              {
                if (v74 < v78) {
                  goto LABEL_114;
                }
                sub_100008D24(v18, v17);
                uint64_t v42 = sub_1005E0550();
                if (!v42) {
                  goto LABEL_124;
                }
                uint64_t v35 = v42;
                uint64_t v43 = sub_1005E0580();
                uint64_t v37 = v78 - v43;
                if (__OFSUB__(v78, v43)) {
                  goto LABEL_118;
                }
                goto LABEL_60;
              }
              uint64_t v51 = *(void *)(v18 + 16);
              uint64_t v50 = *(void *)(v18 + 24);
              sub_100008D24(v18, v17);
              swift_retain();
              swift_retain();
              uint64_t v52 = (char *)sub_1005E0550();
              if (v52)
              {
                uint64_t v53 = sub_1005E0580();
                if (__OFSUB__(v51, v53)) {
                  goto LABEL_120;
                }
                v52 += v51 - v53;
              }
              BOOL v33 = __OFSUB__(v50, v51);
              int64_t v54 = v50 - v51;
              if (v33) {
                goto LABEL_117;
              }
              uint64_t v55 = sub_1005E0570();
              if (!v52) {
                goto LABEL_126;
              }
              goto LABEL_87;
            default:
              *(void *)__s1 = v26;
              *(_WORD *)&__s1[8] = v25;
              __s1[10] = BYTE2(v25);
              __s1[11] = BYTE3(v25);
              __s1[12] = BYTE4(v25);
              __s1[13] = BYTE5(v25);
              if (v22)
              {
                if (v22 == 1)
                {
                  if (v74 < v78) {
                    goto LABEL_115;
                  }
                  swift_retain();
                  uint64_t v34 = sub_1005E0550();
                  if (!v34) {
                    goto LABEL_125;
                  }
                  uint64_t v35 = v34;
                  uint64_t v36 = sub_1005E0580();
                  uint64_t v37 = v78 - v36;
                  if (__OFSUB__(v78, v36)) {
                    goto LABEL_119;
                  }
LABEL_60:
                  uint64_t v44 = sub_1005E0570();
                  if (v44 >= v73) {
                    size_t v45 = v73;
                  }
                  else {
                    size_t v45 = v44;
                  }
                  int v46 = memcmp(__s1, (const void *)(v35 + v37), v45);
                  sub_1000094D4(v18, v17);
                  sub_1000094D4(v26, v25);
                  sub_1000094D4(v26, v25);
                  uint64_t v7 = v85;
                  if (!v46) {
                    goto LABEL_98;
                  }
                }
                else
                {
                  uint64_t v57 = *(void *)(v18 + 16);
                  uint64_t v56 = *(void *)(v18 + 24);
                  sub_100008D24(v18, v17);
                  swift_retain();
                  swift_retain();
                  uint64_t v52 = (char *)sub_1005E0550();
                  if (v52)
                  {
                    uint64_t v58 = sub_1005E0580();
                    if (__OFSUB__(v57, v58)) {
                      goto LABEL_121;
                    }
                    v52 += v57 - v58;
                  }
                  BOOL v33 = __OFSUB__(v56, v57);
                  int64_t v54 = v56 - v57;
                  if (v33) {
                    goto LABEL_116;
                  }
                  uint64_t v55 = sub_1005E0570();
                  if (!v52)
                  {
                    __break(1u);
LABEL_124:
                    sub_1005E0570();
                    __break(1u);
LABEL_125:
                    sub_1005E0570();
                    __break(1u);
LABEL_126:
                    __break(1u);
LABEL_127:
                    swift_willThrow();
                    swift_errorRelease();
                    __break(1u);
                    swift_errorRelease();
                    swift_slowDealloc();
                    __break(1u);
                    JUMPOUT(0x1000CF480);
                  }
LABEL_87:
                  if (v55 >= v54) {
                    size_t v59 = v54;
                  }
                  else {
                    size_t v59 = v55;
                  }
                  int v60 = memcmp(__s1, v52, v59);
                  swift_release();
                  swift_release();
                  sub_1000094D4(v18, v17);
                  sub_1000094D4(v26, v25);
                  sub_1000094D4(v26, v25);
                  uint64_t v2 = v82;
                  uint64_t v7 = v85;
                  if (!v60) {
                    goto LABEL_98;
                  }
                }
              }
              else
              {
                __int16 __s2 = v18;
                char v90 = BYTE2(v18);
                char v91 = BYTE3(v18);
                char v92 = v75;
                char v93 = BYTE5(v18);
                char v94 = BYTE6(v18);
                char v95 = HIBYTE(v18);
                __int16 v96 = v17;
                char v97 = BYTE2(v17);
                char v98 = BYTE3(v17);
                char v99 = BYTE4(v17);
                char v100 = BYTE5(v17);
                int v49 = memcmp(__s1, &__s2, v88);
                sub_1000094D4(v18, v17);
LABEL_74:
                sub_1000094D4(v26, v25);
                sub_1000094D4(v26, v25);
                if (!v49) {
                  goto LABEL_98;
                }
              }
              break;
          }
LABEL_29:
          unint64_t v21 = (v21 + 1) & v87;
          if (((*(void *)&v7[(v21 >> 3) & 0xFFFFFFFFFFFFFF8] >> v21) & 1) == 0) {
            goto LABEL_6;
          }
          continue;
        }
LABEL_97:
        sub_1000094D4(v26, v25);
        sub_1000094D4(v26, v25);
LABEL_98:
        uint64_t isStackAllocationSafe = sub_1000094D4(v18, v17);
        v102[0] = v77;
        v102[1] = v76;
        v102[2] = v71;
        v102[3] = v80;
        v102[4] = v79;
        char v62 = *(unsigned char *)(v2 + 32);
        unint64_t v63 = (unint64_t)((1 << v62) + 63) >> 6;
        size_t v64 = 8 * v63;
        if ((v62 & 0x3Fu) <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
        {
          __chkstk_darwin(isStackAllocationSafe);
          memcpy((char *)&v70 - ((v64 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v64);
          uint64_t v65 = v86;
          unsigned int v66 = sub_1000D01B4((unint64_t *)((char *)&v70 - ((v64 + 15) & 0x3FFFFFFFFFFFFFF0)), v63, v2, v21, v102);
          swift_release();
          if (v65) {
            goto LABEL_127;
          }
          sub_10003BC80();
          return v66;
        }
        else
        {
          unsigned int v67 = (void *)swift_slowAlloc();
          memcpy(v67, v7, v64);
          char v68 = sub_1000D01B4((unint64_t *)v67, v63, v2, v21, v102);
          swift_release();
          sub_10003BC80();
          swift_slowDealloc();
          return v68;
        }
    }
  }
}

void *sub_1000CF4B0(uint64_t a1, uint64_t a2)
{
  return sub_1000CF510(a1, a2, &qword_10070C098);
}

void *sub_1000CF510(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = a2;
  if (*(void *)(a2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v7 = a1 + 56;
    uint64_t v6 = *(void *)(a1 + 56);
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v32 = a3;
    uint64_t v33 = ~v8;
    if (-v8 < 64) {
      uint64_t v9 = ~(-1 << -(char)v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v6;
    int64_t v11 = (unint64_t)(63 - v8) >> 6;
    uint64_t v12 = a2 + 56;
    while (1)
    {
      do
      {
        if (v10)
        {
          unint64_t v13 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
          unint64_t v14 = v13 | (v5 << 6);
        }
        else
        {
          int64_t v15 = v5 + 1;
          if (__OFADD__(v5, 1))
          {
            __break(1u);
            goto LABEL_37;
          }
          if (v15 >= v11) {
            goto LABEL_35;
          }
          unint64_t v16 = *(void *)(v7 + 8 * v15);
          int64_t v17 = v5 + 1;
          if (!v16)
          {
            int64_t v17 = v5 + 2;
            if (v5 + 2 >= v11) {
              goto LABEL_35;
            }
            unint64_t v16 = *(void *)(v7 + 8 * v17);
            if (!v16)
            {
              int64_t v17 = v5 + 3;
              if (v5 + 3 >= v11) {
                goto LABEL_35;
              }
              unint64_t v16 = *(void *)(v7 + 8 * v17);
              if (!v16)
              {
                int64_t v17 = v5 + 4;
                if (v5 + 4 >= v11) {
                  goto LABEL_35;
                }
                unint64_t v16 = *(void *)(v7 + 8 * v17);
                if (!v16)
                {
                  int64_t v18 = v5 + 5;
                  if (v5 + 5 >= v11)
                  {
LABEL_35:
                    swift_bridgeObjectRetain();
                    sub_10003BC80();
                    return (void *)v3;
                  }
                  unint64_t v16 = *(void *)(v7 + 8 * v18);
                  if (!v16)
                  {
                    while (1)
                    {
                      int64_t v17 = v18 + 1;
                      if (__OFADD__(v18, 1)) {
                        break;
                      }
                      if (v17 >= v11) {
                        goto LABEL_35;
                      }
                      unint64_t v16 = *(void *)(v7 + 8 * v17);
                      ++v18;
                      if (v16) {
                        goto LABEL_23;
                      }
                    }
LABEL_37:
                    __break(1u);
                  }
                  int64_t v17 = v5 + 5;
                }
              }
            }
          }
LABEL_23:
          unint64_t v10 = (v16 - 1) & v16;
          unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
          int64_t v5 = v17;
        }
        Swift::UInt32 v19 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v14);
        sub_1005E33F0();
        sub_1005E3440(v19);
        Swift::Int v20 = sub_1005E3470();
        uint64_t v21 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v22 = v20 & ~v21;
      }
      while (((*(void *)(v12 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0);
      uint64_t v23 = *(void *)(v3 + 48);
      if (*(_DWORD *)(v23 + 4 * v22) == v19) {
        break;
      }
      while (1)
      {
        unint64_t v22 = (v22 + 1) & ~v21;
        if (((*(void *)(v12 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
          break;
        }
        if (*(_DWORD *)(v23 + 4 * v22) == v19) {
          goto LABEL_28;
        }
      }
    }
LABEL_28:
    v34[0] = a1;
    v34[1] = v7;
    v34[2] = v33;
    v34[3] = v5;
    v34[4] = v10;
    unint64_t v24 = (unint64_t)(63 - v21) >> 6;
    size_t v25 = 8 * v24;
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v24 < 0x81 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      uint64_t v28 = (char *)&v32 - v27;
      memcpy((char *)&v32 - v27, (const void *)(v3 + 56), v25);
      Swift::Int v29 = sub_1000D0BB0((Swift::Int)v28, v24, v3, v22, v34, v32);
      swift_release();
      sub_10003BC80();
    }
    else
    {
      size_t v30 = (void *)swift_slowAlloc();
      memcpy(v30, (const void *)(v3 + 56), v25);
      Swift::Int v29 = sub_1000D0BB0((Swift::Int)v30, v24, v3, v22, v34, v32);
      swift_release();
      sub_10003BC80();
      swift_slowDealloc();
    }
    return (void *)v29;
  }
  else
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
}

void *sub_1000CF8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    uint64_t v5 = a1 + 56;
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v42 = ~v6;
    if (-v6 < 64) {
      uint64_t v7 = ~(-1 << -(char)v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v4;
    int64_t v43 = (unint64_t)(63 - v6) >> 6;
    uint64_t v9 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v10 = 0;
    do
    {
LABEL_6:
      if (v8)
      {
        unint64_t v11 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          goto LABEL_53;
        }
        if (v13 >= v43) {
          goto LABEL_51;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v13);
        int64_t v15 = v10 + 1;
        if (!v14)
        {
          int64_t v15 = v10 + 2;
          if (v10 + 2 >= v43) {
            goto LABEL_51;
          }
          unint64_t v14 = *(void *)(v5 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v10 + 3;
            if (v10 + 3 >= v43) {
              goto LABEL_51;
            }
            unint64_t v14 = *(void *)(v5 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v10 + 4;
              if (v10 + 4 >= v43) {
                goto LABEL_51;
              }
              unint64_t v14 = *(void *)(v5 + 8 * v15);
              if (!v14)
              {
                int64_t v16 = v10 + 5;
                if (v10 + 5 >= v43)
                {
LABEL_51:
                  sub_10003BC80();
                  return (void *)v2;
                }
                unint64_t v14 = *(void *)(v5 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      break;
                    }
                    if (v15 >= v43) {
                      goto LABEL_51;
                    }
                    unint64_t v14 = *(void *)(v5 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_23;
                    }
                  }
LABEL_53:
                  __break(1u);
                }
                int64_t v15 = v10 + 5;
              }
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        int64_t v10 = v15;
      }
      int64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
      uint64_t v19 = *v17;
      Swift::UInt v18 = v17[1];
      sub_1005E33F0();
      sub_1005E3410(v18);
      Swift::Int isStackAllocationSafe = sub_1005E3470();
      char v21 = *(unsigned char *)(v2 + 32);
      uint64_t v22 = -1 << v21;
      unint64_t v23 = isStackAllocationSafe & ~(-1 << v21);
    }
    while (((*(void *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0);
    unsigned int v24 = v21 & 0x3F;
    uint64_t v25 = ~v22;
    while (1)
    {
      uint64_t v26 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v23);
      if (v26[1] == v18)
      {
        uint64_t v27 = *v26;
        uint64_t v28 = *(void *)(v27 + 16);
        if (v28 == *(void *)(v19 + 16))
        {
          if (v28) {
            BOOL v29 = v27 == v19;
          }
          else {
            BOOL v29 = 1;
          }
          if (v29) {
            goto LABEL_44;
          }
          if (*(unsigned __int8 *)(v27 + 32) == *(unsigned __int8 *)(v19 + 32))
          {
            if (v28 == 1) {
              goto LABEL_44;
            }
            if (*(unsigned __int8 *)(v27 + 33) == *(unsigned __int8 *)(v19 + 33))
            {
              if (v28 == 2) {
                goto LABEL_44;
              }
              if (*(unsigned __int8 *)(v27 + 34) == *(unsigned __int8 *)(v19 + 34))
              {
                if (v28 == 3) {
                  goto LABEL_44;
                }
                if (*(unsigned __int8 *)(v27 + 35) == *(unsigned __int8 *)(v19 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_26:
      unint64_t v23 = (v23 + 1) & v25;
      if (((*(void *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
        goto LABEL_6;
      }
    }
    size_t v30 = (unsigned __int8 *)(v27 + 36);
    uint64_t v31 = v28 - 4;
    uint64_t v32 = (unsigned __int8 *)(v19 + 36);
    while (v31)
    {
      int v34 = *v30++;
      int v33 = v34;
      int v35 = *v32++;
      --v31;
      if (v33 != v35) {
        goto LABEL_26;
      }
    }
LABEL_44:
    v44[0] = a1;
    v44[1] = v5;
    v44[2] = v42;
    v44[3] = v10;
    v44[4] = v8;
    unint64_t v36 = (unint64_t)((1 << v24) + 63) >> 6;
    if (v24 <= 0xD || (Swift::Int isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      uint64_t v38 = (char *)&v42 - v37;
      memcpy((char *)&v42 - v37, (const void *)(v2 + 56), 8 * v36);
      Swift::Int v39 = sub_1000D0E14((Swift::Int)v38, v36, v2, v23, v44);
      swift_release();
      sub_10003BC80();
    }
    else
    {
      uint64_t v40 = (void *)swift_slowAlloc();
      memcpy(v40, (const void *)(v2 + 56), 8 * v36);
      Swift::Int v39 = sub_1000D0E14((Swift::Int)v40, v36, v2, v23, v44);
      swift_release();
      sub_10003BC80();
      swift_slowDealloc();
    }
    return (void *)v39;
  }
  else
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
}

void *sub_1000CFD38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    uint64_t v5 = a1 + 56;
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v43 = ~v6;
    if (-v6 < 64) {
      uint64_t v7 = ~(-1 << -(char)v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v4;
    int64_t v44 = (unint64_t)(63 - v6) >> 6;
    uint64_t v9 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v10 = 0;
    do
    {
LABEL_6:
      if (v8)
      {
        unint64_t v11 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          goto LABEL_53;
        }
        if (v13 >= v44) {
          goto LABEL_51;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v13);
        int64_t v15 = v10 + 1;
        if (!v14)
        {
          int64_t v15 = v10 + 2;
          if (v10 + 2 >= v44) {
            goto LABEL_51;
          }
          unint64_t v14 = *(void *)(v5 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v10 + 3;
            if (v10 + 3 >= v44) {
              goto LABEL_51;
            }
            unint64_t v14 = *(void *)(v5 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v10 + 4;
              if (v10 + 4 >= v44) {
                goto LABEL_51;
              }
              unint64_t v14 = *(void *)(v5 + 8 * v15);
              if (!v14)
              {
                int64_t v16 = v10 + 5;
                if (v10 + 5 >= v44)
                {
LABEL_51:
                  sub_10003BC80();
                  return (void *)v2;
                }
                unint64_t v14 = *(void *)(v5 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      break;
                    }
                    if (v15 >= v44) {
                      goto LABEL_51;
                    }
                    unint64_t v14 = *(void *)(v5 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_23;
                    }
                  }
LABEL_53:
                  __break(1u);
                }
                int64_t v15 = v10 + 5;
              }
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        int64_t v10 = v15;
      }
      uint64_t v17 = *(void *)(a1 + 48) + 16 * v12;
      uint64_t v18 = *(void *)v17;
      uint64_t v19 = *(unsigned int *)(v17 + 8);
      sub_1005E33F0();
      Swift::UInt v20 = v19 | (v19 << 32);
      sub_1005E3410(v20);
      Swift::Int isStackAllocationSafe = sub_1005E3470();
      char v22 = *(unsigned char *)(v2 + 32);
      uint64_t v23 = -1 << v22;
      unint64_t v24 = isStackAllocationSafe & ~(-1 << v22);
    }
    while (((*(void *)(v9 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0);
    unsigned int v25 = v22 & 0x3F;
    uint64_t v26 = ~v23;
    while (1)
    {
      uint64_t v27 = *(void *)(v2 + 48) + 16 * v24;
      if ((*(unsigned int *)(v27 + 8) | ((unint64_t)*(unsigned int *)(v27 + 8) << 32)) == v20)
      {
        uint64_t v28 = *(void *)v27;
        uint64_t v29 = *(void *)(v28 + 16);
        if (v29 == *(void *)(v18 + 16))
        {
          if (v29) {
            BOOL v30 = v28 == v18;
          }
          else {
            BOOL v30 = 1;
          }
          if (v30) {
            goto LABEL_44;
          }
          if (*(unsigned __int8 *)(v28 + 32) == *(unsigned __int8 *)(v18 + 32))
          {
            if (v29 == 1) {
              goto LABEL_44;
            }
            if (*(unsigned __int8 *)(v28 + 33) == *(unsigned __int8 *)(v18 + 33))
            {
              if (v29 == 2) {
                goto LABEL_44;
              }
              if (*(unsigned __int8 *)(v28 + 34) == *(unsigned __int8 *)(v18 + 34))
              {
                if (v29 == 3) {
                  goto LABEL_44;
                }
                if (*(unsigned __int8 *)(v28 + 35) == *(unsigned __int8 *)(v18 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_26:
      unint64_t v24 = (v24 + 1) & v26;
      if (((*(void *)(v9 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
        goto LABEL_6;
      }
    }
    uint64_t v31 = (unsigned __int8 *)(v28 + 36);
    uint64_t v32 = v29 - 4;
    int v33 = (unsigned __int8 *)(v18 + 36);
    while (v32)
    {
      int v35 = *v31++;
      int v34 = v35;
      int v36 = *v33++;
      --v32;
      if (v34 != v36) {
        goto LABEL_26;
      }
    }
LABEL_44:
    v45[0] = a1;
    v45[1] = v5;
    v45[2] = v43;
    v45[3] = v10;
    v45[4] = v8;
    unint64_t v37 = (unint64_t)((1 << v25) + 63) >> 6;
    if (v25 <= 0xD || (Swift::Int isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      Swift::Int v39 = (char *)&v43 - v38;
      memcpy((char *)&v43 - v38, (const void *)(v2 + 56), 8 * v37);
      Swift::Int v40 = sub_1000D112C((Swift::Int)v39, v37, v2, v24, v45);
      swift_release();
      sub_10003BC80();
    }
    else
    {
      uint64_t v41 = (void *)swift_slowAlloc();
      memcpy(v41, (const void *)(v2 + 56), 8 * v37);
      Swift::Int v40 = sub_1000D112C((Swift::Int)v41, v37, v2, v24, v45);
      swift_release();
      sub_10003BC80();
      swift_slowDealloc();
    }
    return (void *)v40;
  }
  else
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
}

void *sub_1000D01B4(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5 = a3;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v69 = a5;
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v7 = v6 - 1;
  uint64_t v8 = a3 + 56;
  uint64_t v72 = a3 + 56;
LABEL_2:
  uint64_t v67 = v7;
  while (1)
  {
LABEL_4:
    int64_t v10 = a5[3];
    unint64_t v9 = a5[4];
    if (v9)
    {
      uint64_t v11 = (v9 - 1) & v9;
      unint64_t v12 = __clz(__rbit64(v9)) | (v10 << 6);
      goto LABEL_22;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_111;
    }
    int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
    if (v13 >= v14) {
      break;
    }
    uint64_t v15 = a5[1];
    unint64_t v16 = *(void *)(v15 + 8 * v13);
    if (!v16)
    {
      if (v10 + 2 >= v14) {
        goto LABEL_100;
      }
      unint64_t v16 = *(void *)(v15 + 8 * (v10 + 2));
      if (v16)
      {
        int64_t v13 = v10 + 2;
      }
      else
      {
        int64_t v17 = v10 + 3;
        if (v10 + 3 >= v14)
        {
          int64_t v13 = v10 + 2;
          goto LABEL_100;
        }
        unint64_t v16 = *(void *)(v15 + 8 * v17);
        if (v16)
        {
          int64_t v13 = v10 + 3;
        }
        else
        {
          int64_t v13 = v10 + 4;
          if (v10 + 4 >= v14)
          {
LABEL_106:
            int64_t v13 = v17;
            goto LABEL_100;
          }
          unint64_t v16 = *(void *)(v15 + 8 * v13);
          if (!v16)
          {
            int64_t v13 = v14 - 1;
            int64_t v18 = v10 + 5;
            do
            {
              if (v14 == v18) {
                goto LABEL_100;
              }
              unint64_t v16 = *(void *)(v15 + 8 * v18++);
            }
            while (!v16);
            int64_t v13 = v18 - 1;
          }
        }
      }
    }
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
    int64_t v10 = v13;
LABEL_22:
    uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
    uint64_t v20 = *v19;
    unint64_t v21 = v19[1];
    a5[3] = v10;
    a5[4] = v11;
    sub_1005E33F0();
    sub_100008D24(v20, v21);
    sub_100008D24(v20, v21);
    sub_1005E08B0();
    sub_1000094D4(v20, v21);
    Swift::Int v22 = sub_1005E3470();
    uint64_t v23 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v24 = v22 & ~v23;
    if ((*(void *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24))
    {
      uint64_t v75 = ~v23;
      BOOL v25 = __OFSUB__(HIDWORD(v20), v20);
      BOOL v73 = v25;
      unint64_t v76 = v21 >> 62;
      uint64_t v70 = v20 >> 32;
      while (2)
      {
        uint64_t v26 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v24);
        uint64_t v28 = *v26;
        unint64_t v27 = v26[1];
        uint64_t v29 = 0;
        switch(v27 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v28), v28)) {
              goto LABEL_103;
            }
            uint64_t v29 = HIDWORD(v28) - (int)v28;
LABEL_35:
            sub_100008D24(v28, v27);
            sub_100008D24(v28, v27);
            break;
          case 2uLL:
            uint64_t v31 = *(void *)(v28 + 16);
            uint64_t v30 = *(void *)(v28 + 24);
            uint64_t v29 = v30 - v31;
            if (!__OFSUB__(v30, v31)) {
              goto LABEL_35;
            }
            __break(1u);
LABEL_103:
            __break(1u);
LABEL_104:
            __break(1u);
LABEL_105:
            __break(1u);
            goto LABEL_106;
          case 3uLL:
            break;
          default:
            uint64_t v29 = BYTE6(v27);
            break;
        }
        uint64_t v32 = BYTE6(v21);
        switch((int)v76)
        {
          case 1:
            uint64_t v32 = HIDWORD(v20) - (int)v20;
            if (v73) {
              goto LABEL_105;
            }
            goto LABEL_40;
          case 2:
            uint64_t v34 = *(void *)(v20 + 16);
            uint64_t v33 = *(void *)(v20 + 24);
            BOOL v35 = __OFSUB__(v33, v34);
            uint64_t v32 = v33 - v34;
            if (!v35) {
              goto LABEL_40;
            }
            goto LABEL_104;
          case 3:
            if (v29) {
              goto LABEL_28;
            }
            goto LABEL_94;
          default:
LABEL_40:
            if (v29 != v32)
            {
LABEL_28:
              sub_1000094D4(v28, v27);
              sub_1000094D4(v28, v27);
              goto LABEL_29;
            }
            if (v29 >= 1)
            {
              switch(v27 >> 62)
              {
                case 1uLL:
                  if (v28 >> 32 < (int)v28)
                  {
                    __break(1u);
LABEL_108:
                    __break(1u);
LABEL_109:
                    __break(1u);
LABEL_110:
                    __break(1u);
LABEL_111:
                    __break(1u);
LABEL_112:
                    __break(1u);
LABEL_113:
                    __break(1u);
LABEL_114:
                    __break(1u);
LABEL_115:
                    __break(1u);
LABEL_116:
                    __break(1u);
LABEL_117:
                    __break(1u);
LABEL_118:
                    __break(1u);
LABEL_119:
                    __break(1u);
LABEL_120:
                    __break(1u);
LABEL_121:
                    __break(1u);
LABEL_122:
                    __break(1u);
LABEL_123:
                    sub_1005E0570();
                    __break(1u);
LABEL_124:
                    sub_1005E0570();
                    __break(1u);
                  }
                  sub_100008D24(v20, v21);
                  sub_100008D24(v28, v27);
                  uint64_t v49 = sub_1005E0550();
                  if (v49)
                  {
                    uint64_t v50 = sub_1005E0580();
                    if (__OFSUB__((int)v28, v50)) {
                      goto LABEL_110;
                    }
                    v49 += (int)v28 - v50;
                  }
                  sub_1005E0570();
                  sub_1000260B8(v49, v20, v21, __s1);
                  uint64_t v8 = v72;
                  if (v74) {
                    goto LABEL_126;
                  }
                  sub_1000094D4(v28, v27);
                  sub_1000094D4(v20, v21);
                  sub_1000094D4(v28, v27);
                  sub_1000094D4(v28, v27);
                  uint64_t v5 = a3;
                  if (__s1[0]) {
                    goto LABEL_95;
                  }
                  break;
                case 2uLL:
                  uint64_t v41 = *(void *)(v28 + 16);
                  uint64_t v40 = *(void *)(v28 + 24);
                  sub_100008D24(v20, v21);
                  swift_retain();
                  swift_retain();
                  uint64_t v42 = sub_1005E0550();
                  if (!v42) {
                    goto LABEL_53;
                  }
                  uint64_t v43 = sub_1005E0580();
                  if (__OFSUB__(v41, v43)) {
                    goto LABEL_109;
                  }
                  v42 += v41 - v43;
LABEL_53:
                  if (__OFSUB__(v40, v41)) {
                    goto LABEL_108;
                  }
                  sub_1005E0570();
                  sub_1000260B8(v42, v20, v21, __s1);
                  if (v74)
                  {
                    swift_release();
                    swift_release();
                    __break(1u);
LABEL_126:
                    sub_1000094D4(v28, v27);
                    __break(1u);
                    JUMPOUT(0x1000D0B80);
                  }
                  swift_release();
                  swift_release();
                  sub_1000094D4(v20, v21);
                  sub_1000094D4(v28, v27);
                  sub_1000094D4(v28, v27);
                  uint64_t v5 = a3;
                  uint64_t v8 = v72;
                  if (__s1[0]) {
                    goto LABEL_95;
                  }
                  break;
                case 3uLL:
                  *(void *)&__s1[6] = 0;
                  *(void *)__s1 = 0;
                  if (!v76)
                  {
                    uint64_t __s2 = v20;
                    __int16 v78 = v21;
                    char v79 = BYTE2(v21);
                    char v80 = BYTE3(v21);
                    char v81 = BYTE4(v21);
                    char v82 = BYTE5(v21);
                    int v51 = memcmp(__s1, &__s2, BYTE6(v21));
                    goto LABEL_76;
                  }
                  if (v76 == 1)
                  {
                    if (v70 < (int)v20) {
                      goto LABEL_113;
                    }
                    sub_100008D24(v20, v21);
                    uint64_t v44 = sub_1005E0550();
                    if (!v44) {
                      goto LABEL_123;
                    }
                    uint64_t v37 = v44;
                    uint64_t v45 = sub_1005E0580();
                    uint64_t v39 = (int)v20 - v45;
                    if (__OFSUB__((int)v20, v45)) {
                      goto LABEL_116;
                    }
                    goto LABEL_62;
                  }
                  uint64_t v53 = *(void *)(v20 + 16);
                  uint64_t v52 = *(void *)(v20 + 24);
                  sub_100008D24(v20, v21);
                  swift_retain();
                  swift_retain();
                  int64_t v54 = (char *)sub_1005E0550();
                  if (v54)
                  {
                    uint64_t v55 = sub_1005E0580();
                    if (__OFSUB__(v53, v55)) {
                      goto LABEL_118;
                    }
                    v54 += v53 - v55;
                  }
                  BOOL v35 = __OFSUB__(v52, v53);
                  int64_t v56 = v52 - v53;
                  if (v35) {
                    goto LABEL_114;
                  }
                  uint64_t v57 = sub_1005E0570();
                  if (!v54) {
                    goto LABEL_121;
                  }
                  goto LABEL_89;
                default:
                  *(void *)__s1 = v28;
                  *(_WORD *)&__s1[8] = v27;
                  __s1[10] = BYTE2(v27);
                  __s1[11] = BYTE3(v27);
                  __s1[12] = BYTE4(v27);
                  __s1[13] = BYTE5(v27);
                  if (v76)
                  {
                    if (v76 == 1)
                    {
                      if (v70 < (int)v20) {
                        goto LABEL_112;
                      }
                      swift_retain();
                      uint64_t v36 = sub_1005E0550();
                      if (!v36) {
                        goto LABEL_124;
                      }
                      uint64_t v37 = v36;
                      uint64_t v38 = sub_1005E0580();
                      uint64_t v39 = (int)v20 - v38;
                      if (__OFSUB__((int)v20, v38)) {
                        goto LABEL_117;
                      }
LABEL_62:
                      uint64_t v46 = sub_1005E0570();
                      if (v46 >= (v20 >> 32) - (int)v20) {
                        size_t v47 = (v20 >> 32) - (int)v20;
                      }
                      else {
                        size_t v47 = v46;
                      }
                      int v48 = memcmp(__s1, (const void *)(v37 + v39), v47);
                      sub_1000094D4(v20, v21);
                      sub_1000094D4(v28, v27);
                      sub_1000094D4(v28, v27);
                      uint64_t v8 = v72;
                      if (!v48) {
                        goto LABEL_95;
                      }
                    }
                    else
                    {
                      uint64_t v59 = *(void *)(v20 + 16);
                      uint64_t v58 = *(void *)(v20 + 24);
                      sub_100008D24(v20, v21);
                      swift_retain();
                      swift_retain();
                      int64_t v54 = (char *)sub_1005E0550();
                      if (v54)
                      {
                        uint64_t v60 = sub_1005E0580();
                        if (__OFSUB__(v59, v60)) {
                          goto LABEL_119;
                        }
                        v54 += v59 - v60;
                      }
                      BOOL v35 = __OFSUB__(v58, v59);
                      int64_t v56 = v58 - v59;
                      if (v35) {
                        goto LABEL_115;
                      }
                      uint64_t v57 = sub_1005E0570();
                      if (!v54) {
                        goto LABEL_122;
                      }
LABEL_89:
                      if (v57 >= v56) {
                        size_t v61 = v56;
                      }
                      else {
                        size_t v61 = v57;
                      }
                      int v62 = memcmp(__s1, v54, v61);
                      swift_release();
                      swift_release();
                      sub_1000094D4(v20, v21);
                      sub_1000094D4(v28, v27);
                      sub_1000094D4(v28, v27);
                      uint64_t v5 = a3;
                      uint64_t v8 = v72;
                      if (!v62) {
                        goto LABEL_95;
                      }
                    }
                  }
                  else
                  {
                    uint64_t __s2 = v20;
                    __int16 v78 = v21;
                    char v79 = BYTE2(v21);
                    char v80 = BYTE3(v21);
                    char v81 = BYTE4(v21);
                    char v82 = BYTE5(v21);
                    int v51 = memcmp(__s1, &__s2, BYTE6(v21));
                    sub_1000094D4(v20, v21);
LABEL_76:
                    sub_1000094D4(v28, v27);
                    sub_1000094D4(v28, v27);
                    if (!v51) {
                      goto LABEL_95;
                    }
                  }
                  break;
              }
LABEL_29:
              unint64_t v24 = (v24 + 1) & v75;
              if (((*(void *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
                goto LABEL_3;
              }
              continue;
            }
LABEL_94:
            sub_1000094D4(v28, v27);
            sub_1000094D4(v28, v27);
LABEL_95:
            sub_1000094D4(v20, v21);
            uint64_t v63 = (v24 >> 3) & 0x1FFFFFFFFFFFFFF8;
            a5 = v69;
            uint64_t v64 = *(unint64_t *)((char *)a1 + v63);
            *(unint64_t *)((char *)a1 + v63) = v64 & ~(1 << v24);
            if ((v64 & (1 << v24)) == 0) {
              goto LABEL_4;
            }
            uint64_t v7 = v67 - 1;
            if (__OFSUB__(v67, 1)) {
              goto LABEL_120;
            }
            if (v67 == 1) {
              return &_swiftEmptySetSingleton;
            }
            break;
        }
        goto LABEL_2;
      }
    }
LABEL_3:
    sub_1000094D4(v20, v21);
    a5 = v69;
  }
  int64_t v13 = a5[3];
LABEL_100:
  a5[3] = v13;
  a5[4] = 0;
  swift_retain();
  return (void *)sub_1000D1450(a1, a2, v67, v5);
}

Swift::Int sub_1000D0BB0(Swift::Int result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, uint64_t *a6)
{
  uint64_t v8 = (unint64_t *)result;
  uint64_t v9 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v10 = v9 - 1;
  uint64_t v11 = a3 + 56;
  while (1)
  {
    int64_t v16 = a5[3];
    unint64_t v17 = a5[4];
    if (!v17) {
      break;
    }
    uint64_t v18 = (v17 - 1) & v17;
    unint64_t v19 = __clz(__rbit64(v17)) | (v16 << 6);
LABEL_22:
    Swift::UInt32 v26 = *(_DWORD *)(*(void *)(*a5 + 48) + 4 * v19);
    a5[3] = v16;
    a5[4] = v18;
    sub_1005E33F0();
    sub_1005E3440(v26);
    uint64_t result = sub_1005E3470();
    uint64_t v27 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v28 = result & ~v27;
    uint64_t v12 = v28 >> 6;
    uint64_t v13 = 1 << v28;
    if (((1 << v28) & *(void *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      uint64_t v29 = *(void *)(a3 + 48);
      if (*(_DWORD *)(v29 + 4 * v28) == v26)
      {
LABEL_3:
        uint64_t v14 = v12;
        unint64_t v15 = v8[v12];
        v8[v14] = v15 & ~v13;
        if ((v13 & v15) != 0)
        {
          if (__OFSUB__(v10--, 1)) {
            goto LABEL_34;
          }
          if (!v10) {
            return (Swift::Int)&_swiftEmptySetSingleton;
          }
        }
      }
      else
      {
        for (unint64_t i = v28 + 1; ; unint64_t i = v31 + 1)
        {
          unint64_t v31 = i & ~v27;
          if (((*(void *)(v11 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
            break;
          }
          if (*(_DWORD *)(v29 + 4 * v31) == v26)
          {
            uint64_t v12 = v31 >> 6;
            uint64_t v13 = 1 << v31;
            goto LABEL_3;
          }
        }
      }
    }
  }
  int64_t v20 = v16 + 1;
  if (!__OFADD__(v16, 1))
  {
    int64_t v21 = (unint64_t)(a5[2] + 64) >> 6;
    int64_t v22 = a5[3];
    if (v20 >= v21) {
      goto LABEL_31;
    }
    uint64_t v23 = a5[1];
    unint64_t v24 = *(void *)(v23 + 8 * v20);
    if (!v24)
    {
      int64_t v22 = v16 + 1;
      if (v16 + 2 >= v21) {
        goto LABEL_31;
      }
      unint64_t v24 = *(void *)(v23 + 8 * (v16 + 2));
      if (v24)
      {
        int64_t v20 = v16 + 2;
      }
      else
      {
        int64_t v22 = v16 + 2;
        if (v16 + 3 >= v21) {
          goto LABEL_31;
        }
        unint64_t v24 = *(void *)(v23 + 8 * (v16 + 3));
        if (v24)
        {
          int64_t v20 = v16 + 3;
        }
        else
        {
          int64_t v20 = v16 + 4;
          int64_t v22 = v16 + 3;
          if (v16 + 4 >= v21) {
            goto LABEL_31;
          }
          unint64_t v24 = *(void *)(v23 + 8 * v20);
          if (!v24)
          {
            int64_t v22 = v21 - 1;
            int64_t v25 = v16 + 5;
            while (v21 != v25)
            {
              unint64_t v24 = *(void *)(v23 + 8 * v25++);
              if (v24)
              {
                int64_t v20 = v25 - 1;
                goto LABEL_21;
              }
            }
LABEL_31:
            a5[3] = v22;
            a5[4] = 0;
            swift_retain();
            return sub_1000D1704(v8, a2, v10, a3, a6);
          }
        }
      }
    }
LABEL_21:
    uint64_t v18 = (v24 - 1) & v24;
    unint64_t v19 = __clz(__rbit64(v24)) + (v20 << 6);
    int64_t v16 = v20;
    goto LABEL_22;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

Swift::Int sub_1000D0E14(Swift::Int result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = (unint64_t *)result;
  uint64_t v8 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v9 = v8 - 1;
  uint64_t v10 = a3 + 56;
  while (2)
  {
    uint64_t v42 = v9;
    while (1)
    {
LABEL_4:
      int64_t v14 = a5[3];
      unint64_t v15 = a5[4];
      if (!v15)
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        int64_t v19 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v20 = a5[3];
        if (v18 >= v19) {
          goto LABEL_47;
        }
        uint64_t v21 = a5[1];
        unint64_t v22 = *(void *)(v21 + 8 * v18);
        if (v22) {
          goto LABEL_15;
        }
        int64_t v23 = v14 + 2;
        int64_t v20 = v14 + 1;
        if (v14 + 2 >= v19) {
          goto LABEL_47;
        }
        unint64_t v22 = *(void *)(v21 + 8 * v23);
        if (!v22)
        {
          int64_t v20 = v14 + 2;
          if (v14 + 3 >= v19) {
            goto LABEL_47;
          }
          unint64_t v22 = *(void *)(v21 + 8 * (v14 + 3));
          if (v22)
          {
            int64_t v18 = v14 + 3;
            goto LABEL_15;
          }
          int64_t v23 = v14 + 4;
          int64_t v20 = v14 + 3;
          if (v14 + 4 >= v19) {
            goto LABEL_47;
          }
          unint64_t v22 = *(void *)(v21 + 8 * v23);
          if (!v22)
          {
            int64_t v18 = v14 + 5;
            int64_t v20 = v14 + 4;
            if (v14 + 5 >= v19) {
              goto LABEL_47;
            }
            unint64_t v22 = *(void *)(v21 + 8 * v18);
            if (!v22)
            {
              int64_t v20 = v19 - 1;
              int64_t v40 = v14 + 6;
              while (v19 != v40)
              {
                unint64_t v22 = *(void *)(v21 + 8 * v40++);
                if (v22)
                {
                  int64_t v18 = v40 - 1;
                  goto LABEL_15;
                }
              }
LABEL_47:
              a5[3] = v20;
              a5[4] = 0;
              swift_retain();
              return sub_1000D196C(v7, a2, v42, a3);
            }
            goto LABEL_15;
          }
        }
        int64_t v18 = v23;
LABEL_15:
        uint64_t v16 = (v22 - 1) & v22;
        unint64_t v17 = __clz(__rbit64(v22)) + (v18 << 6);
        int64_t v14 = v18;
        goto LABEL_16;
      }
      uint64_t v16 = (v15 - 1) & v15;
      unint64_t v17 = __clz(__rbit64(v15)) | (v14 << 6);
LABEL_16:
      unint64_t v24 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v17);
      uint64_t v25 = *v24;
      Swift::UInt v26 = v24[1];
      a5[3] = v14;
      a5[4] = v16;
      sub_1005E33F0();
      sub_1005E3410(v26);
      uint64_t result = sub_1005E3470();
      uint64_t v27 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v28 = result & ~v27;
      if ((*(void *)(v10 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28))
      {
        uint64_t v29 = ~v27;
        while (1)
        {
          uint64_t v30 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v28);
          if (v30[1] == v26)
          {
            uint64_t v31 = *v30;
            uint64_t v32 = *(void *)(v31 + 16);
            if (v32 == *(void *)(v25 + 16))
            {
              if (v32) {
                BOOL v33 = v31 == v25;
              }
              else {
                BOOL v33 = 1;
              }
              if (v33) {
                goto LABEL_3;
              }
              if (*(unsigned __int8 *)(v31 + 32) == *(unsigned __int8 *)(v25 + 32))
              {
                if (v32 == 1) {
                  goto LABEL_3;
                }
                if (*(unsigned __int8 *)(v31 + 33) == *(unsigned __int8 *)(v25 + 33))
                {
                  if (v32 == 2) {
                    goto LABEL_3;
                  }
                  if (*(unsigned __int8 *)(v31 + 34) == *(unsigned __int8 *)(v25 + 34))
                  {
                    if (v32 == 3) {
                      goto LABEL_3;
                    }
                    if (*(unsigned __int8 *)(v31 + 35) == *(unsigned __int8 *)(v25 + 35)) {
                      break;
                    }
                  }
                }
              }
            }
          }
LABEL_18:
          unint64_t v28 = (v28 + 1) & v29;
          if (((*(void *)(v10 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
            goto LABEL_4;
          }
        }
        uint64_t v34 = (unsigned __int8 *)(v31 + 36);
        uint64_t v35 = v32 - 4;
        uint64_t v36 = (unsigned __int8 *)(v25 + 36);
        while (v35)
        {
          int v38 = *v34++;
          int v37 = v38;
          int v39 = *v36++;
          --v35;
          if (v37 != v39) {
            goto LABEL_18;
          }
        }
LABEL_3:
        uint64_t v11 = (v28 >> 3) & 0x1FFFFFFFFFFFFFF8;
        uint64_t v12 = 1 << v28;
        uint64_t v13 = *(unint64_t *)((char *)v7 + v11);
        *(unint64_t *)((char *)v7 + v11) = v13 & ~v12;
        if ((v13 & v12) != 0) {
          break;
        }
      }
    }
    uint64_t v9 = v42 - 1;
    if (__OFSUB__(v42, 1))
    {
LABEL_49:
      __break(1u);
      return result;
    }
    if (v42 != 1) {
      continue;
    }
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
}

Swift::Int sub_1000D112C(Swift::Int result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = (unint64_t *)result;
  uint64_t v8 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v9 = v8 - 1;
  uint64_t v10 = a3 + 56;
  while (2)
  {
    uint64_t v43 = v9;
    while (1)
    {
LABEL_4:
      int64_t v14 = a5[3];
      unint64_t v15 = a5[4];
      if (!v15)
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        int64_t v19 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v20 = a5[3];
        if (v18 >= v19) {
          goto LABEL_47;
        }
        uint64_t v21 = a5[1];
        unint64_t v22 = *(void *)(v21 + 8 * v18);
        if (v22) {
          goto LABEL_15;
        }
        int64_t v23 = v14 + 2;
        int64_t v20 = v14 + 1;
        if (v14 + 2 >= v19) {
          goto LABEL_47;
        }
        unint64_t v22 = *(void *)(v21 + 8 * v23);
        if (!v22)
        {
          int64_t v20 = v14 + 2;
          if (v14 + 3 >= v19) {
            goto LABEL_47;
          }
          unint64_t v22 = *(void *)(v21 + 8 * (v14 + 3));
          if (v22)
          {
            int64_t v18 = v14 + 3;
            goto LABEL_15;
          }
          int64_t v23 = v14 + 4;
          int64_t v20 = v14 + 3;
          if (v14 + 4 >= v19) {
            goto LABEL_47;
          }
          unint64_t v22 = *(void *)(v21 + 8 * v23);
          if (!v22)
          {
            int64_t v18 = v14 + 5;
            int64_t v20 = v14 + 4;
            if (v14 + 5 >= v19) {
              goto LABEL_47;
            }
            unint64_t v22 = *(void *)(v21 + 8 * v18);
            if (!v22)
            {
              int64_t v20 = v19 - 1;
              int64_t v41 = v14 + 6;
              while (v19 != v41)
              {
                unint64_t v22 = *(void *)(v21 + 8 * v41++);
                if (v22)
                {
                  int64_t v18 = v41 - 1;
                  goto LABEL_15;
                }
              }
LABEL_47:
              a5[3] = v20;
              a5[4] = 0;
              swift_retain();
              return sub_1000D1C00(v7, a2, v43, a3);
            }
            goto LABEL_15;
          }
        }
        int64_t v18 = v23;
LABEL_15:
        uint64_t v16 = (v22 - 1) & v22;
        unint64_t v17 = __clz(__rbit64(v22)) + (v18 << 6);
        int64_t v14 = v18;
        goto LABEL_16;
      }
      uint64_t v16 = (v15 - 1) & v15;
      unint64_t v17 = __clz(__rbit64(v15)) | (v14 << 6);
LABEL_16:
      uint64_t v24 = *(void *)(*a5 + 48) + 16 * v17;
      uint64_t v25 = *(void *)v24;
      uint64_t v26 = *(unsigned int *)(v24 + 8);
      a5[3] = v14;
      a5[4] = v16;
      sub_1005E33F0();
      Swift::UInt v27 = v26 | (v26 << 32);
      sub_1005E3410(v27);
      uint64_t result = sub_1005E3470();
      uint64_t v28 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v29 = result & ~v28;
      if ((*(void *)(v10 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29))
      {
        uint64_t v30 = ~v28;
        while (1)
        {
          uint64_t v31 = *(void *)(a3 + 48) + 16 * v29;
          if ((*(unsigned int *)(v31 + 8) | ((unint64_t)*(unsigned int *)(v31 + 8) << 32)) == v27)
          {
            uint64_t v32 = *(void *)v31;
            uint64_t v33 = *(void *)(v32 + 16);
            if (v33 == *(void *)(v25 + 16))
            {
              if (v33) {
                BOOL v34 = v32 == v25;
              }
              else {
                BOOL v34 = 1;
              }
              if (v34) {
                goto LABEL_3;
              }
              if (*(unsigned __int8 *)(v32 + 32) == *(unsigned __int8 *)(v25 + 32))
              {
                if (v33 == 1) {
                  goto LABEL_3;
                }
                if (*(unsigned __int8 *)(v32 + 33) == *(unsigned __int8 *)(v25 + 33))
                {
                  if (v33 == 2) {
                    goto LABEL_3;
                  }
                  if (*(unsigned __int8 *)(v32 + 34) == *(unsigned __int8 *)(v25 + 34))
                  {
                    if (v33 == 3) {
                      goto LABEL_3;
                    }
                    if (*(unsigned __int8 *)(v32 + 35) == *(unsigned __int8 *)(v25 + 35)) {
                      break;
                    }
                  }
                }
              }
            }
          }
LABEL_18:
          unint64_t v29 = (v29 + 1) & v30;
          if (((*(void *)(v10 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
            goto LABEL_4;
          }
        }
        uint64_t v35 = (unsigned __int8 *)(v32 + 36);
        uint64_t v36 = v33 - 4;
        int v37 = (unsigned __int8 *)(v25 + 36);
        while (v36)
        {
          int v39 = *v35++;
          int v38 = v39;
          int v40 = *v37++;
          --v36;
          if (v38 != v40) {
            goto LABEL_18;
          }
        }
LABEL_3:
        uint64_t v11 = (v29 >> 3) & 0x1FFFFFFFFFFFFFF8;
        uint64_t v12 = 1 << v29;
        uint64_t v13 = *(unint64_t *)((char *)v7 + v11);
        *(unint64_t *)((char *)v7 + v11) = v13 & ~v12;
        if ((v13 & v12) != 0) {
          break;
        }
      }
    }
    uint64_t v9 = v43 - 1;
    if (__OFSUB__(v43, 1))
    {
LABEL_49:
      __break(1u);
      return result;
    }
    if (v43 != 1) {
      continue;
    }
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
}

uint64_t sub_1000D1450(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10000566C(&qword_10070C0C8);
  uint64_t result = sub_1005E2C30();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    sub_1005E33F0();
    sub_100008D24(v18, v19);
    sub_100008D24(v18, v19);
    sub_1005E08B0();
    sub_1000094D4(v18, v19);
    uint64_t result = sub_1005E3470();
    uint64_t v20 = -1 << v8[32];
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (uint64_t *)(*((void *)v8 + 6) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1000D1704(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a4;
  if (!a3)
  {
    uint64_t v10 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v10;
  }
  uint64_t v6 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v5;
  }
  sub_10000566C(a5);
  uint64_t result = sub_1005E2C30();
  uint64_t v10 = (unsigned char *)result;
  unint64_t v29 = a1;
  if (a2 < 1) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = *a1;
  }
  uint64_t v12 = 0;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    uint64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_39;
    }
    if (v16 >= a2) {
      goto LABEL_36;
    }
    unint64_t v17 = v29[v16];
    ++v12;
    if (!v17)
    {
      uint64_t v12 = v16 + 1;
      if (v16 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v17 = v29[v12];
      if (!v17)
      {
        uint64_t v12 = v16 + 2;
        if (v16 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v17 = v29[v12];
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::UInt32 v19 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v15);
    sub_1005E33F0();
    sub_1005E3440(v19);
    uint64_t result = sub_1005E3470();
    uint64_t v20 = -1 << v10[32];
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v13 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v13 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v13 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v13 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_DWORD *)(*((void *)v10 + 6) + 4 * v23) = v19;
    ++*((void *)v10 + 2);
    if (__OFSUB__(v6--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v6) {
      goto LABEL_36;
    }
  }
  uint64_t v18 = v16 + 3;
  if (v18 >= a2) {
    goto LABEL_36;
  }
  unint64_t v17 = v29[v18];
  if (v17)
  {
    uint64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= a2) {
      goto LABEL_36;
    }
    unint64_t v17 = v29[v12];
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1000D196C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10000566C(&qword_10070C0F8);
  uint64_t result = sub_1005E2C30();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    Swift::UInt v19 = v17[1];
    sub_1005E33F0();
    sub_1005E3410(v19);
    uint64_t result = sub_1005E3470();
    uint64_t v20 = -1 << v8[32];
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*((void *)v8 + 6) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    uint64_t result = swift_bridgeObjectRetain();
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1000D1C00(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    unint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10000566C(&qword_10070A0B8);
  uint64_t result = sub_1005E2C30();
  unint64_t v9 = (unsigned char *)result;
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= v32) {
      goto LABEL_36;
    }
    unint64_t v16 = v31[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= v32) {
        goto LABEL_36;
      }
      unint64_t v16 = v31[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= v32) {
          goto LABEL_36;
        }
        unint64_t v16 = v31[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v4 + 48) + 16 * v14;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(unsigned int *)(v18 + 8);
    sub_1005E33F0();
    sub_1005E3410(v20 | (v20 << 32));
    uint64_t result = sub_1005E3470();
    uint64_t v21 = -1 << v9[32];
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v29 = *((void *)v9 + 6) + 16 * v24;
    *(void *)uint64_t v29 = v19;
    *(_DWORD *)(v29 + 8) = v20;
    ++*((void *)v9 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    uint64_t result = swift_bridgeObjectRetain();
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= v32) {
    goto LABEL_36;
  }
  unint64_t v16 = v31[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v32) {
      goto LABEL_36;
    }
    unint64_t v16 = v31[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

void *sub_1000D1E88(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v54 = a4;
  uint64_t v7 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v7 - 8);
  uint64_t v48 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v53 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v47 - v13;
  if (a3)
  {
    if (*(void *)(v54 + 16) != a3)
    {
      sub_10000566C(&qword_10070C128);
      uint64_t v16 = sub_1005E2C30();
      uint64_t v15 = v16;
      uint64_t v49 = a2;
      size_t v47 = a1;
      if (a2 < 1) {
        unint64_t v17 = 0;
      }
      else {
        unint64_t v17 = *a1;
      }
      uint64_t v18 = 0;
      uint64_t v19 = v16 + 56;
      int v51 = v14;
      uint64_t v55 = v12;
      while (1)
      {
        if (v17)
        {
          unint64_t v20 = __clz(__rbit64(v17));
          v17 &= v17 - 1;
          unint64_t v21 = v20 | (v18 << 6);
        }
        else
        {
          uint64_t v22 = v18 + 1;
          if (__OFADD__(v18, 1)) {
            goto LABEL_46;
          }
          if (v22 >= v49) {
            goto LABEL_43;
          }
          unint64_t v23 = v47[v22];
          ++v18;
          if (!v23)
          {
            uint64_t v18 = v22 + 1;
            if (v22 + 1 >= v49) {
              goto LABEL_43;
            }
            unint64_t v23 = v47[v18];
            if (!v23)
            {
              uint64_t v18 = v22 + 2;
              if (v22 + 2 >= v49) {
                goto LABEL_43;
              }
              unint64_t v23 = v47[v18];
              if (!v23)
              {
                uint64_t v24 = v22 + 3;
                if (v24 >= v49) {
                  goto LABEL_43;
                }
                unint64_t v23 = v47[v24];
                if (!v23)
                {
                  while (1)
                  {
                    uint64_t v18 = v24 + 1;
                    if (__OFADD__(v24, 1)) {
                      goto LABEL_47;
                    }
                    if (v18 >= v49) {
                      goto LABEL_43;
                    }
                    unint64_t v23 = v47[v18];
                    ++v24;
                    if (v23) {
                      goto LABEL_24;
                    }
                  }
                }
                uint64_t v18 = v24;
              }
            }
          }
LABEL_24:
          unint64_t v17 = (v23 - 1) & v23;
          unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
        }
        uint64_t v25 = *(void *)(v52 + 72);
        sub_1000D85A8(*(void *)(v54 + 48) + v25 * v21, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        sub_1005E33F0();
        sub_1000D85A8((uint64_t)v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v28 = v18;
            uint64_t v29 = *((unsigned int *)v55 + 2);
            uint64_t v30 = *((void *)v55 + 2);
            sub_1005E3410(2uLL);
            Swift::UInt v31 = v29 | (v29 << 32);
            uint64_t v18 = v28;
            uint64_t v12 = v55;
            sub_1005E3410(v31);
            sub_1000D3538((uint64_t)v56, v30);
            goto LABEL_29;
          case 2u:
            uint64_t v32 = v18;
            uint64_t v33 = *((unsigned int *)v55 + 2);
            uint64_t v34 = *((void *)v55 + 2);
            sub_1005E3410(3uLL);
            Swift::UInt v35 = v33 | (v33 << 32);
            uint64_t v18 = v32;
            uint64_t v12 = v55;
            sub_1005E3410(v35);
            sub_1000D3378((uint64_t)v56, v34);
LABEL_29:
            unint64_t v14 = v51;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            break;
          case 3u:
            sub_1005E3410(1uLL);
            break;
          default:
            uint64_t v26 = v48;
            uint64_t v50 = v18;
            sub_10001FDF0((uint64_t)v12, v48, &qword_100709E38);
            sub_1005E3410(0);
            sub_10000566C(&qword_100709E60);
            sub_10001FBA4();
            sub_1005E19C0();
            uint64_t v27 = v26;
            uint64_t v18 = v50;
            unint64_t v14 = v51;
            sub_100007A48(v27, &qword_100709E38);
            break;
        }
        Swift::Int v36 = sub_1005E3470();
        uint64_t v37 = -1 << *(unsigned char *)(v15 + 32);
        unint64_t v38 = v36 & ~v37;
        unint64_t v39 = v38 >> 6;
        if (((-1 << v38) & ~*(void *)(v19 + 8 * (v38 >> 6))) != 0)
        {
          unint64_t v40 = __clz(__rbit64((-1 << v38) & ~*(void *)(v19 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
          goto LABEL_41;
        }
        char v41 = 0;
        unint64_t v42 = (unint64_t)(63 - v37) >> 6;
        do
        {
          if (++v39 == v42 && (v41 & 1) != 0)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
            JUMPOUT(0x1000D2380);
          }
          BOOL v43 = v39 == v42;
          if (v39 == v42) {
            unint64_t v39 = 0;
          }
          v41 |= v43;
          uint64_t v44 = *(void *)(v19 + 8 * v39);
        }
        while (v44 == -1);
        unint64_t v40 = __clz(__rbit64(~v44)) + (v39 << 6);
LABEL_41:
        *(void *)(v19 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
        sub_1000D8450((uint64_t)v14, *(void *)(v15 + 48) + v40 * v25, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        ++*(void *)(v15 + 16);
        if (__OFSUB__(a3--, 1)) {
          goto LABEL_45;
        }
        if (!a3)
        {
LABEL_43:
          swift_release();
          return (void *)v15;
        }
      }
    }
    return (void *)v54;
  }
  else
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
}

uint64_t sub_1000D2390(uint64_t a1)
{
  return sub_1000D23A8(a1, (uint64_t (*)(void))sub_1000936D4);
}

uint64_t sub_1000D23A8(uint64_t result, uint64_t (*a2)(void))
{
  if (!*(void *)(*(void *)v2 + 16)) {
    return result;
  }
  uint64_t v4 = result;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_6;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v9) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v9) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v9) {
            goto LABEL_24;
          }
          unint64_t v14 = *(void *)(v5 + 8 * v10);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_6:
    uint64_t result = a2(*(unsigned int *)(*(void *)(v4 + 48) + 4 * v12));
  }
  int64_t v15 = v13 + 4;
  if (v15 < v9)
  {
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v10 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_29;
        }
        if (v10 >= v9) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v10);
        ++v15;
        if (v14) {
          goto LABEL_23;
        }
      }
    }
    int64_t v10 = v15;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_1000D2530(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v8);
        if (!v14)
        {
          int64_t v8 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v8);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_6:
    Swift::UInt v11 = *(void *)(*(void *)(v2 + 48) + 16 * v10 + 8);
    uint64_t v12 = swift_bridgeObjectRetain();
    sub_10009383C(v12, v11);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v8 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v8);
        ++v15;
        if (v14) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v15;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_1000D26D4(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v8);
        if (!v14)
        {
          int64_t v8 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v8);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_6:
    unsigned int v11 = *(_DWORD *)(*(void *)(v2 + 48) + 16 * v10 + 8);
    uint64_t v12 = swift_bridgeObjectRetain();
    sub_100093A0C(v12, v11);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v8 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v8);
        ++v15;
        if (v14) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v15;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

char *sub_1000D287C(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v6 = *(void **)v4;
  int64_t v7 = *(void *)(*(void *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    unint64_t v6 = sub_100015AA0(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  uint64_t v16 = &v6[2 * a1 + 4];
  sub_10000566C(&qword_10070A0B0);
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v18 = v6[2];
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_26;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v16 + 2);
    unint64_t v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20]) {
      uint64_t result = (char *)memmove(result, v21, 16 * v20);
    }
    uint64_t v22 = v6[2];
    BOOL v19 = __OFADD__(v22, v10);
    uint64_t v23 = v22 + v10;
    if (!v19)
    {
      _OWORD v6[2] = v23;
LABEL_20:
      *uint64_t v16 = a3;
      v16[1] = a4;
      *(void *)uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_1005E3000();
  __break(1u);
  return result;
}

Swift::Int sub_1000D2A10(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1005E3210(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = *a1 + 8;
      uint64_t v86 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v88 = *(double *)(v84 + 16 * i + 8);
        uint64_t v89 = v86;
        uint64_t v90 = v85;
        do
        {
          if (*(double *)v90 >= v88) {
            break;
          }
          if (!v84) {
            goto LABEL_141;
          }
          uint64_t v91 = *(void *)(v90 + 8);
          *(_OWORD *)(v90 + 8) = *(_OWORD *)(v90 - 8);
          *(void *)(v90 - 8) = v91;
          *(double *)uint64_t v90 = v88;
          v90 -= 16;
        }
        while (!__CFADD__(v89++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  Swift::Int v6 = result;
  __int16 v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    __dst = (double *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      uint64_t v12 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      char v93 = v12;
      uint64_t v103 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v94) {
            goto LABEL_145;
          }
          __int16 v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_1000D30EC((double *)(v94 + 16 * v97), (double *)(v94 + 16 * *(void *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            __int16 v96 = sub_1000A6DE0((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_134;
          }
          char v99 = &v96[16 * v95 + 32];
          *(void *)char v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_135;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          char v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v103[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v103 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1005E2150();
    *(void *)(v8 + 16) = v7;
    uint64_t v103 = (void *)v8;
    __dst = (double *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 40;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v104 = v6;
  Swift::Int v105 = v3;
  uint64_t v106 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 16 * v10 + 8);
      double v16 = *(double *)(v11 + 16 * v14 + 8);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        unint64_t v17 = (double *)(v102 + 16 * v14);
        double v18 = v15;
        while (1)
        {
          double v19 = v18;
          double v18 = *v17;
          if (v16 < v15 == v19 >= *v17) {
            break;
          }
          ++v10;
          v17 += 2;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 16 * v10;
          uint64_t v21 = 16 * v14;
          Swift::Int v22 = v10;
          Swift::Int v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v20;
              uint64_t v25 = *(void *)(v11 + v21);
              uint64_t v26 = *(void *)(v11 + v21 + 8);
              *(_OWORD *)(v11 + v21) = *(_OWORD *)(v11 + v20 - 16);
              *(void *)(v24 - 16) = v25;
              *(void *)(v24 - 8) = v26;
            }
            ++v23;
            v20 -= 16;
            v21 += 16;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v27 >= v3) {
      Swift::Int v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      uint64_t v28 = (double *)(v11 + 16 * v10);
      do
      {
        double v29 = *(double *)(v11 + 16 * v10 + 8);
        Swift::Int v30 = v14;
        Swift::UInt v31 = v28;
        do
        {
          if (*(v31 - 1) >= v29) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          double v32 = *v31;
          *(_OWORD *)Swift::UInt v31 = *((_OWORD *)v31 - 1);
          *(v31 - 1) = v29;
          *(v31 - 2) = v32;
          v31 -= 2;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 2;
      }
      while (v10 != v27);
      Swift::Int v10 = v27;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1000A66A4(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v13 = v34 + 1;
    uint64_t v11 = v106;
    if (v34 >= v33 >> 1)
    {
      size_t v83 = sub_1000A66A4((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v106;
      uint64_t v12 = v83;
    }
    *((void *)v12 + 2) = v13;
    Swift::UInt v35 = v12 + 32;
    Swift::Int v36 = &v12[16 * v34 + 32];
    *(void *)Swift::Int v36 = v14;
    *((void *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        unint64_t v37 = v13 - 1;
        if (v13 >= 4)
        {
          unint64_t v42 = &v35[16 * v13];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_120;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_121;
          }
          unint64_t v49 = v13 - 2;
          uint64_t v50 = &v35[16 * v13 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_123;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_126;
          }
          if (v54 >= v45)
          {
            uint64_t v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_130;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v66 = *((void *)v12 + 4);
            uint64_t v67 = *((void *)v12 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_77;
          }
          uint64_t v39 = *((void *)v12 + 4);
          uint64_t v38 = *((void *)v12 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_122;
        }
        unint64_t v49 = v13 - 2;
        uint64_t v55 = &v35[16 * v13 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_125;
        }
        size_t v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_128;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_129;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_83:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v60) {
          goto LABEL_124;
        }
        char v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_127;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v77 = v12;
        __int16 v78 = &v35[16 * v76];
        uint64_t v79 = *(void *)v78;
        char v80 = &v35[16 * v37];
        uint64_t v81 = *((void *)v80 + 1);
        sub_1000D30EC((double *)(v11 + 16 * *(void *)v78), (double *)(v11 + 16 * *(void *)v80), v11 + 16 * v81, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v81 < v79) {
          goto LABEL_117;
        }
        if (v37 > *((void *)v77 + 2)) {
          goto LABEL_118;
        }
        *(void *)__int16 v78 = v79;
        *(void *)&v35[16 * v76 + 8] = v81;
        unint64_t v82 = *((void *)v77 + 2);
        if (v37 >= v82) {
          goto LABEL_119;
        }
        uint64_t v12 = v77;
        unint64_t v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((void *)v77 + 2) = v82 - 1;
        uint64_t v11 = v106;
        if (v82 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v104;
    Swift::Int v3 = v105;
    if (v10 >= v105)
    {
      uint64_t v9 = v103;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_1000D30EC(double *__src, double *a2, unint64_t a3, double *__dst)
{
  uint64_t v4 = __dst;
  Swift::Int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v25 = __src;
  uint64_t v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      double v18 = &v4[2 * v13];
      Swift::Int v23 = (char *)v18;
      uint64_t v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        double v19 = (double *)(a3 - 16);
        do
        {
          uint64_t v20 = v19 + 2;
          if (*(v6 - 1) >= *(v18 - 1))
          {
            Swift::Int v23 = (char *)(v18 - 2);
            if (v20 < v18 || v19 >= v18 || v20 != v18) {
              *(_OWORD *)double v19 = *((_OWORD *)v18 - 1);
            }
            uint64_t v21 = v6;
            v18 -= 2;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v21 = v6 - 2;
            if (v20 != v6 || v19 >= v6) {
              *(_OWORD *)double v19 = *(_OWORD *)v21;
            }
            uint64_t v25 = v6 - 2;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 2;
          Swift::Int v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      sub_1000A6AA0((void **)&v25, (const void **)&v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    Swift::Int v14 = &v4[2 * v10];
    Swift::Int v23 = (char *)v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      double v15 = v4;
      while (1)
      {
        if (v15[1] >= v6[1])
        {
          uint64_t v4 = v15 + 2;
          unint64_t v17 = v15;
          double v16 = v6;
          if (v7 == v15)
          {
            v15 += 2;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v15 += 2;
          }
        }
        else
        {
          double v16 = v6 + 2;
          unint64_t v17 = v6;
          if (v7 == v6 && v7 < v16) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 2;
        if (v15 < v14)
        {
          Swift::Int v6 = v16;
          if ((unint64_t)v16 < a3) {
            continue;
          }
        }
        uint64_t v24 = v4;
        uint64_t v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

void sub_1000D3378(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  Swift::UInt v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v16 >= v7) {
      goto LABEL_19;
    }
    unint64_t v17 = *(void *)(v3 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v7) {
        goto LABEL_19;
      }
      unint64_t v17 = *(void *)(v3 + 8 * v9);
      if (!v17) {
        break;
      }
    }
LABEL_18:
    unint64_t v6 = (v17 - 1) & v17;
    unint64_t v11 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_5:
    Swift::UInt32 v12 = *(_DWORD *)(*(void *)(a2 + 48) + 4 * v11);
    uint64_t v13 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v11);
    uint64_t v14 = *v13;
    unint64_t v15 = v13[1];
    sub_1005E3440(v12);
    sub_100008D24(v14, v15);
    sub_100008D24(v14, v15);
    sub_1005E08B0();
    sub_1000094D4(v14, v15);
    sub_1000094D4(v14, v15);
    v8 ^= sub_1005E3470();
  }
  int64_t v18 = v16 + 2;
  if (v18 >= v7)
  {
LABEL_19:
    swift_release();
    sub_1005E3410(v8);
    return;
  }
  unint64_t v17 = *(void *)(v3 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_19;
    }
    unint64_t v17 = *(void *)(v3 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
}

void sub_1000D3538(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  Swift::UInt v7 = 0;
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v16 >= v6) {
      goto LABEL_19;
    }
    unint64_t v17 = *(void *)(v19 + 8 * v16);
    ++v8;
    if (!v17)
    {
      int64_t v8 = v16 + 1;
      if (v16 + 1 >= v6) {
        goto LABEL_19;
      }
      unint64_t v17 = *(void *)(v19 + 8 * v8);
      if (!v17) {
        break;
      }
    }
LABEL_18:
    unint64_t v5 = (v17 - 1) & v17;
    unint64_t v10 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_5:
    Swift::UInt32 v11 = *(_DWORD *)(*(void *)(a2 + 48) + 4 * v10);
    Swift::UInt32 v12 = (unsigned __int8 *)(*(void *)(a2 + 56) + 24 * v10);
    Swift::UInt v13 = *v12;
    uint64_t v14 = *((void *)v12 + 1);
    unint64_t v15 = *((void *)v12 + 2);
    sub_1005E3440(v11);
    sub_1005E3410(v13);
    sub_100008D24(v14, v15);
    sub_100008D24(v14, v15);
    sub_1005E08B0();
    sub_1000094D4(v14, v15);
    sub_1000094D4(v14, v15);
    v7 ^= sub_1005E3470();
  }
  int64_t v18 = v16 + 2;
  if (v18 >= v6)
  {
LABEL_19:
    swift_release();
    sub_1005E3410(v7);
    return;
  }
  unint64_t v17 = *(void *)(v19 + 8 * v18);
  if (v17)
  {
    int64_t v8 = v18;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_19;
    }
    unint64_t v17 = *(void *)(v19 + 8 * v8);
    ++v18;
    if (v17) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
}

void sub_1000D3714(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = 0;
  int64_t v4 = 0;
  uint64_t v19 = a2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a2 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_20;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v11 >= v8) {
      goto LABEL_22;
    }
    unint64_t v12 = *(void *)(v19 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_22;
      }
      unint64_t v12 = *(void *)(v19 + 8 * v4);
      if (!v12) {
        break;
      }
    }
LABEL_19:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_20:
    Swift::UInt32 v14 = *(_DWORD *)(*(void *)(a2 + 48) + 4 * v10);
    uint64_t v15 = *(void *)(a2 + 56) + 16 * v10;
    Swift::UInt v16 = *(void *)v15;
    int v17 = *(unsigned __int8 *)(v15 + 8);
    Swift::UInt v18 = *(unsigned __int8 *)(v15 + 9);
    sub_1005E3440(v14);
    if (v17 == 1)
    {
      sub_1005E3420(0);
    }
    else
    {
      sub_1005E3420(1u);
      sub_1005E3410(v16);
    }
    sub_1005E3410(v18);
    v3 ^= sub_1005E3470();
  }
  int64_t v13 = v11 + 2;
  if (v13 >= v8)
  {
LABEL_22:
    sub_1005E3410(v3);
    return;
  }
  unint64_t v12 = *(void *)(v19 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v8) {
      goto LABEL_22;
    }
    unint64_t v12 = *(void *)(v19 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_19;
    }
  }
LABEL_24:
  __break(1u);
}

uint64_t sub_1000D38D0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_1000D3974(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000D3A5C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  unint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void *sub_1000D3B0C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v79 = variable initialization expression of Cache._converters();
  uint64_t v74 = *(void *)(v1 + 176);
  uint64_t v75 = *(void *)(v1 + 168);
  uint64_t v77 = *(void *)(v1 + 160);
  char v76 = *(unsigned char *)(v1 + 184);
  if ((v76 & 1) == 0 || (uint64_t v3 = *(void *)(*(void *)(v1 + 160) + 16)) == 0)
  {
    char v5 = _swiftEmptyArrayStorage;
    uint64_t v15 = _swiftEmptyArrayStorage[2];
    if (!v15) {
      goto LABEL_20;
    }
    goto LABEL_17;
  }
  uint64_t v4 = swift_bridgeObjectRetain() + 168;
  char v5 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v7 = *(void *)(v4 - 40);
    if (*(void *)(*(void *)v4 + 16)) {
      BOOL v8 = v7 == 0;
    }
    else {
      BOOL v8 = 1;
    }
    if (!v8)
    {
      uint64_t v9 = *(void *)(v4 - 120);
      int v10 = *(_DWORD *)(v4 - 112);
      unint64_t v11 = (int *)(v7
                  + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
      swift_beginAccess();
      int v12 = *v11;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v5 = sub_100015BB0(0, v5[2] + 1, 1, v5);
      }
      unint64_t v14 = v5[2];
      unint64_t v13 = v5[3];
      if (v14 >= v13 >> 1) {
        char v5 = sub_100015BB0((void *)(v13 > 1), v14 + 1, 1, v5);
      }
      uint64_t v5[2] = v14 + 1;
      unsigned int v6 = &v5[3 * v14];
      *((_DWORD *)v6 + 8) = v12;
      v6[5] = v9;
      *((_DWORD *)v6 + 12) = v10;
    }
    v4 += 176;
    --v3;
  }
  while (v3);
  sub_10000F0D4(v77, v75, v74, 1);
  uint64_t v15 = v5[2];
  if (v15)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    Swift::UInt v16 = v5 + 6;
    do
    {
      int v17 = *((_DWORD *)v16 - 4);
      v16 += 3;
      MailboxesSelectionUsage.Value.init(mailbox:usage:)();
      uint64_t v19 = v18;
      uint64_t v21 = v20;
      char v23 = v22 & 1;
      int v25 = v24;
      swift_bridgeObjectRetain();
      MailboxesSelectionUsage.subscript.setter(v19, v25, v21, v23, v17);
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
LABEL_20:
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1000EB45C(*(unsigned __int8 *)(v2 + 256), *(void *)(v2 + 264));
  uint64_t v27 = v26[2];
  if (v27)
  {
    uint64_t v28 = v26 + 6;
    do
    {
      int v29 = *((_DWORD *)v28 - 4);
      v28 += 3;
      MailboxesSelectionUsage.Value.init(mailbox:usage:)();
      uint64_t v31 = v30;
      uint64_t v33 = v32;
      char v35 = v34 & 1;
      int v37 = v36;
      swift_bridgeObjectRetain();
      MailboxesSelectionUsage.subscript.setter(v31, v37, v33, v35, v29);
      --v27;
    }
    while (v27);
  }
  swift_bridgeObjectRelease();
  if ((v76 & 1) != 0 && (uint64_t v38 = *(void *)(v77 + 16)) != 0)
  {
    uint64_t v39 = swift_bridgeObjectRetain() + 168;
    uint64_t v40 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v42 = *(void *)(v39 - 40);
      if (*(void *)(*(void *)v39 + 16)) {
        BOOL v43 = 1;
      }
      else {
        BOOL v43 = v42 == 0;
      }
      if (!v43)
      {
        uint64_t v44 = *(void *)(v39 - 120);
        int v45 = *(_DWORD *)(v39 - 112);
        uint64_t v46 = (int *)(v42
                    + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
        swift_beginAccess();
        int v47 = *v46;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v40 = sub_100015BB0(0, v40[2] + 1, 1, v40);
        }
        unint64_t v49 = v40[2];
        unint64_t v48 = v40[3];
        if (v49 >= v48 >> 1) {
          uint64_t v40 = sub_100015BB0((void *)(v48 > 1), v49 + 1, 1, v40);
        }
        v40[2] = v49 + 1;
        char v41 = &v40[3 * v49];
        *((_DWORD *)v41 + 8) = v47;
        v41[5] = v44;
        *((_DWORD *)v41 + 12) = v45;
      }
      v39 += 176;
      --v38;
    }
    while (v38);
    sub_10000F0D4(v77, v75, v74, 1);
    uint64_t v50 = v40[2];
    if (!v50) {
      goto LABEL_64;
    }
  }
  else
  {
    uint64_t v40 = _swiftEmptyArrayStorage;
    uint64_t v50 = _swiftEmptyArrayStorage[2];
    if (!v50)
    {
LABEL_64:
      swift_bridgeObjectRelease();
      return v79;
    }
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v50; ++i)
  {
    uint64_t v52 = (unsigned int *)&v40[3 * i + 4];
    uint64_t v53 = *v52;
    uint64_t v54 = *((void *)v52 + 1);
    uint64_t v55 = v52[4];
    swift_bridgeObjectRetain();
    uint64_t v56 = MailboxesSelectionUsage.subscript.getter(v53, (uint64_t)v79);
    swift_bridgeObjectRelease();
    if (v56)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v57 = *(void *)(a1 + 16);
      if (v57)
      {
        uint64_t v58 = 0;
        while (1)
        {
          uint64_t v59 = a1 + 32 + 16 * v58;
          if ((*(unsigned int *)(v59 + 8) | ((unint64_t)*(unsigned int *)(v59 + 8) << 32)) == (v55 | (v55 << 32)))
          {
            uint64_t v60 = *(void *)v59;
            uint64_t v61 = *(void *)(v60 + 16);
            if (v61 == *(void *)(v54 + 16))
            {
              if (v61) {
                BOOL v62 = v60 == v54;
              }
              else {
                BOOL v62 = 1;
              }
              if (v62) {
                goto LABEL_61;
              }
              if (*(unsigned __int8 *)(v60 + 32) == *(unsigned __int8 *)(v54 + 32))
              {
                if (v61 == 1) {
                  goto LABEL_61;
                }
                if (*(unsigned __int8 *)(v60 + 33) == *(unsigned __int8 *)(v54 + 33))
                {
                  if (v61 == 2) {
                    goto LABEL_61;
                  }
                  if (*(unsigned __int8 *)(v60 + 34) == *(unsigned __int8 *)(v54 + 34))
                  {
                    if (v61 == 3) {
                      goto LABEL_61;
                    }
                    if (*(unsigned __int8 *)(v60 + 35) == *(unsigned __int8 *)(v54 + 35)) {
                      break;
                    }
                  }
                }
              }
            }
          }
LABEL_43:
          if (++v58 == v57) {
            goto LABEL_61;
          }
        }
        uint64_t v63 = (unsigned __int8 *)(v60 + 36);
        uint64_t v64 = v61 - 4;
        BOOL v65 = (unsigned __int8 *)(v54 + 36);
        while (v64)
        {
          int v67 = *v63++;
          int v66 = v67;
          int v68 = *v65++;
          --v64;
          if (v66 != v68) {
            goto LABEL_43;
          }
        }
      }
LABEL_61:
      MailboxesSelectionUsage.Value.init(mailbox:usage:)();
      MailboxesSelectionUsage.subscript.setter(v70, v71, v72, v69 & 1, v53);
    }
  }
  swift_bridgeObjectRelease_n();
  return v79;
}

uint64_t sub_1000D4040(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_100015CD4(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    Swift::UInt v16 = (char *)&v4[6 * a2 + 4];
    if (a1 != a2 || &v4[6 * a1 + 4] >= (void *)&v16[48 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[6 * a1 + 4], v16, 48 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

unint64_t sub_1000D41B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000566C(&qword_10070A768);
    uint64_t v3 = (void *)sub_1005E2FF0();
    for (uint64_t i = (char *)(a1 + 57); ; i += 32)
    {
      unsigned int v5 = *(_DWORD *)(i - 25);
      int v6 = *(_DWORD *)(i - 17);
      uint64_t v7 = *(void *)(i - 9);
      char v8 = *(i - 1);
      char v9 = *i;
      unint64_t result = sub_100024260(v5);
      if (v11) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v3[6] + 4 * result) = v5;
      uint64_t v12 = v3[7] + 24 * result;
      *(_DWORD *)uint64_t v12 = v6;
      *(void *)(v12 + 8) = v7;
      *(unsigned char *)(v12 + 16) = v8;
      *(unsigned char *)(v12 + 17) = v9;
      uint64_t v13 = v3[2];
      BOOL v14 = __OFADD__(v13, 1);
      uint64_t v15 = v13 + 1;
      if (v14) {
        goto LABEL_10;
      }
      v3[2] = v15;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_1000D42B8(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_100016160(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_23;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_29;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    Swift::UInt v16 = (char *)&v4[5 * a2 + 4];
    size_t v17 = 40 * v15;
    if (40 * a1 < 40 * a2 || (&v4[5 * a1 + 4] < (void *)&v16[v17] ? (BOOL v18 = a1 == a2) : (BOOL v18 = 0), !v18)) {
      uint64_t result = (uint64_t)memmove(&v4[5 * a1 + 4], v16, v17);
    }
    uint64_t v19 = v4[2];
    BOOL v14 = __OFADD__(v19, v8);
    uint64_t v20 = v19 - v7;
    if (!v14)
    {
      v4[2] = v20;
LABEL_23:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_30;
  }
LABEL_31:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

unint64_t sub_1000D4444(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_10000566C(&qword_10070A750);
  uint64_t v3 = (void *)sub_1005E2FF0();
  LODWORD(v4) = *(_DWORD *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  unint64_t result = sub_100024260(v4);
  if (v9)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  int v10 = (void *)(a1 + 88);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    uint64_t v11 = v3[7] + 24 * result;
    *(void *)uint64_t v11 = v5;
    *(unsigned char *)(v11 + 8) = v6;
    *(void *)(v11 + 16) = v7;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      break;
    }
    v3[2] = v14;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v15 = v10 + 4;
    uint64_t v4 = *((unsigned int *)v10 - 6);
    uint64_t v5 = *(v10 - 2);
    char v6 = *((unsigned char *)v10 - 8);
    uint64_t v16 = *v10;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100024260(v4);
    int v10 = v15;
    uint64_t v7 = v16;
    if (v17) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1000D4570(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_10000566C(&qword_10070A720);
  uint64_t v3 = (void *)sub_1005E2FF0();
  uint64_t v4 = *(void *)(a1 + 32);
  Swift::UInt v5 = *(void *)(a1 + 40);
  __int16 v6 = *(_WORD *)(a1 + 48);
  unint64_t result = sub_1000242DC(v4, v5);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  char v9 = (_WORD *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int v10 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v10 = v4;
    v10[1] = v5;
    *(_WORD *)(v3[7] + 2 * result) = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 12;
    uint64_t v15 = *((void *)v9 - 2);
    Swift::UInt v5 = *((void *)v9 - 1);
    __int16 v6 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000242DC(v15, v5);
    char v9 = v14;
    uint64_t v4 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1000D4688(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_10000566C(&qword_10070A6B0);
  uint64_t v3 = (void *)sub_1005E2FF0();
  LODWORD(v4) = *(_DWORD *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 56);
  unint64_t result = sub_100024260(v4);
  if (v9)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  int v10 = (unsigned char *)(a1 + 88);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    uint64_t v11 = v3[7] + 24 * result;
    *(unsigned char *)uint64_t v11 = v5;
    *(void *)(v11 + 8) = v6;
    *(unsigned char *)(v11 + 16) = v7 & 1;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      break;
    }
    v3[2] = v14;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v15 = v10 + 32;
    uint64_t v4 = *((unsigned int *)v10 - 6);
    char v5 = *(v10 - 16);
    uint64_t v16 = *((void *)v10 - 1);
    char v7 = *v10;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100024260(v4);
    int v10 = v15;
    uint64_t v6 = v16;
    if (v17) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1000D47B8(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_10000566C(&qword_10070A740);
  uint64_t v3 = (void *)sub_1005E2FF0();
  uint64_t v4 = a1[4];
  Swift::UInt v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t result = sub_1000242DC(v4, v5);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  char v9 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int v10 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v10 = v4;
    v10[1] = v5;
    *(void *)(v3[7] + 8 * result) = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 3;
    uint64_t v15 = *(v9 - 2);
    Swift::UInt v5 = *(v9 - 1);
    uint64_t v16 = *v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000242DC(v15, v5);
    char v9 = v14;
    uint64_t v6 = v16;
    uint64_t v4 = v15;
    if (v17) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1000D48E4(uint64_t a1)
{
  return sub_1000D5114(a1, &qword_10070A668);
}

unint64_t sub_1000D48F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_10000566C(&qword_10070A690);
  uint64_t v3 = (void *)sub_1005E2FF0();
  uint64_t v4 = *(void *)(a1 + 32);
  Swift::UInt v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  int v7 = *(_DWORD *)(a1 + 56);
  unint64_t result = sub_1000242DC(v4, v5);
  if (v9)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  int v10 = (_DWORD *)(a1 + 88);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v4;
    v11[1] = v5;
    uint64_t v12 = v3[7] + 16 * result;
    *(void *)uint64_t v12 = v6;
    *(_DWORD *)(v12 + 8) = v7;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      break;
    }
    v3[2] = v15;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v16 = v10 + 8;
    uint64_t v17 = *((void *)v10 - 3);
    Swift::UInt v5 = *((void *)v10 - 2);
    uint64_t v18 = *((void *)v10 - 1);
    int v7 = *v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000242DC(v17, v5);
    int v10 = v16;
    uint64_t v6 = v18;
    uint64_t v4 = v17;
    if (v19) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1000D4A30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_10000566C(&qword_10070A680);
  uint64_t v3 = (void *)sub_1005E2FF0();
  uint64_t v5 = *(void *)(a1 + 32);
  Swift::UInt v4 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  int v7 = *(_DWORD *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  int v9 = *(_DWORD *)(a1 + 72);
  unint64_t result = sub_1000242DC(v5, v4);
  if (v11)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v12 = (_DWORD *)(a1 + 120);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v13 = v5;
    v13[1] = v4;
    uint64_t v14 = v3[7] + 32 * result;
    *(void *)uint64_t v14 = v6;
    *(_DWORD *)(v14 + 8) = v7;
    *(void *)(v14 + 16) = v8;
    *(_DWORD *)(v14 + 24) = v9;
    uint64_t v15 = v3[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      break;
    }
    v3[2] = v17;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v18 = *((void *)v12 - 5);
    Swift::UInt v4 = *((void *)v12 - 4);
    uint64_t v21 = *((void *)v12 - 3);
    char v22 = v12 + 12;
    int v7 = *(v12 - 4);
    uint64_t v19 = *((void *)v12 - 1);
    int v9 = *v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000242DC(v18, v4);
    uint64_t v6 = v21;
    uint64_t v12 = v22;
    uint64_t v8 = v19;
    uint64_t v5 = v18;
    if (v20) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1000D4BA8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_10000566C(&qword_10070A708);
  uint64_t v3 = (void *)sub_1005E2FF0();
  uint64_t v4 = *(void *)(a1 + 32);
  unsigned int v5 = *(_DWORD *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  unint64_t result = sub_100024264(v4, v5);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  int v9 = (void *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = v3[6] + 16 * result;
    *(void *)uint64_t v10 = v4;
    *(_DWORD *)(v10 + 8) = v5;
    *(void *)(v3[7] + 8 * result) = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 3;
    uint64_t v15 = *(v9 - 2);
    unsigned int v5 = *((_DWORD *)v9 - 2);
    uint64_t v6 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100024264(v15, v5);
    int v9 = v14;
    uint64_t v4 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1000D4CCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000566C(&qword_10070A718);
    uint64_t v3 = (void *)sub_1005E2FF0();
    for (uint64_t i = (char *)(a1 + 113); ; i += 88)
    {
      uint64_t v20 = v1;
      uint64_t v5 = *(void *)(i - 81);
      unsigned int v6 = *(_DWORD *)(i - 73);
      uint64_t v7 = *(void *)(i - 65);
      int v8 = *(_DWORD *)(i - 57);
      char v9 = *(i - 53);
      __int16 v10 = *(_WORD *)(i - 51);
      char v11 = *(i - 49);
      uint64_t v12 = *(void *)(i - 33);
      uint64_t v25 = *(void *)(i - 25);
      uint64_t v26 = *(void *)(i - 41);
      uint64_t v23 = *(void *)(i - 9);
      uint64_t v24 = *(void *)(i - 17);
      char v21 = *i;
      char v22 = *(i - 1);
      unint64_t result = sub_100024264(v5, v6);
      if (v14) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v15 = v3[6] + 16 * result;
      *(void *)uint64_t v15 = v5;
      *(_DWORD *)(v15 + 8) = v6;
      uint64_t v16 = v3[7] + 72 * result;
      *(void *)uint64_t v16 = v7;
      *(_DWORD *)(v16 + 8) = v8;
      *(unsigned char *)(v16 + 12) = v9;
      *(_WORD *)(v16 + 14) = v10;
      *(unsigned char *)(v16 + 16) = v11;
      *(void *)(v16 + 24) = v26;
      *(void *)(v16 + 32) = v12;
      *(void *)(v16 + 40) = v25;
      *(void *)(v16 + 48) = v24;
      *(void *)(v16 + 56) = v23;
      *(unsigned char *)(v16 + 64) = v22;
      *(unsigned char *)(v16 + 65) = v21;
      uint64_t v17 = v3[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v3[2] = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v1 = v20 - 1;
      if (v20 == 1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_1000D4E60(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_10000566C(&qword_10070A700);
  uint64_t v3 = (void *)sub_1005E2FF0();
  LODWORD(v4) = *(_DWORD *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  unint64_t result = sub_100024260(v4);
  if (v10)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  char v11 = (void *)(a1 + 104);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    uint64_t v12 = v3[7] + 32 * result;
    *(unsigned char *)uint64_t v12 = v5;
    *(void *)(v12 + 8) = v6;
    *(unsigned char *)(v12 + 16) = v7 & 1;
    *(void *)(v12 + 24) = v8;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      break;
    }
    v3[2] = v15;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v16 = v11 + 5;
    uint64_t v4 = *((unsigned int *)v11 - 8);
    char v5 = *((unsigned char *)v11 - 24);
    uint64_t v17 = *(v11 - 2);
    char v7 = *((unsigned char *)v11 - 8);
    uint64_t v8 = *v11;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100024260(v4);
    char v11 = v16;
    uint64_t v6 = v17;
    if (v18) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1000D4F98(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_10007C4A4(result);
  }
  return result;
}

unint64_t sub_1000D4FAC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_10000566C(&qword_10070A670);
  uint64_t v3 = (void *)sub_1005E2FF0();
  uint64_t v4 = *(void *)(a1 + 32);
  Swift::UInt v5 = *(void *)(a1 + 40);
  int v6 = *(_DWORD *)(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 52);
  uint64_t v8 = *(void *)(a1 + 56);
  char v9 = *(unsigned char *)(a1 + 64);
  unint64_t result = sub_1000242DC(v4, v5);
  if (v11)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v12 = (unsigned char *)(a1 + 104);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v13 = v4;
    v13[1] = v5;
    uint64_t v14 = v3[7] + 24 * result;
    *(_DWORD *)uint64_t v14 = v6;
    *(unsigned char *)(v14 + 4) = v7 & 1;
    *(void *)(v14 + 8) = v8;
    *(unsigned char *)(v14 + 16) = v9 & 1;
    uint64_t v15 = v3[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      break;
    }
    v3[2] = v17;
    if (!--v1) {
      goto LABEL_8;
    }
    char v18 = v12 + 40;
    uint64_t v19 = *((void *)v12 - 4);
    Swift::UInt v5 = *((void *)v12 - 3);
    int v6 = *((_DWORD *)v12 - 4);
    char v7 = *(v12 - 12);
    uint64_t v8 = *((void *)v12 - 1);
    char v9 = *v12;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000242DC(v19, v5);
    uint64_t v12 = v18;
    uint64_t v4 = v19;
    if (v20) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1000D5108(uint64_t a1)
{
  return sub_1000D5114(a1, &qword_10070A688);
}

unint64_t sub_1000D5114(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_10000566C(a2);
  uint64_t v4 = (void *)sub_1005E2FF0();
  uint64_t v5 = *(void *)(a1 + 32);
  unsigned int v6 = *(_DWORD *)(a1 + 40);
  char v7 = *(unsigned char *)(a1 + 44);
  unint64_t result = sub_100024264(v5, v6);
  if (v9)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v4;
  }
  char v10 = (unsigned char *)(a1 + 60);
  while (1)
  {
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = v4[6] + 16 * result;
    *(void *)uint64_t v11 = v5;
    *(_DWORD *)(v11 + 8) = v6;
    *(unsigned char *)(v4[7] + result) = v7;
    uint64_t v12 = v4[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      break;
    }
    v4[2] = v14;
    if (!--v2) {
      goto LABEL_8;
    }
    uint64_t v15 = v10 + 16;
    uint64_t v16 = *(void *)(v10 - 12);
    unsigned int v6 = *((_DWORD *)v10 - 1);
    char v7 = *v10;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100024264(v16, v6);
    char v10 = v15;
    uint64_t v5 = v16;
    if (v17) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1000D5234(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_10000566C(&qword_10070A758);
  uint64_t v3 = (void *)sub_1005E2FF0();
  LODWORD(v4) = *(_DWORD *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_100024260(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = (uint64_t *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v12 = v8 + 2;
    uint64_t v4 = *((unsigned int *)v8 - 2);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100024260(v4);
    uint64_t v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1000D5338(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_10070C120);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_10000566C(&qword_10070A6A0);
    char v7 = (void *)sub_1005E2FF0();
    char v22 = &v5[*(int *)(v2 + 48)];
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    while (1)
    {
      sub_1000079E4(v8, (uint64_t)v5, &qword_10070C120);
      uint64_t v10 = *(void *)v5;
      unsigned int v11 = *((_DWORD *)v5 + 2);
      unint64_t result = sub_100024264(*(void *)v5, v11);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v15 = v7[6] + 16 * result;
      *(void *)uint64_t v15 = v10;
      *(_DWORD *)(v15 + 8) = v11;
      uint64_t v16 = v7[7];
      uint64_t v17 = sub_10000566C(&qword_100709E38);
      unint64_t result = sub_10001FDF0((uint64_t)v22, v16 + *(void *)(*(void *)(v17 - 8) + 72) * v14, &qword_100709E38);
      uint64_t v18 = v7[2];
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19) {
        goto LABEL_10;
      }
      _OWORD v7[2] = v20;
      v8 += v9;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_1000D550C(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_100016C38(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[22 * a2 + 4];
    if (a1 != a2 || &v4[22 * a1 + 4] >= (void *)&v16[176 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[22 * a1 + 4], v16, 176 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000D5684(uint64_t a1, uint64_t a2)
{
  return sub_1000D666C(a1, a2, (uint64_t (*)(void))sub_10001612C, _s19UserInitiatedSearchVMa);
}

uint64_t sub_1000D56B0(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v52)(uint64_t *__return_ptr, uint64_t);
  unint64_t v53;
  uint64_t v54;
  unsigned int (**v55)(char *, uint64_t, uint64_t);
  void (**v56)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  unsigned __int8 v62;
  void *v63;

  uint64_t v50 = a6;
  uint64_t v52 = a2;
  uint64_t v57 = type metadata accessor for RunningTask();
  uint64_t v10 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v51 = (uint64_t)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000566C(&qword_10070C0C0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v43 - v16;
  uint64_t v63 = _swiftEmptyArrayStorage;
  sub_10001A9F4(0, 0, 0);
  uint64_t v18 = v63;
  unint64_t v19 = *(void *)(a1 + 16);
  uint64_t v55 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v56 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  uint64_t v48 = a4;
  uint64_t v49 = a5;
  uint64_t v46 = a1;
  uint64_t v47 = a5 + 32;
  uint64_t v44 = (void *)(a4 + 16);
  uint64_t v45 = v10;
  v43[1] = a4 + 32;
  swift_bridgeObjectRetain();
  uint64_t v54 = a3;
  uint64_t result = swift_retain();
  uint64_t v21 = 0;
  unint64_t v22 = 0;
  uint64_t v53 = v19;
  BOOL v23 = v19 == 0;
  if (v19) {
    goto LABEL_3;
  }
LABEL_2:
  uint64_t v24 = 1;
  for (unint64_t i = v19; ; unint64_t i = v22 + 1)
  {
    uint64_t v26 = v57;
    (*v56)(v17, v24, 1, v57);
    sub_10001FDF0((uint64_t)v17, (uint64_t)v15, &qword_10070C0C0);
    if ((*v55)(v15, 1, v26) == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return (uint64_t)v18;
    }
    uint64_t v27 = v51;
    sub_1000D8450((uint64_t)v15, v51, (uint64_t (*)(void))type metadata accessor for RunningTask);
    v52(&v59, v27);
    uint64_t v28 = v59;
    unsigned int v29 = v60;
    uint64_t v30 = v61;
    int v31 = v62;
    uint64_t result = sub_1000D8610(v27, (uint64_t (*)(void))type metadata accessor for RunningTask);
    if (__OFADD__(v21, 1)) {
      break;
    }
    uint64_t v58 = i;
    uint64_t v32 = v15;
    uint64_t v33 = v17;
    if (!v28
      || ((uint64_t v34 = *(void *)(v49 + 16), !v48)
        ? (uint64_t v35 = sub_1000CE0E8(v28, v29, v47, v34))
        : (uint64_t v35 = sub_1000CE1DC(v28, v29, v47, v34, v44)),
          uint64_t v37 = v35,
          char v38 = v36,
          swift_bridgeObjectRelease(),
          (v38 & 1) != 0))
    {
      uint64_t v37 = 0;
      char v39 = 1;
    }
    else
    {
      char v39 = 0;
    }
    if (v31) {
      uint64_t v30 = v50;
    }
    uint64_t v18 = v63;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_10001A9F4(0, v18[2] + 1, 1);
      uint64_t v18 = v63;
    }
    unint64_t v19 = v53;
    unint64_t v41 = v18[2];
    unint64_t v40 = v18[3];
    if (v41 >= v40 >> 1)
    {
      uint64_t result = sub_10001A9F4(v40 > 1, v41 + 1, 1);
      unint64_t v19 = v53;
      uint64_t v18 = v63;
    }
    v18[2] = v41 + 1;
    uint64_t v42 = &v18[4 * v41];
    v42[4] = v21;
    v42[5] = v37;
    *((unsigned char *)v42 + 48) = v39;
    v42[7] = v30;
    ++v21;
    uint64_t v17 = v33;
    uint64_t v15 = v32;
    unint64_t v22 = v58;
    BOOL v23 = v58 >= v19;
    if (v58 == v19) {
      goto LABEL_2;
    }
LABEL_3:
    if (v23) {
      goto LABEL_24;
    }
    sub_1000D85A8(v46+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v22, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for RunningTask);
    uint64_t v24 = 0;
  }
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1000D5AB8(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_100016290(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[4 * a2 + 4];
    if (a1 != a2 || &v4[4 * a1 + 4] >= (void *)&v16[32 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[4 * a1 + 4], v16, 32 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000D5C24(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_100016180(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[4 * a2 + 4];
    if (a1 != a2 || &v4[4 * a1 + 4] >= (void *)&v16[32 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[4 * a1 + 4], v16, 32 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t destroy for StateWithTasks(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_10000F0D4(*(void *)(a1 + 160), *(void *)(a1 + 168), *(void *)(a1 + 176), *(unsigned char *)(a1 + 184));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for StateWithTasks(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  long long v6 = *(_OWORD *)(a2 + 64);
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 90) = *(_OWORD *)(a2 + 90);
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v7;
  uint64_t v9 = a2 + 136;
  uint64_t v8 = *(void *)(a2 + 136);
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t v11 = *(void *)(a2 + 144);
    uint64_t v12 = *(void *)(a2 + 152);
    *(void *)(a1 + 136) = v8;
    *(void *)(a1 + 144) = v11;
    *(void *)(a1 + 152) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 136) = *(_OWORD *)v9;
    *(void *)(a1 + 152) = *(void *)(v9 + 16);
  }
  uint64_t v13 = *(void *)(a2 + 160);
  uint64_t v14 = *(void *)(a2 + 168);
  uint64_t v15 = *(void *)(a2 + 176);
  char v16 = *(unsigned char *)(a2 + 184);
  sub_10005636C(v13, v14, v15, v16);
  *(void *)(a1 + 160) = v13;
  *(void *)(a1 + 168) = v14;
  *(void *)(a1 + 176) = v15;
  *(unsigned char *)(a1 + 184) = v16;
  uint64_t v17 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v17;
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  uint64_t v18 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v18;
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  uint64_t v19 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v19;
  uint64_t v21 = *(void *)(a2 + 296);
  uint64_t v20 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = v21;
  *(void *)(a1 + 304) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for StateWithTasks(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  *(unsigned char *)(a1 + 10) = *((unsigned char *)a2 + 10);
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
  *(unsigned char *)(a1 + 18) = *((unsigned char *)a2 + 18);
  *(void *)(a1 + 24) = a2[3];
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v5 = *((_OWORD *)a2 + 4);
  long long v6 = *((_OWORD *)a2 + 5);
  *(_OWORD *)(a1 + 90) = *(_OWORD *)((char *)a2 + 90);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(void *)(a1 + 112) = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[15];
  uint64_t v8 = (_OWORD *)(a1 + 136);
  uint64_t v9 = *(void *)(a1 + 136);
  *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
  *(void *)(a1 + 120) = v7;
  *(unsigned char *)(a1 + 129) = *((unsigned char *)a2 + 129);
  uint64_t v11 = a2 + 17;
  uint64_t v10 = a2[17];
  if (v9)
  {
    if (v10)
    {
      *(void *)(a1 + 136) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = a2[18];
      *(void *)(a1 + 152) = a2[19];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10008245C(a1 + 136);
      uint64_t v12 = a2[19];
      *uint64_t v8 = *v11;
      *(void *)(a1 + 152) = v12;
    }
  }
  else if (v10)
  {
    *(void *)(a1 + 136) = v10;
    *(void *)(a1 + 144) = a2[18];
    *(void *)(a1 + 152) = a2[19];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *v11;
    *(void *)(a1 + 152) = a2[19];
    *uint64_t v8 = v13;
  }
  uint64_t v14 = a2[20];
  uint64_t v15 = a2[21];
  uint64_t v16 = a2[22];
  char v17 = *((unsigned char *)a2 + 184);
  sub_10005636C(v14, v15, v16, v17);
  uint64_t v18 = *(void *)(a1 + 160);
  uint64_t v19 = *(void *)(a1 + 168);
  uint64_t v20 = *(void *)(a1 + 176);
  char v21 = *(unsigned char *)(a1 + 184);
  *(void *)(a1 + 160) = v14;
  *(void *)(a1 + 168) = v15;
  *(void *)(a1 + 176) = v16;
  *(unsigned char *)(a1 + 184) = v17;
  sub_10000F0D4(v18, v19, v20, v21);
  *(void *)(a1 + 192) = a2[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = a2[26];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = a2[27];
  *(void *)(a1 + 224) = a2[28];
  *(_DWORD *)(a1 + 232) = *((_DWORD *)a2 + 58);
  *(void *)(a1 + 240) = a2[30];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = a2[31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 256) = *((unsigned char *)a2 + 256);
  *(void *)(a1 + 264) = a2[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
  *(void *)(a1 + 280) = a2[35];
  *(void *)(a1 + 288) = a2[36];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 296) = a2[37];
  swift_retain();
  swift_release();
  *(void *)(a1 + 304) = a2[38];
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for StateWithTasks(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x138uLL);
}

uint64_t assignWithTake for StateWithTasks(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 90) = *(_OWORD *)(a2 + 90);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 136);
  uint64_t v7 = *(void *)(a1 + 136);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  if (!v7) {
    goto LABEL_5;
  }
  if (!v6)
  {
    sub_10008245C(a1 + 136);
LABEL_5:
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    goto LABEL_6;
  }
  *(void *)(a1 + 136) = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v9 = *(void *)(a2 + 176);
  char v10 = *(unsigned char *)(a2 + 184);
  uint64_t v11 = *(void *)(a1 + 160);
  uint64_t v12 = *(void *)(a1 + 168);
  uint64_t v13 = *(void *)(a1 + 176);
  char v14 = *(unsigned char *)(a1 + 184);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = v9;
  *(unsigned char *)(a1 + 184) = v10;
  sub_10000F0D4(v11, v12, v13, v14);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  uint64_t v15 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_release();
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for StateWithTasks(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 312)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StateWithTasks(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 312) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 312) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateWithTasks()
{
  return &type metadata for StateWithTasks;
}

uint64_t sub_1000D65AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1000D6608()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D6640(uint64_t a1, uint64_t a2)
{
  return sub_1000D666C(a1, a2, (uint64_t (*)(void))sub_100017558, (uint64_t (*)(void))type metadata accessor for RunningTask);
}

uint64_t sub_1000D666C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = *v4;
  uint64_t v7 = *(void *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 - v9 > *(void *)(v6 + 24) >> 1) {
    uint64_t v6 = a3();
  }
  uint64_t v13 = *(void *)(a4(0) - 8);
  unint64_t v14 = v6 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v15 = *(void *)(v13 + 72);
  uint64_t v16 = v15 * a1;
  unint64_t v17 = v14 + v15 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v9) {
    goto LABEL_22;
  }
  uint64_t v19 = *(void *)(v6 + 16);
  uint64_t v20 = v19 - a2;
  if (__OFSUB__(v19, a2)) {
    goto LABEL_28;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    if (v16 < v15 * a2 || v17 >= v14 + v15 * a2 + v20 * v15)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != v15 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v22 = *(void *)(v6 + 16);
    BOOL v23 = __OFADD__(v22, v10);
    uint64_t v24 = v22 - v9;
    if (!v23)
    {
      *(void *)(v6 + 16) = v24;
LABEL_22:
      *uint64_t v4 = v6;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000D6864(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, void *), uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v70 = a5;
  uint64_t v71 = a6;
  int v68 = a3;
  uint64_t v69 = a4;
  uint64_t v67 = type metadata accessor for Command();
  __chkstk_darwin(v67);
  uint64_t v11 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a2 + 296);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v61 = a1 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v63 = v12 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_l;
  uint64_t v58 = OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id;
  int64_t v62 = (unint64_t)(v14 + 63) >> 6;
  int v66 = a7 & 1;
  uint64_t v54 = (char *)&v75 + 4;
  uint64_t v53 = (char *)&v75 + 1;
  uint64_t v52 = &v76;
  BOOL v65 = (char *)(a2 + 256);
  uint64_t v72 = (unint64_t *)(a2 + 264);
  swift_retain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  *(void *)&long long v19 = 68158723;
  long long v51 = v19;
  v50[1] = (char *)&type metadata for Any + 8;
  *(void *)&long long v19 = 68158467;
  long long v57 = v19;
  uint64_t v59 = a1;
  uint64_t v64 = v11;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v73 = (v16 - 1) & v16;
  int64_t v74 = v18;
  for (unint64_t i = __clz(__rbit64(v16)) | (v18 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v22 << 6))
  {
    uint64_t v25 = *(void *)(a1 + 48) + 16 * i;
    uint64_t v26 = *(void *)v25;
    unsigned int v27 = *(_DWORD *)(v25 + 8);
    *(void *)uint64_t v11 = *(void *)v25;
    *((_DWORD *)v11 + 2) = v27;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain_n();
    uint64_t v28 = ConnectionUsage.init()();
    unint64_t v30 = v29;
    v78[0] = v70;
    v78[1] = v71;
    char v79 = v66;
    char v80 = v28;
    unint64_t v81 = v29;
    swift_bridgeObjectRetain();
    sub_10000CF8C(v30);
    uint64_t v31 = v68(v11, v78);
    char v33 = v32;
    uint64_t v60 = v31;
    swift_bridgeObjectRelease();
    sub_10000CFDC(v30);
    sub_1000D8610((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Command);
    swift_bridgeObjectRelease();
    sub_10000CFDC(v30);
    if ((v33 & 1) == 0)
    {
      swift_retain_n();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain_n();
      uint64_t v34 = sub_1005E0EB0();
      os_log_type_t v35 = sub_1005E25C0();
      int v36 = v35;
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v37 = swift_slowAlloc();
        int v56 = v36;
        uint64_t v38 = v37;
        uint64_t v55 = swift_slowAlloc();
        uint64_t v77 = v55;
        *(_DWORD *)uint64_t v38 = v51;
        LODWORD(v75) = 2;
        sub_1005E2960();
        *(_WORD *)(v38 + 8) = 256;
        char v39 = *(unsigned char *)(v12 + v58);
        swift_release();
        LOBYTE(v75) = v39;
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v38 + 11) = 2160;
        uint64_t v75 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v38 + 21) = 2085;
        uint64_t v75 = v26;
        unsigned int v76 = v27;
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_1005E1CC0();
        uint64_t v75 = sub_1000C6914(v40, v41, &v77);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 31) = 2082;
        uint64_t v42 = ConnectionID.debugDescription.getter(v60);
        uint64_t v75 = sub_1000C6914(v42, v43, &v77);
        sub_1005E2960();
        a1 = v59;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v56, "[%.*hhx] De-selected '%{sensitive,mask.mailbox}s' on %{public}s", (uint8_t *)v38, 0x29u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();

        swift_release_n();
      }
    }
    uint64_t v44 = v72;
    unint64_t v45 = *v72;
    uint64_t v46 = *(void *)(*v72 + 16);
    if (v46)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_100093454(v45);
        unint64_t v45 = result;
      }
      unint64_t v47 = 0;
      while (v47 < *(void *)(v45 + 16))
      {
        type metadata accessor for RunningTask();
        uint64_t result = sub_1000E078C(v26, v27, a2);
        if (v46 == ++v47)
        {
          uint64_t v44 = v72;
          *uint64_t v72 = v45;
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
LABEL_24:
    uint64_t v11 = v64;
    swift_retain();
    uint64_t result = sub_1000CE4F0(v44, v65);
    uint64_t v48 = *(void *)(*v44 + 16);
    if (v48 < result) {
      goto LABEL_36;
    }
    sub_1000D666C(result, v48, (uint64_t (*)(void))sub_100017558, (uint64_t (*)(void))type metadata accessor for RunningTask);
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v16 = v73;
    int64_t v18 = v74;
    if (v73) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v21 = __OFADD__(v18, 1);
    int64_t v22 = v18 + 1;
    if (v21) {
      goto LABEL_37;
    }
    if (v22 >= v62) {
      goto LABEL_34;
    }
    unint64_t v23 = *(void *)(v61 + 8 * v22);
    if (!v23)
    {
      int64_t v24 = v22 + 1;
      if (v22 + 1 >= v62) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v61 + 8 * v24);
      if (v23) {
        goto LABEL_12;
      }
      int64_t v24 = v22 + 2;
      if (v22 + 2 >= v62) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v61 + 8 * v24);
      if (v23)
      {
LABEL_12:
        int64_t v22 = v24;
        goto LABEL_13;
      }
      int64_t v49 = v22 + 3;
      if (v22 + 3 >= v62)
      {
LABEL_34:
        swift_release();
        return swift_release();
      }
      unint64_t v23 = *(void *)(v61 + 8 * v49);
      v22 += 3;
      if (!v23) {
        break;
      }
    }
LABEL_13:
    uint64_t v73 = (v23 - 1) & v23;
    int64_t v74 = v22;
  }
  while (1)
  {
    int64_t v22 = v49 + 1;
    if (__OFADD__(v49, 1)) {
      break;
    }
    if (v22 >= v62) {
      goto LABEL_34;
    }
    unint64_t v23 = *(void *)(v61 + 8 * v22);
    ++v49;
    if (v23) {
      goto LABEL_13;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1000D716C(uint64_t a1, uint64_t a2, uint64_t a3, long long *__src, uint64_t (*a5)(uint64_t, void *))
{
  uint64_t v98 = a5;
  memcpy(__dst, __src, 0x138uLL);
  long long v6 = __src[13];
  long long v93 = __src[12];
  long long v94 = v6;
  long long v7 = __src[15];
  long long v95 = __src[14];
  long long v96 = v7;
  long long v8 = __src[9];
  long long v89 = __src[8];
  long long v90 = v8;
  long long v9 = __src[11];
  long long v91 = __src[10];
  long long v92 = v9;
  long long v10 = __src[5];
  long long v85 = __src[4];
  long long v86 = v10;
  long long v11 = __src[7];
  long long v87 = __src[6];
  long long v88 = v11;
  long long v12 = __src[1];
  long long v81 = *__src;
  long long v82 = v12;
  long long v13 = __src[3];
  if (__dst[64] == 2) {
    uint64_t v14 = 3;
  }
  else {
    uint64_t v14 = __dst[73] + 1;
  }
  long long v83 = __src[2];
  long long v84 = v13;
  sub_1000B37E0((uint64_t)__dst);
  char v15 = sub_10000C8D8();
  sub_1000B38FC((uint64_t)__dst);
  if (v15)
  {
    char v42 = 0;
    if (v15 == 1)
    {
      uint64_t v40 = 1;
      uint64_t v41 = 0;
    }
    else
    {
      uint64_t v40 = v14;
      uint64_t v41 = v14;
    }
  }
  else
  {
    uint64_t v40 = 1;
    uint64_t v41 = 0;
    char v42 = 1;
  }
  memcpy(v51, __src, sizeof(v51));
  uint64_t v52 = *(void *)__src;
  __int16 v53 = *((_WORD *)__src + 4);
  char v16 = v51[10];
  char v17 = v51[17];
  uint64_t v18 = *(void *)&v51[24];
  uint64_t v19 = *(void *)&v51[48];
  uint64_t v34 = *(void *)&v51[40];
  long long v66 = *(_OWORD *)&v51[56];
  long long v68 = *(_OWORD *)&v51[88];
  long long v67 = *(_OWORD *)&v51[72];
  char v20 = v51[32];
  char v21 = v51[16];
  long long v71 = *(_OWORD *)&v51[120];
  long long v72 = *(_OWORD *)&v51[136];
  uint64_t v36 = *(void *)&v51[160];
  uint64_t v37 = *(void *)&v51[168];
  uint64_t v38 = *(void *)&v51[176];
  uint64_t v39 = *(void *)&v51[112];
  v80[11] = *(_DWORD *)&v51[252];
  char v56 = v51[15];
  int v55 = *(_DWORD *)&v51[11];
  __int16 v60 = *(_WORD *)&v51[22];
  int v59 = *(_DWORD *)&v51[18];
  *(_DWORD *)&v63[3] = *(_DWORD *)&v51[36];
  *(_DWORD *)uint64_t v63 = *(_DWORD *)&v51[33];
  *(_OWORD *)char v80 = *(_OWORD *)&v51[208];
  *(_OWORD *)&v80[3] = *(_OWORD *)&v51[220];
  *(_OWORD *)&v80[7] = *(_OWORD *)&v51[236];
  char v54 = v51[10];
  char v57 = v51[16];
  char v58 = v51[17];
  uint64_t v61 = *(void *)&v51[24];
  char v62 = v51[32];
  uint64_t v64 = *(void *)&v51[40];
  uint64_t v65 = *(void *)&v51[48];
  uint64_t v69 = *(void *)&v51[104];
  uint64_t v70 = *(void *)&v51[112];
  uint64_t v73 = *(void *)&v51[152];
  uint64_t v74 = *(void *)&v51[160];
  uint64_t v75 = *(void *)&v51[168];
  uint64_t v76 = *(void *)&v51[176];
  char v77 = v51[184];
  uint64_t v22 = *(void *)&v51[200];
  *(void *)&v78[7] = *(void *)&v51[192];
  *(void *)__int16 v78 = *(void *)&v51[185];
  char v35 = v51[184] & 1;
  uint64_t v79 = *(void *)&v51[200];
  sub_1000B37E0((uint64_t)v51);
  unint64_t v23 = sub_10008C078();
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1000D8938();
  unint64_t v25 = sub_1000D8D74(v21, v17 & 1, v18, v20, v34, v16 & 1, v19, v24);
  sub_100058C7C(v36, v37, v38, v35, v39, (uint64_t)v23, BYTE4(v25) & 1, v22);
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_1000D3B0C(v27);
  swift_release();
  swift_release();
  swift_release();
  unint64_t v29 = sub_1000EB228(v51[256], *(uint64_t *)&v51[264]);
  sub_1000B38FC((uint64_t)v51);
  v46[0] = a2;
  v46[1] = a3;
  swift_retain();
  swift_retain();
  uint64_t v30 = sub_10000566C(&qword_10070C0A8);
  sub_100007494(&qword_10070C0B0, &qword_10070C0A8);
  uint64_t v31 = MailboxesSelectionUsage.removing<A>(notContainedIn:)((uint64_t)v46, (uint64_t)v28, v30);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v47[0] = v41;
  v47[1] = v40;
  char v48 = v42;
  uint64_t v49 = v31;
  unint64_t v50 = v29;
  uint64_t v32 = v98(a1, v47);
  swift_bridgeObjectRelease();
  sub_10000CFDC(v29);
  return v32;
}

uint64_t sub_1000D755C(uint64_t a1)
{
  void (*v27)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char isUniquelyReferenced_nonNull_native;
  char v40;
  unint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  void v53[3];
  uint64_t v54;
  uint64_t v55;
  long long v56[2];
  long long v57;
  long long v58;
  uint64_t v59;
  unsigned int v60;
  long long v61;

  uint64_t v2 = type metadata accessor for RunningTask();
  uint64_t v3 = *(unsigned __int8 **)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2 - 8);
  uint64_t v52 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  long long v7 = (char *)&v49 - v6;
  int64_t v8 = *(void *)(a1 + 16);
  v53[0] = _swiftEmptyArrayStorage;
  sub_10001A9B4(0, v8, 0);
  unint64_t v50 = a1;
  long long v51 = v3;
  if (v8)
  {
    uint64_t v9 = a1 + ((v3[80] + 32) & ~(unint64_t)v3[80]);
    uint64_t v10 = *((void *)v3 + 9);
    swift_bridgeObjectRetain();
    int64_t v11 = v8;
    do
    {
      sub_1000D85A8(v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RunningTask);
      sub_10003C94C((uint64_t)(v7 + 64), (uint64_t)v56);
      sub_1000D8610((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RunningTask);
      uint64_t v12 = v53[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10001A9B4(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v53[0];
      }
      unint64_t v14 = *(void *)(v12 + 16);
      unint64_t v13 = *(void *)(v12 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_10001A9B4(v13 > 1, v14 + 1, 1);
        uint64_t v12 = v53[0];
      }
      *(void *)(v12 + 16) = v14 + 1;
      char v15 = (_OWORD *)(v12 + 48 * v14);
      long long v16 = v56[0];
      long long v17 = v57;
      v15[3] = v56[1];
      unsigned char v15[4] = v17;
      v15[2] = v16;
      v9 += v10;
      --v11;
    }
    while (v11);
  }
  else
  {
    uint64_t v12 = v53[0];
    swift_bridgeObjectRetain();
  }
  uint64_t v18 = v50;
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_10009AA64(v12);
  swift_release();
  if (!v8)
  {
LABEL_38:
    sub_1000C5B64(v18);
    return v19;
  }
  uint64_t v49 = v19;
  uint64_t v20 = v18 + ((*((unsigned __int8 *)v51 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v51 + 80));
  uint64_t v21 = v51[9];
  swift_bridgeObjectRetain();
  uint64_t v22 = _swiftEmptyDictionarySingleton;
  uint64_t v23 = (uint64_t)v52;
  uint64_t v24 = v21;
  while (1)
  {
    sub_1000D85A8(v20, v23, (uint64_t (*)(void))type metadata accessor for RunningTask);
    sub_1000B9240(v23, (uint64_t)v56);
    if (!BYTE13(v57))
    {
      sub_1000B9324((uint64_t)v56);
      goto LABEL_13;
    }
    if (BYTE13(v57) != 1) {
      goto LABEL_13;
    }
    sub_100021BFC(v56, (uint64_t)v53);
    uint64_t v25 = v54;
    uint64_t v26 = v55;
    sub_10003BCDC(v53, v54);
    uint64_t v27 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v26 + 32);
    uint64_t v28 = v26;
    uint64_t v23 = (uint64_t)v52;
    v27(&v58, v25, v28);
    unint64_t v29 = v59;
    uint64_t v30 = v60;
    uint64_t v61 = v58;
    sub_10001D550((uint64_t)&v61);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v53);
    sub_1000B9240(v23, (uint64_t)v56);
    if (BYTE13(v57))
    {
      if (BYTE13(v57) == 1)
      {
        sub_100021BFC(v56, (uint64_t)v53);
        uint64_t v31 = v54;
        uint64_t v32 = v55;
        sub_10003BCDC(v53, v54);
        char v33 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 40);
        uint64_t v34 = v32;
        uint64_t v23 = (uint64_t)v52;
        char v35 = (void *)v33(v31, v34);
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v53);
        goto LABEL_21;
      }
    }
    else
    {
      sub_1000B9324((uint64_t)v56);
    }
    char v35 = &_swiftEmptySetSingleton;
LABEL_21:
    uint64_t v36 = v35[2];
    swift_bridgeObjectRelease();
    if (!v36)
    {
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    sub_1000B9240(v23, (uint64_t)v56);
    if (BYTE13(v57))
    {
      if (BYTE13(v57) == 1)
      {
        sub_100021BFC(v56, (uint64_t)v53);
        uint64_t v37 = v54;
        uint64_t v38 = v55;
        sub_10003BCDC(v53, v54);
        long long v51 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 40))(v37, v38);
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v53);
        goto LABEL_28;
      }
    }
    else
    {
      sub_1000B9324((uint64_t)v56);
    }
    long long v51 = &_swiftEmptySetSingleton;
LABEL_28:
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v56[0] = v22;
    uint64_t v41 = sub_100024264(v29, v30);
    char v42 = v22[2];
    unint64_t v43 = (v40 & 1) == 0;
    uint64_t v44 = v42 + v43;
    if (__OFADD__(v42, v43)) {
      break;
    }
    unint64_t v45 = v40;
    if (v22[3] >= v44)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_100098864();
      }
    }
    else
    {
      sub_100052418(v44, isUniquelyReferenced_nonNull_native);
      uint64_t v46 = sub_100024264(v29, v30);
      if ((v45 & 1) != (v47 & 1)) {
        goto LABEL_40;
      }
      uint64_t v41 = v46;
    }
    uint64_t v21 = v24;
    uint64_t v22 = *(void **)&v56[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if ((v45 & 1) == 0)
    {
      sub_1001030F8(v41, v29, v30, (uint64_t)&_swiftEmptySetSingleton, v22);
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    sub_10008B9C8((uint64_t)v51);
    swift_bridgeObjectRelease();
    uint64_t v23 = (uint64_t)v52;
LABEL_13:
    sub_1000D8610(v23, (uint64_t (*)(void))type metadata accessor for RunningTask);
    v20 += v21;
    if (!--v8)
    {
      uint64_t v18 = v50;
      swift_bridgeObjectRelease();
      uint64_t v19 = v49;
      goto LABEL_38;
    }
  }
  __break(1u);
LABEL_40:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

uint64_t sub_1000D7B00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v3 = *(void *)(a1 + 168);
  uint64_t v4 = *(void *)(a1 + 176);
  char v5 = *(unsigned char *)(a1 + 184);
  uint64_t v7 = *(void *)(a1 + 160);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000852BC(v2);
  sub_10000F0D4(v7, v3, v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000D7BE0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000D7C34(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_100017B88(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_23;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_29;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    long long v16 = (char *)&v4[30 * a2 + 4];
    size_t v17 = 240 * v15;
    if (240 * a1 < 240 * a2 || (&v4[30 * a1 + 4] < (void *)&v16[v17] ? (BOOL v18 = a1 == a2) : (BOOL v18 = 0), !v18)) {
      uint64_t result = (uint64_t)memmove(&v4[30 * a1 + 4], v16, v17);
    }
    uint64_t v19 = v4[2];
    BOOL v14 = __OFADD__(v19, v8);
    uint64_t v20 = v19 - v7;
    if (!v14)
    {
      v4[2] = v20;
LABEL_23:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_30;
  }
LABEL_31:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000D7DC0(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_100017F0C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    long long v16 = (char *)&v4[3 * a2 + 4];
    if (a1 != a2 || &v4[3 * a1 + 4] >= (void *)&v16[24 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[3 * a1 + 4], v16, 24 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

unint64_t sub_1000D7F38(_OWORD *a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t (*a5)(uint64_t, uint64_t), uint64_t a6, uint64_t a7, NSObject *a8)
{
  int64_t v9 = (char *)a1 + *(int *)(type metadata accessor for RunningTask() + 36);
  uint64_t v38 = *(void *)v9;
  int v50 = v9[8];
  *(void *)int64_t v9 = 0;
  char v56 = v9;
  v9[8] = 1;
  memcpy(__dst, a4, 0x138uLL);
  long long v10 = a4[13];
  long long v104 = a4[12];
  long long v105 = v10;
  long long v11 = a4[15];
  long long v106 = a4[14];
  long long v107 = v11;
  long long v12 = a4[9];
  long long v100 = a4[8];
  long long v101 = v12;
  long long v13 = a4[11];
  long long v102 = a4[10];
  long long v103 = v13;
  long long v14 = a4[5];
  long long v96 = a4[4];
  long long v97 = v14;
  long long v15 = a4[7];
  long long v98 = a4[6];
  long long v99 = v15;
  long long v16 = a4[1];
  long long v92 = *a4;
  long long v93 = v16;
  long long v17 = a4[3];
  if (__dst[64] == 2) {
    uint64_t v18 = 3;
  }
  else {
    uint64_t v18 = __dst[73] + 1;
  }
  long long v94 = a4[2];
  long long v95 = v17;
  sub_1000B37E0((uint64_t)__dst);
  char v19 = sub_10000C8D8();
  sub_1000B38FC((uint64_t)__dst);
  if (v19)
  {
    char v47 = 0;
    if (v19 == 1)
    {
      uint64_t v45 = 1;
      uint64_t v46 = 0;
    }
    else
    {
      uint64_t v45 = v18;
      uint64_t v46 = v18;
    }
  }
  else
  {
    uint64_t v45 = 1;
    uint64_t v46 = 0;
    char v47 = 1;
  }
  memcpy(v62, a4, sizeof(v62));
  uint64_t v63 = *(void *)a4;
  __int16 v64 = *((_WORD *)a4 + 4);
  char v20 = v62[10];
  char v21 = v62[17];
  uint64_t v22 = *(void *)&v62[24];
  uint64_t v23 = *(void *)&v62[48];
  uint64_t v39 = *(void *)&v62[40];
  long long v77 = *(_OWORD *)&v62[56];
  long long v79 = *(_OWORD *)&v62[88];
  long long v78 = *(_OWORD *)&v62[72];
  char v24 = v62[32];
  char v25 = v62[16];
  long long v82 = *(_OWORD *)&v62[120];
  long long v83 = *(_OWORD *)&v62[136];
  uint64_t v41 = *(void *)&v62[160];
  uint64_t v42 = *(void *)&v62[168];
  uint64_t v43 = *(void *)&v62[176];
  uint64_t v44 = *(void *)&v62[112];
  v91[11] = *(_DWORD *)&v62[252];
  char v67 = v62[15];
  int v66 = *(_DWORD *)&v62[11];
  __int16 v71 = *(_WORD *)&v62[22];
  int v70 = *(_DWORD *)&v62[18];
  *(_DWORD *)&_OWORD v74[3] = *(_DWORD *)&v62[36];
  *(_DWORD *)uint64_t v74 = *(_DWORD *)&v62[33];
  *(_OWORD *)long long v91 = *(_OWORD *)&v62[208];
  *(_OWORD *)&v91[3] = *(_OWORD *)&v62[220];
  *(_OWORD *)&v91[7] = *(_OWORD *)&v62[236];
  char v65 = v62[10];
  char v68 = v62[16];
  char v69 = v62[17];
  uint64_t v72 = *(void *)&v62[24];
  char v73 = v62[32];
  uint64_t v75 = *(void *)&v62[40];
  uint64_t v76 = *(void *)&v62[48];
  uint64_t v80 = *(void *)&v62[104];
  uint64_t v81 = *(void *)&v62[112];
  uint64_t v84 = *(void *)&v62[152];
  uint64_t v85 = *(void *)&v62[160];
  uint64_t v86 = *(void *)&v62[168];
  uint64_t v87 = *(void *)&v62[176];
  char v88 = v62[184];
  uint64_t v26 = *(void *)&v62[200];
  *(void *)&v89[7] = *(void *)&v62[192];
  *(void *)long long v89 = *(void *)&v62[185];
  char v40 = v62[184] & 1;
  uint64_t v90 = *(void *)&v62[200];
  sub_1000B37E0((uint64_t)v62);
  uint64_t v27 = sub_10008C078();
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1000D8938();
  unint64_t v29 = sub_1000D8D74(v25, v21 & 1, v22, v24, v39, v20 & 1, v23, v28);
  sub_100058C7C(v41, v42, v43, v40, v44, (uint64_t)v27, BYTE4(v29) & 1, v26);
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = sub_1000D3B0C(v31);
  swift_release();
  swift_release();
  swift_release();
  unint64_t v33 = sub_1000EB228(v62[256], *(uint64_t *)&v62[264]);
  sub_1000B38FC((uint64_t)v62);
  uint64_t v57 = a2;
  uint64_t v58 = a3;
  swift_retain();
  swift_retain();
  uint64_t v34 = sub_10000566C(&qword_10070C0A8);
  sub_100007494(&qword_10070C0B0, &qword_10070C0A8);
  uint64_t v35 = MailboxesSelectionUsage.removing<A>(notContainedIn:)((uint64_t)&v57, (uint64_t)v32, v34);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v57 = v46;
  uint64_t v58 = v45;
  char v59 = v47;
  uint64_t v60 = v35;
  unint64_t v61 = v33;
  swift_bridgeObjectRetain();
  sub_10000CF8C(v33);
  sub_1000E800C((uint64_t)a4, a7, a8, a1, (uint64_t)a4, a5, a6, (uint64_t)&v57);
  swift_bridgeObjectRelease();
  sub_10000CFDC(v33);
  swift_bridgeObjectRelease();
  unint64_t result = sub_10000CFDC(v33);
  if (((v56[8] | v50) & 1) == 0)
  {
    uint64_t v37 = *(void *)v56;
    if (v38 < *(void *)v56) {
      uint64_t v37 = v38;
    }
    *(void *)char v56 = v37;
    v56[8] = 0;
  }
  return result;
}

uint64_t sub_1000D8388(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RunningTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D83EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RunningTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D8450(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL sub_1000D84B8(IMAP2Persistence::OpaqueMailboxID *a1)
{
  return SyncRequest.includes(_:)(a1[1]);
}

uint64_t sub_1000D84F8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000D8544(uint64_t a1)
{
  return sub_1000F1B78(a1, *(unint64_t **)(v1 + 16));
}

uint64_t sub_1000D854C(uint64_t a1)
{
  return sub_1000F1CE4(a1, *(void *)(v1 + 16));
}

unint64_t sub_1000D8554()
{
  unint64_t result = qword_10070C0F0;
  if (!qword_10070C0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C0F0);
  }
  return result;
}

uint64_t sub_1000D85A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000D8610(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000D8674@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  int v2 = result;
  if ((result & 0x1000000) == 0)
  {
    uint64_t v4 = _swiftEmptyArrayStorage;
    if ((result & 0xFF0000) != 0) {
      goto LABEL_14;
    }
    goto LABEL_9;
  }
  unint64_t result = (uint64_t)sub_1000163A0(0, 1, 1, _swiftEmptyArrayStorage);
  uint64_t v4 = (void *)result;
  unint64_t v6 = *(void *)(result + 16);
  unint64_t v5 = *(void *)(result + 24);
  int64_t v7 = v5 >> 1;
  unint64_t v8 = v6 + 1;
  if (v5 >> 1 <= v6)
  {
    unint64_t result = (uint64_t)sub_1000163A0((void *)(v5 > 1), v6 + 1, 1, (void *)result);
    uint64_t v4 = (void *)result;
    unint64_t v5 = *(void *)(result + 24);
    int64_t v7 = v5 >> 1;
  }
  v4[2] = v8;
  *((unsigned char *)v4 + v6 + 32) = 2;
  int64_t v9 = v6 + 2;
  if (v7 < v9)
  {
    unint64_t result = (uint64_t)sub_1000163A0((void *)(v5 > 1), v9, 1, v4);
    uint64_t v4 = (void *)result;
  }
  v4[2] = v9;
  *((unsigned char *)v4 + v8 + 32) = 4;
  if ((*(void *)&v2 & 0xFF0000) == 0)
  {
LABEL_9:
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = (uint64_t)sub_1000163A0(0, v4[2] + 1, 1, v4);
      uint64_t v4 = (void *)result;
    }
    unint64_t v11 = v4[2];
    unint64_t v10 = v4[3];
    if (v11 >= v10 >> 1)
    {
      unint64_t result = (uint64_t)sub_1000163A0((void *)(v10 > 1), v11 + 1, 1, v4);
      uint64_t v4 = (void *)result;
    }
    v4[2] = v11 + 1;
    *((unsigned char *)v4 + v11 + 32) = 10;
  }
LABEL_14:
  *a2 = v4;
  return result;
}

void sub_1000D87DC(void *a1@<X8>)
{
  *a1 = &off_1006BB050;
}

void sub_1000D87EC(void *a1@<X8>)
{
  *a1 = &off_1006BB078;
}

BOOL sub_1000D87FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  int v6 = a1[3];
  int v7 = a1[4];
  int v8 = a1[5];
  int v9 = a1[6];
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  uint64_t v12 = a2[2];
  int v13 = a2[3];
  int v14 = a2[4];
  int v15 = a2[5];
  int v16 = a2[6];
  int v17 = a2[7];
  if (a1[7]) {
    uint64_t v18 = 0x100000000000000;
  }
  else {
    uint64_t v18 = 0;
  }
  if (v9) {
    uint64_t v19 = 0x1000000000000;
  }
  else {
    uint64_t v19 = 0;
  }
  if (v8) {
    uint64_t v20 = 0x10000000000;
  }
  else {
    uint64_t v20 = 0;
  }
  BOOL v21 = v7 == 0;
  uint64_t v22 = &_mh_execute_header;
  if (v21) {
    uint64_t v23 = 0;
  }
  else {
    uint64_t v23 = &_mh_execute_header;
  }
  BOOL v21 = v6 == 0;
  uint64_t v24 = 0x1000000;
  if (v21) {
    uint64_t v25 = 0;
  }
  else {
    uint64_t v25 = 0x1000000;
  }
  uint64_t v26 = ((v25 | (v4 << 8) | (v5 << 16) | (unint64_t)v23 | v20 | v19) + v18) | v3;
  if (v17) {
    uint64_t v27 = 0x100000000000000;
  }
  else {
    uint64_t v27 = 0;
  }
  if (v16) {
    uint64_t v28 = 0x1000000000000;
  }
  else {
    uint64_t v28 = 0;
  }
  if (v15) {
    uint64_t v29 = 0x10000000000;
  }
  else {
    uint64_t v29 = 0;
  }
  if (!v14) {
    uint64_t v22 = 0;
  }
  if (!v13) {
    uint64_t v24 = 0;
  }
  return sub_1000D9018(v26, ((v24 | (v11 << 8) | (v12 << 16) | (unint64_t)v22 | v29 | v28) + v27) | v10);
}

uint64_t sub_1000D88F8()
{
  if (*v0) {
    return 0xD000000000000014;
  }
  else {
    return 0x746C7561666564;
  }
}

uint64_t sub_1000D8938()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v16 = v1;
  int v15 = &_swiftEmptySetSingleton;
  uint64_t v2 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v6) {
      goto LABEL_25;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v6) {
        goto LABEL_25;
      }
      unint64_t v12 = *(void *)(v2 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v6) {
          goto LABEL_25;
        }
        unint64_t v12 = *(void *)(v2 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v6) {
            goto LABEL_25;
          }
          unint64_t v12 = *(void *)(v2 + 8 * v8);
          if (!v12)
          {
            int64_t v8 = v11 + 4;
            if (v11 + 4 >= v6) {
              goto LABEL_25;
            }
            unint64_t v12 = *(void *)(v2 + 8 * v8);
            if (!v12) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_5:
    uint64_t result = sub_1000186BC(&v14, *(unsigned __int8 *)(*(void *)(v1 + 56) + 32 * v10));
  }
  int64_t v13 = v11 + 5;
  if (v13 >= v6)
  {
LABEL_25:
    swift_release();
    sub_10001D550((uint64_t)&v16);
    return (uint64_t)v15;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_25;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1000D8ACC(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 1;
  }
  uint64_t v4 = a2 + 56;
  while (1)
  {
    if (*(void *)(a2 + 16))
    {
      sub_1005E33F0();
      sub_1005E3410(0);
      unint64_t v5 = sub_1005E3470() & ~(-1 << *(unsigned char *)(a2 + 32));
      if ((*(void *)(v4 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
        break;
      }
    }
    if (!--v2) {
      return 1;
    }
  }
  return 0;
}

Swift::Int sub_1000D8B80(Swift::Int result, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 1;
  }
  Swift::Int v3 = result;
  int64_t v4 = 0;
  Swift::Int v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  while (1)
  {
    while (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      if (*(void *)(a2 + 16))
      {
LABEL_25:
        Swift::UInt32 v16 = *(_DWORD *)(*(void *)(v3 + 48) + 4 * v12);
        sub_1005E33F0();
        sub_1005E3440(v16);
        uint64_t result = sub_1005E3470();
        uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v18 = result & ~v17;
        if ((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
        {
          uint64_t v19 = *(void *)(a2 + 48);
          if (v16 == *(_DWORD *)(v19 + 4 * v18)) {
            return 0;
          }
          uint64_t v20 = ~v17;
          while (1)
          {
            unint64_t v18 = (v18 + 1) & v20;
            if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
              break;
            }
            if (v16 == *(_DWORD *)(v19 + 4 * v18)) {
              return 0;
            }
          }
        }
      }
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return 1;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14)
        {
          int64_t v4 = v13 + 3;
          if (v13 + 3 >= v9) {
            return 1;
          }
          unint64_t v14 = *(void *)(v5 + 8 * v4);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
    if (*(void *)(a2 + 16)) {
      goto LABEL_25;
    }
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v9) {
    return 1;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_24;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

unint64_t sub_1000D8D74(char a1, unsigned __int8 a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  if ((a3 & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    unint64_t v13 = (unint64_t)(a6 & 1) << 48;
    uint64_t v14 = 0x100000000000000;
    char v15 = 1;
    uint64_t v16 = 512;
    char v17 = 1;
LABEL_34:
    unint64_t v33 = &_mh_execute_header;
    goto LABEL_35;
  }
  char v22 = sub_100010000(3, a8);
  if (a2) {
    goto LABEL_12;
  }
  if (a3 == 1)
  {
    if (a1)
    {
      if (a1 == 1)
      {
        BOOL v23 = 0;
        int v37 = 2;
        BOOL v38 = 1;
        char v24 = 1;
        goto LABEL_16;
      }
      goto LABEL_38;
    }
LABEL_12:
    BOOL v38 = (v22 & 1) == 0;
    BOOL v23 = (v22 & 1) == 0;
    char v24 = v23;
    if (v22) {
      int v25 = 0;
    }
    else {
      int v25 = 2;
    }
    goto LABEL_15;
  }
  if (a3 || !a1) {
    goto LABEL_12;
  }
  if (a1 != 1)
  {
    BOOL v38 = 0;
    BOOL v23 = 0;
    char v24 = 0;
    int v37 = 0;
    goto LABEL_16;
  }
LABEL_38:
  BOOL v38 = 0;
  BOOL v23 = 0;
  char v24 = 1;
  int v25 = 1;
LABEL_15:
  int v37 = v25;
LABEL_16:
  char v26 = sub_1000D8ACC((uint64_t)&off_1006B9E88, a7);
  char v17 = v23 | v26 ^ 1;
  char v15 = v24 | v26 ^ 1;
  char v27 = sub_100010000(3, a8);
  char v28 = sub_10001B364(a7);
  swift_bridgeObjectRelease();
  if (v28)
  {
    uint64_t v29 = 0;
    uint64_t v11 = 0;
  }
  else if (a2)
  {
    char v30 = sub_100010000(3, a8);
    uint64_t v11 = v30 & 1;
    if (v30) {
      uint64_t v29 = 2;
    }
    else {
      uint64_t v29 = 0;
    }
  }
  else
  {
    uint64_t v11 = 1;
    uint64_t v29 = 2;
  }
  uint64_t v31 = *(void *)(a8 + 16);
  swift_bridgeObjectRelease();
  unsigned int v32 = v37;
  switch(a4)
  {
    case 1:
      uint64_t v11 = 0;
      break;
    case 2:
      uint64_t v11 = v29;
      break;
    case 3:
      break;
    default:
      uint64_t v11 = 0;
      unsigned int v32 = 2;
      char v17 = 1;
      char v15 = 1;
      break;
  }
  unint64_t v33 = 0;
  unint64_t v34 = (unint64_t)v32 << 8;
  uint64_t v16 = 512;
  if (a5 < 3989) {
    uint64_t v16 = v34;
  }
  uint64_t v14 = 0x100000000000000;
  if (((v31 == 0) & a2) == 0) {
    uint64_t v14 = 0;
  }
  uint64_t v12 = 0x10000000000;
  if ((v27 & 1) == 0) {
    uint64_t v12 = 0;
  }
  unint64_t v13 = (unint64_t)(a6 & 1) << 48;
  if (v38) {
    goto LABEL_34;
  }
LABEL_35:
  uint64_t v35 = 0x1000000;
  if ((v17 & 1) == 0) {
    uint64_t v35 = 0;
  }
  return v16 | (v11 << 16) | v15 & 1 | v35 | (unint64_t)v33 | v12 | v13 | v14;
}

BOOL sub_1000D9018(uint64_t a1, uint64_t a2)
{
  return ((a1 ^ a2) & 1 | (((a2 ^ a1) & 0xFF00) != 0) | (((a2 ^ a1) & 0xFF0000) != 0) | BYTE3(a1) & 1 ^ BYTE3(a2) & 1 | BYTE4(a1) & 1 ^ BYTE4(a2) & 1 | BYTE5(a1) & 1 ^ BYTE5(a2) & 1 | BYTE6(a1) & 1 ^ BYTE6(a2) & 1 | HIBYTE(a1) & 1 ^ HIBYTE(a2) & 1) == 0;
}

ValueMetadata *type metadata accessor for SyncBehavior.MailboxSync()
{
  return &type metadata for SyncBehavior.MailboxSync;
}

unint64_t sub_1000D90AC()
{
  unint64_t result = qword_10070C138;
  if (!qword_10070C138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C138);
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncBehavior.PendingResponsesTaskGeneration()
{
  return &type metadata for SyncBehavior.PendingResponsesTaskGeneration;
}

ValueMetadata *type metadata accessor for SyncBehavior.PurgeMessages()
{
  return &type metadata for SyncBehavior.PurgeMessages;
}

ValueMetadata *type metadata accessor for SyncBehavior.DetectChangesToMessages()
{
  return &type metadata for SyncBehavior.DetectChangesToMessages;
}

ValueMetadata *type metadata accessor for SyncBehavior.DownloadBehavior()
{
  return &type metadata for SyncBehavior.DownloadBehavior;
}

unsigned char *_s13IMAP2Behavior12SyncBehaviorV13FetchMessagesOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D9210);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncBehavior.FetchMessages()
{
  return &type metadata for SyncBehavior.FetchMessages;
}

void *initializeBufferWithCopyOfBuffer for SyncBehavior(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SyncBehavior(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[8]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncBehavior(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncBehavior()
{
  return &type metadata for SyncBehavior;
}

unsigned char *_s13IMAP2Behavior12SyncBehaviorV19MessageBodyDownloadOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D93B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncBehavior.MessageBodyDownload()
{
  return &type metadata for SyncBehavior.MessageBodyDownload;
}

unint64_t sub_1000D93F0()
{
  unint64_t result = qword_10070C140;
  if (!qword_10070C140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C140);
  }
  return result;
}

unint64_t sub_1000D9448()
{
  unint64_t result = qword_10070C148;
  if (!qword_10070C148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C148);
  }
  return result;
}

uint64_t sub_1000D949C()
{
  return sub_1000D95F4(&qword_10070C150, &qword_10070C158);
}

unint64_t sub_1000D94C8()
{
  unint64_t result = qword_10070C160;
  if (!qword_10070C160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C160);
  }
  return result;
}

unint64_t sub_1000D9520()
{
  unint64_t result = qword_10070C168;
  if (!qword_10070C168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C168);
  }
  return result;
}

unint64_t sub_1000D9578()
{
  unint64_t result = qword_10070C170;
  if (!qword_10070C170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C170);
  }
  return result;
}

uint64_t sub_1000D95CC()
{
  return sub_1000D95F4(&qword_10070C178, &qword_10070C180);
}

uint64_t sub_1000D95F4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000744C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000D9648()
{
  unint64_t result = qword_10070C188[0];
  if (!qword_10070C188[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10070C188);
  }
  return result;
}

uint64_t sub_1000D969C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_1000D96A4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1000D973C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    void *v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1000D9848(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D98C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000D9950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000D99F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1000D9A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000D9B04(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1000D9C50);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1000D9C64(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1000D9E44);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          *unint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for AuthenticatedTaskWithCustomHistory()
{
  return sub_1000DAF2C();
}

uint64_t sub_1000D9E84()
{
  return sub_1005E1CA0();
}

uint64_t sub_1000D9ED4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 48))(*(void *)(a1 + 16));
}

uint64_t sub_1000D9EEC()
{
  return sub_1005E32A0();
}

uint64_t sub_1000D9EFC(IMAP2Persistence::CredentialsRequestID a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = UInt32.init(_:)(a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1000DA038(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(a2 + 24) + 56))(a1, *(void *)(a2 + 16));
}

uint64_t sub_1000DA050()
{
  return sub_1000D9E84();
}

uint64_t sub_1000DA058@<X0>(unsigned int a1@<W0>, Swift::UInt32 a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  unsigned int v34 = a1;
  uint64_t v36 = a4;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v35 = type metadata accessor for ClientCommand(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v10 = sub_1005E28C0();
  uint64_t v27 = *(void *)(v10 - 8);
  uint64_t v28 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  unsigned int v13 = (char *)&v27 - v12;
  uint64_t v32 = AssociatedTypeWitness;
  uint64_t v30 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v11);
  uint64_t v29 = (char *)&v27 - v14;
  v15.underlying = a2;
  sub_1000D9EFC(v15);
  int v16 = *(void (**)(void))(v7 + 64);
  uint64_t v31 = v4;
  uint64_t v33 = v6;
  v16();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v13, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v28);
    uint64_t v17 = 1;
  }
  else
  {
    uint64_t v18 = (uint64_t)&v13[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v19 = (uint64_t)v29;
    uint64_t v20 = v30;
    uint64_t v21 = v32;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v29, v13, v32);
    sub_10000C804(v18, v36);
    uint64_t v22 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v24 = swift_getAssociatedConformanceWitness();
    uint64_t v37 = v21;
    uint64_t v38 = v22;
    uint64_t v39 = AssociatedConformanceWitness;
    uint64_t v40 = v24;
    uint64_t v25 = type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap();
    sub_1000F7220(v34, v19, v25);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    uint64_t v17 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v36, v17, 1);
}

unint64_t sub_1000DA3C4(unsigned int a1, Swift::UInt32 a2, uint64_t a3, uint64_t a4)
{
  unsigned int v32 = a1;
  uint64_t v5 = *(void *)(a4 + 16);
  uint64_t v6 = *(void *)(a4 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = sub_1005E28C0();
  uint64_t v26 = *(void *)(v9 - 8);
  uint64_t v27 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v30 = AssociatedTypeWitness;
  uint64_t v29 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v10);
  uint64_t v28 = (char *)&v25 - v13;
  v14.underlying = a2;
  sub_1000D9EFC(v14);
  IMAP2Persistence::CredentialsRequestID v15 = *(void (**)(void))(v6 + 72);
  uint64_t v31 = v5;
  v15();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v12, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v27);
    return 0xF000000000000007;
  }
  else
  {
    uint64_t v16 = *(void *)&v12[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v17 = (uint64_t)v28;
    uint64_t v18 = v29;
    uint64_t v19 = v30;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v28, v12, v30);
    uint64_t v20 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v22 = swift_getAssociatedConformanceWitness();
    uint64_t v33 = v20;
    uint64_t v34 = v19;
    uint64_t v35 = AssociatedConformanceWitness;
    uint64_t v36 = v22;
    uint64_t v23 = type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap();
    sub_1000F73B0(v32, v17, v23);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  return v16;
}

uint64_t sub_1000DA6E0(uint64_t a1, IMAP2Persistence::CredentialsRequestID a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1000D9EFC(a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)(a4 + 24) + 80))(a1, v7, v8, v9, v10, *(void *)(a4 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000DA794(uint64_t a1, IMAP2Persistence::CredentialsRequestID a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1000D9EFC(a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)(a4 + 24) + 88))(a1, v7, v8, v9, v10, *(void *)(a4 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000DA848(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v33 = a5;
  uint64_t v34 = a7;
  unsigned int v37 = a6;
  int v38 = a1;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v11 = *(void *)(a8 + 16);
  uint64_t v10 = *(void *)(a8 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_1005E28C0();
  uint64_t v28 = *(void *)(v13 - 8);
  uint64_t v29 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v28 - v15;
  uint64_t v36 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v14);
  uint64_t v30 = (char *)&v28 - v17;
  uint64_t v18 = *(int *)(a8 + 36);
  uint64_t v35 = v8;
  uint64_t v19 = *(void *)(v8 + v18);
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  uint64_t v23 = AssociatedConformanceWitness;
  uint64_t v24 = v36;
  sub_1000F7544(v38, v19, AssociatedTypeWitness, v20, v23, v22, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v16, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v29);
    type metadata accessor for AuthenticatedTaskWithCustomHistory.Error();
    swift_getWitnessTable();
    swift_allocError();
    *(_DWORD *)uint64_t v25 = v38;
    *(unsigned char *)(v25 + 4) = 0;
    return swift_willThrow();
  }
  else
  {
    uint64_t v27 = v30;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v30, v16, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v10 + 96))(v27, v31, v32, v33, v37, v34, v11, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v27, AssociatedTypeWitness);
  }
}

uint64_t sub_1000DAB54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(a3 + 24) + 112))(a1, a2, *(void *)(a3 + 16));
}

uint64_t sub_1000DAB88(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8)
{
  return sub_1000DA848(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1000DABA0(int a1, uint64_t a2, uint64_t a3)
{
  return sub_1000DAC10(a1, a3);
}

uint64_t sub_1000DABC4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000DAC10(int a1, uint64_t a2)
{
  int v25 = a1;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v23 = sub_1005E28C0();
  uint64_t v21 = *(void *)(v23 - 8);
  uint64_t v7 = __chkstk_darwin(v23);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v7);
  uint64_t v22 = (char *)&v20 - v11;
  uint64_t v12 = *(int *)(a2 + 36);
  uint64_t v24 = v2;
  uint64_t v13 = *(void *)(v2 + v12 + 8);
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v16 = swift_getAssociatedConformanceWitness();
  sub_1000F77F4(v25, v13, v14, AssociatedTypeWitness, AssociatedConformanceWitness, v16, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v23);
    type metadata accessor for AuthenticatedTaskWithCustomHistory.Error();
    swift_getWitnessTable();
    swift_allocError();
    *(_DWORD *)uint64_t v17 = v25;
    *(unsigned char *)(v17 + 4) = 1;
    return swift_willThrow();
  }
  else
  {
    uint64_t v19 = v22;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v22, v9, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 104))(v19, v5, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v19, AssociatedTypeWitness);
  }
}

uint64_t type metadata accessor for AuthenticatedTaskWithCustomHistory.Error()
{
  return sub_1000DAF2C();
}

uint64_t sub_1000DAF2C()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1000DAF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t sub_1000DAF64(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t sub_1000DAFAC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000DAFF0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 4);
}

uint64_t sub_1000DAFF8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 4) = a2 & 1;
  return result;
}

uint64_t sub_1000DB004()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000DB09C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1000DB1E8);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1000DB1FC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1000DB3DCLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          *uint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for MailboxTaskWithCustomHistory()
{
  return sub_1000DAF2C();
}

uint64_t destroy for MailboxTaskMailbox()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MailboxTaskMailbox(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MailboxTaskMailbox(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for MailboxTaskMailbox(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MailboxTaskMailbox(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxTaskMailbox(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 36)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxTaskMailbox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 36) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 36) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxTaskMailbox()
{
  return &type metadata for MailboxTaskMailbox;
}

uint64_t sub_1000DB630(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 80))(*(void *)(a1 + 16));
}

uint64_t sub_1000DB648(uint64_t a1, uint64_t a2)
{
  swift_getDynamicType();
  swift_getMetatypeMetadata();
  uint64_t v4 = sub_1005E1CA0();
  v5._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 96))(a1, a2);
  if (v5._object)
  {
    sub_1005E1E30(v5);
    swift_bridgeObjectRelease();
    v7._countAndFlagsBits = 45;
    v7._object = (void *)0xE100000000000000;
    sub_1005E1E30(v7);
    swift_bridgeObjectRelease();
  }
  return v4;
}

Swift::Int sub_1000DB71C()
{
  Swift::UInt v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(unsigned int *)(v0 + 32);
  Swift::UInt16 v3 = *(_WORD *)(v0 + 16);
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_1005E3430(v3);
  sub_1005E3410(v2 | (v2 << 32));
  return sub_1005E3470();
}

void sub_1000DB78C()
{
  uint64_t v1 = *(unsigned int *)(v0 + 32);
  Swift::UInt16 v2 = *(_WORD *)(v0 + 16);
  sub_1005E3410(*(void *)(v0 + 8));
  sub_1005E3430(v2);
  sub_1005E3410(v1 | (v1 << 32));
}

Swift::Int sub_1000DB7D8()
{
  Swift::UInt v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(unsigned int *)(v0 + 32);
  Swift::UInt16 v3 = *(_WORD *)(v0 + 16);
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_1005E3430(v3);
  sub_1005E3410(v2 | (v2 << 32));
  return sub_1005E3470();
}

BOOL sub_1000DB844(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  int v6 = *(_DWORD *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  int v8 = *(_DWORD *)(a2 + 32);
  return sub_1000DD010((uint64_t)v5, (uint64_t)v7);
}

unint64_t sub_1000DB894()
{
  unint64_t result = qword_10070C310[0];
  if (!qword_10070C310[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10070C310);
  }
  return result;
}

uint64_t sub_1000DB8E8@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1;
  uint64_t v24 = a1;
  uint64_t v25 = a3;
  uint64_t v5 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  int v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Task.Logger(0);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  int v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000DCF40(v4, (uint64_t)v12);
  unsigned int v13 = (void *)*((void *)a2 + 3);
  Swift::UInt32 v14 = *((_DWORD *)a2 + 8);
  v15.underlying = *((_WORD *)a2 + 8);
  uint64_t v16 = sub_1005E0ED0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v8, v12, v16);
  unint64_t v17 = &v12[*(int *)(v10 + 28)];
  uint64_t v19 = *((void *)v17 + 1);
  uint64_t v18 = (void *)*((void *)v17 + 2);
  LOBYTE(v4) = *v17;
  swift_bridgeObjectRetain();
  v20.rawValue._countAndFlagsBits = v19;
  v20.rawValue._object = v18;
  v28.bytes._rawValue = v13;
  v28._hashValue._Swift::Int value = v14;
  MailboxTaskLoggerID.init(id:name:counter:mailbox:)(&v26, (IMAP2Tracing::EngineTracingID)v4, v20, v15, v28);
  swift_bridgeObjectRetain();
  sub_1000DCFA4((uint64_t)v12, type metadata accessor for Task.Logger);
  uint64_t v21 = &v8[*(int *)(v6 + 28)];
  long long v22 = *(_OWORD *)&v26.name.rawValue._object;
  *(_OWORD *)uint64_t v21 = *(_OWORD *)&v26.id.rawValue;
  *((_OWORD *)v21 + 1) = v22;
  *(_OWORD *)(v21 + 28) = *(_OWORD *)&v26.gap1A[2];
  sub_1000DD460((uint64_t)v8, v25, type metadata accessor for MailboxTaskLogger);
  long long v27 = *a2;
  sub_10001D550((uint64_t)&v27);
  swift_bridgeObjectRelease();
  return sub_1000DCFA4(v24, type metadata accessor for Task.Logger);
}

uint64_t sub_1000DBAD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 48))(*(void *)(a1 + 16));
}

uint64_t sub_1000DBAF0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 56))(*(void *)(a1 + 16));
}

double sub_1000DBB08@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(_OWORD *__return_ptr, void))(*(void *)(a1 + 24) + 64))(v5, *(void *)(a1 + 16));
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(_DWORD *)(a2 + 32) = v6;
  return result;
}

uint64_t sub_1000DBB60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 88))(*(void *)(a1 + 16));
}

uint64_t sub_1000DBB78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Task.Logger(0);
  __chkstk_darwin(v4 - 8);
  int v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000DCF40(a1, (uint64_t)v6);
  uint64_t v12 = a2 + 16;
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(v12 + 8);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v11 + 64))(v15, v10, v11);
  sub_1000DB8E8((uint64_t)v6, v15, (uint64_t)v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 104))(v9, v10, v11);
  return sub_1000DCFA4((uint64_t)v9, type metadata accessor for MailboxTaskLogger);
}

uint64_t sub_1000DBCB8(uint64_t a1)
{
  return sub_1000DB648(*(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_1000DBCC4(IMAP2Persistence::CredentialsRequestID a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = UInt32.init(_:)(a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1000DBE00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Task.Logger(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000DCF40(a1, (uint64_t)v8);
  (*(void (**)(long long *__return_ptr, void))(*(void *)(a2 + 24) + 64))(v11, *(void *)(a2 + 16));
  return sub_1000DB8E8((uint64_t)v8, v11, a3);
}

uint64_t sub_1000DBEBC@<X0>(unsigned int a1@<W0>, Swift::UInt32 a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v51 = a4;
  uint64_t v52 = a3;
  unsigned int v49 = a1;
  uint64_t v54 = a6;
  uint64_t v8 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a5 + 16);
  uint64_t v12 = *(void *)(a5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v53 = type metadata accessor for ClientCommand(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = sub_1005E28C0();
  uint64_t v44 = *(void *)(v14 - 8);
  uint64_t v45 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v43 - v16;
  uint64_t v48 = AssociatedTypeWitness;
  uint64_t v47 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v15);
  uint64_t v46 = (char *)&v43 - v18;
  v19.underlying = a2;
  uint64_t v20 = sub_1000DBCC4(v19);
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = v51;
  uint64_t v51 = a5;
  sub_1000DBE00(v27, a5, (uint64_t)v10);
  NIOIMAPCore2::MailboxName v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v12 + 112);
  uint64_t v29 = v52;
  uint64_t v52 = v11;
  v28(v20, v22, v24, v26, v29, v10, v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = TupleTypeMetadata2;
  swift_bridgeObjectRelease();
  sub_1000DCFA4((uint64_t)v10, type metadata accessor for MailboxTaskLogger);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v17, 1, v30) == 1)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v17, v45);
    uint64_t v31 = 1;
    uint64_t v32 = v54;
  }
  else
  {
    uint64_t v33 = (uint64_t)&v17[*(int *)(v30 + 48)];
    uint64_t v35 = (uint64_t)v46;
    uint64_t v34 = v47;
    uint64_t v36 = v48;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v46, v17, v48);
    uint64_t v37 = v54;
    sub_1000DD460(v33, v54, type metadata accessor for ClientCommand);
    uint64_t v38 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v40 = swift_getAssociatedConformanceWitness();
    uint64_t v55 = v36;
    uint64_t v56 = v38;
    uint64_t v57 = AssociatedConformanceWitness;
    uint64_t v58 = v40;
    uint64_t v41 = type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap();
    sub_1000F7220(v49, v35, v41);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
    uint64_t v31 = 0;
    uint64_t v32 = v37;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v32, v31, 1);
}

unint64_t sub_1000DC2E0(unsigned int a1, Swift::UInt32 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v48 = a5;
  uint64_t v49 = a4;
  unsigned int v46 = a1;
  uint64_t v8 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a6 + 16);
  uint64_t v12 = *(void *)(a6 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = sub_1005E28C0();
  uint64_t v41 = *(void *)(v14 - 8);
  uint64_t v42 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v40 - v16;
  uint64_t v45 = AssociatedTypeWitness;
  uint64_t v44 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v15);
  uint64_t v43 = (char *)&v40 - v18;
  v19.underlying = a2;
  uint64_t v20 = sub_1000DBCC4(v19);
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = v48;
  uint64_t v48 = a6;
  sub_1000DBE00(v27, a6, (uint64_t)v10);
  NIOIMAPCore2::MailboxName v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v12 + 120);
  uint64_t v29 = v49;
  uint64_t v49 = v11;
  v28(v20, v22, v24, v26, v29, v10, v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = TupleTypeMetadata2;
  swift_bridgeObjectRelease();
  sub_1000DCFA4((uint64_t)v10, type metadata accessor for MailboxTaskLogger);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v17, 1, v30) == 1)
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v42);
    return 0xF000000000000007;
  }
  else
  {
    uint64_t v31 = *(void *)&v17[*(int *)(v30 + 48)];
    uint64_t v32 = (uint64_t)v43;
    uint64_t v33 = v44;
    uint64_t v34 = v45;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v43, v17, v45);
    uint64_t v35 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v37 = swift_getAssociatedConformanceWitness();
    uint64_t v50 = v35;
    uint64_t v51 = v34;
    uint64_t v52 = AssociatedConformanceWitness;
    uint64_t v53 = v37;
    uint64_t v38 = type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap();
    sub_1000F73B0(v46, v32, v38);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
  }
  return v31;
}

uint64_t sub_1000DC694(uint64_t a1, Swift::UInt32 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v11 - 8);
  unsigned int v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14.underlying = a2;
  uint64_t v15 = sub_1000DBCC4(v14);
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  sub_1000DBE00(a5, a6, (uint64_t)v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, void, void))(*(void *)(a6 + 24) + 128))(a1, v15, v17, v19, v21, a4, v13, *(void *)(a6 + 16), *(void *)(a6 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1000DCFA4((uint64_t)v13, type metadata accessor for MailboxTaskLogger);
}

uint64_t sub_1000DC7D8(uint64_t a1, Swift::UInt32 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12.underlying = a2;
  uint64_t v13 = sub_1000DBCC4(v12);
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  sub_1000DBE00(a4, a5, (uint64_t)v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, void))(*(void *)(a5 + 24) + 136))(a1, v13, v15, v17, v19, v11, *(void *)(a5 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1000DCFA4((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
}

uint64_t sub_1000DC90C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v36 = a8;
  uint64_t v37 = a3;
  uint64_t v41 = a7;
  unsigned int v44 = a6;
  int v45 = a1;
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  uint64_t v10 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v40 = (uint64_t)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a9 + 16);
  uint64_t v13 = *(void *)(a9 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_1005E28C0();
  uint64_t v32 = *(void *)(v15 - 8);
  uint64_t v33 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v43 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v16);
  uint64_t v34 = (char *)&v31 - v19;
  uint64_t v35 = a9;
  uint64_t v20 = *(int *)(a9 + 36);
  uint64_t v42 = v9;
  uint64_t v21 = *(void *)(v9 + v20);
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v24 = swift_getAssociatedConformanceWitness();
  uint64_t v25 = v21;
  uint64_t v26 = v43;
  sub_1000F7544(v45, v25, AssociatedTypeWitness, v22, AssociatedConformanceWitness, v24, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v18, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v33);
    type metadata accessor for MailboxTaskWithCustomHistory.Error();
    swift_getWitnessTable();
    swift_allocError();
    *(_DWORD *)uint64_t v27 = v45;
    *(unsigned char *)(v27 + 4) = 0;
    return swift_willThrow();
  }
  else
  {
    uint64_t v29 = v34;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v34, v18, AssociatedTypeWitness);
    uint64_t v30 = v40;
    sub_1000DBE00(v36, v35, v40);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 144))(v29, v37, v38, v39, v44, v41, v30, v12, v13);
    sub_1000DCFA4(v30, type metadata accessor for MailboxTaskLogger);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v29, AssociatedTypeWitness);
  }
}

uint64_t sub_1000DCCA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000DBE00(a2, a3, (uint64_t)v8);
  (*(void (**)(uint64_t, char *, void))(*(void *)(a3 + 24) + 160))(a1, v8, *(void *)(a3 + 16));
  return sub_1000DCFA4((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
}

uint64_t sub_1000DCD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000DBE00(a2, a3, (uint64_t)v8);
  (*(void (**)(uint64_t, char *, void))(*(void *)(a3 + 24) + 168))(a1, v8, *(void *)(a3 + 16));
  return sub_1000DCFA4((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
}

double sub_1000DCE40@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000DBB08(a1, (uint64_t)v5);
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(_DWORD *)(a2 + 32) = v6;
  return result;
}

uint64_t sub_1000DCE84(uint64_t a1)
{
  return sub_1000DD098(*(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_1000DCEB0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1000DC90C(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1000DCED8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1000DD0CC(a1, a3, a4, a5);
}

uint64_t sub_1000DCF04(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000DCF40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Task.Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000DCFA4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *variable initialization expression of Cache._converters()
{
  return &_swiftEmptyArrayStorage;
}

BOOL sub_1000DD010(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + 8) == *(void *)(a2 + 8)
      && sub_1000255D4(*(void *)a1, *(void *)a2)
      && *(unsigned __int16 *)(a1 + 16) == *(unsigned __int16 *)(a2 + 16)
      && (*(unsigned int *)(a1 + 32) | ((unint64_t)*(unsigned int *)(a1 + 32) << 32)) == (*(unsigned int *)(a2 + 32) | ((unint64_t)*(unsigned int *)(a2 + 32) << 32))
      && sub_1000255D4(*(void *)(a1 + 24), *(void *)(a2 + 24));
}

uint64_t sub_1000DD098(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_1000DD0CC(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a3;
  uint64_t v32 = a2;
  int v36 = a1;
  uint64_t v6 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v33 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_1005E28C0();
  uint64_t v27 = *(void *)(v11 - 8);
  uint64_t v28 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v35 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v12);
  uint64_t v29 = (char *)&v27 - v15;
  uint64_t v30 = a4;
  uint64_t v16 = *(int *)(a4 + 36);
  uint64_t v34 = v4;
  uint64_t v17 = *(void *)(v4 + v16 + 8);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  uint64_t v21 = v18;
  uint64_t v22 = v35;
  sub_1000F77F4(v36, v17, v21, AssociatedTypeWitness, AssociatedConformanceWitness, v20, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v14, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v28);
    type metadata accessor for MailboxTaskWithCustomHistory.Error();
    swift_getWitnessTable();
    swift_allocError();
    *(_DWORD *)uint64_t v23 = v36;
    *(unsigned char *)(v23 + 4) = 1;
    return swift_willThrow();
  }
  else
  {
    uint64_t v25 = v29;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v29, v14, AssociatedTypeWitness);
    uint64_t v26 = v33;
    sub_1000DBE00(v31, v30, v33);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 152))(v25, v32, v26, v9, v8);
    sub_1000DCFA4(v26, type metadata accessor for MailboxTaskLogger);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v25, AssociatedTypeWitness);
  }
}

uint64_t type metadata accessor for MailboxTaskWithCustomHistory.Error()
{
  return sub_1000DAF2C();
}

uint64_t sub_1000DD460(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000DD4C8(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  return sub_100044148(a4, a2, a3);
}

uint64_t sub_1000DD4F0(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return sub_1000400E8(a2, a3, (void (*)(uint64_t *__return_ptr, void *))sub_1000E5694);
}

uint64_t sub_1000DD548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Task.Logger(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(a3 + 48) = _swiftEmptyArrayStorage;
  *(void *)(a3 + 56) = _swiftEmptyArrayStorage;
  uint64_t v9 = (int *)type metadata accessor for RunningTask();
  uint64_t v10 = a3 + v9[9];
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  uint64_t v11 = (uint64_t (**)(uint64_t, uint64_t, unsigned int, uint64_t))(a3 + v9[12]);
  char *v11 = sub_1000DD4C8;
  v11[1] = 0;
  uint64_t v12 = (uint64_t (**)(uint64_t, uint64_t, unsigned int))(a3 + v9[13]);
  *uint64_t v12 = sub_1000DD4F0;
  v12[1] = 0;
  sub_10009B158(a1, (uint64_t)v20);
  if (v21)
  {
    sub_100021BFC(v20, (uint64_t)v17);
    sub_100021C34((uint64_t)v17, a3);
    *(_DWORD *)(a3 + 40) = 0;
    *(_WORD *)(a3 + 44) = 257;
  }
  else
  {
    sub_100021BFC(v20, (uint64_t)v17);
    sub_100021C34((uint64_t)v17, a3);
    *(unsigned char *)(a3 + 45) = 0;
  }
  uint64_t v13 = v18;
  uint64_t v14 = v19;
  sub_10003BCDC(v17, v18);
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v17);
  sub_10009B158(a1, (uint64_t)v20);
  sub_1000EDBE0((uint64_t)v20, a2, (uint64_t)v8);
  sub_10009B1B4(a1);
  uint64_t result = sub_1000E8400((uint64_t)v8, a3 + v9[7], type metadata accessor for Task.Logger);
  *(_DWORD *)(a3 + v9[8]) = 0;
  *(_DWORD *)(a3 + v9[10]) = 1;
  *(_DWORD *)(a3 + v9[11]) = 1;
  return result;
}

uint64_t sub_1000DD770()
{
  v1._countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v1);
  swift_bridgeObjectRelease();
  return 35;
}

uint64_t sub_1000DD7D8()
{
  sub_1000B9240(v0, (uint64_t)&v6);
  if (!v11) {
    goto LABEL_4;
  }
  if (v11 == 1)
  {
    if ((v10 & 1) == 0)
    {
      sub_100021BFC((long long *)&v6, (uint64_t)v4);
      sub_10003BCDC(v4, v5);
      uint64_t v1 = sub_1005E32A0();
      sub_1005E2C80(17);
      v12._countAndFlagsBits = 0x6E6E6F63206E6F20;
      v12._object = (void *)0xEF206E6F69746365;
      sub_1005E1E30(v12);
      sub_1005E2E90();
      swift_bridgeObjectRetain();
      v13._countAndFlagsBits = 0;
      v13._object = (void *)0xE000000000000000;
      sub_1005E1E30(v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
LABEL_4:
    sub_100021BFC((long long *)&v6, (uint64_t)v4);
    sub_10003BCDC(v4, v5);
    uint64_t v1 = sub_1005E32A0();
LABEL_9:
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v4);
    return v1;
  }
  int8x16_t v2 = vorrq_s8(v7, v8);
  if (v9 | ((unint64_t)v10 << 32) | *(void *)&vorr_s8(*(int8x8_t *)v2.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v2, v2, 8uLL)) | v6)return 0x64656C696146; {
  else
  }
    return 0x6574656C706D6F43;
}

uint64_t sub_1000DD9BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  int8x16_t v8 = (char *)&v53 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  char v11 = (uint64_t *)((char *)&v53 - v10);
  __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v53 - v13;
  uint64_t v15 = *(void *)(v1 + 48);
  uint64_t v16 = *(void *)(v15 + 16);
  char v59 = v8;
  uint64_t v60 = v2;
  uint64_t v57 = v1;
  uint64_t v54 = v12;
  if (v16)
  {
    uint64_t v17 = v15 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v18 = *(void *)(v12 + 72);
    uint64_t v56 = v15;
    swift_bridgeObjectRetain();
    uint64_t v19 = _swiftEmptyArrayStorage;
    uint64_t v58 = v18;
    do
    {
      sub_1000E8584(v17, (uint64_t)v14, type metadata accessor for TaskHistory.Running);
      sub_1000E8584((uint64_t)v14, (uint64_t)v11, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1000E8620((uint64_t)v11, type metadata accessor for TaskHistory.Running);
        sub_1000E8620((uint64_t)v14, type metadata accessor for TaskHistory.Running);
      }
      else
      {
        uint64_t v20 = *v11;
        uint64_t v21 = sub_10000566C(&qword_10070B6A0);
        sub_1000E8620((uint64_t)v11 + *(int *)(v21 + 64), type metadata accessor for ClientCommand);
        unint64_t v22 = CommandID.tag.getter(v20);
        LOBYTE(v61[0]) = v22;
        HIDWORD(v61[0]) = HIDWORD(v22);
        uint64_t v23 = sub_1005E1CA0();
        uint64_t v25 = v24;
        sub_1000E8620((uint64_t)v14, type metadata accessor for TaskHistory.Running);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_100015F0C(0, v19[2] + 1, 1, v19);
        }
        unint64_t v27 = v19[2];
        unint64_t v26 = v19[3];
        if (v27 >= v26 >> 1) {
          uint64_t v19 = sub_100015F0C((void *)(v26 > 1), v27 + 1, 1, v19);
        }
        v19[2] = v27 + 1;
        uint64_t v28 = &v19[2 * v27];
        unsigned char v28[4] = v23;
        v28[5] = v25;
        uint64_t v18 = v58;
      }
      v17 += v18;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    uint64_t v1 = v57;
    int8x16_t v8 = v59;
  }
  else
  {
    uint64_t v19 = _swiftEmptyArrayStorage;
  }
  v61[0] = v19;
  uint64_t v29 = sub_10000566C(&qword_100709F58);
  unint64_t v55 = sub_10001C548();
  uint64_t v56 = v29;
  uint64_t v58 = sub_1005E1A80();
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(v1 + 48);
  uint64_t v33 = *(void *)(v32 + 16);
  if (v33)
  {
    uint64_t v34 = v32 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
    uint64_t v35 = *(void *)(v54 + 72);
    uint64_t v53 = v31;
    uint64_t v54 = v32;
    swift_bridgeObjectRetain_n();
    int v36 = _swiftEmptyArrayStorage;
    do
    {
      sub_1000E8584(v34, (uint64_t)v8, type metadata accessor for TaskHistory.Running);
      sub_1000E8584((uint64_t)v8, (uint64_t)v5, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        int v37 = *(_DWORD *)v5;
        sub_10007C4A4(*((void *)v5 + 1));
        LODWORD(v61[0]) = v37;
        sub_10005FA78();
        uint64_t v38 = sub_1005E1F20();
        uint64_t v40 = v39;
        sub_1000E8620((uint64_t)v8, type metadata accessor for TaskHistory.Running);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v36 = sub_100015F0C(0, v36[2] + 1, 1, v36);
        }
        unint64_t v42 = v36[2];
        unint64_t v41 = v36[3];
        if (v42 >= v41 >> 1) {
          int v36 = sub_100015F0C((void *)(v41 > 1), v42 + 1, 1, v36);
        }
        v36[2] = v42 + 1;
        uint64_t v43 = &v36[2 * v42];
        v43[4] = v38;
        v43[5] = v40;
        int8x16_t v8 = v59;
      }
      else
      {
        sub_1000E8620((uint64_t)v5, type metadata accessor for TaskHistory.Running);
        sub_1000E8620((uint64_t)v8, type metadata accessor for TaskHistory.Running);
      }
      v34 += v35;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease_n();
    uint64_t v31 = v53;
  }
  else
  {
    int v36 = _swiftEmptyArrayStorage;
  }
  v61[0] = v36;
  uint64_t v44 = sub_1005E1A80();
  unsigned int v46 = v45;
  swift_bridgeObjectRelease();
  uint64_t v47 = sub_1000DD7D8();
  uint64_t v49 = v48;
  v61[0] = 0;
  v61[1] = 0xE000000000000000;
  sub_1005E2C80(30);
  swift_bridgeObjectRelease();
  strcpy((char *)v61, " commands: {");
  BYTE5(v61[1]) = 0;
  HIWORD(v61[1]) = -5120;
  v62._countAndFlagsBits = v58;
  v62._object = v31;
  sub_1005E1E30(v62);
  swift_bridgeObjectRelease();
  v63._countAndFlagsBits = 0x6F69746361202C7DLL;
  v63._object = (void *)0xED00007B203A736ELL;
  sub_1005E1E30(v63);
  v64._countAndFlagsBits = v44;
  v64._object = v46;
  sub_1005E1E30(v64);
  swift_bridgeObjectRelease();
  v65._countAndFlagsBits = 125;
  v65._object = (void *)0xE100000000000000;
  sub_1005E1E30(v65);
  uint64_t v50 = v61[0];
  uint64_t v51 = (void *)v61[1];
  v61[0] = v47;
  v61[1] = v49;
  swift_bridgeObjectRetain();
  v66._countAndFlagsBits = v50;
  v66._object = v51;
  sub_1005E1E30(v66);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v61[0];
}

unint64_t sub_1000DDF90(unint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Task.Logger(0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v41 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v15 = type metadata accessor for UntaggedResponse(0);
  unint64_t result = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    if (a1 >> 62 == 1)
    {
      uint64_t v19 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      if (*(unsigned char *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18))
      {
        sub_1000B9240(v3, (uint64_t)v48);
        if (v49)
        {
          swift_retain();
          sub_1000B9324((uint64_t)v48);
        }
        else
        {
          sub_100021BFC(v48, (uint64_t)&v50);
          uint64_t v25 = *(void *)(v3 + 48);
          uint64_t v53 = *(void *)(v3 + 56);
          uint64_t v27 = v51;
          uint64_t v26 = v52;
          sub_100057374((uint64_t)&v50, v51);
          uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 64);
          swift_retain();
          v47(v19, v25, v53, v27, v26);
          sub_1000B9324(v3);
          sub_100021BFC(&v50, v3);
          *(unsigned char *)(v3 + 45) = 0;
        }
        uint64_t v28 = type metadata accessor for RunningTask();
        uint64_t v29 = sub_1000E8584(v3 + *(int *)(v28 + 28), (uint64_t)v14, type metadata accessor for Task.Logger);
        __chkstk_darwin(v29);
        *(&v41 - 2) = v19;
        *(&v41 - 1) = (uint64_t)v14;
        sub_1000DED24(a1, (void (*)(long long *, uint64_t, uint64_t, unint64_t))sub_1000E846C);
        sub_1000E8620((uint64_t)v14, type metadata accessor for Task.Logger);
        return sub_100057604(v19, 1);
      }
      else
      {
        uint64_t v24 = type metadata accessor for RunningTask();
        sub_1000E8584(v3 + *(int *)(v24 + 28), (uint64_t)v9, type metadata accessor for Task.Logger);
        sub_1000DFD80((uint64_t)v9, v19, a1, (uint64_t)a2);
        return sub_1000E8620((uint64_t)v9, type metadata accessor for Task.Logger);
      }
    }
  }
  else
  {
    unint64_t v20 = *(void *)(a1 + 24);
    uint64_t v21 = *(void *)(a1 + 40);
    unint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 48);
    if (((1 << (v20 >> 60)) & 0x1E7) == 0)
    {
      unsigned int v46 = a2;
      uint64_t v47 = v22;
      uint64_t v53 = v21;
      if (v20 >> 60 == 3)
      {
        uint64_t v23 = swift_projectBox();
        sub_1000E8584(v23, (uint64_t)v18, type metadata accessor for UntaggedResponse);
        sub_1000B9240(v3, (uint64_t)v48);
        if (v49)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_100086880(v20);
          sub_1000B9324((uint64_t)v48);
        }
        else
        {
          sub_100021BFC(v48, (uint64_t)&v50);
          uint64_t v37 = *(void *)(v3 + 48);
          unint64_t v44 = *(void *)(v3 + 56);
          uint64_t v45 = v37;
          uint64_t v38 = v52;
          uint64_t v43 = v51;
          uint64_t v41 = v52;
          sub_100057374((uint64_t)&v50, v51);
          unint64_t v42 = *(void (**)(char *, uint64_t, unint64_t, uint64_t, uint64_t))(v38 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_100086880(v20);
          v42(v18, v45, v44, v43, v41);
          sub_1000B9324(v3);
          sub_100021BFC(&v50, v3);
          *(unsigned char *)(v3 + 45) = 0;
        }
        uint64_t v39 = type metadata accessor for RunningTask();
        uint64_t v40 = sub_1000E8584(v3 + *(int *)(v39 + 28), (uint64_t)v14, type metadata accessor for Task.Logger);
        __chkstk_darwin(v40);
        *(&v41 - 4) = (uint64_t)v46;
        *(&v41 - 3) = (uint64_t)v18;
        *(&v41 - 2) = (uint64_t)v14;
        sub_1000DED24(a1, (void (*)(long long *, uint64_t, uint64_t, unint64_t))sub_1000E85EC);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000E8620((uint64_t)v14, type metadata accessor for Task.Logger);
        uint64_t v35 = type metadata accessor for UntaggedResponse;
        uint64_t v36 = (uint64_t)v18;
      }
      else
      {
        unint64_t v30 = *(void *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v45 = *(void *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v32 = *(void *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
        uint64_t v31 = *(NSObject **)((v20 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
        unsigned int v33 = *(unsigned __int8 *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
        uint64_t v34 = type metadata accessor for RunningTask();
        sub_1000E8584(v3 + *(int *)(v34 + 28), (uint64_t)v12, type metadata accessor for Task.Logger);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100086880(v20);
        unint64_t v44 = v30;
        sub_1000E84F4(v30, v32, (uint64_t)v31, v33);
        sub_1000DF140((uint64_t)v12, v45, v30, v32, v31, v33, a1, v46);
        sub_1000E853C(v44, v32, (uint64_t)v31, v33);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = type metadata accessor for Task.Logger;
        uint64_t v36 = (uint64_t)v12;
      }
      sub_1000E8620(v36, v35);
      return sub_100086A88(v20);
    }
  }
  return result;
}

uint64_t sub_1000DE564(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = type metadata accessor for MailboxSyncState();
  uint64_t result = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a4 & 0x100000000) == 0)
  {
    Swift::String v62 = v18;
    uint64_t v63 = a2;
    uint64_t v81 = a3;
    uint64_t v19 = a1;
    uint64_t v20 = a1[3];
    uint64_t v21 = a1[4];
    unint64_t v61 = v19;
    sub_10003BCDC(v19, v20);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v21 + 32))(&v75, v20, v21);
    uint64_t v79 = v76;
    unsigned int v80 = v77;
    long long v78 = v75;
    sub_10001D550((uint64_t)&v78);
    if (*(unsigned char *)(a5 + 184) == 1)
    {
      uint64_t v22 = *(void *)(a5 + 160);
      uint64_t v23 = *(void *)(v22 + 16);
      if (v23)
      {
        uint64_t v58 = a6;
        uint64_t v59 = a7;
        uint64_t v60 = v7;
        uint64_t v24 = v22 + 32;
        unint64_t v25 = v80 | ((unint64_t)v80 << 32);
        long long v26 = *(_OWORD *)(v22 + 160);
        long long v71 = *(_OWORD *)(v22 + 144);
        long long v72 = v26;
        long long v27 = *(_OWORD *)(v22 + 192);
        long long v73 = *(_OWORD *)(v22 + 176);
        long long v74 = v27;
        long long v28 = *(_OWORD *)(v22 + 96);
        long long v67 = *(_OWORD *)(v22 + 80);
        long long v68 = v28;
        long long v29 = *(_OWORD *)(v22 + 128);
        long long v69 = *(_OWORD *)(v22 + 112);
        long long v70 = v29;
        long long v30 = *(_OWORD *)(v22 + 48);
        long long v64 = *(_OWORD *)(v22 + 32);
        long long v65 = v30;
        long long v66 = *(_OWORD *)(v22 + 64);
        uint64_t v31 = 1;
        uint64_t v32 = v70;
        if (!(void)v70) {
          goto LABEL_6;
        }
LABEL_5:
        unsigned int v33 = (int *)(v32
                    + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
        swift_beginAccess();
        for (int i = *v33; ; int i = 0)
        {
          if ((DWORD2(v65) | ((unint64_t)DWORD2(v65) << 32)) == v25)
          {
            uint64_t v35 = *(void *)(v65 + 16);
            if (v35 == *(void *)(v79 + 16))
            {
              if (v35) {
                BOOL v36 = (void)v65 == v79;
              }
              else {
                BOOL v36 = 1;
              }
              if (!v36)
              {
                if (*(unsigned __int8 *)(v65 + 32) != *(unsigned __int8 *)(v79 + 32)) {
                  goto LABEL_25;
                }
                if (v35 != 1)
                {
                  if (*(unsigned __int8 *)(v65 + 33) != *(unsigned __int8 *)(v79 + 33)) {
                    goto LABEL_25;
                  }
                  if (v35 != 2)
                  {
                    if (*(unsigned __int8 *)(v65 + 34) != *(unsigned __int8 *)(v79 + 34)) {
                      goto LABEL_25;
                    }
                    uint64_t v37 = (unsigned __int8 *)(v65 + 35);
                    uint64_t v38 = (unsigned __int8 *)(v79 + 35);
                    uint64_t v39 = v35 - 3;
                    while (v39)
                    {
                      int v41 = *v37++;
                      int v40 = v41;
                      int v42 = *v38++;
                      --v39;
                      if (v40 != v42) {
                        goto LABEL_25;
                      }
                    }
                  }
                }
              }
              if (v32 && i == a4)
              {
                uint64_t v52 = v32
                    + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
                swift_beginAccess();
                uint64_t v53 = _s13SelectedStateV7WrappedVMa(0);
                uint64_t v54 = (uint64_t)v62;
                sub_1000E8584(v52 + *(int *)(v53 + 20), (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
                uint64_t v55 = v61[3];
                uint64_t v56 = v61[4];
                sub_100057374((uint64_t)v61, v55);
                uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 96);
                sub_100007780((uint64_t)&v64);
                swift_retain();
                v57(v58, v63, v81, v54, v59, v55, v56);
                sub_1000E8620(v54, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
                swift_release();
                sub_100007820((uint64_t)&v64);
                return sub_10001D550((uint64_t)&v79);
              }
            }
          }
LABEL_25:
          if (v31 == v23) {
            return sub_10001D550((uint64_t)&v79);
          }
          uint64_t v43 = (long long *)(v24 + 176 * v31);
          long long v44 = *v43;
          long long v45 = v43[2];
          long long v65 = v43[1];
          long long v66 = v45;
          long long v64 = v44;
          long long v46 = v43[3];
          long long v47 = v43[4];
          long long v48 = v43[6];
          long long v69 = v43[5];
          long long v70 = v48;
          long long v67 = v46;
          long long v68 = v47;
          long long v49 = v43[7];
          long long v50 = v43[8];
          long long v51 = v43[10];
          long long v73 = v43[9];
          long long v74 = v51;
          long long v71 = v49;
          long long v72 = v50;
          ++v31;
          uint64_t v32 = v70;
          if ((void)v70) {
            goto LABEL_5;
          }
LABEL_6:
          ;
        }
      }
    }
    return sub_10001D550((uint64_t)&v79);
  }
  return result;
}

uint64_t sub_1000DE8E8(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *, uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v11 = type metadata accessor for UntaggedResponse(0);
  uint64_t result = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    if (a1 >> 62 != 1) {
      return result;
    }
    sub_1000B9240(a2, (uint64_t)v46);
    if (v49 == 1)
    {
      uint64_t v15 = v47;
      unsigned __int8 v16 = v48;
      sub_100021BFC(v46, (uint64_t)v50);
      uint64_t v17 = *(void *)(a2 + 48);
      uint64_t v18 = *(void *)(a2 + 56);
      LOBYTE(v46[0]) = v16;
      sub_1000E2A90(v50, v17, v18, v15 | ((unint64_t)v16 << 32), a3, a4, a5);
      if (!v5)
      {
        sub_1000B9324(a2);
        uint64_t result = sub_100021BFC(v50, a2);
        *(_DWORD *)(a2 + 40) = v15;
        *(unsigned char *)(a2 + 44) = v16;
        *(unsigned char *)(a2 + 45) = 1;
        return result;
      }
      return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v50);
    }
    return sub_1000B9324((uint64_t)v46);
  }
  uint64_t v19 = *(unsigned int *)(a1 + 16);
  uint64_t v44 = a5;
  uint64_t v45 = v19;
  unint64_t v20 = *(void *)(a1 + 24);
  uint64_t v22 = *(void *)(a1 + 40);
  uint64_t v21 = *(void *)(a1 + 48);
  sub_1000B9240(a2, (uint64_t)v46);
  if (v49 != 1) {
    return sub_1000B9324((uint64_t)v46);
  }
  uint64_t v42 = v22;
  uint64_t v43 = v21;
  unsigned int v23 = v47;
  unsigned __int8 v24 = v48;
  sub_100021BFC(v46, (uint64_t)v50);
  if ((v24 & 1) == 0 && v45 == v23)
  {
    unint64_t v25 = v20;
    if (v20 >> 60 == 3)
    {
      uint64_t v26 = *(void *)(a2 + 48);
      uint64_t v27 = swift_projectBox();
      sub_1000E8584(v27, (uint64_t)v14, type metadata accessor for UntaggedResponse);
      if (swift_getEnumCaseMultiPayload() == 12)
      {
        uint64_t v28 = *((void *)v14 + 1);
        uint64_t v35 = *(void *)v14;
        uint64_t v41 = v28;
        uint64_t v29 = *((void *)v14 + 3);
        uint64_t v40 = *((void *)v14 + 2);
        uint64_t v39 = v29;
        uint64_t v38 = *((void *)v14 + 5);
        v51[0] = v35;
        v51[1] = v28;
        v51[2] = v40;
        v51[3] = v29;
        char v52 = v14[32];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v37 = v20;
        sub_100086880(v20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v30 = v35;
        sub_1000E872C(v35, v41);
        uint64_t v36 = sub_1000E56A4((uint64_t)v51, v26);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v31 = v41;
        sub_1000E8770(v30, v41);
        sub_1000E8770(v30, v31);
        swift_bridgeObjectRelease();
        if ((v36 & 0x100000000) != 0)
        {
          _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v50);
          sub_100086A88(v37);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        uint64_t v32 = v45;
        unint64_t v25 = v37;
        goto LABEL_17;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100086880(v20);
      sub_1000E8620((uint64_t)v14, type metadata accessor for UntaggedResponse);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100086880(v20);
    }
    uint64_t v32 = v45;
LABEL_17:
    uint64_t v33 = *(void *)(a2 + 48);
    uint64_t v34 = *(void *)(a2 + 56);
    LOBYTE(v46[0]) = 0;
    sub_1000E2A90(v50, v33, v34, v32, a3, a4, v44);
    if (!v5)
    {
      sub_1000B9324(a2);
      sub_100021BFC(v50, a2);
      sub_100086A88(v25);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(_DWORD *)(a2 + 40) = v32;
      *(_WORD *)(a2 + 44) = 256;
      return result;
    }
    sub_100086A88(v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v50);
}

uint64_t sub_1000DED24(unint64_t a1, void (*a2)(long long *, uint64_t, uint64_t, unint64_t))
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for UntaggedResponse(0);
  uint64_t result = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    if (a1 >> 62 != 1) {
      return result;
    }
    sub_1000B9240(v2, (uint64_t)v40);
    if (v43 == 1)
    {
      uint64_t v11 = v41;
      unsigned __int8 v12 = v42;
      sub_100021BFC(v40, (uint64_t)v44);
      uint64_t v13 = *(void *)(v2 + 48);
      uint64_t v14 = *(void *)(v2 + 56);
      LOBYTE(v40[0]) = v12;
      a2(v44, v13, v14, v11 | ((unint64_t)v12 << 32));
      if (!v3)
      {
        sub_1000B9324(v2);
        uint64_t result = sub_100021BFC(v44, v2);
        *(_DWORD *)(v2 + 40) = v11;
        *(unsigned char *)(v2 + 44) = v12;
        *(unsigned char *)(v2 + 45) = 1;
        return result;
      }
      return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v44);
    }
    return sub_1000B9324((uint64_t)v40);
  }
  unint64_t v38 = *(unsigned int *)(a1 + 16);
  unint64_t v39 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  sub_1000B9240(v2, (uint64_t)v40);
  if (v43 != 1) {
    return sub_1000B9324((uint64_t)v40);
  }
  uint64_t v37 = v15;
  unsigned int v17 = v41;
  unsigned __int8 v18 = v42;
  sub_100021BFC(v40, (uint64_t)v44);
  if ((v18 & 1) == 0 && v38 == v17)
  {
    unint64_t v19 = v39;
    if (v39 >> 60 == 3)
    {
      uint64_t v20 = *(void *)(v2 + 48);
      uint64_t v21 = swift_projectBox();
      sub_1000E8584(v21, (uint64_t)v10, type metadata accessor for UntaggedResponse);
      if (swift_getEnumCaseMultiPayload() == 12)
      {
        uint64_t v22 = *((void *)v10 + 1);
        uint64_t v34 = *(void *)v10;
        uint64_t v23 = *((void *)v10 + 3);
        uint64_t v35 = *((void *)v10 + 2);
        uint64_t v36 = v22;
        uint64_t v33 = *((void *)v10 + 5);
        v45[0] = v34;
        v45[1] = v22;
        v45[2] = v35;
        v45[3] = v23;
        char v46 = v10[32];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v30 = v20;
        uint64_t v32 = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100086880(v39);
        sub_1000E872C(v34, v36);
        uint64_t v31 = sub_1000E56A4((uint64_t)v45, v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v24 = v34;
        uint64_t v25 = v36;
        sub_1000E8770(v34, v36);
        sub_1000E8770(v24, v25);
        swift_bridgeObjectRelease();
        if ((v31 & 0x100000000) != 0)
        {
          _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v44);
          sub_100086A88(v39);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        unint64_t v26 = v38;
        goto LABEL_17;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100086880(v39);
      sub_1000E8620((uint64_t)v10, type metadata accessor for UntaggedResponse);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100086880(v19);
    }
    unint64_t v26 = v38;
LABEL_17:
    uint64_t v27 = *(void *)(v2 + 48);
    uint64_t v28 = *(void *)(v2 + 56);
    LOBYTE(v40[0]) = 0;
    a2(v44, v27, v28, v26);
    if (!v4)
    {
      sub_1000B9324(v2);
      sub_100021BFC(v44, v2);
      sub_100086A88(v39);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(_DWORD *)(v2 + 40) = v26;
      *(_WORD *)(v2 + 44) = 256;
      return result;
    }
    sub_100086A88(v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v44);
}

uint64_t sub_1000DF140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5, unsigned int a6, uint64_t a7, char *a8)
{
  uint64_t v98 = a7;
  long long v99 = a8;
  unsigned int v101 = a6;
  os_log_t v100 = a5;
  uint64_t v104 = a3;
  uint64_t v105 = a4;
  uint64_t v102 = a1;
  uint64_t v106 = sub_1005E0ED0();
  uint64_t v97 = *(void *)(v106 - 8);
  uint64_t v10 = __chkstk_darwin(v106);
  unsigned __int8 v12 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v91 - v13;
  uint64_t v15 = sub_10000566C(&qword_10070C3B0);
  __chkstk_darwin(v15 - 8);
  unsigned int v17 = (unsigned int *)((char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = type metadata accessor for ClientCommand(0);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v91 - v23;
  __chkstk_darwin(v22);
  unint64_t v26 = (char *)&v91 - v25;
  uint64_t v103 = v8;
  uint64_t v27 = a2;
  sub_1000EFE5C(a2, v17);
  uint64_t v28 = sub_10000566C(&qword_10070C3B8);
  if ((*(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v17, 1, v28) == 1) {
    return sub_100007A48((uint64_t)v17, &qword_10070C3B0);
  }
  uint64_t v30 = v106;
  long long v95 = v24;
  long long v92 = v21;
  long long v94 = v14;
  long long v93 = v12;
  uint64_t v91 = v27;
  unsigned int v96 = *v17;
  sub_1000E8400((uint64_t)v17 + *(int *)(v28 + 48), (uint64_t)v26, type metadata accessor for ClientCommand);
  uint64_t v31 = v103;
  sub_1000B9240(v103, (uint64_t)v107);
  if (v108)
  {
    sub_1000B9324((uint64_t)v107);
    uint64_t v32 = (uint64_t)v95;
    uint64_t v33 = v30;
    uint64_t v34 = v102;
    uint64_t v35 = v98;
    char v36 = v101;
    os_log_t v37 = v100;
    goto LABEL_5;
  }
  sub_100021BFC(v107, (uint64_t)&v109);
  unsigned __int8 v42 = v26;
  uint64_t v44 = v110;
  uint64_t v43 = v111;
  sub_100057374((uint64_t)&v109, v110);
  uint64_t v45 = *(void (**)(void, char *, uint64_t, uint64_t, os_log_t, void, uint64_t, uint64_t, uint64_t))(v43 + 72);
  uint64_t v90 = v43;
  unint64_t v26 = v42;
  char v46 = v42;
  os_log_t v37 = v100;
  char v36 = v101;
  uint64_t v34 = v102;
  uint64_t v47 = v112;
  v45(v96, v46, v104, v105, v100, v101, v102, v44, v90);
  uint64_t v112 = v47;
  if (!v47)
  {
    sub_1000B9324(v31);
    sub_100021BFC(&v109, v31);
    *(unsigned char *)(v31 + 45) = 0;
    uint64_t v33 = v106;
    uint64_t v32 = (uint64_t)v95;
    uint64_t v35 = v98;
LABEL_5:
    unint64_t v38 = __chkstk_darwin(v35);
    *((_DWORD *)&v91 - 16) = v96;
    uint64_t v39 = v104;
    *(&v91 - 7) = (uint64_t)v26;
    *(&v91 - 6) = v39;
    *(&v91 - 5) = v105;
    *(&v91 - 4) = (uint64_t)v37;
    *((unsigned char *)&v91 - 24) = v36;
    uint64_t v90 = v34;
    uint64_t v40 = v112;
    sub_1000DE8E8(v38, v31, v41, (void (*)(void *, uint64_t, uint64_t, uint64_t))sub_1000E8680, (uint64_t)(&v91 - 10));
    uint64_t v112 = v40;
    if (!v40)
    {
      uint64_t v48 = v34 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
      uint64_t v49 = *(void *)(v48 + 8);
      unint64_t v50 = *(void *)(v48 + 16);
      uint64_t v103 = *(void *)v48;
      uint64_t v104 = v49;
      uint64_t v51 = *(void *)(v48 + 24);
      uint64_t v105 = *(void *)(v48 + 32);
      unsigned int v52 = *(_DWORD *)(v48 + 40);
      uint64_t v102 = v51;
      if (v51 < 0)
      {
        uint64_t v70 = v51;
        uint64_t v71 = v97;
        long long v72 = v93;
        (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v93, v34, v33);
        sub_1000E8260(v103, v104, v50, v70);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v73 = (uint64_t)v92;
        sub_1000E8584((uint64_t)v26, (uint64_t)v92, type metadata accessor for ClientCommand);
        long long v74 = sub_1005E0EB0();
        os_log_type_t v75 = sub_1005E2580();
        int v76 = v75;
        if (os_log_type_enabled(v74, v75))
        {
          uint64_t v77 = swift_slowAlloc();
          os_log_t v100 = (os_log_t)swift_slowAlloc();
          *(void *)&long long v109 = v100;
          *(_DWORD *)uint64_t v77 = 68160003;
          unsigned int v101 = v52;
          LODWORD(v107[0]) = 2;
          LODWORD(v98) = v76;
          uint64_t v78 = v105;
          long long v99 = v26;
          sub_1005E2960();
          *(_WORD *)(v77 + 8) = 256;
          LOBYTE(v107[0]) = v103;
          sub_1005E2960();
          *(_WORD *)(v77 + 11) = 2082;
          swift_bridgeObjectRetain();
          *(void *)&v107[0] = sub_1000C6914(v104, v50, (uint64_t *)&v109);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v77 + 21) = 1040;
          LODWORD(v107[0]) = 2;
          sub_1005E2960();
          *(_WORD *)(v77 + 27) = 512;
          LOWORD(v107[0]) = v102;
          sub_1005E2960();
          *(_WORD *)(v77 + 31) = 2160;
          *(void *)&v107[0] = 0x786F626C69616DLL;
          sub_1005E2960();
          *(_WORD *)(v77 + 41) = 2085;
          *(void *)&v107[0] = v78;
          DWORD2(v107[0]) = v101;
          swift_bridgeObjectRetain();
          uint64_t v79 = sub_1005E1CC0();
          *(void *)&v107[0] = sub_1000C6914(v79, v80, (uint64_t *)&v109);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_WORD *)(v77 + 51) = 2082;
          uint64_t v81 = (uint64_t)v92;
          unint64_t v82 = ClientCommand.logIdentifier.getter();
          *(void *)&v107[0] = sub_1000C6914(v82, v83, (uint64_t *)&v109);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1000E8620(v81, type metadata accessor for ClientCommand);
          *(_WORD *)(v77 + 61) = 2082;
          unint64_t v84 = CommandID.tag.getter(v91);
          uint64_t v85 = Tag.debugDescription.getter(v84 & 0xFFFFFFFF000000FFLL);
          *(void *)&v107[0] = sub_1000C6914(v85, v86, (uint64_t *)&v109);
          unint64_t v26 = v99;
          sub_1005E2960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v77 + 71) = 1024;
          LODWORD(v107[0]) = v96;
          sub_1005E2960();
          _os_log_impl((void *)&_mh_execute_header, v74, (os_log_type_t)v98, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Completed '%{public}s' (%{public}s, #%u)", (uint8_t *)v77, 0x4Du);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v97 + 8))(v93, v106);
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          sub_1000E8620(v73, type metadata accessor for ClientCommand);

          (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v106);
        }
      }
      else
      {
        uint64_t v53 = v33;
        uint64_t v54 = v97;
        (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v94, v34, v53);
        unsigned int v101 = v52;
        sub_1000E8260(v103, v104, v50, v51);
        swift_bridgeObjectRetain();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        sub_1000E8584((uint64_t)v26, v32, type metadata accessor for ClientCommand);
        uint64_t v55 = sub_1005E0EB0();
        os_log_type_t v56 = sub_1005E2580();
        int v57 = v56;
        os_log_t v100 = v55;
        if (os_log_type_enabled(v55, v56))
        {
          uint64_t v58 = swift_slowAlloc();
          long long v99 = v26;
          uint64_t v59 = v58;
          uint64_t v98 = swift_slowAlloc();
          *(void *)&v107[0] = v98;
          *(_DWORD *)uint64_t v59 = 68158978;
          LODWORD(v109) = 2;
          long long v92 = (char *)&v109 + 4;
          sub_1005E2960();
          *(_WORD *)(v59 + 8) = 256;
          LODWORD(v93) = v57;
          uint64_t v60 = v103;
          LOBYTE(v109) = v103;
          sub_1005E2960();
          *(_WORD *)(v59 + 11) = 2082;
          swift_bridgeObjectRetain();
          uint64_t v61 = v104;
          *(void *)&long long v109 = sub_1000C6914(v104, v50, (uint64_t *)v107);
          sub_1005E2960();
          uint64_t v62 = v102;
          sub_1000E82B0(v60, v61, v50, v102);
          sub_1000E82B0(v60, v61, v50, v62);
          swift_bridgeObjectRelease();
          *(_WORD *)(v59 + 21) = 2082;
          uint64_t v63 = (uint64_t)v95;
          unint64_t v64 = ClientCommand.logIdentifier.getter();
          *(void *)&long long v109 = sub_1000C6914(v64, v65, (uint64_t *)v107);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1000E8620(v63, type metadata accessor for ClientCommand);
          *(_WORD *)(v59 + 31) = 2082;
          unint64_t v66 = CommandID.tag.getter(v91);
          uint64_t v67 = Tag.debugDescription.getter(v66 & 0xFFFFFFFF000000FFLL);
          *(void *)&long long v109 = sub_1000C6914(v67, v68, (uint64_t *)v107);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v59 + 41) = 1024;
          LODWORD(v109) = v96;
          sub_1005E2960();
          os_log_t v69 = v100;
          _os_log_impl((void *)&_mh_execute_header, v100, (os_log_type_t)v93, "[%.*hhx-%{public}s] Completed '%{public}s' (%{public}s, #%u)", (uint8_t *)v59, 0x2Fu);
          swift_arrayDestroy();
          swift_slowDealloc();
          unint64_t v26 = v99;
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v97 + 8))(v94, v106);
        }
        else
        {
          uint64_t v88 = v103;
          uint64_t v87 = v104;
          uint64_t v89 = v102;
          sub_1000E82B0(v103, v104, v50, v102);
          sub_1000E82B0(v88, v87, v50, v89);
          sub_1000E8620(v32, type metadata accessor for ClientCommand);

          (*(void (**)(char *, uint64_t))(v54 + 8))(v94, v106);
        }
      }
    }
    return sub_1000E8620((uint64_t)v26, type metadata accessor for ClientCommand);
  }
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v109);
  return sub_1000E8620((uint64_t)v26, type metadata accessor for ClientCommand);
}

BOOL sub_1000DFD80(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v91 = a4;
  uint64_t v9 = sub_1005E0ED0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = &v78[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v15 = &v78[-v14];
  uint64_t v16 = sub_1000F0274(a2);
  unint64_t v92 = v17 & 0xF000000000000007;
  if ((v17 & 0xF000000000000007) != 0xF000000000000007)
  {
    unint64_t v18 = v17;
    uint64_t v90 = a3;
    uint64_t v19 = a1;
    uint64_t v87 = v15;
    uint64_t v88 = v10;
    uint64_t v20 = v16;
    sub_1000B9240(v5, (uint64_t)v93);
    uint64_t v89 = v9;
    if (v94)
    {
      sub_1000B9324((uint64_t)v93);
      uint64_t v21 = v20;
    }
    else
    {
      uint64_t v26 = v5;
      sub_100021BFC(v93, (uint64_t)&v95);
      uint64_t v28 = v96;
      uint64_t v27 = v97;
      sub_100057374((uint64_t)&v95, v96);
      uint64_t v21 = v20;
      uint64_t v29 = v98;
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v27 + 80))(v20, v18, v28, v27);
      uint64_t v98 = v29;
      if (v29)
      {
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v95);
        sub_1000E88F8(v20, v18);
        return v92 != 0xF000000000000007;
      }
      uint64_t v5 = v26;
      sub_1000B9324(v26);
      sub_100021BFC(&v95, v26);
      *(unsigned char *)(v26 + 45) = 0;
    }
    uint64_t v22 = v13;
    unint64_t v23 = __chkstk_darwin(v90);
    *(_DWORD *)&v78[-32] = v21;
    *(void *)&v78[-24] = v18;
    *(void *)&v78[-16] = v19;
    uint64_t v24 = v98;
    sub_1000DE8E8(v23, v5, v25, (void (*)(void *, uint64_t, uint64_t, uint64_t))sub_1000E8870, (uint64_t)&v78[-48]);
    uint64_t v98 = v24;
    if (v24)
    {
      sub_1000E88F8(v21, v18);
    }
    else
    {
      uint64_t v30 = v19 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
      uint64_t v31 = *(NSObject **)v30;
      uint64_t v32 = *(void *)(v30 + 8);
      unint64_t v34 = *(void *)(v30 + 16);
      uint64_t v33 = *(void *)(v30 + 24);
      uint64_t v91 = *(void *)(v30 + 32);
      LODWORD(v90) = *(_DWORD *)(v30 + 40);
      os_log_t v85 = v31;
      uint64_t v86 = v33;
      uint64_t v84 = v32;
      if (v33 < 0)
      {
        uint64_t v53 = v88;
        uint64_t v54 = v19;
        uint64_t v55 = v89;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v88 + 16))(v22, v54, v89);
        sub_1000E8260((uint64_t)v85, v32, v34, v86);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        sub_1000E8910(v21, v18);
        sub_1000E55A4(v18);
        unint64_t v56 = v18;
        uint64_t v87 = v22;
        int v57 = sub_1005E0EB0();
        os_log_type_t v58 = sub_1005E2580();
        if (!os_log_type_enabled(v57, v58))
        {
          sub_1000E88F8(v21, v56);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          sub_1000E88F8(v21, v56);
          sub_1000E88F8(v21, v56);

          (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v87, v55);
          return v92 != 0xF000000000000007;
        }
        uint64_t v59 = swift_slowAlloc();
        uint64_t v81 = v21;
        uint64_t v60 = v59;
        os_log_t v83 = (os_log_t)swift_slowAlloc();
        *(void *)&long long v95 = v83;
        *(_DWORD *)uint64_t v60 = 68159747;
        LODWORD(v93[0]) = 2;
        sub_1005E2960();
        *(_WORD *)(v60 + 8) = 256;
        LOBYTE(v93[0]) = (_BYTE)v85;
        sub_1005E2960();
        *(_WORD *)(v60 + 11) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&v93[0] = sub_1000C6914(v84, v34, (uint64_t *)&v95);
        os_log_t v85 = v57;
        uint64_t v61 = v91;
        unint64_t v82 = v56;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v60 + 21) = 1040;
        LODWORD(v93[0]) = 2;
        sub_1005E2960();
        *(_WORD *)(v60 + 27) = 512;
        LOWORD(v93[0]) = v86;
        sub_1005E2960();
        *(_WORD *)(v60 + 31) = 2160;
        *(void *)&v93[0] = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v60 + 41) = 2085;
        os_log_type_t v62 = v58;
        *(void *)&v93[0] = v61;
        DWORD2(v93[0]) = v90;
        swift_bridgeObjectRetain();
        uint64_t v63 = sub_1005E1CC0();
        *(void *)&v93[0] = sub_1000C6914(v63, v64, (uint64_t *)&v95);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_WORD *)(v60 + 51) = 2082;
        unint64_t v65 = v82;
        char v66 = Action.kind.getter(v82);
        unint64_t v67 = Action.Kind.description.getter(v66);
        *(void *)&v93[0] = sub_1000C6914(v67, v68, (uint64_t *)&v95);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        uint64_t v69 = v81;
        sub_1000E88F8(v81, v65);
        sub_1000E88F8(v69, v65);
        *(_WORD *)(v60 + 61) = 1024;
        LODWORD(v93[0]) = v69;
        sub_1005E2960();
        os_log_t v70 = v85;
        _os_log_impl((void *)&_mh_execute_header, v85, v62, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Completed action '%{public}s' (#%u)", (uint8_t *)v60, 0x43u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v51 = v69;
        unint64_t v52 = v65;
      }
      else
      {
        uint64_t v35 = v88;
        uint64_t v36 = v89;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v88 + 16))(v87, v19, v89);
        sub_1000E8260((uint64_t)v85, v32, v34, v86);
        swift_bridgeObjectRetain();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        sub_1000E8910(v21, v18);
        sub_1000E55A4(v18);
        unint64_t v37 = v18;
        unint64_t v38 = sub_1005E0EB0();
        os_log_type_t v39 = sub_1005E2580();
        int v40 = v39;
        os_log_t v83 = v38;
        if (!os_log_type_enabled(v38, v39))
        {
          sub_1000E88F8(v21, v37);
          os_log_t v71 = v85;
          unint64_t v72 = v37;
          uint64_t v73 = v84;
          uint64_t v74 = v36;
          uint64_t v75 = v21;
          uint64_t v76 = v86;
          unint64_t v82 = v34;
          sub_1000E82B0((uint64_t)v85, v84, v34, v86);
          sub_1000E82B0((uint64_t)v71, v73, v82, v76);
          sub_1000E88F8(v75, v72);
          sub_1000E88F8(v75, v72);

          (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v87, v74);
          return v92 != 0xF000000000000007;
        }
        uint64_t v41 = swift_slowAlloc();
        uint64_t v81 = swift_slowAlloc();
        *(void *)&v93[0] = v81;
        *(_DWORD *)uint64_t v41 = 68158722;
        LODWORD(v95) = 2;
        unint64_t v82 = v37;
        unint64_t v80 = (char *)&v95 + 4;
        sub_1005E2960();
        *(_WORD *)(v41 + 8) = 256;
        os_log_t v42 = v85;
        LOBYTE(v95) = (_BYTE)v85;
        sub_1005E2960();
        *(_WORD *)(v41 + 11) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v43 = v21;
        uint64_t v44 = v84;
        *(void *)&long long v95 = sub_1000C6914(v84, v34, (uint64_t *)v93);
        sub_1005E2960();
        int v79 = v40;
        uint64_t v45 = v86;
        sub_1000E82B0((uint64_t)v42, v44, v34, v86);
        sub_1000E82B0((uint64_t)v42, v44, v34, v45);
        swift_bridgeObjectRelease();
        *(_WORD *)(v41 + 21) = 2082;
        unint64_t v46 = v82;
        char v47 = Action.kind.getter(v82);
        unint64_t v48 = Action.Kind.description.getter(v47);
        *(void *)&long long v95 = sub_1000C6914(v48, v49, (uint64_t *)v93);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1000E88F8(v43, v46);
        sub_1000E88F8(v43, v46);
        *(_WORD *)(v41 + 31) = 1024;
        LODWORD(v95) = v43;
        sub_1005E2960();
        os_log_t v50 = v83;
        _os_log_impl((void *)&_mh_execute_header, v83, (os_log_type_t)v79, "[%.*hhx-%{public}s] Completed action '%{public}s' (#%u)", (uint8_t *)v41, 0x25u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v51 = v43;
        unint64_t v52 = v46;
      }
      sub_1000E88F8(v51, v52);
      (*(void (**)(unsigned char *, uint64_t))(v88 + 8))(v87, v89);
    }
  }
  return v92 != 0xF000000000000007;
}

uint64_t sub_1000E078C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1000B9240(v3, (uint64_t)&v29);
  if (v32 != 1) {
    return sub_1000B9324((uint64_t)&v29);
  }
  sub_100021BFC(&v29, (uint64_t)v33);
  uint64_t v8 = v34;
  uint64_t v9 = v35;
  sub_10003BCDC(v33, v34);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v9 + 32))(&v36, v8, v9);
  uint64_t v40 = v37;
  unsigned int v41 = v38;
  long long v39 = v36;
  sub_10001D550((uint64_t)&v39);
  if ((v41 | ((unint64_t)v41 << 32)) == (a2 | ((unint64_t)a2 << 32)))
  {
    BOOL v10 = sub_1000255D4(v40, a1);
    sub_10001D550((uint64_t)&v40);
    if (v10)
    {
      swift_retain_n();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      sub_100021C34((uint64_t)v33, (uint64_t)&v29);
      swift_bridgeObjectRetain_n();
      uint64_t v11 = sub_1005E0EB0();
      os_log_type_t v12 = sub_1005E2580();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 68158723;
        sub_1005E2960();
        *(_WORD *)(v13 + 8) = 256;
        swift_release();
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v13 + 11) = 2160;
        sub_1005E2960();
        *(_WORD *)(v13 + 21) = 2085;
        uint64_t v25 = a1;
        unsigned int v26 = a2;
        swift_bridgeObjectRetain();
        uint64_t v14 = sub_1005E1CC0();
        uint64_t v25 = sub_1000C6914(v14, v15, &v24);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 31) = 2082;
        uint64_t v16 = v30;
        uint64_t v17 = v31;
        sub_10003BCDC(&v29, v30);
        uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 72))(v16, v17);
        uint64_t v25 = sub_1000C6914(v18, v19, &v24);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v29);
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "[%.*hhx] [%{sensitive,mask.mailbox}s] Marking task '%{public}s' as failed because we de-selected its mailbox.", (uint8_t *)v13, 0x29u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();

        swift_release_n();
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v29);
      }
      sub_1000B9240(v4, (uint64_t)&v29);
      if (v32)
      {
        if (v32 == 1)
        {
          sub_100021BFC(&v29, (uint64_t)&v25);
          uint64_t v21 = v27;
          uint64_t v22 = v28;
          sub_10003BCDC(&v25, v27);
          uint64_t v23 = type metadata accessor for RunningTask();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 136))(a3, v4 + *(int *)(v23 + 28), v21, v22);
          sub_1000B9324(v4);
          *(void *)uint64_t v4 = 1;
          *(_OWORD *)(v4 + 8) = 0u;
          *(_OWORD *)(v4 + 24) = 0u;
          *(void *)(v4 + 37) = 0;
          *(unsigned char *)(v4 + 45) = 2;
          _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v25);
        }
      }
      else
      {
        sub_1000B9324(v4);
        *(void *)uint64_t v4 = 1;
        *(_OWORD *)(v4 + 8) = 0u;
        *(_OWORD *)(v4 + 24) = 0u;
        *(void *)(v4 + 37) = 0;
        *(unsigned char *)(v4 + 45) = 2;
        sub_1000B9324((uint64_t)&v29);
      }
    }
  }
  else
  {
    sub_10001D550((uint64_t)&v40);
  }
  return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v33);
}

uint64_t sub_1000E0C08(NSObject *a1, uint64_t a2, uint64_t (*a3)(uint64_t), NSObject *a4)
{
  uint64_t v5 = v4;
  char v116 = a3;
  uint64_t v9 = type metadata accessor for MailboxSyncState();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v103[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1005E0ED0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = &v103[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  uint64_t v18 = &v103[-v17];
  sub_1000B9240(v5, (uint64_t)v133);
  if (v136)
  {
    if (v136 == 1)
    {
      if (v135 == 1)
      {
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v133);
        return 2;
      }
      int v114 = a1;
      LODWORD(v113) = v134;
      sub_100021BFC(v133, (uint64_t)&v129);
      uint64_t v30 = v131;
      uint64_t v31 = v132;
      sub_10003BCDC(&v129, v131);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v31 + 32))(&v137, v30, v31);
      uint64_t v141 = v138;
      unsigned int v142 = v139;
      long long v140 = v137;
      sub_10001D550((uint64_t)&v140);
      if (*(unsigned char *)(a2 + 184) != 1 || (uint64_t v32 = *(void *)(a2 + 160), (v33 = *(void *)(v32 + 16)) == 0))
      {
LABEL_37:
        sub_10001D550((uint64_t)&v141);
        goto LABEL_38;
      }
      uint64_t v111 = a4;
      uint64_t v115 = v5;
      uint64_t v34 = v32 + 32;
      unint64_t v35 = v142 | ((unint64_t)v142 << 32);
      long long v36 = *(_OWORD *)(v32 + 160);
      long long v124 = *(_OWORD *)(v32 + 144);
      long long v125 = v36;
      long long v37 = *(_OWORD *)(v32 + 192);
      long long v126 = *(_OWORD *)(v32 + 176);
      long long v127 = v37;
      long long v38 = *(_OWORD *)(v32 + 96);
      long long v120 = *(_OWORD *)(v32 + 80);
      long long v121 = v38;
      long long v39 = *(_OWORD *)(v32 + 128);
      long long v122 = *(_OWORD *)(v32 + 112);
      long long v123 = v39;
      long long v40 = *(_OWORD *)(v32 + 48);
      long long v117 = *(_OWORD *)(v32 + 32);
      long long v118 = v40;
      long long v119 = *(_OWORD *)(v32 + 64);
      uint64_t v41 = 1;
      uint64_t v42 = v123;
      if (!(void)v123) {
        goto LABEL_12;
      }
LABEL_11:
      uint64_t v43 = (int *)(v42
                  + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
      swift_beginAccess();
      for (int i = *v43; ; int i = 0)
      {
        if ((DWORD2(v118) | ((unint64_t)DWORD2(v118) << 32)) == v35)
        {
          uint64_t v45 = *(void *)(v118 + 16);
          if (v45 == *(void *)(v141 + 16))
          {
            if (v45) {
              BOOL v46 = (void)v118 == v141;
            }
            else {
              BOOL v46 = 1;
            }
            if (!v46)
            {
              if (*(unsigned __int8 *)(v118 + 32) != *(unsigned __int8 *)(v141 + 32)) {
                goto LABEL_31;
              }
              if (v45 != 1)
              {
                if (*(unsigned __int8 *)(v118 + 33) != *(unsigned __int8 *)(v141 + 33)) {
                  goto LABEL_31;
                }
                if (v45 != 2)
                {
                  if (*(unsigned __int8 *)(v118 + 34) != *(unsigned __int8 *)(v141 + 34)) {
                    goto LABEL_31;
                  }
                  char v47 = (unsigned __int8 *)(v118 + 35);
                  unint64_t v48 = (unsigned __int8 *)(v141 + 35);
                  uint64_t v49 = v45 - 3;
                  while (v49)
                  {
                    int v51 = *v47++;
                    int v50 = v51;
                    int v52 = *v48++;
                    --v49;
                    if (v50 != v52) {
                      goto LABEL_31;
                    }
                  }
                }
              }
            }
            if (v42 && i == v113)
            {
              uint64_t v101 = v42
                   + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
              swift_beginAccess();
              uint64_t v102 = _s13SelectedStateV7WrappedVMa(0);
              sub_1000E8584(v101 + *(int *)(v102 + 20), (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
              sub_100007780((uint64_t)&v117);
              swift_retain();
              sub_1000E1EF8((uint64_t)v11, v115, (uint64_t)&v129, v114, v113, v116, v111, (char *)&v128);
              sub_1000E8620((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
              swift_release();
              sub_100007820((uint64_t)&v117);
              sub_10001D550((uint64_t)&v141);
              uint64_t v19 = v128;
              if (v128 != 3)
              {
LABEL_39:
                _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v129);
                return v19;
              }
LABEL_38:
              uint64_t v19 = 2;
              goto LABEL_39;
            }
          }
        }
LABEL_31:
        if (v41 == v33) {
          goto LABEL_37;
        }
        uint64_t v53 = (long long *)(v34 + 176 * v41);
        long long v54 = *v53;
        long long v55 = v53[2];
        long long v118 = v53[1];
        long long v119 = v55;
        long long v117 = v54;
        long long v56 = v53[3];
        long long v57 = v53[4];
        long long v58 = v53[6];
        long long v122 = v53[5];
        long long v123 = v58;
        long long v120 = v56;
        long long v121 = v57;
        long long v59 = v53[7];
        long long v60 = v53[8];
        long long v61 = v53[10];
        long long v126 = v53[9];
        long long v127 = v61;
        long long v124 = v59;
        long long v125 = v60;
        ++v41;
        uint64_t v42 = v123;
        if ((void)v123) {
          goto LABEL_11;
        }
LABEL_12:
        ;
      }
    }
    return 1;
  }
  uint64_t v111 = a4;
  uint64_t v112 = v13;
  char v108 = v16;
  uint64_t v109 = (uint64_t)v18;
  uint64_t v113 = v12;
  int v114 = a1;
  sub_100021BFC(v133, (uint64_t)&v117);
  uint64_t v20 = *(int *)(type metadata accessor for RunningTask() + 40);
  int v21 = *(_DWORD *)(v5 + v20);
  uint64_t v22 = v21 & 0xFFFFFF;
  *(_DWORD *)(v5 + v20) = v21 + 1;
  uint64_t v23 = *(void *)(v5 + 48);
  uint64_t v24 = *(void *)(v5 + 56);
  uint64_t v26 = *((void *)&v118 + 1);
  uint64_t v25 = v119;
  sub_100057374((uint64_t)&v117, *((uint64_t *)&v118 + 1));
  uint64_t v115 = v5;
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v110 = v22;
  uint64_t v28 = v27(v22, v23, v24, v26, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((~v28 & 0xF000000000000007) == 0)
  {
    uint64_t v29 = v115;
    sub_1000B9324(v115);
    sub_100021C34((uint64_t)&v117, v29);
    *(unsigned char *)(v29 + 45) = 0;
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v117);
    return 1;
  }
  uint64_t v107 = v5 + 48;
  LODWORD(v111) = v116(v28);
  os_log_type_t v62 = (char *)v114 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
  uint64_t v63 = *((void *)v62 + 1);
  char v116 = *(uint64_t (**)(uint64_t))v62;
  unint64_t v64 = *((void *)v62 + 2);
  uint64_t v65 = *((void *)v62 + 3);
  char v66 = *((void *)v62 + 4);
  int v106 = *((_DWORD *)v62 + 10);
  if (v65 < 0)
  {
    uint64_t v81 = v112;
    uint64_t v82 = v113;
    unint64_t v83 = (unint64_t)v108;
    (*(void (**)(unsigned char *))(v112 + 16))(v108);
    sub_1000E8260((uint64_t)v116, v63, v64, v65);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_1000E8300(v28);
    sub_1000E55A4(v28);
    uint64_t v84 = sub_1005E0EB0();
    os_log_type_t v85 = sub_1005E2580();
    LODWORD(v114) = v85;
    if (os_log_type_enabled(v84, v85))
    {
      uint64_t v86 = swift_slowAlloc();
      os_log_t v105 = v84;
      uint64_t v87 = (uint64_t)v66;
      uint64_t v88 = v86;
      uint64_t v109 = swift_slowAlloc();
      *(void *)&long long v137 = v109;
      *(_DWORD *)uint64_t v88 = 68159747;
      LODWORD(v129) = 2;
      sub_1005E2960();
      *(_WORD *)(v88 + 8) = 256;
      LOBYTE(v129) = (_BYTE)v116;
      sub_1005E2960();
      *(_WORD *)(v88 + 11) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v129 = sub_1000C6914(v63, v64, (uint64_t *)&v137);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v88 + 21) = 1040;
      LODWORD(v129) = 2;
      sub_1005E2960();
      *(_WORD *)(v88 + 27) = 512;
      LOWORD(v129) = v65;
      sub_1005E2960();
      *(_WORD *)(v88 + 31) = 2160;
      uint64_t v129 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v88 + 41) = 2085;
      uint64_t v129 = v87;
      int v130 = v106;
      swift_bridgeObjectRetain();
      uint64_t v89 = sub_1005E1CC0();
      uint64_t v129 = sub_1000C6914(v89, v90, (uint64_t *)&v137);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_WORD *)(v88 + 51) = 2082;
      char v91 = Action.kind.getter(v28);
      unint64_t v92 = Action.Kind.description.getter(v91);
      uint64_t v129 = sub_1000C6914(v92, v93, (uint64_t *)&v137);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1000D4F98(v28);
      sub_1000D4F98(v28);
      *(_WORD *)(v88 + 61) = 2080;
      LODWORD(v129) = v111;
      sub_10005FA78();
      uint64_t v94 = sub_1005E1F20();
      uint64_t v129 = sub_1000C6914(v94, v95, (uint64_t *)&v137);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      os_log_t v96 = v105;
      _os_log_impl((void *)&_mh_execute_header, v105, (os_log_type_t)v114, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Sent '%{public}s' %s", (uint8_t *)v88, 0x47u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v112 + 8))(v108, v113);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_1000D4F98(v28);
      sub_1000D4F98(v28);

      (*(void (**)(unint64_t, uint64_t))(v81 + 8))(v83, v82);
    }
  }
  else
  {
    uint64_t v68 = v112;
    uint64_t v67 = v113;
    uint64_t v69 = v109;
    (*(void (**)(uint64_t))(v112 + 16))(v109);
    int v114 = v66;
    sub_1000E8260((uint64_t)v116, v63, v64, v65);
    swift_bridgeObjectRetain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_1000E8300(v28);
    char v108 = (unsigned char *)v28;
    sub_1000E55A4(v28);
    os_log_t v70 = sub_1005E0EB0();
    os_log_type_t v71 = sub_1005E2580();
    int v72 = v71;
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v73 = swift_slowAlloc();
      os_log_t v105 = (os_log_t)swift_slowAlloc();
      uint64_t v129 = (uint64_t)v105;
      *(_DWORD *)uint64_t v73 = 68158722;
      LODWORD(v137) = 2;
      sub_1005E2960();
      *(_WORD *)(v73 + 8) = 256;
      int v104 = v72;
      uint64_t v74 = v116;
      LOBYTE(v137) = (_BYTE)v116;
      sub_1005E2960();
      *(_WORD *)(v73 + 11) = 2082;
      swift_bridgeObjectRetain();
      *(void *)&long long v137 = sub_1000C6914(v63, v64, &v129);
      sub_1005E2960();
      sub_1000E82B0((uint64_t)v74, v63, v64, v65);
      sub_1000E82B0((uint64_t)v74, v63, v64, v65);
      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 21) = 2082;
      uint64_t v28 = (uint64_t)v108;
      char v75 = Action.kind.getter((unint64_t)v108);
      unint64_t v76 = Action.Kind.description.getter(v75);
      *(void *)&long long v137 = sub_1000C6914(v76, v77, &v129);
      int v78 = (int)v111;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1000D4F98(v28);
      sub_1000D4F98(v28);
      *(_WORD *)(v73 + 31) = 2080;
      LODWORD(v137) = v78;
      sub_10005FA78();
      uint64_t v79 = sub_1005E1F20();
      *(void *)&long long v137 = sub_1000C6914(v79, v80, &v129);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v70, (os_log_type_t)v104, "[%.*hhx-%{public}s] Sent '%{public}s' %s", (uint8_t *)v73, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v109, v113);
    }
    else
    {
      os_log_t v105 = v70;
      uint64_t v97 = v116;
      sub_1000E82B0((uint64_t)v116, v63, v64, v65);
      sub_1000E82B0((uint64_t)v97, v63, v64, v65);
      uint64_t v28 = (uint64_t)v108;
      sub_1000D4F98((unint64_t)v108);
      sub_1000D4F98(v28);

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v67);
    }
  }
  uint64_t v98 = v115;
  int v99 = v110;
  sub_1000B9324(v115);
  sub_100021C34((uint64_t)&v117, v98);
  *(unsigned char *)(v98 + 45) = 0;
  sub_1000F0960(v28, (int)v111, v99);
  sub_1000D4F98(v28);
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v117);
  return 0;
}

unint64_t *sub_1000E18E4@<X0>(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(uint64_t, uint64_t)@<X6>, uint64_t a8@<X7>, unsigned __int8 *a9@<X8>, uint64_t a10)
{
  void (*v25)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  unsigned __int8 *v48;
  int v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned char v67[40];
  int v68;
  __int16 v69;
  long long v70;
  uint64_t v71;
  int v72;
  long long v73;
  long long v74;
  unint64_t v75;
  uint64_t v76;

  uint64_t v63 = a8;
  os_log_type_t v62 = a7;
  long long v61 = a6;
  char v66 = a5;
  long long v59 = a2;
  long long v55 = a1;
  unint64_t v48 = a9;
  long long v57 = type metadata accessor for ClientCommand(0);
  long long v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  int v50 = (uint64_t)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000566C(&qword_10070C0B8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  int v52 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  int v51 = (char *)&v48 - v16;
  uint64_t v17 = sub_10000566C(&qword_10070C3A0);
  __chkstk_darwin(v17 - 8);
  long long v58 = (uint64_t)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v60 = a10;
  uint64_t v74 = *(_OWORD *)(a10 + 24);
  unint64_t v76 = v74;
  sub_1000E834C((uint64_t)&v74 + 8, (uint64_t)&v75);
  uint64_t v19 = a3[3];
  uint64_t v20 = a3[4];
  int v21 = sub_10003BCDC(a3, v19);
  uint64_t v22 = *(void *)(v19 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v22 + 16))(v24);
  uint64_t v25 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v20 + 32);
  sub_10002292C((uint64_t)&v76);
  sub_1000E83A8(&v75);
  v25(&v70, v19, v20);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v19);
  long long v54 = v71;
  uint64_t v49 = v72;
  uint64_t v73 = v70;
  sub_10001D550((uint64_t)&v73);
  uint64_t v26 = *(int *)(type metadata accessor for RunningTask() + 44);
  uint64_t v27 = *(_DWORD *)(a4 + v26);
  uint64_t v28 = v27 & 0xFFFFFF;
  *(_DWORD *)(a4 + v26) = v27 + 1;
  uint64_t v30 = *(void *)(a4 + 48);
  uint64_t v29 = *(void *)(a4 + 56);
  uint64_t v65 = a4;
  uint64_t v31 = (uint64_t)a3;
  uint64_t v32 = a3[3];
  uint64_t v33 = a3[4];
  sub_100057374((uint64_t)a3, v32);
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v35 = (uint64_t)v51;
  uint64_t v53 = v28;
  v34(v28, v30, v29, v55, v66, v32, v33);
  long long v36 = (uint64_t)v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000079E4(v35, v36, &qword_10070C0B8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v36, 1, v57) == 1)
  {
    long long v37 = type metadata accessor for Command();
    long long v38 = v58;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v58, 1, 1, v37);
    long long v39 = v59;
  }
  else
  {
    long long v40 = v50;
    sub_1000E8400(v36, v50, type metadata accessor for ClientCommand);
    uint64_t v41 = sub_10000566C(&qword_100709E80);
    long long v38 = v58;
    uint64_t v42 = v58 + *(int *)(v41 + 48);
    sub_1000E8584(v40, v58, type metadata accessor for ClientCommand);
    long long v39 = v59;
    *(_DWORD *)uint64_t v42 = v59;
    *(unsigned char *)(v42 + 4) = 0;
    *(void *)(v42 + 8) = v54;
    *(_DWORD *)(v42 + 16) = v49;
    uint64_t v43 = type metadata accessor for Command();
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1000E8620(v40, type metadata accessor for ClientCommand);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v38, 0, 1, v43);
  }
  sub_100007A48(v35, &qword_10070C0B8);
  swift_bridgeObjectRelease();
  uint64_t v44 = v65;
  uint64_t v45 = v64;
  BOOL v46 = sub_1000E5C60(v38, v53, v65, v66, v61, v62, v63, v60);
  sub_10001D550((uint64_t)&v76);
  sub_1000E83D4(&v75);
  sub_100007A48(v38, &qword_10070C3A0);
  if (!v45)
  {
    if (v46 < 2u)
    {
      sub_100021C34(v31, (uint64_t)v67);
      uint64_t v68 = v39;
      uint64_t v69 = 256;
      sub_1000E8314((uint64_t)v67, v44);
    }
    *unint64_t v48 = v46;
  }
  sub_10001D550((uint64_t)&v76);
  return sub_1000E83D4(&v75);
}

unint64_t sub_1000E1EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, NSObject *a4@<X3>, int a5@<W4>, uint64_t (*a6)(uint64_t)@<X5>, NSObject *a7@<X6>, char *a8@<X8>)
{
  uint64_t v88 = a8;
  os_log_t v81 = a7;
  uint64_t v82 = a6;
  int v89 = a5;
  uint64_t v91 = a1;
  os_log_t v92 = a4;
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v85 = v10;
  uint64_t v86 = v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v84 = &v75[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v87 = &v75[-v14];
  uint64_t v15 = *(int *)(type metadata accessor for RunningTask() + 40);
  int v16 = *(_DWORD *)(a2 + v15);
  uint64_t v17 = v16 & 0xFFFFFF;
  *(_DWORD *)(a2 + v15) = v16 + 1;
  uint64_t v90 = a2;
  uint64_t v19 = *(void *)(a2 + 48);
  uint64_t v20 = *(void *)(a2 + 56);
  uint64_t v18 = a2 + 48;
  uint64_t v21 = *(void *)(a3 + 24);
  uint64_t v22 = *(void *)(a3 + 32);
  sub_100057374(a3, v21);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, os_log_t, uint64_t, uint64_t))(v22 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v83 = v17;
  uint64_t v24 = v23(v17, v19, v20, v91, v92, v21, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((~v24 & 0xF000000000000007) != 0)
  {
    uint64_t v27 = v86;
    uint64_t v28 = v87;
    uint64_t v29 = v84;
    uint64_t v30 = v85;
    uint64_t v79 = v18;
    uint64_t v80 = a3;
    unint64_t v31 = v24;
    int v78 = v82(v24);
    uint64_t v32 = (char *)v92 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
    uint64_t v33 = (uint64_t (*)(uint64_t))*((void *)v32 + 1);
    unint64_t v34 = *((void *)v32 + 2);
    os_log_t v81 = *(os_log_t *)v32;
    uint64_t v82 = v33;
    uint64_t v35 = *((void *)v32 + 4);
    int v36 = *((_DWORD *)v32 + 10);
    uint64_t v91 = *((void *)v32 + 3);
    uint64_t v77 = v35;
    uint64_t v37 = v27;
    if (v91 < 0)
    {
      long long v54 = *(void (**)(unsigned char *))(v27 + 16);
      long long v55 = v29;
      v54(v29);
      sub_1000E8260((uint64_t)v81, (uint64_t)v82, v34, v91);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      unint64_t v38 = v31;
      sub_1000E8300(v31);
      sub_1000E55A4(v31);
      long long v56 = sub_1005E0EB0();
      os_log_type_t v57 = sub_1005E2580();
      int v58 = v57;
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v59 = swift_slowAlloc();
        os_log_t v92 = (os_log_t)swift_slowAlloc();
        os_log_t v97 = v92;
        *(_DWORD *)uint64_t v59 = 68159747;
        LODWORD(v93) = 2;
        LODWORD(v87) = v58;
        sub_1005E2960();
        *(_WORD *)(v59 + 8) = 256;
        LOBYTE(v93) = (_BYTE)v81;
        sub_1005E2960();
        *(_WORD *)(v59 + 11) = 2082;
        os_log_t v81 = v56;
        swift_bridgeObjectRetain();
        uint64_t v93 = sub_1000C6914((uint64_t)v82, v34, (uint64_t *)&v97);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v59 + 21) = 1040;
        LODWORD(v93) = 2;
        sub_1005E2960();
        *(_WORD *)(v59 + 27) = 512;
        LOWORD(v93) = v91;
        sub_1005E2960();
        *(_WORD *)(v59 + 31) = 2160;
        uint64_t v93 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v59 + 41) = 2085;
        uint64_t v93 = v77;
        int v94 = v36;
        swift_bridgeObjectRetain();
        uint64_t v60 = sub_1005E1CC0();
        uint64_t v93 = sub_1000C6914(v60, v61, (uint64_t *)&v97);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_WORD *)(v59 + 51) = 2082;
        char v62 = Action.kind.getter(v38);
        unint64_t v63 = Action.Kind.description.getter(v62);
        uint64_t v93 = sub_1000C6914(v63, v64, (uint64_t *)&v97);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1000D4F98(v38);
        sub_1000D4F98(v38);
        *(_WORD *)(v59 + 61) = 2080;
        int v50 = v78;
        LODWORD(v93) = v78;
        sub_10005FA78();
        uint64_t v65 = sub_1005E1F20();
        uint64_t v93 = sub_1000C6914(v65, v66, (uint64_t *)&v97);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        os_log_t v67 = v81;
        _os_log_impl((void *)&_mh_execute_header, v81, (os_log_type_t)v87, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Sent '%{public}s' %s", (uint8_t *)v59, 0x47u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(unsigned char *, uint64_t))(v86 + 8))(v84, v85);
        goto LABEL_8;
      }
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_1000D4F98(v38);
      sub_1000D4F98(v38);

      (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v55, v30);
    }
    else
    {
      (*(void (**)(unsigned char *))(v27 + 16))(v28);
      sub_1000E8260((uint64_t)v81, (uint64_t)v82, v34, v91);
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      unint64_t v38 = v31;
      sub_1000E8300(v31);
      sub_1000E55A4(v31);
      long long v39 = sub_1005E0EB0();
      os_log_type_t v40 = sub_1005E2580();
      int v41 = v40;
      os_log_t v92 = v39;
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v42 = swift_slowAlloc();
        int v76 = v41;
        uint64_t v43 = v42;
        uint64_t v84 = (unsigned char *)swift_slowAlloc();
        uint64_t v93 = (uint64_t)v84;
        *(_DWORD *)uint64_t v43 = 68158722;
        LODWORD(v97) = 2;
        sub_1005E2960();
        *(_WORD *)(v43 + 8) = 256;
        os_log_t v44 = v81;
        LOBYTE(v97) = (_BYTE)v81;
        sub_1005E2960();
        *(_WORD *)(v43 + 11) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v45 = v82;
        os_log_t v97 = (os_log_t)sub_1000C6914((uint64_t)v82, v34, &v93);
        sub_1005E2960();
        uint64_t v46 = v91;
        sub_1000E82B0((uint64_t)v44, (uint64_t)v45, v34, v91);
        sub_1000E82B0((uint64_t)v44, (uint64_t)v45, v34, v46);
        swift_bridgeObjectRelease();
        *(_WORD *)(v43 + 21) = 2082;
        char v47 = Action.kind.getter(v38);
        unint64_t v48 = Action.Kind.description.getter(v47);
        os_log_t v97 = (os_log_t)sub_1000C6914(v48, v49, &v93);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1000D4F98(v38);
        sub_1000D4F98(v38);
        *(_WORD *)(v43 + 31) = 2080;
        int v50 = v78;
        LODWORD(v97) = v78;
        sub_10005FA78();
        uint64_t v51 = sub_1005E1F20();
        os_log_t v97 = (os_log_t)sub_1000C6914(v51, v52, &v93);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        os_log_t v53 = v92;
        _os_log_impl((void *)&_mh_execute_header, v92, (os_log_type_t)v76, "[%.*hhx-%{public}s] Sent '%{public}s' %s", (uint8_t *)v43, 0x29u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(unsigned char *, uint64_t))(v86 + 8))(v87, v85);
LABEL_8:
        uint64_t v68 = v90;
        int v69 = v89;
        uint64_t v70 = v80;
        int v71 = v83;
LABEL_12:
        sub_100021C34(v70, (uint64_t)&v93);
        int v95 = v69;
        __int16 v96 = 256;
        sub_1000E8314((uint64_t)&v93, v68);
        sub_1000F0960(v38, v50, v71);
        unint64_t result = sub_1000D4F98(v38);
        char v26 = 0;
        goto LABEL_13;
      }
      os_log_t v72 = v81;
      uint64_t v73 = v82;
      uint64_t v74 = v91;
      sub_1000E82B0((uint64_t)v81, (uint64_t)v82, v34, v91);
      sub_1000E82B0((uint64_t)v72, (uint64_t)v73, v34, v74);
      sub_1000D4F98(v38);
      sub_1000D4F98(v38);

      (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v87, v30);
    }
    uint64_t v68 = v90;
    int v69 = v89;
    uint64_t v70 = v80;
    int v71 = v83;
    int v50 = v78;
    goto LABEL_12;
  }
  sub_100021C34(a3, (uint64_t)&v93);
  int v95 = v89;
  __int16 v96 = 256;
  unint64_t result = sub_1000E8314((uint64_t)&v93, v90);
  char v26 = 1;
LABEL_13:
  *uint64_t v88 = v26;
  return result;
}

uint64_t sub_1000E2894()
{
  sub_1000B9240(v0, (uint64_t)v9);
  if (v12)
  {
    if (v12 == 1)
    {
      uint64_t v1 = v10;
      char v2 = v11;
      sub_100021BFC(v9, (uint64_t)v6);
      if ((v2 & 1) == 0)
      {
        uint64_t v4 = v7;
        uint64_t v5 = v8;
        sub_10003BCDC(v6, v7);
        (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v5 + 32))(&v13, v4, v5);
        long long v14 = v13;
        sub_10001D550((uint64_t)&v14);
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v6);
        return v1;
      }
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v6);
    }
  }
  else
  {
    sub_1000B9324((uint64_t)v9);
  }
  return 0;
}

uint64_t sub_1000E2978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TaskHistory.Running(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (int *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000E8584(a1, (uint64_t)v6, type metadata accessor for TaskHistory.Running);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t result = sub_1000E8620((uint64_t)v6, type metadata accessor for TaskHistory.Running);
    int v9 = 0;
  }
  else
  {
    int v9 = *v6;
    uint64_t v10 = sub_10000566C(&qword_10070B6A0);
    uint64_t result = sub_1000E8620((uint64_t)v6 + *(int *)(v10 + 64), type metadata accessor for ClientCommand);
  }
  *(_DWORD *)a2 = v9;
  *(unsigned char *)(a2 + 4) = EnumCaseMultiPayload == 1;
  return result;
}

uint64_t sub_1000E2A90(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *, uint64_t, uint64_t, uint64_t), uint64_t a7)
{
  uint64_t v15 = type metadata accessor for MailboxSyncState();
  uint64_t result = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a4 & 0x100000000) == 0)
  {
    int v58 = v18;
    uint64_t v60 = a2;
    uint64_t v78 = a3;
    uint64_t v19 = a1;
    uint64_t v20 = a1[3];
    uint64_t v21 = a1[4];
    uint64_t v59 = v19;
    sub_10003BCDC(v19, v20);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v21 + 32))(&v72, v20, v21);
    uint64_t v76 = v73;
    unsigned int v77 = v74;
    long long v75 = v72;
    sub_10001D550((uint64_t)&v75);
    if (*(unsigned char *)(a5 + 184) == 1)
    {
      uint64_t v22 = *(void *)(a5 + 160);
      uint64_t v23 = *(void *)(v22 + 16);
      if (v23)
      {
        uint64_t v55 = a7;
        long long v56 = a6;
        uint64_t v57 = v7;
        uint64_t v24 = v22 + 32;
        unint64_t v25 = v77 | ((unint64_t)v77 << 32);
        long long v26 = *(_OWORD *)(v22 + 160);
        long long v68 = *(_OWORD *)(v22 + 144);
        long long v69 = v26;
        long long v27 = *(_OWORD *)(v22 + 192);
        long long v70 = *(_OWORD *)(v22 + 176);
        long long v71 = v27;
        long long v28 = *(_OWORD *)(v22 + 96);
        long long v64 = *(_OWORD *)(v22 + 80);
        long long v65 = v28;
        long long v29 = *(_OWORD *)(v22 + 128);
        long long v66 = *(_OWORD *)(v22 + 112);
        long long v67 = v29;
        long long v30 = *(_OWORD *)(v22 + 48);
        long long v61 = *(_OWORD *)(v22 + 32);
        long long v62 = v30;
        long long v63 = *(_OWORD *)(v22 + 64);
        uint64_t v31 = 1;
        uint64_t v32 = v67;
        if (!(void)v67) {
          goto LABEL_6;
        }
LABEL_5:
        uint64_t v33 = (int *)(v32
                    + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
        swift_beginAccess();
        for (int i = *v33; ; int i = 0)
        {
          if ((DWORD2(v62) | ((unint64_t)DWORD2(v62) << 32)) == v25)
          {
            uint64_t v35 = *(void *)(v62 + 16);
            if (v35 == *(void *)(v76 + 16))
            {
              if (v35) {
                BOOL v36 = (void)v62 == v76;
              }
              else {
                BOOL v36 = 1;
              }
              if (!v36)
              {
                if (*(unsigned __int8 *)(v62 + 32) != *(unsigned __int8 *)(v76 + 32)) {
                  goto LABEL_25;
                }
                if (v35 != 1)
                {
                  if (*(unsigned __int8 *)(v62 + 33) != *(unsigned __int8 *)(v76 + 33)) {
                    goto LABEL_25;
                  }
                  if (v35 != 2)
                  {
                    if (*(unsigned __int8 *)(v62 + 34) != *(unsigned __int8 *)(v76 + 34)) {
                      goto LABEL_25;
                    }
                    uint64_t v37 = (unsigned __int8 *)(v62 + 35);
                    unint64_t v38 = (unsigned __int8 *)(v76 + 35);
                    uint64_t v39 = v35 - 3;
                    while (v39)
                    {
                      int v41 = *v37++;
                      int v40 = v41;
                      int v42 = *v38++;
                      --v39;
                      if (v40 != v42) {
                        goto LABEL_25;
                      }
                    }
                  }
                }
              }
              if (v32 && i == a4)
              {
                uint64_t v52 = v32
                    + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
                swift_beginAccess();
                uint64_t v53 = _s13SelectedStateV7WrappedVMa(0);
                uint64_t v54 = (uint64_t)v58;
                sub_1000E8584(v52 + *(int *)(v53 + 20), (uint64_t)v58, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
                sub_100007780((uint64_t)&v61);
                swift_retain();
                v56(v59, v54, v60, v78);
                sub_1000E8620(v54, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
                swift_release();
                sub_100007820((uint64_t)&v61);
                return sub_10001D550((uint64_t)&v76);
              }
            }
          }
LABEL_25:
          if (v31 == v23) {
            break;
          }
          uint64_t v43 = (long long *)(v24 + 176 * v31);
          long long v44 = *v43;
          long long v45 = v43[2];
          long long v62 = v43[1];
          long long v63 = v45;
          long long v61 = v44;
          long long v46 = v43[3];
          long long v47 = v43[4];
          long long v48 = v43[6];
          long long v66 = v43[5];
          long long v67 = v48;
          long long v64 = v46;
          long long v65 = v47;
          long long v49 = v43[7];
          long long v50 = v43[8];
          long long v51 = v43[10];
          long long v70 = v43[9];
          long long v71 = v51;
          long long v68 = v49;
          long long v69 = v50;
          ++v31;
          uint64_t v32 = v67;
          if ((void)v67) {
            goto LABEL_5;
          }
LABEL_6:
          ;
        }
      }
    }
    sub_10001D550((uint64_t)&v76);
    sub_1000E881C();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

void sub_1000E2E1C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v66 = type metadata accessor for RunningTask();
  uint64_t v4 = __chkstk_darwin(v66);
  uint64_t v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v58 - v7;
  uint64_t v65 = sub_1005E0D40();
  uint64_t v64 = *(void *)(v65 - 8);
  uint64_t v9 = __chkstk_darwin(v65);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  long long v63 = (char *)&v58 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v58 - v14;
  uint64_t v68 = sub_1005E0D80();
  uint64_t v67 = *(void *)(v68 - 8);
  uint64_t v16 = __chkstk_darwin(v68);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v58 - v19;
  id v21 = (id)*tracingLog.unsafeMutableAddressor();
  char v22 = sub_1005E28A0();

  if (v22)
  {
    sub_1000B9240(v2, (uint64_t)&v72);
    uint64_t v23 = v2;
    if (v75 == 1)
    {
      sub_100021BFC(&v72, (uint64_t)v76);
      uint64_t v24 = tracingSignposter.unsafeMutableAddressor();
      (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v20, v24, v68);
      OSSignpostID.init(engine:kind:idA:idB:)(a1, 4, *(_DWORD *)(v2 + *(int *)(v66 + 32)), 0);
      sub_1000E8584(v2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for RunningTask);
      sub_100021C34((uint64_t)v76, (uint64_t)&v72);
      unint64_t v25 = sub_1005E0D70();
      int v26 = sub_1005E26E0();
      if (sub_1005E28A0())
      {
        long long v27 = v63;
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v63, v15, v65);
        uint64_t v28 = swift_slowAlloc();
        int v60 = v26;
        uint64_t v29 = v28;
        long long v61 = (void (*)(void, void, void))swift_slowAlloc();
        long long v71 = v61;
        *(_DWORD *)uint64_t v29 = 136315651;
        *(void *)&long long v77 = *((void *)v8 + 8);
        sub_10000566C(&qword_10070C398);
        uint64_t v30 = sub_1005E1CA0();
        uint64_t v62 = v23;
        *(void *)&long long v77 = sub_1000C6914(v30, v31, (uint64_t *)&v71);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1000E8620((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for RunningTask);
        *(_WORD *)(v29 + 12) = 2160;
        *(void *)&long long v77 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v29 + 22) = 2085;
        uint64_t v32 = v73;
        uint64_t v33 = v74;
        sub_10003BCDC(&v72, v73);
        (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v33 + 32))(&v77, v32, v33);
        long long v80 = v77;
        sub_10001D550((uint64_t)&v80);
        uint64_t v69 = v78;
        int v70 = v79;
        uint64_t v34 = sub_1005E1CC0();
        uint64_t v69 = sub_1000C6914(v34, v35, (uint64_t *)&v71);
        BOOL v36 = v27;
        uint64_t v37 = v64;
        uint64_t v23 = v62;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v72);
        os_signpost_id_t v38 = sub_1005E0D30();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v25, (os_signpost_type_t)v60, v38, "BehaviorTask", "M %s,%{sensitive,mask.mailbox}s", (uint8_t *)v29, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v39 = v65;
        (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v65);
      }
      else
      {

        sub_1000E8620((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for RunningTask);
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v72);
        uint64_t v39 = v65;
        uint64_t v37 = v64;
        BOOL v36 = v63;
      }
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v36, v15, v39);
      sub_1005E0E90();
      swift_allocObject();
      sub_1005E0E80();
      swift_release();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v39);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v20, v68);
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v76);
    }
    else
    {
      sub_1000B9324((uint64_t)&v72);
      uint64_t v40 = tracingSignposter.unsafeMutableAddressor();
      (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v18, v40, v68);
      OSSignpostID.init(engine:kind:idA:idB:)(a1, 4, *(_DWORD *)(v2 + *(int *)(v66 + 32)), 0);
      sub_1000E8584(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RunningTask);
      int v41 = sub_1005E0D70();
      int v42 = sub_1005E26E0();
      if (sub_1005E28A0())
      {
        long long v61 = *(void (**)(void, void, void))(v64 + 16);
        int v60 = v42;
        uint64_t v43 = v63;
        v61(v63, v11, v65);
        uint64_t v62 = v23;
        long long v44 = (uint8_t *)swift_slowAlloc();
        uint64_t v59 = swift_slowAlloc();
        *(void *)&long long v72 = v59;
        *(_DWORD *)long long v44 = 136315138;
        int v58 = v44 + 4;
        v76[0] = *((void *)v6 + 8);
        sub_10000566C(&qword_10070C398);
        uint64_t v45 = sub_1005E1CA0();
        v76[0] = sub_1000C6914(v45, v46, (uint64_t *)&v72);
        sub_1005E2960();
        uint64_t v23 = v62;
        swift_bridgeObjectRelease();
        uint64_t v47 = (uint64_t)v6;
        uint64_t v48 = v65;
        sub_1000E8620(v47, (uint64_t (*)(void))type metadata accessor for RunningTask);
        os_signpost_id_t v49 = sub_1005E0D30();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v41, (os_signpost_type_t)v60, v49, "BehaviorTask", "A %s", v44, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v50 = v64;
        (*(void (**)(char *, uint64_t))(v64 + 8))(v43, v48);
        v61(v43, v11, v48);
      }
      else
      {

        sub_1000E8620((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RunningTask);
        uint64_t v50 = v64;
        uint64_t v48 = v65;
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v63, v11, v65);
      }
      sub_1005E0E90();
      swift_allocObject();
      sub_1005E0E80();
      swift_release();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v48);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v18, v68);
    }
    uint64_t v51 = *(void *)(v23 + 48);
    uint64_t v52 = v23;
    uint64_t v53 = *(void *)(v51 + 16);
    if (v53)
    {
      uint64_t v54 = *(void *)(type metadata accessor for TaskHistory.Running(0) - 8);
      uint64_t v55 = v51 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
      int v56 = *(_DWORD *)(v52 + *(int *)(v66 + 32));
      uint64_t v57 = *(void *)(v54 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1000E3834(a1, v56);
        v55 += v57;
        --v53;
      }
      while (v53);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1000E3834(int a1, int a2)
{
  LODWORD(v84) = a2;
  LODWORD(v83) = a1;
  uint64_t v3 = sub_1005E0D40();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v88 = v3;
  uint64_t v89 = v4;
  uint64_t v5 = __chkstk_darwin(v3);
  long long v80 = &v76[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = &v76[-v8];
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v87 = &v76[-v11];
  __chkstk_darwin(v10);
  uint64_t v13 = &v76[-v12];
  uint64_t v14 = sub_1005E0D80();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = &v76[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  uint64_t v20 = &v76[-v19];
  uint64_t v21 = type metadata accessor for ClientCommand(0);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v86 = &v76[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v85 = &v76[-v25];
  __chkstk_darwin(v24);
  long long v27 = &v76[-v26];
  uint64_t v28 = type metadata accessor for TaskHistory.Running(0);
  __chkstk_darwin(v28);
  uint64_t v30 = (unsigned int *)&v76[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000E8584(v2, (uint64_t)v30, type metadata accessor for TaskHistory.Running);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v32 = *v30;
  if (EnumCaseMultiPayload == 1)
  {
    unsigned int v33 = v30[1];
    unint64_t v34 = *((void *)v30 + 1);
    uint64_t v35 = tracingSignposter.unsafeMutableAddressor();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16))(v18, v35, v14);
    OSSignpostID.init(engine:kind:idA:idB:)(v83, 4, v84, v32);
    sub_1000E55A4(v34);
    sub_1000E55A4(v34);
    sub_1000E55A4(v34);
    sub_1000E55A4(v34);
    BOOL v36 = sub_1005E0D70();
    int v37 = sub_1005E26E0();
    if (sub_1005E28A0())
    {
      uint64_t v84 = (v34 >> 58) & 0x3C;
      uint64_t v86 = *(unsigned char **)(v89 + 16);
      LODWORD(v83) = v33;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v86)(v80, v9, v88);
      uint64_t v38 = swift_slowAlloc();
      uint64_t v81 = v15;
      uint64_t v82 = v14;
      LODWORD(v85) = v37;
      uint64_t v39 = v38;
      uint64_t v91 = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 67109890;
      LODWORD(v90) = v32;
      sub_1005E2960();
      *(_WORD *)(v39 + 8) = 2080;
      char v40 = Action.kind.getter(v34);
      unint64_t v41 = Action.Kind.description.getter(v40);
      int v42 = v18;
      uint64_t v90 = sub_1000C6914(v41, v43, &v91);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10007C4A4(v34);
      sub_10007C4A4(v34);
      *(_WORD *)(v39 + 18) = 1024;
      LODWORD(v90) = v83;
      sub_1005E2960();
      *(_WORD *)(v39 + 24) = 1024;
      int v44 = dword_1005F29F8[v84 & 0xFFFFFFFFFFFFFFFCLL | (v34 >> 1) & 3];
      sub_10007C4A4(v34);
      LODWORD(v90) = v44;
      uint64_t v18 = v42;
      uint64_t v45 = v89;
      sub_1005E2960();
      sub_10007C4A4(v34);
      unint64_t v46 = v80;
      os_signpost_id_t v47 = sub_1005E0D30();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v36, (os_signpost_type_t)v85, v47, "BehaviorAction", "ID: %u name: %s %u %u", (uint8_t *)v39, 0x1Eu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v15 = v81;
      uint64_t v14 = v82;
      swift_slowDealloc();

      uint64_t v48 = v88;
      (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v46, v88);
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v86)(v87, v9, v48);
    }
    else
    {
      sub_10007C4A4(v34);

      sub_10007C4A4(v34);
      sub_10007C4A4(v34);
      sub_10007C4A4(v34);
      uint64_t v48 = v88;
      uint64_t v45 = v89;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v89 + 16))(v87, v9, v88);
    }
    sub_1005E0E90();
    swift_allocObject();
    sub_1005E0E80();
    swift_release();
    sub_10007C4A4(v34);
    (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v9, v48);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v15 + 8))(v18, v14);
  }
  else
  {
    uint64_t v49 = v30[1];
    LODWORD(v80) = v30[2];
    uint64_t v50 = sub_10000566C(&qword_10070B6A0);
    sub_1000E8400((uint64_t)v30 + *(int *)(v50 + 64), (uint64_t)v27, type metadata accessor for ClientCommand);
    uint64_t v51 = tracingSignposter.unsafeMutableAddressor();
    uint64_t v81 = v15;
    uint64_t v82 = v14;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16))(v20, v51, v14);
    uint64_t v79 = v32;
    uint64_t v52 = v32 | (v49 << 32);
    unint64_t v53 = CommandID.tag.getter(v52);
    OSSignpostID.init(engine:kind:idA:idB:)(v83, 3, v84, SHIDWORD(v53));
    sub_1000E8584((uint64_t)v27, (uint64_t)v85, type metadata accessor for ClientCommand);
    sub_1000E8584((uint64_t)v27, (uint64_t)v86, type metadata accessor for ClientCommand);
    uint64_t v54 = sub_1005E0D70();
    int v55 = sub_1005E26E0();
    int v56 = v13;
    uint64_t v57 = v20;
    uint64_t v58 = (uint64_t)v27;
    if (sub_1005E28A0())
    {
      uint64_t v59 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v89 + 16);
      os_log_t v78 = v54;
      uint64_t v60 = v88;
      v59(v87, v56, v88);
      uint64_t v61 = swift_slowAlloc();
      int v83 = v20;
      uint64_t v84 = (uint64_t)v27;
      int v77 = v55;
      uint64_t v62 = v61;
      uint64_t v91 = swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 136447234;
      unint64_t v63 = CommandID.tag.getter(v52);
      uint64_t v64 = Tag.debugDescription.getter(v63 & 0xFFFFFFFF000000FFLL);
      uint64_t v90 = sub_1000C6914(v64, v65, &v91);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v62 + 12) = 2080;
      uint64_t v66 = v85;
      unint64_t v67 = ClientCommand.logIdentifier.getter();
      uint64_t v90 = sub_1000C6914(v67, v68, &v91);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1000E8620((uint64_t)v66, type metadata accessor for ClientCommand);
      *(_WORD *)(v62 + 22) = 1024;
      LODWORD(v90) = v80;
      sub_1005E2960();
      *(_WORD *)(v62 + 28) = 1024;
      LODWORD(v90) = v79;
      sub_1005E2960();
      *(_WORD *)(v62 + 34) = 1024;
      uint64_t v69 = v86;
      int v70 = sub_1000E51D8() + 1;
      sub_1000E8620((uint64_t)v69, type metadata accessor for ClientCommand);
      LODWORD(v90) = v70;
      long long v71 = v87;
      uint64_t v72 = v89;
      sub_1005E2960();
      os_signpost_id_t v73 = sub_1005E0D30();
      os_log_t v74 = v78;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v78, (os_signpost_type_t)v77, v73, "BehaviorCommand", "tag: %{public}s, name: %s %u %u %u", (uint8_t *)v62, 0x28u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v57 = v83;
      uint64_t v58 = v84;
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v72 + 8))(v71, v60);
    }
    else
    {
      sub_1000E8620((uint64_t)v86, type metadata accessor for ClientCommand);

      sub_1000E8620((uint64_t)v85, type metadata accessor for ClientCommand);
      uint64_t v60 = v88;
      uint64_t v72 = v89;
      long long v71 = v87;
    }
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v72 + 16))(v71, v56, v60);
    sub_1005E0E90();
    swift_allocObject();
    sub_1005E0E80();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v72 + 8))(v56, v60);
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v57, v82);
    return sub_1000E8620(v58, type metadata accessor for ClientCommand);
  }
}

void sub_1000E4228(unsigned int a1)
{
  uint64_t v2 = v1;
  unsigned int v72 = a1;
  uint64_t v3 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v66 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (NSObject **)((char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1005E0DA0();
  uint64_t v65 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005E0D40();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v68 = v9;
  uint64_t v69 = v10;
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v67 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v55 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v55 - v16;
  uint64_t v18 = sub_1005E0D80();
  uint64_t v70 = *(void *)(v18 - 8);
  uint64_t v71 = v18;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = (id)*tracingLog.unsafeMutableAddressor();
  char v22 = sub_1005E28A0();

  if (v22)
  {
    uint64_t v59 = v8;
    uint64_t v60 = v6;
    uint64_t v23 = tracingSignposter.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v20, v23, v71);
    uint64_t v24 = type metadata accessor for RunningTask();
    uint64_t v25 = v69;
    uint64_t v26 = *(int *)(v24 + 32);
    OSSignpostID.init(engine:kind:idA:idB:)(v72, 4, *(_DWORD *)(v2 + v26), 0);
    uint64_t v27 = v68;
    uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
    uint64_t v62 = v25 + 16;
    v61(v15, v17, v68);
    sub_1005E0E90();
    swift_allocObject();
    uint64_t v28 = v20;
    uint64_t v29 = sub_1005E0E80();
    unint64_t v31 = *(void (**)(char *, uint64_t))(v25 + 8);
    uint64_t v30 = v25 + 8;
    unint64_t v63 = v31;
    v31(v17, v27);
    uint64_t v64 = v28;
    uint64_t v32 = sub_1005E0D70();
    unsigned int v33 = v67;
    sub_1005E0E70();
    int v58 = sub_1005E26D0();
    unint64_t v34 = v33;
    if (sub_1005E28A0())
    {
      uint64_t v35 = v17;
      os_log_t v56 = v32;
      uint64_t v69 = v30;
      swift_retain();
      BOOL v36 = v59;
      sub_1005E0EA0();
      uint64_t v57 = v29;
      swift_release();
      uint64_t v37 = v65;
      uint64_t v38 = v60;
      if ((*(unsigned int (**)(char *, uint64_t))(v65 + 88))(v36, v60) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v39 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v38);
        uint64_t v39 = "";
      }
      uint64_t v40 = v68;
      v61(v35, v34, v68);
      unint64_t v41 = v34;
      int v42 = v35;
      unint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v43 = 0;
      os_signpost_id_t v44 = sub_1005E0D30();
      os_log_t v45 = v56;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v56, (os_signpost_type_t)v58, v44, "BehaviorTask", v39, v43, 2u);
      swift_slowDealloc();
      swift_release();

      unint64_t v46 = v41;
      os_signpost_id_t v47 = v63;
      v63(v46, v40);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v64, v71);
      v47(v42, v40);
    }
    else
    {
      swift_release();

      v63(v33, v68);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v64, v71);
    }
    uint64_t v48 = *(void *)(v2 + 48);
    uint64_t v49 = *(void *)(v48 + 16);
    if (v49)
    {
      uint64_t v50 = v48 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80));
      uint64_t v51 = *(void *)(v66 + 72);
      uint64_t v71 = *(void *)(v2 + 48);
      swift_bridgeObjectRetain();
      do
      {
        sub_1000E8584(v50, (uint64_t)v5, type metadata accessor for TaskHistory.Running);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v52 = *(unsigned int *)v5;
          sub_10007C4A4((unint64_t)v5[1]);
        }
        else
        {
          uint64_t v52 = *v5;
          uint64_t v54 = sub_10000566C(&qword_10070B6A0);
          sub_1000E8620((uint64_t)v5 + *(int *)(v54 + 64), type metadata accessor for ClientCommand);
        }
        sub_1000E4820(v72, *(_DWORD *)(v2 + v26), v52, EnumCaseMultiPayload == 1);
        v50 += v51;
        --v49;
      }
      while (v49);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1000E4820(int a1, int a2, NSObject *a3, int a4)
{
  LODWORD(v88) = a4;
  uint64_t v85 = a3;
  LODWORD(v87) = a2;
  LODWORD(v86) = a1;
  uint64_t v82 = sub_1005E0DA0();
  uint64_t v4 = *(void *)(v82 - 8);
  uint64_t v5 = __chkstk_darwin(v82);
  uint64_t v7 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v78 - v8;
  uint64_t v89 = sub_1005E0D40();
  uint64_t v10 = *(void *)(v89 - 8);
  uint64_t v11 = __chkstk_darwin(v89);
  uint64_t v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v78 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v78 - v18;
  __chkstk_darwin(v17);
  id v21 = (char *)&v78 - v20;
  uint64_t v22 = sub_1005E0D80();
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v29 = ((char *)&v78 - v28);
  uint64_t v83 = v27;
  uint64_t v84 = v26;
  uint64_t v81 = v4;
  if (v88)
  {
    uint64_t v88 = v7;
    os_signpost_id_t v47 = v13;
    uint64_t v48 = v26;
    uint64_t v49 = v27;
    uint64_t v50 = tracingSignposter.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v25, v50, v48);
    OSSignpostID.init(engine:kind:idA:idB:)(v86, 4, (int)v87, (int)v85);
    uint64_t v51 = v89;
    uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v87(v19, v21, v89);
    sub_1005E0E90();
    swift_allocObject();
    uint64_t v52 = sub_1005E0E80();
    uint64_t v53 = v51;
    uint64_t v54 = *(NSObject **)(v10 + 8);
    ((void (*)(char *, uint64_t))v54)(v21, v53);
    uint64_t v55 = sub_1005E0D70();
    sub_1005E0E70();
    os_signpost_type_t v56 = sub_1005E26D0();
    if (sub_1005E28A0())
    {
      uint64_t v79 = v25;
      os_log_t v80 = v55;
      uint64_t v57 = v87;
      uint64_t v85 = v54;
      uint64_t v86 = v47;
      swift_retain();
      int v58 = v88;
      sub_1005E0EA0();
      uint64_t v78 = v52;
      swift_release();
      uint64_t v60 = v81;
      uint64_t v59 = v82;
      int v61 = (*(uint64_t (**)(char *, uint64_t))(v81 + 88))(v58, v82);
      uint64_t v62 = v89;
      if (v61 == enum case for OSSignpostError.doubleEnd(_:))
      {
        unint64_t v63 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v60 + 8))(v58, v59);
        unint64_t v63 = "";
      }
      os_signpost_id_t v73 = v86;
      v57(v21, v86, v62);
      os_log_t v74 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_t v74 = 0;
      os_signpost_id_t v75 = sub_1005E0D30();
      os_log_t v76 = v80;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v80, v56, v75, "BehaviorAction", v63, v74, 2u);
      swift_slowDealloc();
      swift_release();

      int v77 = v85;
      ((void (*)(char *, uint64_t))v85)(v73, v62);
      (*(void (**)(char *, uint64_t))(v83 + 8))(v79, v84);
      return ((uint64_t (*)(char *, uint64_t))v77)(v21, v62);
    }
    else
    {
      swift_release();

      ((void (*)(char *, uint64_t))v54)(v47, v89);
      return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v25, v84);
    }
  }
  else
  {
    uint64_t v88 = v9;
    uint64_t v30 = v26;
    uint64_t v31 = v27;
    uint64_t v32 = tracingSignposter.unsafeMutableAddressor();
    (*(void (**)(NSObject *, uint64_t, uint64_t))(v31 + 16))(v29, v32, v30);
    unint64_t v33 = CommandID.tag.getter((uint64_t)v85);
    OSSignpostID.init(engine:kind:idA:idB:)(v86, 3, (int)v87, SHIDWORD(v33));
    uint64_t v34 = v89;
    uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v87(v19, v21, v89);
    sub_1005E0E90();
    swift_allocObject();
    sub_1005E0E80();
    uint64_t v37 = *(void (**)(char *, uint64_t))(v10 + 8);
    BOOL v36 = (char *)(v10 + 8);
    uint64_t v35 = v37;
    v37(v21, v34);
    uint64_t v38 = sub_1005E0D70();
    sub_1005E0E70();
    int v39 = sub_1005E26D0();
    if (sub_1005E28A0())
    {
      LODWORD(v78) = v39;
      os_log_t v80 = v29;
      uint64_t v40 = v21;
      uint64_t v85 = v38;
      uint64_t v86 = v16;
      swift_retain();
      unint64_t v41 = v88;
      sub_1005E0EA0();
      swift_release();
      uint64_t v42 = v81;
      uint64_t v43 = v82;
      int v44 = (*(uint64_t (**)(char *, uint64_t))(v81 + 88))(v41, v82);
      uint64_t v45 = v89;
      uint64_t v79 = v36;
      unint64_t v46 = v87;
      if (v44 == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v65 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
        uint64_t v65 = "";
      }
      uint64_t v66 = v86;
      unint64_t v67 = v40;
      uint64_t v68 = v40;
      uint64_t v69 = v65;
      v46(v68, v86, v45);
      uint64_t v70 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v70 = 0;
      os_signpost_id_t v71 = sub_1005E0D30();
      os_log_t v72 = v85;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v85, (os_signpost_type_t)v78, v71, "BehaviorCommand", v69, v70, 2u);
      swift_slowDealloc();
      swift_release();

      v35(v66, v45);
      (*(void (**)(os_log_t, uint64_t))(v83 + 8))(v80, v84);
      return ((uint64_t (*)(char *, uint64_t))v35)(v67, v45);
    }
    else
    {
      swift_release();

      v35(v16, v89);
      return (*(uint64_t (**)(NSObject *, uint64_t))(v83 + 8))(v29, v84);
    }
  }
}

void sub_1000E4F94(int a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = (id)*tracingLog.unsafeMutableAddressor();
  char v7 = sub_1005E28A0();

  if (v7)
  {
    uint64_t v8 = *(void *)(v3 + 48);
    uint64_t v9 = *(void *)(a2 + 48);
    uint64_t v28 = _swiftEmptyArrayStorage;
    uint64_t v29 = _swiftEmptyArrayStorage;
    KeyPath = (void *)swift_getKeyPath();
    uint64_t v11 = __chkstk_darwin(KeyPath);
    v27[2] = (void (*)(char *, void))&v28;
    __chkstk_darwin(v11);
    void v26[2] = v12;
    uint64_t v13 = (void (**)(char *, void))sub_1000D8554();
    Array.findAppendOnlyDiff<A>(from:id:added:removed:update:)(v9, KeyPath, (void (**)(char *, void))sub_1000D8544, v27, (void (*)(char *))sub_1000D854C, v26, (void (*)(char *, char *))UInt32.init(_:), 0, v8, v13);
    swift_release();
    uint64_t v15 = v28;
    uint64_t v14 = v29;
    uint64_t v16 = v28[2];
    if (v16)
    {
      uint64_t v17 = *(void *)(type metadata accessor for TaskHistory.Running(0) - 8);
      uint64_t v18 = (char *)v15 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      int v19 = *(_DWORD *)(v3 + *(int *)(type metadata accessor for RunningTask() + 32));
      uint64_t v20 = *(void *)(v17 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1000E3834(a1, v19);
        v18 += v20;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
    }
    uint64_t v21 = v14[2];
    if (v21)
    {
      int v22 = *(_DWORD *)(v3 + *(int *)(type metadata accessor for RunningTask() + 32));
      swift_bridgeObjectRetain();
      uint64_t v23 = (unsigned __int8 *)(v14 + 5);
      do
      {
        uint64_t v24 = *((void *)v23 - 1);
        int v25 = *v23;
        v23 += 12;
        sub_1000E4820(a1, v22, v24, v25);
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000E51D8()
{
  uint64_t v1 = type metadata accessor for ClientCommand(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E8584(v0, (uint64_t)v3, type metadata accessor for ClientCommand);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 8:
      sub_1000E8620((uint64_t)v3, type metadata accessor for ClientCommand);
      goto LABEL_6;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_10000566C(&qword_100709E50);
      uint64_t v9 = &v3[*(int *)(v8 + 64)];
      sub_1000094D4(*(void *)&v3[*(int *)(v8 + 80)], *(void *)&v3[*(int *)(v8 + 80) + 8]);
      id v6 = (uint64_t *)&unk_100709E58;
      uint64_t v7 = (uint64_t)v9;
      goto LABEL_8;
    case 10:
    case 11:
    case 12:
    case 13:
      sub_1000E8620((uint64_t)v3, type metadata accessor for ClientCommand);
      return 3;
    case 14:
      sub_10000566C(&qword_100709E68);
      swift_bridgeObjectRelease();
      sub_100007A48((uint64_t)v3, &qword_100709E38);
      return 4;
    case 15:
      sub_10000566C(&qword_100709E70);
      swift_bridgeObjectRelease();
      sub_100007A48((uint64_t)v3, &qword_100709E38);
      return 5;
    case 16:
    case 17:
      sub_10000566C(&qword_100709E78);
      swift_bridgeObjectRelease();
      id v6 = &qword_100709E38;
      uint64_t v7 = (uint64_t)v3;
LABEL_8:
      sub_100007A48(v7, v6);
      uint64_t result = 2;
      break;
    case 20:
    case 21:
    case 22:
    case 23:
    case 27:
      return result;
    case 24:
    case 25:
    case 26:
LABEL_6:
      uint64_t result = 1;
      break;
    default:
      sub_1000E8620((uint64_t)v3, type metadata accessor for ClientCommand);
      uint64_t result = 0;
      break;
  }
  return result;
}

unint64_t sub_1000E5454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TaskHistory.Running(0);
  __chkstk_darwin(v4);
  id v6 = (uint64_t *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000E8584(a1, (uint64_t)v6, type metadata accessor for TaskHistory.Running);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = *(unsigned int *)v6;
    unint64_t result = sub_10007C4A4(v6[1]);
  }
  else
  {
    uint64_t v8 = *v6;
    uint64_t v10 = sub_10000566C(&qword_10070B6A0);
    unint64_t result = sub_1000E8620((uint64_t)v6 + *(int *)(v10 + 64), type metadata accessor for ClientCommand);
  }
  *(void *)a2 = v8;
  *(unsigned char *)(a2 + 8) = EnumCaseMultiPayload == 1;
  return result;
}

uint64_t type metadata accessor for RunningTask()
{
  uint64_t result = qword_10070C428;
  if (!qword_10070C428) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1000E55A4(unint64_t result)
{
  switch((result >> 58) & 0x3C | (result >> 1) & 3)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x20uLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000E5694(uint64_t a1)
{
  return sub_1000442DC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(_DWORD *)(v1 + 40));
}

uint64_t sub_1000E56A4(uint64_t a1, uint64_t a2)
{
  sub_1000E87B4(a1, (uint64_t)v15);
  uint64_t v6 = v15[0];
  uint64_t v5 = v15[1];
  uint64_t v7 = v15[2];
  uint64_t v8 = v15[3];
  char v9 = v16;
  sub_1000E87B4(a1, (uint64_t)v17);
  uint64_t v10 = v18;
  if (!v18)
  {
    unsigned __int8 v12 = 1;
    return v10 | ((unint64_t)v12 << 32);
  }
  v13[0] = v6;
  v13[1] = v5;
  _OWORD v13[2] = v7;
  v13[3] = v8;
  char v14 = v9 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000F171C(v13, a2, (uint64_t)&v19);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v10 = v19;
    unsigned __int8 v12 = v20;
    return v10 | ((unint64_t)v12 << 32);
  }
  return result;
}

uint64_t sub_1000E57A0(int *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = (IMAP2Connection::CommandID *)((char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_1000B9240(v2, (uint64_t)v46);
  if (v49)
  {
    if (v49 != 1) {
      return result;
    }
    int v11 = v47;
    char v12 = v48;
    sub_100021BFC(v46, (uint64_t)v43);
    if (v12)
    {
      sub_100021C34((uint64_t)v43, (uint64_t)&v39);
    }
    else
    {
      int v24 = *a1;
      sub_100021C34((uint64_t)v43, (uint64_t)&v39);
      if (v11 == v24)
      {
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v39);
        goto LABEL_19;
      }
    }
    uint64_t v25 = v40;
    uint64_t v26 = v41;
    sub_10003BCDC(&v39, v40);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v26 + 32))(&v50, v25, v26);
    uint64_t v54 = v51;
    unsigned int v55 = v52;
    long long v53 = v50;
    sub_10001D550((uint64_t)&v53);
    uint64_t v27 = *((void *)a1 + 1);
    if (!v27
      || (v55 | ((unint64_t)v55 << 32)) != (a1[4] | ((unint64_t)a1[4] << 32)))
    {
      sub_10001D550((uint64_t)&v54);
      uint64_t v32 = &v39;
      goto LABEL_23;
    }
    BOOL v28 = sub_1000255D4(v54, v27);
    sub_10001D550((uint64_t)&v54);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v39);
    if (!v28) {
      return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v43);
    }
LABEL_19:
    sub_1000B9240(v3, (uint64_t)&v39);
    if (!v42)
    {
      sub_1000B9324(v3);
      *(void *)uint64_t v3 = 1;
      *(_OWORD *)(v3 + 8) = 0u;
      *(_OWORD *)(v3 + 24) = 0u;
      *(void *)(v3 + 37) = 0;
      *(unsigned char *)(v3 + 45) = 2;
      sub_1000B9324((uint64_t)&v39);
      return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v43);
    }
    if (v42 == 1)
    {
      sub_100021BFC(&v39, (uint64_t)v36);
      uint64_t v29 = v37;
      uint64_t v30 = v38;
      sub_10003BCDC(v36, v37);
      uint64_t v31 = type metadata accessor for RunningTask();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 136))(a2, v3 + *(int *)(v31 + 28), v29, v30);
      sub_1000B9324(v3);
      *(void *)uint64_t v3 = 1;
      *(_OWORD *)(v3 + 8) = 0u;
      *(_OWORD *)(v3 + 24) = 0u;
      *(void *)(v3 + 37) = 0;
      *(unsigned char *)(v3 + 45) = 2;
      uint64_t v32 = (long long *)v36;
LABEL_23:
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v32);
      return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v43);
    }
    return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v43);
  }
  uint64_t v13 = *(void *)(v2 + 48);
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14) {
    return sub_1000B9324((uint64_t)v46);
  }
  uint64_t v33 = a2;
  uint64_t v34 = v2;
  uint64_t v15 = v13 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v16 = *(void *)(v7 + 72);
  uint64_t v35 = v13;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1000E8584(v15, (uint64_t)v9, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_1000E8620((uint64_t)v9, type metadata accessor for TaskHistory.Running);
LABEL_8:
    v15 += v16;
    if (!--v14)
    {
      swift_bridgeObjectRelease();
      return sub_1000B9324((uint64_t)v46);
    }
  }
  IMAP2Connection::CommandID v17 = *v9;
  uint64_t v18 = sub_10000566C(&qword_10070B6A0);
  sub_1000E8620((uint64_t)v9 + *(int *)(v18 + 64), type metadata accessor for ClientCommand);
  IMAP2Connection::CommandID v19 = v17;
  if (!ConnectionCommandIDSet.contains(_:)(v19)) {
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = v34;
  sub_1000B9240(v34, (uint64_t)&v39);
  if (v42)
  {
    if (v42 == 1)
    {
      sub_100021BFC(&v39, (uint64_t)v43);
      uint64_t v21 = v44;
      uint64_t v22 = v45;
      sub_10003BCDC(v43, v44);
      uint64_t v23 = type metadata accessor for RunningTask();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 136))(v33, v20 + *(int *)(v23 + 28), v21, v22);
      sub_1000B9324(v20);
      *(void *)uint64_t v20 = 1;
      *(_OWORD *)(v20 + 8) = 0u;
      *(_OWORD *)(v20 + 24) = 0u;
      *(void *)(v20 + 37) = 0;
      *(unsigned char *)(v20 + 45) = 2;
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v43);
    }
  }
  else
  {
    sub_1000B9324(v20);
    *(void *)uint64_t v20 = 1;
    *(_OWORD *)(v20 + 8) = 0u;
    *(_OWORD *)(v20 + 24) = 0u;
    *(void *)(v20 + 37) = 0;
    *(unsigned char *)(v20 + 45) = 2;
    sub_1000B9324((uint64_t)&v39);
  }
  return sub_1000B9324((uint64_t)v46);
}

uint64_t sub_1000E5C60(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v113 = a8;
  uint64_t v111 = a6;
  uint64_t v112 = a7;
  uint64_t v109 = a3;
  uint64_t v110 = a5;
  uint64_t v101 = a4;
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v104 = *(void *)(v10 - 8);
  uint64_t v105 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  os_log_t v99 = (os_log_t)((char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v102 = (char *)&v96 - v13;
  uint64_t v14 = sub_10000566C(&qword_10070C0B8);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  int v106 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v108 = (uint64_t)&v96 - v17;
  uint64_t v18 = type metadata accessor for ClientCommand(0);
  uint64_t v107 = *(void *)(v18 - 8);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v98 = (uint64_t)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v100 = (uint64_t)&v96 - v22;
  __chkstk_darwin(v21);
  uint64_t v103 = (uint64_t)&v96 - v23;
  uint64_t v24 = type metadata accessor for Command();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10000566C(&qword_10070C3A8);
  uint64_t v29 = v28 - 8;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v96 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v33 = a1;
  int v34 = a2;
  BOOL v36 = (char *)&v96 - v35;
  sub_1000079E4(v33, (uint64_t)&v96 - v35, &qword_10070C3A0);
  uint64_t v37 = *(int *)(v29 + 56);
  *(_DWORD *)&v36[v37] = v34;
  sub_1000079E4((uint64_t)v36, (uint64_t)v32, &qword_10070C3A0);
  *(_DWORD *)&v32[v37] = v34;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v32, 1, v24) == 1)
  {
    sub_100007A48((uint64_t)v36, &qword_10070C3A8);
    sub_100007A48((uint64_t)v32, &qword_10070C3A0);
    return 1;
  }
  sub_1000E8400((uint64_t)v32, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for Command);
  long long v39 = v114;
  uint64_t v40 = sub_1000C4294((uint64_t)v27, v110, v111, v112, v113);
  uint64_t v42 = (uint64_t)v27;
  if (v39)
  {
    sub_1000E8620((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for Command);
    return sub_100007A48((uint64_t)v36, &qword_10070C3A8);
  }
  if ((v41 & 1) == 0)
  {
    uint64_t v43 = v40;
    uint64_t v44 = v108;
    sub_100007B6C(v108);
    int v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v44, 1, v18);
    os_log_t v97 = v36;
    if (v45 == 1)
    {
      sub_100007A48(v44, &qword_10070C0B8);
LABEL_8:
      uint64_t v46 = (uint64_t)v106;
LABEL_21:
      sub_100007B6C(v46);
      sub_1000F050C(v46, v43, v34);
      sub_100007A48(v46, &qword_10070C0B8);
      sub_1000E8620(v42, (uint64_t (*)(void))type metadata accessor for Command);
      sub_100007A48((uint64_t)v97, &qword_10070C3A8);
      return 0;
    }
    uint64_t v49 = v103;
    sub_1000E8400(v44, v103, type metadata accessor for ClientCommand);
    uint64_t v50 = v101 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
    uint64_t v52 = *(void *)v50;
    uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t))(v50 + 8);
    uint64_t v54 = *(void *)(v50 + 16);
    uint64_t v53 = *(void *)(v50 + 24);
    uint64_t v55 = *(void *)(v50 + 32);
    LODWORD(v113) = *(_DWORD *)(v50 + 40);
    uint64_t v111 = v51;
    uint64_t v112 = v53;
    uint64_t v110 = v43;
    uint64_t v108 = v55;
    if (v53 < 0)
    {
      int v114 = 0;
      uint64_t v75 = v104;
      uint64_t v74 = v105;
      os_log_t v76 = v99;
      (*(void (**)(os_log_t))(v104 + 16))(v99);
      uint64_t v102 = (char *)v52;
      sub_1000E8260(v52, (uint64_t)v111, v54, v112);
      unint64_t v77 = v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v78 = v98;
      sub_1000E8584(v49, v98, type metadata accessor for ClientCommand);
      uint64_t v79 = sub_1005E0EB0();
      os_log_type_t v80 = sub_1005E2580();
      int v81 = v80;
      if (os_log_type_enabled(v79, v80))
      {
        uint64_t v82 = swift_slowAlloc();
        uint64_t v107 = v42;
        uint64_t v83 = v82;
        uint64_t v100 = swift_slowAlloc();
        uint64_t v117 = v100;
        *(_DWORD *)uint64_t v83 = 68159747;
        LODWORD(v115) = 2;
        LODWORD(v96) = v81;
        sub_1005E2960();
        *(_WORD *)(v83 + 8) = 256;
        LOBYTE(v115) = (_BYTE)v102;
        sub_1005E2960();
        LODWORD(v101) = v34;
        *(_WORD *)(v83 + 11) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v115 = sub_1000C6914((uint64_t)v111, v77, &v117);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v83 + 21) = 1040;
        LODWORD(v115) = 2;
        sub_1005E2960();
        *(_WORD *)(v83 + 27) = 512;
        LOWORD(v115) = v112;
        sub_1005E2960();
        *(_WORD *)(v83 + 31) = 2160;
        uint64_t v115 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v83 + 41) = 2085;
        uint64_t v115 = v108;
        int v116 = v113;
        swift_bridgeObjectRetain();
        uint64_t v84 = sub_1005E1CC0();
        uint64_t v115 = sub_1000C6914(v84, v85, &v117);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v83 + 51) = 2082;
        uint64_t v86 = v98;
        unint64_t v87 = ClientCommand.logIdentifier.getter();
        uint64_t v115 = sub_1000C6914(v87, v88, &v117);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1000E8620(v86, type metadata accessor for ClientCommand);
        *(_WORD *)(v83 + 61) = 2082;
        uint64_t v43 = v110;
        unint64_t v89 = CommandID.tag.getter(v110);
        uint64_t v90 = Tag.debugDescription.getter(v89 & 0xFFFFFFFF000000FFLL);
        uint64_t v115 = sub_1000C6914(v90, v91, &v117);
        sub_1005E2960();
        int v34 = v101;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v79, (os_log_type_t)v96, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Sent '%{public}s' command as %{public}s", (uint8_t *)v83, 0x47u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v42 = v107;
        swift_slowDealloc();

        (*(void (**)(os_log_t, uint64_t))(v104 + 8))(v99, v105);
        sub_1000E8620(v103, type metadata accessor for ClientCommand);
        goto LABEL_8;
      }

      sub_1000E8620(v78, type metadata accessor for ClientCommand);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(os_log_t, uint64_t))(v75 + 8))(v76, v74);
      sub_1000E8620(v103, type metadata accessor for ClientCommand);
      uint64_t v46 = (uint64_t)v106;
    }
    else
    {
      uint64_t v107 = v42;
      (*(void (**)(char *))(v104 + 16))(v102);
      sub_1000E8260(v52, (uint64_t)v111, v54, v112);
      unint64_t v56 = v54;
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v57 = v100;
      sub_1000E8584(v49, v100, type metadata accessor for ClientCommand);
      int v58 = sub_1005E0EB0();
      os_log_type_t v59 = sub_1005E2580();
      int v60 = v59;
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v61 = swift_slowAlloc();
        os_log_t v99 = v58;
        uint64_t v62 = v61;
        unint64_t v63 = (uint64_t (*)(uint64_t))swift_slowAlloc();
        LODWORD(v101) = v34;
        int v114 = v63;
        uint64_t v115 = (uint64_t)v63;
        *(_DWORD *)uint64_t v62 = 68158722;
        LODWORD(v117) = 2;
        sub_1005E2960();
        *(_WORD *)(v62 + 8) = 256;
        LOBYTE(v117) = v52;
        sub_1005E2960();
        *(_WORD *)(v62 + 11) = 2082;
        LODWORD(v98) = v60;
        swift_bridgeObjectRetain();
        uint64_t v64 = v111;
        uint64_t v117 = sub_1000C6914((uint64_t)v111, v56, &v115);
        __int16 v96 = &v118;
        sub_1005E2960();
        uint64_t v65 = v52;
        uint64_t v66 = v52;
        uint64_t v67 = v112;
        sub_1000E82B0(v65, (uint64_t)v64, v56, v112);
        sub_1000E82B0(v66, (uint64_t)v64, v56, v67);
        swift_bridgeObjectRelease();
        *(_WORD *)(v62 + 21) = 2082;
        unint64_t v68 = ClientCommand.logIdentifier.getter();
        uint64_t v117 = sub_1000C6914(v68, v69, &v115);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1000E8620(v57, type metadata accessor for ClientCommand);
        *(_WORD *)(v62 + 31) = 2082;
        uint64_t v43 = v110;
        unint64_t v70 = CommandID.tag.getter(v110);
        uint64_t v71 = Tag.debugDescription.getter(v70 & 0xFFFFFFFF000000FFLL);
        uint64_t v117 = sub_1000C6914(v71, v72, &v115);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        os_log_t v73 = v99;
        _os_log_impl((void *)&_mh_execute_header, v99, (os_log_type_t)v98, "[%.*hhx-%{public}s] Sent '%{public}s' command as %{public}s", (uint8_t *)v62, 0x29u);
        swift_arrayDestroy();
        int v34 = v101;
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v104 + 8))(v102, v105);
        sub_1000E8620(v103, type metadata accessor for ClientCommand);
        uint64_t v46 = (uint64_t)v106;
        uint64_t v42 = v107;
        goto LABEL_21;
      }

      int v114 = type metadata accessor for ClientCommand;
      sub_1000E8620(v57, type metadata accessor for ClientCommand);
      uint64_t v92 = v52;
      uint64_t v93 = v52;
      int v95 = v111;
      uint64_t v94 = v112;
      sub_1000E82B0(v92, (uint64_t)v111, v56, v112);
      sub_1000E82B0(v93, (uint64_t)v95, v56, v94);
      (*(void (**)(char *, uint64_t))(v104 + 8))(v102, v105);
      sub_1000E8620(v49, v114);
      uint64_t v46 = (uint64_t)v106;
      uint64_t v42 = v107;
    }
    uint64_t v43 = v110;
    goto LABEL_21;
  }
  uint64_t v47 = v109 + *(int *)(type metadata accessor for RunningTask() + 36);
  if (*(unsigned char *)(v47 + 8))
  {
    __uint64_t v48 = static MonotonicTime.now()();
    sub_1000E8620((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for Command);
    sub_100007A48((uint64_t)v36, &qword_10070C3A8);
    *(void *)uint64_t v47 = v48;
    *(unsigned char *)(v47 + 8) = 0;
  }
  else
  {
    sub_1000E8620((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for Command);
    sub_100007A48((uint64_t)v36, &qword_10070C3A8);
  }
  return 2;
}

uint64_t sub_1000E69DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t), uint64_t a6, uint64_t a7)
{
  void (*v29)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  int v32;
  char v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  long long v48;
  long long v49;
  long long v50;
  long long v51;
  long long v52;
  uint64_t v53;
  int *v54;
  int i;
  uint64_t v56;
  BOOL v57;
  unsigned __int8 *v58;
  unsigned __int8 *v59;
  uint64_t v60;
  int v61;
  int v62;
  int v63;
  long long *v64;
  long long v65;
  long long v66;
  long long v67;
  long long v68;
  long long v69;
  long long v70;
  long long v71;
  long long v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  long long *v80;
  long long *v81;
  int v82;
  char v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  void (*v88)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  void (*v100)(void, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t (*v111)(uint64_t, uint64_t);
  uint64_t v112;
  long long v113;
  long long v114;
  long long v115;
  long long v116;
  long long v117;
  long long v118;
  long long v119;
  long long v120;
  long long v121;
  long long v122;
  long long v123;
  unsigned __int8 v124;
  void v125[3];
  uint64_t v126;
  uint64_t v127;
  long long v128[2];
  int v129;
  char v130;
  char v131;
  long long v132;
  uint64_t v133;
  int v134;
  long long v135;
  uint64_t v136;
  unsigned int v137;
  long long v138;
  uint64_t v139;
  unsigned int v140;
  long long v141;
  long long v142;
  long long v143;
  uint64_t v144;
  unsigned int v145;
  long long v146;
  unint64_t v147;
  void v148[3];
  uint64_t v149;

  uint64_t v111 = a5;
  uint64_t v112 = a6;
  uint64_t v110 = a4;
  uint64_t v104 = a2;
  uint64_t v107 = a1;
  uint64_t v9 = type metadata accessor for MailboxSyncState();
  __chkstk_darwin(v9 - 8);
  uint64_t v102 = (uint64_t)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for Command();
  uint64_t v11 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v13 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ClientCommand(0);
  uint64_t v105 = *(void *)(v14 - 8);
  int v106 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000566C(&qword_10070C0B8);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v99 - v21;
  uint64_t v23 = sub_10000566C(&qword_10070C3A0);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = a7;
  uint64_t v146 = *(_OWORD *)(a7 + 24);
  v148[0] = v146;
  sub_1000E834C((uint64_t)&v146 + 8, (uint64_t)&v147);
  sub_1000B9240(a3, (uint64_t)v128);
  if (!v131)
  {
    uint64_t v101 = v25;
    uint64_t v102 = v11;
    os_log_t v99 = v16;
    sub_100021BFC(v128, (uint64_t)&v113);
    int v34 = *(int *)(type metadata accessor for RunningTask() + 44);
    uint64_t v35 = *(_DWORD *)(a3 + v34);
    LODWORD(v104) = v35 & 0xFFFFFF;
    *(_DWORD *)(a3 + v34) = v35 + 1;
    uint64_t v37 = *(void *)(a3 + 48);
    BOOL v36 = *(void *)(a3 + 56);
    uint64_t v103 = a3;
    uint64_t v38 = *((void *)&v114 + 1);
    long long v39 = v115;
    sub_100057374((uint64_t)&v113, *((uint64_t *)&v114 + 1));
    uint64_t v100 = *(void (**)(void, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 40);
    sub_10002292C((uint64_t)v148);
    sub_1000E83A8(&v147);
    sub_10002292C((uint64_t)v148);
    sub_1000E83A8(&v147);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v100(v104, v37, v36, v38, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000079E4((uint64_t)v22, (uint64_t)v20, &qword_10070C0B8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v20, 1, v106) == 1)
    {
      uint64_t v40 = (uint64_t)v101;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56))(v101, 1, 1, v108);
    }
    else
    {
      os_log_t v73 = (uint64_t)v99;
      sub_1000E8400((uint64_t)v20, (uint64_t)v99, type metadata accessor for ClientCommand);
      uint64_t v40 = (uint64_t)v101;
      sub_1000E8584(v73, (uint64_t)v101, type metadata accessor for ClientCommand);
      uint64_t v74 = v108;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v102 + 56))(v40, 0, 1, v74);
      sub_1000E8620(v73, type metadata accessor for ClientCommand);
    }
    uint64_t v75 = v149;
    unint64_t v77 = v110;
    os_log_t v76 = v111;
    sub_100007A48((uint64_t)v22, &qword_10070C0B8);
    sub_10002292C((uint64_t)v148);
    sub_1000E83A8(&v147);
    uint64_t v78 = v103;
    uint64_t v79 = v75;
    uint64_t v30 = sub_1000E5C60(v40, v104, v103, v107, v77, v76, v112, v109);
    sub_10001D550((uint64_t)v148);
    sub_1000E83D4(&v147);
    sub_100007A48(v40, &qword_10070C3A0);
    if (v79) {
      goto LABEL_37;
    }
    if (v30 < 2u)
    {
      sub_1000B9324(v78);
      sub_100021C34((uint64_t)&v113, v78);
      *(unsigned char *)(v78 + 45) = 0;
    }
    int v81 = &v113;
    goto LABEL_48;
  }
  if (v131 != 1)
  {
    sub_10002292C((uint64_t)v148);
    sub_1000E83A8(&v147);
    sub_10001D550((uint64_t)v148);
    uint64_t v30 = 1;
    goto LABEL_49;
  }
  uint64_t v103 = a3;
  int v26 = v129;
  if (v130)
  {
    sub_100021BFC(v128, (uint64_t)&v113);
    uint64_t v27 = *((void *)&v114 + 1);
    uint64_t v28 = v115;
    sub_10003BCDC(&v113, *((uint64_t *)&v114 + 1));
    uint64_t v29 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v28 + 32);
    sub_10002292C((uint64_t)v148);
    sub_1000E83A8(&v147);
    sub_10002292C((uint64_t)v148);
    sub_1000E83A8(&v147);
    v29(&v132, v27, v28);
    uint64_t v30 = v133;
    LODWORD(v27) = v134;
    unsigned int v142 = v132;
    sub_10001D550((uint64_t)&v142);
    *(_DWORD *)uint64_t v13 = v26;
    uint64_t v13[4] = 1;
    *((void *)v13 + 1) = v30;
    *((_DWORD *)v13 + 4) = v27;
    swift_storeEnumTagMultiPayload();
    uint64_t v31 = v149;
    uint64_t v32 = sub_1000C4294((uint64_t)v13, v110, v111, v112, v109);
    if (v31)
    {
      sub_1000E8620((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Command);
LABEL_37:
      os_log_type_t v80 = &v113;
      goto LABEL_38;
    }
    uint64_t v82 = v32;
    uint64_t v83 = v33;
    sub_1000E8620((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Command);
    if (v83)
    {
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v113);
      sub_10001D550((uint64_t)v148);
      sub_1000E83D4(&v147);
      sub_10001D550((uint64_t)v148);
      uint64_t v30 = 2;
    }
    else
    {
      uint64_t v84 = v103;
      sub_1000B9324(v103);
      sub_100021C34((uint64_t)&v113, v84);
      *(_DWORD *)(v84 + 40) = v82;
      *(_WORD *)(v84 + 44) = 256;
      unint64_t v85 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84
                                                                      + *(int *)(type metadata accessor for RunningTask()
                                                                               + 48));
      uint64_t v86 = *((void *)&v114 + 1);
      unint64_t v87 = v115;
      sub_10003BCDC(&v113, *((uint64_t *)&v114 + 1));
      unint64_t v88 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v87 + 32);
      swift_retain();
      v88(&v138, v86, v87);
      unint64_t v89 = v139;
      uint64_t v90 = v140;
      uint64_t v141 = v138;
      sub_10001D550((uint64_t)&v141);
      unint64_t v91 = *((void *)&v114 + 1);
      uint64_t v92 = v115;
      sub_10003BCDC(&v113, *((uint64_t *)&v114 + 1));
      uint64_t v93 = (*(uint64_t (**)(uint64_t, uint64_t))(v92 + 48))(v91, v92);
      v85(v104, v89, v90, v93);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v113);
      sub_10001D550((uint64_t)v148);
      sub_1000E83D4(&v147);
      sub_10001D550((uint64_t)v148);
      uint64_t v30 = 0;
    }
LABEL_49:
    sub_1000E83D4(&v147);
    return v30;
  }
  LODWORD(v108) = v129;
  sub_100021BFC(v128, (uint64_t)v125);
  char v41 = v126;
  uint64_t v42 = v127;
  sub_10003BCDC(v125, v126);
  uint64_t v43 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v42 + 32);
  sub_10002292C((uint64_t)v148);
  sub_1000E83A8(&v147);
  sub_10002292C((uint64_t)v148);
  sub_1000E83A8(&v147);
  v43(&v135, v41, v42);
  uint64_t v144 = v136;
  uint64_t v145 = v137;
  uint64_t v143 = v135;
  sub_10001D550((uint64_t)&v143);
  if (*(unsigned char *)(v104 + 184) != 1 || (v44 = *(void *)(v104 + 160), (int v45 = *(void *)(v44 + 16)) == 0))
  {
LABEL_45:
    sub_10001D550((uint64_t)&v144);
LABEL_46:
    uint64_t v30 = 2;
LABEL_47:
    int v81 = (long long *)v125;
LABEL_48:
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v81);
    sub_10001D550((uint64_t)v148);
    sub_1000E83D4(&v147);
    sub_10001D550((uint64_t)v148);
    goto LABEL_49;
  }
  uint64_t v46 = v44 + 32;
  uint64_t v47 = v145 | ((unint64_t)v145 << 32);
  __uint64_t v48 = *(_OWORD *)(v44 + 160);
  long long v120 = *(_OWORD *)(v44 + 144);
  long long v121 = v48;
  uint64_t v49 = *(_OWORD *)(v44 + 192);
  long long v122 = *(_OWORD *)(v44 + 176);
  long long v123 = v49;
  uint64_t v50 = *(_OWORD *)(v44 + 96);
  int v116 = *(_OWORD *)(v44 + 80);
  uint64_t v117 = v50;
  uint64_t v51 = *(_OWORD *)(v44 + 128);
  uint64_t v118 = *(_OWORD *)(v44 + 112);
  long long v119 = v51;
  uint64_t v52 = *(_OWORD *)(v44 + 48);
  uint64_t v113 = *(_OWORD *)(v44 + 32);
  int v114 = v52;
  uint64_t v115 = *(_OWORD *)(v44 + 64);
  uint64_t v53 = 1;
  uint64_t v30 = v119;
  if (!(void)v119) {
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v54 = (int *)(v30
              + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
  swift_beginAccess();
  for (int i = *v54; ; int i = 0)
  {
    if ((DWORD2(v114) | ((unint64_t)DWORD2(v114) << 32)) == v47)
    {
      unint64_t v56 = *(void *)(v114 + 16);
      if (v56 == *(void *)(v144 + 16))
      {
        if (v56) {
          uint64_t v57 = (void)v114 == v144;
        }
        else {
          uint64_t v57 = 1;
        }
        if (!v57)
        {
          if (*(unsigned __int8 *)(v114 + 32) != *(unsigned __int8 *)(v144 + 32)) {
            goto LABEL_32;
          }
          if (v56 != 1)
          {
            if (*(unsigned __int8 *)(v114 + 33) != *(unsigned __int8 *)(v144 + 33)) {
              goto LABEL_32;
            }
            if (v56 != 2)
            {
              if (*(unsigned __int8 *)(v114 + 34) != *(unsigned __int8 *)(v144 + 34)) {
                goto LABEL_32;
              }
              int v58 = (unsigned __int8 *)(v114 + 35);
              os_log_type_t v59 = (unsigned __int8 *)(v144 + 35);
              int v60 = v56 - 3;
              while (v60)
              {
                uint64_t v62 = *v58++;
                uint64_t v61 = v62;
                unint64_t v63 = *v59++;
                --v60;
                if (v61 != v63) {
                  goto LABEL_32;
                }
              }
            }
          }
        }
        if (v30 && i == v108) {
          break;
        }
      }
    }
LABEL_32:
    if (v53 == v45) {
      goto LABEL_45;
    }
    uint64_t v64 = (long long *)(v46 + 176 * v53);
    uint64_t v65 = *v64;
    uint64_t v66 = v64[2];
    int v114 = v64[1];
    uint64_t v115 = v66;
    uint64_t v113 = v65;
    uint64_t v67 = v64[3];
    unint64_t v68 = v64[4];
    unint64_t v69 = v64[6];
    uint64_t v118 = v64[5];
    long long v119 = v69;
    int v116 = v67;
    uint64_t v117 = v68;
    unint64_t v70 = v64[7];
    uint64_t v71 = v64[8];
    unint64_t v72 = v64[10];
    long long v122 = v64[9];
    long long v123 = v72;
    long long v120 = v70;
    long long v121 = v71;
    ++v53;
    uint64_t v30 = v119;
    if ((void)v119) {
      goto LABEL_12;
    }
LABEL_13:
    ;
  }
  int v95 = v30
      + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
  swift_beginAccess();
  __int16 v96 = v95 + *(int *)(_s13SelectedStateV7WrappedVMa(0) + 20);
  os_log_t v97 = v102;
  sub_1000E8584(v96, v102, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
  sub_10002292C((uint64_t)v148);
  sub_1000E83A8(&v147);
  sub_100007780((uint64_t)&v113);
  swift_retain();
  uint64_t v98 = v149;
  sub_1000E18E4(v97, v108, v125, v103, v107, v110, v111, v112, &v124, v109);
  if (!v98)
  {
    sub_1000E8620(v97, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
    swift_release();
    sub_100007820((uint64_t)&v113);
    sub_10001D550((uint64_t)&v144);
    uint64_t v30 = v124;
    if (v124 != 3) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  sub_1000E8620(v97, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
  swift_release();
  sub_100007820((uint64_t)&v113);
  sub_10001D550((uint64_t)&v144);
  os_log_type_t v80 = (long long *)v125;
LABEL_38:
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v80);
  sub_10001D550((uint64_t)v148);
  sub_1000E83D4(&v147);
  sub_10001D550((uint64_t)v148);
  sub_1000E83D4(&v147);
  return v30;
}

unint64_t sub_1000E7508(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4, _OWORD *a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t), uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, unint64_t a13)
{
  void (*v57)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned char v70[4];
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned char *v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t);
  NSObject *v79;
  os_log_t v80;
  NSObject *v81;
  _OWORD *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85[3];
  uint64_t v86;
  uint64_t v87;
  long long v88;
  char v89;
  long long v90;
  uint64_t v91;
  unsigned int v92;
  long long v93;
  void v94[2];
  char v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;

  uint64_t v82 = a5;
  uint64_t v79 = a4;
  uint64_t v78 = (uint64_t (*)(uint64_t))a3;
  uint64_t v84 = a12;
  unint64_t v77 = sub_1005E0ED0();
  int v81 = *(NSObject **)(v77 - 8);
  uint64_t v18 = __chkstk_darwin(v77);
  os_log_type_t v80 = (os_log_t)&v70[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  os_log_t v76 = &v70[-v20];
  v94[0] = a9;
  v94[1] = a10;
  int v95 = a11;
  __int16 v96 = v84;
  os_log_t v97 = a13;
  swift_bridgeObjectRetain();
  uint64_t v83 = a13;
  sub_10000CF8C(a13);
  unint64_t v21 = v83;
  while (1)
  {
    swift_bridgeObjectRetain();
    sub_10000CF8C(v21);
    uint64_t v22 = a2;
    uint64_t v23 = v98;
    char v24 = sub_1000E69DC(a1, a2, (uint64_t)v82, a6, a7, a8, (uint64_t)v94);
    swift_bridgeObjectRelease();
    sub_10000CFDC(v21);
    uint64_t v98 = v23;
    if (v23) {
      break;
    }
    if (v24)
    {
      BOOL v25 = v24 == 1;
      int v26 = v82;
      uint64_t v27 = a1;
      uint64_t v28 = v81;
      uint64_t v29 = v79;
      uint64_t v30 = v78;
      do
        int v31 = sub_1000E0C08(v27, a2, v30, v29);
      while (!v31);
      os_log_t v32 = v80;
      if (v31 == 1 && v25 && !*(void *)(*((void *)v26 + 6) + 16))
      {
        uint64_t v33 = (char *)v27 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
        uint64_t v34 = *(void *)v33;
        uint64_t v75 = *((void *)v33 + 1);
        unint64_t v36 = *((void *)v33 + 2);
        uint64_t v35 = *((void *)v33 + 3);
        uint64_t v37 = *((void *)v33 + 4);
        LODWORD(v79) = *((_DWORD *)v33 + 10);
        uint64_t v78 = (uint64_t (*)(uint64_t))v35;
        uint64_t v74 = v37;
        os_log_t v73 = v34;
        if (v35 < 0)
        {
          ((void (*)(os_log_t, NSObject *, uint64_t))v28[2].isa)(v32, v27, v77);
          sub_1000E8260(v34, v75, v36, (uint64_t)v78);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          int v45 = sub_1005E0EB0();
          os_log_type_t v46 = sub_1005E25C0();
          int v47 = v46;
          if (os_log_type_enabled(v45, v46))
          {
            uint64_t v48 = swift_slowAlloc();
            os_log_t v76 = (unsigned char *)swift_slowAlloc();
            v85[0] = (uint64_t)v76;
            *(_DWORD *)uint64_t v48 = 68159235;
            LODWORD(v88) = 2;
            LODWORD(v72) = v47;
            sub_1005E2960();
            *(_WORD *)(v48 + 8) = 256;
            LOBYTE(v88) = v73;
            sub_1005E2960();
            *(_WORD *)(v48 + 11) = 2082;
            swift_bridgeObjectRetain();
            *(void *)&unint64_t v88 = sub_1000C6914(v75, v36, v85);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            *(_WORD *)(v48 + 21) = 1040;
            LODWORD(v88) = 2;
            sub_1005E2960();
            *(_WORD *)(v48 + 27) = 512;
            LOWORD(v88) = (_WORD)v78;
            sub_1005E2960();
            *(_WORD *)(v48 + 31) = 2160;
            *(void *)&unint64_t v88 = 0x786F626C69616DLL;
            int v26 = v82;
            sub_1005E2960();
            *(_WORD *)(v48 + 41) = 2085;
            *(void *)&unint64_t v88 = v74;
            DWORD2(v88) = v79;
            swift_bridgeObjectRetain();
            uint64_t v49 = sub_1005E1CC0();
            *(void *)&unint64_t v88 = sub_1000C6914(v49, v50, v85);
            sub_1005E2960();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v72, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Marking task as complete.", (uint8_t *)v48, 0x33u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            ((void (*)(os_log_t, uint64_t))v81[1].isa)(v80, v77);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            ((void (*)(os_log_t, uint64_t))v28[1].isa)(v32, v77);
          }
        }
        else
        {
          ((void (*)(unsigned char *, NSObject *, uint64_t))v28[2].isa)(v76, v27, v77);
          sub_1000E8260(v34, v75, v36, (uint64_t)v78);
          swift_bridgeObjectRetain();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          uint64_t v38 = sub_1005E0EB0();
          os_log_type_t v39 = sub_1005E25C0();
          int v40 = v39;
          os_log_type_t v80 = v38;
          if (os_log_type_enabled(v38, v39))
          {
            uint64_t v41 = swift_slowAlloc();
            unint64_t v72 = swift_slowAlloc();
            *(void *)&unint64_t v88 = v72;
            *(_DWORD *)uint64_t v41 = 68158210;
            LODWORD(v85[0]) = 2;
            uint64_t v71 = v40;
            sub_1005E2960();
            *(_WORD *)(v41 + 8) = 256;
            LOBYTE(v85[0]) = v34;
            sub_1005E2960();
            *(_WORD *)(v41 + 11) = 2082;
            swift_bridgeObjectRetain();
            uint64_t v42 = v75;
            v85[0] = sub_1000C6914(v75, v36, (uint64_t *)&v88);
            sub_1005E2960();
            uint64_t v43 = (uint64_t)v78;
            sub_1000E82B0(v34, v42, v36, (uint64_t)v78);
            sub_1000E82B0(v73, v42, v36, v43);
            swift_bridgeObjectRelease();
            os_log_t v44 = v80;
            _os_log_impl((void *)&_mh_execute_header, v80, (os_log_type_t)v71, "[%.*hhx-%{public}s] Marking task as complete.", (uint8_t *)v41, 0x15u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            ((void (*)(unsigned char *, uint64_t))v81[1].isa)(v76, v77);
          }
          else
          {
            uint64_t v51 = v34;
            uint64_t v52 = v75;
            uint64_t v53 = (uint64_t)v78;
            sub_1000E82B0(v51, v75, v36, (uint64_t)v78);
            sub_1000E82B0(v73, v52, v36, v53);

            ((void (*)(unsigned char *, uint64_t))v28[1].isa)(v76, v77);
          }
          a2 = v22;
        }
        sub_1000B9240((uint64_t)v26, (uint64_t)&v88);
        if (v89)
        {
          if (v89 != 1) {
            break;
          }
          sub_100021BFC(&v88, (uint64_t)v85);
          uint64_t v82 = *(_OWORD **)((char *)v26 + *(int *)(type metadata accessor for RunningTask() + 52));
          int v81 = v27;
          uint64_t v54 = (uint64_t)v26;
          uint64_t v55 = v86;
          uint64_t v56 = v87;
          sub_10003BCDC(v85, v86);
          uint64_t v57 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v56 + 32);
          swift_retain();
          v57(&v90, v55, v56);
          int v58 = v91;
          os_log_type_t v59 = v92;
          uint64_t v93 = v90;
          sub_10001D550((uint64_t)&v93);
          int v60 = a2;
          uint64_t v61 = v86;
          uint64_t v62 = v87;
          sub_10003BCDC(v85, v86);
          unint64_t v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 48))(v61, v62);
          uint64_t v64 = v81;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, NSObject *))v82)(v60, v58, v59, v63, v81);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v65 = v86;
          uint64_t v66 = v87;
          sub_10003BCDC(v85, v86);
          (*(void (**)(uint64_t, NSObject *, uint64_t, uint64_t))(v66 + 128))(v60, v64, v65, v66);
          sub_1000B9324(v54);
          *(_OWORD *)uint64_t v54 = 0u;
          *(_OWORD *)(v54 + 16) = 0u;
          *(_OWORD *)(v54 + 29) = 0u;
          *(unsigned char *)(v54 + 45) = 2;
        }
        else
        {
          sub_100021BFC(&v88, (uint64_t)v85);
          uint64_t v67 = v86;
          unint64_t v68 = v87;
          sub_10003BCDC(v85, v86);
          (*(void (**)(uint64_t, NSObject *, uint64_t, uint64_t))(v68 + 88))(a2, v27, v67, v68);
          sub_1000B9324((uint64_t)v26);
          *int v26 = 0u;
          v26[1] = 0u;
          *(_OWORD *)((char *)v26 + 29) = 0u;
          *((unsigned char *)v26 + 45) = 2;
        }
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v85);
      }
      break;
    }
  }
  swift_bridgeObjectRelease();
  return sub_10000CFDC(v83);
}

uint64_t sub_1000E800C(uint64_t a1, uint64_t a2, NSObject *a3, _OWORD *a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v22 = a5;
  uint64_t v13 = type metadata accessor for Task.Logger(0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a8 + 24);
  unint64_t v17 = *(void *)(a8 + 32);
  uint64_t v21 = (uint64_t)a4 + *(int *)(type metadata accessor for RunningTask() + 28);
  sub_1000E8584(v21, (uint64_t)v15, type metadata accessor for Task.Logger);
  uint64_t v18 = *(void *)a8;
  uint64_t v19 = *(void *)(a8 + 8);
  LOBYTE(a8) = *(unsigned char *)(a8 + 16);
  swift_bridgeObjectRetain();
  sub_10000CF8C(v17);
  sub_1000E7508((uint64_t)v15, a1, a2, a3, a4, v22, v23, v24, v18, v19, a8, v16, v17);
  swift_bridgeObjectRelease();
  sub_10000CFDC(v17);
  return sub_1000E8620((uint64_t)v15, type metadata accessor for Task.Logger);
}

uint64_t sub_1000E8260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 < 0)
  {
    swift_bridgeObjectRetain();
  }
  else if (((v4 ^ (2 * v4)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000E82B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (a4 < 0)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1000E8300(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_1000E55A4(result);
  }
  return result;
}

uint64_t sub_1000E8314(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000E834C(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t *sub_1000E83A8(unint64_t *a1)
{
  return a1;
}

unint64_t *sub_1000E83D4(unint64_t *a1)
{
  return a1;
}

uint64_t sub_1000E8400(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000E846C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  sub_100057374(a1, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 104))(v7, a2, a3, v6, v8, v9);
}

unint64_t sub_1000E84F4(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    sub_100086918(result);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1000E853C(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    sub_1000869F0(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000E8584(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000E85EC(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1000DE564(a1, a2, a3, a4 | ((HIDWORD(a4) & 1) << 32), v4[2], v4[3], v4[4]);
}

uint64_t sub_1000E8620(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000E8680(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(unsigned int *)(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24);
  uint64_t v5 = *(void *)(v2 + 32);
  uint64_t v6 = *(void *)(v2 + 40);
  uint64_t v7 = *(void *)(v2 + 48);
  uint64_t v8 = *(void *)(v2 + 64);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(unsigned __int8 *)(v2 + 56);
  sub_100057374(a1, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 112))(v3, v4, v5, v6, v7, v11, a2, v8, v9, v10);
}

uint64_t sub_1000E872C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000E8770(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000E87B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070C3C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000E881C()
{
  unint64_t result = qword_10070C3C8;
  if (!qword_10070C3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C3C8);
  }
  return result;
}

uint64_t sub_1000E8870(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(unsigned int *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v5 = *(void *)(v2 + 32);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  sub_100057374(a1, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 120))(v4, v6, a2, v5, v7, v8);
}

unint64_t sub_1000E88F8(uint64_t a1, unint64_t a2)
{
  if ((~a2 & 0xF000000000000007) != 0) {
    return sub_10007C4A4(a2);
  }
  return result;
}

unint64_t sub_1000E8910(uint64_t a1, unint64_t a2)
{
  if ((~a2 & 0xF000000000000007) != 0) {
    return sub_1000E55A4(a2);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RunningTask.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000E89C4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningTask.Error()
{
  return &type metadata for RunningTask.Error;
}

ValueMetadata *type metadata accessor for RunningTask.CommandID()
{
  return &type metadata for RunningTask.CommandID;
}

uint64_t destroy for RunningTask.Task(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 45);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 <= 1) {
    return _s13IMAP2Behavior4TaskOwxx_0(a1);
  }
  return a1;
}

uint64_t initializeWithCopy for RunningTask.Task(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 45);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a2 + 2;
  }
  if (v4 == 1)
  {
    long long v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
    *(unsigned char *)(a1 + 45) = 1;
  }
  else if (v4)
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(unsigned char *)(a1 + 45) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for RunningTask.Task(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 45);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 <= 1) {
      _s13IMAP2Behavior4TaskOwxx_0(a1);
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 45);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      uint64_t v7 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v7 - 8))(a1, a2);
      char v8 = *((unsigned char *)a2 + 44);
      *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
      *(unsigned char *)(a1 + 44) = v8;
      *(unsigned char *)(a1 + 45) = 1;
    }
    else if (v5)
    {
      long long v9 = *a2;
      long long v10 = a2[1];
      *(_OWORD *)(a1 + 30) = *(long long *)((char *)a2 + 30);
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v10;
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 45) = 0;
    }
  }
  return a1;
}

__n128 initializeWithTake for RunningTask.Task(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for RunningTask.Task(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 45);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 <= 1) {
      _s13IMAP2Behavior4TaskOwxx_0(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 45);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
      *(unsigned char *)(a1 + 45) = 1;
    }
    else
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      if (v5)
      {
        *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
      }
      else
      {
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 45) = 0;
      }
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for RunningTask.Task(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 46)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 45);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RunningTask.Task(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 30) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 46) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 46) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 45) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000E8D9C(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 45);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_1000E8DB8(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 29) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 45) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RunningTask.Task()
{
  return &type metadata for RunningTask.Task;
}

ValueMetadata *type metadata accessor for RunningTask.TracingID()
{
  return &type metadata for RunningTask.TracingID;
}

uint64_t sub_1000E8E00(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = v8 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    if (*((unsigned char *)a2 + 45) == 1)
    {
      long long v9 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v9;
      (**(void (***)(uint64_t, uint64_t *))(v9 - 8))(a1, a2);
      *(_DWORD *)(v4 + 40) = *((_DWORD *)a2 + 10);
      *(unsigned char *)(v4 + 44) = *((unsigned char *)a2 + 44);
      *(unsigned char *)(v4 + 45) = 1;
    }
    else if (*((unsigned char *)a2 + 45))
    {
      long long v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(_OWORD *)(a1 + 30) = *(_OWORD *)((char *)a2 + 30);
    }
    else
    {
      long long v7 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v7;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
      *(unsigned char *)(v4 + 45) = 0;
    }
    *(void *)(v4 + 48) = a2[6];
    *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 7);
    long long v11 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(v4 + 96) = v11;
    uint64_t v12 = v11;
    uint64_t v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v4 + 72, (uint64_t)(a2 + 9), v12);
    uint64_t v14 = a3[7];
    uint64_t v15 = v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = sub_1005E0ED0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = *(int *)(type metadata accessor for Task.Logger(0) + 20);
    uint64_t v19 = v15 + v18;
    uint64_t v20 = v16 + v18;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    uint64_t v24 = *(void *)(v20 + 24);
    uint64_t v25 = *(void *)(v20 + 32);
    int v26 = *(_DWORD *)(v20 + 40);
    sub_1000E8260(*(void *)v20, v22, v23, v24);
    *(void *)uint64_t v19 = v21;
    *(void *)(v19 + 8) = v22;
    *(void *)(v19 + 16) = v23;
    *(void *)(v19 + 24) = v24;
    *(void *)(v19 + 32) = v25;
    *(_DWORD *)(v19 + 40) = v26;
    uint64_t v27 = a3[9];
    *(_DWORD *)(v4 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
    uint64_t v28 = v4 + v27;
    uint64_t v29 = (uint64_t)a2 + v27;
    *(void *)uint64_t v28 = *(void *)v29;
    *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
    uint64_t v30 = a3[11];
    *(_DWORD *)(v4 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
    *(_DWORD *)(v4 + v30) = *(_DWORD *)((char *)a2 + v30);
    uint64_t v31 = a3[12];
    uint64_t v32 = a3[13];
    uint64_t v33 = (void *)(v4 + v31);
    uint64_t v34 = (uint64_t *)((char *)a2 + v31);
    uint64_t v35 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v35;
    unint64_t v36 = (void *)(v4 + v32);
    uint64_t v37 = (uint64_t *)((char *)a2 + v32);
    uint64_t v38 = v37[1];
    *unint64_t v36 = *v37;
    v36[1] = v38;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1000E90C8(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 45) <= 1u) {
    _s13IMAP2Behavior4TaskOwxx_0(a1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 72);
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for Task.Logger(0);
  sub_1000E82B0(*(void *)(v4 + *(int *)(v6 + 20)), *(void *)(v4 + *(int *)(v6 + 20) + 8), *(void *)(v4 + *(int *)(v6 + 20) + 16), *(void *)(v4 + *(int *)(v6 + 20) + 24));
  swift_release();
  return swift_release();
}

uint64_t sub_1000E91B0(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(unsigned char *)(a2 + 45) == 1)
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
    *(unsigned char *)(a1 + 45) = 1;
  }
  else if (*(unsigned char *)(a2 + 45))
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    *(unsigned char *)(a1 + 45) = 0;
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  long long v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v9;
  uint64_t v10 = v9;
  long long v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(a1 + 72, a2 + 72, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = *(int *)(type metadata accessor for Task.Logger(0) + 20);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = v14 + v16;
  uint64_t v19 = *(void *)v18;
  uint64_t v20 = *(void *)(v18 + 8);
  uint64_t v21 = *(void *)(v18 + 16);
  uint64_t v22 = *(void *)(v18 + 24);
  uint64_t v23 = *(void *)(v18 + 32);
  int v24 = *(_DWORD *)(v18 + 40);
  sub_1000E8260(*(void *)v18, v20, v21, v22);
  *(void *)uint64_t v17 = v19;
  *(void *)(v17 + 8) = v20;
  *(void *)(v17 + 16) = v21;
  *(void *)(v17 + 24) = v22;
  *(void *)(v17 + 32) = v23;
  *(_DWORD *)(v17 + 40) = v24;
  uint64_t v25 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + v28) = *(_DWORD *)(a2 + v28);
  uint64_t v29 = a3[12];
  uint64_t v30 = a3[13];
  uint64_t v31 = (void *)(a1 + v29);
  uint64_t v32 = (void *)(a2 + v29);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  uint64_t v34 = (void *)(a1 + v30);
  uint64_t v35 = (void *)(a2 + v30);
  uint64_t v36 = v35[1];
  void *v34 = *v35;
  v34[1] = v36;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1000E942C(uint64_t a1, long long *a2, int *a3)
{
  if ((long long *)a1 != a2)
  {
    sub_1000B9324(a1);
    if (*((unsigned char *)a2 + 45) == 1)
    {
      uint64_t v7 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v7 - 8))(a1, a2);
      char v8 = *((unsigned char *)a2 + 44);
      *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
      *(unsigned char *)(a1 + 44) = v8;
      *(unsigned char *)(a1 + 45) = 1;
    }
    else if (*((unsigned char *)a2 + 45))
    {
      long long v9 = *a2;
      long long v10 = a2[1];
      *(_OWORD *)(a1 + 30) = *(long long *)((char *)a2 + 30);
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v10;
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 45) = 0;
    }
  }
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  sub_100022498((uint64_t *)(a1 + 72), (uint64_t *)a2 + 9);
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t)a2 + v11;
  uint64_t v14 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = *(int *)(type metadata accessor for Task.Logger(0) + 20);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = v13 + v15;
  uint64_t v18 = *(void *)v17;
  uint64_t v19 = *(void *)(v17 + 8);
  uint64_t v20 = *(void *)(v17 + 16);
  uint64_t v21 = *(void *)(v17 + 24);
  uint64_t v22 = *(void *)(v17 + 32);
  int v23 = *(_DWORD *)(v17 + 40);
  sub_1000E8260(*(void *)v17, v19, v20, v21);
  uint64_t v24 = *(void *)v16;
  uint64_t v25 = *(void *)(v16 + 8);
  uint64_t v26 = *(void *)(v16 + 16);
  uint64_t v27 = *(void *)(v16 + 24);
  *(void *)uint64_t v16 = v18;
  *(void *)(v16 + 8) = v19;
  *(void *)(v16 + 16) = v20;
  *(void *)(v16 + 24) = v21;
  *(void *)(v16 + 32) = v22;
  *(_DWORD *)(v16 + 40) = v23;
  sub_1000E82B0(v24, v25, v26, v27);
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
  uint64_t v28 = a3[9];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = (uint64_t)a2 + v28;
  char v31 = *(unsigned char *)(v30 + 8);
  *(void *)uint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = v31;
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)((char *)a2 + a3[11]);
  uint64_t v32 = a3[12];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)((char *)a2 + v32);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  swift_retain();
  swift_release();
  uint64_t v36 = a3[13];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  uint64_t v39 = v38[1];
  void *v37 = *v38;
  v37[1] = v39;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1000E96C4(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  *(_OWORD *)((char *)a1 + 30) = *(_OWORD *)((char *)a2 + 30);
  long long v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  long long v8 = a2[6];
  uint64_t v9 = a3[7];
  long long v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[5] = a2[5];
  a1[6] = v8;
  uint64_t v12 = sub_1005E0ED0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = *(int *)(type metadata accessor for Task.Logger(0) + 20);
  uint64_t v14 = &v10[v13];
  uint64_t v15 = &v11[v13];
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *(_OWORD *)(v14 + 28) = *(_OWORD *)(v15 + 28);
  uint64_t v17 = a3[9];
  *(_DWORD *)((char *)a1 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = a3[11];
  *(_DWORD *)((char *)a1 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
  *(_DWORD *)((char *)a1 + v20) = *(_DWORD *)((char *)a2 + v20);
  uint64_t v21 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *(_OWORD *)((char *)a1 + v21) = *(_OWORD *)((char *)a2 + v21);
  return a1;
}

uint64_t sub_1000E97D8(uint64_t a1, uint64_t a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000B9324(a1);
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 72);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(type metadata accessor for Task.Logger(0) + 20);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t v14 = *(void *)(v13 + 32);
  int v15 = *(_DWORD *)(v13 + 40);
  uint64_t v16 = *(void *)v12;
  uint64_t v17 = *(void *)(v12 + 8);
  uint64_t v18 = *(void *)(v12 + 16);
  uint64_t v19 = *(void *)(v12 + 24);
  long long v20 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v20;
  *(void *)(v12 + 32) = v14;
  *(_DWORD *)(v12 + 40) = v15;
  sub_1000E82B0(v16, v17, v18, v19);
  uint64_t v21 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + v24) = *(_DWORD *)(a2 + v24);
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  swift_release();
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  swift_release();
  return a1;
}

uint64_t sub_1000E996C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000E9980);
}

uint64_t sub_1000E9980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Task.Logger(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000E9A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000E9A44);
}

uint64_t sub_1000E9A44(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Task.Logger(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1000E9AEC()
{
  uint64_t result = type metadata accessor for Task.Logger(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1000E9BC8()
{
  unint64_t result = qword_10070C480;
  if (!qword_10070C480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C480);
  }
  return result;
}

unint64_t sub_1000E9C20()
{
  unint64_t result = qword_10070C488;
  if (!qword_10070C488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C488);
  }
  return result;
}

unint64_t sub_1000E9C78()
{
  unint64_t result = qword_10070C490;
  if (!qword_10070C490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C490);
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningTask.CommandID.Generator()
{
  return &type metadata for RunningTask.CommandID.Generator;
}

ValueMetadata *type metadata accessor for RunningTask.ActionID()
{
  return &type metadata for RunningTask.ActionID;
}

ValueMetadata *type metadata accessor for RunningTask.ActionID.Generator()
{
  return &type metadata for RunningTask.ActionID.Generator;
}

unint64_t sub_1000E9D00()
{
  unint64_t result = qword_10070C498;
  if (!qword_10070C498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C498);
  }
  return result;
}

uint64_t sub_1000E9D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(a5 + 16))(v41, a4, a5);
  if (*(void *)(a2 + 16))
  {
    sub_1005E33F0();
    sub_1005E2BE0();
    Swift::Int v7 = sub_1005E3470();
    uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v9 = v7 & ~v8;
    if ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
    {
      uint64_t v10 = ~v8;
      do
      {
        sub_10003C94C(*(void *)(a2 + 48) + 48 * v9, (uint64_t)&v38);
        uint64_t v11 = v38;
        uint64_t v12 = *(void *)&v41[0];
        sub_10003C94C((uint64_t)&v38, (uint64_t)v37);
        sub_10003C94C((uint64_t)v41, (uint64_t)v36);
        if (v11 == v12)
        {
          char v13 = sub_1005E2BD0();
          sub_10003C9A8((uint64_t)v36);
          sub_10003C9A8((uint64_t)v37);
          sub_10003C9A8((uint64_t)&v38);
          if (v13)
          {
            sub_10003C9A8((uint64_t)v41);
            return 0;
          }
        }
        else
        {
          sub_10003C9A8((uint64_t)v36);
          sub_10003C9A8((uint64_t)v37);
          sub_10003C9A8((uint64_t)&v38);
        }
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
  }
  sub_10003C9A8((uint64_t)v41);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5);
  uint64_t v33 = *(void *)(result + 16);
  if (v33)
  {
    unint64_t v15 = 0;
    uint64_t v34 = result;
    uint64_t v35 = result + 32;
    uint64_t v16 = a2 + 56;
    while (v15 < *(void *)(result + 16))
    {
      sub_10003C94C(v35 + 48 * v15, (uint64_t)v41);
      if (*(void *)(a2 + 16))
      {
        sub_1005E33F0();
        sub_1005E2BE0();
        Swift::Int v17 = sub_1005E3470();
        uint64_t v18 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v19 = v17 & ~v18;
        if ((*(void *)(v16 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
        {
          uint64_t v20 = ~v18;
          do
          {
            sub_10003C94C(*(void *)(a2 + 48) + 48 * v19, (uint64_t)&v38);
            uint64_t v21 = v38;
            uint64_t v22 = *(void *)&v41[0];
            sub_10003C94C((uint64_t)&v38, (uint64_t)v37);
            sub_10003C94C((uint64_t)v41, (uint64_t)v36);
            if (v21 == v22)
            {
              char v23 = sub_1005E2BD0();
              sub_10003C9A8((uint64_t)v36);
              sub_10003C9A8((uint64_t)v37);
              sub_10003C9A8((uint64_t)&v38);
              if (v23)
              {
                sub_10003C9A8((uint64_t)v41);
                swift_bridgeObjectRelease();
                return 0;
              }
            }
            else
            {
              sub_10003C9A8((uint64_t)v36);
              sub_10003C9A8((uint64_t)v37);
              sub_10003C9A8((uint64_t)&v38);
            }
            unint64_t v19 = (v19 + 1) & v20;
          }
          while (((*(void *)(v16 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) != 0);
        }
      }
      ++v15;
      sub_10003C9A8((uint64_t)v41);
      uint64_t result = v34;
      if (v15 == v33) {
        goto LABEL_21;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRelease();
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a5 + 32))(&v38, a4, a5);
    uint64_t v24 = v39;
    unsigned int v25 = v40;
    v41[0] = v38;
    sub_10001D550((uint64_t)v41);
    if (*(void *)(a3 + 16) && (unint64_t v26 = sub_100024264(v24, v25), (v27 & 1) != 0))
    {
      Swift::Int v28 = *(void *)(*(void *)(a3 + 56) + 8 * v26);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      Swift::Int v29 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 48))(a4, a5);
      char v30 = sub_100091FEC(v29, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return 1;
  }
  return result;
}

uint64_t sub_1000EA15C(uint64_t a1, char a2, uint64_t a3)
{
  int v39 = a2 & 1;
  uint64_t v5 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v5 - 8);
  uint64_t v33 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t PendingDownload = type metadata accessor for FindPendingDownload();
  __chkstk_darwin(PendingDownload);
  uint64_t v31 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = *(void *)(a1 + 24);
  uint64_t v34 = (long long *)a1;
  int v37 = *(_DWORD *)(a1 + 32);
  uint64_t v36 = type metadata accessor for DownloadTask(0);
  unsigned int v40 = &v48;
  uint64_t v8 = a3 + 56;
  unint64_t v35 = sub_10003BC08();
  for (uint64_t i = 0; i != 3; ++i)
  {
    char v10 = *((unsigned char *)&off_1006BA008 + i + 32);
    uint64_t v47 = v36;
    uint64_t v43 = v38;
    int v44 = v37;
    char v45 = v39;
    char v46 = v10;
    swift_bridgeObjectRetain();
    sub_1005E2BF0();
    if (*(void *)(a3 + 16))
    {
      sub_1005E33F0();
      sub_1005E2BE0();
      Swift::Int v11 = sub_1005E3470();
      uint64_t v12 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v13 = v11 & ~v12;
      if ((*(void *)(v8 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
      {
        uint64_t v14 = ~v12;
        do
        {
          sub_10003C94C(*(void *)(a3 + 48) + 48 * v13, (uint64_t)&v43);
          uint64_t v15 = v43;
          uint64_t v16 = v47;
          sub_10003C94C((uint64_t)&v43, (uint64_t)v42);
          sub_10003C94C((uint64_t)&v47, (uint64_t)v41);
          if (v15 == v16)
          {
            char v17 = sub_1005E2BD0();
            sub_10003C9A8((uint64_t)v41);
            sub_10003C9A8((uint64_t)v42);
            sub_10003C9A8((uint64_t)&v43);
            if (v17)
            {
              sub_10003C9A8((uint64_t)&v47);
              return 1;
            }
          }
          else
          {
            sub_10003C9A8((uint64_t)v41);
            sub_10003C9A8((uint64_t)v42);
            sub_10003C9A8((uint64_t)&v43);
          }
          unint64_t v13 = (v13 + 1) & v14;
        }
        while (((*(void *)(v8 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
      }
    }
    sub_10003C9A8((uint64_t)&v47);
  }
  uint64_t v19 = (uint64_t)v34;
  long long v49 = *v34;
  swift_bridgeObjectRetain();
  sub_10002292C((uint64_t)&v49);
  sub_10001FC6C();
  uint64_t v20 = (uint64_t)v33;
  sub_1005E3680();
  uint64_t v21 = v31;
  sub_100171490(v19, v39, v20, 0, 1, v31);
  sub_10003C94C(v21 + *(int *)(PendingDownload + 44), (uint64_t)&v47);
  sub_1000EA5EC(v21);
  if (*(void *)(a3 + 16))
  {
    sub_1005E33F0();
    sub_1005E2BE0();
    Swift::Int v22 = sub_1005E3470();
    uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v24 = v22 & ~v23;
    if ((*(void *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24))
    {
      uint64_t v25 = ~v23;
      do
      {
        sub_10003C94C(*(void *)(a3 + 48) + 48 * v24, (uint64_t)&v43);
        uint64_t v26 = v43;
        uint64_t v27 = v47;
        sub_10003C94C((uint64_t)&v43, (uint64_t)v42);
        sub_10003C94C((uint64_t)&v47, (uint64_t)v41);
        if (v26 == v27)
        {
          char v28 = sub_1005E2BD0();
          sub_10003C9A8((uint64_t)v41);
          sub_10003C9A8((uint64_t)v42);
          sub_10003C9A8((uint64_t)&v43);
          if (v28)
          {
            uint64_t v18 = 1;
            goto LABEL_20;
          }
        }
        else
        {
          sub_10003C9A8((uint64_t)v41);
          sub_10003C9A8((uint64_t)v42);
          sub_10003C9A8((uint64_t)&v43);
        }
        unint64_t v24 = (v24 + 1) & v25;
      }
      while (((*(void *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) != 0);
    }
  }
  uint64_t v18 = 0;
LABEL_20:
  sub_10003C9A8((uint64_t)&v47);
  return v18;
}

uint64_t sub_1000EA5EC(uint64_t a1)
{
  uint64_t PendingDownload = type metadata accessor for FindPendingDownload();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(PendingDownload - 8) + 8))(a1, PendingDownload);
  return a1;
}

uint64_t sub_1000EA64C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RunningTasks(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for RunningTasks(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for RunningTasks()
{
  return &type metadata for RunningTasks;
}

unint64_t sub_1000EA73C()
{
  void (*v17)(uint64_t *__return_ptr, char *);
  int v18;
  uint64_t v19;
  int v20;
  const mach_header_64 *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (**v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;

  uint64_t v1 = v0;
  uint64_t v26 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v2 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  unint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_10070C4A0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = __chkstk_darwin(v6);
  Swift::Int v11 = (char *)&v23 - v10;
  unint64_t v24 = v2;
  uint64_t v25 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
  uint64_t v12 = (uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48);
  while (1)
  {
    unint64_t v13 = *(void *)(v1 + 8);
    unint64_t v14 = *(void *)(*(void *)v1 + 16);
    if (v13 == v14)
    {
      uint64_t v15 = 1;
      goto LABEL_6;
    }
    if (v13 >= v14) {
      break;
    }
    sub_1000EDA48(*(void *)v1+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v13, (uint64_t)v11, type metadata accessor for TaskHistory.Running);
    uint64_t v15 = 0;
    *(void *)(v1 + 8) = v13 + 1;
LABEL_6:
    uint64_t v16 = v26;
    (*v25)(v11, v15, 1, v26);
    char v17 = *(void (**)(uint64_t *__return_ptr, char *))(v1 + 16);
    sub_1000EDAB0((uint64_t)v11, (uint64_t)v8);
    uint64_t v18 = (*v12)(v8, 1, v16);
    if (v18 == 1)
    {
      Swift::Int v22 = 0;
LABEL_12:
      HIBYTE(v27) = v18 == 1;
      return v22 | ((unint64_t)(v18 == 1) << 40);
    }
    sub_1000EDB18((uint64_t)v8, (uint64_t)v4, type metadata accessor for TaskHistory.Running);
    v17(&v27, v4);
    uint64_t v19 = v27;
    uint64_t v20 = BYTE4(v27);
    sub_1000EDB80((uint64_t)v4, type metadata accessor for TaskHistory.Running);
    char v28 = v19;
    Swift::Int v29 = v20;
    unint64_t result = (*(uint64_t (**)(int *))(v1 + 32))(&v28);
    if (result)
    {
      uint64_t v21 = &_mh_execute_header;
      if (!v20) {
        uint64_t v21 = 0;
      }
      Swift::Int v22 = (unint64_t)v21 | v19;
      goto LABEL_12;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000EA9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for ClientCommand(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (unint64_t *)((char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000EDA48(a1, (uint64_t)v7, type metadata accessor for ClientCommand);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 1;
  switch(EnumCaseMultiPayload)
  {
    case 1:
    case 2:
    case 6:
    case 8:
      goto LABEL_24;
    case 3:
    case 4:
    case 5:
      goto LABEL_25;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_25;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = sub_10000566C(&qword_100709E50);
      uint64_t v25 = (uint64_t)v7 + *(int *)(v24 + 64);
      sub_1000094D4(*(unint64_t *)((char *)v7 + *(int *)(v24 + 80)), *(unint64_t *)((char *)v7 + *(int *)(v24 + 80) + 8));
      sub_100007A48(v25, &qword_100709E58);
      return 1;
    case 10:
    case 12:
      sub_10000952C(*v7);
      return 1;
    case 11:
    case 13:
      sub_10000952C(*v7);
      goto LABEL_25;
    case 14:
      sub_10000566C(&qword_100709E68);
      goto LABEL_20;
    case 15:
      sub_10000566C(&qword_100709E70);
LABEL_20:
      swift_bridgeObjectRelease();
      sub_100007A48((uint64_t)v7, &qword_100709E38);
      return 1;
    case 16:
    case 17:
      uint64_t v10 = (char *)v7 + *(int *)(sub_10000566C(&qword_100709E78) + 48);
      uint64_t v11 = *(void *)v10;
      uint64_t v12 = *((unsigned int *)v10 + 2);
      sub_100007A48((uint64_t)v7, &qword_100709E38);
      uint64_t v13 = *(void *)(a3 + 16);
      if (!v13) {
        goto LABEL_25;
      }
      uint64_t v14 = *(void *)(type metadata accessor for RunningTask() - 8);
      uint64_t v15 = a3 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = v12 | (v12 << 32);
      uint64_t v17 = *(void *)(v14 + 72);
      swift_bridgeObjectRetain();
      break;
    case 18:
      swift_release();
      swift_release();
      goto LABEL_22;
    case 19:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
      return result;
    default:
      swift_bridgeObjectRelease();
LABEL_22:
      swift_release();
      return 1;
  }
  do
  {
    sub_1000B9240(v15, (uint64_t)v26);
    if (v27 != 1)
    {
      sub_1000B9324((uint64_t)v26);
      goto LABEL_7;
    }
    sub_100021BFC(v26, (uint64_t)v28);
    uint64_t v18 = v29;
    uint64_t v19 = v30;
    sub_10003BCDC(v28, v29);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v19 + 32))(&v31, v18, v19);
    uint64_t v35 = v32;
    unsigned int v36 = v33;
    long long v34 = v31;
    sub_10001D550((uint64_t)&v34);
    if ((v36 | ((unint64_t)v36 << 32)) != v16)
    {
      sub_10001D550((uint64_t)&v35);
LABEL_14:
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v28);
      goto LABEL_7;
    }
    BOOL v20 = sub_1000255D4(v35, v11);
    sub_10001D550((uint64_t)&v35);
    if (!v20) {
      goto LABEL_14;
    }
    uint64_t v21 = v29;
    uint64_t v22 = v30;
    sub_10003BCDC(v28, v29);
    char v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 56))(v21, v22);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v28);
    if (v23)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    v15 += v17;
    --v13;
  }
  while (v13);
LABEL_24:
  swift_bridgeObjectRelease();
LABEL_25:
  swift_bridgeObjectRelease();
  return 1;
}

void *sub_1000EAE28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for RunningTask() - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = &_swiftEmptySetSingleton;
  BOOL v20 = &_swiftEmptySetSingleton;
  uint64_t v8 = *(void *)(a2 + 16);
  if (v8)
  {
    uint64_t v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain_n();
    do
    {
      sub_1000EDA48(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RunningTask);
      sub_1000B9240((uint64_t)v6, (uint64_t)&v18);
      if (v19)
      {
        if (v19 == 1)
        {
          sub_100021BFC(&v18, (uint64_t)v15);
          uint64_t v11 = v16;
          uint64_t v12 = v17;
          sub_10003BCDC(v15, v16);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v12 + 32))(&v21, v11, v12);
          uint64_t v13 = v22;
          LODWORD(v12) = v23;
          long long v24 = v21;
          sub_10001D550((uint64_t)&v24);
          _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v15);
          sub_1000187DC((uint64_t)&v18, v13, v12);
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        sub_1000B9324((uint64_t)&v18);
      }
      sub_1000EDB80((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RunningTask);
      v9 += v10;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease_n();
    return v20;
  }
  return result;
}

void sub_1000EB040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(v3 + 8);
  uint64_t v7 = (unint64_t *)(v3 + 8);
  uint64_t v9 = *(void *)(v8 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v10 = sub_1000EC02C(v7, a1, a2, a3);
  uint64_t v11 = *(void *)(*v7 + 16);
  if (v11 < v10)
  {
    __break(1u);
  }
  else
  {
    sub_1000D6640(v10, v11);
    if (v9 != *(void *)(*v7 + 16))
    {
      swift_retain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      os_log_t oslog = sub_1005E0EB0();
      os_log_type_t v12 = sub_1005E2590();
      if (os_log_type_enabled(oslog, v12))
      {
        uint64_t v13 = swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 68158208;
        sub_1005E2960();
        *(_WORD *)(v13 + 8) = 256;
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v13 + 11) = 2048;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, oslog, v12, "[%.*hhx] Pruned %ld mailbox task(s) without mailbox affinity.", (uint8_t *)v13, 0x15u);
        swift_slowDealloc();
      }
      else
      {
        swift_release();
      }
    }
  }
}

unint64_t sub_1000EB228(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for RunningTask() - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = &_swiftEmptySetSingleton;
  uint64_t v7 = *(void *)(a2 + 16);
  if (v7)
  {
    uint64_t v8 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v9 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    char v10 = 0;
    for (uint64_t i = 0; i != v7; ++i)
    {
      sub_1000EDA48(v8 + v9 * i, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RunningTask);
      sub_1000B9240((uint64_t)v6, (uint64_t)v23);
      if (!v24)
      {
        uint64_t v12 = *((void *)v6 + 6);
        swift_bridgeObjectRetain();
        sub_1000B9324((uint64_t)v23);
        uint64_t v15 = v12;
        uint64_t v16 = 0;
        uint64_t v17 = sub_1000E2978;
        uint64_t v18 = 0;
        char v19 = sub_1000EC3CC;
        uint64_t v20 = 0;
        long long v21 = sub_1000EC3DC;
        uint64_t v22 = 0;
        swift_bridgeObjectRetain();
        while (1)
        {
          unint64_t result = sub_1000EA73C();
          if ((result & 0x10000000000) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            char v10 = 1;
            goto LABEL_4;
          }
          if ((result & 0x100000000) != 0) {
            break;
          }
          sub_100018BD0((_DWORD *)&v14 + 1, result);
        }
        __break(1u);
        return result;
      }
      if (v24 == 1) {
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v23);
      }
LABEL_4:
      sub_1000EDB80((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RunningTask);
    }
    swift_bridgeObjectRelease();
    unint64_t result = (unint64_t)v25;
    if ((v10 & 1) == 0) {
      goto LABEL_15;
    }
    if (!v25[2])
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

void *sub_1000EB45C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for RunningTask() - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 16);
  if (!v7) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v8 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = *(void *)(v4 + 72);
  swift_bridgeObjectRetain_n();
  char v10 = _swiftEmptyArrayStorage;
  do
  {
    sub_1000EDA48(v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RunningTask);
    sub_1000B9240((uint64_t)v6, (uint64_t)v24);
    if (!v27)
    {
      sub_1000B9324((uint64_t)v24);
LABEL_4:
      sub_1000EDB80((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RunningTask);
      goto LABEL_5;
    }
    if (v27 != 1) {
      goto LABEL_4;
    }
    int v11 = v25;
    char v12 = v26;
    sub_100021BFC(v24, (uint64_t)v21);
    if (v12)
    {
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v21);
      goto LABEL_4;
    }
    uint64_t v13 = v22;
    uint64_t v14 = v23;
    sub_10003BCDC(v21, v22);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v14 + 32))(&v28, v13, v14);
    long long v31 = v28;
    sub_10001D550((uint64_t)&v31);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v21);
    sub_1000EDB80((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RunningTask);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v10 = sub_100015BB0(0, v10[2] + 1, 1, v10);
    }
    unint64_t v16 = v10[2];
    unint64_t v15 = v10[3];
    if (v16 >= v15 >> 1) {
      char v10 = sub_100015BB0((void *)(v15 > 1), v16 + 1, 1, v10);
    }
    uint64_t v17 = v29;
    int v18 = v30;
    v10[2] = v16 + 1;
    char v19 = &v10[3 * v16];
    *((_DWORD *)v19 + 8) = v11;
    v19[5] = v17;
    *((_DWORD *)v19 + 12) = v18;
LABEL_5:
    v8 += v9;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease_n();
  return v10;
}

uint64_t sub_1000EB6DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000B9240(a1, (uint64_t)v14);
  if (!v15)
  {
    sub_1000B9324((uint64_t)v14);
    goto LABEL_5;
  }
  if (v15 != 1)
  {
LABEL_5:
    uint64_t v6 = 0;
    int v7 = 0;
    goto LABEL_6;
  }
  sub_100021BFC(v14, (uint64_t)v11);
  uint64_t v4 = v12;
  uint64_t v5 = v13;
  sub_10003BCDC(v11, v12);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v5 + 32))(&v16, v4, v5);
  uint64_t v6 = v17;
  int v7 = v18;
  long long v19 = v16;
  sub_10001D550((uint64_t)&v19);
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v11);
LABEL_6:
  uint64_t result = type metadata accessor for RunningTask();
  uint64_t v9 = a1 + *(int *)(result + 36);
  uint64_t v10 = *(void *)v9;
  LOBYTE(v9) = *(unsigned char *)(v9 + 8);
  *(void *)a2 = v6;
  *(_DWORD *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = v10;
  *(unsigned char *)(a2 + 24) = v9;
  return result;
}

uint64_t sub_1000EB7CC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for RunningTask();
  uint64_t v5 = v4 - 8;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  int v11 = (char *)&v17 - v10;
  sub_1000EDA48(a1, (uint64_t)&v17 - v10, (uint64_t (*)(void))type metadata accessor for RunningTask);
  int v12 = *((_DWORD *)v2 + 4);
  *(_DWORD *)&v11[*(int *)(v5 + 40)] = v12;
  *((_DWORD *)v2 + 4) = (v12 + 1) & 0xFFFFFF;
  sub_1000E2E1C(*v2);
  sub_1000EDA48((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for RunningTask);
  unint64_t v13 = *((void *)v2 + 1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v13 = sub_100017558(0, *(void *)(v13 + 16) + 1, 1, v13);
  }
  unint64_t v15 = *(void *)(v13 + 16);
  unint64_t v14 = *(void *)(v13 + 24);
  if (v15 >= v14 >> 1) {
    unint64_t v13 = sub_100017558(v14 > 1, v15 + 1, 1, v13);
  }
  *(void *)(v13 + 16) = v15 + 1;
  sub_1000EDB18((uint64_t)v9, v13+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v15, (uint64_t (*)(void))type metadata accessor for RunningTask);
  *((void *)v2 + 1) = v13;
  return sub_1000EDB80((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for RunningTask);
}

uint64_t sub_1000EB9A0(uint64_t a1, char *a2)
{
  sub_1000B9240(a1, (uint64_t)v18);
  if (!v21)
  {
    sub_1000B9324((uint64_t)v18);
    return 0;
  }
  if (v21 == 1)
  {
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v18);
    return 0;
  }
  char v5 = *a2;
  uint64_t v6 = a1 + *(int *)(type metadata accessor for RunningTask() + 28);
  uint64_t v7 = (uint64_t *)(v6 + *(int *)(type metadata accessor for Task.Logger(0) + 20));
  uint64_t v9 = v7[1];
  unint64_t v8 = v7[2];
  uint64_t v10 = v7[3];
  if (v10 < 0) {
    swift_bridgeObjectRetain();
  }
  else {
    sub_1000E8260(*v7, v7[1], v7[2], v10);
  }
  sub_1000B9240(a1, (uint64_t)v18);
  if (v21)
  {
    if (v21 == 1)
    {
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v18);
    }
    else if (v19 | ((unint64_t)v20 << 32) || v18[3] | v18[4] | v18[0] | v18[2] | v18[1])
    {
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      int v11 = sub_1005E0EB0();
      os_log_type_t v14 = sub_1005E2580();
      if (os_log_type_enabled(v11, v14))
      {
        uint64_t v17 = v9;
        uint64_t v15 = swift_slowAlloc();
        v18[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 68158210;
        LODWORD(v22) = 2;
        sub_1005E2960();
        *(_WORD *)(v15 + 8) = 256;
        LOBYTE(v22) = v5;
        sub_1005E2960();
        *(_WORD *)(v15 + 11) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v22 = sub_1000C6914(v17, v8, v18);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v11, v14, "[%.*hhx-%{public}s] Pruning failed task", (uint8_t *)v15, 0x15u);
        swift_arrayDestroy();
        goto LABEL_17;
      }
LABEL_20:
      swift_bridgeObjectRelease_n();
      goto LABEL_21;
    }
  }
  else
  {
    sub_1000B9324((uint64_t)v18);
  }
  swift_bridgeObjectRetain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  int v11 = sub_1005E0EB0();
  os_log_type_t v12 = sub_1005E2580();
  if (!os_log_type_enabled(v11, v12)) {
    goto LABEL_20;
  }
  uint64_t v16 = v9;
  uint64_t v13 = swift_slowAlloc();
  v18[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v13 = 68158210;
  LODWORD(v22) = 2;
  sub_1005E2960();
  *(_WORD *)(v13 + 8) = 256;
  LOBYTE(v22) = v5;
  sub_1005E2960();
  *(_WORD *)(v13 + 11) = 2082;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1000C6914(v16, v8, v18);
  sub_1005E2960();
  swift_bridgeObjectRelease_n();
  _os_log_impl((void *)&_mh_execute_header, v11, v12, "[%.*hhx-%{public}s] Pruning completed task", (uint8_t *)v13, 0x15u);
  swift_arrayDestroy();
LABEL_17:
  swift_slowDealloc();
  swift_slowDealloc();
LABEL_21:

  sub_1000E4228(*a2);
  return 1;
}

uint64_t sub_1000EBDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = type metadata accessor for RunningTask();
  uint64_t v3 = *(void *)(v23 - 8);
  uint64_t v4 = __chkstk_darwin(v23);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v21 - v7;
  int64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    char v24 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10001A574(0, v9, 0);
    uint64_t v11 = a2 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    uint64_t v21 = a2;
    uint64_t v22 = v12;
    do
    {
      sub_1000EDA48(v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for RunningTask);
      sub_1000EDA48((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RunningTask);
      uint64_t v13 = sub_1005E1CC0();
      uint64_t v15 = v14;
      sub_1000EDB80((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for RunningTask);
      uint64_t v10 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10001A574(0, v10[2] + 1, 1);
        uint64_t v12 = v22;
        uint64_t v10 = v24;
      }
      unint64_t v17 = v10[2];
      unint64_t v16 = v10[3];
      if (v17 >= v16 >> 1)
      {
        sub_10001A574(v16 > 1, v17 + 1, 1);
        uint64_t v12 = v22;
        uint64_t v10 = v24;
      }
      v10[2] = v17 + 1;
      int v18 = &v10[2 * v17];
      unsigned char v18[4] = v13;
      uint64_t v18[5] = v15;
      v11 += v12;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  char v24 = v10;
  sub_10000566C(&qword_100709F58);
  sub_10001C548();
  uint64_t v19 = sub_1005E1A80();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1000EC024(uint64_t a1)
{
  return sub_1000EBDC4(a1, *(void *)(v1 + 8));
}

uint64_t sub_1000EC02C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a4;
  uint64_t v8 = type metadata accessor for RunningTask() - 8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v34 = (uint64_t)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v33 = (uint64_t)&v31 - v12;
  __chkstk_darwin(v11);
  uint64_t v36 = (uint64_t)&v31 - v14;
  int v37 = a1;
  unint64_t v15 = *a1;
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16)
  {
    unint64_t v19 = 0;
    goto LABEL_11;
  }
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = *(void *)(v13 + 72);
  swift_bridgeObjectRetain();
  unint64_t v19 = 0;
  unint64_t v32 = v17;
  while (1)
  {
    char v20 = sub_1000ED260(v15 + v17, a2, a3);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      return v19;
    }
    if (v20) {
      break;
    }
    ++v19;
    v17 += v18;
    if (v16 == v19)
    {
      swift_bridgeObjectRelease();
      unint64_t v19 = *(void *)(v15 + 16);
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFADD__(v19, 1))
  {
LABEL_37:
    __break(1u);
    return result;
  }
  unint64_t v22 = *(void *)(v15 + 16);
  if (v19 + 1 != v22)
  {
    uint64_t v23 = v18 + v17;
    unint64_t v24 = v19 + 1;
    while (v24 < v22)
    {
      uint64_t v25 = v36;
      sub_1000EDA48(v15 + v23, v36, (uint64_t (*)(void))type metadata accessor for RunningTask);
      char v26 = sub_1000ED260(v25, a2, a3);
      uint64_t result = sub_1000EDB80(v25, (uint64_t (*)(void))type metadata accessor for RunningTask);
      if ((v26 & 1) == 0)
      {
        if (v24 != v19)
        {
          if ((v19 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          unint64_t v27 = *v37;
          unint64_t v28 = *(void *)(*v37 + 16);
          if (v19 >= v28) {
            goto LABEL_33;
          }
          uint64_t v31 = v19 * v18;
          uint64_t result = sub_1000EDA48(v27 + v32 + v19 * v18, v33, (uint64_t (*)(void))type metadata accessor for RunningTask);
          if (v24 >= v28) {
            goto LABEL_34;
          }
          sub_1000EDA48(v27 + v23, v34, (uint64_t (*)(void))type metadata accessor for RunningTask);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          unint64_t *v37 = v27;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_100093454(v27);
            unint64_t v27 = result;
            unint64_t *v37 = result;
          }
          if (v19 >= *(void *)(v27 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_1000D83EC(v34, v27 + v32 + v31);
          if (v24 >= *(void *)(*v37 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = sub_1000D83EC(v33, *v37 + v23);
        }
        if (__OFADD__(v19++, 1)) {
          goto LABEL_31;
        }
      }
      unint64_t v30 = v24 + 1;
      if (__OFADD__(v24, 1)) {
        goto LABEL_30;
      }
      unint64_t v15 = *v37;
      unint64_t v22 = *(void *)(*v37 + 16);
      ++v24;
      v23 += v18;
      if (v30 == v22) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
LABEL_11:
  swift_release();
  swift_release();
  swift_release();
  return v19;
}

BOOL sub_1000EC3CC(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 4) & 1) == 0;
}

uint64_t sub_1000EC3DC@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  if (*(unsigned char *)(result + 4)) {
    __break(1u);
  }
  else {
    *a2 = *(_DWORD *)result;
  }
  return result;
}

void sub_1000EC3F4(unsigned int *a1, uint64_t a2)
{
  int v2 = a1[6];
  uint64_t v3 = *((void *)a1 + 4);
  uint64_t v4 = *((void *)a1 + 5);
  int64_t v5 = *(void *)(v3 + 16);
  uint64_t v57 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10001A574(0, v5, 0);
  uint64_t v6 = _swiftEmptyArrayStorage;
  unsigned int v50 = v2;
  uint64_t v53 = v4;
  uint64_t v54 = v3;
  ConnectionCommandIDSet.makeIterator()(v2, v3, v4);
  if (!v5)
  {
LABEL_6:
    sub_1005E3020();
    if ((v56 & 1) == 0)
    {
      uint64_t v24 = (uint64_t)v55;
      do
      {
        uint64_t v55 = 0;
        unint64_t v56 = 0xE000000000000000;
        CommandID.tag.getter(v24);
        sub_1005E2E90();
        uint64_t v57 = v6;
        unint64_t v26 = v6[2];
        unint64_t v25 = v6[3];
        if (v26 >= v25 >> 1)
        {
          sub_10001A574(v25 > 1, v26 + 1, 1);
          uint64_t v6 = v57;
        }
        _OWORD v6[2] = v26 + 1;
        unint64_t v27 = &v6[2 * v26];
        v27[4] = 0;
        v27[5] = 0xE000000000000000;
        sub_1005E3020();
        uint64_t v24 = (uint64_t)v55;
      }
      while (v56 != 1);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v55 = v6;
    sub_10000566C(&qword_100709F58);
    sub_10001C548();
    uint64_t v11 = sub_1005E1A80();
    unint64_t v13 = v12;
    swift_release();
    uint64_t v14 = ConnectionCommandIDSet.normalCommandCount.getter(v50, v54, v53);
    if (*((void *)a1 + 1))
    {
      unsigned int v15 = a1[4];
      swift_retain_n();
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1005E0EB0();
      if (v14)
      {
        os_log_type_t v17 = sub_1005E25A0();
        if (os_log_type_enabled(v16, v17))
        {
          uint64_t v18 = swift_slowAlloc();
          uint64_t v57 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v18 = 68159235;
          LODWORD(v55) = 2;
          sub_1005E2960();
          *(_WORD *)(v18 + 8) = 256;
          char v19 = *(unsigned char *)(a2 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
          swift_release();
          LOBYTE(v55) = v19;
          sub_1005E2960();
          swift_release();
          *(_WORD *)(v18 + 11) = 2082;
          uint64_t v20 = ConnectionID.debugDescription.getter(*a1);
          sub_1000C6914(v20, v21, (uint64_t *)&v57);
          sub_1005E2960();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v18 + 21) = 2048;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1005E2960();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_WORD *)(v18 + 31) = 2082;
          swift_bridgeObjectRetain();
          sub_1000C6914(v11, v13, (uint64_t *)&v57);
          sub_1005E2960();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v18 + 41) = 2160;
          sub_1005E2960();
          *(_WORD *)(v18 + 51) = 2085;
          LODWORD(v56) = v15;
          swift_bridgeObjectRetain();
          uint64_t v22 = sub_1005E1CC0();
          uint64_t v55 = (void *)sub_1000C6914(v22, v23, (uint64_t *)&v57);
          sub_1005E2960();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v16, v17, "[%.*hhx] Connection %{public}s failed while %ld command(s) %{public}s were running and '%{sensitive,mask.mailbox}s' was selected.", (uint8_t *)v18, 0x3Du);
          swift_arrayDestroy();
          swift_slowDealloc();
LABEL_25:
          swift_slowDealloc();

          return;
        }
      }
      else
      {
        os_log_type_t v34 = sub_1005E25C0();
        uint64_t v35 = v34;
        if (os_log_type_enabled(v16, v34))
        {
          uint64_t v36 = swift_slowAlloc();
          uint64_t v57 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v36 = 68159235;
          LODWORD(v55) = 2;
          sub_1005E2960();
          *(_WORD *)(v36 + 8) = 256;
          char v37 = *(unsigned char *)(a2 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
          swift_release();
          LOBYTE(v55) = v37;
          sub_1005E2960();
          swift_release();
          *(_WORD *)(v36 + 11) = 2082;
          uint64_t v38 = ConnectionID.debugDescription.getter(*a1);
          sub_1000C6914(v38, v39, (uint64_t *)&v57);
          sub_1005E2960();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v36 + 21) = 2048;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1005E2960();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_WORD *)(v36 + 31) = 2082;
          swift_bridgeObjectRetain();
          sub_1000C6914(v11, v13, (uint64_t *)&v57);
          sub_1005E2960();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v36 + 41) = 2160;
          sub_1005E2960();
          *(_WORD *)(v36 + 51) = 2085;
          LODWORD(v56) = v15;
          swift_bridgeObjectRetain();
          uint64_t v40 = sub_1005E1CC0();
          uint64_t v55 = (void *)sub_1000C6914(v40, v41, (uint64_t *)&v57);
          sub_1005E2960();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v35, "[%.*hhx] Connection %{public}s failed while %ld command(s) %{public}s  were running and '%{sensitive,mask.mailbox}s' was selected.", (uint8_t *)v36, 0x3Du);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          return;
        }
      }
      swift_bridgeObjectRelease_n();

      swift_release_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
LABEL_27:
      swift_bridgeObjectRelease_n();
      return;
    }
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1005E0EB0();
    if (v14)
    {
      os_log_type_t v28 = sub_1005E25A0();
      if (os_log_type_enabled(v16, v28))
      {
        uint64_t v29 = swift_slowAlloc();
        uint64_t v55 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 68158722;
        LODWORD(v57) = 2;
        sub_1005E2960();
        *(_WORD *)(v29 + 8) = 256;
        char v30 = *(unsigned char *)(a2 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
        swift_release();
        LOBYTE(v57) = v30;
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v29 + 11) = 2082;
        uint64_t v31 = ConnectionID.debugDescription.getter(*a1);
        uint64_t v57 = (void *)sub_1000C6914(v31, v32, (uint64_t *)&v55);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v29 + 21) = 2048;
        uint64_t v33 = *(void **)(v54 + 16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v57 = v33;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_WORD *)(v29 + 31) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v57 = (void *)sub_1000C6914(v11, v13, (uint64_t *)&v55);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v16, v28, "[%.*hhx] Connection %{public}s failed while %ld command(s) %{public}s  were running. No mailbox selected.", (uint8_t *)v29, 0x29u);
LABEL_24:
        swift_arrayDestroy();
        swift_slowDealloc();
        goto LABEL_25;
      }
    }
    else
    {
      os_log_type_t v42 = sub_1005E25C0();
      uint64_t v43 = v42;
      if (os_log_type_enabled(v16, v42))
      {
        os_log_type_t log = v43;
        uint64_t v44 = swift_slowAlloc();
        uint64_t v55 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v44 = 68158722;
        LODWORD(v57) = 2;
        sub_1005E2960();
        *(_WORD *)(v44 + 8) = 256;
        char v45 = *(unsigned char *)(a2 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
        swift_release();
        LOBYTE(v57) = v45;
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v44 + 11) = 2082;
        uint64_t v46 = ConnectionID.debugDescription.getter(*a1);
        uint64_t v57 = (void *)sub_1000C6914(v46, v47, (uint64_t *)&v55);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v44 + 21) = 2048;
        char v48 = *(void **)(v54 + 16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v57 = v48;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_WORD *)(v44 + 31) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v57 = (void *)sub_1000C6914(v11, v13, (uint64_t *)&v55);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v16, log, "[%.*hhx] Connection %{public}s failed while %ld command(s) %{public}s  were running. No mailbox selected.", (uint8_t *)v44, 0x29u);
        goto LABEL_24;
      }
    }
    swift_bridgeObjectRelease_n();

    swift_release_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_27;
  }
  while (1)
  {
    sub_1005E3020();
    if (v56) {
      break;
    }
    uint64_t v7 = (uint64_t)v55;
    uint64_t v55 = 0;
    unint64_t v56 = 0xE000000000000000;
    CommandID.tag.getter(v7);
    sub_1005E2E90();
    uint64_t v57 = v6;
    unint64_t v9 = v6[2];
    unint64_t v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      sub_10001A574(v8 > 1, v9 + 1, 1);
      uint64_t v6 = v57;
    }
    _OWORD v6[2] = v9 + 1;
    uint64_t v10 = &v6[2 * v9];
    unsigned char v10[4] = 0;
    v10[5] = 0xE000000000000000;
    if (!--v5) {
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_1000ED168(uint64_t result, int *a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(result + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v7 = result;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_9:
    }
      unint64_t v3 = sub_100093454(v3);
    for (unint64_t i = 0; i != v4; ++i)
    {
      if (i >= *(void *)(v3 + 16))
      {
        __break(1u);
        goto LABEL_9;
      }
      type metadata accessor for RunningTask();
      uint64_t result = sub_1000E57A0(a2, a3);
    }
    *(void *)(v7 + 8) = v3;
  }
  return result;
}

uint64_t sub_1000ED260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v51[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  unint64_t v13 = &v51[-v12];
  sub_1000B9240(a1, (uint64_t)v61);
  if (!v62)
  {
    sub_1000B9324((uint64_t)v61);
    return 0;
  }
  if (v62 != 1) {
    return 0;
  }
  uint64_t v57 = v8;
  uint64_t v67 = v3;
  sub_100021BFC(v61, (uint64_t)v58);
  uint64_t v14 = v59;
  uint64_t v15 = v60;
  sub_10003BCDC(v58, v59);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v15 + 32))(&v63, v14, v15);
  uint64_t v16 = v64;
  unsigned int v17 = v65;
  long long v66 = v63;
  sub_10001D550((uint64_t)&v66);
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v58);
  sub_1000E2894();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = a3 + 32;
    uint64_t v22 = *(void *)(a3 + 16);
    if (a2) {
      sub_1000CE1DC(v16, v17, v21, v22, (void *)(a2 + 16));
    }
    else {
      sub_1000CE0E8(v16, v17, v21, v22);
    }
    char v24 = v23;
    swift_bridgeObjectRelease();
    if (v24)
    {
      uint64_t v26 = a1 + *(int *)(type metadata accessor for RunningTask() + 28);
      uint64_t v27 = v26 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
      uint64_t v28 = *(void *)v27;
      uint64_t v29 = *(void *)(v27 + 8);
      unint64_t v30 = *(void *)(v27 + 16);
      uint64_t v31 = *(void *)(v27 + 24);
      uint64_t v32 = *(void *)(v27 + 32);
      int v56 = *(_DWORD *)(v27 + 40);
      uint64_t v55 = v32;
      if (v31 < 0)
      {
        uint64_t v44 = v57;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v57 + 16))(v11, v26, v7);
        sub_1000E8260(v28, v29, v30, v31);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        char v45 = sub_1005E0EB0();
        os_log_type_t v46 = sub_1005E2590();
        int v47 = v46;
        if (!os_log_type_enabled(v45, v46))
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v11, v7);
          return 1;
        }
        uint64_t v48 = swift_slowAlloc();
        os_log_t v54 = (os_log_t)swift_slowAlloc();
        v58[0] = (uint64_t)v54;
        *(_DWORD *)uint64_t v48 = 68159235;
        LODWORD(v61[0]) = 2;
        LODWORD(v53) = v47;
        sub_1005E2960();
        *(_WORD *)(v48 + 8) = 256;
        LOBYTE(v61[0]) = v28;
        sub_1005E2960();
        *(_WORD *)(v48 + 11) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&v61[0] = sub_1000C6914(v29, v30, v58);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v48 + 21) = 1040;
        LODWORD(v61[0]) = 2;
        sub_1005E2960();
        *(_WORD *)(v48 + 27) = 512;
        LOWORD(v61[0]) = v31;
        sub_1005E2960();
        *(_WORD *)(v48 + 31) = 2160;
        *(void *)&v61[0] = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v48 + 41) = 2085;
        *(void *)&v61[0] = v55;
        DWORD2(v61[0]) = v56;
        swift_bridgeObjectRetain();
        uint64_t v49 = sub_1005E1CC0();
        *(void *)&v61[0] = sub_1000C6914(v49, v50, v58);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v53, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Pruning. No mailbox affinity, not targeting mailboxes-to-be-selected.", (uint8_t *)v48, 0x33u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v11, v7);
      }
      else
      {
        uint64_t v33 = v29;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v57 + 16))(v13, v26, v7);
        uint64_t v34 = v28;
        uint64_t v35 = v28;
        uint64_t v36 = v31;
        uint64_t v37 = v33;
        uint64_t v38 = v36;
        sub_1000E8260(v35, v33, v30, v36);
        swift_bridgeObjectRetain();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        unint64_t v39 = sub_1005E0EB0();
        os_log_type_t v40 = sub_1005E2590();
        int v41 = v40;
        os_log_t v54 = v39;
        if (os_log_type_enabled(v39, v40))
        {
          uint64_t v42 = swift_slowAlloc();
          uint64_t v53 = swift_slowAlloc();
          *(void *)&v61[0] = v53;
          *(_DWORD *)uint64_t v42 = 68158210;
          LODWORD(v58[0]) = 2;
          sub_1005E2960();
          *(_WORD *)(v42 + 8) = 256;
          LOBYTE(v58[0]) = v34;
          sub_1005E2960();
          *(_WORD *)(v42 + 11) = 2082;
          swift_bridgeObjectRetain();
          v58[0] = sub_1000C6914(v37, v30, (uint64_t *)v61);
          sub_1005E2960();
          int v52 = v41;
          sub_1000E82B0(v34, v37, v30, v38);
          sub_1000E82B0(v34, v37, v30, v38);
          swift_bridgeObjectRelease();
          os_log_t v43 = v54;
          _os_log_impl((void *)&_mh_execute_header, v54, (os_log_type_t)v52, "[%.*hhx-%{public}s] Pruning. No mailbox affinity, not targeting mailboxes-to-be-selected.", (uint8_t *)v42, 0x15u);
          uint64_t v20 = 1;
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v13, v7);
          return v20;
        }
        sub_1000E82B0(v34, v33, v30, v38);
        sub_1000E82B0(v34, v33, v30, v38);

        (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v13, v7);
      }
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1000EDA48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000EDAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070C4A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000EDB18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000EDB80(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000EDBE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009B158(a1, (uint64_t)v45);
  if (v46)
  {
    sub_100021BFC(v45, (uint64_t)v42);
    sub_1005E0EC0();
    uint64_t v10 = v43;
    uint64_t v11 = v44;
    sub_10003BCDC(v42, v43);
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 72))(v10, v11);
    unint64_t v39 = v13;
    uint64_t v40 = v12;
    uint64_t v41 = a3;
    uint64_t v38 = a2;
    uint64_t v15 = v43;
    uint64_t v14 = v44;
    sub_10003BCDC(v42, v43);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v14 + 32))(&v47, v15, v14);
    long long v58 = v47;
    LOWORD(v14) = v48;
    sub_10001D550((uint64_t)&v58);
    uint64_t v56 = v49;
    int v57 = v50;
    sub_10001D550((uint64_t)&v56);
    uint64_t v17 = v43;
    uint64_t v16 = v44;
    sub_10003BCDC(v42, v43);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v16 + 32))(&v51, v17, v16);
    sub_10009B1B4(a1);
    uint64_t v18 = v52;
    Swift::UInt32 v19 = v53;
    long long v55 = v51;
    sub_10001D550((uint64_t)&v55);
    v20.rawValue._object = v39;
    v20.rawValue._uint64_t countAndFlagsBits = v40;
    v59.bytes._uint64_t rawValue = v18;
    v59._hashValue._Swift::Int value = v19;
    MailboxTaskLoggerID.init(id:name:counter:mailbox:)(&v54, (IMAP2Tracing::EngineTracingID)v38, v20, (NIOIMAPCore2::MailboxLoggingCounter)v14, v59);
    uint64_t rawValue = v54.id.rawValue;
    uint64_t countAndFlagsBits = v54.name.rawValue._countAndFlagsBits;
    object = v54.name.rawValue._object;
    char v24 = v54.mailbox.bytes._rawValue;
    LODWORD(v11) = v54.mailbox._hashValue._value;
    unint64_t v25 = v54.counter.underlying | 0x8000000000000000;
    uint64_t v26 = v6;
    uint64_t v27 = v41;
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v41, v9, v26);
    uint64_t v28 = v27 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
    *(void *)uint64_t v28 = rawValue;
    *(void *)(v28 + 8) = countAndFlagsBits;
    *(void *)(v28 + 16) = object;
    *(void *)(v28 + 24) = v25;
    *(void *)(v28 + 32) = v24;
    *(_DWORD *)(v28 + 40) = v11;
    uint64_t v29 = (IMAP2Tracing::MailboxTaskLoggerID *)v42;
  }
  else
  {
    sub_100021BFC(v45, (uint64_t)&v54);
    sub_1005E0EC0();
    uint64_t v30 = *(void *)&v54.counter.underlying;
    uint64_t v31 = (uint64_t (**)(void, void *))v54.mailbox.bytes._rawValue;
    sub_10003BCDC(&v54, *(uint64_t *)&v54.counter.underlying);
    uint64_t v32 = v31[4](v30, v31);
    uint64_t v34 = v33;
    sub_10009B1B4(a1);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, v6);
    uint64_t v35 = a3 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
    *(void *)uint64_t v35 = a2;
    *(void *)(v35 + 8) = v32;
    *(void *)(v35 + 24) = 0;
    *(void *)(v35 + 32) = 0;
    *(void *)(v35 + 16) = v34;
    *(_DWORD *)(v35 + 40) = 0;
    uint64_t v29 = &v54;
  }
  return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v29);
}

uint64_t sub_1000EDF38(uint64_t a1)
{
  sub_10009B158(v1, (uint64_t)v11);
  if (v12)
  {
    sub_100021BFC(v11, (uint64_t)v8);
    uint64_t v3 = v9;
    uint64_t v4 = v10;
    sub_10003BCDC(v8, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 64))(a1, v3, v4);
  }
  else
  {
    sub_100021BFC(v11, (uint64_t)v8);
    uint64_t v5 = v9;
    uint64_t v6 = v10;
    sub_10003BCDC(v8, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(a1, v5, v6);
  }
  return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v8);
}

uint64_t RemoteMailbox.Status.messageCount.getter()
{
  return *(void *)v0;
}

uint64_t TaskID.debugDescription.getter()
{
  uint64_t v1 = sub_1005E36E0();
  v2._uint64_t countAndFlagsBits = 32;
  v2._object = (void *)0xE100000000000000;
  sub_1005E1E30(v2);
  v3._uint64_t countAndFlagsBits = sub_1005E2BB0();
  sub_1005E1E30(v3);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static TaskID.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  sub_10003C94C((uint64_t)a1, (uint64_t)v8);
  sub_10003C94C((uint64_t)a2, (uint64_t)v7);
  if (v3 == v4) {
    char v5 = sub_1005E2BD0();
  }
  else {
    char v5 = 0;
  }
  sub_10003C9A8((uint64_t)v7);
  sub_10003C9A8((uint64_t)v8);
  return v5 & 1;
}

uint64_t TaskID.hash(into:)()
{
  return sub_1005E2BE0();
}

Swift::Int TaskID.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_1000EE170()
{
  return sub_1005E3470();
}

unint64_t sub_1000EE1B4()
{
  unint64_t result = qword_10070C4A8;
  if (!qword_10070C4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C4A8);
  }
  return result;
}

uint64_t destroy for TaskID(uint64_t a1)
{
  return _s13IMAP2Behavior4TaskOwxx_0(a1 + 8);
}

uint64_t initializeWithCopy for TaskID(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a1 + 8, a2 + 8);
  return a1;
}

void *assignWithCopy for TaskID(void *a1, void *a2)
{
  *a1 = *a2;
  sub_100022498(a1 + 1, a2 + 1);
  return a1;
}

uint64_t assignWithTake for TaskID(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for TaskID(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TaskID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskID()
{
  return &type metadata for TaskID;
}

{
  return &type metadata for TaskID;
}

uint64_t type metadata accessor for Task.Logger(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070C598);
}

uint64_t *sub_1000EE3B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005E0ED0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *uint64_t v9 = *v10;
    uint64_t v11 = *((void *)v10 + 2);
    *((void *)v9 + 1) = *((void *)v10 + 1);
    *((void *)v9 + 2) = v11;
    *((_WORD *)v9 + 12) = *((_WORD *)v10 + 12);
    *((void *)v9 + 4) = *((void *)v10 + 4);
    *((_DWORD *)v9 + 10) = *((_DWORD *)v10 + 10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000EE4B8(uint64_t a1)
{
  uint64_t v2 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000EE538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  uint64_t v10 = *(void *)(v9 + 16);
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = v10;
  *(_WORD *)(v8 + 24) = *(_WORD *)(v9 + 24);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(_DWORD *)(v8 + 40) = *(_DWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000EE5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 24) = *(_WORD *)(v9 + 24);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + 40) = *(_DWORD *)(v9 + 40);
  return a1;
}

uint64_t sub_1000EE6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  uint64_t v10 = *(void *)(v9 + 16);
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 24) = *(_WORD *)(v9 + 24);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + 40) = *(_DWORD *)(v9 + 40);
  return a1;
}

uint64_t sub_1000EE76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000EE780);
}

uint64_t sub_1000EE780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 16);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1000EE844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000EE858);
}

uint64_t sub_1000EE858(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005E0ED0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for MailboxTaskLogger(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070C508);
}

uint64_t *sub_1000EE93C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005E0ED0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *((void *)v10 + 1);
    uint64_t v13 = *((void *)v10 + 2);
    uint64_t v14 = *((void *)v10 + 3);
    uint64_t v15 = *((void *)v10 + 4);
    int v16 = *((_DWORD *)v10 + 10);
    sub_1000E8260(*(void *)v10, v12, v13, v14);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    *((void *)v9 + 2) = v13;
    *((void *)v9 + 3) = v14;
    *((void *)v9 + 4) = v15;
    *((_DWORD *)v9 + 10) = v16;
  }
  return a1;
}

uint64_t sub_1000EEA54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t v8 = v5[2];
  uint64_t v9 = v5[3];
  return sub_1000E82B0(v6, v7, v8, v9);
}