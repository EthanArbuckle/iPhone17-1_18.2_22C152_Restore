void sub_1002F45DC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  char v5;
  uint64_t v6;
  void *v7;
  Swift::String v8;

  sub_10031E1C0();
  if (!v2)
  {
    v5 = sub_10032CEB0(a1);
    if (sub_100345A58(v5))
    {
      sub_10031E1C0();
      *a2 = sub_1005E1D80();
      a2[1] = v6;
    }
    else
    {
      sub_1005E2C80(29);
      swift_bridgeObjectRelease();
      v8._countAndFlagsBits = sub_1005E1D70();
      sub_1005E1E30(v8);
      swift_bridgeObjectRelease();
      sub_100296090();
      swift_allocError();
      *v7 = 0xD00000000000001BLL;
      v7[1] = 0x80000001005E67F0;
      v7[2] = 0xD000000000000020;
      v7[3] = 0x80000001005E63C0;
      v7[4] = 132;
      swift_willThrow();
    }
  }
}

void sub_1002F47BC()
{
  sub_1002F2480();
  sub_1002F7270();
  uint64_t v6 = v5;
  sub_1002F71EC();
  sub_10031E1C0();
  if (!v0)
  {
    swift_retain();
    sub_1002F7134();
    sub_10032B244();
    uint64_t v54 = v6;
    if (v7) {
      v8 = v7;
    }
    else {
      v8 = _swiftEmptyArrayStorage;
    }
    sub_1002F71EC();
    sub_10031E1C0();
    v52 = v8;
    sub_1002F7284();
    v51 = &v46;
    __chkstk_darwin();
    uint64_t v42 = v4;
    uint64_t v43 = v3;
    uint64_t v44 = v2;
    uint64_t v45 = v1;
    __chkstk_darwin();
    v38 = sub_1002E1A3C;
    uint64_t v39 = v9;
    uint64_t v10 = sub_10033CBA4((uint64_t)sub_1002F50C8, 0, (uint64_t)sub_1002F6DBC, (uint64_t)v37);
    v12 = v11;
    uint64_t v50 = v10;
    sub_1002F7284();
    uint64_t v13 = sub_1002F7134();
    sub_100308D44(v13, v14, v15, v16, v17, v18, v19, v20, v37[0], v37[1], (char)v38, v39, v40, v41, v42, v43, v44, v45, v46,
      v47,
      v48,
      (uint64_t)rawValue,
      v50,
      (uint64_t)v51,
      (uint64_t)v52,
      v53);
    unint64_t v48 = v21;
    rawValue = (char *)HIDWORD(v21);
    v51 = (uint64_t *)v22;
    unint64_t v47 = v23;
    swift_beginAccess();
    v24._rawValue = (void *)sub_1001F9054(v51[3] + ((v47 >> 24) & 0xFFFF00 | BYTE6(v47)) + v48, &rawValue[-v48]);
    NIOIMAPCore2::MailboxName v55 = MailboxName.init(_:)(v24);
    rawValue = (char *)v55.bytes._rawValue;
    LODWORD(v48) = v55._hashValue._value;
    swift_release();
    swift_retain();
    sub_1002F7134();
    sub_10032B270();
    uint64_t v28 = v26;
    Swift::UInt32 v29 = v48;
    v30 = rawValue;
    uint64_t v31 = (uint64_t)v52;
    if (v26)
    {
      uint64_t v32 = v25;
    }
    else
    {
      uint64_t v32 = sub_10031AF20((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v28 = v33;
    }
    uint64_t v34 = v27;
    v56.bytes._rawValue = v30;
    v56._hashValue._value = v29;
    v35.value._countAndFlagsBits = v50;
    v35.value._object = v12;
    NIOIMAPCore2::MailboxPath v57 = MailboxPath.init(name:pathSeparator:)(v56, v35);
    if (v36)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      *(void *)uint64_t v54 = v31;
      *(NIOIMAPCore2::MailboxPath *)(v54 + 8) = v57;
      *(void *)(v54 + 24) = v32;
      *(void *)(v54 + 32) = v28;
      *(void *)(v54 + 40) = v34;
    }
  }
  sub_1002F2468();
}

uint64_t sub_1002F4AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10000566C(&qword_1007106A8);
  uint64_t v15 = sub_1002E1F90();
  *(_OWORD *)(v15 + 16) = xmmword_1005F6670;
  swift_retain();
  uint64_t result = sub_100320F90(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
  {
    *(void *)(v15 + 16) = 0;
    swift_release();
    return a3;
  }
  *(void *)(v15 + 32) = result;
  *(void *)(v15 + 40) = v17;
  uint64_t v53 = v15;
  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *uint64_t v18 = a3;
      a3 = v15;
      swift_willThrow();
    }
    else
    {
      v49 = a4;
      sub_1002F7208();
      sub_100337E64();
      uint64_t v46 = a3;
      uint64_t v51 = v15;
      uint64_t v52 = a2 + 2;
      while (1)
      {
        uint64_t v19 = *(void *)a1;
        LODWORD(v20) = *(_DWORD *)(a1 + 8);
        LODWORD(v21) = *(_DWORD *)(a1 + 12);
        LODWORD(v22) = *(_DWORD *)(a1 + 16);
        __int16 v50 = *(_WORD *)(a1 + 20);
        char v48 = *(unsigned char *)(a1 + 22);
        if (v52 >= a3)
        {
          sub_1002DB5BC();
          sub_10020DD10();
          *uint64_t v43 = a3;
          swift_retain();
          a3 = v53;
          LOWORD(v23) = v50;
          char v44 = v48;
          swift_willThrow();
          goto LABEL_36;
        }
        swift_retain_n();
        sub_100338020(a1, v52, a3, 0, 0x5CuLL, 0xE100000000000000, 0);
        uint64_t result = swift_release();
        uint64_t v20 = *(unsigned int *)(a1 + 8);
        unint64_t v22 = *(unsigned int *)(a1 + 12);
        if (v22 < v20) {
          goto LABEL_40;
        }
        int v23 = *(_DWORD *)(a1 + 16);
        a3 = *(unsigned __int16 *)(a1 + 20);
        unint64_t v21 = *(unsigned __int8 *)(a1 + 22) | (unint64_t)(a3 << 8);
        if (v23 - (int)v21 < v22) {
          goto LABEL_41;
        }
        char v47 = *(unsigned char *)(a1 + 22);
        uint64_t v19 = *(void *)a1;
        if (v22 == v20) {
          break;
        }
        uint64_t result = swift_beginAccess();
        unint64_t v24 = 0;
        unint64_t v25 = *(void *)(v19 + 24) + v21 + v20;
        while (1)
        {
          if (v20 + v24 >= v22)
          {
            __break(1u);
LABEL_38:
            __break(1u);
            goto LABEL_39;
          }
          if (v24 >= (v22 - v20)) {
            goto LABEL_38;
          }
          LODWORD(v21) = *(unsigned __int8 *)(v25 + v24);
          unsigned int v26 = v21 - 32;
          if (v21 < 0x20) {
            break;
          }
          BOOL v27 = v26 > 0x3D;
          uint64_t v28 = (1 << v26) & 0x3000000000000725;
          BOOL v29 = v27 || v28 == 0;
          if (!v29 || v21 == 123 || (v21 & 0x80) != 0) {
            break;
          }
          ++v24;
          if (!(v20 - v22 + v24)) {
            goto LABEL_33;
          }
        }
        if (!v24)
        {
          swift_retain();
          sub_1005E2C80(19);
          v55._countAndFlagsBits = 0xD000000000000011;
          v55._object = (void *)0x80000001005E6810;
          sub_1005E1E30(v55);
          sub_1005E1D80();
          sub_1005E1A20();
          swift_bridgeObjectRelease();
          LODWORD(v21) = 0;
          sub_100296090();
          sub_10020DD10();
          *uint64_t v45 = 0;
          v45[1] = 0xE000000000000000;
          v45[2] = 0xD000000000000020;
          v45[3] = 0x80000001005E63C0;
          v45[4] = 110;
          goto LABEL_35;
        }
        swift_retain();
        uint64_t result = ByteBuffer.readSlice(length:)(v24);
        if (!result) {
          goto LABEL_42;
        }
        uint64_t v32 = result;
        unint64_t v33 = v30;
        uint64_t v34 = v31;
        swift_release();
        uint64_t v35 = sub_10031E368(v32, v33, v34 & 0xFFFFFFFFFFFFFFLL, 0xD000000000000020, 0x80000001005E63C0, 107);
        a3 = v46;
        uint64_t v36 = v49(v35);
        v38 = v37;
        swift_release();
        swift_bridgeObjectRelease();
        v54._countAndFlagsBits = v36;
        v54._object = v38;
        sub_1005E1E30(v54);
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v39 = v51;
        unint64_t v40 = *(void *)(v51 + 16);
        if (v40 >= *(void *)(v51 + 24) >> 1)
        {
          sub_1002331D0();
          uint64_t v39 = v42;
        }
        *(void *)(v39 + 16) = v40 + 1;
        uint64_t v51 = v39;
        uint64_t v41 = v39 + 16 * v40;
        *(void *)(v41 + 32) = 92;
        *(void *)(v41 + 40) = 0xE100000000000000;
        sub_1002F7208();
        sub_100337E64();
      }
      LODWORD(v22) = *(_DWORD *)(a1 + 8);
LABEL_33:
      sub_1002E1490();
      sub_10020DD10();
      swift_retain();
LABEL_35:
      char v44 = v48;
      swift_willThrow();
      swift_release();
      *(void *)a1 = v19;
      *(_DWORD *)(a1 + 8) = v20;
      *(_DWORD *)(a1 + 12) = v22;
      *(_DWORD *)(a1 + 16) = v23;
      *(_WORD *)(a1 + 20) = a3;
      *(unsigned char *)(a1 + 22) = v47;
      swift_willThrow();
      sub_1002F7248();
LABEL_36:
      swift_release();
      *(void *)a1 = v19;
      *(_DWORD *)(a1 + 8) = v20;
      *(_DWORD *)(a1 + 12) = v21;
      *(_DWORD *)(a1 + 16) = v22;
      *(_WORD *)(a1 + 20) = v23;
      *(unsigned char *)(a1 + 22) = v44;
      swift_willThrow();
    }
    swift_errorRelease();
    return a3;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1002F50C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_1002F44E4(a1, a2, a3);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
  }
  return result;
}

void sub_1002F50F4()
{
  sub_1002F2480();
  uint64_t v31 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  unsigned int v26 = v14;
  sub_10000566C(&qword_10070FE28);
  __chkstk_darwin();
  uint64_t v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000566C(&qword_100712320);
  __chkstk_darwin();
  uint64_t v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = 0;
  *(void *)&long long v33 = _swiftEmptyArrayStorage;
  *((void *)&v33 + 1) = _swiftEmptyArrayStorage;
  uint64_t v28 = v13;
  uint64_t v29 = v11;
  uint64_t v20 = v11;
  uint64_t v21 = v31;
  uint64_t v30 = v9;
  uint64_t v27 = v7;
  sub_1002F5354(v13, v20, v9);
  if (!v0)
  {
    v25[2] = *((unsigned int *)v19 + 4);
    v25[1] = *((unsigned __int16 *)v19 + 10);
    sub_1001F3974((uint64_t)&v19[*(int *)(v17 + 52)], (uint64_t)v16);
    uint64_t v22 = type metadata accessor for ParameterValue();
    storeEnumTagSinglePayload for ClientCommand((uint64_t)v16, 0, 1, v22);
    swift_retain();
    sub_1002EA144();
    __chkstk_darwin();
    uint64_t v23 = v28;
    v25[-4] = v27;
    v25[-3] = v5;
    v25[-2] = v3;
    v25[-1] = v21;
    sub_10031EAB4(v23, v29, v30, (uint64_t)sub_1002F6DD8, (uint64_t)&v25[-6], (uint64_t)&v32);
    sub_1002F6DF4((uint64_t)v19);
    unint64_t v24 = v26;
    *unsigned int v26 = v32;
    *(_OWORD *)(v24 + 1) = v33;
  }
  sub_1002F2468();
}

void sub_1002F5354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v8 >= a3)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *uint64_t v16 = a3;
      goto LABEL_6;
    }
    sub_1002F7270();
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)v10;
    uint64_t v15 = *(void *)(v10 + 8);
    __int16 v18 = *(_WORD *)(v10 + 20);
    int v19 = *(_DWORD *)(v10 + 16);
    char v17 = *(unsigned char *)(v10 + 22);
    swift_retain();
    sub_1002F54F4(v11, v8, a3, v7, v6, v5, v4, v13);
    if (v3)
    {
      swift_release();
      *(void *)uint64_t v11 = v14;
      *(void *)(v11 + 8) = v15;
      *(_DWORD *)(v11 + 16) = v19;
      *(_WORD *)(v11 + 20) = v18;
      *(unsigned char *)(v11 + 22) = v17;
LABEL_6:
      swift_willThrow();
      return;
    }
    swift_release();
  }
}

void sub_1002F5474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v3) {
    sub_1002F5354(a1, a2, a3);
  }
}

void sub_1002F54F4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  v38 = a8;
  type metadata accessor for ParameterValue();
  __chkstk_darwin();
  char v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100308D44(a1, a2, a3, a4, a5, a6, a7, v18, v33, v34, v35, (uint64_t)v36, v37, v38, v39, a1, v41, v42, v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    vars0,
    vars8);
  if (!v8)
  {
    unint64_t v34 = v20;
    unint64_t v35 = v21;
    uint64_t v36 = v17;
    v37 = v19;
    sub_10031E2BC(v40, a2, a3);
    __chkstk_darwin();
    *(&v33 - 4) = a4;
    *(&v33 - 3) = a5;
    __chkstk_darwin();
    *(&v33 - 4) = a4;
    *(&v33 - 3) = a5;
    unint64_t v31 = 0x80000001005E63C0;
    uint64_t v32 = 2437;
    uint64_t v22 = (uint64_t)v36;
    sub_10033CBF4((uint64_t)sub_1002F6E54, v23, (uint64_t)sub_1002F6E70);
    int v25 = v34;
    int v24 = v35;
    unint64_t v26 = HIDWORD(v34);
    unint64_t v27 = HIWORD(v35);
    unint64_t v28 = HIDWORD(v35);
    uint64_t v29 = sub_10000566C(&qword_100712320);
    uint64_t v30 = v38;
    sub_1002ECB38(v22, (uint64_t)v38 + *(int *)(v29 + 52));
    void *v30 = v37;
    *((_DWORD *)v30 + 2) = v25;
    *((_DWORD *)v30 + 3) = v26;
    *((_DWORD *)v30 + 4) = v24;
    *((_WORD *)v30 + 10) = v28;
    *((unsigned char *)v30 + 22) = v27;
  }
}

uint64_t sub_1002F5734@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(_DWORD *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 22) = BYTE6(v6);
    *(_WORD *)(a2 + 20) = WORD2(v6);
    *(unsigned char *)(a2 + 23) = HIBYTE(v6) & 1;
  }
  return result;
}

void sub_1002F5784(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_10031E1C0();
  if (!v3 && ((unint64_t)sub_10032D3F0(a1, a2, a3, 1) & 0x8000000000000000) != 0)
  {
    sub_100296090();
    swift_allocError();
    void *v7 = 0xD000000000000011;
    v7[1] = 0x80000001005E65D0;
    v7[2] = 0xD000000000000020;
    v7[3] = 0x80000001005E63C0;
    v7[4] = 167;
    swift_willThrow();
  }
}

void sub_1002F5884(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7) {
    sub_1002FAA58(a1, a2, a3, a4, a5, a6, a7);
  }
}

void sub_1002F5934(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_10031E1C0();
  if (!v3) {
    sub_100307D88(a1, a2, a3);
  }
}

void sub_1002F59EC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_10031E1C0();
  if (!v3 && ((unint64_t)sub_10032D3F0(a1, a2, a3, 1) & 0x8000000000000000) != 0)
  {
    sub_100296090();
    swift_allocError();
    void *v7 = 0xD000000000000011;
    v7[1] = 0x80000001005E65D0;
    v7[2] = 0xD000000000000020;
    v7[3] = 0x80000001005E63C0;
    v7[4] = 167;
    swift_willThrow();
  }
}

void sub_1002F5AE8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_10031E1C0();
  if (!v3 && ((unint64_t)sub_10032D3F0(a1, a2, a3, 1) & 0x8000000000000000) != 0)
  {
    sub_100296090();
    swift_allocError();
    void *v7 = 0xD000000000000011;
    v7[1] = 0x80000001005E65D0;
    v7[2] = 0xD000000000000020;
    v7[3] = 0x80000001005E63C0;
    v7[4] = 167;
    swift_willThrow();
  }
}

void sub_1002F5BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10031E1C0();
  if (!v3) {
    sub_100307618(a1, a2, a3);
  }
}

void sub_1002F5C98(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_10031E1C0();
  if (!v3 && ((unint64_t)sub_10032D3F0(a1, a2, a3, 1) & 0x8000000000000000) != 0)
  {
    sub_100296090();
    swift_allocError();
    void *v7 = 0xD000000000000011;
    v7[1] = 0x80000001005E65D0;
    v7[2] = 0xD000000000000020;
    v7[3] = 0x80000001005E63C0;
    v7[4] = 167;
    swift_willThrow();
  }
}

void sub_1002F5D94(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_10031E1C0();
  if (!v3 && ((unint64_t)sub_10032D3F0(a1, a2, a3, 1) & 0x8000000000000000) != 0)
  {
    sub_100296090();
    swift_allocError();
    void *v7 = 0xD000000000000011;
    v7[1] = 0x80000001005E65D0;
    v7[2] = 0xD000000000000020;
    v7[3] = 0x80000001005E63C0;
    v7[4] = 167;
    swift_willThrow();
  }
}

uint64_t sub_1002F5E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10000566C(&qword_100712318);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6A00;
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a4;
  v15[3] = a5;
  v15[4] = a6;
  v15[5] = a7;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1002F6BB4;
  *(void *)(v16 + 24) = v15;
  *(void *)(inited + 32) = sub_1002F6BD0;
  *(void *)(inited + 40) = v16;
  char v17 = (void *)swift_allocObject();
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1002F6BE8;
  *(void *)(v18 + 24) = v17;
  *(void *)(inited + 48) = sub_1002F6BD0;
  *(void *)(inited + 56) = v18;
  int v19 = (void *)swift_allocObject();
  v19[2] = a4;
  v19[3] = a5;
  v19[4] = a6;
  v19[5] = a7;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1002F6C04;
  *(void *)(v20 + 24) = v19;
  *(void *)(inited + 64) = sub_1002F6BD0;
  *(void *)(inited + 72) = v20;
  unint64_t v21 = (void *)swift_allocObject();
  v21[2] = a4;
  v21[3] = a5;
  v21[4] = a6;
  v21[5] = a7;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1002F6C20;
  *(void *)(v22 + 24) = v21;
  *(void *)(inited + 80) = sub_1002F6BD0;
  *(void *)(inited + 88) = v22;
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = a4;
  v23[3] = a5;
  v23[4] = a6;
  v23[5] = a7;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_1002F6C3C;
  *(void *)(v24 + 24) = v23;
  *(void *)(inited + 96) = sub_1002F6BD0;
  *(void *)(inited + 104) = v24;
  int v25 = (void *)swift_allocObject();
  v25[2] = a4;
  void v25[3] = a5;
  v25[4] = a6;
  v25[5] = a7;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1002F6C58;
  *(void *)(v26 + 24) = v25;
  *(void *)(inited + 112) = sub_1002F6BD0;
  *(void *)(inited + 120) = v26;
  unint64_t v27 = (void *)swift_allocObject();
  v27[2] = a4;
  v27[3] = a5;
  v27[4] = a6;
  v27[5] = a7;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = sub_1002F6CAC;
  *(void *)(v28 + 24) = v27;
  *(void *)(inited + 128) = sub_1002F6BD0;
  *(void *)(inited + 136) = v28;
  uint64_t v29 = (void *)swift_allocObject();
  v29[2] = a4;
  v29[3] = a5;
  v29[4] = a6;
  v29[5] = a7;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_1002F6CC8;
  *(void *)(v30 + 24) = v29;
  *(void *)(inited + 144) = sub_1002F6BD0;
  *(void *)(inited + 152) = v30;
  swift_retain_n();
  uint64_t v31 = sub_10033E4B8(inited, a1, a2, a3, 0xD000000000000020, 0x80000001005E63C0, 286);
  swift_setDeallocating();
  sub_10034A020();
  return v31;
}

void sub_1002F6264()
{
  sub_1002F2480();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  int v10 = v9;
  uint64_t v51 = v11;
  sub_10000566C(&qword_100710690);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6670;
  uint64_t v13 = sub_1001F45A8();
  uint64_t v16 = sub_1002F5E98(v13, v14, v15, v8, v6, v4, v2);
  if (v0)
  {
    *(void *)(inited + 16) = 0;
    swift_release();
  }
  else
  {
    *(void *)(inited + 32) = v16;
    *(unsigned char *)(inited + 40) = v17;
    __chkstk_darwin();
    uint64_t v18 = sub_1001F45A8();
    sub_10031EAE0(v18, v19, v20, v21, v22, v23);
    if (*(void *)(inited + 16))
    {
      sub_1002F71A0();
      uint64_t v29 = 0;
      uint64_t v31 = (unsigned __int8 *)(v30 + 40);
      uint64_t v32 = 1;
      char v33 = 1;
      char v34 = 1;
      char v35 = 1;
      char v36 = 1;
      char v37 = 1;
      char v38 = 1;
      char v39 = 1;
      uint64_t v40 = v51;
      do
      {
        uint64_t v41 = *((void *)v31 - 1);
        int v42 = *v31;
        v31 += 16;
        uint64_t v43 = 0;
        switch(v42)
        {
          case 1:
            char v33 = 0;
            uint64_t v43 = v32;
            int v10 = v41;
            goto LABEL_13;
          case 2:
            char v34 = 0;
            uint64_t v43 = v32;
            LODWORD(v4) = v41;
            goto LABEL_13;
          case 3:
            char v35 = 0;
            uint64_t v43 = v32;
            uint64_t v25 = v41;
            goto LABEL_13;
          case 4:
            char v36 = 0;
            uint64_t v43 = v32;
            uint64_t v26 = v41;
            goto LABEL_13;
          case 5:
            char v37 = 0;
            uint64_t v43 = v32;
            uint64_t v2 = v41;
            goto LABEL_13;
          case 6:
            char v38 = 0;
            uint64_t v43 = v32;
            uint64_t v27 = v41;
            goto LABEL_13;
          case 7:
            char v39 = 0;
            uint64_t v43 = v32;
            uint64_t v28 = v41;
LABEL_13:
            uint64_t v41 = v29;
            break;
          default:
            break;
        }
        uint64_t v32 = v43;
        uint64_t v29 = v41;
        --v24;
      }
      while (v24);
    }
    else
    {
      sub_1002F71A0();
      uint64_t v41 = 0;
      char v39 = 1;
      char v38 = 1;
      char v36 = 1;
      char v35 = 1;
      char v34 = 1;
      char v33 = 1;
      char v37 = 1;
      LOBYTE(v43) = 1;
      uint64_t v40 = v51;
    }
    char v44 = v35;
    uint64_t v45 = v25;
    char v46 = v36;
    uint64_t v47 = v26;
    char v48 = v38;
    uint64_t v49 = v27;
    uint64_t v50 = v28;
    char v52 = v39;
    swift_bridgeObjectRelease();
    *(void *)uint64_t v40 = v41;
    *(unsigned char *)(v40 + 8) = v43 & 1;
    *(void *)(v40 + 16) = v2;
    *(unsigned char *)(v40 + 24) = v37 & 1;
    *(_DWORD *)(v40 + 28) = v10;
    *(unsigned char *)(v40 + 32) = v33 & 1;
    *(_DWORD *)(v40 + 36) = v4;
    *(unsigned char *)(v40 + 40) = v34 & 1;
    *(void *)(v40 + 48) = v45;
    *(unsigned char *)(v40 + 56) = v44 & 1;
    *(void *)(v40 + 64) = v47;
    *(unsigned char *)(v40 + 72) = v46 & 1;
    *(void *)(v40 + 80) = v49;
    *(unsigned char *)(v40 + 88) = v48 & 1;
    *(void *)(v40 + 96) = v50;
    *(unsigned char *)(v40 + 104) = v52 & 1;
  }
  sub_1002F2468();
}

void sub_1002F656C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v8)
  {
    *(void *)a8 = sub_1002F5E98(a1, a2, a3, a4, a5, a6, a7);
    *(unsigned char *)(a8 + 8) = v17;
  }
}

uint64_t sub_1002F65F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = a4;
  uint64_t v13 = a5;
  uint64_t v14 = a6;
  uint64_t v15 = a7;
  int v9 = sub_1002F6F74;
  int v10 = &v11;
  return sub_10033C780((uint64_t)sub_1002F30E4, (uint64_t)v8, (uint64_t)sub_1002F309C, 0);
}

uint64_t sub_1002F66B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100324D6C(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1002F6744(uint64_t a1, Swift::UInt64 a2, char a3)
{
  switch(a3)
  {
    case 1:
      Swift::UInt v5 = 1;
      goto LABEL_5;
    case 2:
      Swift::UInt v5 = 2;
LABEL_5:
      sub_1005E3410(v5);
      sub_1005E3440(a2);
      return;
    case 3:
      Swift::UInt v4 = 3;
      goto LABEL_11;
    case 4:
      Swift::UInt v4 = 4;
      goto LABEL_11;
    case 5:
      Swift::UInt v4 = 5;
      goto LABEL_11;
    case 6:
      sub_1005E3410(6uLL);
      sub_1005E3450(a2);
      return;
    case 7:
      Swift::UInt v4 = 7;
      goto LABEL_11;
    default:
      Swift::UInt v4 = 0;
LABEL_11:
      sub_1005E3410(v4);
      sub_1005E3410(a2);
      return;
  }
}

BOOL sub_1002F680C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  switch(a2)
  {
    case 1:
      BOOL v5 = a3 == a1;
      BOOL v6 = a4 == 1;
      return v6 && v5;
    case 2:
      BOOL v5 = a1 == a3;
      BOOL v6 = a4 == 2;
      return v6 && v5;
    case 3:
      BOOL v4 = a4 == 3;
      return v4 && a1 == a3;
    case 4:
      BOOL v4 = a4 == 4;
      return v4 && a1 == a3;
    case 5:
      BOOL v4 = a4 == 5;
      return v4 && a1 == a3;
    case 6:
      if (a4 != 6) {
        return 0;
      }
      if ((a3 | a1) < 0)
      {
        __break(1u);
        JUMPOUT(0x1002F68C8);
      }
      return a3 == a1;
    case 7:
      BOOL v4 = a4 == 7;
      return v4 && a1 == a3;
    default:
      BOOL v4 = a4 == 0;
      return v4 && a1 == a3;
  }
}

Swift::Int sub_1002F68E8(Swift::UInt64 a1, char a2)
{
  sub_1005E33F0();
  sub_1002F6744((uint64_t)v5, a1, a2);
  return sub_1005E3470();
}

Swift::Int sub_1002F6938()
{
  return sub_1002F68E8(*(void *)v0, *(unsigned char *)(v0 + 8));
}

void sub_1002F6944(uint64_t a1)
{
  sub_1002F6744(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

Swift::Int sub_1002F6950()
{
  Swift::UInt64 v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_1005E33F0();
  sub_1002F6744((uint64_t)v4, v1, v2);
  return sub_1005E3470();
}

BOOL sub_1002F699C(uint64_t a1, uint64_t a2)
{
  return sub_1002F680C(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

int8x16_t sub_1002F69B4(int8x16_t *a1)
{
  uint64_t v1 = a1[4].i64[1] & 1;
  uint64_t v2 = a1[5].i64[1] & 1;
  uint64_t v3 = a1[6].i64[1] & 1;
  __int8 v4 = a1[7].i8[8] & 1 | 0x80;
  int8x16_t result = vandq_s8(a1[3], (int8x16_t)xmmword_1005F69A0);
  a1[3] = result;
  a1[4].i64[1] = v1;
  a1[5].i64[1] = v2;
  a1[6].i64[1] = v3;
  a1[7].i8[8] = v4;
  return result;
}

int8x16_t sub_1002F6A00(int8x16_t *a1)
{
  uint64_t v1 = a1[4].i64[1] & 1;
  uint64_t v2 = a1[5].i64[1] & 1;
  uint64_t v3 = a1[6].i64[1] & 1;
  __int8 v4 = a1[7].i8[8] & 1 | 0x30;
  int8x16_t result = vandq_s8(a1[3], (int8x16_t)xmmword_1005F69A0);
  a1[3] = result;
  a1[4].i64[1] = v1;
  a1[5].i64[1] = v2;
  a1[6].i64[1] = v3;
  a1[7].i8[8] = v4;
  return result;
}

void sub_1002F6A4C()
{
  sub_1002E1C9C();
  sub_1002F3D14(v0, v1, v2, v3);
}

int8x16_t sub_1002F6A68(int8x16_t *a1)
{
  uint64_t v1 = a1[4].i64[1] & 1;
  uint64_t v2 = a1[5].i64[1] & 1;
  uint64_t v3 = a1[6].i64[1] & 1;
  __int8 v4 = a1[7].i8[8] & 1 | 0x90;
  int8x16_t result = vandq_s8(a1[3], (int8x16_t)xmmword_1005F69A0);
  a1[3] = result;
  a1[4].i64[1] = v1;
  a1[5].i64[1] = v2;
  a1[6].i64[1] = v3;
  a1[7].i8[8] = v4;
  return result;
}

int8x16_t sub_1002F6AB4(int8x16_t *a1)
{
  uint64_t v1 = a1[4].i64[1] & 1;
  uint64_t v2 = a1[5].i64[1] & 1;
  uint64_t v3 = a1[6].i64[1] & 1;
  __int8 v4 = a1[7].i8[8] & 1 | 0x70;
  int8x16_t result = vandq_s8(a1[3], (int8x16_t)xmmword_1005F69A0);
  a1[3] = result;
  a1[4].i64[1] = v1;
  a1[5].i64[1] = v2;
  a1[6].i64[1] = v3;
  a1[7].i8[8] = v4;
  return result;
}

int8x16_t sub_1002F6B00(int8x16_t *a1)
{
  uint64_t v1 = a1[4].i64[1] & 1;
  uint64_t v2 = a1[5].i64[1] & 1;
  uint64_t v3 = a1[6].i64[1] & 1;
  __int8 v4 = a1[7].i8[8] & 1 | 0x60;
  int8x16_t result = vandq_s8(a1[3], (int8x16_t)xmmword_1005F69A0);
  a1[3] = result;
  a1[4].i64[1] = v1;
  a1[5].i64[1] = v2;
  a1[6].i64[1] = v3;
  a1[7].i8[8] = v4;
  return result;
}

int8x16_t sub_1002F6B4C(int8x16_t *a1)
{
  uint64_t v1 = a1[4].i64[1] & 1;
  uint64_t v2 = a1[5].i64[1] & 1;
  uint64_t v3 = a1[6].i64[1] & 1;
  __int8 v4 = a1[7].i8[8] & 1 | 0x50;
  int8x16_t result = vandq_s8(a1[3], (int8x16_t)xmmword_1005F69A0);
  a1[3] = result;
  a1[4].i64[1] = v1;
  a1[5].i64[1] = v2;
  a1[6].i64[1] = v3;
  a1[7].i8[8] = v4;
  return result;
}

void sub_1002F6B98()
{
  sub_1002E1C9C();
  sub_1002F656C(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1002F6BB4()
{
  sub_1002E1C9C();
  sub_1002F5784(v0, v1, v2);
}

uint64_t sub_1002F6BD0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1002F6CE4(a1, a2, a3);
}

void sub_1002F6BE8()
{
  sub_1002E1C9C();
  sub_1002F5884(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1002F6C04()
{
  sub_1002E1C9C();
  sub_1002F5934(v0, v1, v2);
}

void sub_1002F6C20()
{
  sub_1002E1C9C();
  sub_1002F59EC(v0, v1, v2);
}

void sub_1002F6C3C()
{
  sub_1002E1C9C();
  sub_1002F5AE8(v0, v1, v2);
}

void sub_1002F6C58()
{
  sub_1002E1C9C();
  sub_1002F5BE0(v0, v1, v2);
}

uint64_t sub_1002F6C74()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1002F6CAC()
{
  sub_1002E1C9C();
  sub_1002F5C98(v0, v1, v2);
}

void sub_1002F6CC8()
{
  sub_1002E1C9C();
  sub_1002F5D94(v0, v1, v2);
}

uint64_t sub_1002F6CE4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void, void))(v3 + 16))(a1, *a2, a2[1]);
  if (!v4)
  {
    *(void *)a3 = result;
    *(unsigned char *)(a3 + 8) = v7;
  }
  return result;
}

int8x16_t sub_1002F6D24(int8x16_t *a1)
{
  uint64_t v1 = a1[4].i64[1] & 1;
  uint64_t v2 = a1[5].i64[1] & 1;
  uint64_t v3 = a1[6].i64[1] & 1;
  __int8 v4 = a1[7].i8[8] & 1 | 0x40;
  int8x16_t result = vandq_s8(a1[3], (int8x16_t)xmmword_1005F69A0);
  a1[3] = result;
  a1[4].i64[1] = v1;
  a1[5].i64[1] = v2;
  a1[6].i64[1] = v3;
  a1[7].i8[8] = v4;
  return result;
}

int8x16_t sub_1002F6D70(int8x16_t *a1)
{
  uint64_t v1 = a1[4].i64[1] & 1;
  uint64_t v2 = a1[5].i64[1] & 1;
  uint64_t v3 = a1[6].i64[1] & 1;
  __int8 v4 = a1[7].i8[8] & 1 | 0x20;
  int8x16_t result = vandq_s8(a1[3], (int8x16_t)xmmword_1005F69A0);
  a1[3] = result;
  a1[4].i64[1] = v1;
  a1[5].i64[1] = v2;
  a1[6].i64[1] = v3;
  a1[7].i8[8] = v4;
  return result;
}

uint64_t sub_1002F6DBC()
{
  return sub_10030B294();
}

void sub_1002F6DD8()
{
  sub_1002E1C9C();
  sub_1002F5474(v0, v1, v2);
}

uint64_t sub_1002F6DF4(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100712320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002F6E54()
{
  return sub_100318068();
}

void sub_1002F6E70()
{
}

int8x16_t sub_1002F6E8C(int8x16_t *a1)
{
  uint64_t v1 = a1[4].i64[1] & 1;
  uint64_t v2 = a1[5].i64[1] & 1;
  uint64_t v3 = a1[6].i64[1] & 1;
  __int8 v4 = a1[7].i8[8] & 1 | 0x10;
  int8x16_t result = vandq_s8(a1[3], (int8x16_t)xmmword_1005F69A0);
  a1[3] = result;
  a1[4].i64[1] = v1;
  a1[5].i64[1] = v2;
  a1[6].i64[1] = v3;
  a1[7].i8[8] = v4;
  return result;
}

int8x16_t sub_1002F6ED8(int8x16_t *a1)
{
  uint64_t v1 = a1[4].i64[1] & 1;
  uint64_t v2 = a1[5].i64[1] & 1;
  uint64_t v3 = a1[6].i64[1] & 1;
  __int8 v4 = a1[7].i8[8] & 1;
  int8x16_t result = vandq_s8(a1[3], (int8x16_t)xmmword_1005F69A0);
  a1[3] = result;
  a1[4].i64[1] = v1;
  a1[5].i64[1] = v2;
  a1[6].i64[1] = v3;
  a1[7].i8[8] = v4;
  return result;
}

uint64_t sub_1002F6F20()
{
  sub_1002E1C9C();
  return sub_1002F65F4(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1002F6F3C@<X0>(uint64_t a1@<X8>)
{
  return sub_1002F5734(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1002F6F58()
{
  sub_1002E1C9C();
  return sub_1002F66B0(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1002F6F74()
{
}

uint64_t _s12MailboxValueOwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xF9 && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 248;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 7) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s12MailboxValueOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)int8x16_t result = a2 - 249;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1002F7014(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *_s12MailboxValueOMa()
{
  return &_s12MailboxValueON;
}

unint64_t sub_1002F7030()
{
  unint64_t result = qword_100712328;
  if (!qword_100712328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712328);
  }
  return result;
}

void *sub_1002F707C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  return sub_1002F4324(a1, a2, a3);
}

uint64_t sub_1002F711C@<X0>(uint64_t a1@<X8>)
{
  return sub_1002F6F3C(a1);
}

uint64_t sub_1002F7134()
{
  return v0;
}

uint64_t sub_1002F7158()
{
  return v0;
}

void sub_1002F71C0()
{
  sub_10031E1C0();
}

uint64_t sub_1002F7208()
{
  return v0;
}

void sub_1002F7224()
{
  sub_10031E1C0();
}

void sub_1002F725C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = (v2 - 32) | 0x8000000000000000;
}

void sub_1002F7284()
{
  sub_10031E2BC(v0, v2, v1);
}

void sub_1002F72A4()
{
  sub_1002F2480();
  sub_1002F9E98();
  char v38 = v2;
  sub_10000566C(&qword_100712338);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6A10;
  uint64_t v4 = (void *)sub_1002E1F90();
  sub_1002F23D4(v4);
  uint64_t v5 = sub_1002E8414();
  *(void *)(v5 + 16) = sub_1002F9A50;
  *(void *)(v5 + 24) = v0;
  *(void *)(inited + 32) = 0x5347414C46;
  *(void *)(inited + 40) = 0xE500000000000000;
  *(void *)(inited + 48) = sub_1002F109C;
  *(void *)(inited + 56) = v5;
  uint64_t v6 = (void *)sub_1002E1F90();
  sub_1002F23D4(v6);
  uint64_t v7 = sub_1002E8414();
  *(void *)(v7 + 16) = sub_1002F9A6C;
  *(void *)(v7 + 24) = v0;
  *(void *)(inited + 64) = 0x45504F4C45564E45;
  *(void *)(inited + 72) = 0xE800000000000000;
  *(void *)(inited + 80) = sub_1002F21F4;
  *(void *)(inited + 88) = v7;
  uint64_t v8 = (void *)sub_1002E1F90();
  sub_1002F23D4(v8);
  uint64_t v9 = sub_1002E8414();
  *(void *)(v9 + 16) = sub_1002F9A88;
  *(void *)(v9 + 24) = v0;
  strcpy((char *)(inited + 96), "INTERNALDATE");
  *(unsigned char *)(inited + 109) = 0;
  *(_WORD *)(inited + 110) = -5120;
  *(void *)(inited + 112) = sub_1002F21F4;
  *(void *)(inited + 120) = v9;
  int v10 = (void *)sub_1002E1F90();
  sub_1002F23D4(v10);
  uint64_t v11 = sub_1002E8414();
  *(void *)(v11 + 16) = sub_1002F9AA4;
  *(void *)(v11 + 24) = v0;
  sub_1002F9E88();
  *(void *)(inited + 128) = v12 & 0xFFFFFFFFFFFFLL | 0x532E000000000000;
  *(void *)(inited + 136) = 0xEB00000000455A49;
  *(void *)(inited + 144) = sub_1002F21F4;
  *(void *)(inited + 152) = v13;
  uint64_t v14 = (void *)sub_1002E1F90();
  sub_1002F23D4(v14);
  uint64_t v15 = sub_1002E8414();
  *(void *)(v15 + 16) = sub_1002F9AC0;
  *(void *)(v15 + 24) = v0;
  *(void *)(inited + 160) = 1497648962;
  *(void *)(inited + 168) = 0xE400000000000000;
  *(void *)(inited + 176) = sub_1002F21F4;
  *(void *)(inited + 184) = v15;
  uint64_t v16 = (void *)sub_1002E1F90();
  sub_1002F23D4(v16);
  uint64_t v17 = sub_1002E8414();
  *(void *)(v17 + 16) = sub_1002F9ADC;
  *(void *)(v17 + 24) = v0;
  strcpy((char *)(inited + 192), "BODYSTRUCTURE");
  *(_WORD *)(inited + 206) = -4864;
  *(void *)(inited + 208) = sub_1002F21F4;
  *(void *)(inited + 216) = v17;
  uint64_t v18 = (void *)sub_1002E1F90();
  sub_1002F23D4(v18);
  uint64_t v19 = sub_1002E8414();
  *(void *)(v19 + 16) = sub_1002F9AFC;
  *(void *)(v19 + 24) = v0;
  *(void *)(inited + 224) = 4475221;
  *(void *)(inited + 232) = 0xE300000000000000;
  *(void *)(inited + 240) = sub_1002F21F4;
  *(void *)(inited + 248) = v19;
  uint64_t v20 = (void *)sub_1002E1F90();
  sub_1002F23D4(v20);
  uint64_t v21 = sub_1002E8414();
  *(void *)(v21 + 16) = sub_1002F9B18;
  *(void *)(v21 + 24) = v0;
  *(void *)(inited + 256) = 0x532E5952414E4942;
  *(void *)(inited + 264) = 0xEB00000000455A49;
  *(void *)(inited + 272) = sub_1002F21F4;
  *(void *)(inited + 280) = v21;
  *(void *)(inited + 288) = 0x47534D2D4D472D58;
  *(void *)(inited + 296) = 0xEA00000000004449;
  *(void *)(inited + 304) = sub_1002F884C;
  *(void *)(inited + 312) = 0;
  *(void *)(inited + 320) = 0x5248542D4D472D58;
  *(void *)(inited + 328) = 0xEA00000000004449;
  *(void *)(inited + 336) = sub_1002F8878;
  *(void *)(inited + 344) = 0;
  uint64_t v22 = (void *)sub_1002E1F90();
  sub_1002F23D4(v22);
  uint64_t v23 = sub_1002E8414();
  *(void *)(v23 + 16) = sub_1002F9B34;
  *(void *)(v23 + 24) = v0;
  *(void *)(inited + 352) = 0x42414C2D4D472D58;
  *(void *)(inited + 360) = 0xEB00000000534C45;
  *(void *)(inited + 368) = sub_1002F21F4;
  *(void *)(inited + 376) = v23;
  uint64_t v24 = (void *)sub_1002E1F90();
  sub_1002F23D4(v24);
  uint64_t v25 = sub_1002E8414();
  *(void *)(v25 + 16) = sub_1002F9B50;
  *(void *)(v25 + 24) = v0;
  *(void *)(inited + 384) = 0x514553444F4DLL;
  *(void *)(inited + 392) = 0xE600000000000000;
  *(void *)(inited + 400) = sub_1002F21F4;
  *(void *)(inited + 408) = v25;
  uint64_t v26 = (void *)sub_1002E1F90();
  sub_1002F23D4(v26);
  uint64_t v27 = sub_1002E8414();
  *(void *)(v27 + 16) = sub_1002F9B6C;
  *(void *)(v27 + 24) = v0;
  sub_1002F9E88();
  *(void *)(inited + 416) = v28 & 0xFFFFFFFFFFFFLL | 0x542E000000000000;
  *(void *)(inited + 424) = 0xEB00000000545845;
  *(void *)(inited + 432) = sub_1002F21F4;
  *(void *)(inited + 440) = v29;
  uint64_t v30 = (void *)sub_1002E1F90();
  sub_1002F23D4(v30);
  uint64_t v31 = sub_1002E8414();
  *(void *)(v31 + 16) = sub_1002F9BC0;
  *(void *)(v31 + 24) = v0;
  sub_1002F9E88();
  *(void *)(inited + 448) = v32 & 0xFFFFFFFFFFFFLL | 0x482E000000000000;
  *(void *)(inited + 456) = 0xED00005245444145;
  *(void *)(inited + 464) = sub_1002F21F4;
  *(void *)(inited + 472) = v33;
  char v34 = (void *)sub_1002E1F90();
  sub_1002F23D4(v34);
  uint64_t v35 = sub_1002E8414();
  *(void *)(v35 + 16) = sub_1002F9BDC;
  *(void *)(v35 + 24) = v0;
  *(void *)(inited + 480) = 0x5952414E4942;
  *(void *)(inited + 488) = 0xE600000000000000;
  *(void *)(inited + 496) = sub_1002F21F4;
  *(void *)(inited + 504) = v35;
  char v36 = (void *)sub_1002E1F90();
  sub_1002F23D4(v36);
  uint64_t v37 = sub_1002E8414();
  *(void *)(v37 + 16) = sub_1002F9BF8;
  *(void *)(v37 + 24) = v0;
  *(void *)(inited + 512) = 0x57454956455250;
  *(void *)(inited + 520) = 0xE700000000000000;
  *(void *)(inited + 528) = sub_1002F21F4;
  *(void *)(inited + 536) = v37;
  swift_retain_n();
  sub_10000566C(&qword_100712340);
  sub_1005E1980();
  sub_1002FA200();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_100288FF8(__src, __dst);
    sub_100288FF8(__dst, v38);
  }
  sub_1002F2468();
}

uint64_t sub_1002F790C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10000566C(&qword_100712330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F66A0;
  uint64_t v7 = (void *)sub_1002E1F90();
  sub_1002F9E78(v7);
  uint64_t v8 = sub_1002E8414();
  *(void *)(v8 + 16) = sub_1002F7C20;
  *(void *)(v8 + 24) = v3;
  *(void *)(inited + 32) = sub_1002E326C;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = (void *)sub_1002E1F90();
  sub_1002F9E78(v9);
  uint64_t v10 = sub_1002E8414();
  *(void *)(v10 + 16) = sub_1002F815C;
  *(void *)(v10 + 24) = v3;
  *(void *)(inited + 48) = sub_1002E83EC;
  *(void *)(inited + 56) = v10;
  uint64_t v11 = (void *)sub_1002E1F90();
  sub_1002F9E78(v11);
  uint64_t v12 = sub_1002E8414();
  *(void *)(v12 + 16) = sub_1002F81A4;
  *(void *)(v12 + 24) = v3;
  *(void *)(inited + 64) = sub_1002E83EC;
  *(void *)(inited + 72) = v12;
  uint64_t v13 = (void *)sub_1002E1F90();
  sub_1002F9E78(v13);
  uint64_t v14 = sub_1002E8414();
  *(void *)(v14 + 16) = sub_1002F81EC;
  *(void *)(v14 + 24) = v3;
  *(void *)(inited + 80) = sub_1002E83EC;
  *(void *)(inited + 88) = v14;
  uint64_t v15 = (void *)sub_1002E1F90();
  sub_1002F9E78(v15);
  uint64_t v16 = sub_1002E8414();
  *(void *)(v16 + 16) = sub_1002F8208;
  *(void *)(v16 + 24) = v3;
  *(void *)(inited + 96) = sub_1002E83EC;
  *(void *)(inited + 104) = v16;
  swift_retain_n();
  sub_10033E688(inited, a1, a2, a3, 0xD000000000000020, 0x80000001005E63C0, 61);
  swift_setDeallocating();
  return sub_10034A020();
}

uint64_t sub_1002F7B44@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _DWORD *a4@<X8>)
{
  uint64_t result = sub_1002FA98C(a1, a2, a3);
  if (!v4)
  {
    int v7 = result;
    sub_10031E1C0();
    *a4 = v7;
    type metadata accessor for MessageData();
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t sub_1002F7BE8()
{
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002F7C20()
{
  sub_1002E1C9C();
  return sub_1002F7B44(v0, v1, v2, v3);
}

void sub_1002F7C3C()
{
  sub_1002F2480();
  sub_1002F9E98();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  sub_10031E1C0();
  if (!v0)
  {
    sub_100307E58(v6, v4, v2);
    type metadata accessor for MessageData();
    swift_storeEnumTagMultiPayload();
  }
  sub_1002F2468();
}

void sub_1002F7CF4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  sub_10031E1C0();
  if (!v8)
  {
    v18[1] = v18;
    __chkstk_darwin();
    v17[2] = a4;
    v17[3] = a5;
    v17[4] = a6;
    v17[5] = a7;
    *a8 = sub_10032CFD8(a1, a2, a3, (uint64_t)sub_1002E8208, (uint64_t)v17, (uint64_t)&type metadata for ByteBuffer);
    type metadata accessor for MessageData();
    swift_storeEnumTagMultiPayload();
  }
}

void sub_1002F7E1C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  sub_10031E1C0();
  if (!v8)
  {
    v18[1] = v18;
    __chkstk_darwin();
    v17[2] = a4;
    v17[3] = a5;
    v17[4] = a6;
    v17[5] = a7;
    *a8 = sub_10032CFD8(a1, a2, a3, (uint64_t)sub_1002F9A34, (uint64_t)v17, (uint64_t)&type metadata for URLFetchData);
    type metadata accessor for MessageData();
    swift_storeEnumTagMultiPayload();
  }
}

void sub_1002F7F40(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v8)
  {
    BOOL v17 = __OFADD__(a2, 1);
    uint64_t v18 = a2 + 1;
    if (v17)
    {
      __break(1u);
    }
    else if (v18 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v23 = a3;
      swift_retain();
      swift_willThrow();
      swift_release();
    }
    else
    {
      HIDWORD(v38) = *(unsigned __int16 *)(a1 + 20);
      LODWORD(v39) = *(_DWORD *)(a1 + 16);
      LODWORD(v38) = *(unsigned __int8 *)(a1 + 22);
      swift_retain();
      swift_retain();
      sub_100308D44(a1, v18, a3, a4, a5, a6, a7, v19, v29, v30, v32, v34, v36, a8, v38, v39, v40, v41, v42,
        v43,
        v44,
        v45,
        v46,
        v47,
        v48,
        v49);
      uint64_t v31 = v20;
      uint64_t v33 = v21;
      uint64_t v35 = v22;
      sub_10031E2BC(a1, v18, a3);
      uint64_t v24 = sub_100309F9C();
      uint64_t v26 = v25;
      uint64_t v28 = v27;
      swift_release();
      swift_release();
      *(void *)uint64_t v37 = v35;
      *(void *)(v37 + 8) = v31;
      *(_DWORD *)(v37 + 16) = v33;
      *(_WORD *)(v37 + 20) = WORD2(v33);
      *(unsigned char *)(v37 + 22) = BYTE6(v33);
      *(void *)(v37 + 24) = v24;
      *(void *)(v37 + 32) = v26;
      *(_DWORD *)(v37 + 40) = v28;
      *(unsigned char *)(v37 + 46) = BYTE6(v28);
      *(_WORD *)(v37 + 44) = WORD2(v28);
    }
  }
}

void sub_1002F815C()
{
}

void sub_1002F81A4()
{
}

void sub_1002F81EC()
{
  sub_1002E1C9C();
  sub_1002F7CF4(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1002F8208()
{
  sub_1002E1C9C();
  sub_1002F7E1C(v0, v1, v2, v3, v4, v5, v6, v7);
}

void *sub_1002F8224@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v9 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v9 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v18 = a3;
      swift_retain();
    }
    else
    {
      uint64_t v15 = (uint64_t)result;
      uint64_t v16 = *result;
      uint64_t v17 = result[1];
      __int16 v22 = *((_WORD *)result + 10);
      int v23 = *((_DWORD *)result + 4);
      char v21 = *((unsigned char *)result + 22);
      swift_retain();
      swift_retain();
      sub_10031E2BC(v15, v9, a3);
      if (!v8)
      {
        swift_retain();
        uint64_t v19 = sub_100320050(v15, v9, a3, a4, a5, a6, a7);
        swift_release();
        swift_release();
        __src[0] = v19;
        sub_1002F9DB0((uint64_t)__src);
        return sub_100288FF8(__src, a8);
      }
      swift_release();
      *(void *)uint64_t v15 = v16;
      *(void *)(v15 + 8) = v17;
      *(_DWORD *)(v15 + 16) = v23;
      *(_WORD *)(v15 + 20) = v22;
      *(unsigned char *)(v15 + 22) = v21;
    }
    swift_willThrow();
    return (void *)swift_release();
  }
  return result;
}

void sub_1002F83B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v8)
  {
    swift_retain();
    sub_1003212BC(v26, a1, a2, a3, a4, a5, a6, a7);
    v17[0] = v26[0];
    v17[1] = v26[1];
    int v18 = v27;
    __int16 v19 = v28;
    char v20 = v29;
    long long v21 = v30;
    long long v22 = v31;
    long long v23 = v32;
    long long v24 = v33;
    long long v25 = v34;
    sub_1002F9D9C((uint64_t)v17);
    sub_100288FF8(v17, a8);
  }
}

void sub_1002F84C8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v8)
  {
    swift_retain();
    v17[0] = sub_10031FFA4(a1, a2, a3, a4, a5, a6, a7);
    sub_1002F9D88((uint64_t)v17);
    sub_100288FF8(v17, a8);
  }
}

void sub_1002F8588(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_10031E2BC((uint64_t)a1, a2, a3);
  if (!v4)
  {
    uint64_t v9 = sub_10032D3F0(a1, a2, a3, 1);
    if (((unint64_t)v9 & 0x8000000000000000) != 0)
    {
      sub_100296090();
      swift_allocError();
      *uint64_t v10 = 0xD000000000000011;
      v10[1] = 0x80000001005E65D0;
      v10[2] = 0xD000000000000020;
      v10[3] = 0x80000001005E63C0;
      v10[4] = 167;
      swift_willThrow();
    }
    else
    {
      __src[0] = v9;
      sub_1002F9D74((uint64_t)__src);
      sub_100288FF8(__src, a4);
    }
  }
}

void *sub_1002F8680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  sub_10000566C(&qword_100712348);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6690;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a4;
  v16[3] = a5;
  v16[4] = a6;
  v16[5] = a7;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1002F9D38;
  *(void *)(v17 + 24) = v16;
  *(void *)(inited + 32) = sub_1002F21F4;
  *(void *)(inited + 40) = v17;
  int v18 = (void *)swift_allocObject();
  void v18[2] = a4;
  v18[3] = a5;
  v18[4] = a6;
  v18[5] = a7;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1002F9D58;
  *(void *)(v19 + 24) = v18;
  *(void *)(inited + 48) = sub_1002F21F4;
  *(void *)(inited + 56) = v19;
  swift_retain_n();
  uint64_t v20 = __src[25];
  sub_10033E850(__src, inited, a1, a2, a3, 0xD000000000000020, 0x80000001005E63C0, 112);
  swift_setDeallocating();
  if (v20) {
    return (void *)sub_10034A020();
  }
  sub_10034A020();
  sub_100288FF8(__src, __dst);
  return sub_100288FF8(__dst, a8);
}

void sub_1002F884C(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
}

void sub_1002F8878(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
}

void sub_1002F88A4(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void *)@<X2>, void *a4@<X8>)
{
  sub_1002F8EC4(a1, *a2, a2[1], a3, __src);
  if (!v4) {
    sub_100288FF8(__src, a4);
  }
}

void sub_1002F88F8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1002EFB84();
  if (!v4)
  {
    int v16 = v15;
    sub_10031E2BC(a1, a2, a3);
    sub_10031E1C0();
    __src[0] = v11;
    __src[1] = v12;
    __src[2] = v13;
    __src[3] = v14;
    unsigned __int8 v10 = v15;
    sub_1002F9C7C((uint64_t)__src);
    sub_100288FF8(__src, a4);
  }
}

void sub_1002F89EC()
{
  sub_1002F2480();
  char v2 = v1;
  uint64_t v11 = v3;
  sub_10031E2BC(v4, v5, v6);
  if (!v0)
  {
    sub_1002DC9BC();
    sub_10013A988((uint64_t)v10, (uint64_t)v7);
    sub_10013A988((uint64_t)v7, (uint64_t)__src);
    __src[177] = v2;
    memcpy(__dst, __src, 0xB2uLL);
    sub_1002F9D24((uint64_t)__dst);
    sub_100288FF8(__dst, v11);
  }
  sub_1002F2468();
}

void sub_1002F8AC4(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  sub_10031E2BC((uint64_t)a1, a2, a3);
  if (!v8)
  {
    v17[0] = sub_1002FAA58(a1, a2, a3, a4, a5, a6, a7);
    sub_1002F9D10((uint64_t)v17);
    sub_100288FF8(v17, a8);
  }
}

void *sub_1002F8B7C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  swift_retain();
  uint64_t result = (void *)sub_100323E64(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    int v18 = result;
    sub_10031E2BC((uint64_t)a1, a2, a3);
    uint64_t v19 = sub_10032D3F0(a1, a2, a3, 1);
    if (((unint64_t)v19 & 0x8000000000000000) != 0)
    {
      sub_100296090();
      swift_allocError();
      *uint64_t v20 = 0xD000000000000011;
      v20[1] = 0x80000001005E65D0;
      v20[2] = 0xD000000000000020;
      v20[3] = 0x80000001005E63C0;
      v20[4] = 167;
      swift_willThrow();
      return (void *)swift_bridgeObjectRelease();
    }
    else
    {
      __src[0] = v18;
      __src[1] = v19;
      sub_1002F9CFC((uint64_t)__src);
      return sub_100288FF8(__src, a8);
    }
  }
  return result;
}

void *sub_1002F8CE4@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v5 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      uint64_t *v11 = a3;
      swift_retain();
    }
    else
    {
      uint64_t v7 = (uint64_t)result;
      uint64_t v8 = *result;
      uint64_t v9 = result[1];
      __int16 v14 = *((_WORD *)result + 10);
      int v15 = *((_DWORD *)result + 4);
      char v13 = *((unsigned char *)result + 22);
      swift_retain();
      swift_retain();
      sub_10031E2BC(v7, v5, a3);
      if (!v4)
      {
        sub_10031E1C0();
        uint64_t v10 = sub_100307618(v7, v5, a3);
        sub_10031E1C0();
        swift_release();
        swift_release();
        __src[0] = v10;
        sub_1002F9C90((uint64_t)__src);
        return sub_100288FF8(__src, a4);
      }
      swift_release();
      *(void *)uint64_t v7 = v8;
      *(void *)(v7 + 8) = v9;
      *(_DWORD *)(v7 + 16) = v15;
      *(_WORD *)(v7 + 20) = v14;
      *(unsigned char *)(v7 + 22) = v13;
    }
    swift_willThrow();
    return (void *)swift_release();
  }
  return result;
}

void sub_1002F8EC4(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(void *)@<X3>, void *a5@<X8>)
{
  sub_10031E2BC((uint64_t)a1, a2, a3);
  if (!v5)
  {
    __src[0] = sub_10032D3F0(a1, a2, a3, 0);
    a4(__src);
    sub_100288FF8(__src, a5);
  }
}

void sub_1002F8F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1002F2480();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  a10 = _swiftEmptyArrayStorage;
  sub_10031E2BC(v35, v33, v31);
  if (!v20)
  {
    sub_1002E8538();
    swift_retain();
    sub_10032B4D0();
    uint64_t v56 = v39;
    if (v39)
    {
      Swift::String v55 = v41;
      unint64_t v54 = v40;
      unint64_t v53 = HIDWORD(v40);
      swift_retain_n();
      sub_1002332A4();
      uint64_t v43 = v42;
      unint64_t v44 = v42[2];
      unint64_t v45 = v44 + 1;
      if (v44 >= v42[3] >> 1)
      {
        unint64_t v52 = v44 + 1;
        unint64_t v51 = v44;
        sub_1002332A4();
        unint64_t v45 = v52;
        unint64_t v44 = v51;
        uint64_t v43 = v49;
      }
      uint64_t v46 = v55;
      Swift::String v55 = &v51;
      v43[2] = v45;
      uint64_t v47 = &v43[3 * v44];
      v47[4] = v56;
      int v48 = v53;
      *((_DWORD *)v47 + 10) = v54;
      *((_DWORD *)v47 + 11) = v48;
      *((_DWORD *)v47 + 12) = v46;
      *((_WORD *)v47 + 26) = WORD2(v46);
      *((unsigned char *)v47 + 54) = BYTE6(v46);
      a10 = v43;
      __chkstk_darwin();
      v50[2] = v30;
      v50[3] = v28;
      v50[4] = v26;
      v50[5] = v24;
      sub_10031EB0C(v36, v34, v32, (uint64_t)sub_1002F9CB8, (uint64_t)v50, (uint64_t)&a10);
      swift_release();
    }
    sub_1002E8538();
    swift_release();
    v57[0] = a10;
    sub_1002F9CA4((uint64_t)v57);
    sub_100288FF8(v57, v38);
  }
  sub_1002F2468();
}

void sub_1002F91F4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v8)
  {
    *(void *)a8 = sub_10030B2C4(a1, a2, a3, a4, a5, a6, a7);
    *(_DWORD *)(a8 + 8) = v17;
    *(_DWORD *)(a8 + 12) = v18;
    *(_DWORD *)(a8 + 16) = v19;
    *(_WORD *)(a8 + 20) = v20;
    *(unsigned char *)(a8 + 22) = v21;
  }
}

void sub_1002F9294(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v4)
  {
    sub_10031E1C0();
    __src[0] = 1;
    memset(&__src[1], 0, 24);
    char v7 = 0x80;
    sub_1002F9C7C((uint64_t)__src);
    sub_100288FF8(__src, a4);
  }
}

void sub_1002F9340(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v4)
  {
    sub_10031E1C0();
    __src[0] = 2;
    memset(&__src[1], 0, 24);
    char v7 = 0x80;
    sub_1002F9C7C((uint64_t)__src);
    sub_100288FF8(__src, a4);
  }
}

void *sub_1002F93EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  swift_retain();
  uint64_t result = (void *)sub_100323E64(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    uint64_t v24 = result;
    swift_retain();
    sub_10032AD1C();
    uint64_t v19 = v18;
    char v21 = v20;
    sub_10031E2BC(a1, a2, a3);
    sub_10031E1C0();
    __src[0] = v24;
    __src[1] = v19;
    __src[2] = v21 & 1;
    __src[3] = 0;
    char v23 = 0;
    sub_1002F9C7C((uint64_t)__src);
    return sub_100288FF8(__src, a8);
  }
  return result;
}

void *sub_1002F9548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  sub_10000566C(&qword_100712348);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F66F0;
  int v16 = (void *)swift_allocObject();
  v16[2] = a4;
  v16[3] = a5;
  v16[4] = a6;
  v16[5] = a7;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1002F9C14;
  *(void *)(v17 + 24) = v16;
  *(void *)(inited + 32) = sub_1002F21F4;
  *(void *)(inited + 40) = v17;
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = a4;
  v18[3] = a5;
  v18[4] = a6;
  v18[5] = a7;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1002F9C30;
  *(void *)(v19 + 24) = v18;
  *(void *)(inited + 48) = sub_1002F21F4;
  *(void *)(inited + 56) = v19;
  char v20 = (void *)swift_allocObject();
  v20[2] = a4;
  v20[3] = a5;
  v20[4] = a6;
  v20[5] = a7;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1002F9C4C;
  *(void *)(v21 + 24) = v20;
  *(void *)(inited + 64) = sub_1002F21F4;
  *(void *)(inited + 72) = v21;
  swift_retain_n();
  uint64_t v22 = __src[25];
  sub_10033E850(__src, inited, a1, a2, a3, 0xD000000000000020, 0x80000001005E63C0, 227);
  swift_setDeallocating();
  if (v22) {
    return (void *)sub_10034A020();
  }
  sub_10034A020();
  sub_100288FF8(__src, __dst);
  return sub_100288FF8(__dst, a8);
}

void sub_1002F9770(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v8)
  {
    swift_retain();
    sub_10031F6C0(a1, a2, a3, a4, a5, a6, a7);
    swift_beginAccess();
    uint64_t v17 = sub_1005E1D70();
    uint64_t v19 = v18;
    swift_release();
    __src[0] = v17;
    __src[1] = v19;
    sub_1002F9C68((uint64_t)__src);
    sub_100288FF8(__src, a8);
  }
}

void sub_1002F9888(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v4)
  {
    sub_10030AF4C();
    swift_beginAccess();
    uint64_t v6 = sub_1005E1D70();
    uint64_t v8 = v7;
    swift_release();
    __src[0] = v6;
    __src[1] = v8;
    sub_1002F9C68((uint64_t)__src);
    sub_100288FF8(__src, a4);
  }
}

void sub_1002F9998(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v4)
  {
    sub_10031E1C0();
    __src[0] = 0;
    __src[1] = 0;
    sub_1002F9C68((uint64_t)__src);
    sub_100288FF8(__src, a4);
  }
}

void sub_1002F9A34()
{
  sub_1002E1C9C();
  sub_1002F7F40(v0, v1, v2, v3, v4, v5, v6, v7);
}

void *sub_1002F9A50()
{
  sub_1002E1C9C();
  return sub_1002F8224(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1002F9A6C()
{
  sub_1002E1C9C();
  sub_1002F83B4(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1002F9A88()
{
  sub_1002E1C9C();
  sub_1002F84C8(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1002F9AA4()
{
  sub_1002E1C9C();
  sub_1002F8588(v0, v1, v2, v3);
}

void *sub_1002F9AC0()
{
  sub_1002E1C9C();
  return sub_1002F8680(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1002F9ADC()
{
}

void sub_1002F9AFC()
{
  sub_1002E1C9C();
  sub_1002F8AC4(v0, v1, v2, v3, v4, v5, v6, v7);
}

void *sub_1002F9B18()
{
  sub_1002E1C9C();
  return sub_1002F8B7C(v0, v1, v2, v3, v4, v5, v6, v7);
}

#error "1002F9B44: call analysis failed (funcsize=7)"

void *sub_1002F9B50()
{
  sub_1002E1C9C();
  return sub_1002F8CE4(v0, v1, v2, v3);
}

void sub_1002F9B6C()
{
  sub_1002E1C9C();
  sub_1002F9294(v0, v1, v2, v3);
}

uint64_t sub_1002F9B88()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1002F9BC0()
{
  sub_1002E1C9C();
  sub_1002F9340(v0, v1, v2, v3);
}

void *sub_1002F9BDC()
{
  sub_1002E1C9C();
  return sub_1002F93EC(v0, v1, v2, v3, v4, v5, v6, v7);
}

void *sub_1002F9BF8()
{
  sub_1002E1C9C();
  return sub_1002F9548(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1002F9C14()
{
  sub_1002E1C9C();
  sub_1002F9770(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_1002F9C30()
{
  sub_1002E1C9C();
  sub_1002F9888(v0, v1, v2, v3);
}

void sub_1002F9C4C()
{
  sub_1002E1C9C();
  sub_1002F9998(v0, v1, v2, v3);
}

uint64_t sub_1002F9C68(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0xC000;
  return result;
}

uint64_t sub_1002F9C7C(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0x7000;
  return result;
}

uint64_t sub_1002F9C90(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0x8000;
  return result;
}

uint64_t sub_1002F9CA4(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0xB000;
  return result;
}

void sub_1002F9CB8()
{
  sub_1002E1C9C();
  sub_1002F91F4(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1002F9CD4(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0xA000;
  return result;
}

uint64_t sub_1002F9CE8(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0x9000;
  return result;
}

uint64_t sub_1002F9CFC(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0x6000;
  return result;
}

uint64_t sub_1002F9D10(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0x3000;
  return result;
}

uint64_t sub_1002F9D24(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0x5000;
  return result;
}

void sub_1002F9D38()
{
}

void sub_1002F9D58()
{
  sub_1002E1C9C();
  sub_1002F88F8(v0, v1, v2, v3);
}

uint64_t sub_1002F9D74(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0x4000;
  return result;
}

uint64_t sub_1002F9D88(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0x2000;
  return result;
}

uint64_t sub_1002F9D9C(uint64_t result)
{
  *(_WORD *)(result + 176) = *(_WORD *)(result + 176) & 0x1FF | 0x1000;
  return result;
}

uint64_t sub_1002F9DB0(uint64_t result)
{
  *(_WORD *)(result + 176) &= 0x1FFu;
  return result;
}

void *sub_1002F9E78(void *result)
{
  result[2] = v1;
  result[3] = v2;
  result[4] = v4;
  result[5] = v3;
  return result;
}

uint64_t sub_1002F9EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  uint64_t v24 = a6;
  uint64_t v25 = a7;
  uint64_t v19 = sub_1002FA03C;
  char v20 = &v21;
  uint64_t v14 = a4;
  uint64_t v15 = a5;
  uint64_t v16 = a6;
  uint64_t v17 = a7;
  uint64_t v11 = sub_1002FA170;
  uint64_t v12 = &v13;
  uint64_t result = sub_10033CE38(sub_1002FA158, v18, sub_1002FA158, v10, a1, a2, a3, 0xD000000000000020, 0x80000001005E63C0, 57);
  if (v7) {
    return v9;
  }
  return result;
}

void sub_1002F9F80(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1002FA98C(a1, a2, a3);
  if (!v3)
  {
    sub_10031E1C0();
    sub_1002FA98C(a1, a2, a3);
  }
}

void sub_1002FA03C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
}

void sub_1002FA05C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_10031E1C0();
  if (!v3)
  {
    sub_1002FA98C(a1, a2, a3);
    sub_10031E1C0();
    sub_1002FA98C(a1, a2, a3);
  }
}

uint64_t sub_1002FA158@<X0>(uint64_t a1@<X8>)
{
  return sub_1002FA190(a1);
}

void sub_1002FA170(uint64_t *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1002FA190@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
  {
    *(void *)a1 = result;
    *(unsigned char *)(a1 + 8) = v5 & 1;
  }
  return result;
}

unint64_t sub_1002FA1CC(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((unint64_t)(a1 - 0x100000000) < 0xFFFFFFFF00000001) {
    uint64_t v1 = 0;
  }
  return v1 | ((unint64_t)((unint64_t)(a1 - 0x100000000) < 0xFFFFFFFF00000001) << 32);
}

uint64_t sub_1002FA200()
{
  sub_100300DE8();
  sub_10031F4A0(v1, v3, v2);
  if (v0) {
    goto LABEL_3;
  }
  sub_100301194();
  sub_100300E28(v4, v5, v6, v7, 0x80000001005E63C0);
  sub_1005E1CD0();
  sub_100301148();
  swift_bridgeObjectRetain();
  uint64_t v9 = (void (*)(uint64_t))sub_100301114();
  swift_bridgeObjectRelease();
  if (!v9)
  {
    swift_release();
    sub_100301004();
    swift_bridgeObjectRelease();
    sub_100300E9C();
    sub_100300FDC(v11, v12, v13, v14, v15, v16, v17, v18, v20, v21);
    swift_bridgeObjectRelease();
    sub_100296090();
    sub_10020DD10();
    *uint64_t v19 = v22;
    v19[1] = v23;
    sub_100300D64(v19, (uint64_t)"SHSERVICE response type: ");
LABEL_3:
    swift_release();
    return sub_100300F3C();
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_100300ED8();
  v9(v10);
  sub_10003E960((uint64_t)v9);
  swift_release();
  return swift_release();
}

uint64_t sub_1002FA388()
{
  sub_100300DA8();
  sub_10031F4A0(v2, v3, v0);
  if (!v1)
  {
    sub_1003011A8();
    sub_100300E28(v4, v5, v6, v7, 0x80000001005E63C0);
    uint64_t v8 = sub_1005E1CD0();
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v11 = (void (*)(uint64_t))sub_100300148(v8, v10, v16);
    swift_bridgeObjectRelease();
    if (v11)
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = sub_100300EF8();
      v11(v12);
      sub_10003E960((uint64_t)v11);
      swift_release();
      uint64_t result = swift_release();
      *(_OWORD *)uint64_t v15 = v19;
      *(_OWORD *)(v15 + 16) = v20;
      *(unsigned char *)(v15 + 36) = v22;
      *(_DWORD *)(v15 + 32) = v21;
      return result;
    }
    swift_release();
    sub_1003010E0();
    swift_bridgeObjectRelease();
    sub_100300E9C();
    sub_100300FB4();
    swift_bridgeObjectRelease();
    sub_100296090();
    sub_10020DD10();
    *uint64_t v13 = v17;
    v13[1] = v18;
    sub_100300D64(v13, (uint64_t)"SHSERVICE response type: ");
  }
  swift_release();
  return sub_100300F64();
}

uint64_t sub_1002FA550()
{
  sub_100300DA8();
  sub_10031F4A0(v2, v3, v0);
  if (!v1)
  {
    sub_1003011A8();
    sub_100300E28(v4, v5, v6, v7, 0x80000001005E63C0);
    uint64_t v8 = sub_1005E1CD0();
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v11 = (void (*)(uint64_t))sub_100300148(v8, v10, v16);
    swift_bridgeObjectRelease();
    if (v11)
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = sub_100300EF8();
      v11(v12);
      sub_10003E960((uint64_t)v11);
      swift_release();
      uint64_t result = swift_release();
      *(_OWORD *)uint64_t v15 = v19;
      *(_OWORD *)(v15 + 16) = v20;
      *(unsigned char *)(v15 + 32) = v21;
      return result;
    }
    swift_release();
    sub_1003010E0();
    swift_bridgeObjectRelease();
    sub_100300E9C();
    sub_100300FB4();
    swift_bridgeObjectRelease();
    sub_100296090();
    sub_10020DD10();
    *uint64_t v13 = v17;
    v13[1] = v18;
    sub_100300D64(v13, (uint64_t)"SHSERVICE response type: ");
  }
  swift_release();
  return sub_100300F64();
}

uint64_t sub_1002FA710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v19)(uint64_t *__return_ptr, uint64_t, unint64_t *);
  void *v20;
  int v22;
  uint64_t v23;
  __int16 v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  Swift::String v29;

  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  int v11 = *(_DWORD *)(a1 + 16);
  __int16 v12 = *(_WORD *)(a1 + 20);
  uint64_t v25 = *(unsigned char *)(a1 + 22);
  swift_retain();
  sub_10031F4A0(a1, a2, a3);
  if (!v4)
  {
    uint64_t v23 = a4;
    uint64_t v24 = v12;
    sub_10031E368(v13, v14, v15 & 0xFFFFFFFFFFFFFFLL, 0xD000000000000020, 0x80000001005E63C0, 76);
    char v22 = v11;
    uint64_t v16 = sub_1005E1CD0();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    long long v19 = (void (*)(uint64_t *__return_ptr, uint64_t, unint64_t *))sub_100300148(v16, (uint64_t)v18, v23);
    swift_bridgeObjectRelease();
    if (v19)
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = a2;
      uint64_t v27 = a3;
      v19(&v28, a1, &v26);
      sub_10003E960((uint64_t)v19);
      swift_release();
      swift_release();
      return v28;
    }
    swift_release();
    sub_1005E2C80(25);
    swift_bridgeObjectRelease();
    uint64_t v26 = 0xD000000000000017;
    uint64_t v27 = 0x80000001005E6850;
    v29._countAndFlagsBits = v16;
    v29._object = v18;
    sub_1005E1E30(v29);
    swift_bridgeObjectRelease();
    sub_100296090();
    swift_allocError();
    *long long v20 = 0xD000000000000017;
    v20[1] = 0x80000001005E6850;
    v20[2] = 0xD000000000000020;
    v20[3] = 0x80000001005E63C0;
    v20[4] = 78;
    swift_willThrow();
    int v11 = v22;
    __int16 v12 = v24;
  }
  swift_release();
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v10;
  *(_DWORD *)(a1 + 16) = v11;
  *(_WORD *)(a1 + 20) = v12;
  *(unsigned char *)(a1 + 22) = v25;
  return swift_willThrow();
}

uint64_t sub_1002FA98C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (uint64_t)sub_10032D3F0(a1, a2, a3, 0);
  if (!v3)
  {
    if (result < 0)
    {
      sub_100296090();
      sub_10020DD10();
      *unint64_t v5 = 0xD000000000000011;
      unint64_t v6 = 0x80000001005E65D0;
      uint64_t v7 = 167;
    }
    else
    {
      if ((unint64_t)(result - 0x100000000) >= 0xFFFFFFFF00000001) {
        return result;
      }
      sub_100296090();
      sub_10020DD10();
      *unint64_t v5 = 0xD00000000000001DLL;
      unint64_t v6 = 0x80000001005E6870;
      uint64_t v7 = 76;
    }
    v5[1] = v6;
    v5[2] = 0xD000000000000020;
    return sub_1003011FC((uint64_t)v5, v7);
  }
  return result;
}

uint64_t sub_1002FAA58(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1002FAAB0(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void))sub_100300C24);
}

uint64_t sub_1002FAA84(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1002FAAB0(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void))sub_1002FA1CC);
}

uint64_t sub_1002FAAB0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void))
{
  uint64_t result = (uint64_t)sub_10032D3F0(a1, a2, a3, 0);
  if (!v8)
  {
    if (result < 0)
    {
      sub_100296090();
      sub_10020DD10();
      void *v11 = 0xD000000000000011;
      unint64_t v12 = 0x80000001005E65D0;
      uint64_t v13 = 167;
    }
    else
    {
      uint64_t result = a8();
      if ((result & 0x100000000) == 0) {
        return result;
      }
      sub_100296090();
      sub_10020DD10();
      void *v11 = 0xD00000000000001DLL;
      unint64_t v12 = 0x80000001005E6870;
      uint64_t v13 = 76;
    }
    v11[1] = v12;
    v11[2] = 0xD000000000000020;
    return sub_1003011FC((uint64_t)v11, v13);
  }
  return result;
}

uint64_t sub_1002FAB80(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      void *v8 = a3;
    }
    else
    {
      uint64_t v5 = result;
      uint64_t v6 = *(void *)result;
      uint64_t v7 = *(void *)(result + 8);
      __int16 v10 = *(_WORD *)(result + 20);
      int v11 = *(_DWORD *)(result + 16);
      char v9 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_10031E1C0();
      if (!v3)
      {
        sub_1002FACFC();
        sub_10032964C();
        return swift_release();
      }
      swift_release();
      *(void *)uint64_t v5 = v6;
      *(void *)(v5 + 8) = v7;
      *(_DWORD *)(v5 + 16) = v11;
      *(_WORD *)(v5 + 20) = v10;
      *(unsigned char *)(v5 + 22) = v9;
    }
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1002FACFC()
{
  sub_10000566C(&qword_100712368);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F69F0;
  uint64_t v2 = (void *)sub_1002E1F90();
  sub_1002F9E78(v2);
  uint64_t v3 = sub_1002E8414();
  *(void *)(v3 + 16) = sub_1003009A4;
  *(void *)(v3 + 24) = v0;
  *(void *)(inited + 32) = sub_1002E326C;
  *(void *)(inited + 40) = v3;
  uint64_t v4 = (void *)sub_1002E1F90();
  sub_1002F9E78(v4);
  uint64_t v5 = sub_1002E8414();
  *(void *)(v5 + 16) = sub_1003009C0;
  *(void *)(v5 + 24) = v0;
  *(void *)(inited + 48) = sub_1002E83EC;
  *(void *)(inited + 56) = v5;
  uint64_t v6 = (void *)sub_1002E1F90();
  sub_1002F9E78(v6);
  uint64_t v7 = sub_1002E8414();
  *(void *)(v7 + 16) = sub_1003009DC;
  *(void *)(v7 + 24) = v0;
  *(void *)(inited + 64) = sub_1002E83EC;
  *(void *)(inited + 72) = v7;
  uint64_t v8 = (void *)sub_1002E1F90();
  sub_1002F9E78(v8);
  uint64_t v9 = sub_1002E8414();
  *(void *)(v9 + 16) = sub_100300A1C;
  *(void *)(v9 + 24) = v0;
  *(void *)(inited + 80) = sub_1002E83EC;
  *(void *)(inited + 88) = v9;
  __int16 v10 = (void *)sub_1002E1F90();
  sub_1002F9E78(v10);
  uint64_t v11 = sub_1002E8414();
  *(void *)(v11 + 16) = sub_100300A38;
  *(void *)(v11 + 24) = v0;
  *(void *)(inited + 96) = sub_1002E83EC;
  *(void *)(inited + 104) = v11;
  unint64_t v12 = (void *)sub_1002E1F90();
  sub_1002F9E78(v12);
  uint64_t v13 = sub_1002E8414();
  *(void *)(v13 + 16) = sub_100300A78;
  *(void *)(v13 + 24) = v0;
  *(void *)(inited + 112) = sub_1002E83EC;
  *(void *)(inited + 120) = v13;
  unint64_t v14 = (void *)sub_1002E1F90();
  sub_1002F9E78(v14);
  uint64_t v15 = sub_1002E8414();
  *(void *)(v15 + 16) = sub_100300AA8;
  *(void *)(v15 + 24) = v0;
  *(void *)(inited + 128) = sub_1002E83EC;
  *(void *)(inited + 136) = v15;
  uint64_t v16 = (void *)sub_1002E1F90();
  sub_1002F9E78(v16);
  uint64_t v17 = sub_1002E8414();
  *(void *)(v17 + 16) = sub_100300AD8;
  *(void *)(v17 + 24) = v0;
  *(void *)(inited + 144) = sub_1002E83EC;
  *(void *)(inited + 152) = v17;
  uint64_t v18 = (void *)sub_1002E1F90();
  sub_1002F9E78(v18);
  uint64_t v19 = sub_1002E8414();
  *(void *)(v19 + 16) = sub_100300AF4;
  *(void *)(v19 + 24) = v0;
  *(void *)(inited + 160) = sub_1002E83EC;
  *(void *)(inited + 168) = v19;
  long long v20 = (void *)sub_1002E1F90();
  sub_1002F9E78(v20);
  uint64_t v21 = sub_1002E8414();
  *(void *)(v21 + 16) = sub_100300B10;
  *(void *)(v21 + 24) = v0;
  *(void *)(inited + 176) = sub_1002E83EC;
  *(void *)(inited + 184) = v21;
  swift_retain_n();
  sub_1003011D0();
  sub_10033EA18();
  swift_setDeallocating();
  return sub_10034A020();
}

void sub_1002FB084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
}

void sub_1002FB0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
}

void sub_1002FB0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, void *, unint64_t, uint64_t, uint64_t), uint64_t a9)
{
  sub_1003010CC();
  uint64_t v12 = v11;
  sub_10030A634(v13, v14, v15, v16);
  if (!v9)
  {
    v37._countAndFlagsBits = v17;
    v37._object = v18;
    sub_1003011D0();
    sub_10031E2BC(v19, v20, v21);
    swift_retain();
    sub_1003011D0();
    sub_1003011BC();
    unint64_t v22 = sub_1003256D4();
    uint64_t v24 = v23;
    uint64_t v25 = a8;
    uint64_t v27 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1002965E4(v22);
    uint64_t v28 = v25(v37._countAndFlagsBits, v37._object, v22, v24, v27);
    if (v31 == -1)
    {
      sub_1005E2C80(25);
      swift_bridgeObjectRelease();
      sub_1005E1E30(v37);
      swift_bridgeObjectRelease();
      sub_100296090();
      sub_10020DD10();
      *uint64_t v36 = 0xD000000000000017;
      v36[1] = 0x80000001005E6830;
      v36[2] = 0xD000000000000020;
      v36[3] = 0x80000001005E63C0;
      v36[4] = a9;
      swift_willThrow();
      sub_100212D94(v22);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = v28;
      uint64_t v33 = v29;
      uint64_t v34 = v30;
      char v35 = v31;
      sub_100212D94(v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)uint64_t v12 = v32;
      *(void *)(v12 + 8) = v33;
      *(void *)(v12 + 16) = v34;
      *(unsigned char *)(v12 + 24) = v35;
    }
  }
}

uint64_t sub_1002FB384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  swift_retain();
  uint64_t result = sub_1003255D8(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    *(void *)a8 = result;
    *(void *)(a8 + 8) = v18;
    *(void *)(a8 + 16) = v19;
    *(unsigned char *)(a8 + 24) = v20;
    type metadata accessor for ResponsePayload();
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

void sub_1002FB430(void *a1@<X8>)
{
  sub_1002F338C();
  if (!v1)
  {
    sub_10027F540(&v3, a1);
    type metadata accessor for ResponsePayload();
    swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_1002FB490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1002F790C(a1, a2, a3);
  if (!v3)
  {
    type metadata accessor for ResponsePayload();
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t sub_1002FB4D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  swift_retain();
  uint64_t result = sub_100322208(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    *a8 = result;
    a8[1] = v18;
    a8[2] = v19;
    type metadata accessor for ResponsePayload();
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t sub_1002FB580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t))
{
  sub_1002E1CA8();
  uint64_t v11 = v10;
  swift_retain();
  uint64_t v12 = sub_100300F18();
  uint64_t result = a8(v12);
  if (!v8)
  {
    uint64_t *v11 = result;
    type metadata accessor for ResponsePayload();
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t sub_1002FB610@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_10030B368();
  if (!v1)
  {
    sub_10028CC70(&v4, a1);
    type metadata accessor for ResponsePayload();
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

void sub_1002FB670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *__int16 v10 = a3;
      goto LABEL_6;
    }
    sub_100301100();
    uint64_t v6 = v5;
    uint64_t v7 = v5[1];
    __int16 v12 = *((_WORD *)v5 + 10);
    int v13 = *((_DWORD *)v5 + 4);
    char v11 = *((unsigned char *)v5 + 22);
    uint64_t v14 = *v5;
    uint64_t v9 = v8;
    swift_retain();
    sub_10030105C();
    v9();
    if (v3)
    {
      swift_release();
      *uint64_t v6 = v14;
      v6[1] = v7;
      *((_DWORD *)v6 + 4) = v13;
      *((_WORD *)v6 + 10) = v12;
      *((unsigned char *)v6 + 22) = v11;
LABEL_6:
      swift_willThrow();
      return;
    }
    swift_release();
  }
}

void sub_1002FB78C()
{
  sub_10030108C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  swift_retain();
  sub_10032B4FC();
  if (v0) {
    goto LABEL_11;
  }
  unint64_t v10 = v9;
  sub_1003299D8();
  if (__OFADD__(v4, 1))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v4 + 1 >= v2)
  {
    sub_1002DB5BC();
    sub_10020DD10();
    *uint64_t v15 = v2;
LABEL_9:
    swift_willThrow();
    sub_100212D94(v10);
LABEL_11:
    sub_100301040();
    return;
  }
  uint64_t v11 = *((unsigned int *)v6 + 2);
  unint64_t v12 = *((unsigned int *)v6 + 3);
  if (v12 < v11) {
    goto LABEL_30;
  }
  uint64_t v31 = *((unsigned __int16 *)v6 + 10);
  uint64_t v29 = *((unsigned __int8 *)v6 + 22);
  uint64_t v13 = v29 | (v31 << 8);
  int v30 = *((_DWORD *)v6 + 4);
  if (v30 - (int)v13 >= v12)
  {
    uint64_t v14 = *v6;
    if (v12 != v11)
    {
      swift_beginAccess();
      unint64_t v16 = 0;
      while (1)
      {
        if (v11 + v16 >= v12)
        {
          __break(1u);
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        if (v16 >= (v12 - v11)) {
          goto LABEL_28;
        }
        int v17 = *(unsigned __int8 *)(*(void *)(v14 + 24) + v13 + v11 + v16);
        BOOL v18 = v17 == 13 || v17 == 10;
        if (v18 || (char)v17 < 1) {
          break;
        }
        ++v16;
        if (!(v11 - v12 + v16)) {
          goto LABEL_7;
        }
      }
      swift_retain();
      uint64_t v20 = ByteBuffer.readSlice(length:)(v16);
      if (!v20) {
        goto LABEL_32;
      }
      uint64_t v23 = v20;
      unint64_t v24 = v21;
      uint64_t v25 = v22;
      swift_release();
      uint64_t v26 = sub_10031E368(v23, v24, v25 & 0xFFFFFFFFFFFFFFLL, 0xD000000000000020, 0x80000001005E63C0, 194);
      unint64_t v28 = v27;
      swift_release();
      unint64_t *v8 = v10;
      v8[1] = v26;
      v8[2] = v28;
      goto LABEL_11;
    }
LABEL_7:
    sub_1002E1490();
    sub_10020DD10();
    swift_retain();
    swift_willThrow();
    swift_release();
    *uint64_t v6 = v14;
    *((_DWORD *)v6 + 2) = v11;
    *((_DWORD *)v6 + 3) = v12;
    *((_DWORD *)v6 + 4) = v30;
    *((_WORD *)v6 + 10) = v31;
    *((unsigned char *)v6 + 22) = v29;
    goto LABEL_9;
  }
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
}

uint64_t sub_1002FB9F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10000566C(&qword_100712350);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1005F6A20;
  *(void *)(v12 + 32) = 0x5452454C41;
  *(void *)(v12 + 40) = 0xE500000000000000;
  *(void *)(v12 + 48) = sub_1002FD72C;
  *(void *)(v12 + 56) = 0;
  strcpy((char *)(v12 + 64), "ALREADYEXISTS");
  *(_WORD *)(v12 + 78) = -4864;
  *(void *)(v12 + 80) = sub_1002FD760;
  *(void *)(v12 + 88) = 0;
  uint64_t v13 = (void *)sub_1002E1F90();
  sub_100300D34(v13);
  uint64_t v14 = sub_1002E8414();
  *(void *)(v14 + 16) = sub_1003001D8;
  *(void *)(v14 + 24) = v7;
  *(void *)(v12 + 96) = 0x4955444E45505041;
  *(void *)(v12 + 104) = 0xE900000000000044;
  *(void *)(v12 + 112) = sub_100300208;
  *(void *)(v12 + 120) = v14;
  sub_1003011F0();
  *(void *)(v12 + 128) = v15;
  *(void *)(v12 + 136) = v16;
  *(void *)(v12 + 144) = sub_1002FD794;
  *(void *)(v12 + 152) = 0;
  sub_1003011F0();
  *(void *)(v12 + 160) = v17;
  *(void *)(v12 + 168) = v18;
  *(void *)(v12 + 176) = sub_1002FD7C8;
  *(void *)(v12 + 184) = 0;
  uint64_t v19 = (void *)sub_1002E1F90();
  sub_100300D34(v19);
  uint64_t v20 = sub_1002E8414();
  *(void *)(v20 + 16) = sub_100300220;
  *(void *)(v20 + 24) = v7;
  *(void *)(v12 + 192) = 0x5352414843444142;
  *(void *)(v12 + 200) = 0xEA00000000005445;
  *(void *)(v12 + 208) = sub_100300208;
  *(void *)(v12 + 216) = v20;
  *(void *)(v12 + 224) = 0x544F4E4E4143;
  *(void *)(v12 + 232) = 0xE600000000000000;
  *(void *)(v12 + 240) = sub_1002FD7FC;
  *(void *)(v12 + 248) = 0;
  unint64_t v21 = (void *)sub_1002E1F90();
  sub_100300D34(v21);
  uint64_t v22 = sub_1002E8414();
  *(void *)(v22 + 16) = sub_10030023C;
  *(void *)(v22 + 24) = v7;
  *(void *)(v12 + 256) = 0x494C494241504143;
  *(void *)(v12 + 264) = 0xEA00000000005954;
  *(void *)(v12 + 272) = sub_100300208;
  *(void *)(v12 + 280) = v22;
  *(void *)(v12 + 288) = 0x5542544E45494C43;
  *(void *)(v12 + 296) = 0xE900000000000047;
  *(void *)(v12 + 304) = sub_1002FD830;
  *(void *)(v12 + 312) = 0;
  *(void *)(v12 + 320) = 0x4445534F4C43;
  *(void *)(v12 + 328) = 0xE600000000000000;
  *(void *)(v12 + 336) = sub_1002FD864;
  *(void *)(v12 + 344) = 0;
  *(void *)(v12 + 352) = 0xD000000000000011;
  *(void *)(v12 + 360) = 0x80000001005E6460;
  *(void *)(v12 + 368) = sub_1002FD898;
  *(void *)(v12 + 376) = 0;
  strcpy((char *)(v12 + 384), "CONTACTADMIN");
  *(unsigned char *)(v12 + 397) = 0;
  *(_WORD *)(v12 + 398) = -5120;
  *(void *)(v12 + 400) = sub_1002FD8CC;
  *(void *)(v12 + 408) = 0;
  uint64_t v23 = (void *)sub_1002E1F90();
  sub_100300D34(v23);
  uint64_t v24 = sub_1002E8414();
  *(void *)(v24 + 16) = sub_100300258;
  *(void *)(v24 + 24) = v7;
  *(void *)(v12 + 416) = 0x44495559504F43;
  *(void *)(v12 + 424) = 0xE700000000000000;
  *(void *)(v12 + 432) = sub_100300208;
  *(void *)(v12 + 440) = v24;
  *(void *)(v12 + 448) = 0x4954505552524F43;
  *(void *)(v12 + 456) = 0xEA00000000004E4FLL;
  *(void *)(v12 + 464) = sub_1002FD900;
  *(void *)(v12 + 472) = 0;
  *(void *)(v12 + 480) = 0x44455249505845;
  *(void *)(v12 + 488) = 0xE700000000000000;
  *(void *)(v12 + 496) = sub_1002FD934;
  *(void *)(v12 + 504) = 0;
  strcpy((char *)(v12 + 512), "EXPUNGEISSUED");
  *(_WORD *)(v12 + 526) = -4864;
  *(void *)(v12 + 528) = sub_1002FD968;
  *(void *)(v12 + 536) = 0;
  uint64_t v25 = (void *)sub_1002E1F90();
  sub_100300D34(v25);
  uint64_t v26 = sub_1002E8414();
  *(void *)(v26 + 16) = sub_100300288;
  *(void *)(v26 + 24) = v7;
  strcpy((char *)(v12 + 544), "HIGHESTMODSEQ");
  *(_WORD *)(v12 + 558) = -4864;
  *(void *)(v12 + 560) = sub_100300208;
  *(void *)(v12 + 568) = v26;
  *(void *)(v12 + 576) = 0x4553554E49;
  *(void *)(v12 + 584) = 0xE500000000000000;
  *(void *)(v12 + 592) = sub_1002FD99C;
  *(void *)(v12 + 600) = 0;
  *(void *)(v12 + 608) = 0x54494D494CLL;
  *(void *)(v12 + 616) = 0xE500000000000000;
  *(void *)(v12 + 624) = sub_1002FD9D0;
  *(void *)(v12 + 632) = 0;
  unint64_t v27 = (void *)sub_1002E1F90();
  sub_100300D34(v27);
  uint64_t v28 = sub_1002E8414();
  *(void *)(v28 + 16) = sub_1003002A4;
  *(void *)(v28 + 24) = v7;
  *(void *)(v12 + 640) = 0x415441444154454DLL;
  *(void *)(v12 + 648) = 0xE800000000000000;
  *(void *)(v12 + 656) = sub_100300208;
  *(void *)(v12 + 664) = v28;
  uint64_t v29 = (void *)sub_1002E1F90();
  sub_100300D34(v29);
  uint64_t v30 = sub_1002E8414();
  *(void *)(v30 + 16) = sub_1003002C0;
  *(void *)(v30 + 24) = v7;
  *(void *)(v12 + 672) = 0x4445494649444F4DLL;
  *(void *)(v12 + 680) = 0xE800000000000000;
  *(void *)(v12 + 688) = sub_100300208;
  *(void *)(v12 + 696) = v30;
  uint64_t v31 = (void *)sub_1002E1F90();
  sub_100300D34(v31);
  uint64_t v32 = sub_1002E8414();
  *(void *)(v32 + 16) = sub_1003002DC;
  *(void *)(v32 + 24) = v7;
  *(void *)(v12 + 704) = 0x43415053454D414ELL;
  *(void *)(v12 + 712) = 0xE900000000000045;
  *(void *)(v12 + 720) = sub_100300208;
  *(void *)(v12 + 728) = v32;
  *(void *)(v12 + 736) = 0x514553444F4D4F4ELL;
  *(void *)(v12 + 744) = 0xE800000000000000;
  *(void *)(v12 + 752) = sub_1002FDA04;
  *(void *)(v12 + 760) = 0;
  *(void *)(v12 + 768) = 0x54534958454E4F4ELL;
  *(void *)(v12 + 776) = 0xEB00000000544E45;
  *(void *)(v12 + 784) = sub_1002FDA38;
  *(void *)(v12 + 792) = 0;
  *(void *)(v12 + 800) = 0x4D5245504F4ELL;
  *(void *)(v12 + 808) = 0xE600000000000000;
  *(void *)(v12 + 816) = sub_1002FDA6C;
  *(void *)(v12 + 824) = 0;
  *(void *)(v12 + 832) = 0x4445564153544F4ELL;
  *(void *)(v12 + 840) = 0xE800000000000000;
  *(void *)(v12 + 848) = sub_1002FDAA0;
  *(void *)(v12 + 856) = 0;
  *(void *)(v12 + 864) = 0x544F55515245564FLL;
  *(void *)(v12 + 872) = 0xE900000000000041;
  *(void *)(v12 + 880) = sub_1002FDAD4;
  *(void *)(v12 + 888) = 0;
  *(void *)(v12 + 896) = 0x4553524150;
  *(void *)(v12 + 904) = 0xE500000000000000;
  *(void *)(v12 + 912) = sub_1002FDB08;
  *(void *)(v12 + 920) = 0;
  uint64_t v33 = (void *)sub_1002E1F90();
  sub_100300D34(v33);
  uint64_t v34 = sub_1002E8414();
  *(void *)(v34 + 16) = sub_1003002F8;
  *(void *)(v34 + 24) = v7;
  strcpy((char *)(v12 + 928), "PERMANENTFLAGS");
  *(unsigned char *)(v12 + 943) = -18;
  *(void *)(v12 + 944) = sub_100300208;
  *(void *)(v12 + 952) = v34;
  *(void *)(v12 + 960) = 0x5259434156495250;
  *(void *)(v12 + 968) = 0xEF44455249555145;
  *(void *)(v12 + 976) = sub_1002FDB3C;
  *(void *)(v12 + 984) = 0;
  *(void *)(v12 + 992) = 0x4C4E4F2D44414552;
  *(void *)(v12 + 1000) = 0xE900000000000059;
  *(void *)(v12 + 1008) = sub_1002FDB70;
  *(void *)(v12 + 1016) = 0;
  *(void *)(v12 + 1024) = 0x4952572D44414552;
  *(void *)(v12 + 1032) = 0xEA00000000004554;
  *(void *)(v12 + 1040) = sub_1002FDBA4;
  *(void *)(v12 + 1048) = 0;
  char v35 = (void *)sub_1002E1F90();
  sub_100300D34(v35);
  uint64_t v36 = sub_1002E8414();
  *(void *)(v36 + 16) = sub_100300314;
  *(void *)(v36 + 24) = v7;
  *(void *)(v12 + 1056) = 0x4C41525245464552;
  *(void *)(v12 + 1064) = 0xE800000000000000;
  *(void *)(v12 + 1072) = sub_100300208;
  *(void *)(v12 + 1080) = v36;
  *(void *)(v12 + 1088) = 0x5542524556524553;
  *(void *)(v12 + 1096) = 0xE900000000000047;
  *(void *)(v12 + 1104) = sub_1002FDBD8;
  *(void *)(v12 + 1112) = 0;
  *(void *)(v12 + 1120) = 0x5441455243595254;
  *(void *)(v12 + 1128) = 0xE900000000000045;
  *(void *)(v12 + 1136) = sub_1002FDC0C;
  *(void *)(v12 + 1144) = 0;
  Swift::String v37 = (void *)sub_1002E1F90();
  sub_100300D34(v37);
  uint64_t v38 = sub_1002E8414();
  *(void *)(v38 + 16) = sub_100300330;
  *(void *)(v38 + 24) = v7;
  *(void *)(v12 + 1152) = 0x5458454E444955;
  *(void *)(v12 + 1160) = 0xE700000000000000;
  *(void *)(v12 + 1168) = sub_100300208;
  *(void *)(v12 + 1176) = v38;
  strcpy((char *)(v12 + 1184), "UIDNOTSTICKY");
  *(unsigned char *)(v12 + 1197) = 0;
  *(_WORD *)(v12 + 1198) = -5120;
  *(void *)(v12 + 1200) = sub_1002FDC40;
  *(void *)(v12 + 1208) = 0;
  *(void *)(v12 + 1216) = 0x4955514552444955;
  *(void *)(v12 + 1224) = 0xEB00000000444552;
  *(void *)(v12 + 1232) = sub_1002FDC74;
  *(void *)(v12 + 1240) = 0;
  uint64_t v39 = (void *)sub_1002E1F90();
  sub_100300D34(v39);
  uint64_t v40 = sub_1002E8414();
  *(void *)(v40 + 16) = sub_10030034C;
  *(void *)(v40 + 24) = v7;
  *(void *)(v12 + 1248) = 0x44494C4156444955;
  *(void *)(v12 + 1256) = 0xEB00000000595449;
  *(void *)(v12 + 1264) = sub_100300208;
  *(void *)(v12 + 1272) = v40;
  *(void *)(v12 + 1280) = 0x414C494156414E55;
  *(void *)(v12 + 1288) = 0xEB00000000454C42;
  *(void *)(v12 + 1296) = sub_1002FDCA8;
  *(void *)(v12 + 1304) = 0;
  uint64_t v41 = (void *)sub_1002E1F90();
  sub_100300D34(v41);
  uint64_t v42 = sub_1002E8414();
  *(void *)(v42 + 16) = sub_100300368;
  *(void *)(v42 + 24) = v7;
  *(void *)(v12 + 1312) = 0x4E4545534E55;
  *(void *)(v12 + 1320) = 0xE600000000000000;
  *(void *)(v12 + 1328) = sub_100300208;
  *(void *)(v12 + 1336) = v42;
  uint64_t v43 = (void *)sub_1002E1F90();
  sub_100300D34(v43);
  uint64_t v44 = sub_1002E8414();
  *(void *)(v44 + 16) = sub_100300384;
  *(void *)(v44 + 24) = v7;
  *(void *)(v12 + 1344) = 0x4843454D4C5255;
  *(void *)(v12 + 1352) = 0xE700000000000000;
  *(void *)(v12 + 1360) = sub_100300208;
  *(void *)(v12 + 1368) = v44;
  *(void *)(v12 + 1376) = 0x52545441455355;
  *(void *)(v12 + 1384) = 0xE700000000000000;
  *(void *)(v12 + 1392) = sub_1002FDCDC;
  *(void *)(v12 + 1400) = 0;
  swift_retain_n();
  sub_10000566C(&qword_100712358);
  uint64_t v45 = sub_1005E1980();
  sub_10000566C(&qword_100712360);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6690;
  uint64_t v47 = (void *)swift_allocObject();
  v47[2] = a4;
  v47[3] = a5;
  v47[4] = a6;
  v47[5] = a7;
  v47[6] = v45;
  uint64_t v48 = sub_1002E8414();
  *(void *)(v48 + 16) = sub_1003003E0;
  *(void *)(v48 + 24) = v47;
  *(void *)(inited + 32) = sub_100300208;
  *(void *)(inited + 40) = v48;
  uint64_t v49 = (void *)sub_1002E1F90();
  sub_100300D34(v49);
  uint64_t v50 = sub_1002E8414();
  *(void *)(v50 + 16) = sub_100300404;
  *(void *)(v50 + 24) = v45;
  *(void *)(inited + 48) = sub_100300208;
  *(void *)(inited + 56) = v50;
  swift_retain_n();
  uint64_t v51 = sub_10033EBE0(inited, a1, a2, a3, 0xD000000000000020, 0x80000001005E63C0, 374);
  swift_setDeallocating();
  sub_10034A020();
  return v51;
}

void sub_1002FC720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v9 = __OFADD__(a2, 1);
  uint64_t v10 = a2 + 1;
  if (v9)
  {
    __break(1u);
    return;
  }
  if (v10 >= a3)
  {
    sub_1002DB5BC();
    sub_10020DD10();
    *uint64_t v13 = a3;
  }
  else
  {
    sub_100301028();
    sub_100337E64();
    if (!v3) {
      return;
    }
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v8;
    *(_DWORD *)(a1 + 16) = v5;
    *(_WORD *)(a1 + 20) = v6;
    *(unsigned char *)(a1 + 22) = v7;
  }
  swift_willThrow();
}

void sub_1002FC7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v7)
  {
    sub_10000566C(&qword_100710530);
    v12[7] = swift_allocBox();
    __chkstk_darwin();
    v12[2] = a4;
    v12[3] = a5;
    v12[4] = a6;
    v12[5] = a7;
    sub_10033CBF4((uint64_t)sub_100300628, (uint64_t)v12, (uint64_t)sub_1003000B4);
  }
}

void sub_1002FC908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v3)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_100307618(a1, a2, a3);
  }
}

void sub_1002FC9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v3)
  {
    uint64_t v4 = swift_allocObject();
    swift_retain();
    sub_100325AE8();
    memcpy((void *)(v4 + 16), __src, 0x100uLL);
  }
}

uint64_t sub_1002FCAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_retain();
  uint64_t v15 = sub_100320BA0(a1, a2, a3, a4, a5, a6, a7);
  if (!v7)
  {
    uint64_t v16 = (void *)v15;
    goto LABEL_5;
  }
  swift_errorRetain();
  sub_10000566C(qword_100710378);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    uint64_t v16 = _swiftEmptyArrayStorage;
LABEL_5:
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v16;
    return result;
  }
  return swift_errorRelease();
}

void sub_1002FCBE8()
{
  sub_1003010CC();
  sub_1002F3280();
  sub_100300E48();
  if (!v1)
  {
    uint64_t v20 = v0;
    sub_10000566C(&qword_100710668);
    uint64_t v9 = sub_1002E1F90();
    *(_OWORD *)(v9 + 16) = xmmword_1005F6670;
    sub_1003011BC();
    uint64_t v19 = (uint64_t)&v19;
    *(void *)(v9 + 32) = sub_10030B43C(v10, v11, v12, v13, v14, v15, v16);
    *(void *)(v9 + 40) = v17;
    uint64_t v21 = v9;
    __chkstk_darwin();
    void v18[2] = v8;
    v18[3] = v7;
    v18[4] = v6;
    v18[5] = v5;
    sub_10031E530(v4, v3, v2, (uint64_t)sub_10030092C, (uint64_t)v18, (uint64_t)&v21);
    sub_10031E1C0();
    *uint64_t v20 = v21;
  }
}

void sub_1002FCD68(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v8)
  {
    *a8 = sub_10030B43C(a1, a2, a3, a4, a5, a6, a7);
    a8[1] = v17;
  }
}

uint64_t sub_1002FCDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = swift_allocObject();
  void v18[2] = a4;
  v18[3] = a5;
  v18[4] = a6;
  v18[5] = a7;
  uint64_t v16 = sub_10032CFD8(a1, a2, a3, (uint64_t)sub_100300910, (uint64_t)v18, (uint64_t)&type metadata for Capability);
  if (v7) {
    return swift_deallocUninitializedObject();
  }
  *(void *)(v15 + 16) = v16;
  return v15 | 4;
}

void sub_1002FCECC()
{
  sub_100301100();
  sub_10031E2BC(v1, v2, v3);
  if (!v0)
  {
    sub_100300EAC();
    swift_retain();
    sub_10030105C();
    sub_10032B5EC();
    uint64_t v5 = v4;
    sub_100300EAC();
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = _swiftEmptyArrayStorage;
    if (v5) {
      uint64_t v7 = v5;
    }
    *(void *)(v6 + 16) = v7;
  }
}

void sub_1002FCFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100300E6C(a1, a2, a3);
  if (!v4)
  {
    sub_100300D44();
    *uint64_t v3 = sub_10030B4D0();
    v3[1] = v5;
  }
}

void sub_1002FCFEC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E2BC((uint64_t)a1, a2, a3);
  if (!v7)
  {
    uint64_t v15 = swift_allocObject();
    *(_DWORD *)(v15 + 16) = sub_1002FAAB0(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void))sub_100300C24);
  }
}

void sub_1002FD0D0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_10031E2BC((uint64_t)a1, a2, a3);
  if (!v3)
  {
    uint64_t v7 = swift_allocObject();
    *(_DWORD *)(v7 + 16) = sub_100307D88(a1, a2, a3);
  }
}

void sub_1002FD198(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_10031E2BC((uint64_t)a1, a2, a3);
  if (!v3)
  {
    uint64_t v7 = swift_allocObject();
    *(_DWORD *)(v7 + 16) = sub_1002FA98C(a1, a2, a3);
  }
}

uint64_t sub_1002FD268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = a2;
  sub_10031E2BC(a1, a2, a3);
  if (!v7)
  {
    sub_10000566C(&qword_100712360);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005F6680;
    uint64_t v22 = a3;
    uint64_t v16 = a7;
    uint64_t v17 = (void *)swift_allocObject();
    _OWORD v17[2] = a4;
    v17[3] = a5;
    v17[4] = a6;
    v17[5] = v16;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_100300848;
    *(void *)(v18 + 24) = v17;
    *(void *)(inited + 32) = sub_100300208;
    *(void *)(inited + 40) = v18;
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = a4;
    v19[3] = a5;
    v19[4] = a6;
    v19[5] = v16;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = sub_100300864;
    *(void *)(v20 + 24) = v19;
    *(void *)(inited + 48) = sub_100300208;
    *(void *)(inited + 56) = v20;
    *(void *)(inited + 64) = sub_1002FDD10;
    *(void *)(inited + 72) = 0;
    *(void *)(inited + 80) = sub_1002FDD44;
    *(void *)(inited + 88) = 0;
    swift_retain_n();
    uint64_t v13 = sub_10033EBE0(inited, a1, v13, v22, 0xD000000000000020, 0x80000001005E63C0, 289);
    swift_setDeallocating();
    sub_10034A020();
  }
  return v13;
}

void sub_1002FD458(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_10031E1C0();
  if (!v3)
  {
    uint64_t v7 = sub_10032D3F0(a1, a2, a3, 1);
    if (((unint64_t)v7 & 0x8000000000000000) != 0)
    {
      sub_100296090();
      swift_allocError();
      void *v8 = 0xD000000000000011;
      v8[1] = 0x80000001005E65D0;
      v8[2] = 0xD000000000000020;
      v8[3] = 0x80000001005E63C0;
      v8[4] = 167;
      swift_willThrow();
    }
    else
    {
      *(void *)(swift_allocObject() + 16) = v7;
    }
  }
}

void sub_1002FD578(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_10031E1C0();
  if (!v3)
  {
    uint64_t v7 = sub_10032D3F0(a1, a2, a3, 1);
    if (((unint64_t)v7 & 0x8000000000000000) != 0)
    {
      sub_100296090();
      swift_allocError();
      void *v8 = 0xD000000000000011;
      v8[1] = 0x80000001005E65D0;
      v8[2] = 0xD000000000000020;
      v8[3] = 0x80000001005E63C0;
      v8[4] = 167;
      swift_willThrow();
    }
    else
    {
      *(void *)(swift_allocObject() + 16) = v7;
    }
  }
}

unint64_t sub_1002FD698()
{
  return 0x8000000000000058;
}

unint64_t sub_1002FD6E0()
{
  return 0x8000000000000060;
}

unint64_t sub_1002FD72C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FDF90();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FD760@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FDF98();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FD794@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FDFA4();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FD7C8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FDFB0();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FD7FC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FDFBC();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FD830@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FDFC8();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FD864@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FDFD4();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FD898@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FDFE0();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FD8CC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FDFEC();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FD900@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE048();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FD934@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE054();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FD968@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE060();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FD99C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE06C();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FD9D0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE078();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FDA04@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE084();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FDA38@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE090();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FDA6C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE09C();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FDAA0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE0A8();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FDAD4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE0B4();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FDB08@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE0C0();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FDB3C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE0CC();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FDB70@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE0D8();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FDBA4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE0E4();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FDBD8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE0F0();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FDC0C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE0FC();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FDC40@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE108();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FDC74@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE114();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FDCA8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE120();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FDCDC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FE12C();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FDD10@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FD698();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_1002FDD44@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002FD6E0();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

void sub_1002FDD78()
{
  sub_100300D88();
  sub_10031E2BC(v1, v2, v3);
  if (!v0)
  {
    sub_100301074();
    sub_10031E1C0();
    swift_retain();
    sub_100300D44();
    uint64_t v4 = sub_10032D224();
    *(void *)(swift_allocObject() + 16) = v4;
  }
}

uint64_t sub_1002FDE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = swift_allocObject();
  swift_retain();
  uint64_t v16 = sub_100324694(a1, a2, a3, a4, a5, a6, a7);
  if (v7) {
    return swift_deallocUninitializedObject();
  }
  *(void *)(v15 + 16) = v16;
  *(void *)(v15 + 24) = v17;
  uint64_t result = v15 | 0x3000000000000000;
  *(void *)(v15 + 32) = v18;
  return result;
}

void sub_1002FDEF4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  sub_10030A634(a1, a2, a3, a4);
  if (!v4)
  {
    uint64_t v7 = v5;
    uint64_t v8 = v6;
    sub_1003011D0();
    uint64_t v12 = sub_10032A0B0(v9, v10, v11);
    uint64_t v14 = v13;
    uint64_t v15 = (void *)sub_1002E1F90();
    v15[2] = v7;
    v15[3] = v8;
    v15[4] = v12;
    v15[5] = v14;
  }
}

unint64_t sub_1002FDF90()
{
  return 0x8000000000000000;
}

unint64_t sub_1002FDF98()
{
  return 0x8000000000000008;
}

unint64_t sub_1002FDFA4()
{
  return 0x8000000000000070;
}

unint64_t sub_1002FDFB0()
{
  return 0x8000000000000078;
}

unint64_t sub_1002FDFBC()
{
  return 0x80000000000000C8;
}

unint64_t sub_1002FDFC8()
{
  return 0x80000000000000C0;
}

unint64_t sub_1002FDFD4()
{
  return 0x8000000000000048;
}

unint64_t sub_1002FDFE0()
{
  return 0x80000000000000E8;
}

unint64_t sub_1002FDFEC()
{
  return 0x8000000000000090;
}

uint64_t sub_1002FDFF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t))
{
  sub_100300D88();
  swift_retain();
  uint64_t v9 = sub_100300D44();
  return a8(v9);
}

unint64_t sub_1002FE048()
{
  return 0x80000000000000B0;
}

unint64_t sub_1002FE054()
{
  return 0x8000000000000080;
}

unint64_t sub_1002FE060()
{
  return 0x80000000000000A8;
}

unint64_t sub_1002FE06C()
{
  return 0x80000000000000A0;
}

unint64_t sub_1002FE078()
{
  return 0x80000000000000D0;
}

unint64_t sub_1002FE084()
{
  return 0x8000000000000050;
}

unint64_t sub_1002FE090()
{
  return 0x80000000000000E0;
}

unint64_t sub_1002FE09C()
{
  return 0x8000000000000098;
}

unint64_t sub_1002FE0A8()
{
  return 0x8000000000000040;
}

unint64_t sub_1002FE0B4()
{
  return 0x80000000000000D8;
}

unint64_t sub_1002FE0C0()
{
  return 0x8000000000000010;
}

unint64_t sub_1002FE0CC()
{
  return 0x8000000000000088;
}

unint64_t sub_1002FE0D8()
{
  return 0x8000000000000018;
}

unint64_t sub_1002FE0E4()
{
  return 0x8000000000000020;
}

unint64_t sub_1002FE0F0()
{
  return 0x80000000000000B8;
}

unint64_t sub_1002FE0FC()
{
  return 0x8000000000000028;
}

unint64_t sub_1002FE108()
{
  return 0x8000000000000030;
}

unint64_t sub_1002FE114()
{
  return 0x80000000000000F0;
}

unint64_t sub_1002FE120()
{
  return 0x8000000000000068;
}

unint64_t sub_1002FE12C()
{
  return 0x8000000000000038;
}

void sub_1002FE138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  sub_1002F3280();
  sub_100300E48();
  if (!v5)
  {
    if (__OFADD__(v7, 1))
    {
      __break(1u);
    }
    else
    {
      if (v7 + 1 >= v6)
      {
        sub_1002DB5BC();
        sub_10020DD10();
        *uint64_t v14 = v6;
        uint64_t v15 = _swiftEmptyArrayStorage;
      }
      else
      {
        uint64_t v50 = v4;
        uint64_t v10 = *(void *)v8;
        int v54 = *(_DWORD *)(v8 + 8);
        int v52 = *(_DWORD *)(v8 + 16);
        int v53 = *(_DWORD *)(v8 + 12);
        __int16 v51 = *(_WORD *)(v8 + 20);
        char v11 = *(unsigned char *)(v8 + 22);
        if (v7 + 2 >= v6)
        {
          sub_1002DB5BC();
          sub_10020DD10();
          *uint64_t v16 = v6;
          swift_retain();
          Swift::String v55 = _swiftEmptyArrayStorage;
          int v17 = v54;
          int v19 = v52;
          int v18 = v53;
          __int16 v20 = v51;
        }
        else
        {
          swift_retain_n();
          sub_10031F63C(v8, v7 + 2, v6);
          uint64_t v22 = v21;
          uint64_t v42 = v7 + 2;
          uint64_t v47 = v7 + 3;
          Swift::String v55 = _swiftEmptyArrayStorage;
          int v23 = v52;
          char v48 = v11;
          __int16 v49 = v51;
          int v44 = v53;
          int v24 = v54;
          uint64_t v40 = v10;
          char v39 = v11;
          uint64_t v41 = a4;
          while (1)
          {
            int v43 = v24;
            uint64_t v25 = sub_10031E368(v22, v12, v13 & 0xFFFFFFFFFFFFFFLL, 0xD000000000000020, 0x80000001005E63C0, 107);
            int v17 = v26;
            uint64_t v45 = a4(v25);
            uint64_t v28 = v27;
            swift_release();
            swift_bridgeObjectRelease();
            int v18 = v47;
            if (v47 >= v6) {
              break;
            }
            uint64_t v46 = v28;
            sub_1003011DC();
            sub_100337E64();
            swift_retain();
            sub_100300F8C();
            swift_release();
            if (v56 < 0)
            {
              sub_100296090();
              sub_10020DD10();
              *uint64_t v36 = 0xD000000000000011;
              v36[1] = 0x80000001005E65D0;
              v36[2] = 0xD000000000000020;
              v36[3] = 0x80000001005E63C0;
              v36[4] = 167;
              swift_willThrow();
              swift_bridgeObjectRelease();
              int v17 = v43;
              int v18 = v44;
              goto LABEL_17;
            }
            sub_1003011DC();
            sub_100337E64();
            swift_retain();
            sub_100300F8C();
            swift_release();
            swift_release_n();
            uint64_t v29 = v55;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_100233480();
              uint64_t v29 = v34;
            }
            a4 = v41;
            uint64_t v30 = v42;
            unint64_t v31 = v29[2];
            Swift::String v55 = v29;
            if (v31 >= v29[3] >> 1)
            {
              sub_100233480();
              uint64_t v30 = v42;
              Swift::String v55 = v35;
            }
            v55[2] = v31 + 1;
            uint64_t v32 = &v55[4 * v31];
            v32[4] = v45;
            v32[5] = v46;
            v32[6] = v56;
            v32[7] = v56;
            swift_retain();
            sub_100337E64();
            swift_release();
            uint64_t v10 = *(void *)v8;
            int v24 = *(_DWORD *)(v8 + 8);
            int v44 = *(_DWORD *)(v8 + 12);
            int v23 = *(_DWORD *)(v8 + 16);
            char v48 = *(unsigned char *)(v8 + 22);
            __int16 v49 = *(_WORD *)(v8 + 20);
            swift_retain_n();
            sub_10031F63C(v8, v30, v6);
            uint64_t v22 = v33;
          }
          sub_1002DB5BC();
          sub_10020DD10();
          uint64_t v10 = v40;
          uint64_t *v37 = v6;
          sub_100301134();
          char v48 = v39;
          Swift::String v55 = v38;
          swift_willThrow();
          swift_bridgeObjectRelease();
LABEL_17:
          swift_release();
          *(void *)uint64_t v8 = v10;
          *(_DWORD *)(v8 + 8) = v17;
          *(_DWORD *)(v8 + 12) = v18;
          __int16 v20 = v49;
          int v19 = v23;
          *(_DWORD *)(v8 + 16) = v23;
          *(_WORD *)(v8 + 20) = v49;
          char v11 = v48;
          *(unsigned char *)(v8 + 22) = v48;
        }
        swift_willThrow();
        swift_release();
        *(void *)uint64_t v8 = v10;
        *(_DWORD *)(v8 + 8) = v17;
        *(_DWORD *)(v8 + 12) = v18;
        *(_DWORD *)(v8 + 16) = v19;
        *(_WORD *)(v8 + 20) = v20;
        *(unsigned char *)(v8 + 22) = v11;
        uint64_t v4 = v50;
        uint64_t v15 = v55;
      }
      swift_willThrow();
      swift_errorRetain();
      sub_10000566C(qword_100710378);
      if (swift_dynamicCast())
      {
        swift_errorRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        sub_100300E48();
        *uint64_t v4 = v15;
      }
      else
      {
        swift_errorRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
}

#error "1002FE8AC: call analysis failed (funcsize=89)"

void sub_1002FE984(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  sub_10031E1C0();
  if (!v8)
  {
    sub_100308D44(a1, a2, a3, a4, a5, a6, a7, v16, v33, v35, v37, v39, v40, v42, v44, v46, v48, a8, v53,
      v55,
      v57,
      v59,
      v61,
      v63,
      v65,
      v67);
    unsigned int v18 = v17;
    uint64_t v36 = a4;
    uint64_t v38 = a5;
    uint64_t v41 = (void (*)())a7;
    unint64_t v19 = HIDWORD(v17);
    uint64_t v21 = v20;
    unint64_t v23 = v22;
    swift_beginAccess();
    v24._rawValue = (void *)sub_1001F9054(*(void *)(v21 + 24) + ((v23 >> 24) & 0xFFFF00 | BYTE6(v23)) + v18, v19 - v18);
    NIOIMAPCore2::MailboxName v69 = MailboxName.init(_:)(v24);
    rawValue = v69.bytes._rawValue;
    LODWORD(v23) = v69._hashValue._value;
    swift_release();
    sub_10031E2BC(a1, a2, a3);
    sub_100308D44(a1, a2, a3, v36, v38, a6, (uint64_t)v41, v26, v34, v36, v38, a6, v41, v43, v45, v47, v49, v51, v54,
      v56,
      v58,
      v60,
      v62,
      v64,
      v66,
      v68);
    *(void *)uint64_t v52 = rawValue;
    *(_DWORD *)(v52 + 8) = v23;
    *(void *)(v52 + 16) = v27;
    *(_DWORD *)(v52 + 24) = v28;
    *(_DWORD *)(v52 + 28) = v29;
    *(_DWORD *)(v52 + 32) = v30;
    *(_WORD *)(v52 + 36) = v31;
    *(unsigned char *)(v52 + 38) = v32;
    type metadata accessor for ResponsePayload();
    swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_1002FEB3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v49 = a7;
  uint64_t v48 = a6;
  uint64_t v51 = a8;
  uint64_t v13 = sub_10000566C(&qword_100712370);
  __chkstk_darwin(v13 - 8);
  uint64_t v44 = (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000566C(&qword_100710A00);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  unsigned int v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v42 - v20;
  __chkstk_darwin(v19);
  unint64_t v23 = (char *)&v42 - v22;
  sub_10000566C(&qword_100710698);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6670;
  uint64_t v46 = a2;
  uint64_t v47 = a1;
  uint64_t v45 = a3;
  uint64_t v25 = v50;
  uint64_t v26 = sub_1002FFD08(a1, a2, a3, a4, a5, v48, v49, (uint64_t)&unk_1006D7540, (uint64_t)sub_100300BA8, (uint64_t)sub_100300BD8, (uint64_t (*)(uint64_t, void *, uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_10033CB54);
  if (v25)
  {
    *(void *)(inited + 16) = 0;
    return swift_release();
  }
  else
  {
    uint64_t v50 = v18;
    int v43 = v23;
    *(void *)(inited + 32) = v26;
    uint64_t v55 = inited;
    __chkstk_darwin(v26);
    sub_10031EBA4();
    uint64_t v28 = v55;
    sub_100223B18();
    sub_1005E3680();
    uint64_t v29 = *(void *)(v28 + 16);
    uint64_t v31 = (uint64_t)v50;
    uint64_t v30 = v51;
    if (v29)
    {
      uint64_t v49 = 0;
      uint64_t result = swift_bridgeObjectRetain();
      char v32 = (unsigned int *)(v28 + 36);
      while (1)
      {
        int v33 = *(v32 - 1);
        BOOL v34 = v33 != 0;
        unsigned int v35 = v33 - 1;
        if (!v34) {
          break;
        }
        if (!*v32) {
          goto LABEL_16;
        }
        unsigned int v36 = *v32;
        if (v35 > *v32) {
          goto LABEL_17;
        }
        unsigned int v53 = v35;
        unsigned int v54 = v36;
        if (v36 != v35)
        {
          sub_10000566C(&qword_100710538);
          char v37 = (uint64_t (*)(char *, void))sub_1005E3620();
          sub_10000566C(&qword_1007109E8);
          sub_1005E35D0();
          uint64_t v30 = v51;
          uint64_t result = v37(v52, 0);
          uint64_t v31 = (uint64_t)v50;
        }
        v32 += 2;
        if (!--v29)
        {
          swift_bridgeObjectRelease();
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
    }
    else
    {
LABEL_13:
      swift_bridgeObjectRelease();
      uint64_t v38 = (uint64_t)v43;
      sub_10025406C((uint64_t)v21, (uint64_t)v43, &qword_100710A00);
      sub_1001F36E4(v38, v31, &qword_100710A00);
      uint64_t v39 = v44;
      sub_10024E2CC(v31, v44);
      uint64_t v40 = sub_10000566C(&qword_1007104C8);
      if (getEnumTagSinglePayload for ClientCommand(v39, 1, v40) == 1)
      {
        sub_1001F3A28(v39, &qword_100712370);
        sub_100296090();
        swift_allocError();
        void *v41 = 0xD000000000000016;
        v41[1] = 0x80000001005E6890;
        v41[2] = 0xD000000000000020;
        v41[3] = 0x80000001005E63C0;
        v41[4] = 103;
        swift_willThrow();
        return sub_1001F3A28(v38, &qword_100710A00);
      }
      else
      {
        sub_1001F3A28(v38, &qword_100710A00);
        return sub_10025406C(v39, v30, &qword_1007104C8);
      }
    }
  }
  return result;
}

uint64_t sub_1002FEFC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v48 = a7;
  uint64_t v47 = a6;
  uint64_t v50 = a8;
  sub_10000566C(&qword_1007116F8);
  __chkstk_darwin();
  uint64_t v43 = (uint64_t)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100710528);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v41 - v16;
  __chkstk_darwin();
  uint64_t v19 = (char *)&v41 - v18;
  sub_10000566C(&qword_100710658);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6670;
  uint64_t v45 = a2;
  uint64_t v46 = a1;
  uint64_t v44 = a3;
  uint64_t v21 = v49;
  uint64_t v22 = sub_1002FFD08(a1, a2, a3, a4, a5, v47, v48, (uint64_t)&unk_1006D7090, (uint64_t)sub_100300774, (uint64_t)sub_1003007A4, (uint64_t (*)(uint64_t, void *, uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_10033CB54);
  if (v21)
  {
    *(void *)(inited + 16) = 0;
    return swift_release();
  }
  else
  {
    uint64_t v49 = v15;
    uint64_t v42 = v19;
    *(void *)(inited + 32) = v22;
    uint64_t v54 = inited;
    __chkstk_darwin();
    sub_10031EB64();
    uint64_t v24 = v54;
    sub_100223B18();
    sub_1005E3680();
    uint64_t v25 = *(void *)(v24 + 16);
    uint64_t v27 = (uint64_t)v49;
    uint64_t v26 = v50;
    if (v25)
    {
      uint64_t v48 = 0;
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v28 = (unsigned int *)(v24 + 36);
      while (1)
      {
        int v29 = *(v28 - 1);
        BOOL v30 = v29 != 0;
        unsigned int v31 = v29 - 1;
        if (!v30) {
          break;
        }
        if (!*v28) {
          goto LABEL_16;
        }
        unsigned int v32 = *v28;
        if (v31 > *v28) {
          goto LABEL_17;
        }
        unsigned int v52 = v31;
        unsigned int v53 = v32;
        if (v32 != v31)
        {
          sub_10000566C(&qword_100710538);
          int v33 = (uint64_t (*)(char *, void))sub_1005E3620();
          sub_10000566C(&qword_1007109E8);
          sub_1005E35D0();
          uint64_t v26 = v50;
          uint64_t result = v33(v51, 0);
          uint64_t v27 = (uint64_t)v49;
        }
        v28 += 2;
        if (!--v25)
        {
          swift_bridgeObjectRelease();
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
    }
    else
    {
LABEL_13:
      swift_bridgeObjectRelease();
      uint64_t v34 = (uint64_t)v42;
      sub_10025406C((uint64_t)v17, (uint64_t)v42, &qword_100710528);
      sub_1001F36E4(v34, v27, &qword_100710528);
      uint64_t v35 = v43;
      sub_10024E2B8(v27, v43);
      uint64_t v36 = sub_10000566C(&qword_100710520);
      if (getEnumTagSinglePayload for ClientCommand(v35, 1, v36) == 1)
      {
        sub_1001F3A28(v35, &qword_1007116F8);
        sub_100296090();
        sub_10020DD10();
        void *v37 = 0xD000000000000016;
        v37[1] = 0x80000001005E6890;
        sub_1003011F0();
        v38[2] = v39;
        v38[3] = v40;
        v38[4] = 103;
        swift_willThrow();
        return sub_1001F3A28(v34, &qword_100710528);
      }
      else
      {
        sub_1001F3A28(v34, &qword_100710528);
        return sub_10025406C(v35, v26, &qword_100710520);
      }
    }
  }
  return result;
}

uint64_t sub_1002FF448(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      uint64_t *v12 = a3;
    }
    else
    {
      uint64_t v11 = result;
      sub_100301028();
      swift_retain();
      sub_100338020(v11, v9, a3, 0, 0x2AuLL, 0xE100000000000000, 0);
      if (!v3)
      {
        swift_release();
        return 0xFFFFFFFFLL;
      }
      swift_release();
      *(void *)uint64_t v11 = v4;
      *(void *)(v11 + 8) = v8;
      *(_DWORD *)(v11 + 16) = v5;
      *(_WORD *)(v11 + 20) = v6;
      *(unsigned char *)(v11 + 22) = v7;
    }
    swift_willThrow();
    return 0xFFFFFFFFLL;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002FF52C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1002FA98C(a1, a2, a3);
}

uint64_t sub_1002FF544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v12 = (void *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a7;
  swift_retain();
  unsigned int v18 = sub_10033CC30((uint64_t)sub_100300D1C, 0, (uint64_t)sub_100300C08, (uint64_t)v12);
  uint64_t result = swift_release();
  if (!v7)
  {
    swift_retain();
    uint64_t v14 = sub_10032A708();
    uint64_t v15 = v14;
    if ((v14 & 0x100000000) != 0)
    {
      unsigned int v16 = v18;
      uint64_t v15 = v18;
    }
    else
    {
      unsigned int v16 = v18;
      if (v18 > v14)
      {
        sub_1005E2C80(20);
        v19._countAndFlagsBits = 0x2064696C61766E49;
        v19._object = (void *)0xEF202C65676E6172;
        sub_1005E1E30(v19);
        sub_1005E2E90();
        v20._countAndFlagsBits = 58;
        v20._object = (void *)0xE100000000000000;
        sub_1005E1E30(v20);
        sub_1005E2E90();
        sub_100296090();
        swift_allocError();
        *uint64_t v17 = 0;
        v17[1] = 0xE000000000000000;
        _OWORD v17[2] = 0xD000000000000020;
        v17[3] = 0x80000001005E63C0;
        v17[4] = 51;
        return swift_willThrow();
      }
    }
    return v16 | (unint64_t)(v15 << 32);
  }
  return result;
}

uint64_t sub_1002FF7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v12 = (void *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a7;
  swift_retain();
  unsigned int v18 = sub_10033CC30((uint64_t)sub_1003007D4, 0, (uint64_t)sub_10030082C, (uint64_t)v12);
  uint64_t result = swift_release();
  if (!v7)
  {
    swift_retain();
    uint64_t v14 = sub_10032AFFC();
    uint64_t v15 = v14;
    if ((v14 & 0x100000000) != 0)
    {
      unsigned int v16 = v18;
      uint64_t v15 = v18;
    }
    else
    {
      unsigned int v16 = v18;
      if (v18 > v14)
      {
        sub_1005E2C80(20);
        v19._countAndFlagsBits = 0x2064696C61766E49;
        v19._object = (void *)0xEF202C65676E6172;
        sub_1005E1E30(v19);
        sub_1005E2E90();
        v20._countAndFlagsBits = 58;
        v20._object = (void *)0xE100000000000000;
        sub_1005E1E30(v20);
        sub_1005E2E90();
        sub_100296090();
        swift_allocError();
        *uint64_t v17 = 0;
        v17[1] = 0xE000000000000000;
        _OWORD v17[2] = 0xD000000000000020;
        v17[3] = 0x80000001005E63C0;
        v17[4] = 51;
        return swift_willThrow();
      }
    }
    return v16 | (unint64_t)(v15 << 32);
  }
  return result;
}

void sub_1002FF9FC()
{
  sub_10030108C();
  uint64_t v5 = v4;
  sub_1002E1CA8();
  __int16 v6 = (void *)sub_1002E1F90();
  v6[2] = v3;
  v6[3] = v2;
  v6[4] = v1;
  v6[5] = v5;
  swift_retain();
  unsigned int v9 = sub_10033CC30((uint64_t)sub_100300D1C, 0, (uint64_t)sub_1003008F4, (uint64_t)v6);
  swift_release();
  if (!v0)
  {
    swift_retain();
    sub_100300F18();
    uint64_t v7 = sub_10032B8BC();
    if ((v7 & 0x100000000) == 0 && v9 > v7)
    {
      sub_1005E2C80(20);
      v10._countAndFlagsBits = 0x2064696C61766E49;
      v10._object = (void *)0xEF202C65676E6172;
      sub_1005E1E30(v10);
      sub_1003010A8();
      v11._countAndFlagsBits = 58;
      v11._object = (void *)0xE100000000000000;
      sub_1005E1E30(v11);
      sub_1003010A8();
      sub_100296090();
      sub_10020DD10();
      void *v8 = 0;
      v8[1] = 0xE000000000000000;
      v8[2] = 0xD000000000000020;
      v8[3] = 0x80000001005E63C0;
      v8[4] = 51;
      swift_willThrow();
    }
  }
  sub_100301040();
}

uint64_t sub_1002FFBE0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (uint64_t)sub_10032D3F0(a1, a2, a3, 0);
  if (!v3)
  {
    if (result < 0)
    {
      sub_100296090();
      swift_allocError();
      *uint64_t v5 = 0xD000000000000011;
      unint64_t v6 = 0x80000001005E65D0;
      uint64_t v7 = 167;
    }
    else
    {
      if ((unint64_t)(result - 0x100000000) >= 0xFFFFFFFF00000001) {
        return result | (result << 32);
      }
      sub_100296090();
      swift_allocError();
      *uint64_t v5 = 0xD00000000000001DLL;
      unint64_t v6 = 0x80000001005E6870;
      uint64_t v7 = 76;
    }
    v5[1] = v6;
    v5[2] = 0xD000000000000020;
    v5[3] = 0x80000001005E63C0;
    v5[4] = v7;
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1002FFCD4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7 = sub_1002FAAB0(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void))sub_1002FA1CC);
  return v7 | ((unint64_t)v7 << 32);
}

uint64_t sub_1002FFD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t, void *, uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v17 = (void *)sub_1002E1F90();
  _OWORD v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v27 = a7;
  swift_retain();
  sub_1003011F0();
  uint64_t v20 = a11(a9, v17, a10, v23, a1, a2, a3, 0xD000000000000020, v19, v18);
  swift_release();
  return v20;
}

uint64_t sub_1002FFDF8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v11 = a3;
    if (v9 >= a3)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *uint64_t v20 = v11;
      swift_retain();
    }
    else
    {
      uint64_t v16 = result;
      uint64_t v17 = *(void *)result;
      uint64_t v18 = *(void *)(result + 8);
      __int16 v22 = *(_WORD *)(result + 20);
      int v23 = *(_DWORD *)(result + 16);
      char v21 = *(unsigned char *)(result + 22);
      swift_retain();
      swift_retain();
      uint64_t v19 = a8(v16, v9, v11, a4, a5, a6, a7);
      if (!v8)
      {
        uint64_t v11 = v19;
        swift_release();
        swift_release();
        return v11;
      }
      swift_release();
      *(void *)uint64_t v16 = v17;
      *(void *)(v16 + 8) = v18;
      *(_DWORD *)(v16 + 16) = v23;
      *(_WORD *)(v16 + 20) = v22;
      *(unsigned char *)(v16 + 22) = v21;
    }
    swift_willThrow();
    swift_release();
    return v11;
  }
  __break(1u);
  return result;
}

void sub_1002FFF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t, void *, uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))
{
  sub_100300D88();
  sub_100301074();
  sub_10031E1C0();
  if (!v11)
  {
    uint64_t v13 = sub_100300D44();
    sub_1002FFD08(v13, v14, v15, v16, v17, v18, v19, a8, a9, a10, a11);
  }
}

uint64_t sub_1002FFFC4@<X0>(uint64_t a1@<X8>)
{
  return sub_100300044((uint64_t (*)(void))sub_1002FEB3C, a1, &qword_1007104C8);
}

uint64_t sub_100300004@<X0>(uint64_t a1@<X8>)
{
  return sub_100300044((uint64_t (*)(void))sub_1002FEFC8, a1, &qword_100710520);
}

uint64_t sub_100300044@<X0>(uint64_t (*a1)(void)@<X7>, uint64_t a2@<X8>, uint64_t *a3)
{
  uint64_t result = a1();
  if (!v3)
  {
    uint64_t v6 = sub_10000566C(a3);
    return storeEnumTagSinglePayload for ClientCommand(a2, 0, 1, v6);
  }
  return result;
}

void sub_100300094(uint64_t a1@<X8>)
{
}

void sub_1003000B4(uint64_t a1@<X8>)
{
}

void sub_1003000D4(uint64_t *a1@<X3>, uint64_t a2@<X8>)
{
  sub_10031E1C0();
  if (!v2)
  {
    uint64_t v5 = sub_10000566C(a1);
    storeEnumTagSinglePayload for ClientCommand(a2, 1, 1, v5);
  }
}

uint64_t sub_100300148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_100024668(a1, a2);
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(void *)(*(void *)(a3 + 56) + 16 * v4);
  swift_retain();
  return v6;
}

uint64_t sub_1003001A0()
{
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003001D8()
{
  sub_1002E1C9C();
  return sub_1002FDFF8(v0, v1, v2, v3, v4, v5, v6, (uint64_t (*)(uint64_t))sub_1003252A4);
}

uint64_t sub_100300208@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_100300880(a1, a2, a3);
}

uint64_t sub_100300220()
{
  sub_1002E1C9C();
  return sub_1002FCAC8(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10030023C()
{
  sub_1002E1C9C();
  return sub_1002FCDEC(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_100300258()
{
  sub_1002E1C9C();
  return sub_1002FDFF8(v0, v1, v2, v3, v4, v5, v6, (uint64_t (*)(uint64_t))sub_100325468);
}

void sub_100300288()
{
  sub_1002E1C9C();
  sub_1002FC908(v0, v1, v2);
}

uint64_t sub_1003002A4()
{
  sub_1002E1C9C();
  return sub_1002FD268(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1003002C0()
{
  sub_1002E1C9C();
  sub_1002FC7CC(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1003002DC()
{
  sub_1002E1C9C();
  return sub_1002FDE28(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1003002F8()
{
}

void sub_100300314()
{
  sub_1002E1C9C();
  sub_1002FC9D8(v0, v1, v2);
}

void sub_100300330()
{
  sub_1002E1C9C();
  sub_1002FCFEC(v0, v1, v2, v3, v4, v5, v6);
}

void sub_10030034C()
{
  sub_1002E1C9C();
  sub_1002FD0D0(v0, v1, v2);
}

void sub_100300368()
{
  sub_1002E1C9C();
  sub_1002FD198(v0, v1, v2);
}

void sub_100300384()
{
}

uint64_t sub_1003003A0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003003E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002FA710(a1, a2, a3, *(void *)(v3 + 48));
}

void sub_100300404()
{
  sub_1002E1C9C();
  sub_1002FDEF4(v0, v1, v2, v3);
}

uint64_t sub_100300420()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100300458()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100300498@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _DWORD *a4@<X8>)
{
  uint64_t result = sub_1002FF52C(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_1003004C4()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003004FC()
{
  return sub_100300F34(v0, 20);
}

uint64_t sub_100300508()
{
  if (*(void *)(v0 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 40) != 1) {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 144);
  if (v1 < 0xFFFFFFFE00000000 || (v2 & 0xFFFFFFFFFFFFFE00) != 0x200) {
    sub_100217220(*(void *)(v0 + 80), *(void *)(v0 + 88), v1, *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), v2, *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192), *(void *)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 216), *(void *)(v0 + 224),
  }
      *(_OWORD *)(v0 + 232),
      *(void *)(v0 + 240),
      *(void *)(v0 + 248));
  return _swift_deallocObject(v0, 272, 7);
}

uint64_t sub_1003005E0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100300628()
{
  sub_1002E1C9C();
  return sub_100300044((uint64_t (*)(void))sub_1002FEFC8, v0, &qword_100710520);
}

void sub_10030066C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, void *, uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))
{
  sub_1002FFF4C(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12);
  if (!v12) {
    *a9 = v14;
  }
}

void sub_1003006B0()
{
  sub_1002E1C9C();
  sub_10030066C(v0, v1, v2, v3, v4, v5, v6, (uint64_t)&unk_1006D7090, v7, (uint64_t)sub_100300774, (uint64_t)sub_1003007A4, (uint64_t (*)(uint64_t, void *, uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_10033CB54);
}

uint64_t sub_100300718@<X0>(uint64_t (*a1)(void)@<X7>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100300748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X7>, uint64_t *a9@<X8>)
{
  uint64_t result = sub_1002FFDF8(a1, a2, a3, a4, a5, a6, a7, a8);
  if (!v9) {
    *a9 = result;
  }
  return result;
}

uint64_t sub_100300774()
{
  sub_1002E1C9C();
  return sub_100300748(v0, v1, v2, v3, v4, v5, v6, sub_1002FF7A0, v7);
}

uint64_t sub_1003007A4()
{
  sub_1002E1C9C();
  return sub_100300718((uint64_t (*)(void))sub_1002FFCD4, v0);
}

uint64_t sub_1003007D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _DWORD *a4@<X8>)
{
  uint64_t result = sub_1002FF448(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_100300800@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _DWORD *a8@<X8>)
{
  uint64_t result = sub_1002FAA84(a1, a2, a3, a4, a5, a6, a7);
  if (!v8) {
    *a8 = result;
  }
  return result;
}

uint64_t sub_10030082C()
{
  sub_1002E1C9C();
  return sub_100300800(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_100300848()
{
  sub_1002E1C9C();
  sub_1002FD458(v0, v1, v2);
}

void sub_100300864()
{
  sub_1002E1C9C();
  sub_1002FD578(v0, v1, v2);
}

uint64_t sub_100300880@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void, void))(v3 + 16))(a1, *a2, a2[1]);
  if (!v4) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1003008BC()
{
  return sub_100300F34(v0, 24);
}

uint64_t sub_1003008C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _DWORD *a8@<X8>)
{
  uint64_t result = sub_1002FAA58(a1, a2, a3, a4, a5, a6, a7);
  if (!v8) {
    *a8 = result;
  }
  return result;
}

uint64_t sub_1003008F4()
{
  sub_1002E1C9C();
  return sub_1003008C8(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_100300910()
{
}

void sub_10030092C()
{
  sub_1002E1C9C();
  sub_1002FCD68(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_100300948(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ResponsePayload();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1003009A4()
{
  sub_1002E1C9C();
  sub_1002FB430(v0);
}

uint64_t sub_1003009C0()
{
  sub_1002E1C9C();
  return sub_1002FB490(v0, v1, v2);
}

uint64_t sub_1003009DC()
{
  sub_1002E1C9C();
  return sub_1002FB580(v0, v1, v2, v3, v4, v5, v6, (uint64_t (*)(uint64_t))sub_100325780);
}

uint64_t sub_100300A1C()
{
  sub_1002E1C9C();
  return sub_1002FB4D8(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_100300A38()
{
  sub_1002E1C9C();
  return sub_1002FB580(v0, v1, v2, v3, v4, v5, v6, (uint64_t (*)(uint64_t))sub_100325924);
}

void sub_100300A78()
{
  sub_1002E1C9C();
  sub_1002FB670(v0, v1, v2);
}

void sub_100300AA8()
{
  sub_1002E1C9C();
  sub_1002FB670(v0, v1, v2);
}

uint64_t sub_100300AD8()
{
  sub_1002E1C9C();
  return sub_1002FB610(v0);
}

uint64_t sub_100300AF4()
{
  sub_1002E1C9C();
  return sub_1002FB384(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_100300B10()
{
  sub_1002E1C9C();
  sub_1002FB670(v0, v1, v2);
}

void sub_100300B40()
{
  sub_1002E1C9C();
  sub_10030066C(v0, v1, v2, v3, v4, v5, v6, (uint64_t)&unk_1006D7540, v7, (uint64_t)sub_100300BA8, (uint64_t)sub_100300BD8, (uint64_t (*)(uint64_t, void *, uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_10033CB54);
}

uint64_t sub_100300BA8()
{
  sub_1002E1C9C();
  return sub_100300748(v0, v1, v2, v3, v4, v5, v6, sub_1002FF544, v7);
}

uint64_t sub_100300BD8()
{
  sub_1002E1C9C();
  return sub_100300718((uint64_t (*)(void))sub_1002FFBE0, v0);
}

uint64_t sub_100300C08()
{
  sub_1002E1C9C();
  return sub_100300498(v0, v1, v2, v3);
}

uint64_t sub_100300D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _DWORD *a4@<X8>)
{
  return sub_1003007D4(a1, a2, a3, a4);
}

void *sub_100300D34(void *result)
{
  result[2] = v4;
  result[3] = v1;
  result[4] = v3;
  result[5] = v2;
  return result;
}

uint64_t sub_100300D44()
{
  return v0;
}

uint64_t sub_100300D64@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  a1[2] = v2;
  a1[3] = a2 | 0x8000000000000000;
  a1[4] = 78;
  return swift_willThrow();
}

uint64_t sub_100300DA8()
{
  return swift_retain();
}

uint64_t sub_100300DE8()
{
  return swift_retain();
}

uint64_t sub_100300E28(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10031E368(a1, a2, a3, 0xD000000000000020, a5, 76);
}

void sub_100300E48()
{
  sub_10031E1C0();
}

void sub_100300E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10031E2BC(a1, a2, a3);
}

void sub_100300EAC()
{
  sub_10031E1C0();
}

uint64_t sub_100300ED8()
{
  return v0;
}

uint64_t sub_100300EF8()
{
  return v0;
}

uint64_t sub_100300F18()
{
  return v0;
}

uint64_t sub_100300F34(uint64_t a1, uint64_t a2)
{
  return _swift_deallocObject(a1, a2, 7);
}

uint64_t sub_100300F3C()
{
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = v6;
  *(_DWORD *)(v2 + 16) = v4;
  *(_WORD *)(v2 + 20) = v1;
  *(unsigned char *)(v2 + 22) = v3;
  return swift_willThrow();
}

uint64_t sub_100300F64()
{
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = v6;
  *(_DWORD *)(v2 + 16) = v4;
  *(_WORD *)(v2 + 20) = v3;
  *(unsigned char *)(v2 + 22) = v1;
  return swift_willThrow();
}

void sub_100300F8C()
{
  sub_100337A24(v2, v0, v1, 1, (unint64_t *)(v3 - 136));
}

void sub_100300FB4()
{
  v3._countAndFlagsBits = v0;
  v3._object = v1;
  sub_1005E1E30(v3);
}

void sub_100300FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  v12._countAndFlagsBits = a10;
  v12._object = v10;
  sub_1005E1E30(v12);
}

void sub_100301004()
{
  sub_1005E2C80(25);
}

uint64_t sub_1003010A8()
{
  return sub_1005E2E90();
}

void sub_1003010E0()
{
  sub_1005E2C80(25);
}

uint64_t sub_100301114()
{
  return sub_100300148(v2, v0, v1);
}

uint64_t sub_100301148()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100301168()
{
  return swift_release();
}

void sub_100301180()
{
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = v4;
  *(_DWORD *)(v2 + 16) = v1;
  *(_WORD *)(v2 + 20) = v3;
}

uint64_t sub_1003011FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 24) = (v2 - 32) | 0x8000000000000000;
  *(void *)(a1 + 32) = a2;
  return swift_willThrow();
}

void sub_10030121C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1002F2480();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  swift_retain();
  sub_1003075A0();
  sub_10032A084();
  if (v20) {
    goto LABEL_3;
  }
  v44[2] = v37;
  v44[3] = v38;
  sub_10000566C(&qword_100710718);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1005F6670;
  sub_1003075A0();
  sub_1003013F0();
  v44[1] = v44;
  *(void *)(v39 + 32) = v40;
  a10 = v39;
  __chkstk_darwin(v40);
  v43[2] = v30;
  v43[3] = v28;
  v43[4] = v26;
  v43[5] = v24;
  sub_10031E7FC(v36, v34, v32, (uint64_t)sub_100307344, (uint64_t)v43, (uint64_t)&a10);
  uint64_t v41 = a10;
  uint64_t v42 = *(void *)(a10 + 16);
  if (v42)
  {
    if (((*(void *)(a10 + 32) >> 59) & 0x1E | (*(void *)(a10 + 32) >> 2) & 1) == 0x18)
    {
      if (v42 == 1)
      {
        swift_retain();
LABEL_10:
        swift_bridgeObjectRelease();
LABEL_3:
        sub_1002F2468();
        return;
      }
    }
    else if (v42 == 1)
    {
      sub_1002238FC(*(void *)(a10 + 32));
      goto LABEL_10;
    }
    *(void *)(swift_allocObject() + 16) = v41;
    goto LABEL_3;
  }
  __break(1u);
}

void sub_1003013F0()
{
  sub_1002F2480();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  sub_10000566C(&qword_100712388);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6A30;
  uint64_t v8 = (void *)sub_1002E1F90();
  sub_10030750C(v8);
  uint64_t v9 = sub_1002E8414();
  *(void *)(v9 + 16) = sub_100306C38;
  *(void *)(v9 + 24) = v0;
  *(void *)(inited + 32) = sub_100306C54;
  *(void *)(inited + 40) = v9;
  *(void *)(inited + 48) = sub_100304F64;
  *(void *)(inited + 56) = 0;
  Swift::String v10 = (void *)sub_1002E1F90();
  sub_10030750C(v10);
  uint64_t v11 = sub_1002E8414();
  *(void *)(v11 + 16) = sub_100306C6C;
  *(void *)(v11 + 24) = v0;
  *(void *)(inited + 64) = sub_100306C54;
  *(void *)(inited + 72) = v11;
  Swift::String v12 = (void *)sub_1002E1F90();
  sub_10030750C(v12);
  uint64_t v13 = sub_1002E8414();
  *(void *)(v13 + 16) = sub_100306C88;
  *(void *)(v13 + 24) = v0;
  *(void *)(inited + 80) = sub_100306C54;
  *(void *)(inited + 88) = v13;
  uint64_t v14 = (void *)sub_1002E1F90();
  sub_10030750C(v14);
  uint64_t v15 = sub_1002E8414();
  *(void *)(v15 + 16) = sub_100306CA4;
  *(void *)(v15 + 24) = v0;
  *(void *)(inited + 96) = sub_100306C54;
  *(void *)(inited + 104) = v15;
  uint64_t v16 = (void *)sub_1002E1F90();
  sub_10030750C(v16);
  uint64_t v17 = sub_1002E8414();
  *(void *)(v17 + 16) = sub_100306CC0;
  *(void *)(v17 + 24) = v0;
  *(void *)(inited + 112) = sub_100306C54;
  *(void *)(inited + 120) = v17;
  uint64_t v18 = (void *)sub_1002E1F90();
  sub_10030750C(v18);
  uint64_t v19 = sub_1002E8414();
  *(void *)(v19 + 16) = sub_100306D0C;
  *(void *)(v19 + 24) = v0;
  *(void *)(inited + 128) = sub_100306C54;
  *(void *)(inited + 136) = v19;
  uint64_t v20 = (void *)sub_1002E1F90();
  sub_10030750C(v20);
  uint64_t v21 = sub_1002E8414();
  *(void *)(v21 + 16) = sub_100306D28;
  *(void *)(v21 + 24) = v0;
  *(void *)(inited + 144) = sub_100306C54;
  *(void *)(inited + 152) = v21;
  uint64_t v22 = (void *)sub_1002E1F90();
  sub_10030750C(v22);
  uint64_t v23 = sub_1002E8414();
  *(void *)(v23 + 16) = sub_100306D44;
  *(void *)(v23 + 24) = v0;
  *(void *)(inited + 160) = sub_100306C54;
  *(void *)(inited + 168) = v23;
  uint64_t v24 = (void *)sub_1002E1F90();
  sub_10030750C(v24);
  uint64_t v25 = sub_1002E8414();
  *(void *)(v25 + 16) = sub_100306D60;
  *(void *)(v25 + 24) = v0;
  *(void *)(inited + 176) = sub_100306C54;
  *(void *)(inited + 184) = v25;
  uint64_t v26 = (void *)sub_1002E1F90();
  sub_10030750C(v26);
  uint64_t v27 = sub_1002E8414();
  *(void *)(v27 + 16) = sub_100306D7C;
  *(void *)(v27 + 24) = v0;
  *(void *)(inited + 192) = sub_100306C54;
  *(void *)(inited + 200) = v27;
  uint64_t v28 = (void *)sub_1002E1F90();
  sub_10030750C(v28);
  uint64_t v29 = sub_1002E8414();
  *(void *)(v29 + 16) = sub_100306D98;
  *(void *)(v29 + 24) = v0;
  *(void *)(inited + 208) = sub_100306C54;
  *(void *)(inited + 216) = v29;
  uint64_t v30 = (void *)sub_1002E1F90();
  sub_10030750C(v30);
  uint64_t v31 = sub_1002E8414();
  *(void *)(v31 + 16) = sub_100306DB4;
  *(void *)(v31 + 24) = v0;
  *(void *)(inited + 224) = sub_100306C54;
  *(void *)(inited + 232) = v31;
  uint64_t v32 = (void *)sub_1002E1F90();
  sub_10030750C(v32);
  uint64_t v33 = sub_1002E8414();
  *(void *)(v33 + 16) = sub_100306DD0;
  *(void *)(v33 + 24) = v0;
  *(void *)(inited + 240) = sub_100306C54;
  *(void *)(inited + 248) = v33;
  uint64_t v34 = (void *)sub_1002E1F90();
  sub_10030750C(v34);
  uint64_t v35 = sub_1002E8414();
  *(void *)(v35 + 16) = sub_100306DEC;
  *(void *)(v35 + 24) = v0;
  *(void *)(inited + 256) = sub_100306C54;
  *(void *)(inited + 264) = v35;
  uint64_t v36 = (void *)sub_1002E1F90();
  sub_10030750C(v36);
  uint64_t v37 = sub_1002E8414();
  *(void *)(v37 + 16) = sub_100306E08;
  *(void *)(v37 + 24) = v0;
  *(void *)(inited + 272) = sub_100306C54;
  *(void *)(inited + 280) = v37;
  uint64_t v38 = (void *)sub_1002E1F90();
  sub_10030750C(v38);
  uint64_t v39 = sub_1002E8414();
  *(void *)(v39 + 16) = sub_100306E24;
  *(void *)(v39 + 24) = v0;
  *(void *)(inited + 288) = sub_100306C54;
  *(void *)(inited + 296) = v39;
  uint64_t v40 = (void *)sub_1002E1F90();
  sub_10030750C(v40);
  uint64_t v41 = sub_1002E8414();
  *(void *)(v41 + 16) = sub_100306E40;
  *(void *)(v41 + 24) = v0;
  *(void *)(inited + 304) = sub_100306C54;
  *(void *)(inited + 312) = v41;
  uint64_t v42 = (void *)sub_1002E1F90();
  sub_10030750C(v42);
  uint64_t v43 = sub_1002E8414();
  *(void *)(v43 + 16) = sub_100306E5C;
  *(void *)(v43 + 24) = v0;
  *(void *)(inited + 320) = sub_100306C54;
  *(void *)(inited + 328) = v43;
  uint64_t v44 = (void *)sub_1002E1F90();
  sub_10030750C(v44);
  uint64_t v45 = sub_1002E8414();
  *(void *)(v45 + 16) = sub_100306E78;
  *(void *)(v45 + 24) = v0;
  *(void *)(inited + 336) = sub_100306C54;
  *(void *)(inited + 344) = v45;
  uint64_t v46 = (void *)sub_1002E1F90();
  sub_10030750C(v46);
  uint64_t v47 = sub_1002E8414();
  *(void *)(v47 + 16) = sub_100306E94;
  *(void *)(v47 + 24) = v0;
  *(void *)(inited + 352) = sub_100306C54;
  *(void *)(inited + 360) = v47;
  uint64_t v48 = (void *)sub_1002E1F90();
  sub_10030750C(v48);
  uint64_t v49 = sub_1002E8414();
  *(void *)(v49 + 16) = sub_100306EB0;
  *(void *)(v49 + 24) = v0;
  *(void *)(inited + 368) = sub_100306C54;
  *(void *)(inited + 376) = v49;
  uint64_t v50 = (void *)sub_1002E1F90();
  sub_10030750C(v50);
  uint64_t v51 = sub_1002E8414();
  *(void *)(v51 + 16) = sub_100306ECC;
  *(void *)(v51 + 24) = v0;
  *(void *)(inited + 384) = sub_100306C54;
  *(void *)(inited + 392) = v51;
  unsigned int v52 = (void *)sub_1002E1F90();
  sub_10030750C(v52);
  uint64_t v53 = sub_1002E8414();
  *(void *)(v53 + 16) = sub_100306EE8;
  *(void *)(v53 + 24) = v0;
  *(void *)(inited + 400) = sub_100306C54;
  *(void *)(inited + 408) = v53;
  uint64_t v54 = (void *)sub_1002E1F90();
  sub_10030750C(v54);
  uint64_t v55 = sub_1002E8414();
  *(void *)(v55 + 16) = sub_100306F04;
  *(void *)(v55 + 24) = v0;
  *(void *)(inited + 416) = sub_100306C54;
  *(void *)(inited + 424) = v55;
  uint64_t v56 = (void *)sub_1002E1F90();
  sub_10030750C(v56);
  uint64_t v57 = sub_1002E8414();
  *(void *)(v57 + 16) = sub_100306F20;
  *(void *)(v57 + 24) = v0;
  *(void *)(inited + 432) = sub_100306C54;
  *(void *)(inited + 440) = v57;
  uint64_t v58 = (void *)sub_1002E1F90();
  sub_10030750C(v58);
  uint64_t v59 = sub_1002E8414();
  *(void *)(v59 + 16) = sub_100306F3C;
  *(void *)(v59 + 24) = v0;
  *(void *)(inited + 448) = sub_100306C54;
  *(void *)(inited + 456) = v59;
  uint64_t v60 = (void *)sub_1002E1F90();
  sub_10030750C(v60);
  uint64_t v61 = sub_1002E8414();
  *(void *)(v61 + 16) = sub_100306F58;
  *(void *)(v61 + 24) = v0;
  *(void *)(inited + 464) = sub_100306C54;
  *(void *)(inited + 472) = v61;
  uint64_t v62 = (void *)sub_1002E1F90();
  sub_10030750C(v62);
  uint64_t v63 = sub_1002E8414();
  *(void *)(v63 + 16) = sub_100306F74;
  *(void *)(v63 + 24) = v0;
  *(void *)(inited + 480) = sub_100306C54;
  *(void *)(inited + 488) = v63;
  uint64_t v64 = (void *)sub_1002E1F90();
  sub_10030750C(v64);
  uint64_t v65 = sub_1002E8414();
  *(void *)(v65 + 16) = sub_100306F90;
  *(void *)(v65 + 24) = v0;
  *(void *)(inited + 496) = sub_100306C54;
  *(void *)(inited + 504) = v65;
  swift_retain_n();
  sub_10033D838(inited, v6, v4, v2, 0xD000000000000020, 0x80000001005E63C0, 338);
  swift_setDeallocating();
  sub_10034A020();
  sub_1002F2468();
}

double sub_100301C8C()
{
  sub_1002F2394();
  uint64_t v9 = v0;
  uint64_t v1 = sub_1002E8414();
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  *(_DWORD *)(v2 + 24) = 0;
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 20) = 1;
  swift_retain();
  uint64_t v4 = sub_1003075D0();
  sub_100325F94(v4, v5, v6, v1, v7, v2, v3);
  if (!v13)
  {
    double result = *(double *)&v10;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    *(unsigned char *)(v9 + 32) = v12;
  }
  return result;
}

void sub_100301D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10031E1C0();
  if (!v4)
  {
    sub_10031F474(a1, a2, a3);
    uint64_t v12 = sub_10031E368(v10, v11, v9 & 0xFFFFFFFFFFFFFFLL, 0xD000000000000020, 0x80000001005E63C0, 2317);
    uint64_t v14 = v13;
    swift_release();
    swift_beginAccess();
    *(void *)(a4 + 16) = v12;
    *(void *)(a4 + 24) = v14;
    swift_bridgeObjectRelease();
    sub_10031E1C0();
  }
}

void sub_100301EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10031E1C0();
  if (!v8)
  {
    sub_100308D44(a1, a2, a3, a5, a6, a7, a8, v17, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37,
      v38,
      v39,
      v40,
      v41,
      v42,
      vars0,
      vars8);
    uint64_t v19 = v18;
    unsigned int v21 = v20;
    unint64_t v23 = v22;
    unint64_t v24 = HIDWORD(v20);
    swift_beginAccess();
    v25._rawValue = (void *)sub_1001F9054(*(void *)(v19 + 24) + ((v23 >> 24) & 0xFFFF00 | BYTE6(v23)) + v21, v24 - v21);
    NIOIMAPCore2::MailboxName v45 = MailboxName.init(_:)(v25);
    rawValue = v45.bytes._rawValue;
    LODWORD(v23) = v45._hashValue._value;
    swift_release();
    swift_beginAccess();
    *(void *)(a4 + 16) = rawValue;
    *(_DWORD *)(a4 + 24) = v23;
    swift_bridgeObjectRelease();
  }
}

void sub_100302004(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10031E1C0();
  if (!v4)
  {
    int v9 = sub_100307D88(a1, a2, a3);
    swift_beginAccess();
    *(_DWORD *)(a4 + 16) = v9;
    *(unsigned char *)(a4 + 20) = 0;
  }
}

void *sub_1003020F4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v36 = a7;
  uint64_t v37 = a8;
  uint64_t v30 = sub_100306B2C;
  uint64_t v31 = &v32;
  uint64_t v24 = a9;
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v27 = a7;
  uint64_t v28 = a8;
  unsigned int v21 = sub_100306B80;
  unint64_t v22 = &v23;
  uint64_t v15 = a10;
  uint64_t v16 = a5;
  uint64_t v17 = a6;
  uint64_t v18 = a7;
  uint64_t v19 = a8;
  uint64_t v12 = sub_100306BAC;
  uint64_t v13 = &v14;
  return sub_100309048(a2, sub_100306B58, v29, sub_1003074DC, v20, sub_1003074DC, v11, a1, a2, a3, 0xD000000000000020, 0x80000001005E63C0, 79);
}

void sub_100302208(uint64_t a1@<X3>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4)
{
  sub_1003075E0();
  sub_10031E1C0();
  if (!v4)
  {
    sub_10030751C(v6, v7, v8, v9, v10, v11, v12, v13, a3, a4);
    sub_1002F3294();
    uint64_t v14 = sub_100329A04();
    char v41 = v14;
    if (v14)
    {
      unint64_t v22 = (uint64_t *)(a1 + 16);
      swift_beginAccess();
      uint64_t v23 = *(void *)(a1 + 24);
      if (v23)
      {
        uint64_t v24 = 0;
        int v25 = 0;
        int v26 = 0;
        uint64_t v27 = *v22;
LABEL_7:
        swift_bridgeObjectRetain();
        sub_1003075E0();
        sub_10031E1C0();
        *(void *)a2 = v27;
        *(void *)(a2 + 8) = v23;
        *(void *)(a2 + 16) = v24;
        *(_DWORD *)(a2 + 24) = v25;
        *(_DWORD *)(a2 + 28) = v26;
        *(unsigned char *)(a2 + 32) = v41 & 1;
        return;
      }
      sub_100296090();
      sub_10020DD10();
      *uint64_t v39 = 0xD000000000000020;
      v39[1] = 0x80000001005E68B0;
      v39[2] = 0xD000000000000020;
      v39[3] = 0x80000001005E63C0;
      uint64_t v40 = 107;
    }
    else
    {
      sub_10030751C(v14, v15, v16, v17, v18, v19, v20, v21, a3, a4);
      uint64_t v28 = sub_1002F3294();
      sub_10031E2BC(v28, v29, v30);
      sub_10030751C(v31, v32, v33, v34, v35, v36, v37, v38, a3, a4);
      swift_beginAccess();
      uint64_t v23 = *(void *)(a1 + 24);
      if (v23)
      {
        uint64_t v27 = *(void *)(a1 + 16);
        swift_beginAccess();
        uint64_t v24 = *(void *)(a3 + 16);
        if (v24)
        {
          int v25 = *(_DWORD *)(a3 + 24);
          swift_beginAccess();
          if ((*(unsigned char *)(a4 + 20) & 1) == 0)
          {
            int v26 = *(_DWORD *)(a4 + 16);
            swift_bridgeObjectRetain();
            goto LABEL_7;
          }
        }
      }
      sub_100296090();
      sub_10020DD10();
      *uint64_t v39 = 0xD00000000000002FLL;
      v39[1] = 0x80000001005E68E0;
      v39[2] = 0xD000000000000020;
      v39[3] = 0x80000001005E63C0;
      uint64_t v40 = 101;
    }
    v39[4] = v40;
    swift_willThrow();
  }
}

void sub_1003024B8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  BOOL v4 = __OFADD__(a2, 1);
  uint64_t v5 = a2 + 1;
  if (v4)
  {
    __break(1u);
    return;
  }
  if (v5 >= a3)
  {
    sub_1002DB5BC();
    sub_10020DD10();
    *uint64_t v13 = a3;
  }
  else
  {
    uint64_t v8 = *a1;
    uint64_t v9 = a1[1];
    int v10 = *((_DWORD *)a1 + 4);
    __int16 v11 = *((_WORD *)a1 + 10);
    char v12 = *((unsigned char *)a1 + 22);
    sub_100337E64();
    if (!v3) {
      return;
    }
    *a1 = v8;
    a1[1] = v9;
    *((_DWORD *)a1 + 4) = v10;
    *((_WORD *)a1 + 10) = v11;
    *((unsigned char *)a1 + 22) = v12;
  }
  swift_willThrow();
}

uint64_t sub_100302574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_10000566C(&qword_100712390);
  uint64_t result = swift_initStackObject();
  *(_OWORD *)(result + 16) = xmmword_1005F6A40;
  *(void *)(result + 32) = 5000257;
  *(void *)(result + 40) = 0xE300000000000000;
  *(_OWORD *)(result + 48) = xmmword_1005F6A50;
  *(void *)(result + 64) = 0xE800000000000000;
  *(_OWORD *)(result + 72) = xmmword_1005F6A60;
  *(void *)(result + 88) = 0xE700000000000000;
  *(_OWORD *)(result + 96) = xmmword_1005F6A70;
  *(void *)(result + 112) = 0xE700000000000000;
  *(_OWORD *)(result + 120) = xmmword_1005F6A80;
  *(void *)(result + 136) = 0xE300000000000000;
  *(_OWORD *)(result + 144) = xmmword_1005F6A90;
  *(void *)(result + 160) = 0xE300000000000000;
  *(_OWORD *)(result + 168) = xmmword_1005F6AA0;
  *(void *)(result + 184) = 0xE600000000000000;
  *(_OWORD *)(result + 192) = xmmword_1005F6AB0;
  *(void *)(result + 208) = 0xE400000000000000;
  *(_OWORD *)(result + 216) = xmmword_1005F6AC0;
  *(void *)(result + 232) = 0xE600000000000000;
  *(_OWORD *)(result + 240) = xmmword_1005F6AD0;
  *(void *)(result + 256) = 0xEA00000000004445;
  *(void *)(result + 264) = 0xE000000000000044;
  *(void *)(result + 272) = 0x4554454C45444E55;
  *(void *)(result + 280) = 0xE900000000000044;
  *(_OWORD *)(result + 288) = xmmword_1005F6AE0;
  *(void *)(result + 304) = 0xE900000000000044;
  *(void *)(result + 312) = 0xE000000000000054;
  *(void *)(result + 320) = 0x5446415244;
  *(void *)(result + 328) = 0xE500000000000000;
  *(_OWORD *)(result + 336) = xmmword_1005F6AF0;
  *(void *)(result + 352) = 0xE700000000000000;
  *(void *)(result + 360) = 0xE00000000000006CLL;
  uint64_t v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)a1;
    int v22 = *(_DWORD *)(a1 + 12);
    int v23 = *(_DWORD *)(a1 + 8);
    __int16 v20 = *(_WORD *)(a1 + 20);
    int v21 = *(_DWORD *)(a1 + 16);
    char v19 = *(unsigned char *)(a1 + 22);
    uint64_t result = swift_retain();
    unint64_t v11 = 0;
    char v12 = (unint64_t *)(v9 + 48);
    uint64_t v18 = a2 + 1;
    while (v11 < *(void *)(v9 + 16))
    {
      unint64_t v14 = *(v12 - 1);
      unint64_t v13 = *v12;
      if (v8 >= a3)
      {
        sub_1002DB5BC();
        swift_allocError();
        *uint64_t v15 = a3;
        swift_bridgeObjectRetain();
        sub_1002238FC(v13);
      }
      else
      {
        unint64_t v17 = *(v12 - 2);
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1002238FC(v13);
        sub_100338020(a1, v8, a3, 0, v17, v14, 0);
        if (!v4)
        {
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          return v13;
        }
        swift_release();
        *(void *)a1 = v10;
        *(_DWORD *)(a1 + 8) = v23;
        *(_DWORD *)(a1 + 12) = v22;
        *(_DWORD *)(a1 + 16) = v21;
        *(_WORD *)(a1 + 20) = v20;
        *(unsigned char *)(a1 + 22) = v19;
      }
      swift_willThrow();
      sub_1002239B4(v13);
      swift_bridgeObjectRelease();
      swift_errorRetain();
      sub_10000566C(qword_100710378);
      if (!swift_dynamicCast())
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        return v13;
      }
      ++v11;
      swift_release();
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)a1 = v10;
      *(_DWORD *)(a1 + 8) = v23;
      *(_DWORD *)(a1 + 12) = v22;
      *(_DWORD *)(a1 + 16) = v21;
      *(_WORD *)(a1 + 20) = v20;
      *(unsigned char *)(a1 + 22) = v19;
      swift_retain();
      uint64_t result = swift_errorRelease();
      uint64_t v4 = 0;
      v12 += 3;
      uint64_t v8 = v18;
      if (v11 == 14)
      {
        swift_setDeallocating();
        sub_10034A02C();
        sub_100296090();
        swift_allocError();
        *uint64_t v16 = 0x6E776F6E6B6E55;
        v16[1] = 0xE700000000000000;
        v16[2] = 0xD000000000000020;
        v16[3] = 0x80000001005E63C0;
        v16[4] = 175;
        swift_willThrow();
        swift_release();
        return v13;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

#error "100302A4C: call analysis failed (funcsize=63)"

void sub_100302AB0()
{
  sub_10031E1C0();
  if (!v0)
  {
    uint64_t v1 = (void *)swift_allocObject();
    v1[2] = sub_1002E85CC();
    v1[3] = v2;
    v1[4] = v3;
  }
}

#error "100302C48: call analysis failed (funcsize=63)"

#error "100302D4C: call analysis failed (funcsize=64)"

#error "100302E5C: call analysis failed (funcsize=63)"

void sub_100302EC0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  sub_10031E1C0();
  if (!v4)
  {
    uint64_t v9 = swift_allocObject();
    sub_10030B55C(a1, a2, a3, a4);
    *(void *)(v9 + 16) = v10;
    *(void *)(v9 + 24) = v11;
  }
}

void sub_100302FB8()
{
  sub_10031E1C0();
  if (!v0)
  {
    uint64_t v1 = (void *)swift_allocObject();
    v1[2] = sub_1002E85CC();
    v1[3] = v2;
    v1[4] = v3;
  }
}

void sub_1003030A4()
{
  sub_10031E1C0();
  if (!v0)
  {
    uint64_t v1 = (void *)swift_allocObject();
    v1[2] = sub_1002E85CC();
    v1[3] = v2;
    v1[4] = v3;
  }
}

#error "100303244: call analysis failed (funcsize=63)"

#error "10030334C: call analysis failed (funcsize=64)"

#error "100303458: call analysis failed (funcsize=64)"

void sub_1003034C0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  sub_10031E1C0();
  if (!v4)
  {
    uint64_t v9 = swift_allocObject();
    sub_10030B55C(a1, a2, a3, a4);
    *(void *)(v9 + 16) = v10;
    *(void *)(v9 + 24) = v11;
  }
}

void sub_1003035BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10031E1C0();
  if (!v3)
  {
    uint64_t v7 = swift_allocObject();
    sub_10031F718(a1, a2, a3);
    uint64_t v11 = sub_10031E368(v9, v10, v8 & 0xFFFFFFFFFFFFFFLL, 0xD000000000000020, 0x80000001005E63C0, 539);
    uint64_t v13 = v12;
    swift_release();
    *(void *)(v7 + 16) = v11;
    *(void *)(v7 + 24) = v13;
  }
}

void sub_1003036CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7)
  {
    sub_100308D44(a1, a2, a3, a4, a5, a6, a7, v15, v31, v32, v34, v36, v38, v40, v42, v44, v45, v47, v49,
      v51,
      v53,
      v55,
      v57,
      v59,
      vars0,
      vars8);
    uint64_t v33 = a5;
    uint64_t v35 = a6;
    swift_beginAccess();
    uint64_t v16 = sub_1005E1D70();
    uint64_t v18 = v17;
    swift_release();
    sub_10031E2BC(a1, a2, a3);
    sub_100308D44(a1, a2, a3, a4, v33, v35, a7, v19, a4, v33, v35, v37, v39, v41, v43, a7, v46, v48, v50,
      v52,
      v54,
      v56,
      v58,
      v60,
      vars0a,
      vars8a);
    uint64_t v21 = v20;
    int v23 = v22;
    int v25 = v24;
    uint64_t v26 = v16;
    unint64_t v27 = HIWORD(v24);
    unint64_t v28 = HIDWORD(v24);
    unint64_t v29 = HIDWORD(v22);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v26;
    *(void *)(v30 + 24) = v18;
    *(void *)(v30 + 32) = v21;
    *(_DWORD *)(v30 + 40) = v23;
    *(_DWORD *)(v30 + 44) = v29;
    *(_DWORD *)(v30 + 48) = v25;
    *(_WORD *)(v30 + 52) = v28;
    *(unsigned char *)(v30 + 54) = v27;
  }
}

void sub_100303894(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_10031E1C0();
  if (!v3)
  {
    uint64_t v7 = swift_allocObject();
    uint64_t v8 = sub_10032D3F0(a1, a2, a3, 1);
    if (((unint64_t)v8 & 0x8000000000000000) != 0)
    {
      sub_100296090();
      swift_allocError();
      *uint64_t v9 = 0xD000000000000011;
      v9[1] = 0x80000001005E65D0;
      v9[2] = 0xD000000000000020;
      v9[3] = 0x80000001005E63C0;
      v9[4] = 167;
      swift_willThrow();
      swift_deallocUninitializedObject();
    }
    else
    {
      *(void *)(v7 + 16) = v8;
    }
  }
}

void sub_1003039CC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_10031E1C0();
  if (!v3)
  {
    uint64_t v7 = swift_allocObject();
    uint64_t v8 = sub_10032D3F0(a1, a2, a3, 1);
    if (((unint64_t)v8 & 0x8000000000000000) != 0)
    {
      sub_100296090();
      swift_allocError();
      *uint64_t v9 = 0xD000000000000011;
      v9[1] = 0x80000001005E65D0;
      v9[2] = 0xD000000000000020;
      v9[3] = 0x80000001005E63C0;
      v9[4] = 167;
      swift_willThrow();
      swift_deallocUninitializedObject();
    }
    else
    {
      *(void *)(v7 + 16) = v8;
    }
  }
}

void sub_100303B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7)
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_1003013F0(a1, a2, a3, a4, a5, a6, a7);
  }
}

void sub_100303BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7)
  {
    uint64_t v15 = sub_1003013F0(a1, a2, a3, a4, a5, a6, a7);
    sub_10031E2BC(a1, a2, a3);
    uint64_t v16 = sub_1003013F0(a1, a2, a3, a4, a5, a6, a7);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v15;
    *(void *)(v17 + 24) = v16;
  }
}

void sub_100303D20()
{
  sub_10031E1C0();
  if (!v0)
  {
    uint64_t v1 = (void *)swift_allocObject();
    v1[2] = sub_1002E85CC();
    v1[3] = v2;
    v1[4] = v3;
  }
}

void sub_100303E1C()
{
  sub_10031E1C0();
  if (!v0)
  {
    uint64_t v1 = (void *)swift_allocObject();
    v1[2] = sub_1002E85CC();
    v1[3] = v2;
    v1[4] = v3;
  }
}

void sub_100303F18()
{
  sub_10031E1C0();
  if (!v0)
  {
    uint64_t v1 = (void *)swift_allocObject();
    v1[2] = sub_1002E85CC();
    v1[3] = v2;
    v1[4] = v3;
  }
}

void sub_100304014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7)
  {
    sub_10000566C(&qword_1007108C8);
    swift_allocBox();
    uint64_t v17 = v15;
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = a4;
    v16[3] = a5;
    v16[4] = a6;
    v16[5] = a7;
    swift_retain();
    sub_100304284(a1, a2, a3, (uint64_t)sub_1003071D4, (uint64_t)v16, v17);
    swift_release();
  }
}

uint64_t sub_100304150(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      void *v8 = a3;
      return swift_willThrow();
    }
    uint64_t v5 = result;
    uint64_t v6 = *(void *)result;
    uint64_t v7 = *(void *)(result + 8);
    __int16 v10 = *(_WORD *)(result + 20);
    int v11 = *(_DWORD *)(result + 16);
    char v9 = *(unsigned char *)(result + 22);
    swift_retain();
    sub_100308450();
    if (v3)
    {
      swift_release();
      *(void *)uint64_t v5 = v6;
      *(void *)(v5 + 8) = v7;
      *(_DWORD *)(v5 + 16) = v11;
      *(_WORD *)(v5 + 20) = v10;
      *(unsigned char *)(v5 + 22) = v9;
      return swift_willThrow();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100304284@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v19[2] = a4;
  v19[3] = a5;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = result;
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v16 = sub_10020DD10();
      *uint64_t v17 = a3;
    }
    else
    {
      uint64_t v11 = *(void *)result;
      uint64_t v12 = *(void *)(result + 8);
      int v13 = *(_DWORD *)(result + 16);
      __int16 v14 = *(_WORD *)(result + 20);
      char v15 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_10031E1C0();
      uint64_t v16 = v6;
      if (!v6)
      {
        uint64_t v18 = sub_10000566C(&qword_1007108C0);
        storeEnumTagSinglePayload for ClientCommand(a6, 1, 1, v18);
        return swift_release();
      }
      swift_release();
      *(void *)uint64_t v9 = v11;
      *(void *)(v9 + 8) = v12;
      *(_DWORD *)(v9 + 16) = v13;
      *(_WORD *)(v9 + 20) = v14;
      *(unsigned char *)(v9 + 22) = v15;
    }
    swift_willThrow();
    uint64_t v20 = v16;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (sub_1003075F8())
    {
      swift_errorRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      return sub_10031E454(v9, a2, a3, (uint64_t)sub_1003071F0, (uint64_t)v19);
    }
    swift_errorRelease();
    uint64_t v20 = v16;
    swift_errorRetain();
    if (sub_1003075F8())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    return swift_errorRelease();
  }
  return result;
}

void sub_100304484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7)
  {
    uint64_t v22 = swift_allocObject();
    char v15 = (void *)swift_allocObject();
    v21[1] = v21;
    v15[2] = a4;
    v15[3] = a5;
    v15[4] = a6;
    v15[5] = a7;
    v19[6] = sub_1003070D0;
    uint64_t v20 = __chkstk_darwin(v15);
    __chkstk_darwin(v20);
    v19[2] = sub_1003070E8;
    v19[3] = v16;
    swift_retain();
    uint64_t v17 = sub_10033D0E0(sub_100307100, 0, sub_1003074F4, v19, a1, a2, a3, 0xD000000000000020, 0x80000001005E63C0, 699);
    uint64_t v18 = v22;
    *(_DWORD *)(v22 + 16) = v17;
    *(unsigned char *)(v18 + 20) = BYTE4(v17) & 1;
    swift_release();
  }
}

void sub_100304698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7)
  {
    uint64_t v22 = swift_allocObject();
    char v15 = (void *)swift_allocObject();
    v21[1] = v21;
    v15[2] = a4;
    v15[3] = a5;
    v15[4] = a6;
    v15[5] = a7;
    v19[6] = sub_1003070D0;
    uint64_t v20 = __chkstk_darwin(v15);
    __chkstk_darwin(v20);
    v19[2] = sub_1003070E8;
    v19[3] = v16;
    swift_retain();
    uint64_t v17 = sub_10033D0E0(sub_100307100, 0, sub_100307168, v19, a1, a2, a3, 0xD000000000000020, 0x80000001005E63C0, 699);
    uint64_t v18 = v22;
    *(_DWORD *)(v22 + 16) = v17;
    *(unsigned char *)(v18 + 20) = BYTE4(v17) & 1;
    swift_release();
  }
}

unint64_t sub_1003048A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10000566C(&qword_1007104D8);
  uint64_t v12 = swift_allocBox();
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  uint64_t v17 = a6;
  uint64_t v18 = a7;
  sub_10033CBF4((uint64_t)sub_1002E7FCC, (uint64_t)v14, (uint64_t)sub_100300094);
  if (v7) {
    return swift_deallocBox();
  }
  else {
    return v12 | 0xB000000000000004;
  }
}

unint64_t sub_1003049B4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7)
  {
    sub_10000566C(&qword_100710718);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1005F6670;
    uint64_t v16 = sub_1003013F0(a1, a2, a3, a4, a5, a6, a7);
    v21[1] = v21;
    *(void *)(v15 + 32) = v16;
    uint64_t v22 = v15;
    __chkstk_darwin(v16);
    v20[2] = a4;
    v20[3] = a5;
    v20[4] = a6;
    v20[5] = a7;
    sub_10031E7FC(a1, a2, a3, (uint64_t)sub_1003070B4, (uint64_t)v20, (uint64_t)&v22);
    sub_10031E1C0();
    uint64_t v17 = v22;
    if (*(void *)(v22 + 16) == 1)
    {
      a2 = *(void *)(v22 + 32);
      sub_1002238FC(a2);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v17;
      return v19 | 0xC000000000000000;
    }
  }
  return a2;
}

void sub_100304BAC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v8) {
    *a8 = sub_1003013F0(a1, a2, a3, a4, a5, a6, a7);
  }
}

void sub_100304C30(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_10031E1C0();
  if (!v3)
  {
    uint64_t v7 = swift_allocObject();
    uint64_t v8 = sub_10032D3F0(a1, a2, a3, 1);
    if (((unint64_t)v8 & 0x8000000000000000) != 0)
    {
      sub_100296090();
      swift_allocError();
      *uint64_t v9 = 0xD000000000000011;
      v9[1] = 0x80000001005E65D0;
      v9[2] = 0xD000000000000020;
      v9[3] = 0x80000001005E63C0;
      v9[4] = 167;
      swift_willThrow();
      swift_deallocUninitializedObject();
    }
    else
    {
      *(void *)(v7 + 16) = v8;
    }
  }
}

void sub_100304D64(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_10031E1C0();
  if (!v3)
  {
    uint64_t v7 = swift_allocObject();
    uint64_t v8 = sub_10032D3F0(a1, a2, a3, 1);
    if (((unint64_t)v8 & 0x8000000000000000) != 0)
    {
      sub_100296090();
      swift_allocError();
      *uint64_t v9 = 0xD000000000000011;
      v9[1] = 0x80000001005E65D0;
      v9[2] = 0xD000000000000020;
      v9[3] = 0x80000001005E63C0;
      v9[4] = 167;
      swift_willThrow();
      swift_deallocUninitializedObject();
    }
    else
    {
      *(void *)(v7 + 16) = v8;
    }
  }
}

unint64_t sub_100304E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = swift_allocObject();
  swift_retain();
  uint64_t v16 = sub_100326364(a1, a2, a3, a4, a5, a6, a7);
  if (v7) {
    return swift_deallocUninitializedObject();
  }
  *(void *)(v15 + 16) = v16;
  *(void *)(v15 + 24) = v17;
  unint64_t result = v15 | 0xE000000000000000;
  *(void *)(v15 + 32) = v18;
  *(void *)(v15 + 40) = v19;
  return result;
}

uint64_t sub_100304F64@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_100302574(a1, *a2, a2[1]);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

void sub_100304F98()
{
  sub_1002F2480();
  sub_1002F2394();
  uint64_t v6 = v5;
  sub_1002F7224();
  if (!v0)
  {
    uint64_t v22 = v6;
    uint64_t v23 = 0;
    *(void *)&long long v24 = _swiftEmptyArrayStorage;
    *((void *)&v24 + 1) = _swiftEmptyArrayStorage;
    uint64_t v7 = (void *)sub_1002E1F90();
    v7[2] = v4;
    v7[3] = v3;
    v7[4] = v2;
    v7[5] = v1;
    void v21[2] = sub_100307030;
    v21[3] = __chkstk_darwin(v7);
    swift_retain();
    uint64_t v8 = sub_1003075D0();
    sub_10031EB38(v8, v9, v10, v11, (uint64_t)v21, v12);
    swift_release();
    uint64_t v13 = sub_1003075D0();
    sub_10031E2BC(v13, v14, v15);
    uint64_t v16 = sub_1002DC944();
    uint64_t v19 = sub_100307618(v16, v17, v18);
    uint64_t v20 = v22;
    *uint64_t v22 = v23;
    *(_OWORD *)(v20 + 1) = v24;
    v20[3] = v19;
  }
  sub_1002F2468();
}

void sub_100305138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_retain();
  sub_100326414(a1, a2, a3, a4, a5, a6, a7, v14, v15, v16, v17, v18, v19, v20, v21);
}

void sub_1003051C4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v31 = (void *)a8;
  type metadata accessor for ParameterValue();
  __chkstk_darwin();
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10030B600(a1, a2, a3, a4, a5, a6, a7, v18, v28, (uint64_t)v29, v30, (uint64_t)v31, v32, a1, v34, v35, v36, v37, v38,
    v39);
  if (!v8)
  {
    uint64_t v28 = v19;
    unint64_t v29 = v17;
    uint64_t v30 = v20;
    sub_10031E2BC(v33, a2, a3);
    __chkstk_darwin();
    *(&v28 - 4) = a4;
    *(&v28 - 3) = a5;
    __chkstk_darwin();
    *(&v28 - 4) = a4;
    *(&v28 - 3) = a5;
    unint64_t v26 = 0x80000001005E63C0;
    uint64_t v27 = 2437;
    uint64_t v21 = (uint64_t)v29;
    sub_10033CBF4((uint64_t)sub_1002F6E54, v22, (uint64_t)sub_1002F6E70);
    uint64_t v23 = sub_10000566C(&qword_10070FE78);
    long long v24 = v31;
    sub_1002ECB38(v21, (uint64_t)v31 + *(int *)(v23 + 52));
    uint64_t v25 = v30;
    *long long v24 = v28;
    v24[1] = v25;
  }
}

uint64_t sub_1003053E4()
{
  sub_100307578();
  sub_10000566C(&qword_100712378);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6710;
  uint64_t v2 = (void *)sub_1002E1F90();
  sub_1002F9E78(v2);
  uint64_t v3 = sub_1002E8414();
  *(void *)(v3 + 16) = sub_10030569C;
  *(void *)(v3 + 24) = v0;
  *(void *)(inited + 32) = sub_1002E326C;
  *(void *)(inited + 40) = v3;
  uint64_t v4 = (void *)sub_1002E1F90();
  sub_1002F9E78(v4);
  uint64_t v5 = sub_1002E8414();
  *(void *)(v5 + 16) = sub_100306054;
  *(void *)(v5 + 24) = v0;
  *(void *)(inited + 48) = sub_1002E83EC;
  *(void *)(inited + 56) = v5;
  uint64_t v6 = (void *)sub_1002E1F90();
  sub_1002F9E78(v6);
  uint64_t v7 = sub_1002E8414();
  *(void *)(v7 + 16) = sub_100306088;
  *(void *)(v7 + 24) = v0;
  *(void *)(inited + 64) = sub_1002E83EC;
  *(void *)(inited + 72) = v7;
  uint64_t v8 = (void *)sub_1002E1F90();
  sub_1002F9E78(v8);
  uint64_t v9 = sub_1002E8414();
  *(void *)(v9 + 16) = sub_1003060A4;
  *(void *)(v9 + 24) = v0;
  *(void *)(inited + 80) = sub_1002E83EC;
  *(void *)(inited + 88) = v9;
  uint64_t v10 = (void *)sub_1002E1F90();
  sub_1002F9E78(v10);
  uint64_t v11 = sub_1002E8414();
  *(void *)(v11 + 16) = sub_1003060C0;
  *(void *)(v11 + 24) = v0;
  *(void *)(inited + 96) = sub_1002E83EC;
  *(void *)(inited + 104) = v11;
  uint64_t v12 = (void *)sub_1002E1F90();
  sub_1002F9E78(v12);
  uint64_t v13 = sub_1002E8414();
  *(void *)(v13 + 16) = sub_1003060DC;
  *(void *)(v13 + 24) = v0;
  *(void *)(inited + 112) = sub_1002E83EC;
  *(void *)(inited + 120) = v13;
  uint64_t v14 = (void *)sub_1002E1F90();
  sub_1002F9E78(v14);
  uint64_t v15 = sub_1002E8414();
  *(void *)(v15 + 16) = sub_1003060F8;
  *(void *)(v15 + 24) = v0;
  *(void *)(inited + 128) = sub_1002E83EC;
  *(void *)(inited + 136) = v15;
  swift_retain_n();
  uint64_t v16 = sub_100307550();
  sub_10033EDAC(v16);
  swift_setDeallocating();
  return sub_10034A020();
}

uint64_t sub_100305664()
{
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

void sub_10030569C()
{
}

void sub_1003056CC()
{
  sub_1002F2480();
  sub_1002F2394();
  uint64_t v2 = v1;
  sub_1002F7224();
  if (!v0)
  {
    uint64_t v3 = (uint64_t *)sub_1002DC944();
    int v10 = sub_1002FAA84(v3, v4, v5, v6, v7, v8, v9);
    *uint64_t v2 = v10;
    type metadata accessor for SearchReturnData();
    swift_storeEnumTagMultiPayload();
  }
  sub_1002F2468();
}

void sub_10030574C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7)
  {
    v13[1] = v13;
    __chkstk_darwin();
    v12[2] = a4;
    v12[3] = a5;
    v12[4] = a6;
    v12[5] = a7;
    sub_10033CBF4((uint64_t)sub_100306ACC, (uint64_t)v12, (uint64_t)sub_1003000B4);
    type metadata accessor for SearchReturnData();
    swift_storeEnumTagMultiPayload();
  }
}

void sub_10030589C(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_10031E1C0();
  if (!v4)
  {
    uint64_t v9 = sub_10032D3F0(a1, a2, a3, 1);
    if (((unint64_t)v9 & 0x8000000000000000) != 0)
    {
      sub_100296090();
      swift_allocError();
      *int v10 = 0xD000000000000011;
      v10[1] = 0x80000001005E65D0;
      v10[2] = 0xD000000000000020;
      v10[3] = 0x80000001005E63C0;
      v10[4] = 167;
      swift_willThrow();
    }
    else
    {
      *a4 = v9;
      type metadata accessor for SearchReturnData();
      swift_storeEnumTagMultiPayload();
    }
  }
}

void sub_1003059B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_10031E1C0();
  if (!v4)
  {
    *a4 = sub_100307618(a1, a2, a3);
    type metadata accessor for SearchReturnData();
    swift_storeEnumTagMultiPayload();
  }
}

void sub_100305A90(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v35 = a8;
  sub_10000566C(&qword_100710528);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10031E1C0();
  if (!v8)
  {
    uint64_t v33 = sub_1002F9EAC(a1, a2, a3, a4, a5, a6, a7);
    int v32 = v18;
    sub_10031E2BC(a1, a2, a3);
    sub_10000566C(&qword_100712380);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005F6690;
    uint64_t v19 = (void *)swift_allocObject();
    uint64_t v31 = v19;
    v19[2] = a4;
    v19[3] = a5;
    v19[4] = a6;
    void v19[5] = a7;
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v31;
    *(void *)(v20 + 16) = sub_100306A34;
    *(void *)(v20 + 24) = v21;
    uint64_t v22 = inited;
    *(void *)(inited + 32) = sub_1002E83EC;
    *(void *)(v22 + 40) = v20;
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = a4;
    v23[3] = a5;
    v23[4] = a6;
    v23[5] = a7;
    long long v24 = v23;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = sub_100306A50;
    *(void *)(v25 + 24) = v24;
    uint64_t v26 = inited;
    *(void *)(inited + 48) = sub_1002E83EC;
    *(void *)(v26 + 56) = v25;
    uint64_t v27 = v26;
    swift_retain_n();
    sub_10033EF74(v27, a1, a2, a3, 0xD000000000000020, 0x80000001005E63C0, 448);
    swift_setDeallocating();
    sub_10034A020();
    sub_10031E1C0();
    uint64_t v28 = sub_10000566C(&qword_100710550);
    unint64_t v29 = v35;
    uint64_t v30 = (uint64_t)v35 + *(int *)(v28 + 48);
    *uint64_t v35 = v33;
    *((unsigned char *)v29 + 8) = v32 & 1;
    sub_10001FDF0((uint64_t)v17, v30, &qword_100710528);
    type metadata accessor for SearchReturnData();
    swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_100305DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v20 = a8;
  sub_10000566C(&qword_100710520);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1002FEFC8(a1, a2, a3, a4, a5, a6, a7, (uint64_t)v17);
  if (!v8) {
    return sub_10001FDF0((uint64_t)v17, v20, &qword_100710528);
  }
  return result;
}

void sub_100305EA0()
{
  sub_10031E1C0();
  if (!v0)
  {
    sub_100223B18();
    sub_1005E3680();
  }
}

uint64_t sub_100305F08@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v9 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v19 = a3;
      return swift_willThrow();
    }
    uint64_t v15 = result;
    uint64_t v17 = *(void *)result;
    uint64_t v18 = *(void *)(result + 8);
    __int16 v21 = *(_WORD *)(result + 20);
    int v22 = *(_DWORD *)(result + 16);
    char v20 = *(unsigned char *)(result + 22);
    swift_retain();
    sub_1003051C4(v15, v9, a3, a4, a5, a6, a7, a8);
    if (v8)
    {
      swift_release();
      *(void *)uint64_t v15 = v17;
      *(void *)(v15 + 8) = v18;
      *(_DWORD *)(v15 + 16) = v22;
      *(_WORD *)(v15 + 20) = v21;
      *(unsigned char *)(v15 + 22) = v20;
      return swift_willThrow();
    }
    swift_release();
    type metadata accessor for SearchReturnData();
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

void sub_100306054()
{
}

void sub_100306088()
{
  sub_1002E1C9C();
  sub_10030574C(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1003060A4()
{
  sub_1002E1C9C();
  sub_10030589C(v0, v1, v2, v3);
}

void sub_1003060C0()
{
  sub_1002E1C9C();
  sub_1003059B4(v0, v1, v2, v3);
}

void sub_1003060DC()
{
  sub_1002E1C9C();
  sub_100305A90(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1003060F8()
{
  sub_1002E1C9C();
  return sub_100305F08(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_100306114()
{
  sub_100307578();
  sub_10000566C(&qword_100712398);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6710;
  *(void *)(inited + 32) = sub_10030671C;
  *(void *)(inited + 40) = 0;
  *(void *)(inited + 48) = sub_10030674C;
  *(void *)(inited + 56) = 0;
  *(void *)(inited + 64) = sub_10030677C;
  *(void *)(inited + 72) = 0;
  *(void *)(inited + 80) = sub_1003067AC;
  *(void *)(inited + 88) = 0;
  *(void *)(inited + 96) = sub_1003067E0;
  *(void *)(inited + 104) = 0;
  uint64_t v2 = (void *)sub_1002E1F90();
  sub_1002F9E78(v2);
  uint64_t v3 = sub_1002E8414();
  *(void *)(v3 + 16) = sub_10030730C;
  *(void *)(v3 + 24) = v0;
  *(void *)(inited + 112) = sub_1002E83EC;
  *(void *)(inited + 120) = v3;
  uint64_t v4 = (void *)sub_1002E1F90();
  sub_1002F9E78(v4);
  uint64_t v5 = sub_1002E8414();
  *(void *)(v5 + 16) = sub_100307328;
  *(void *)(v5 + 24) = v0;
  *(void *)(inited + 128) = sub_1002E83EC;
  *(void *)(inited + 136) = v5;
  swift_retain_n();
  uint64_t v6 = sub_100307550();
  sub_10033F13C(v6);
  swift_setDeallocating();
  return sub_10034A020();
}

void sub_1003062A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v3) {
    sub_100306114();
  }
}

void sub_100306324()
{
  sub_10031E1C0();
  if (!v0)
  {
    type metadata accessor for SearchReturnOption();
    swift_storeEnumTagMultiPayload();
  }
}

void sub_100306398(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  sub_10031E1C0();
  if (!v8)
  {
    sub_10031E2BC(a1, a2, a3);
    *(void *)a8 = sub_1002F9EAC(a1, a2, a3, a4, a5, a6, a7);
    *(unsigned char *)(a8 + 8) = v17 & 1;
    type metadata accessor for SearchReturnOption();
    swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_100306498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v44 = a7;
  uint64_t v42 = a8;
  uint64_t v15 = sub_10000566C(&qword_10070FE28);
  __chkstk_darwin(v15 - 8);
  uint64_t v43 = (uint64_t)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000566C(&qword_10070FE48);
  uint64_t result = __chkstk_darwin(v17);
  char v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v21 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *int v32 = a3;
    }
    else
    {
      uint64_t v38 = v20;
      uint64_t v39 = result;
      uint64_t v22 = *(void *)a1;
      uint64_t v23 = *(void *)(a1 + 8);
      int v24 = *(_DWORD *)(a1 + 16);
      LODWORD(v41) = *(unsigned __int16 *)(a1 + 20);
      HIDWORD(v41) = v24;
      char v25 = *(unsigned char *)(a1 + 22);
      swift_retain();
      uint64_t v26 = a2 + 1;
      uint64_t v27 = v44;
      sub_10030B600(a1, v26, a3, a4, a5, a6, v44, v28, v35, v36, v37, (uint64_t)v38, v39, a4, v41, v42, v43, v44, v45,
        v46);
      if (!v8)
      {
        uint64_t v35 = v29;
        uint64_t v36 = v30;
        uint64_t v37 = v22;
        swift_retain();
        uint64_t v31 = v43;
        sub_10032B71C(a1, v21, a3, v40, a5, a6, v27);
        uint64_t v33 = v38;
        sub_10001FDF0(v31, (uint64_t)v38 + *(int *)(v39 + 52), &qword_10070FE28);
        swift_release();
        uint64_t v34 = v36;
        *uint64_t v33 = v35;
        v33[1] = v34;
        sub_10001FDF0((uint64_t)v33, v42, &qword_10070FE48);
        type metadata accessor for SearchReturnOption();
        return swift_storeEnumTagMultiPayload();
      }
      swift_release();
      *(void *)a1 = v22;
      *(void *)(a1 + 8) = v23;
      *(_DWORD *)(a1 + 16) = HIDWORD(v41);
      *(_WORD *)(a1 + 20) = v41;
      *(unsigned char *)(a1 + 22) = v25;
    }
    return swift_willThrow();
  }
  return result;
}

void sub_10030671C()
{
}

void sub_10030674C()
{
}

void sub_10030677C()
{
}

void sub_1003067AC()
{
}

void sub_1003067E0()
{
}

void sub_100306810()
{
  sub_1002F2480();
  sub_10031E2BC(v1, v2, v3);
  if (!v0)
  {
    uint64_t v5 = __chkstk_darwin(v4);
    __chkstk_darwin(v5);
    sub_10033CBF4((uint64_t)sub_10030735C, v6, (uint64_t)sub_100307374);
  }
  sub_1002F2468();
}

uint64_t sub_100306920@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    uint64_t v5 = sub_10000566C(&qword_1007108C0);
    return storeEnumTagSinglePayload for ClientCommand(a2, 0, 1, v5);
  }
  return result;
}

void sub_100306978()
{
}

void *sub_1003069C8(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr))
{
  uint64_t result = a4(&v6);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

unint64_t sub_100306A14(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100306A34()
{
  sub_1002E1C9C();
  return sub_100305DAC(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_100306A50()
{
}

uint64_t sub_100306A6C(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100710528);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100306ACC()
{
  sub_1002E1C9C();
  return sub_100300004(v0);
}

uint64_t sub_100306AE8()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 28, 7);
}

uint64_t sub_100306B20()
{
  return sub_100300F34(v0, 24);
}

uint64_t sub_100306B2C()
{
  return sub_100306BD8();
}

uint64_t sub_100306B58()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100306B80()
{
  return sub_100306BD8();
}

uint64_t sub_100306BAC()
{
  return sub_100306BD8();
}

uint64_t sub_100306BD8()
{
  sub_1002E1C9C();
  return v0();
}

uint64_t sub_100306C00()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100306C38()
{
  sub_1002E1C9C();
  sub_100304C30(v0, v1, v2);
}

uint64_t sub_100306C54@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_100306FAC(a1, a2, a3);
}

void sub_100306C6C()
{
  sub_1002E1C9C();
  sub_100304D64(v0, v1, v2);
}

uint64_t sub_100306C88()
{
  return sub_1003029AC();
}

void sub_100306CA4()
{
}

uint64_t sub_100306CC0()
{
  return sub_100302BA4();
}

uint64_t sub_100306CDC()
{
  swift_release();
  uint64_t v0 = sub_1003075C0();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100306D0C()
{
  return sub_100302CAC();
}

uint64_t sub_100306D28()
{
  return sub_100302DB8();
}

void sub_100306D44()
{
  sub_1002E1C9C();
  sub_100302EC0(v0, v1, v2, v3);
}

void sub_100306D60()
{
}

void sub_100306D7C()
{
}

uint64_t sub_100306D98()
{
  return sub_10030319C();
}

uint64_t sub_100306DB4()
{
  return sub_1003032A8();
}

uint64_t sub_100306DD0()
{
  return sub_1003033B8();
}

void sub_100306DEC()
{
  sub_1002E1C9C();
  sub_1003034C0(v0, v1, v2, v3);
}

void sub_100306E08()
{
  sub_1002E1C9C();
  sub_1003036CC(v0, v1, v2, v3, v4, v5, v6);
}

void sub_100306E24()
{
  sub_1002E1C9C();
  sub_100303894(v0, v1, v2);
}

void sub_100306E40()
{
  sub_1002E1C9C();
  sub_1003039CC(v0, v1, v2);
}

void sub_100306E5C()
{
  sub_1002E1C9C();
  sub_100303B04(v0, v1, v2, v3, v4, v5, v6);
}

void sub_100306E78()
{
  sub_1002E1C9C();
  sub_100303BEC(v0, v1, v2, v3, v4, v5, v6);
}

void sub_100306E94()
{
}

void sub_100306EB0()
{
}

void sub_100306ECC()
{
}

void sub_100306EE8()
{
  sub_1002E1C9C();
  sub_100304014(v0, v1, v2, v3, v4, v5, v6);
}

void sub_100306F04()
{
  sub_1002E1C9C();
  sub_100304484(v0, v1, v2, v3, v4, v5, v6);
}

void sub_100306F20()
{
  sub_1002E1C9C();
  sub_100304698(v0, v1, v2, v3, v4, v5, v6);
}

unint64_t sub_100306F3C()
{
  sub_1002E1C9C();
  return sub_1003048A8(v0, v1, v2, v3, v4, v5, v6);
}

unint64_t sub_100306F58()
{
  sub_1002E1C9C();
  return sub_1003049B4(v0, v1, v2, v3, v4, v5, v6);
}

void sub_100306F74()
{
  sub_1002E1C9C();
  sub_1003035BC(v0, v1, v2);
}

unint64_t sub_100306F90()
{
  sub_1002E1C9C();
  return sub_100304E98(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_100306FAC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void, void))(v3 + 16))(a1, *a2, a2[1]);
  if (!v4) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_100306FE8()
{
  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

void sub_100307030()
{
  sub_1002E1C9C();
  sub_100305138(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10030704C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
  {
    *a1 = result;
    a1[1] = v5;
    a1[2] = v6;
    a1[3] = v7;
  }
  return result;
}

uint64_t sub_100307084()
{
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_1003075C0();
  return _swift_deallocObject(v0, v1, v2);
}

void sub_1003070B4()
{
  sub_1002E1C9C();
  sub_100304BAC(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1003070D0()
{
  return sub_100307184();
}

uint64_t sub_1003070E8@<X0>(_DWORD *a1@<X8>)
{
  return sub_1003071A0(a1);
}

void sub_100307100(uint64_t a1@<X8>)
{
  sub_100306978();
  if (!v1)
  {
    *(_DWORD *)a1 = v3;
    *(unsigned char *)(a1 + 4) = BYTE4(v3) & 1;
  }
}

void *sub_100307134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *(*a4)(uint64_t *__return_ptr)@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = sub_1003069C8(a1, a2, a3, a4);
  if (!v5)
  {
    *(_DWORD *)a5 = result;
    *(unsigned char *)(a5 + 4) = BYTE4(result) & 1;
  }
  return result;
}

void *sub_100307168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_100307134(a1, a2, a3, *(void *(**)(uint64_t *__return_ptr))(v4 + 16), a4);
}

uint64_t sub_100307184()
{
  sub_1002E1C9C();
  return sub_1002FAA58(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1003071A0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1003071D4()
{
  sub_1002E1C9C();
  return sub_100304150(v0, v1, v2);
}

uint64_t sub_1003071F0@<X0>(uint64_t a1@<X8>)
{
  return sub_100306920(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_10030720C()
{
  return sub_100300F34(v0, 40);
}

uint64_t sub_100307218()
{
  sub_1002239B4(*(void *)(v0 + 16));
  sub_1002239B4(*(void *)(v0 + 24));
  uint64_t v1 = sub_1003075C0();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_100307250()
{
  sub_1002239B4(*(void *)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100307288()
{
  return sub_100300F34(v0, 24);
}

uint64_t sub_100307294()
{
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 55, 7);
}

uint64_t sub_1003072D4()
{
  swift_release();
  return _swift_deallocObject(v0, 39, 7);
}

void sub_10030730C()
{
  sub_1002E1C9C();
  sub_100306398(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_100307328()
{
  sub_1002E1C9C();
  return sub_100306498(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_100307344()
{
}

uint64_t sub_10030735C()
{
  return sub_1002F6E54();
}

void sub_100307374()
{
}

uint64_t sub_1003074DC()
{
  return sub_100306B58();
}

void *sub_1003074F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_100307168(a1, a2, a3, a4);
}

void *sub_10030750C(void *result)
{
  result[2] = v4;
  result[3] = v1;
  result[4] = v3;
  result[5] = v2;
  return result;
}

void *sub_10030751C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1003020F4(v13, v12, v11, v15, v10, v14, v17, v16, a9, a10);
}

uint64_t sub_100307550()
{
  return v0;
}

void sub_100307578()
{
  *(void *)(v1 - 72) = v0;
}

uint64_t sub_1003075A0()
{
  return v0;
}

uint64_t sub_1003075C0()
{
  return v0;
}

uint64_t sub_1003075D0()
{
  return v0;
}

uint64_t sub_1003075F8()
{
  return swift_dynamicCast();
}

uint64_t sub_100307618(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v5 = a3;
    if (v4 >= a3)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *uint64_t v13 = v5;
    }
    else
    {
      uint64_t v6 = result;
      uint64_t v7 = *(void *)result;
      uint64_t v8 = *(void *)(result + 8);
      int v9 = *(_DWORD *)(result + 16);
      __int16 v10 = *(_WORD *)(result + 20);
      char v11 = *(unsigned char *)(result + 22);
      swift_retain();
      uint64_t v12 = (uint64_t)sub_10032D3F0((uint64_t *)v6, v4, v5, 1);
      if (!v3)
      {
        uint64_t v5 = v12;
        if ((v12 & 0x8000000000000000) == 0)
        {
          swift_release();
          return v5;
        }
        sub_100296090();
        sub_10020DD10();
        *uint64_t v14 = 0xD00000000000001BLL;
        v14[1] = 0x80000001005E67A0;
        v14[2] = 0xD000000000000020;
        v14[3] = 0x80000001005E63C0;
        v14[4] = 135;
        swift_willThrow();
      }
      swift_release();
      *(void *)uint64_t v6 = v7;
      *(void *)(v6 + 8) = v8;
      *(_DWORD *)(v6 + 16) = v9;
      *(_WORD *)(v6 + 20) = v10;
      *(unsigned char *)(v6 + 22) = v11;
    }
    swift_willThrow();
    return v5;
  }
  __break(1u);
  return result;
}

void sub_100307768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *uint64_t v21 = a3;
      goto LABEL_6;
    }
    sub_100307CCC();
    uint64_t v5 = sub_100307D14();
    sub_100307824(v5, v6, v7, v8, v9, v10, v11, v12);
    if (v3)
    {
      uint64_t v13 = swift_release();
      sub_100307D38(v13, v14, v15, v16, v17, v18, v19, v20, *(int *)v22, v22[4], v23, v24, v25);
LABEL_6:
      swift_willThrow();
      return;
    }
    swift_release();
  }
}

void sub_100307824(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v35 = a7;
  uint64_t v34 = a4;
  uint64_t v15 = sub_10000566C(&qword_1007108C8);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v31 - v19;
  sub_10031E1C0();
  if (!v8)
  {
    uint64_t v21 = (void *)swift_allocObject();
    uint64_t v32 = a8;
    uint64_t v33 = v18;
    uint64_t v22 = (uint64_t)v21;
    void v21[2] = v34;
    v21[3] = a5;
    uint64_t v23 = v35;
    void v21[4] = a6;
    v21[5] = v23;
    swift_retain();
    sub_100304284(a1, a2, a3, (uint64_t)sub_100307CB0, v22, (uint64_t)v20);
    swift_release();
    uint64_t v24 = v35;
    uint64_t v25 = v34;
    sub_10031E2BC(a1, a2, a3);
    uint64_t v26 = v25;
    uint64_t v27 = (void *)swift_allocObject();
    v27[2] = v26;
    v27[3] = a5;
    v27[4] = a6;
    v27[5] = v24;
    swift_retain();
    uint64_t v28 = (uint64_t)v33;
    sub_100304284(a1, a2, a3, (uint64_t)sub_100307C28, (uint64_t)v27, (uint64_t)v33);
    swift_release();
    sub_10031E1C0();
    uint64_t v29 = v32;
    sub_100307C48((uint64_t)v20, v32);
    uint64_t matched = type metadata accessor for SequenceMatchData();
    sub_100307C48(v28, v29 + *(int *)(matched + 20));
  }
}

uint64_t sub_100307AD4()
{
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100307B0C(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_1007108C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100307B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *uint64_t v13 = a3;
      goto LABEL_6;
    }
    sub_100307CCC();
    sub_100307D14();
    sub_100308450();
    if (v3)
    {
      uint64_t v5 = swift_release();
      sub_100307D38(v5, v6, v7, v8, v9, v10, v11, v12, *(int *)v14, v14[4], v15, v16, v17);
LABEL_6:
      swift_willThrow();
      return;
    }
    swift_release();
  }
}

void sub_100307C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_100307C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_1007108C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100307CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_100307CCC()
{
  return swift_retain();
}

uint64_t sub_100307D14()
{
  return v0;
}

void sub_100307D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, __int16 a11, __int16 a12, int a13)
{
  *(void *)uint64_t v13 = v14;
  *(void *)(v13 + 8) = v15;
  *(_DWORD *)(v13 + 16) = a13;
  *(_WORD *)(v13 + 20) = a12;
  *(unsigned char *)(v13 + 22) = a10;
}

void sub_100307D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

unint64_t sub_100307D88(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t result = (unint64_t)sub_10032D3F0(a1, a2, a3, 0);
  if (!v3)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      sub_100296090();
      sub_10020DD10();
      *uint64_t v5 = 0xD000000000000011;
      unint64_t v6 = 0x80000001005E65D0;
      uint64_t v7 = 167;
    }
    else
    {
      unint64_t result = sub_1002FA1CC(result);
      if ((result & 0x100000000) == 0) {
        return result;
      }
      sub_100296090();
      sub_10020DD10();
      *uint64_t v5 = 0xD000000000000015;
      unint64_t v6 = 0x80000001005E6910;
      uint64_t v7 = 28;
    }
    v5[1] = v6;
    v5[2] = 0xD000000000000020;
    v5[3] = 0x80000001005E63C0;
    v5[4] = v7;
    return swift_willThrow();
  }
  return result;
}

void sub_100307E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100307E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *uint64_t v10 = a3;
      goto LABEL_6;
    }
    sub_100301100();
    unint64_t v6 = v5;
    uint64_t v7 = v5[1];
    __int16 v12 = *((_WORD *)v5 + 10);
    int v13 = *((_DWORD *)v5 + 4);
    char v11 = *((unsigned char *)v5 + 22);
    uint64_t v14 = *v5;
    uint64_t v9 = v8;
    swift_retain();
    sub_100308CA0();
    v9();
    if (v3)
    {
      swift_release();
      *unint64_t v6 = v14;
      v6[1] = v7;
      *((_DWORD *)v6 + 4) = v13;
      *((_WORD *)v6 + 10) = v12;
      *((unsigned char *)v6 + 22) = v11;
LABEL_6:
      swift_willThrow();
      return;
    }
    swift_release();
  }
}

uint64_t sub_100307FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v11 = (void *)swift_allocObject();
  v11[2] = a4;
  v11[3] = a5;
  v11[4] = a6;
  v11[5] = a7;
  uint64_t v23 = sub_100308C00;
  uint64_t v24 = v11;
  uint64_t v18 = a4;
  uint64_t v19 = a5;
  uint64_t v20 = a6;
  uint64_t v21 = a7;
  uint64_t v15 = sub_100308C1C;
  __int16 v16 = &v17;
  swift_retain();
  uint64_t v12 = sub_10033CB54((uint64_t)sub_100308BB8, (uint64_t)v22, (uint64_t)sub_100308BB8, (uint64_t)v14);
  swift_release();
  return v12;
}

uint64_t sub_1003080E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v41 = a7;
  uint64_t v43 = a8;
  uint64_t v14 = sub_10000566C(&qword_10070FD90);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  char v17 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v40 - v18;
  sub_10000566C(&qword_100710660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6670;
  v40[0] = a1;
  v40[1] = a2;
  uint64_t v21 = a2;
  uint64_t v23 = v41;
  uint64_t v22 = (uint64_t)v42;
  v40[2] = a3;
  uint64_t v24 = sub_100307FA4(a1, v21, a3, a4, a5, a6, v41);
  if (v22)
  {
    *(void *)(inited + 16) = 0;
    return swift_release();
  }
  else
  {
    uint64_t v26 = v17;
    uint64_t v42 = v19;
    *(void *)(inited + 32) = v24;
    uint64_t v47 = inited;
    __chkstk_darwin(v24);
    v40[-4] = a4;
    v40[-3] = a5;
    v40[-2] = a6;
    v40[-1] = v23;
    sub_10031E854();
    uint64_t v27 = v47;
    sub_100223B18();
    uint64_t v28 = v17;
    sub_1005E3680();
    uint64_t v29 = *(void *)(v27 + 16);
    uint64_t v30 = v43;
    if (v29)
    {
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v41 = v27;
      uint64_t v31 = (unsigned int *)(v27 + 36);
      while (1)
      {
        int v32 = *(v31 - 1);
        BOOL v33 = v32 != 0;
        unsigned int v34 = v32 - 1;
        if (!v33) {
          break;
        }
        if (!*v31) {
          goto LABEL_16;
        }
        unsigned int v35 = *v31;
        if (v34 > *v31) {
          goto LABEL_17;
        }
        unsigned int v45 = v34;
        unsigned int v46 = v35;
        if (v35 != v34)
        {
          sub_10000566C(&qword_100710538);
          uint64_t v36 = (uint64_t (*)(char *, void))sub_1005E3620();
          sub_10000566C(&qword_1007109E8);
          sub_1005E35D0();
          uint64_t v28 = v26;
          uint64_t result = v36(v44, 0);
          uint64_t v30 = v43;
        }
        v31 += 2;
        if (!--v29)
        {
          swift_bridgeObjectRelease();
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
    }
    else
    {
LABEL_13:
      swift_bridgeObjectRelease();
      uint64_t v37 = (uint64_t)v28;
      uint64_t v38 = (uint64_t)v42;
      sub_10001FDF0(v37, (uint64_t)v42, &qword_10070FD90);
      sub_10000566C(&qword_100710538);
      if (sub_1005E3630())
      {
        sub_100296090();
        swift_allocError();
        *uint64_t v39 = 0xD000000000000011;
        v39[1] = 0x80000001005E6930;
        v39[2] = 0xD000000000000020;
        v39[3] = 0x80000001005E63C0;
        v39[4] = 56;
        swift_willThrow();
        return sub_100007A48(v38, &qword_10070FD90);
      }
      else
      {
        return sub_10001FDF0(v38, v30, &qword_10070FD90);
      }
    }
  }
  return result;
}

void sub_100308450()
{
  sub_100301100();
  uint64_t v15 = v0;
  uint64_t v1 = sub_10000566C(&qword_10070FD90);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000566C(&qword_100710908);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100308CA0();
  uint64_t v7 = v16;
  sub_100307E84(v8, v9, v10);
  if (!v7)
  {
    uint64_t v11 = v15;
    sub_10024E2A4((uint64_t)v3, (uint64_t)v6);
    uint64_t v12 = sub_10000566C(&qword_1007108C0);
    if (getEnumTagSinglePayload for ClientCommand((uint64_t)v6, 1, v12) == 1)
    {
      sub_100007A48((uint64_t)v6, &qword_100710908);
      sub_100296090();
      sub_10020DD10();
      *int v13 = 0xD000000000000015;
      v13[1] = 0x80000001005E6950;
      void v13[2] = 0xD000000000000020;
      v13[3] = 0x80000001005E63C0;
      v13[4] = 65;
      swift_willThrow();
    }
    else
    {
      sub_10001FDF0((uint64_t)v6, v11, &qword_1007108C0);
    }
  }
}

unint64_t sub_100308630(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7 = sub_1002FAA58(a1, a2, a3, a4, a5, a6, a7);
  return v7 | ((unint64_t)v7 << 32);
}

uint64_t sub_100308650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a4;
  v11[3] = a5;
  v11[4] = a6;
  v11[5] = a7;
  uint64_t v23 = sub_100308C6C;
  uint64_t v24 = v11;
  uint64_t v18 = a4;
  uint64_t v19 = a5;
  uint64_t v20 = a6;
  uint64_t v21 = a7;
  uint64_t v15 = sub_100308C84;
  uint64_t v16 = &v17;
  swift_retain();
  uint64_t v12 = sub_10033CB54((uint64_t)sub_100308BB8, (uint64_t)v22, (uint64_t)sub_100308BB8, (uint64_t)v14);
  swift_release();
  return v12;
}

uint64_t *sub_10030878C(uint64_t *result, uint64_t a2, uint64_t a3)
{
  if (!__OFADD__(a2, 1))
  {
    uint64_t v4 = a3;
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *uint64_t v10 = v4;
      swift_retain();
    }
    else
    {
      uint64_t v5 = result;
      uint64_t v6 = *result;
      uint64_t v7 = result[1];
      int v8 = *((_DWORD *)result + 4);
      char v11 = *((unsigned char *)result + 22);
      __int16 v12 = *((_WORD *)result + 10);
      swift_retain();
      swift_retain();
      sub_1002FF9FC();
      if (!v3)
      {
        uint64_t v4 = v9;
        swift_release();
        swift_release();
        return (uint64_t *)v4;
      }
      swift_release();
      *uint64_t v5 = v6;
      v5[1] = v7;
      *((_DWORD *)v5 + 4) = v8;
      *((_WORD *)v5 + 10) = v12;
      *((unsigned char *)v5 + 22) = v11;
    }
    swift_willThrow();
    swift_release();
    return (uint64_t *)v4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003088D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v21 = a8;
  sub_10000566C(&qword_100710660);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1005F6670;
  uint64_t v17 = sub_100308650(a1, a2, a3, a4, a5, a6, a7);
  if (v8)
  {
    *(void *)(v16 + 16) = 0;
    return swift_release();
  }
  else
  {
    uint64_t v20 = (uint64_t)&v20;
    *(void *)(v16 + 32) = v17;
    uint64_t v22 = v16;
    __chkstk_darwin();
    sub_10031E854();
    uint64_t result = v22;
    if (*(void *)(v22 + 16))
    {
      *uint64_t v21 = v22;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_100296090();
      sub_10020DD10();
      *uint64_t v19 = 0xD000000000000011;
      v19[1] = 0x80000001005E6930;
      v19[2] = 0xD000000000000020;
      v19[3] = 0x80000001005E63C0;
      v19[4] = 93;
      return swift_willThrow();
    }
  }
  return result;
}

void sub_100308AA0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X7>, void *a9@<X8>)
{
  sub_10031E1C0();
  if (!v9) {
    *a9 = a8(a1, a2, a3, a4, a5, a6, a7);
  }
}

void sub_100308B50()
{
  sub_1002E1C9C();
  sub_100308AA0(v0, v1, v2, v3, v4, v5, v6, sub_100308650, v7);
}

uint64_t sub_100308B80()
{
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100308BB8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100308C38(a1);
}

void sub_100308BD0()
{
  sub_1002E1C9C();
  sub_100308AA0(v0, v1, v2, v3, v4, v5, v6, sub_100307FA4, v7);
}

uint64_t *sub_100308C00()
{
  sub_1002E1C9C();
  return sub_10030878C(v0, v1, v2);
}

unint64_t sub_100308C1C()
{
  sub_1002E1C9C();
  return sub_100308630(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_100308C38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t *sub_100308C6C()
{
  return sub_100308C00();
}

unint64_t sub_100308C84()
{
  return sub_100308C1C();
}

uint64_t sub_100308CB4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v4;
  if (!result || a1 > *(void *)(v4 + 24) >> 1)
  {
    return a2();
  }
  return result;
}

void sub_100308D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void (*a13)(), void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  sub_10030108C();
  a25 = v26;
  a26 = v27;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  sub_10031D798();
  uint64_t v36 = (void *)sub_1002E1F90();
  v36[2] = v35;
  v36[3] = v33;
  v36[4] = v31;
  v36[5] = v29;
  a13 = sub_1002F6F74;
  a14 = v36;
  swift_retain();
  sub_10031DCBC();
  sub_10033C780((uint64_t)sub_10031CFE0, (uint64_t)&a11, (uint64_t)sub_10030B1F0, 0);
  swift_release();
  sub_100301040();
}

void sub_100308E48()
{
}

uint64_t sub_100308E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100309854(a1, a2, a3, a4, a5, a6, a7);
}

void sub_100308ECC()
{
  sub_10031DC70();
  sub_10031F9B4();
  if (v0)
  {
    sub_10031D458();
    sub_10000566C(qword_100710378);
    if (sub_10031D118())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_errorRelease();
      sub_10031D458();
      if ((sub_10031D118() & 1) == 0) {
        goto LABEL_12;
      }
      swift_errorRelease();
      sub_10031D4E0();
      sub_10031DBFC();
    }
    swift_bridgeObjectRelease();
    swift_errorRelease();
    sub_10031D5B8();
    sub_10031F9B4();
    sub_10031D458();
    if (sub_10031D118())
    {
      swift_errorRelease();
LABEL_11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      sub_10031D5D4();
      sub_10031F9B4();
      goto LABEL_13;
    }
    swift_errorRelease();
    sub_10031D458();
    if (sub_10031D118())
    {
      swift_errorRelease();
      sub_10031DC30();
      goto LABEL_11;
    }
LABEL_12:
    swift_errorRelease();
  }
LABEL_13:
  sub_10031D4A8();
}

#error "100309090: call analysis failed (funcsize=99)"

uint64_t sub_1003091EC()
{
  uint64_t result = sub_10031F9B4();
  if (v0)
  {
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      swift_errorRelease();
      return sub_10031F9B4();
    }
    swift_errorRelease();
    swift_errorRetain();
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    return swift_errorRelease();
  }
  return result;
}

__n128 sub_100309438()
{
  sub_1003094A4();
  return result;
}

void sub_1003094A4()
{
  sub_10031DC70();
  uint64_t v8 = sub_10031D3A4(v1, v2, v3, v4, v5, v6, v7);
  v9(v8);
  if (v0)
  {
    sub_10031D458();
    sub_10000566C(qword_100710378);
    if (sub_10031D118())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_errorRelease();
      sub_10031D458();
      if ((sub_10031D118() & 1) == 0) {
        goto LABEL_12;
      }
      swift_errorRelease();
      sub_10031D4E0();
      sub_10031DBFC();
    }
    swift_bridgeObjectRelease();
    swift_errorRelease();
    uint64_t v10 = sub_10031D5B8();
    v11(v10);
    sub_10031D458();
    if (sub_10031D118())
    {
      swift_errorRelease();
LABEL_11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v12 = sub_10031D5D4();
      v13(v12);
      goto LABEL_13;
    }
    swift_errorRelease();
    sub_10031D458();
    if (sub_10031D118())
    {
      swift_errorRelease();
      sub_10031DC30();
      goto LABEL_11;
    }
LABEL_12:
    swift_errorRelease();
  }
LABEL_13:
  sub_10031D4A8();
}

void sub_100309608()
{
  sub_100320B88();
  if (v0)
  {
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      swift_errorRelease();
      sub_100320B88();
      return;
    }
    swift_errorRelease();
    swift_errorRetain();
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_errorRelease();
  }
}

#error "10030989C: call analysis failed (funcsize=103)"

void sub_100309A08()
{
  sub_100320520();
  if (v0)
  {
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRetain();
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_errorRelease();
        return;
      }
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_errorRelease();
    sub_100320520();
  }
}

void sub_100309C60()
{
  sub_10031DC70();
  uint64_t v8 = sub_10031D3A4(v1, v2, v3, v4, v5, v6, v7);
  v9(v8);
  if (v0)
  {
    sub_10031D458();
    sub_10000566C(qword_100710378);
    if (sub_10031D118())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_errorRelease();
      sub_10031D458();
      if ((sub_10031D118() & 1) == 0) {
        goto LABEL_12;
      }
      swift_errorRelease();
      sub_10031D4E0();
      sub_10031DBFC();
    }
    swift_bridgeObjectRelease();
    swift_errorRelease();
    uint64_t v10 = sub_10031D5B8();
    v11(v10);
    sub_10031D458();
    if (sub_10031D118())
    {
      swift_errorRelease();
LABEL_11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v12 = sub_10031D5D4();
      v13(v12);
      goto LABEL_13;
    }
    swift_errorRelease();
    sub_10031D458();
    if (sub_10031D118())
    {
      swift_errorRelease();
      sub_10031DC30();
      goto LABEL_11;
    }
LABEL_12:
    swift_errorRelease();
  }
LABEL_13:
  sub_10031D4A8();
}

uint64_t sub_100309DC4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v9 >= a3)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *uint64_t v19 = a3;
      return swift_willThrow();
    }
    uint64_t v15 = result;
    uint64_t v17 = *(void *)result;
    uint64_t v18 = *(void *)(result + 8);
    __int16 v21 = *(_WORD *)(result + 20);
    int v22 = *(_DWORD *)(result + 16);
    char v20 = *(unsigned char *)(result + 22);
    swift_retain();
    sub_100316ED8(v15, v9, a3, a4, a5, a6, a7, a8);
    if (v8)
    {
      swift_release();
      *(void *)uint64_t v15 = v17;
      *(void *)(v15 + 8) = v18;
      *(_DWORD *)(v15 + 16) = v22;
      *(_WORD *)(v15 + 20) = v21;
      *(unsigned char *)(v15 + 22) = v20;
      return swift_willThrow();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100309EF0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t)sub_10032D3F0(a1, a2, a3, 1);
  uint64_t v7 = v6;
  if (!v4)
  {
    if (v6 < 0)
    {
      sub_100296090();
      sub_10020DD10();
      sub_10031DED4();
      sub_10031D6A0(v9, v10);
      sub_10031DC8C(v11, v12);
      goto LABEL_6;
    }
    if (v6 > a4)
    {
      sub_1002E14DC();
      sub_10020DD10();
      uint64_t *v8 = v7;
      v8[1] = a4;
LABEL_6:
      swift_willThrow();
    }
  }
  return v7;
}

uint64_t sub_100309F9C()
{
  sub_1002E1F6C();
  sub_1002E1DF0();
  sub_1002E1CC4();
  sub_10033C940(v0, v1, v2, v3);
  return sub_10031D354(v4 & 0xFFFFFFFFFFFFFFLL);
}

void sub_10030A038()
{
  sub_10031D8C0();
  sub_10031D600();
  uint64_t v0 = (void *)sub_1002E1F90();
  sub_10031DEA8(v0);
  uint64_t v1 = (void *)sub_1002E1F90();
  sub_10031DEA8(v1);
  swift_retain_n();
  sub_10031DCBC();
  sub_10031D83C((uint64_t)sub_1002F30E4, v2, (uint64_t)sub_10031CFE0, v3, v4);
  sub_10031DB84();
  swift_release();
  sub_10031D820();
}

void sub_10030A138()
{
  sub_10031D8C0();
  sub_10031D600();
  uint64_t v0 = (void *)sub_1002E1F90();
  sub_10031DEA8(v0);
  uint64_t v1 = (void *)sub_1002E1F90();
  sub_10031DEA8(v1);
  swift_retain_n();
  sub_10031DCBC();
  sub_10031D83C((uint64_t)sub_10031CFE0, v2, (uint64_t)sub_10031CFE0, v3, v4);
  sub_10031DB84();
  swift_release();
  sub_10031D820();
}

void sub_10030A238()
{
  sub_10031D99C();
  sub_10031D174();
  uint64_t v1 = sub_10031D0B8();
  uint64_t v2 = sub_10032120C(v1);
  if (!v0)
  {
    uint64_t v6 = v2;
    uint64_t v7 = v3;
    uint64_t v8 = v4;
    uint64_t v9 = v5;
    if (qword_10070FD18 != -1) {
      swift_once();
    }
    BOOL v10 = v6 == static Media.TopLevelType.message && v7 == unk_100761F20;
    if (!v10 && (sub_1005E3290() & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_19:
      swift_bridgeObjectRelease();
      sub_100296090();
      sub_10020DD10();
      sub_10031DDC8();
      *int v13 = v14;
      v13[1] = 0x80000001005E6AD0;
      void v13[2] = v15;
      v13[3] = 0x80000001005E63C0;
      sub_1002E9998((uint64_t)v13, 1398);
      goto LABEL_20;
    }
    if (qword_10070FD48 != -1) {
      swift_once();
    }
    if (v8 == static Media.Subtype.rfc822 && v9 == unk_100761F80)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v12 = sub_1005E3290();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0) {
        goto LABEL_19;
      }
    }
  }
LABEL_20:
  sub_10031D968();
}

void sub_10030A3C4()
{
  sub_10031D99C();
  sub_10030A038();
  if (!v0)
  {
    sub_1002E8598();
    sub_10031E368(v1, v2, v3, v4, v5, 1406);
    uint64_t v6 = sub_1005E1CB0();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    BOOL v9 = v6 == 0x74616E7265746C61 && v8 == 0xEB00000000657669;
    if (v9 || (sub_1002A8D18() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      if (qword_10070FD30 == -1) {
        goto LABEL_24;
      }
    }
    else
    {
      BOOL v10 = v6 == 0x646578696DLL && v8 == 0xE500000000000000;
      if (v10 || (sub_1002A8D18() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_10070FD40 == -1) {
          goto LABEL_24;
        }
      }
      else
      {
        BOOL v11 = v6 == 0x646574616C6572 && v8 == 0xE700000000000000;
        if (!v11 && (sub_1002A8D18() & 1) == 0)
        {
          sub_1005E1CB0();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
        swift_bridgeObjectRelease();
        if (qword_10070FD38 == -1) {
          goto LABEL_24;
        }
      }
    }
    swift_once();
LABEL_24:
    swift_bridgeObjectRetain();
    swift_release();
  }
LABEL_3:
  sub_10031D968();
}

void sub_10030A634(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  sub_10031F63C(a1, a2, a3);
  if (!v4)
  {
    sub_1002E8598();
    uint64_t v11 = sub_10031E368(v6, v7, v8, v9, v10, 107);
    a4(v11);
    swift_release();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10030A6D8()
{
  sub_1002E1F6C();
  sub_1002E1DF0();
  sub_1002E1CC4();
  sub_10033C780(v0, v1, v2, v3);
  return sub_10031D354(v4 & 0xFFFFFFFFFFFFFFLL);
}

uint64_t sub_10030A774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10031F570(a1, a2, a3);
  if (!v3)
  {
    uint64_t v8 = sub_10031E368(v5, v6, v7 & 0xFFFFFFFFFFFFFFLL, 0xD000000000000020, 0x80000001005E63C0, 2153);
    uint64_t v10 = v9;
    v11._countAndFlagsBits = sub_1005E1CD0();
    LOBYTE(v12) = MailboxAttribute.init(rawValue:)(v11);
    if (v12 == 8)
    {
      sub_1005E2C80(41);
      swift_bridgeObjectRelease();
      v15._countAndFlagsBits = v8;
      v15._object = v10;
      sub_1005E1E30(v15);
      swift_bridgeObjectRelease();
      v16._countAndFlagsBits = 0xD000000000000021;
      v16._object = (void *)0x80000001005E6B80;
      sub_1005E1E30(v16);
      sub_100296090();
      sub_10020DD10();
      *int v13 = 0x20646E756F46;
      v13[1] = 0xE600000000000000;
      void v13[2] = 0xD000000000000020;
      v13[3] = 0x80000001005E63C0;
      sub_1002E9998((uint64_t)v13, 2155);
      swift_release();
    }
    else
    {
      uint64_t v4 = v12;
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  return v4;
}

uint64_t sub_10030A8D0()
{
  sub_10031DAE8();
  sub_1003091EC();
  return sub_10031D354(v0);
}

void sub_10030A9A0()
{
  sub_10031D1E8();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    if (v1 + 1 >= v2)
    {
      sub_1002DB5BC();
      uint64_t v9 = sub_10020DD10();
      sub_10031DB40(v9, v10);
      goto LABEL_6;
    }
    uint64_t v4 = v3;
    sub_10031D3DC();
    uint64_t v5 = (uint64_t *)sub_10031D9EC();
    sub_10031A308(v5, v6, v7, v4, v8);
    if (v0)
    {
      swift_release();
      sub_10031D780();
LABEL_6:
      swift_willThrow();
      return;
    }
    swift_release();
  }
}

void sub_10030AA50()
{
  sub_10031D91C();
  if (!__OFADD__(v1, 1))
  {
    if (v1 + 1 >= v2)
    {
      sub_1002DB5BC();
      uint64_t v7 = sub_10020DD10();
      sub_10031DEC8(v7, v8);
    }
    else
    {
      sub_10031D524();
      uint64_t v3 = (uint64_t *)sub_10031DEB4();
      sub_10031A308(v3, v4, v5, 2, v6);
      if (!v0)
      {
        swift_release();
        goto LABEL_7;
      }
      swift_release();
      sub_10031D700();
    }
    swift_willThrow();
LABEL_7:
    sub_10031D8DC();
    return;
  }
  __break(1u);
}

void sub_10030AAF4()
{
  sub_10031D91C();
  if (!__OFADD__(v1, 1))
  {
    if (v1 + 1 >= v2)
    {
      sub_1002DB5BC();
      uint64_t v7 = sub_10020DD10();
      sub_10031DEC8(v7, v8);
    }
    else
    {
      sub_10031D524();
      uint64_t v3 = (uint64_t *)sub_10031DEB4();
      sub_10031A308(v3, v4, v5, 4, v6);
      if (!v0)
      {
        swift_release();
        goto LABEL_7;
      }
      swift_release();
      sub_10031D700();
    }
    swift_willThrow();
LABEL_7:
    sub_10031D8DC();
    return;
  }
  __break(1u);
}

uint64_t sub_10030AB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1002E1F24(a1, a2, a3, a4, a5, a6, a7);
  sub_1002E1F6C();
  sub_1002E1DF0();
  sub_10031D0D8();
  sub_10033C940(v7, v8, v9, v10);
  return sub_10031D354(v11 & 0xFFFFFFFFFFFFFFLL);
}

uint64_t sub_10030AC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1002E1F24(a1, a2, a3, a4, a5, a6, a7);
  sub_1002E1F6C();
  sub_1002E1DF0();
  sub_10031D0D8();
  return sub_10033CBA4(v7, v8, v9, v10);
}

uint64_t sub_10030ACD0()
{
  sub_1002E1F6C();
  uint64_t v6 = sub_10031C4CC;
  uint64_t v7 = &v8;
  sub_1002E1DF0();
  sub_10033CD68(sub_10030AD74, 0, sub_10031C4E8, v5, v2, v1, v0, 0xD000000000000020);
  return sub_10031D354(v3);
}

uint64_t sub_10030AD74@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_100314B0C(a1, a2, a3);
  if (!v4)
  {
    *(void *)a4 = result;
    *(void *)(a4 + 8) = v7;
    *(unsigned char *)(a4 + 16) = v8;
  }
  return result;
}

void sub_10030ADA4()
{
  sub_10031D1E8();
  uint64_t v44 = v3;
  uint64_t v46 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v16 = sub_10000566C(&qword_10070FE28);
  uint64_t v17 = sub_100224550(v16);
  __chkstk_darwin(v17);
  sub_100254960();
  uint64_t v18 = v13 + 1;
  if (!__OFADD__(v13, 1))
  {
    if (v18 >= v11)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *uint64_t v31 = v11;
    }
    else
    {
      uint64_t v38 = v7;
      uint64_t v40 = v9;
      uint64_t v42 = v5;
      uint64_t v19 = *(void *)v15;
      uint64_t v20 = *(void *)(v15 + 8);
      int v21 = *(_DWORD *)(v15 + 16);
      __int16 v22 = *(_WORD *)(v15 + 20);
      char v23 = *(unsigned char *)(v15 + 22);
      swift_retain();
      sub_10030B600(v15, v18, v11, v24, v25, v26, v27, v28, v33, v34, v36, v38, v40, v42, v44, v46, v48, v49, v50, v51);
      if (!v0)
      {
        uint64_t v35 = v29;
        uint64_t v37 = v30;
        swift_retain();
        sub_10032B6F0(v15, v18, v11, v41, v39, v43, v47);
        uint64_t v32 = sub_10000566C(&qword_10070FE48);
        sub_1002ECC20(v1, (uint64_t)v45 + *(int *)(v32 + 52));
        swift_release();
        *unsigned int v45 = v35;
        v45[1] = v37;
LABEL_8:
        sub_10031D59C();
        return;
      }
      swift_release();
      *(void *)uint64_t v15 = v19;
      *(void *)(v15 + 8) = v20;
      *(_DWORD *)(v15 + 16) = v21;
      *(_WORD *)(v15 + 20) = v22;
      *(unsigned char *)(v15 + 22) = v23;
    }
    swift_willThrow();
    goto LABEL_8;
  }
  __break(1u);
}

void sub_10030AF4C()
{
}

void sub_10030AF78()
{
  sub_10031DE28();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    if (v1 + 1 >= v2)
    {
      sub_1002DB5BC();
      uint64_t v6 = sub_10020DD10();
      sub_10031DB40(v6, v7);
      goto LABEL_6;
    }
    uint64_t v4 = v3;
    sub_10031D3DC();
    uint64_t v5 = sub_10031D9EC();
    v4(v5);
    if (v0)
    {
      swift_release();
      sub_10031D780();
LABEL_6:
      swift_willThrow();
      return;
    }
    uint64_t v8 = swift_release();
    sub_10031D470(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  }
}

double sub_10030B030@<D0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, _OWORD *a5@<X8>)
{
  sub_10000566C(&qword_1007123E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6680;
  *(void *)(inited + 32) = sub_100314924;
  *(void *)(inited + 40) = 0;
  *(void *)(inited + 48) = sub_100314950;
  *(void *)(inited + 56) = 0;
  uint64_t v11 = (void *)sub_1002E1F90();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  v11[5] = a4;
  uint64_t v12 = sub_1002E8414();
  *(void *)(v12 + 16) = sub_10031C9C0;
  *(void *)(v12 + 24) = v11;
  *(void *)(inited + 64) = sub_1002F31F4;
  *(void *)(inited + 72) = v12;
  uint64_t v13 = (void *)sub_1002E1F90();
  void v13[2] = a1;
  v13[3] = a2;
  v13[4] = a3;
  v13[5] = a4;
  uint64_t v14 = sub_1002E8414();
  *(void *)(v14 + 16) = sub_10031C9DC;
  *(void *)(v14 + 24) = v13;
  *(void *)(inited + 80) = sub_10031CE68;
  *(void *)(inited + 88) = v14;
  sub_1002E1F54();
  sub_10031D6B4();
  sub_10033E128();
  swift_setDeallocating();
  sub_10034A020();
  if (!v20)
  {
    double result = *(double *)&v16;
    *a5 = v16;
    a5[1] = v17;
    a5[2] = v18;
    a5[3] = v19;
  }
  return result;
}

void sub_10030B1F0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_10030B798(a1, a2, a3);
  if (!v4)
  {
    *(void *)a4 = v6;
    *(void *)(a4 + 8) = v7;
    *(_DWORD *)(a4 + 16) = v8;
    *(_WORD *)(a4 + 20) = WORD2(v8);
    *(unsigned char *)(a4 + 22) = BYTE6(v8);
  }
}

uint64_t sub_10030B238()
{
  sub_10031DE04();
  uint64_t result = v1();
  if (!v0) {
    return sub_10031D2D0(result, v3, v4);
  }
  return result;
}

uint64_t sub_10030B268@<X0>(uint64_t *a1@<X8>)
{
  return sub_10030E2C0((uint64_t (*)(void))sub_1003126EC, a1);
}

uint64_t sub_10030B294()
{
  sub_10031DE04();
  uint64_t result = v2();
  if (!v1)
  {
    *uint64_t v0 = result;
    v0[1] = v4;
  }
  return result;
}

uint64_t sub_10030B2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1002E1F24(a1, a2, a3, a4, a5, a6, a7);
  sub_1002E1F6C();
  sub_1002E1DF0();
  sub_10031D0D8();
  sub_10033C780(v7, v8, v9, v10);
  return sub_10031D354(v11 & 0xFFFFFFFFFFFFFFLL);
}

uint64_t sub_10030B368()
{
  sub_1002E1FA8();
  sub_1002E1F6C();
  sub_10031DD70();
  sub_10031D2A8();
  uint64_t result = sub_10033CFEC(v2, v3, v4, v5, v6);
  if (!v1) {
    return sub_10028CC70(&v8, v0);
  }
  return result;
}

uint64_t sub_10030B43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1002E1F24(a1, a2, a3, a4, a5, a6, a7);
  sub_1002E1F6C();
  sub_1002E1DF0();
  sub_10031D0D8();
  return sub_10033CBA4(v7, v8, v9, v10);
}

uint64_t sub_10030B4D0()
{
  sub_1002E1F6C();
  sub_1002E1DF0();
  sub_1002E1CC4();
  return sub_10033CBA4(v0, v1, v2, v3);
}

void sub_10030B55C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  sub_10031F6EC(a1, a2, a3);
  if (!v4)
  {
    sub_1002E8598();
    uint64_t v11 = sub_10031E368(v6, v7, v8, v9, v10, 579);
    a4(v11);
    swift_bridgeObjectRelease();
    swift_release();
  }
}

void sub_10030B600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10031D91C();
  a19 = v22;
  a20 = v25;
  uint64_t v27 = v26 + 1;
  if (!__OFADD__(v26, 1))
  {
    uint64_t v28 = v24;
    if (v27 >= v24)
    {
      sub_1002DB5BC();
      uint64_t v30 = sub_10020DD10();
      sub_10031DB40(v30, v31);
    }
    else
    {
      uint64_t v29 = v23;
      sub_10031D524();
      sub_1003171D8((uint64_t)v29, v27, v28, &a9);
      if (!v20)
      {
        swift_release();
        goto LABEL_7;
      }
      swift_release();
      *uint64_t v29 = v21;
      sub_10031D68C();
    }
    swift_willThrow();
LABEL_7:
    sub_10031D8DC();
    return;
  }
  __break(1u);
}

void type metadata accessor for ExceededLiteralSizeLimitError()
{
}

uint64_t sub_10030B6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_retain();
  return a1;
}

void *sub_10030B6F4(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

_OWORD *sub_10030B74C(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void type metadata accessor for GrammarParser()
{
}

void sub_10030B798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v6 = __OFADD__(a2, 1);
  uint64_t v7 = a2 + 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    if (v7 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v16 = sub_10020DD10();
      sub_10031DB40(v16, v17);
      goto LABEL_6;
    }
    sub_10031D54C();
    sub_10032EFE0();
    if (v3)
    {
      *uint64_t v4 = v5;
      sub_10031D68C();
LABEL_6:
      swift_willThrow();
      return;
    }
    sub_10031D470(v8, v9, v10, v11, v12, v13, v14, v15, v18, v19);
  }
}

void sub_10030B844(uint64_t x0_0, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  sub_10031E1C0();
  if (!v4)
  {
    sub_10030A634(x0_0, a2, a3, a4);
    sub_1005E1E30(v9);
    swift_bridgeObjectRelease();
    sub_1005E1CB0();
    swift_bridgeObjectRelease();
  }
}

void sub_10030B920(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  sub_10030A634(a1, a2, a3, a4);
  if (!v4)
  {
    sub_1005E1CB0();
    swift_bridgeObjectRelease();
  }
}

void sub_10030B974()
{
  sub_10031E1C0();
  if (!v0)
  {
    if (qword_10070FCD8 != -1) {
      swift_once();
    }
    swift_retain();
  }
}

uint64_t sub_10030BA1C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v4 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      uint64_t *v12 = a3;
      return swift_willThrow();
    }
    uint64_t v6 = result;
    uint64_t v7 = *(void *)result;
    uint64_t v8 = *(void *)(result + 8);
    int v9 = *(_DWORD *)(result + 16);
    __int16 v10 = *(_WORD *)(result + 20);
    char v11 = *(unsigned char *)(result + 22);
    swift_retain();
    sub_10030BB70(v6, v4, a3, (uint64_t)&v13);
    if (v3)
    {
      swift_release();
      *(void *)uint64_t v6 = v7;
      *(void *)(v6 + 8) = v8;
      *(_DWORD *)(v6 + 16) = v9;
      *(_WORD *)(v6 + 20) = v10;
      *(unsigned char *)(v6 + 22) = v11;
      return swift_willThrow();
    }
    swift_release();
    return v13;
  }
  return result;
}

void sub_10030BB28(uint64_t a1@<X8>)
{
  sub_10030B974();
  if (!v1)
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(_DWORD *)(a1 + 16) = v5;
    *(_WORD *)(a1 + 20) = WORD2(v5);
    *(unsigned char *)(a1 + 22) = BYTE6(v5);
  }
}

uint64_t sub_10030BB70@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (__OFADD__(a2, 1))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (a2 + 1 >= a3)
  {
    sub_1002DB5BC();
    swift_allocError();
    *uint64_t v15 = a3;
    return swift_willThrow();
  }
  uint64_t v6 = result;
  uint64_t v7 = *(unsigned int *)(result + 8);
  unint64_t v8 = *(unsigned int *)(result + 12);
  if (v8 < v7) {
    goto LABEL_27;
  }
  unsigned int v9 = *(unsigned __int8 *)(result + 22) | (*(unsigned __int16 *)(result + 20) << 8);
  if (*(_DWORD *)(result + 16) - v9 < v8)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v30 = *(unsigned char *)(result + 22);
  __int16 v31 = *(_WORD *)(result + 20);
  int v32 = *(_DWORD *)(result + 16);
  uint64_t v33 = *(void *)result;
  if (v8 == v7)
  {
LABEL_15:
    sub_1002E1490();
    swift_allocError();
    swift_retain();
    swift_willThrow();
    swift_release();
    *(void *)uint64_t v6 = v33;
    *(_DWORD *)(v6 + 8) = v7;
    *(_DWORD *)(v6 + 12) = v8;
    *(_DWORD *)(v6 + 16) = v32;
    *(_WORD *)(v6 + 20) = v31;
    *(unsigned char *)(v6 + 22) = v30;
    return swift_willThrow();
  }
  __int16 v10 = (void *)(v33 + 24);
  uint64_t result = swift_beginAccess();
  unint64_t v11 = 0;
  uint64_t v12 = v7 + v9;
  while (1)
  {
    if (v7 + v11 >= v8)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    if (v11 >= (v8 - v7)) {
      goto LABEL_25;
    }
    int v13 = *(unsigned __int8 *)(*v10 + v12 + v11);
    if ((v13 | 4) != 0x2F)
    {
      uint64_t result = isalnum(*(unsigned __int8 *)(*v10 + v12 + v11));
      if (v13 != 61 && result == 0) {
        break;
      }
    }
    ++v11;
    if (!(v7 - v8 + v11)) {
      goto LABEL_15;
    }
  }
  swift_retain();
  uint64_t result = ByteBuffer.readSlice(length:)(v11);
  if (!result) {
    goto LABEL_31;
  }
  uint64_t v18 = result;
  unint64_t v19 = v16;
  uint64_t v20 = v17;
  uint64_t result = swift_release();
  if (HIDWORD(v19) >= v19)
  {
    if (v20 - (BYTE6(v20) | (WORD2(v20) << 8)) < HIDWORD(v19)) {
      goto LABEL_30;
    }
    v34[0] = v18;
    v34[1] = v19;
    int v35 = v20;
    __int16 v36 = WORD2(v20);
    char v37 = BYTE6(v20);
    uint64_t v38 = v19;
    unint64_t v39 = HIDWORD(v19);
    swift_retain();
    uint64_t v21 = sub_1001E7264((uint64_t)v34, 0);
    if (v4)
    {
      swift_release();
      sub_1005E2C80(17);
      v41._countAndFlagsBits = 0x2064696C61766E49;
      v41._object = (void *)0xEF20343665736162;
      sub_1005E1E30(v41);
      uint64_t v40 = v4;
      sub_10000566C(qword_100710378);
      sub_1005E2E90();
      sub_100296090();
      swift_allocError();
      *uint64_t v22 = 0;
      v22[1] = 0xE000000000000000;
      v22[2] = 0xD000000000000020;
      v22[3] = 0x80000001005E63C0;
      v22[4] = 187;
      swift_willThrow();
      swift_errorRelease();
      return swift_release();
    }
    else
    {
      uint64_t v23 = (uint64_t)v21;
      swift_release();
      uint64_t v24 = sub_1001F6FAC(v23, (uint64_t (*)(void))j_j__malloc_0, (uint64_t)j_j__realloc_0, (uint64_t)j_j__free_0);
      uint64_t v26 = v25;
      uint64_t v28 = v27;
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)a4 = v24;
      *(void *)(a4 + 8) = v26;
      *(_DWORD *)(a4 + 16) = v28;
      *(_WORD *)(a4 + 20) = WORD2(v28);
      *(unsigned char *)(a4 + 22) = BYTE6(v28);
    }
    return result;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void sub_10030BF48()
{
}

uint64_t sub_10030BF60()
{
  sub_10030AF78();
  if (!v0)
  {
    swift_beginAccess();
    uint64_t v1 = sub_1005E1D70();
    swift_release();
  }
  return v1;
}

void sub_10030C01C()
{
  sub_10031D8C0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  sub_10031D600();
  sub_1002E987C();
  if (!v0)
  {
    sub_10000566C(&qword_1007123B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005F66F0;
    uint64_t v10 = v6;
    uint64_t v11 = v4;
    uint64_t v12 = (void *)sub_1002E1F90();
    v12[2] = v8;
    v12[3] = v10;
    v12[4] = v11;
    v12[5] = v2;
    uint64_t v13 = sub_1002E8414();
    *(void *)(v13 + 16) = sub_10031C01C;
    *(void *)(v13 + 24) = v12;
    *(void *)(inited + 32) = sub_10031C038;
    *(void *)(inited + 40) = v13;
    uint64_t v14 = (void *)sub_1002E1F90();
    v14[2] = v8;
    v14[3] = v10;
    v14[4] = v11;
    unsigned char v14[5] = v2;
    uint64_t v15 = sub_1002E8414();
    *(void *)(v15 + 16) = sub_10031C054;
    *(void *)(v15 + 24) = v14;
    *(void *)(inited + 48) = sub_10031CE50;
    *(void *)(inited + 56) = v15;
    *(void *)(inited + 64) = sub_10030C414;
    *(void *)(inited + 72) = 0;
    swift_retain_n();
    sub_10031D6B4();
    sub_10033F304();
    swift_setDeallocating();
    sub_10034A020();
  }
  sub_10031D820();
}

uint64_t sub_10030C1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v4)
  {
    sub_10030AF78();
    uint64_t v3 = v5;
    uint64_t v7 = v6;
    sub_10032964C();
    if (HIDWORD(v7) == v7)
    {
      sub_100296090();
      swift_allocError();
      *unsigned int v9 = 0x6E776F6E6B6E55;
      v9[1] = 0xE700000000000000;
      v9[2] = 0xD000000000000020;
      v9[3] = 0x80000001005E63C0;
      v9[4] = 282;
      swift_willThrow();
      swift_release();
    }
  }
  return v3;
}

uint64_t sub_10030C30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v7)
  {
    swift_retain();
    a6 = sub_1003256D4(a1, a2, a3, a4, a5, a6, a7);
    sub_10032964C();
  }
  return a6;
}

unint64_t sub_10030C3EC()
{
  return 0xF000000000000007;
}

unint64_t sub_10030C414@<X0>(uint64_t a1@<X8>)
{
  unint64_t result = sub_10030C3EC();
  if (!v1)
  {
    *(void *)a1 = result;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    *(unsigned char *)(a1 + 24) = v6 & 1;
  }
  return result;
}

uint64_t sub_10030C454@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t (*a3)(uint64_t, void, void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = a3(a1, *a2, a2[1]);
  if (!v4)
  {
    *(void *)a4 = result;
    *(void *)(a4 + 8) = v7;
    *(void *)(a4 + 16) = v8;
    *(unsigned char *)(a4 + 24) = v9 & 1;
  }
  return result;
}

void sub_10030C4A0()
{
  sub_1002F2480();
  sub_1002F2320();
  sub_100300E48();
  if (!v1)
  {
    uint64_t v33 = v0;
    sub_10000566C(&qword_1007106F0);
    sub_10031DDF8();
    uint64_t Parameter = type metadata accessor for CreateParameter();
    sub_10031D0A0(Parameter);
    uint64_t v3 = sub_10031D360();
    sub_10031DD2C(v3, v4, v5, v6, v7, v8, v9, v10, v32);
    uint64_t v12 = sub_10031D6C0(v11, (__n128)xmmword_1005F6670);
    __chkstk_darwin(v12);
    sub_10031D4C4();
    __chkstk_darwin(v13);
    sub_10031D6E8();
    sub_10031D508();
    sub_10033CBF4(v14, v15, v16);
    sub_10031DE9C();
    sub_10031DB1C();
    sub_10031DD2C(v17, v18, v19, v20, v21, v22, v23, v24, 0x80000001005E63C0);
    sub_10031DB28();
    __chkstk_darwin(v25);
    sub_10031D25C();
    uint64_t v26 = sub_1002F3294();
    sub_10031EBE4(v26, v27, v28, v29, v30, v31);
    sub_10031D070();
    *uint64_t v33 = sub_10031DB34();
  }
  sub_10031D590();
  sub_1002F2468();
}

void sub_10030C638(uint64_t *a1@<X8>)
{
  sub_10031E1C0();
  if (!v1)
  {
    uint64_t v7 = a1;
    sub_10000566C(&qword_1007106F8);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1005F6670;
    sub_10030C818();
    uint64_t v6 = (uint64_t)&v6;
    *(void *)(v3 + 32) = v4;
    *(void *)(v3 + 40) = v5;
    uint64_t v8 = v3;
    __chkstk_darwin(v4);
    sub_10031EC10();
    sub_10031E1C0();
    uint64_t *v7 = v8;
    type metadata accessor for CreateParameter();
    swift_storeEnumTagMultiPayload();
  }
}

void sub_10030C818()
{
  sub_10031DBE0();
  sub_10031D1C8();
  sub_10000566C(&qword_1007123D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6A00;
  *(void *)(inited + 32) = sub_10030CDBC;
  *(void *)(inited + 40) = 0;
  *(void *)(inited + 48) = sub_10030CDE8;
  *(void *)(inited + 56) = 0;
  *(void *)(inited + 64) = sub_10030CE14;
  *(void *)(inited + 72) = 0;
  *(void *)(inited + 80) = sub_10030CE40;
  *(void *)(inited + 88) = 0;
  *(void *)(inited + 96) = sub_10030CE6C;
  *(void *)(inited + 104) = 0;
  *(void *)(inited + 112) = sub_10030CE98;
  *(void *)(inited + 120) = 0;
  *(void *)(inited + 128) = sub_10030CEC4;
  *(void *)(inited + 136) = 0;
  uint64_t v2 = (void *)sub_1002E1F90();
  sub_10030750C(v2);
  uint64_t v3 = sub_1002E8414();
  *(void *)(v3 + 16) = sub_10031C698;
  *(void *)(v3 + 24) = v0;
  *(void *)(inited + 144) = sub_10031C6B4;
  *(void *)(inited + 152) = v3;
  swift_retain();
  uint64_t v4 = sub_10031D1A4();
  sub_10033F4D8(v4);
  sub_10031DEE0();
  sub_10034A020();
  sub_10031DBC4();
}

#error "10030C9CC: call analysis failed (funcsize=21)"

unint64_t sub_10030C9DC(unint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = a6 + 1;
  if (!__OFADD__(a6, 1))
  {
    if (v9 >= a7)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v17 = a7;
    }
    else
    {
      uint64_t v7 = a3;
      unint64_t v13 = result;
      uint64_t v14 = *(void *)a5;
      uint64_t v15 = *(void *)(a5 + 8);
      int v16 = *(_DWORD *)(a5 + 16);
      char v18 = *(unsigned char *)(a5 + 22);
      __int16 v19 = *(_WORD *)(a5 + 20);
      swift_retain();
      sub_100338020(a5, v9, a7, 0, v13, a2, 0);
      if (!v8)
      {
        swift_release();
        swift_bridgeObjectRetain();
        return v7;
      }
      swift_release();
      *(void *)a5 = v14;
      *(void *)(a5 + 8) = v15;
      *(_DWORD *)(a5 + 16) = v16;
      *(_WORD *)(a5 + 20) = v19;
      *(unsigned char *)(a5 + 22) = v18;
    }
    swift_willThrow();
    return v7;
  }
  __break(1u);
  return result;
}

unint64_t sub_10030CB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10030C9DC(0x6C6C415CuLL, 0xE400000000000000, 1819033948, 0xE400000000000000, a1, a2, a3);
}

unint64_t sub_10030CB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10030C9DC(0x657669686372415CuLL, 0xE800000000000000, 0x657669686372415CLL, 0xE800000000000000, a1, a2, a3);
}

unint64_t sub_10030CB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10030C9DC(0x7374666172445CuLL, 0xE700000000000000, 0x7374666172445CLL, 0xE700000000000000, a1, a2, a3);
}

unint64_t sub_10030CBE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10030C9DC(0x64656767616C465CuLL, 0xE800000000000000, 0x64656767616C465CLL, 0xE800000000000000, a1, a2, a3);
}

unint64_t sub_10030CC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10030C9DC(0x6B6E754A5CuLL, 0xE500000000000000, 0x6B6E754A5CLL, 0xE500000000000000, a1, a2, a3);
}

unint64_t sub_10030CC74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10030C9DC(0x746E65535CuLL, 0xE500000000000000, 0x746E65535CLL, 0xE500000000000000, a1, a2, a3);
}

unint64_t sub_10030CCB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10030C9DC(0x68736172545CuLL, 0xE600000000000000, 0x68736172545CLL, 0xE600000000000000, a1, a2, a3);
}

void sub_10030CCFC(uint64_t x0_0, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  sub_10031E1C0();
  if (!v4)
  {
    sub_10030A634(x0_0, a2, a3, a4);
    sub_1005E1E30(v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10030CDBC()
{
  return sub_100311704();
}

uint64_t sub_10030CDE8()
{
  return sub_100311704();
}

uint64_t sub_10030CE14()
{
  return sub_100311704();
}

uint64_t sub_10030CE40()
{
  return sub_100311704();
}

uint64_t sub_10030CE6C()
{
  return sub_100311704();
}

uint64_t sub_10030CE98()
{
  return sub_100311704();
}

uint64_t sub_10030CEC4()
{
  return sub_100311704();
}

void sub_10030CEF0(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
}

uint64_t sub_10030CF40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100310194(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10030CF6C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100310364(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10030CF98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10030FD20(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10030CFC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10030FE4C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void sub_10030CFF0(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_10030FF78(a1);
  if (!v2) {
    *a2 = v4;
  }
}

void sub_10030D01C(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
}

uint64_t sub_10030D06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a4;
  v11[3] = a5;
  v11[4] = a6;
  v11[5] = a7;
  uint64_t v15 = sub_10031CD78;
  int v16 = v11;
  swift_retain();
  uint64_t v12 = sub_10033CB54((uint64_t)sub_10031BAB4, (uint64_t)v14, (uint64_t)sub_10030CF6C, 0);
  swift_release();
  return v12;
}

void sub_10030D188(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
}

uint64_t sub_10030D1D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a4;
  v11[3] = a5;
  v11[4] = a6;
  v11[5] = a7;
  uint64_t v15 = sub_10031BACC;
  int v16 = v11;
  swift_retain();
  uint64_t v12 = sub_10033CB54((uint64_t)sub_10031BAB4, (uint64_t)v14, (uint64_t)sub_10030CF6C, 0);
  swift_release();
  return v12;
}

void sub_10030D2F4(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
}

uint64_t sub_10030D344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a4;
  v11[3] = a5;
  v11[4] = a6;
  v11[5] = a7;
  uint64_t v15 = sub_10031CD78;
  int v16 = v11;
  swift_retain();
  uint64_t v12 = sub_10033CB54((uint64_t)sub_10031BAB4, (uint64_t)v14, (uint64_t)sub_10030CF6C, 0);
  swift_release();
  return v12;
}

void sub_10030D460(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
}

void sub_10030D4B0(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t *a6@<X8>, uint64_t a7, uint64_t a8)
{
  char v37 = a6;
  sub_10031DE1C();
  uint64_t v14 = (void *)sub_1002E1F90();
  v14[2] = a2;
  v14[3] = a3;
  v14[4] = a4;
  unsigned char v14[5] = a5;
  uint64_t v35 = a7;
  __int16 v36 = v14;
  swift_retain();
  uint64_t v15 = sub_10000566C(&qword_10070FE18);
  uint64_t v16 = sub_10032CFD8(v9, v8, a1, a8, (uint64_t)v34, v15);
  swift_release();
  if (v33)
  {
LABEL_18:
    sub_100301040();
    return;
  }
  uint64_t v17 = *(void *)(v16 + 16);
  if (!v17)
  {
    uint64_t v25 = v37;
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_1005E1D70();
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    *uint64_t v25 = v29;
    v25[1] = v31;
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  __int16 v19 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v20 = *(void *)(v16 + 8 * v18 + 32);
    int64_t v21 = *(void *)(v20 + 16);
    uint64_t v22 = v19[2];
    if (__OFADD__(v22, v21)) {
      break;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!swift_isUniquelyReferenced_nonNull_native() || v22 + v21 > v19[3] >> 1)
    {
      sub_1002325F4();
      __int16 v19 = v23;
    }
    if (*(void *)(v20 + 16))
    {
      uint64_t v24 = v19[2];
      uint64_t v25 = v37;
      if ((v19[3] >> 1) - v24 < v21) {
        goto LABEL_21;
      }
      memcpy((char *)v19 + v24 + 32, (const void *)(v20 + 32), v21);
      if (v21)
      {
        uint64_t v26 = v19[2];
        BOOL v27 = __OFADD__(v26, v21);
        uint64_t v28 = v26 + v21;
        if (v27) {
          goto LABEL_22;
        }
        v19[2] = v28;
      }
    }
    else
    {
      uint64_t v25 = v37;
      if (v21) {
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v17 == ++v18)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
}

void sub_10030D6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!__OFADD__(a2, 1))
  {
    sub_10031D91C();
    a19 = v23;
    a20 = v24;
    if (v25 >= v26)
    {
      sub_1002DB5BC();
      uint64_t v27 = sub_10020DD10();
      sub_10031DB40(v27, v28);
    }
    else
    {
      sub_10031D54C();
      sub_10030D738(&a9);
      if (!v20) {
        goto LABEL_7;
      }
      *int64_t v21 = v22;
      sub_10031D68C();
    }
    swift_willThrow();
LABEL_7:
    sub_10031D8DC();
    return;
  }
  __break(1u);
}

uint64_t sub_10030D738@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ByteBuffer.readSlice(length:)(0x20uLL);
  if (!result)
  {
    sub_1002E1490();
    swift_allocError();
    return swift_willThrow();
  }
  unint64_t v5 = HIDWORD(v3);
  if (HIDWORD(v3) < v3) {
    goto LABEL_19;
  }
  unint64_t v6 = (v4 >> 24) & 0xFFFF00 | BYTE6(v4);
  if (v5 <= (v4 - v6))
  {
    uint64_t v7 = result;
    unint64_t v8 = v3;
    uint64_t v9 = (HIDWORD(v3) - v3);
    if (v3 == HIDWORD(v3))
    {
LABEL_14:
      swift_beginAccess();
      uint64_t v16 = sub_1005E1D70();
      uint64_t v18 = v17;
      uint64_t result = swift_release();
      *a1 = v16;
      a1[1] = v18;
      return result;
    }
    uint64_t result = swift_beginAccess();
    unint64_t v11 = v8;
    while (v11 < v5)
    {
      if (v11 >= v8 + v9) {
        goto LABEL_18;
      }
      unint64_t v10 = *(void *)(v7 + 24) + v6;
      if ((*(unsigned char *)(v10 + v11) - 58) <= 0xF5u)
      {
        unsigned int v12 = *(unsigned __int8 *)(v10 + v11) - 65;
        BOOL v13 = v12 > 0x25;
        uint64_t v14 = (1 << v12) & 0x3F0000003FLL;
        if (v13 || v14 == 0)
        {
          sub_1005E2C80(29);
          swift_bridgeObjectRelease();
          swift_retain();
          uint64_t v19 = sub_1005E1D70();
          int64_t v21 = v20;
          swift_release();
          v23._countAndFlagsBits = v19;
          v23._object = v21;
          sub_1005E1E30(v23);
          swift_bridgeObjectRelease();
          sub_100296090();
          swift_allocError();
          *uint64_t v22 = 0xD00000000000001BLL;
          v22[1] = 0x80000001005E6A20;
          v22[2] = 0xD000000000000020;
          v22[3] = 0x80000001005E63C0;
          v22[4] = 459;
          swift_willThrow();
          return swift_release();
        }
      }
      if (v5 == ++v11) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10030D994()
{
  sub_10031D99C();
  sub_10031D734();
  uint64_t v6 = v5;
  sub_10031E2BC(v7, v8, v9);
  if (!v0)
  {
    sub_10030A634(v4, v3, v2, v1);
    uint64_t v11 = v10;
    unint64_t v13 = v12;
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_100240DB8(61, 0xE100000000000000, v11, v13);
    char v16 = v15;
    swift_bridgeObjectRelease();
    *(void *)uint64_t v6 = v11;
    *(void *)(v6 + 8) = v13;
    *(void *)(v6 + 16) = v14;
    *(unsigned char *)(v6 + 24) = v16 & 1;
  }
  sub_10031D968();
}

void sub_10030DA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_10031D8C0();
  a29 = v32;
  a30 = v33;
  sub_1002F717C();
  sub_10031E1C0();
  if (!v31)
  {
    swift_retain();
    sub_1002F7158();
    sub_10032BA48(v34);
    a20 = a14;
    uint64_t v42 = a16;
    uint64_t v43 = a15;
    uint64_t v41 = a17;
    char v40 = a18;
    sub_10031DE10();
    char v39 = sub_10032BB70(v35, v36, v37);
    swift_retain();
    sub_1002F7158();
    uint64_t v38 = sub_10032D250();
    *(void *)uint64_t v30 = a20;
    *(void *)(v30 + 8) = v43;
    *(void *)(v30 + 16) = v42;
    *(void *)(v30 + 24) = v41;
    *(unsigned char *)(v30 + 32) = v40;
    *(unsigned char *)(v30 + 33) = v39 & 1;
    *(void *)(v30 + 40) = v38;
  }
  sub_10031D820();
}

uint64_t sub_10030DB5C()
{
  sub_10031D1C8();
  sub_10000566C(&qword_1007123A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6680;
  uint64_t v3 = (void *)sub_1002E1F90();
  sub_10030750C(v3);
  uint64_t v4 = sub_1002E8414();
  *(void *)(v4 + 16) = sub_10031BB78;
  *(void *)(v4 + 24) = v0;
  *(void *)(inited + 32) = sub_10031BB94;
  *(void *)(inited + 40) = v4;
  uint64_t v5 = (void *)sub_1002E1F90();
  sub_10030750C(v5);
  uint64_t v6 = sub_1002E8414();
  *(void *)(v6 + 16) = sub_10031BBB0;
  *(void *)(v6 + 24) = v0;
  *(void *)(inited + 48) = sub_10031CE38;
  *(void *)(inited + 56) = v6;
  *(void *)(inited + 64) = sub_10030DEE0;
  *(void *)(inited + 72) = 0;
  *(void *)(inited + 80) = sub_10030DF0C;
  *(void *)(inited + 88) = 0;
  swift_retain_n();
  uint64_t v7 = sub_10031D1A4();
  uint64_t v8 = sub_10033F6A4(v7);
  if (!v10) {
    uint64_t v1 = v8;
  }
  swift_setDeallocating();
  sub_10034A020();
  return v1;
}

void sub_10030DCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7)
  {
    swift_retain();
    sub_100326B84(a1, a2, a3, a4, a5, a6, a7);
  }
}

void sub_10030DD94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7)
  {
    swift_retain();
    sub_100326B84(a1, a2, a3, a4, a5, a6, a7);
  }
}

uint64_t sub_10030DE44()
{
  return 0;
}

uint64_t sub_10030DE90()
{
  return 1;
}

uint64_t sub_10030DEE0()
{
  return sub_10030DF38();
}

uint64_t sub_10030DF0C()
{
  return sub_10030DF38();
}

uint64_t sub_10030DF38()
{
  sub_10031DA98();
  uint64_t result = v2();
  if (!v1)
  {
    *(void *)uint64_t v0 = result;
    *(void *)(v0 + 8) = v4;
    *(unsigned char *)(v0 + 16) = v5;
  }
  return result;
}

uint64_t sub_10030DF6C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t (*a3)(uint64_t, void, void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = a3(a1, *a2, a2[1]);
  if (!v4)
  {
    *(void *)a4 = result;
    *(void *)(a4 + 8) = v7;
    *(unsigned char *)(a4 + 16) = v8;
  }
  return result;
}

void sub_10030DFB0()
{
  sub_10031D1C8();
  sub_10000566C(&qword_1007123A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6690;
  uint64_t v2 = (void *)sub_1002E1F90();
  sub_10030750C(v2);
  uint64_t v3 = sub_1002E8414();
  *(void *)(v3 + 16) = sub_10031BD60;
  *(void *)(v3 + 24) = v0;
  *(void *)(inited + 32) = sub_10031BD8C;
  *(void *)(inited + 40) = v3;
  uint64_t v4 = (void *)sub_1002E1F90();
  sub_10030750C(v4);
  uint64_t v5 = sub_1002E8414();
  *(void *)(v5 + 16) = sub_10031BDA8;
  *(void *)(v5 + 24) = v0;
  *(void *)(inited + 48) = sub_10031BD8C;
  *(void *)(inited + 56) = v5;
  swift_retain_n();
  uint64_t v6 = sub_10031D1A4();
  sub_10033F874(v6);
  sub_10031DEE0();
  sub_10034A020();
  sub_10031D4A8();
}

uint64_t sub_10030E0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_retain();
  uint64_t v15 = sub_100320F90(a1, a2, a3, a4, a5, a6, a7);
  unint64_t v17 = v16;
  if (v7) {
    return v15;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_100271E34(v15, v17);
  uint64_t v20 = v19;
  uint64_t result = swift_bridgeObjectRelease();
  if (v20)
  {
    if (v18 != 92 || v20 != 0xE100000000000000)
    {
      char v23 = sub_1005E3290();
      swift_bridgeObjectRelease();
      if (v23) {
        return v15;
      }
      __break(1u);
    }
    swift_bridgeObjectRelease();
    return v15;
  }
  __break(1u);
  return result;
}

void sub_10030E1DC()
{
  sub_10031D8F8();
  sub_10031D41C();
  if (!v1)
  {
    sub_100300D44();
    sub_10030DFB0();
    *uint64_t v0 = v2;
    v0[1] = v3;
  }
}

uint64_t sub_10030E234()
{
  return 0;
}

void sub_10030E270()
{
}

uint64_t sub_10030E294@<X0>(uint64_t *a1@<X8>)
{
  return sub_10030E2C0(sub_10030E234, a1);
}

uint64_t sub_10030E2C0@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

#error "10030E374: call analysis failed (funcsize=99)"

#error "10030E4F8: call analysis failed (funcsize=63)"

void *sub_10030E584()
{
  sub_1002E1FA8();
  sub_1002E1F6C();
  sub_10031DD70();
  sub_10031D2A8();
  uint64_t result = sub_10033C7D0(v10, v2, v3, v4, v5, v6, v7, v8, v9);
  if (!v1)
  {
    sub_100217504((uint64_t)v13, (uint64_t)v12);
    return (void *)sub_100217504((uint64_t)v12, v0);
  }
  return result;
}

void sub_10030E66C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  swift_retain();
  sub_1003271A4(a1, a2, a3, a4, a5, a6, a7, v17, v18, v19, v20, v21, v22, SWORD4(v22), SHIDWORD(v22));
  if (!v8)
  {
    uint64_t v19 = v23;
    uint64_t v20 = v24;
    LODWORD(v21) = v25;
    BYTE4(v21) = v26;
    long long v22 = v27;
    sub_100312174((uint64_t)&v19);
    sub_100217504((uint64_t)&v19, a8);
  }
}

void sub_10030E73C()
{
  sub_1002F2480();
  uint64_t v2 = v1;
  swift_retain();
  uint64_t v3 = sub_10031DA38();
  sub_1003267B8(v3);
  if (!v0)
  {
    uint64_t v13 = v15;
    uint64_t v14 = v16;
    char v11 = v18;
    int v12 = v17;
    int v10 = v19;
    uint64_t v9 = v20;
    uint64_t v42 = v21;
    uint64_t v7 = v23;
    uint64_t v8 = v22;
    char v5 = v25;
    char v6 = v24;
    swift_retain_n();
    uint64_t v4 = sub_10031DA38();
    sub_10032BC00(v4);
    swift_release();
    long long v26 = v34;
    long long v27 = v35;
    long long v28 = v36;
    long long v29 = v37;
    long long v30 = v38;
    uint64_t v15 = v13;
    uint64_t v16 = v14;
    int v17 = v12;
    char v18 = v11;
    int v19 = v10;
    uint64_t v20 = v9;
    uint64_t v21 = v42;
    uint64_t v22 = v8;
    uint64_t v23 = v7;
    char v24 = v6;
    char v25 = v5;
    long long v31 = v39;
    long long v32 = v40;
    uint64_t v33 = v41;
    sub_10031BB58((uint64_t)&v15);
    sub_100217504((uint64_t)&v15, v2);
  }
  sub_1002F2468();
}

uint64_t sub_10030E8E4()
{
  return 0;
}

void sub_10030E910()
{
  sub_10031D99C();
  sub_10031D174();
  uint64_t v0 = sub_10031D0B8();
  sub_100326B58(v0, v1, v2, v3, v4, v5, v6);
  sub_10031D354(v7);
  sub_10031D968();
}

void sub_10030E950()
{
  sub_10031E1C0();
  if (!v0) {
    sub_10031B520((uint64_t)_swiftEmptyArrayStorage);
  }
}

void sub_10030E9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10030A038();
  if (!v3)
  {
    sub_10031E368(v7, v8, v9 & 0xFFFFFFFFFFFFFFLL, 0xD000000000000020, 0x80000001005E63C0, 767);
    sub_10031E2BC(a1, a2, a3);
    uint64_t v10 = sub_100309F9C();
    if (v10)
    {
      sub_1002D09F0(v10, v11, v12 & 0xFFFFFFFFFFFFFFLL);
      swift_release();
    }
    swift_release();
  }
}

void sub_10030EB34()
{
  sub_10031E1C0();
  if (!v0)
  {
    sub_100329ADC();
    sub_10031E1C0();
    sub_10031B520((uint64_t)_swiftEmptyArrayStorage);
  }
}

void sub_10030EBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_10030EC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7)
  {
    sub_100329ADC();
    sub_10030E9AC(a1, a2, a3);
    uint64_t v16 = v15;
    uint64_t v26 = v17;
    uint64_t v27 = v18;
    uint64_t v29 = v19;
    sub_10000566C(&qword_1007123B8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005F6670;
    uint64_t v21 = v26;
    *(void *)(inited + 32) = v16;
    *(void *)(inited + 40) = v21;
    uint64_t v22 = v29;
    *(void *)(inited + 48) = v27;
    *(void *)(inited + 56) = v22;
    v28[0] = sub_10031B520(inited);
    v28[1] = v23;
    v28[2] = v24;
    __chkstk_darwin(v28[0]);
    v25[2] = a4;
    void v25[3] = a5;
    v25[4] = a6;
    v25[5] = a7;
    sub_10031ED80(a1, a2, a3, (uint64_t)sub_10031C264, (uint64_t)v25, (uint64_t)v28);
    sub_100329ADC();
    sub_10031E1C0();
  }
}

void sub_10030EE14(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10031E2BC(a3, a4, a5);
  if (!v5)
  {
    sub_10030E9AC(a3, a4, a5);
    *a1 = v11;
    a1[1] = v12;
    *a2 = v13;
    a2[1] = v14;
  }
}

void sub_10030EEA8(void *a1@<X8>)
{
  sub_10030EB34();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
  }
}

void sub_10030EED8()
{
  sub_10030108C();
  uint64_t v2 = v1;
  swift_retain();
  sub_10032BD80();
  if (!v0)
  {
    uint64_t v20 = v3;
    uint64_t v21 = v4;
    uint64_t v22 = v5;
    uint64_t v23 = v6;
    uint64_t v7 = sub_10031D86C();
    sub_10030EFF0(v7, v8, v9, v10, v11, v12, v13);
    uint64_t v18 = v14;
    uint64_t v19 = v15;
    swift_retain();
    sub_10031D86C();
    uint64_t v16 = sub_10032ADFC();
    *(void *)uint64_t v2 = v20;
    *(void *)(v2 + 8) = v21;
    *(void *)(v2 + 16) = v22;
    *(void *)(v2 + 24) = v23;
    *(void *)(v2 + 32) = v18;
    *(void *)(v2 + 40) = v19;
    *(void *)(v2 + 48) = v16;
    *(unsigned char *)(v2 + 56) = v17 & 1;
  }
  sub_100301040();
}

void sub_10030EFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
}

uint64_t sub_10030F120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7)
  {
    __chkstk_darwin();
    v16[16] = a4;
    v16[17] = a5;
    v16[18] = a6;
    v16[19] = a7;
    __chkstk_darwin();
    v16[12] = sub_10031BCA8;
    v16[13] = v12;
    __chkstk_darwin();
    v16[6] = a4;
    v16[7] = a5;
    v16[8] = a6;
    v16[9] = a7;
    __chkstk_darwin();
    v16[2] = sub_10031BCA8;
    v16[3] = v14;
    a6 = sub_10033CBA4((uint64_t)sub_10031BC58, v13, (uint64_t)sub_10031BC58, (uint64_t)v16);
    sub_10031E1C0();
  }
  return a6;
}

uint64_t sub_10030F314()
{
  if (qword_10070FB10 != -1) {
LABEL_11:
  }
    swift_once();
  Swift::UInt32 v7 = HIDWORD(qword_100761858);
  *(_DWORD *)uint64_t v8 = qword_100761858;
  *(void *)&v8[4] = *(uint64_t *)((char *)&qword_100761858 + 4);
  unsigned __int16 v9 = word_100761864;
  unsigned __int8 v10 = byte_100761866;
  swift_retain();
  Swift::UInt32 v2 = v7;
  while (1)
  {
    sub_100309608();
    if (v1) {
      break;
    }
    ByteBuffer._setBytes(_:at:)(v3 + 32, v3 + 32 + *(void *)(v3 + 16), v2);
    uint64_t v0 = v4;
    swift_bridgeObjectRelease();
    Swift::UInt32 v2 = *(_DWORD *)&v8[4] + v0;
    if (__CFADD__(*(_DWORD *)&v8[4], v0))
    {
      __break(1u);
      goto LABEL_11;
    }
    *(_DWORD *)&v8[4] += v0;
  }
  swift_errorRetain();
  sub_10000566C(qword_100710378);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    uint64_t v5 = swift_retain();
    uint64_t v0 = sub_10031E368(v5, *(unint64_t *)v8, *(unsigned int *)&v8[8] | ((unint64_t)v9 << 32) | ((unint64_t)v10 << 48), 0xD000000000000020, 0x80000001005E63C0, 891);
    swift_release_n();
  }
  else
  {
    swift_release();
    swift_errorRelease();
  }
  return v0;
}

void sub_10030F57C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  Swift::UInt32 v7 = sub_10032D3F0(a1, a2, a3, 1);
  if (!v3)
  {
    if (((unint64_t)v7 & 0x8000000000000000) != 0
      || (sub_10031E1C0(), ((unint64_t)sub_10032D3F0(a1, a2, a3, 1) & 0x8000000000000000) != 0)
      || (sub_10031E1C0(), ((unint64_t)sub_10032D3F0(a1, a2, a3, 1) & 0x8000000000000000) != 0)
      || (sub_10031E1C0(), ((unint64_t)sub_10032D3F0(a1, a2, a3, 1) & 0x8000000000000000) != 0))
    {
      sub_100296090();
      swift_allocError();
      void *v8 = 0xD000000000000011;
      v8[1] = 0x80000001005E65D0;
      v8[2] = 0xD000000000000020;
      v8[3] = 0x80000001005E63C0;
      v8[4] = 167;
      swift_willThrow();
    }
    else
    {
      sub_1005E3230();
      v9._countAndFlagsBits = 46;
      v9._object = (void *)0xE100000000000000;
      sub_1005E1E30(v9);
      v10._countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v10);
      swift_bridgeObjectRelease();
      v11._countAndFlagsBits = 46;
      v11._object = (void *)0xE100000000000000;
      sub_1005E1E30(v11);
      v12._countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v12);
      swift_bridgeObjectRelease();
      v13._countAndFlagsBits = 46;
      v13._object = (void *)0xE100000000000000;
      sub_1005E1E30(v13);
      v14._countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v14);
      swift_bridgeObjectRelease();
    }
  }
}

double sub_10030F81C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  swift_retain();
  sub_100328108();
  if (!v8)
  {
    uint64_t v20 = v16;
    unint64_t v21 = v17;
    uint64_t v50 = a1;
    uint64_t v51 = a6;
    uint64_t v54 = v16;
    unint64_t v55 = v17;
    int v56 = v18;
    char v57 = BYTE4(v18) & 1;
    int v58 = 1;
    uint64_t v22 = a4;
    uint64_t v23 = a7;
    if ((v18 & 0x100000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_10022EF78(v20, v21);
      uint64_t v26 = v25;
      swift_bridgeObjectRelease();
      uint64_t v27 = sub_1005E1D80();
      if (v26)
      {
        if (v24 == v27 && v26 == v28)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_13:
          swift_retain();
          sub_10031DF6C();
          sub_10031EDAC(v32);
          goto LABEL_14;
        }
        char v30 = sub_1005E3290();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v30) {
          goto LABEL_13;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    swift_retain();
    uint64_t v31 = sub_10031D9B0();
    int v58 = sub_100328248(v31);
LABEL_14:
    swift_retain();
    sub_10031D9B0();
    sub_10032C2F4();
    uint64_t v35 = v33;
    unint64_t v36 = v34;
    *(void *)&long long v53 = v33;
    *((void *)&v53 + 1) = v34;
    if (v34)
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_10022EF78(v35, v36);
      uint64_t v39 = v38;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = 0;
      uint64_t v39 = 0;
    }
    uint64_t v40 = sub_1005E1D80();
    if (v39)
    {
      if (v37 == v40 && v39 == v41)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_29:
        swift_retain();
        sub_10031DF6C();
        sub_10031EE58(v49);
        uint64_t v47 = a8;
        uint64_t v44 = 0;
        uint64_t v45 = 0;
        LOBYTE(v46) = 0;
        LOBYTE(v48) = 1;
        goto LABEL_30;
      }
      char v43 = sub_1005E3290();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v43) {
        goto LABEL_29;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_retain();
    uint64_t v44 = sub_10032C320(v50, a2, a3, v22, a5, v51, v23);
    uint64_t v47 = a8;
    int v48 = (v46 >> 8) & 1;
LABEL_30:
    *(void *)uint64_t v47 = v54;
    *(void *)(v47 + 8) = v55;
    *(_DWORD *)(v47 + 16) = v56;
    *(unsigned char *)(v47 + 20) = v57;
    *(_DWORD *)(v47 + 24) = v58;
    double result = *(double *)&v53;
    *(_OWORD *)(v47 + 32) = v53;
    *(void *)(v47 + 48) = v44;
    *(void *)(v47 + 56) = v45;
    *(unsigned char *)(v47 + 64) = v46;
    *(unsigned char *)(v47 + 65) = v48;
  }
  return result;
}

void sub_10030FB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10031DE28();
  uint64_t v24 = v9;
  uint64_t v25 = v10;
  uint64_t v12 = v11;
  uint64_t v23 = v13;
  uint64_t v15 = v14;
  sub_10031DE1C();
  swift_bridgeObjectRetain();
  sub_100230BC0(1);
  uint64_t v16 = sub_1005E1D00();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  *uint64_t v15 = v16;
  v15[1] = v18;
  swift_bridgeObjectRelease();
  swift_retain();
  sub_10031DE10();
  int v22 = sub_100328354(v19, v20, v21, v24, v12, v25, a9);
  if (!v26) {
    *uint64_t v23 = v22;
  }
  sub_10031DBA8();
}

void sub_10030FC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (!a4[1])
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_10031D798();
  swift_bridgeObjectRetain();
  sub_100230BC0(1);
  uint64_t v15 = sub_1005E1D00();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (!a4[1])
  {
LABEL_7:
    __break(1u);
    return;
  }
  *a4 = v15;
  a4[1] = v17;
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v18 = sub_10032C34C(v11, v10, v9, a6, a7, a8, a9);
  if (!v23)
  {
    *(void *)a5 = v18;
    *(void *)(a5 + 8) = v19;
    *(unsigned char *)(a5 + 16) = v20;
    *(unsigned char *)(a5 + 17) = HIBYTE(v20) & 1;
  }
}

uint64_t sub_10030FD20(uint64_t a1)
{
  uint64_t result = sub_10032CEB0(a1);
  if (!v1)
  {
    char v3 = result;
    if (sub_100345AC0(result))
    {
      sub_10000566C(&qword_10070FEE0);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1005F6670;
      *(unsigned char *)(result + 32) = v3;
    }
    else
    {
      sub_1005E2C80(32);
      swift_bridgeObjectRelease();
      v5._countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v5);
      swift_bridgeObjectRelease();
      sub_100296090();
      swift_allocError();
      *uint64_t v4 = 0xD00000000000001ELL;
      v4[1] = 0x80000001005E6A00;
      v4[2] = 0xD000000000000020;
      v4[3] = 0x80000001005E63C0;
      v4[4] = 1082;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_10030FE4C(uint64_t a1)
{
  uint64_t result = sub_10032CEB0(a1);
  if (!v1)
  {
    char v3 = result;
    if (sub_100345B14(result))
    {
      sub_10000566C(&qword_10070FEE0);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1005F6670;
      *(unsigned char *)(result + 32) = v3;
    }
    else
    {
      sub_1005E2C80(35);
      swift_bridgeObjectRelease();
      v5._countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v5);
      swift_bridgeObjectRelease();
      sub_100296090();
      swift_allocError();
      *uint64_t v4 = 0xD000000000000021;
      v4[1] = 0x80000001005E69D0;
      v4[2] = 0xD000000000000020;
      v4[3] = 0x80000001005E63C0;
      v4[4] = 1090;
      return swift_willThrow();
    }
  }
  return result;
}

void sub_10030FF78(uint64_t a1)
{
  sub_10031E1C0();
  if (!v1)
  {
    unsigned __int8 v3 = sub_10032CEB0(a1);
    unsigned __int8 v4 = sub_10032CEB0(a1);
    if (sub_100345A94(v3) && sub_100345A94(v4))
    {
      if (v3 <= 0x46u) {
        unsigned __int8 v5 = v3;
      }
      else {
        unsigned __int8 v5 = v3 - 32;
      }
      if (v4 > 0x46u) {
        v4 -= 32;
      }
      sub_10000566C(&qword_10070FEE0);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1005F66F0;
      *(unsigned char *)(v6 + 32) = 37;
      *(unsigned char *)(v6 + 33) = v5;
      *(unsigned char *)(v6 + 34) = v4;
    }
    else
    {
      sub_1005E2C80(36);
      swift_bridgeObjectRelease();
      v8._countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v8);
      swift_bridgeObjectRelease();
      v9._countAndFlagsBits = 0x20646E6120;
      v9._object = (void *)0xE500000000000000;
      sub_1005E1E30(v9);
      v10._countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v10);
      swift_bridgeObjectRelease();
      sub_100296090();
      swift_allocError();
      void *v7 = 0xD00000000000001BLL;
      v7[1] = 0x80000001005E69B0;
      v7[2] = 0xD000000000000020;
      v7[3] = 0x80000001005E63C0;
      v7[4] = 1104;
      swift_willThrow();
    }
  }
}

uint64_t sub_100310194(uint64_t a1)
{
  uint64_t result = sub_10032CEB0(a1);
  if (!v1)
  {
    char v3 = result;
    if (result == 38 || result == 61)
    {
      sub_10000566C(&qword_10070FEE0);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1005F6670;
      *(unsigned char *)(result + 32) = v3;
    }
    else
    {
      sub_1005E2C80(20);
      swift_bridgeObjectRelease();
      v5._countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v5);
      swift_bridgeObjectRelease();
      sub_100296090();
      swift_allocError();
      *unsigned __int8 v4 = 0xD000000000000012;
      v4[1] = 0x80000001005E6990;
      v4[2] = 0xD000000000000020;
      v4[3] = 0x80000001005E63C0;
      v4[4] = 1133;
      return swift_willThrow();
    }
  }
  return result;
}

void sub_1003102D0()
{
}

uint64_t sub_100310364(uint64_t a1)
{
  uint64_t result = sub_10032CEB0(a1);
  if (!v1)
  {
    char v3 = result;
    if (result - 47 > 0x11 || ((1 << (result - 47)) & 0x20801) == 0)
    {
      sub_1005E2C80(20);
      swift_bridgeObjectRelease();
      v6._countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v6);
      swift_bridgeObjectRelease();
      sub_100296090();
      swift_allocError();
      *Swift::String v5 = 0xD000000000000012;
      v5[1] = 0x80000001005E6970;
      v5[2] = 0xD000000000000020;
      v5[3] = 0x80000001005E63C0;
      v5[4] = 1152;
      return swift_willThrow();
    }
    else
    {
      sub_10000566C(&qword_10070FEE0);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1005F6670;
      *(unsigned char *)(result + 32) = v3;
    }
  }
  return result;
}

void sub_1003104B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = (void *)sub_1002E1F90();
  v11[2] = a4;
  v11[3] = a5;
  v11[4] = a6;
  v11[5] = a7;
  swift_retain();
  sub_10031D2A8();
  sub_10033CB54(v12, v13, v14, v15);
  swift_release();
  sub_10031D4A8();
}

#error "100310650: call analysis failed (funcsize=65)"

#error "1003106C4: call analysis failed (funcsize=66)"

void sub_1003107A4()
{
  sub_10031D274();
  uint64_t v2 = sub_100300D44();
  sub_10032C480(v2, v3);
  if (!v1)
  {
    LODWORD(v15) = v26;
    HIDWORD(v15) = v25;
    sub_10031D41C();
    sub_100300D44();
    uint64_t v4 = sub_10030DB5C();
    *(void *)uint64_t v0 = v18;
    *(void *)(v0 + 8) = v19;
    sub_10031D7CC(v4, v5, v6, v7, v8, v9, v10, v11, v15, v24, v23, v22, v21, v20);
    *(unsigned char *)(v0 + 56) = v17;
    *(unsigned char *)(v0 + 57) = v16;
    *(void *)(v0 + 64) = v12;
    *(void *)(v0 + 72) = v13;
    *(unsigned char *)(v0 + 80) = v14;
  }
}

void sub_100310880(uint64_t a1@<X8>)
{
  sub_10031DE28();
  uint64_t v40 = v3;
  swift_retain();
  sub_10031D680();
  uint64_t v28 = sub_100328614(v4, v5, v6, v7, v8, v9, v10, v11, v21, v23, v25, v27, v29, a1, v32, v33, v34, v35, v36,
          v37,
          v38,
          v39,
          v2,
          v40);
  if (!v1)
  {
    uint64_t v14 = v12;
    uint64_t v15 = v13;
    sub_10031D568();
    sub_10031DCCC();
    uint64_t v26 = v16;
    sub_10031D568();
    sub_10031DCCC();
    uint64_t v24 = v17;
    sub_10031D568();
    sub_10031DCCC();
    uint64_t v22 = v18;
    swift_retain();
    sub_10031D680();
    uint64_t v19 = sub_10032AF10();
    *(void *)uint64_t v31 = v28;
    *(void *)(v31 + 8) = v14;
    *(void *)(v31 + 16) = v15;
    *(void *)(v31 + 24) = v26;
    *(void *)(v31 + 32) = v24;
    *(void *)(v31 + 40) = v22;
    *(void *)(v31 + 48) = v19;
    *(unsigned char *)(v31 + 56) = v20 & 1;
  }
  sub_10031DBA8();
}

void sub_1003109A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *int v9 = a3;
      goto LABEL_6;
    }
    sub_1002DC964();
    uint64_t v5 = sub_1002DC9A8();
    sub_100338020(v5, v6, v7, v8, 0x7EuLL, 0xE100000000000000, 0);
    if (v3)
    {
      swift_release();
      sub_1002DC990();
LABEL_6:
      swift_willThrow();
      return;
    }
    swift_release();
  }
}

#error "100310A90: call analysis failed (funcsize=16)"

uint64_t sub_100310AA0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = (uint64_t)sub_10032D3F0(a1, a2, a3, 1);
  uint64_t v9 = v8;
  if (!v6)
  {
    if (v8 < 0)
    {
      sub_100296090();
      sub_10020DD10();
      sub_10031DED4();
      sub_10031D6A0(v11, v12);
      sub_10031DC8C(v13, v14);
      goto LABEL_6;
    }
    if (v8 > a6)
    {
      sub_1002E14DC();
      sub_10020DD10();
      *int v10 = v9;
      v10[1] = a6;
LABEL_6:
      swift_willThrow();
    }
  }
  return v9;
}

void sub_100310B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

#error "100310B98: call analysis failed (funcsize=16)"

void sub_100310BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  sub_10030108C();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  sub_10031E1C0();
  if (v29) {
    goto LABEL_6;
  }
  sub_1003011D0();
  unint64_t v39 = sub_100310AA0(v34, v35, v36, v37, v38, v31);
  sub_10031D958();
  v40();
  sub_10031DCE8();
  sub_10031D958();
  sub_10032964C();
  uint64_t v41 = ByteBuffer.readSlice(length:)(v39);
  if (!v41)
  {
    sub_1002E1490();
    sub_10020DD10();
    swift_willThrow();
LABEL_6:
    sub_100301040();
    return;
  }
  int v44 = v42;
  unint64_t v45 = HIDWORD(v42);
  if (HIDWORD(v42) < v42)
  {
    __break(1u);
  }
  else
  {
    int v46 = v43;
    if (v43 - (BYTE6(v43) | (WORD2(v43) << 8)) >= v45)
    {
      uint64_t v47 = v41;
      unint64_t v48 = HIWORD(v43);
      unint64_t v49 = HIDWORD(v43);
      if (sub_100210458(0))
      {
        sub_100296090();
        sub_10020DD10();
        *uint64_t v50 = 0xD000000000000019;
        v50[1] = 0x80000001005E6A60;
        sub_10031DA00((uint64_t)v50, 0xD000000000000020);
        *(void *)(v51 + 32) = a29;
        swift_willThrow();
        swift_release();
      }
      else
      {
        *(void *)uint64_t v33 = v47;
        *(_DWORD *)(v33 + 8) = v44;
        *(_DWORD *)(v33 + 12) = v45;
        *(_DWORD *)(v33 + 16) = v46;
        *(_WORD *)(v33 + 20) = v49;
        *(unsigned char *)(v33 + 22) = v48;
      }
      goto LABEL_6;
    }
  }
  __break(1u);
}

void sub_100310D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *uint64_t v9 = a3;
      goto LABEL_6;
    }
    sub_1002DC964();
    uint64_t v5 = sub_1002DC9A8();
    sub_100338020(v5, v6, v7, v8, 0x2BuLL, 0xE100000000000000, 0);
    if (v3)
    {
      swift_release();
      sub_1002DC990();
LABEL_6:
      swift_willThrow();
      return;
    }
    swift_release();
  }
}

uint64_t sub_100310E50()
{
  if (qword_10070FD00 != -1) {
    swift_once();
  }
  uint64_t v1 = static Media.TopLevelType.application;
  sub_10031E1C0();
  if (!v0)
  {
    sub_10031E1C0();
    sub_10031E1C0();
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t sub_100310F60()
{
  if (qword_10070FD08 != -1) {
    swift_once();
  }
  uint64_t v1 = static Media.TopLevelType.audio;
  sub_10031E1C0();
  if (!v0)
  {
    sub_10031E1C0();
    sub_10031E1C0();
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t sub_100311064()
{
  if (qword_10070FD10 != -1) {
    swift_once();
  }
  uint64_t v1 = static Media.TopLevelType.image;
  sub_10031E1C0();
  if (!v0)
  {
    sub_10031E1C0();
    sub_10031E1C0();
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t sub_100311168()
{
  if (qword_10070FD18 != -1) {
    swift_once();
  }
  uint64_t v1 = static Media.TopLevelType.message;
  sub_10031E1C0();
  if (!v0)
  {
    sub_10031E1C0();
    sub_10031E1C0();
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t sub_100311270()
{
  if (qword_10070FD20 != -1) {
    swift_once();
  }
  uint64_t v1 = static Media.TopLevelType.video;
  sub_10031E1C0();
  if (!v0)
  {
    sub_10031E1C0();
    sub_10031E1C0();
    swift_bridgeObjectRetain();
  }
  return v1;
}

void sub_100311374()
{
  sub_10030A038();
  if (!v0)
  {
    sub_10031E368(v1, v2, v3 & 0xFFFFFFFFFFFFFFLL, 0xD000000000000020, 0x80000001005E63C0, 1372);
    sub_1005E1CB0();
    swift_release();
    swift_bridgeObjectRelease();
  }
}

void sub_100311418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031DE1C();
  Swift::Int v23 = v14;
  sub_10000566C(&qword_1007123C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6720;
  *(void *)(inited + 32) = sub_100311628;
  *(void *)(inited + 40) = 0;
  *(void *)(inited + 48) = sub_100311654;
  *(void *)(inited + 56) = 0;
  *(void *)(inited + 64) = sub_100311680;
  *(void *)(inited + 72) = 0;
  *(void *)(inited + 80) = sub_1003116AC;
  *(void *)(inited + 88) = 0;
  *(void *)(inited + 96) = sub_1003116D8;
  *(void *)(inited + 104) = 0;
  uint64_t v16 = (void *)sub_1002E1F90();
  v16[2] = a4;
  v16[3] = a5;
  v16[4] = a6;
  v16[5] = a7;
  uint64_t v17 = sub_1002E8414();
  *(void *)(v17 + 16) = sub_10031C494;
  *(void *)(v17 + 24) = v16;
  *(void *)(inited + 112) = sub_10031C4B0;
  *(void *)(inited + 120) = v17;
  swift_retain();
  sub_10031D6B4();
  uint64_t v18 = sub_10033FA40();
  if (v24)
  {
    swift_setDeallocating();
    sub_10034A020();
  }
  else
  {
    uint64_t v22 = v18;
    uint64_t v25 = v19;
    swift_setDeallocating();
    sub_10034A020();
    sub_10031E2BC(v8, v7, a3);
    sub_10030A3C4();
    *Swift::Int v23 = v22;
    v23[1] = v25;
    v23[2] = v20;
    v23[3] = v21;
  }
}

uint64_t sub_100311628()
{
  return sub_100311704();
}

uint64_t sub_100311654()
{
  return sub_100311704();
}

uint64_t sub_100311680()
{
  return sub_100311704();
}

uint64_t sub_1003116AC()
{
  return sub_100311704();
}

uint64_t sub_1003116D8()
{
  return sub_100311704();
}

uint64_t sub_100311704()
{
  sub_10031DA98();
  uint64_t result = v2();
  if (!v1)
  {
    *uint64_t v0 = result;
    v0[1] = v4;
  }
  return result;
}

uint64_t sub_100311734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v16 = a4;
  uint64_t v17 = a5;
  uint64_t v18 = a6;
  uint64_t v19 = a7;
  uint64_t v11 = a4;
  uint64_t v12 = a5;
  uint64_t v13 = a6;
  uint64_t v14 = a7;
  sub_1002E1F6C();
  return sub_100309854(sub_10031CCA0, v15, sub_10031CCBC, v10, sub_10031CCD8, v9, v7);
}

void sub_100311808(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_10031E1C0();
  if (!v4)
  {
    uint64_t v9 = sub_10032D3F0(a1, a2, a3, 1);
    if (((unint64_t)v9 & 0x8000000000000000) != 0)
    {
      sub_100296090();
      swift_allocError();
      *int v10 = 0xD000000000000011;
      v10[1] = 0x80000001005E65D0;
      v10[2] = 0xD000000000000020;
      v10[3] = 0x80000001005E63C0;
      v10[4] = 167;
      swift_willThrow();
    }
    else
    {
      *a4 = v9;
      type metadata accessor for MetadataOption();
      swift_storeEnumTagMultiPayload();
    }
  }
}

uint64_t *sub_100311924@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_100311970(a1, a2, a3);
  if (!v4)
  {
    *a4 = (_BYTE)result;
    type metadata accessor for MetadataOption();
    return (uint64_t *)swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t *sub_100311970(uint64_t *result, uint64_t a2, uint64_t a3)
{
  if (!__OFADD__(a2, 1))
  {
    uint64_t v4 = a3;
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      void *v11 = v4;
    }
    else
    {
      uint64_t v5 = result;
      uint64_t v6 = *result;
      uint64_t v7 = result[1];
      int v8 = *((_DWORD *)result + 4);
      __int16 v9 = *((_WORD *)result + 10);
      char v10 = *((unsigned char *)result + 22);
      swift_retain();
      sub_10031E1C0();
      if (!v3)
      {
        sub_100309C60();
        uint64_t v4 = v12;
        swift_release();
        return (uint64_t *)v4;
      }
      swift_release();
      *uint64_t v5 = v6;
      v5[1] = v7;
      *((_DWORD *)v5 + 4) = v8;
      *((_WORD *)v5 + 10) = v9;
      *((unsigned char *)v5 + 22) = v10;
    }
    swift_willThrow();
    return (uint64_t *)v4;
  }
  __break(1u);
  return result;
}

void sub_100311B38()
{
  sub_1002F2480();
  sub_10031D138();
  if (!v1)
  {
    uint64_t v19 = v0;
    sub_10000566C(&qword_100710768);
    sub_10031DDF8();
    uint64_t v2 = type metadata accessor for MetadataOption();
    sub_10031D0A0(v2);
    uint64_t v3 = (__n128 *)sub_10031D360();
    sub_10031D6C0(v3, (__n128)xmmword_1005F6670);
    uint64_t v4 = sub_1002F22FC();
    sub_100311734(v4, v5, v6, v7, v8, v9, v10);
    v18[1] = v18;
    sub_10031DB28();
    __chkstk_darwin(v11);
    sub_10031D25C();
    uint64_t v12 = sub_1002F3294();
    sub_10031EF04(v12, v13, v14, v15, v16, v17);
    sub_10031DE5C();
    sub_10031D070();
    *uint64_t v19 = sub_10031DB34();
  }
  sub_10031D590();
  sub_1002F2468();
}

void sub_100311C60(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  sub_10031E1C0();
  if (!v8)
  {
    sub_100308D44(a1, a2, a3, a4, a5, a6, a7, v16, v28, v30, v32, v34, v35, v36, v37, a8, v40, v41, v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      vars0,
      vars8);
    unsigned int v18 = v17;
    uint64_t v29 = a4;
    uint64_t v31 = a6;
    uint64_t v33 = a7;
    unint64_t v19 = HIDWORD(v17);
    uint64_t v21 = v20;
    unint64_t v23 = v22;
    swift_beginAccess();
    v24._rawValue = (void *)sub_1001F9054(*(void *)(v21 + 24) + ((v23 >> 24) & 0xFFFF00 | BYTE6(v23)) + v18, v19 - v18);
    NIOIMAPCore2::MailboxName v50 = MailboxName.init(_:)(v24);
    rawValue = v50.bytes._rawValue;
    LODWORD(v23) = v50._hashValue._value;
    swift_release();
    sub_10031E2BC(a1, a2, a3);
    swift_retain();
    *(void *)uint64_t v39 = sub_10032269C(a1, a2, a3, v29, a5, v31, v33);
    *(void *)(v39 + 8) = v26;
    *(void *)(v39 + 16) = v27;
    *(void *)(v39 + 24) = rawValue;
    *(_DWORD *)(v39 + 32) = v23;
  }
}

void sub_100311DF0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  sub_10031E1C0();
  if (!v8)
  {
    sub_100308D44(a1, a2, a3, a4, a5, a6, a7, v16, v26, v28, v30, v32, v33, v34, v35, a8, v38, v39, v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      vars0,
      vars8);
    unsigned int v18 = v17;
    uint64_t v27 = a4;
    uint64_t v29 = a6;
    uint64_t v31 = a7;
    unint64_t v19 = HIDWORD(v17);
    uint64_t v21 = v20;
    unint64_t v23 = v22;
    swift_beginAccess();
    v24._rawValue = (void *)sub_1001F9054(*(void *)(v21 + 24) + ((v23 >> 24) & 0xFFFF00 | BYTE6(v23)) + v18, v19 - v18);
    NIOIMAPCore2::MailboxName v48 = MailboxName.init(_:)(v24);
    rawValue = v48.bytes._rawValue;
    LODWORD(v23) = v48._hashValue._value;
    swift_release();
    sub_10031E2BC(a1, a2, a3);
    swift_retain();
    *(void *)uint64_t v37 = sub_100322338(a1, a2, a3, v27, a5, v29, v31);
    *(void *)(v37 + 8) = rawValue;
    *(void *)(v37 + 16) = v23 | 0x8000000000000000;
    *(void *)(v37 + 24) = 0;
    *(_DWORD *)(v37 + 32) = 0;
  }
}

void *sub_100311F88@<X0>(void *(*a1)(long long *__return_ptr)@<X3>, uint64_t a2@<X8>)
{
  uint64_t result = a1(v5);
  if (!v2) {
    return (void *)sub_10028CC70(v5, a2);
  }
  return result;
}

uint64_t sub_100311FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = a4;
  uint64_t v15 = a5;
  uint64_t v16 = a6;
  uint64_t v17 = a7;
  uint64_t v11 = sub_10031C17C;
  uint64_t v12 = &v13;
  uint64_t result = sub_10033C940((uint64_t)sub_100312DC8, 0, (uint64_t)sub_10031C198, (uint64_t)v10);
  if (v7) {
    return v9 & 0xFFFFFFFFFFFFFFLL;
  }
  return result;
}

uint64_t sub_100312094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_retain();
  uint64_t result = sub_10031F744(a1, a2, a3, a4, a5, a6, a7);
  if (v7) {
    return v16 & 0xFFFFFFFFFFFFFFLL;
  }
  return result;
}

void sub_100312120()
{
}

void *sub_10031213C@<X0>(uint64_t a1@<X8>)
{
  return sub_10032D5FC(*(void *(**)(void *__return_ptr))(v1 + 16), a1);
}

void sub_100312158()
{
  sub_1002E1C9C();
  sub_10030E66C(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_100312174(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 64) & 0x1FFLL;
  *(void *)(result + 16) &= 0x1FFFFFFFFuLL;
  *(void *)(result + 64) = v1;
  return result;
}

uint64_t sub_100312190(uint64_t x0_0, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  sub_10031E1C0();
  if (!v5)
  {
    sub_10030A634(x0_0, a2, a3, a4);
    sub_1005E1E30(v12);
    swift_bridgeObjectRelease();
    a5 = ByteBufferAllocator.buffer(string:)(92, 0xE100000000000000, (uint64_t)j_j__malloc_0, (uint64_t)j_j__realloc_0, (uint64_t)j_j__free_0);
    swift_bridgeObjectRelease();
  }
  return a5;
}

uint64_t sub_1003122B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  Swift::String v12 = (void *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a7;
  unsigned int v18 = sub_10031CDC0;
  unint64_t v19 = v12;
  swift_retain();
  uint64_t v13 = sub_10033C780((uint64_t)sub_10031CFE0, (uint64_t)v17, (uint64_t)sub_10030B1F0, 0);
  uint64_t v15 = v14;
  swift_release();
  if (v7) {
    return v15 & 0xFFFFFFFFFFFFFFLL;
  }
  else {
    return v13;
  }
}

uint64_t sub_1003123EC()
{
  sub_10031DE04();
  uint64_t result = v1();
  if (!v0) {
    return sub_10031D2D0(result, v3, v4);
  }
  return result;
}

uint64_t sub_100312418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1002E1F24(a1, a2, a3, a4, a5, a6, a7);
  sub_1002E1F6C();
  sub_1002E1DF0();
  sub_10031D0D8();
  return sub_10033CB54(v7, v8, v9, v10);
}

uint64_t sub_1003124AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7)
  {
    uint64_t v15 = (void *)swift_allocObject();
    v18[1] = v18;
    v15[2] = a4;
    v15[3] = a5;
    v15[4] = a6;
    v15[5] = a7;
    _OWORD v17[2] = sub_10031BE2C;
    v17[3] = __chkstk_darwin();
    swift_retain();
    a5 = sub_10032CFD8(a1, a2, a3, (uint64_t)sub_10031BE48, (uint64_t)v17, (uint64_t)&type metadata for NamespaceDescription);
    swift_release();
    sub_10031E1C0();
  }
  return a5;
}

__n128 sub_100312620@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  swift_retain();
  sub_1003287F0(v24, a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    int v18 = v25;
    __int16 v19 = v26;
    char v20 = v27;
    uint64_t v21 = v29;
    __n128 result = v28;
    uint64_t v22 = v24[1];
    long long v23 = v30;
    *(void *)a8 = v24[0];
    *(void *)(a8 + 8) = v22;
    *(_DWORD *)(a8 + 16) = v18;
    *(_WORD *)(a8 + 20) = v19;
    *(unsigned char *)(a8 + 22) = v20;
    *(__n128 *)(a8 + 24) = result;
    *(void *)(a8 + 40) = v21;
    *(_OWORD *)(a8 + 48) = v23;
  }
  return result;
}

void sub_1003126EC(uint64_t a1)
{
  sub_10031E1C0();
  if (!v1)
  {
    char v3 = sub_10032CEB0(a1);
    if (sub_100345A58(v3))
    {
      sub_10031E1C0();
      sub_1005E1D80();
    }
    else
    {
      sub_100296090();
      swift_allocError();
      *uint64_t v4 = 0xD000000000000011;
      v4[1] = 0x80000001005E6A40;
      v4[2] = 0xD000000000000020;
      v4[3] = 0x80000001005E63C0;
      v4[4] = 1566;
      swift_willThrow();
    }
  }
}

void sub_100312870()
{
  sub_1002F2480();
  sub_10031D138();
  if (!v1)
  {
    sub_10031D7FC();
    sub_10030A038();
    uint64_t v31 = v2;
    uint64_t v32 = v3;
    uint64_t v33 = v4;
    uint64_t v5 = sub_1002F3294();
    sub_10031E2BC(v5, v6, v7);
    long long v30 = &v27;
    __chkstk_darwin();
    __chkstk_darwin();
    sub_10031DF24();
    sub_10031D508();
    sub_10033CBA4(v8, v9, v10, v11);
    sub_10031DE9C();
    uint64_t v28 = v12;
    uint64_t v29 = v13;
    sub_10031DE5C();
    uint64_t v14 = sub_10031D7FC();
    uint64_t v21 = sub_100312A58(v14, v15, v16, v17, v18, v19, v20);
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    sub_10031D070();
    *(void *)uint64_t v0 = v33;
    uint64_t v26 = v32;
    *(void *)(v0 + 8) = v31;
    *(_DWORD *)(v0 + 16) = v26;
    *(_WORD *)(v0 + 20) = WORD2(v26);
    *(unsigned char *)(v0 + 22) = BYTE6(v26);
    *(void *)(v0 + 24) = v28;
    *(void *)(v0 + 32) = v29;
    *(void *)(v0 + 40) = v21;
    *(void *)(v0 + 48) = v23;
    *(void *)(v0 + 56) = v25;
  }
  sub_10031D590();
  sub_1002F2468();
}

uint64_t sub_100312A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v10[0] = 0;
  v10[1] = _swiftEmptyArrayStorage;
  v10[2] = _swiftEmptyArrayStorage;
  v9[2] = a4;
  v9[3] = a5;
  v9[4] = a6;
  v9[5] = a7;
  sub_10031EF30(a1, a2, a3, (uint64_t)sub_10031BF0C, (uint64_t)v9, (uint64_t)v10);
  uint64_t result = v10[0];
  if (v7)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

double sub_100312AE0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  swift_retain();
  sub_100328894(v22, a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    int v18 = v23;
    __int16 v19 = v24;
    char v20 = v25;
    uint64_t v21 = v26;
    double result = *(double *)&v22[1];
    *(void *)a8 = v22[0];
    *(double *)(a8 + 8) = result;
    *(_DWORD *)(a8 + 16) = v18;
    *(_WORD *)(a8 + 20) = v19;
    *(unsigned char *)(a8 + 22) = v20;
    *(void *)(a8 + 24) = v21;
  }
  return result;
}

void sub_100312B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1002F2480();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  sub_10031E2BC(v21, v22, v23);
  if (!v10)
  {
    sub_10031D890();
    uint64_t v44 = v24;
    uint64_t v45 = v25;
    uint64_t v46 = v26;
    sub_10031D958();
    sub_10031E2BC(v27, v28, v29);
    sub_10031DA10();
    sub_10031DCE8();
    sub_10000566C(&qword_100710650);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1005F6670;
    sub_10031D890();
    v42[1] = v42;
    sub_10031D654(v30, v31, v32);
    __chkstk_darwin();
    sub_10031D5F0();
    *(void *)(v33 - 32) = v18;
    *(void *)(v33 - 24) = v16;
    *(void *)(v33 - 16) = v14;
    *(void *)(v33 - 8) = v12;
    sub_10031D958();
    sub_10031EF5C(v34, v35, v36, v37, v38, v39);
    sub_10031D408();
    sub_10031DCE8();
    uint64_t v41 = v44;
    uint64_t v40 = v45;
    *(void *)uint64_t v20 = v46;
    *(void *)(v20 + 8) = v41;
    *(_DWORD *)(v20 + 16) = v40;
    *(_WORD *)(v20 + 20) = WORD2(v40);
    *(unsigned char *)(v20 + 22) = BYTE6(v40);
    *(void *)(v20 + 24) = a10;
  }
  sub_10031D590();
  sub_1002F2468();
}

uint64_t sub_100312D6C()
{
  return 0;
}

uint64_t sub_100312DA0()
{
  sub_10030A038();
  return sub_10031D354(v0 & 0xFFFFFFFFFFFFFFLL);
}

uint64_t sub_100312DC8()
{
  uint64_t result = sub_100312D6C();
  if (!v0) {
    return sub_10031D2B4(result, v2, v3);
  }
  return result;
}

uint64_t sub_100312DF4()
{
  sub_10031DE04();
  uint64_t result = v1();
  if (!v0) {
    return sub_10031D2B4(result, v3, v4);
  }
  return result;
}

void sub_100312E24(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  sub_10030A634(a1, a2, a3, a4);
  if (!v5)
  {
    *(void *)a5 = v7;
    *(void *)(a5 + 8) = v8;
    *(void *)(a5 + 16) = 0;
    *(void *)(a5 + 24) = 0;
    *(unsigned char *)(a5 + 32) = 0;
  }
}

void sub_100312E58(uint64_t a1@<X8>)
{
  swift_retain();
  sub_100328938();
  if (!v1)
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 32) = 1;
  }
}

uint64_t sub_100312EE8()
{
  sub_10031D8F8();
  sub_1002E1F6C();
  sub_10031D2A8();
  uint64_t result = sub_10033D374(v2, v3, v4, v5, v6);
  if (!v1)
  {
    swift_retain();
    sub_100300D44();
    sub_10032C90C();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    uint64_t result = sub_1002676E0((uint64_t)v14, (uint64_t)v0);
    v0[5] = v9;
    v0[6] = v11;
    v0[7] = v13;
  }
  return result;
}

void *sub_100313020@<X0>(void *(*a1)(void *__return_ptr)@<X3>, uint64_t a2@<X8>)
{
  uint64_t result = a1(v5);
  if (!v2) {
    return (void *)sub_1002676E0((uint64_t)v5, a2);
  }
  return result;
}

uint64_t sub_100313070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031DEF8(a1, a2, a3, a4, a5, a6, a7);
  sub_10031DAE8();
  sub_100309A08();
  return sub_10031D354(v7 & 0xFFFFFFFFFFFFFFLL | ((HIBYTE(v7) & 1) << 56));
}

#error "100313178: call analysis failed (funcsize=13)"

void sub_10031319C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7)
  {
    uint64_t v15 = sub_100313070(a1, a2, a3, a4, a5, a6, a7);
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    sub_10031E1C0();
    sub_10000566C(&qword_100710740);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1005F6670;
    *(void *)(v20 + 32) = v15;
    *(void *)(v20 + 40) = v17;
    *(unsigned char *)(v20 + 54) = BYTE6(v19);
    *(_WORD *)(v20 + 52) = WORD2(v19);
    *(_DWORD *)(v20 + 48) = v19;
    *(unsigned char *)(v20 + 55) = HIBYTE(v19) & 1;
  }
}

uint64_t sub_1003132F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10000566C(&qword_100710740);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1005F6670;
  uint64_t v16 = sub_100313070(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
  {
    *(void *)(v15 + 16) = 0;
    return swift_release();
  }
  else
  {
    uint64_t v21 = (uint64_t)&v21;
    *(void *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = v17;
    *(_DWORD *)(v15 + 48) = v18;
    *(unsigned char *)(v15 + 54) = BYTE6(v18);
    *(_WORD *)(v15 + 52) = WORD2(v18);
    *(unsigned char *)(v15 + 55) = HIBYTE(v18) & 1;
    uint64_t v22 = v15;
    __chkstk_darwin(v16);
    v20[2] = a4;
    v20[3] = a5;
    v20[4] = a6;
    v20[5] = a7;
    sub_10031EF88(a1, a2, a3, (uint64_t)sub_10031CABC, (uint64_t)v20, (uint64_t)&v22);
    return v22;
  }
}

void sub_10031347C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v8)
  {
    *(void *)a8 = sub_100313070(a1, a2, a3, a4, a5, a6, a7);
    *(void *)(a8 + 8) = v17;
    *(_DWORD *)(a8 + 16) = v18;
    *(unsigned char *)(a8 + 22) = v19;
    *(_WORD *)(a8 + 20) = v20;
    *(unsigned char *)(a8 + 23) = v21 & 1;
  }
}

uint64_t sub_10031351C@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(_DWORD *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 22) = BYTE6(v6);
    *(_WORD *)(a2 + 20) = WORD2(v6);
    *(unsigned char *)(a2 + 23) = HIBYTE(v6) & 1;
  }
  return result;
}

void sub_10031356C(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int *a4@<X8>)
{
  sub_10031E1C0();
  if (!v4)
  {
    uint64_t v9 = sub_10032D3F0(a1, a2, a3, 1);
    unsigned int v10 = v9;
    if (((unint64_t)v9 & 0x8000000000000000) != 0) {
      goto LABEL_8;
    }
    if ((unint64_t)v9 >> 32)
    {
      sub_100296090();
      sub_10020DD10();
      sub_10031DF58();
      sub_1002E1E50(v11, v12);
      sub_10031DA00(v13, v14);
      uint64_t v16 = 1761;
LABEL_9:
      sub_1002E9998((uint64_t)v15, v16);
      return;
    }
    sub_1002F71C0();
    uint64_t v17 = sub_10032D3F0(a1, a2, a3, 0);
    int v18 = (int)v17;
    if (((unint64_t)v17 & 0x8000000000000000) != 0)
    {
LABEL_8:
      sub_100296090();
      uint64_t v23 = sub_10020DD10();
      sub_1002E1E50(v23, v24);
      sub_1002F725C(v25, v26);
      goto LABEL_9;
    }
    if ((unint64_t)v17 >> 32)
    {
      sub_100296090();
      sub_10020DD10();
      sub_10031DF58();
      sub_1002E1E50(v19, v20);
      sub_10031DA00(v21, v22);
      uint64_t v16 = 1765;
      goto LABEL_9;
    }
    if (!v17)
    {
      sub_1005E2C80(34);
      swift_bridgeObjectRelease();
      sub_10031DA24();
      v36._countAndFlagsBits = sub_10031D638();
      sub_1005E1E30(v36);
      swift_bridgeObjectRelease();
      sub_10031DD54();
      v37._countAndFlagsBits = sub_10031D638();
      sub_10031DF0C(v37);
      swift_bridgeObjectRelease();
      sub_10031DD38();
      sub_100296090();
      sub_10020DD10();
      *uint64_t v28 = 0;
      v28[1] = 0xE000000000000000;
      sub_10031DF24();
      v15[2] = 0xD000000000000020;
      v15[3] = v29;
      uint64_t v16 = 1767;
      goto LABEL_9;
    }
    sub_1002F71C0();
    int v27 = v10 + v18;
    if (__CFADD__(v10, v18))
    {
      sub_10031DA58();
      swift_bridgeObjectRelease();
      sub_10031DA24();
      v34._countAndFlagsBits = sub_10031D638();
      sub_1005E1E30(v34);
      swift_bridgeObjectRelease();
      sub_10031DD54();
      v35._countAndFlagsBits = sub_10031D638();
      sub_10031DF0C(v35);
      swift_bridgeObjectRelease();
      sub_10031DD38();
      sub_100296090();
      sub_10020DD10();
      *uint64_t v15 = v32;
      v15[1] = v33;
      v15[2] = 0xD000000000000020;
      v15[3] = 0x80000001005E63C0;
      uint64_t v16 = 1770;
      goto LABEL_9;
    }
    BOOL v30 = v27 != 0;
    unsigned int v31 = v27 - 1;
    if (!v30)
    {
      sub_10031DA58();
      swift_bridgeObjectRelease();
      sub_10031DA24();
      v38._countAndFlagsBits = sub_10031D638();
      sub_1005E1E30(v38);
      swift_bridgeObjectRelease();
      sub_10031DD54();
      v39._countAndFlagsBits = sub_10031D638();
      sub_10031DF0C(v39);
      swift_bridgeObjectRelease();
      sub_10031DD38();
      sub_100296090();
      sub_10020DD10();
      *uint64_t v15 = v32;
      v15[1] = v33;
      v15[2] = 0xD000000000000020;
      v15[3] = 0x80000001005E63C0;
      uint64_t v16 = 1772;
      goto LABEL_9;
    }
    if (v31 < v10)
    {
      __break(1u);
    }
    else
    {
      *a4 = v10;
      a4[1] = v31;
    }
  }
}

void sub_100313934()
{
  sub_10031D600();
  sub_1002E987C();
  if (!v1 && ((unint64_t)sub_10032D3F0(v3, v2, v0, 1) & 0x8000000000000000) != 0)
  {
    sub_100296090();
    sub_10020DD10();
    sub_10031DED4();
    sub_10031D6A0(v4, v5);
    *(void *)(v6 + 16) = v7;
    *(void *)(v6 + 24) = 0x80000001005E63C0;
    sub_1002E9998(v6, 167);
  }
}

void sub_1003139DC()
{
  sub_1002F2480();
  sub_10031D138();
  if (!v1)
  {
    uint64_t v32 = v0;
    sub_10000566C(&qword_100710650);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1005F6670;
    uint64_t v3 = sub_1002F22FC();
    uint64_t v10 = sub_1002F24AC(v3, v4, v5, v6, v7, v8, v9);
    sub_10031DD2C(v10, v11, v12, v13, v14, v15, v16, v17, v31);
    *(void *)(v2 + 32) = v18;
    *(_DWORD *)(v2 + 40) = v19;
    *(_DWORD *)(v2 + 44) = v20;
    *(_DWORD *)(v2 + 48) = v21;
    *(_WORD *)(v2 + 52) = v22;
    *(unsigned char *)(v2 + 54) = v23;
    sub_10031DB28();
    __chkstk_darwin(v24);
    sub_10031D25C();
    uint64_t v25 = sub_1002F3294();
    sub_10031EF5C(v25, v26, v27, v28, v29, v30);
    sub_10031D070();
    *uint64_t v32 = sub_10031DB34();
  }
  sub_10031D590();
  sub_1002F2468();
}

void sub_100313B08()
{
  sub_1002F2480();
  sub_10031D74C(v1, v2, v3);
  if (!v0)
  {
    uint64_t v4 = sub_1002DC944();
    uint64_t v6 = v5(v4);
    sub_10031D2D0(v6, v7, v8);
  }
  sub_1002F2468();
}

void sub_100313B54(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_10031DA78();
  sub_10031E1C0();
  if (v4) {
    return;
  }
  if (__OFADD__(a2, 1)) {
    goto LABEL_55;
  }
  if (a2 + 1 >= a3)
  {
    sub_1002DB5BC();
    sub_10020DD10();
    *int v20 = a3;
    goto LABEL_27;
  }
  uint64_t v62 = a4;
  uint64_t v11 = *(unsigned int *)(a1 + 8);
  unint64_t v5 = *(unsigned int *)(a1 + 12);
  if (v5 < v11)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  v77 = &v58;
  int v12 = *(_DWORD *)(a1 + 16);
  uint64_t v13 = *(unsigned __int8 *)(a1 + 22);
  uint64_t v65 = *(unsigned __int16 *)(a1 + 20);
  uint64_t v63 = (char *)v13;
  uint64_t v14 = v13 | (v65 << 8);
  LODWORD(v64) = v12;
  if (v12 - (int)v14 < v5)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  unint64_t v6 = *(void *)a1;
  if (v5 == v11)
  {
LABEL_25:
    sub_1002E1490();
    sub_10020DD10();
    swift_retain();
    swift_willThrow();
    swift_release();
    *(void *)a1 = v6;
    *(_DWORD *)(a1 + 8) = v11;
    *(_DWORD *)(a1 + 12) = v5;
    *(_DWORD *)(a1 + 16) = v64;
    *(_WORD *)(a1 + 20) = v65;
    *(unsigned char *)(a1 + 22) = (_BYTE)v63;
LABEL_27:
    swift_willThrow();
    return;
  }
  swift_beginAccess();
  unint64_t v15 = 0;
  char v16 = 0;
  char v17 = 0;
  while (1)
  {
    if (v11 + v15 >= v5)
    {
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    if (v15 >= (v5 - v11)) {
      goto LABEL_54;
    }
    int v18 = *(unsigned __int8 *)(*(void *)(v6 + 24) + v14 + v11 + v15);
    if (v16)
    {
      char v16 = 0;
      if (v18 != 34 && v18 != 92) {
        break;
      }
      goto LABEL_24;
    }
    BOOL v19 = v18 == 10 || v18 == 13;
    if (v19 || (v18 & 0x80) != 0) {
      break;
    }
    if (v18 == 92)
    {
      char v16 = 1;
      char v17 = 1;
    }
    else
    {
      if (!*(unsigned char *)(*(void *)(v6 + 24) + v14 + v11 + v15) || v18 == 34) {
        break;
      }
      char v16 = 0;
    }
LABEL_24:
    ++v15;
    if (!(v11 - v5 + v15)) {
      goto LABEL_25;
    }
  }
  char v21 = v17;
  swift_retain();
  uint64_t v22 = ByteBuffer.readSlice(length:)(v15);
  if (v22)
  {
    uint64_t v25 = v22;
    unint64_t v5 = v23;
    uint64_t v26 = v24;
    swift_release();
    sub_10031DA78();
    sub_10031E1C0();
    unint64_t v6 = HIDWORD(v5);
    if (v21)
    {
      uint64_t v59 = v26;
      uint64_t v60 = v25;
      uint64_t v27 = qword_10070FB10;
      swift_retain();
      if (v27 != -1) {
        goto LABEL_62;
      }
      while (1)
      {
        uint64_t v28 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
        int v29 = qword_100761858;
        Swift::UInt32 v30 = HIDWORD(qword_100761858);
        int v31 = dword_100761860;
        __int16 v32 = word_100761864;
        char v33 = byte_100761866;
        uint64_t v72 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
        uint64_t v73 = qword_100761858;
        int v74 = dword_100761860;
        __int16 v75 = word_100761864;
        char v76 = byte_100761866;
        if (v6 == v5) {
          break;
        }
        uint64_t v34 = v5;
        uint64_t v35 = BYTE6(v59) | (WORD2(v59) << 8);
        Swift::String v36 = (unint64_t *)(v60 + 24);
        swift_retain();
        v77 = v36;
        swift_beginAccess();
        uint64_t v64 = v71;
        uint64_t v65 = (uint64_t)&v70;
        uint64_t v63 = &v66;
        uint64_t v61 = v67;
        unint64_t v58 = v5;
        while (1)
        {
          uint64_t v37 = v35;
          uint64_t v38 = *v77 + v35;
          sub_10000566C(&qword_10070FEE0);
          uint64_t v39 = swift_allocObject();
          size_t v40 = j__malloc_size((const void *)v39);
          *(void *)(v39 + 16) = 1;
          *(void *)(v39 + 24) = 2 * v40 - 64;
          int v41 = *(unsigned __int8 *)(v38 + v34);
          *(unsigned char *)(v39 + 32) = v41;
          BOOL v42 = __CFADD__(v5, 1);
          LODWORD(v5) = v5 + 1;
          if (v42) {
            break;
          }
          swift_release();
          if (v41 == 92)
          {
            uint64_t v35 = v37;
            if (v5 == v6) {
              goto LABEL_50;
            }
            uint64_t v43 = *v77 + v37;
            uint64_t v44 = swift_allocObject();
            size_t v45 = j__malloc_size((const void *)v44);
            *(void *)(v44 + 16) = 1;
            *(void *)(v44 + 24) = 2 * v45 - 64;
            int v46 = *(unsigned __int8 *)(v43 + v5);
            *(unsigned char *)(v44 + 32) = v46;
            BOOL v42 = __CFADD__(v5, 1);
            LODWORD(v5) = v5 + 1;
            if (v42) {
              goto LABEL_60;
            }
            swift_release();
            if (v46 != 92 && v46 != 34)
            {
LABEL_50:
              uint64_t v68 = 0;
              unint64_t v69 = 0xE000000000000000;
              sub_1005E2C80(36);
              swift_bridgeObjectRelease();
              sub_10031DF24();
              uint64_t v68 = v52;
              unint64_t v69 = v51;
              if (v6 < v58)
              {
                __break(1u);
              }
              else if (v6 <= (v59 - v37))
              {
                v78._countAndFlagsBits = sub_1005E1D70();
                sub_1005E1E30(v78);
                swift_bridgeObjectRelease();
                v79._countAndFlagsBits = 39;
                v79._object = (void *)0xE100000000000000;
                sub_1005E1E30(v79);
                uint64_t v53 = v68;
                unint64_t v54 = v69;
                sub_100296090();
                sub_10020DD10();
                *unint64_t v55 = v53;
                v55[1] = v54;
                sub_10031DF24();
                *(void *)(v56 + 16) = 0xD000000000000020;
                *(void *)(v56 + 24) = v57;
                sub_1002E9998(v56, 1845);
                swift_release();
                swift_release();
                swift_release();
                return;
              }
              __break(1u);
              goto LABEL_65;
            }
            char v66 = v46;
            ByteBuffer._setBytes(_:at:)((uint64_t)v63, (uint64_t)v61, v30);
            Swift::UInt32 v30 = HIDWORD(v73) + v47;
            if (__CFADD__(HIDWORD(v73), v47)) {
              goto LABEL_61;
            }
          }
          else
          {
            char v70 = v41;
            ByteBuffer._setBytes(_:at:)(v65, (uint64_t)v64, v30);
            Swift::UInt32 v30 = HIDWORD(v73) + v48;
            if (__CFADD__(HIDWORD(v73), v48)) {
              goto LABEL_59;
            }
            uint64_t v35 = v37;
          }
          HIDWORD(v73) = v30;
          uint64_t v34 = v5;
          if (v5 == v6)
          {
            swift_release_n();
            uint64_t v28 = v72;
            int v29 = v73;
            int v31 = v74;
            __int16 v32 = v75;
            char v33 = v76;
            goto LABEL_49;
          }
        }
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        swift_once();
      }
      swift_retain();
      swift_release_n();
LABEL_49:
      NIOIMAPCore2::MailboxName v50 = v62;
      *uint64_t v62 = v28;
      *((_DWORD *)v50 + 2) = v29;
      *((_DWORD *)v50 + 3) = v30;
      *((_DWORD *)v50 + 4) = v31;
      *((_WORD *)v50 + 10) = v32;
      *((unsigned char *)v50 + 22) = v33;
    }
    else
    {
      unint64_t v49 = v62;
      *uint64_t v62 = v25;
      v49[1] = v5;
      *((_DWORD *)v49 + 4) = v26;
      *((_WORD *)v49 + 10) = WORD2(v26);
      *((unsigned char *)v49 + 22) = BYTE6(v26);
    }
  }
  else
  {
LABEL_65:
    __break(1u);
  }
}

uint64_t sub_100314120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_10032D678(34, 0xE100000000000000, a1, a2, a3);
  if (v4) {
    return result;
  }
  if (__OFADD__(a2, 1))
  {
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (a2 + 1 >= a3)
  {
    sub_1002DB5BC();
    swift_allocError();
    *char v21 = a3;
    return swift_willThrow();
  }
  unint64_t v5 = *(unsigned int *)(a1 + 8);
  unint64_t v6 = *(unsigned int *)(a1 + 12);
  if (v6 < v5) {
    goto LABEL_47;
  }
  uint64_t v73 = &v54;
  int v12 = *(_DWORD *)(a1 + 16);
  uint64_t v13 = *(unsigned __int8 *)(a1 + 22);
  unint64_t v61 = *(unsigned __int16 *)(a1 + 20);
  unint64_t v58 = a4;
  uint64_t v59 = (unsigned char *)v13;
  uint64_t v14 = v13 | (v61 << 8);
  LODWORD(v60) = v12;
  if (v12 - (int)v14 < v6)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v15 = *(void *)a1;
  if (v6 == v5)
  {
LABEL_16:
    uint64_t v20 = v15;
    sub_1002E1490();
    swift_allocError();
    swift_retain();
    swift_willThrow();
    swift_release();
    *(void *)a1 = v20;
    *(_DWORD *)(a1 + 8) = v5;
    *(_DWORD *)(a1 + 12) = v6;
    *(_DWORD *)(a1 + 16) = v60;
    *(_WORD *)(a1 + 20) = v61;
    *(unsigned char *)(a1 + 22) = (_BYTE)v59;
    return swift_willThrow();
  }
  uint64_t v18 = *(void *)a1;
  swift_beginAccess();
  uint64_t v15 = v18;
  unint64_t v16 = 0;
  char v17 = 0;
  LODWORD(v18) = 0;
  while (1)
  {
    if (v5 + v16 >= v6)
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      unint64_t v64 = 0;
      unint64_t v65 = 0xE000000000000000;
      sub_1005E2C80(36);
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v64 = 0xD000000000000021;
      unint64_t v65 = 0x80000001005E6A80;
      if (v6 < v54)
      {
        __break(1u);
      }
      else if (v6 <= (v61 - v18))
      {
        v74._countAndFlagsBits = sub_1005E1D70();
        sub_1005E1E30(v74);
        swift_bridgeObjectRelease();
        v75._countAndFlagsBits = 39;
        v75._object = (void *)0xE100000000000000;
        sub_1005E1E30(v75);
        unint64_t v51 = v64;
        unint64_t v52 = v65;
        sub_100296090();
        swift_allocError();
        *uint64_t v53 = v51;
        v53[1] = v52;
        v53[2] = 0xD000000000000020;
        v53[3] = 0x80000001005E63C0;
        v53[4] = 1887;
        swift_willThrow();
        swift_release();
        swift_release();
        return swift_release();
      }
      __break(1u);
LABEL_56:
      __break(1u);
      return result;
    }
    if (v16 >= (v6 - v5)) {
      goto LABEL_42;
    }
    if ((v17 & 1) == 0)
    {
      int v19 = *(unsigned __int8 *)(*(void *)(v15 + 24) + v14 + v5 + v16);
      if (v19 == 92)
      {
        char v17 = 1;
        LODWORD(v18) = 1;
        goto LABEL_15;
      }
      if (v19 == 34) {
        break;
      }
    }
    char v17 = 0;
LABEL_15:
    ++v16;
    if (!(v5 - v6 + v16)) {
      goto LABEL_16;
    }
  }
  swift_retain();
  uint64_t result = ByteBuffer.readSlice(length:)(v16);
  unint64_t v61 = v23;
  if (!result) {
    goto LABEL_56;
  }
  uint64_t v24 = result;
  unint64_t v5 = v22;
  swift_release();
  uint64_t result = sub_10032D678(34, 0xE100000000000000, a1, a2, a3);
  unint64_t v6 = HIDWORD(v5);
  if (v18)
  {
    uint64_t v25 = qword_10070FB10;
    uint64_t v55 = v24;
    swift_retain();
    if (v25 != -1) {
      goto LABEL_53;
    }
    while (1)
    {
      uint64_t v26 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
      int v27 = qword_100761858;
      Swift::UInt32 v28 = HIDWORD(qword_100761858);
      int v29 = dword_100761860;
      __int16 v30 = word_100761864;
      char v31 = byte_100761866;
      uint64_t v68 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
      uint64_t v69 = qword_100761858;
      int v70 = dword_100761860;
      __int16 v71 = word_100761864;
      char v72 = byte_100761866;
      if (v6 == v5) {
        break;
      }
      uint64_t v32 = v5;
      uint64_t v18 = BYTE6(v61) | (WORD2(v61) << 8);
      char v33 = (unint64_t *)(v55 + 24);
      swift_retain();
      uint64_t v73 = v33;
      swift_beginAccess();
      uint64_t v59 = v67;
      uint64_t v60 = &v66;
      uint64_t v56 = v63;
      uint64_t v57 = &v62;
      unint64_t v54 = v5;
      while (1)
      {
        uint64_t v34 = v18;
        uint64_t v35 = *v73 + v18;
        sub_10000566C(&qword_10070FEE0);
        uint64_t v36 = swift_allocObject();
        size_t v37 = j__malloc_size((const void *)v36);
        *(void *)(v36 + 16) = 1;
        *(void *)(v36 + 24) = 2 * v37 - 64;
        int v38 = *(unsigned __int8 *)(v35 + v32);
        *(unsigned char *)(v36 + 32) = v38;
        BOOL v39 = __CFADD__(v5, 1);
        LODWORD(v5) = v5 + 1;
        if (v39) {
          break;
        }
        swift_release();
        if (v38 == 92)
        {
          uint64_t v18 = v34;
          if (v5 == v6) {
            goto LABEL_43;
          }
          uint64_t v40 = *v73 + v34;
          uint64_t v41 = swift_allocObject();
          size_t v42 = j__malloc_size((const void *)v41);
          *(void *)(v41 + 16) = 1;
          *(void *)(v41 + 24) = 2 * v42 - 64;
          int v43 = *(unsigned __int8 *)(v40 + v5);
          *(unsigned char *)(v41 + 32) = v43;
          BOOL v39 = __CFADD__(v5, 1);
          LODWORD(v5) = v5 + 1;
          if (v39) {
            goto LABEL_51;
          }
          swift_release();
          if (v43 != 92 && v43 != 34) {
            goto LABEL_43;
          }
          char v62 = v43;
          ByteBuffer._setBytes(_:at:)((uint64_t)v57, (uint64_t)v56, v28);
          Swift::UInt32 v28 = HIDWORD(v69) + v44;
          if (__CFADD__(HIDWORD(v69), v44)) {
            goto LABEL_52;
          }
        }
        else
        {
          char v66 = v38;
          ByteBuffer._setBytes(_:at:)((uint64_t)v60, (uint64_t)v59, v28);
          Swift::UInt32 v28 = HIDWORD(v69) + v45;
          if (__CFADD__(HIDWORD(v69), v45)) {
            goto LABEL_50;
          }
          uint64_t v18 = v34;
        }
        HIDWORD(v69) = v28;
        uint64_t v32 = v5;
        if (v5 == v6)
        {
          uint64_t result = swift_release_n();
          uint64_t v26 = v68;
          int v27 = v69;
          int v29 = v70;
          __int16 v30 = v71;
          char v31 = v72;
          goto LABEL_40;
        }
      }
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      swift_once();
    }
    swift_retain();
    uint64_t result = swift_release_n();
LABEL_40:
    NIOIMAPCore2::MailboxName v50 = v58;
    *unint64_t v58 = v26;
    *((_DWORD *)v50 + 2) = v27;
    *((_DWORD *)v50 + 3) = v28;
    *((_DWORD *)v50 + 4) = v29;
    *((_WORD *)v50 + 10) = v30;
    *((unsigned char *)v50 + 22) = v31;
  }
  else
  {
    int v46 = v58;
    *unint64_t v58 = v24;
    int v47 = v61;
    unint64_t v48 = HIWORD(v61);
    unint64_t v49 = HIDWORD(v61);
    v46[1] = v5;
    *((_DWORD *)v46 + 4) = v47;
    *((_WORD *)v46 + 10) = v49;
    *((unsigned char *)v46 + 22) = v48;
  }
  return result;
}

double sub_10031470C@<D0>(uint64_t a1@<X8>)
{
  sub_10031E1C0();
  if (!v1)
  {
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(void *)(a1 + 32) = 0x8000000000000000;
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
  }
  return result;
}

void sub_100314774(void *a1@<X8>)
{
  sub_10031E1C0();
  if (!v1)
  {
    *a1 = 1;
    a1[1] = 0;
    a1[2] = 0;
    a1[3] = 0;
    a1[4] = 0x8000000000000000;
    a1[5] = 0;
    a1[6] = 0;
    a1[7] = 0;
  }
}

double sub_1003147DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  swift_retain();
  uint64_t v17 = sub_100328F88(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    *(void *)a8 = v17;
    double result = 0.0;
    *(_OWORD *)(a8 + 8) = 0u;
    *(_OWORD *)(a8 + 24) = 0u;
    *(_OWORD *)(a8 + 40) = 0u;
    *(void *)(a8 + 56) = 0;
  }
  return result;
}

double sub_100314874@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  swift_retain();
  sub_100324144(v22, a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    uint64_t v18 = v25;
    uint64_t v19 = v23 | 0x4000000000000000;
    double result = *(double *)v22;
    long long v20 = v22[1];
    long long v21 = v24;
    *(_OWORD *)a8 = v22[0];
    *(_OWORD *)(a8 + 16) = v20;
    *(void *)(a8 + 32) = v19;
    *(_OWORD *)(a8 + 40) = v21;
    *(void *)(a8 + 56) = v18;
  }
  return result;
}

_OWORD *sub_100314924@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _OWORD *a3@<X8>)
{
  return sub_10031497C(a1, a2, (void *(*)(long long *__return_ptr, uint64_t, void, void))sub_10031470C, a3);
}

_OWORD *sub_100314950@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _OWORD *a3@<X8>)
{
  return sub_10031497C(a1, a2, (void *(*)(long long *__return_ptr, uint64_t, void, void))sub_100314774, a3);
}

_OWORD *sub_10031497C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *(*a3)(long long *__return_ptr, uint64_t, void, void)@<X2>, _OWORD *a4@<X8>)
{
  double result = a3(v7, a1, *a2, a2[1]);
  if (!v4) {
    return sub_10027B4F8(v7, a4);
  }
  return result;
}

uint64_t sub_1003149D4()
{
  return 0;
}

uint64_t sub_100314A0C()
{
  return 1;
}

uint64_t sub_100314A44()
{
  return 2;
}

uint64_t sub_100314A88@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1003149D4();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_100314AB4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100314A0C();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_100314AE0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100314A44();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_100314B0C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (__OFADD__(a2, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v4 = a3;
  if (a2 + 1 >= a3)
  {
    sub_1002DB5BC();
    swift_allocError();
    uint64_t *v11 = v4;
    goto LABEL_6;
  }
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  int v8 = *((_DWORD *)a1 + 4);
  __int16 v9 = *((_WORD *)a1 + 10);
  char v10 = *((unsigned char *)a1 + 22);
  swift_retain();
  sub_10031E1C0();
  if (!v3)
  {
    if (qword_10070FD50 == -1)
    {
LABEL_9:
      uint64_t v4 = static SectionSpecifier.complete;
      uint64_t v13 = unk_100761F90;
      unsigned __int8 v14 = byte_100761F98;
      swift_bridgeObjectRetain();
      sub_10013B5CC(v13, v14);
      swift_release();
      return v4;
    }
LABEL_11:
    swift_once();
    goto LABEL_9;
  }
  swift_release();
  *a1 = v6;
  a1[1] = v7;
  *((_DWORD *)a1 + 4) = v8;
  *((_WORD *)a1 + 10) = v9;
  *((unsigned char *)a1 + 22) = v10;
LABEL_6:
  swift_willThrow();
  return v4;
}

uint64_t sub_100314C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7)
  {
    a5 = sub_100314D64(a1, a2, a3, a4, a5, a6, a7);
    sub_10031E1C0();
  }
  return a5;
}

uint64_t sub_100314D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1002E1F24(a1, a2, a3, a4, a5, a6, a7);
  sub_1002E1F6C();
  sub_1002E1DF0();
  sub_10031D0D8();
  sub_10033CD68();
  return sub_10031D354(v7);
}

void sub_100314E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1002F2480();
  a19 = v21;
  a20 = v22;
  uint64_t v54 = v23;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  char v33 = v32;
  uint64_t v35 = v34;
  sub_10000566C(&qword_10070FEB0);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1005F6670;
  uint64_t v37 = (uint64_t)sub_10032D3F0(v33, v31, v29, 0);
  if (!v20)
  {
    if ((v37 & 0x8000000000000000) == 0)
    {
      sub_10031DD2C(v37, v38, v39, v40, v41, v42, v43, v44, v53);
      *(void *)(v36 + 32) = v45;
      a10 = v36;
      __chkstk_darwin(v45);
      sub_10031D5F0();
      *(void *)(v46 - 32) = v47;
      *(void *)(v46 - 24) = v27;
      *(void *)(v46 - 16) = v25;
      *(void *)(v46 - 8) = v54;
      sub_10031EA88((uint64_t)v33, v31, v29, (uint64_t)sub_10031C3F0, v48, (uint64_t)&a10);
      sub_10031DB1C();
      *uint64_t v35 = a10;
      goto LABEL_3;
    }
    sub_100296090();
    sub_10020DD10();
    sub_10031DED4();
    sub_10031D6A0(v49, v50);
    *(void *)(v51 + 16) = v52;
    *(void *)(v51 + 24) = 0x80000001005E63C0;
    sub_1002E9998(v51, 167);
  }
  *(void *)(v36 + 16) = 0;
  swift_release();
LABEL_3:
  sub_10031D590();
  sub_1002F2468();
}

void sub_100314F80(void *a1@<X8>)
{
  swift_retain();
  sub_100323520();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_100315004()
{
  sub_10031D99C();
  sub_10031D174();
  sub_10031D0B8();
  sub_100323B98();
  sub_10031D354(v0);
  sub_10031D968();
}

uint64_t sub_100315044()
{
  sub_10031D1C8();
  sub_10000566C(&qword_1007123C8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6720;
  *(void *)(inited + 32) = sub_1003154D4;
  *(void *)(inited + 40) = 0;
  uint64_t v2 = (void *)sub_1002E1F90();
  sub_10030750C(v2);
  uint64_t v3 = sub_1002E8414();
  *(void *)(v3 + 16) = sub_10031C53C;
  *(void *)(v3 + 24) = v0;
  *(void *)(inited + 48) = sub_10031C558;
  *(void *)(inited + 56) = v3;
  uint64_t v4 = (void *)sub_1002E1F90();
  sub_10030750C(v4);
  uint64_t v5 = sub_1002E8414();
  *(void *)(v5 + 16) = sub_10031C574;
  *(void *)(v5 + 24) = v0;
  *(void *)(inited + 64) = sub_10031C558;
  *(void *)(inited + 72) = v5;
  *(void *)(inited + 80) = sub_100315500;
  *(void *)(inited + 88) = 0;
  *(void *)(inited + 96) = sub_10031552C;
  *(void *)(inited + 104) = 0;
  *(void *)(inited + 112) = sub_100315558;
  *(void *)(inited + 120) = 0;
  swift_retain_n();
  uint64_t v6 = sub_10031D1A4();
  uint64_t v7 = sub_10033FC0C(v6);
  sub_10031DEE0();
  sub_10034A020();
  return v7;
}

void sub_1003151CC()
{
  sub_1002F2480();
  sub_10031DE1C();
  swift_retain();
  uint64_t v1 = sub_1002DC944();
  uint64_t v2 = sub_100323F9C(v1);
  if (v0) {
    goto LABEL_3;
  }
  uint64_t v3 = v2;
  swift_retain();
  sub_1002DC944();
  sub_10032C9CC();
  char v6 = v5;
  BOOL v7 = v5 == 255;
  uint64_t v8 = v5 == 255 ? 0 : v4;
  unsigned __int8 v9 = v7 ? 2 : v6;
  if (*(void *)(v3 + 16)) {
    goto LABEL_3;
  }
  if (v9 < 2u || v8 != 2) {
LABEL_3:
  }
    sub_1002F2468();
  else {
    __break(1u);
  }
}

uint64_t sub_10031528C()
{
  return 2;
}

uint64_t sub_1003152CC()
{
  return 1;
}

void sub_100315310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7)
  {
    swift_retain();
    sub_100320BCC(a1, a2, a3, a4, a5, a6, a7);
  }
}

void sub_1003153D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7)
  {
    swift_retain();
    sub_100320BCC(a1, a2, a3, a4, a5, a6, a7);
  }
}

uint64_t sub_100315488()
{
  return 3;
}

uint64_t sub_1003154C8()
{
  return 0;
}

uint64_t sub_1003154D4()
{
  return sub_1003193A0();
}

uint64_t sub_100315500()
{
  return sub_1003193A0();
}

uint64_t sub_10031552C()
{
  return sub_1003193A0();
}

uint64_t sub_100315558()
{
  return sub_1003193A0();
}

void sub_100315584()
{
}

void sub_1003155BC()
{
  sub_1002ECE98();
  sub_10031DD80();
  if (!v0)
  {
    type metadata accessor for SelectParameter(0);
    swift_storeEnumTagMultiPayload();
  }
}

void sub_100315620()
{
  sub_1002F2480();
  uint64_t v51 = v3;
  uint64_t v52 = v4;
  uint64_t v49 = v6;
  uint64_t v50 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = sub_10031DDF8();
  uint64_t v12 = type metadata accessor for QResyncParameter(v11);
  sub_1001F3BBC();
  __chkstk_darwin(v13);
  sub_100208054();
  uint64_t v48 = v14;
  uint64_t v15 = sub_10000566C(&qword_10070FE50);
  uint64_t v16 = sub_100224550(v15);
  __chkstk_darwin(v16);
  sub_100224A54();
  uint64_t v19 = v17 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v45 - v21;
  uint64_t v23 = sub_10000566C(&qword_10070FE58);
  uint64_t v24 = sub_100224550(v23);
  __chkstk_darwin(v24);
  sub_100224A54();
  uint64_t v27 = v25 - v26;
  __chkstk_darwin(v28);
  sub_10031DD1C();
  sub_10031DF80();
  if (!v1)
  {
    uint64_t v29 = (uint64_t *)sub_10031D938();
    int v47 = sub_100307D88(v29, v30, v31);
    sub_10031E2BC(v0, v10, v8);
    uint64_t v32 = sub_10031D938();
    uint64_t v35 = sub_100307618(v32, v33, v34);
    uint64_t v36 = v51;
    uint64_t v46 = v35;
    swift_retain();
    uint64_t v37 = sub_10031D7A8();
    sub_10032CA94(v37);
    if (!v36)
    {
      uint64_t v38 = v51;
      swift_retain();
      uint64_t v39 = sub_10031D7A8();
      sub_10032CBF4(v39);
      if (v38)
      {
        sub_1001F3A28(v2, &qword_10070FE58);
      }
      else
      {
        sub_10031D408();
        sub_10031DF80();
        sub_10031CD18(v2, v27, &qword_10070FE58);
        sub_10031CD18((uint64_t)v22, v19, &qword_10070FE50);
        uint64_t v40 = v48;
        uint64_t v41 = v48 + *(int *)(v12 + 24);
        uint64_t v42 = sub_10000566C(&qword_10070FD90);
        storeEnumTagSinglePayload for ClientCommand(v41, 1, 1, v42);
        uint64_t v43 = v40 + *(int *)(v12 + 28);
        uint64_t matched = type metadata accessor for SequenceMatchData();
        storeEnumTagSinglePayload for ClientCommand(v43, 1, 1, matched);
        *(_DWORD *)uint64_t v40 = v47;
        *(void *)(v40 + 8) = v46;
        sub_10031C8E0(v27, v41, &qword_10070FE58);
        sub_10031C8E0(v19, v43, &qword_10070FE50);
        sub_10031C934(v40, v49);
        sub_1001F3A28((uint64_t)v22, &qword_10070FE50);
        sub_1001F3A28(v2, &qword_10070FE58);
        type metadata accessor for SelectParameter(0);
        swift_storeEnumTagMultiPayload();
      }
    }
  }
  sub_1002F2468();
}

void sub_100315948()
{
  sub_10031D1E8();
  uint64_t v65 = v1;
  uint64_t v66 = v2;
  uint64_t v61 = v3;
  uint64_t v62 = v4;
  uint64_t v58 = v6;
  uint64_t v60 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v56 = v13;
  uint64_t v14 = sub_10000566C(&qword_1007122C8);
  uint64_t v15 = sub_100224550(v14);
  __chkstk_darwin(v15);
  sub_1001F40C0();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = sub_10000566C(&qword_10070FE28);
  sub_1001F3BBC();
  __chkstk_darwin(v20);
  sub_1001F40C0();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = sub_10000566C(&qword_10070FE48);
  sub_1001F3BBC();
  __chkstk_darwin(v25);
  sub_1001F40C0();
  uint64_t v28 = v27 - v26;
  sub_10031E1C0();
  if (v0) {
    goto LABEL_6;
  }
  uint64_t v52 = v19;
  uint64_t v63 = 0;
  *(void *)&long long v64 = _swiftEmptyArrayStorage;
  *((void *)&v64 + 1) = _swiftEmptyArrayStorage;
  uint64_t v29 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v29 >= v8)
    {
      sub_1002DB5BC();
      uint64_t v38 = sub_10020DD10();
      sub_10031DEC8(v38, v39);
      swift_willThrow();
    }
    else
    {
      swift_retain();
      sub_10030B600(v12, v29, v8, v30, v31, v32, v33, v34, v44, v45, v47, v48, v49, v10, v8, v52, v18, v28, v56, v58);
      uint64_t v46 = v35;
      uint64_t v37 = v36;
      swift_retain();
      sub_10032B6F0(v12, v29, v51, v60, v61, v59, v62);
      uint64_t v40 = (uint64_t)v55 + *(int *)(v24 + 52);
      sub_1002ECC20(v23, v40);
      swift_release();
      *uint64_t v55 = v46;
      v55[1] = v37;
      sub_10031CD18(v40, v54, &qword_10070FE28);
      storeEnumTagSinglePayload for ClientCommand(v54, 0, 1, v53);
      swift_bridgeObjectRetain();
      sub_1002EA508();
      __chkstk_darwin(v41);
      sub_10031D5F0();
      *(void *)(v42 - 32) = v60;
      *(void *)(v42 - 24) = v61;
      *(void *)(v42 - 16) = v59;
      *(void *)(v42 - 8) = v62;
      sub_10031EFB4(v12, v50, v51, (uint64_t)sub_10031C988, v43, (uint64_t)&v63);
      sub_10031E1C0();
      sub_1001F3A28((uint64_t)v55, &qword_10070FE48);
      *(void *)uint64_t v57 = v63;
      *(_OWORD *)(v57 + 8) = v64;
    }
LABEL_6:
    sub_10031D59C();
    return;
  }
  __break(1u);
}

void sub_100315D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void (*a21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_1002F2480();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_10031D798();
  sub_10031E2BC(v33, v34, v35);
  if (!v21) {
    a21(v24, v23, v22, v32, v30, v28, v26);
  }
  sub_1002F2468();
}

void sub_100315D88()
{
  sub_1002F2480();
  sub_1002F2320();
  sub_100300E48();
  if (!v1)
  {
    uint64_t v23 = v0;
    sub_10000566C(&qword_100710728);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1005F6670;
    uint64_t v3 = sub_1002F3294();
    uint64_t v6 = sub_10030A774(v3, v4, v5);
    sub_10031DD2C(v6, v7, v8, v9, v10, v11, v12, v13, v22);
    *(unsigned char *)(v2 + 32) = v14;
    sub_10031DB28();
    __chkstk_darwin(v15);
    sub_10031D25C();
    uint64_t v16 = sub_1002F3294();
    sub_10031E828(v16, v17, v18, v19, v20, v21);
    sub_10031D070();
    *uint64_t v23 = sub_10031DB34();
  }
  sub_10031D590();
  sub_1002F2468();
}

void sub_100315EA0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  sub_10031E2BC(a1, a2, a3);
  if (!v4) {
    *a4 = sub_10030A774(a1, a2, a3);
  }
}

void sub_100315EF4()
{
  sub_1002F2480();
  sub_1002F2320();
  sub_10031E2BC(v2, v3, v4);
  if (!v1)
  {
    sub_10031E1C0();
    uint64_t v19 = v0;
    sub_10000566C(&qword_100710710);
    uint64_t v5 = type metadata accessor for StoreModifier();
    sub_10031D0A0(v5);
    uint64_t v6 = swift_allocObject();
    uint64_t v20 = &v19;
    *(_OWORD *)(v6 + 16) = xmmword_1005F6670;
    __chkstk_darwin(v6);
    sub_10031D4C4();
    __chkstk_darwin(v7);
    sub_10031D6E8();
    v18[0] = 0x80000001005E63C0;
    v18[1] = 2197;
    sub_10031D508();
    sub_10033CBF4(v8, v9, v10);
    sub_10031DE9C();
    uint64_t v20 = (uint64_t **)v18;
    sub_10031DB28();
    __chkstk_darwin(v11);
    sub_10031D25C();
    uint64_t v12 = sub_1002F3294();
    sub_10031F098(v12, v13, v14, v15, v16, v17);
    sub_10031D070();
    *uint64_t v19 = sub_10031DB34();
  }
  sub_10031D590();
  sub_1002F2468();
}

void sub_1003160E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1002F2480();
  a19 = v21;
  a20 = v22;
  sub_10031E2BC(v23, v24, v25);
  if (!v20)
  {
    a10 = &a9;
    __chkstk_darwin(v26);
    sub_10031D4C4();
    __chkstk_darwin(v27);
    sub_10031D6E8();
    sub_10031D2A8();
    v30(v28, v29);
  }
  sub_1002F2468();
}

uint64_t sub_1003161B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  swift_retain();
  uint64_t result = sub_100326A40(a1, a2, a3, a4, a5, a6, a7);
  if (!v8)
  {
    *a8 = result;
    type metadata accessor for StoreModifier();
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

void sub_10031625C()
{
  sub_10031D1E8();
  uint64_t v46 = v3;
  uint64_t v48 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v44 = v16;
  uint64_t v17 = sub_10000566C(&qword_10070FE28);
  uint64_t v18 = sub_100224550(v17);
  __chkstk_darwin(v18);
  sub_100254960();
  uint64_t v19 = v13 + 1;
  if (!__OFADD__(v13, 1))
  {
    if (v19 >= v11)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *uint64_t v32 = v11;
    }
    else
    {
      uint64_t v38 = v7;
      uint64_t v40 = v9;
      uint64_t v42 = v5;
      uint64_t v20 = *(void *)v15;
      uint64_t v21 = *(void *)(v15 + 8);
      int v22 = *(_DWORD *)(v15 + 16);
      __int16 v23 = *(_WORD *)(v15 + 20);
      char v24 = *(unsigned char *)(v15 + 22);
      swift_retain();
      sub_10030B600(v15, v19, v11, v25, v26, v27, v28, v29, v34, v36, v38, v40, v42, v44, v46, v48, v50, v51, v52, v53);
      if (!v0)
      {
        uint64_t v35 = v30;
        uint64_t v37 = v31;
        swift_retain();
        sub_10032B6F0(v15, v19, v11, v41, v39, v43, v49);
        uint64_t v33 = sub_10000566C(&qword_10070FE48);
        sub_1002ECC20(v1, (uint64_t)v45 + *(int *)(v33 + 52));
        swift_release();
        *uint64_t v45 = v35;
        v45[1] = v37;
        v47(0);
        swift_storeEnumTagMultiPayload();
LABEL_8:
        sub_10031D59C();
        return;
      }
      swift_release();
      *(void *)uint64_t v15 = v20;
      *(void *)(v15 + 8) = v21;
      *(_DWORD *)(v15 + 16) = v22;
      *(_WORD *)(v15 + 20) = v23;
      *(unsigned char *)(v15 + 22) = v24;
    }
    swift_willThrow();
    goto LABEL_8;
  }
  __break(1u);
}

void sub_10031642C(unsigned char *a1@<X8>)
{
  sub_10031E1C0();
  if (!v1) {
    *a1 = 0;
  }
}

void sub_100316474(unsigned char *a1@<X8>)
{
  sub_10031E1C0();
  if (!v1) {
    *a1 = 1;
  }
}

void sub_1003164C0(unsigned char *a1@<X8>)
{
  sub_10031E1C0();
  if (!v1) {
    *a1 = 2;
  }
}

uint64_t sub_10031650C()
{
  sub_1002ECE98();
  sub_10031DD80();
  if (v0)
  {
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      char v1 = 0;
    }
    else
    {
      swift_errorRelease();
    }
  }
  else
  {
    char v1 = 1;
  }
  return v1 & 1;
}

void sub_1003165D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1002F2480();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  sub_10031D600();
  uint64_t v40 = v22;
  sub_10031DC4C();
  if (!v11)
  {
    char v24 = v23;
    sub_10031D610();
    sub_10031DF30();
    int v39 = sub_10031650C();
    sub_10031D610();
    sub_10000566C(&qword_1007106B8);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1005F6670;
    uint64_t v37 = (uint64_t)&v37;
    uint64_t v25 = sub_10030B2C4(v13, v12, v10, v21, v19, v17, v15);
    uint64_t v28 = sub_10031D654(v25, v26, v27);
    __chkstk_darwin(v28);
    sub_10031D5F0();
    *(void *)(v29 - 32) = v21;
    *(void *)(v29 - 24) = v19;
    *(void *)(v29 - 16) = v17;
    *(void *)(v29 - 8) = v15;
    uint64_t v30 = sub_10031DF30();
    sub_10031EB0C(v30, v31, v32, v33, v34, v35);
    sub_10031D408();
    sub_10031E1C0();
    uint64_t v36 = v40;
    *uint64_t v40 = v24;
    v36[1] = v39 & 1;
    *((void *)v36 + 1) = a10;
  }
  sub_1002F2468();
}

uint64_t sub_100316840()
{
  sub_10000566C(&qword_1007106B0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1005F6670;
  sub_10030DFB0();
  if (v0)
  {
    *(void *)(v1 + 16) = 0;
    return swift_release();
  }
  else
  {
    v5[1] = v5;
    *(void *)(v1 + 32) = v2;
    *(void *)(v1 + 40) = v3;
    uint64_t v6 = v1;
    __chkstk_darwin(v2);
    sub_10031EC50();
    return v6;
  }
}

void sub_100316998()
{
  sub_1002F2480();
  sub_10031D74C(v3, v4, v5);
  if (!v2)
  {
    uint64_t v6 = sub_1002DC944();
    *uint64_t v0 = v1(v6);
    v0[1] = v7;
  }
  sub_1002F2468();
}

void sub_1003169E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031D600();
  uint64_t v32 = v12;
  sub_10031DC4C();
  char v31 = v13;
  if (!v7)
  {
    sub_10031D680();
    sub_10031E1C0();
    sub_10031DF44();
    char v30 = sub_10031650C();
    uint64_t v14 = sub_10031DF44();
    sub_10031E2BC(v14, v15, v16);
    sub_10000566C(&qword_1007123D8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005F6690;
    uint64_t v28 = (void *)sub_1002E1F90();
    v28[2] = a4;
    void v28[3] = a5;
    v28[4] = a6;
    v28[5] = a7;
    uint64_t v17 = sub_1002E8414();
    *(void *)(v17 + 16) = sub_10031C738;
    *(void *)(v17 + 24) = v28;
    *(void *)(inited + 32) = sub_1002F1994;
    *(void *)(inited + 40) = v17;
    uint64_t v18 = (void *)sub_1002E1F90();
    void v18[2] = a4;
    v18[3] = a5;
    v18[4] = a6;
    v18[5] = a7;
    uint64_t v19 = v18;
    uint64_t v20 = sub_1002E8414();
    *(void *)(v20 + 16) = sub_10031C754;
    *(void *)(v20 + 24) = v19;
    *(void *)(inited + 48) = sub_1002F1994;
    *(void *)(inited + 56) = v20;
    sub_1002E1F54();
    sub_10031D6B4();
    uint64_t v27 = sub_10033FDDC(v21, v22, v23, v24, v25, v26, 2266);
    swift_setDeallocating();
    sub_10034A020();
    *(unsigned char *)uint64_t v32 = v31;
    *(unsigned char *)(v32 + 1) = v30 & 1;
    *(void *)(v32 + 8) = v27;
  }
}

uint64_t sub_100316C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100320050(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_100316CF8()
{
  sub_10031D274();
  uint64_t v2 = sub_100300D44();
  uint64_t result = sub_1003291DC(v2, v3, v4, v5, v6, v7, v8);
  if (!v1)
  {
    *uint64_t v0 = result & 0x1FF | 0x8000000000000000;
    v0[1] = v10;
  }
  return result;
}

uint64_t sub_100316D48()
{
  sub_10031D274();
  uint64_t v2 = sub_100300D44();
  uint64_t result = sub_100329208(v2, v3, v4, v5, v6, v7, v8);
  if (!v1)
  {
    *uint64_t v0 = result & 0x1FF;
    v0[1] = v10;
  }
  return result;
}

void sub_100316D94()
{
}

void sub_100316DC0()
{
}

void sub_100316DD8()
{
  sub_10031DE28();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    if (v1 + 1 >= v2)
    {
      sub_1002DB5BC();
      uint64_t v6 = sub_10020DD10();
      sub_10031DB40(v6, v7);
      goto LABEL_6;
    }
    uint64_t v4 = v3;
    sub_10031D3DC();
    uint64_t v5 = sub_10031D9EC();
    v4(v5);
    if (v0)
    {
      swift_release();
      sub_10031D780();
LABEL_6:
      swift_willThrow();
      return;
    }
    uint64_t v8 = swift_release();
    sub_10031D470(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  }
}

void sub_100316E90()
{
  sub_10031D99C();
  sub_10031D174();
  uint64_t v0 = sub_10031D0B8();
  sub_10031F6C0(v0, v1, v2, v3, v4, v5, v6);
  sub_10031D354(v7 & 0xFFFFFFFFFFFFFFLL);
  sub_10031D968();
}

void sub_100316ED8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v50 = a7;
  uint64_t v16 = type metadata accessor for ParameterValue();
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10030B600(a1, a2, a3, v19, v20, v21, v22, v23, v43, (uint64_t)v44, (uint64_t)v45, v46, v47, v48, v49, v50, v51, v52, v53,
    v54);
  if (!v8)
  {
    uint64_t v47 = a6;
    uint64_t v48 = a1;
    uint64_t v45 = v18;
    uint64_t v46 = a5;
    uint64_t v44 = (void *)a8;
    uint64_t v26 = v24;
    uint64_t v27 = v25;
    if (sub_1005E1CB0() == 0x6574616E65746163 && v28 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v43 = v27;
      char v30 = sub_1005E3290();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0)
      {
        sub_10031E2BC(v48, a2, a3);
        uint64_t v33 = __chkstk_darwin(v32);
        uint64_t v34 = v46;
        *(&v43 - 4) = a4;
        *(&v43 - 3) = v34;
        __chkstk_darwin(v33);
        *(&v43 - 4) = a4;
        *(&v43 - 3) = v35;
        unint64_t v41 = 0x80000001005E63C0;
        uint64_t v42 = 2437;
        uint64_t v36 = (uint64_t)v45;
        sub_10033CBF4((uint64_t)sub_10030735C, v37, (uint64_t)sub_100307374);
        uint64_t v38 = sub_10000566C(&qword_10070FE78);
        int v39 = v44;
        sub_10031C934(v36, (uint64_t)v44 + *(int *)(v38 + 52));
        uint64_t v40 = v43;
        *int v39 = v26;
        v39[1] = v40;
        return;
      }
    }
    swift_bridgeObjectRelease();
    sub_100296090();
    swift_allocError();
    *char v31 = 0xD000000000000012;
    v31[1] = 0x80000001005E6C80;
    v31[2] = 0xD000000000000020;
    v31[3] = 0x80000001005E63C0;
    v31[4] = 2330;
    swift_willThrow();
  }
}

uint64_t sub_1003171D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_10032CEB0(a1);
  if (v4) {
    return result;
  }
  uint64_t result = sub_100345B30(result);
  if ((result & 1) == 0)
  {
    sub_1005E2C80(26);
    uint64_t v17 = sub_1005E3230();
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    v36._object = (void *)0x80000001005E6AB0;
    v36._countAndFlagsBits = 0x1000000000000018;
    sub_1005E1E30(v36);
    sub_100296090();
    swift_allocError();
    *uint64_t v20 = v17;
    v20[1] = v19;
    v20[2] = 0xD000000000000020;
    v20[3] = 0x80000001005E63C0;
    v20[4] = 2345;
    return swift_willThrow();
  }
  if (__OFADD__(a2, 1))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    return result;
  }
  if (a2 + 1 >= a3)
  {
    sub_1002DB5BC();
    swift_allocError();
    *uint64_t v21 = a3;
    return swift_willThrow();
  }
  uint64_t v10 = *(unsigned int *)(a1 + 8);
  unint64_t v11 = *(unsigned int *)(a1 + 12);
  if (v11 < v10) {
    goto LABEL_29;
  }
  uint64_t v35 = *(unsigned __int16 *)(a1 + 20);
  uint64_t v31 = *(unsigned __int8 *)(a1 + 22);
  uint64_t v12 = v31 | (v35 << 8);
  int v32 = *(_DWORD *)(a1 + 16);
  if (v32 - (int)v12 < v11) {
    goto LABEL_30;
  }
  uint64_t v13 = *(void *)a1;
  if (v11 == v10)
  {
LABEL_19:
    sub_1002E1490();
    swift_allocError();
    swift_retain();
    swift_willThrow();
    swift_release();
    *(void *)a1 = v13;
    *(_DWORD *)(a1 + 8) = v10;
    *(_DWORD *)(a1 + 12) = v11;
    *(_DWORD *)(a1 + 16) = v32;
    *(_WORD *)(a1 + 20) = v35;
    *(unsigned char *)(a1 + 22) = v31;
    return swift_willThrow();
  }
  uint64_t result = swift_beginAccess();
  unint64_t v14 = 0;
  while (1)
  {
    if (v10 + v14 >= v11)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    if (v14 >= (v11 - v10)) {
      goto LABEL_27;
    }
    int v15 = *(unsigned __int8 *)(*(void *)(v13 + 24) + v12 + v10 + v14);
    if ((v15 - 59) < 0xFFFFFFF5)
    {
      BOOL v16 = (v15 - 45) > 0x32 || ((1 << (v15 - 45)) & 0x4000000000003) == 0;
      if (v16 && (v15 & 0xFFFFFFDF) - 91 <= 0xFFFFFFE5) {
        break;
      }
    }
    ++v14;
    if (!(v10 - v11 + v14)) {
      goto LABEL_19;
    }
  }
  swift_retain();
  uint64_t result = ByteBuffer.readSlice(length:)(v14);
  if (!result) {
    goto LABEL_31;
  }
  uint64_t v24 = result;
  unint64_t v25 = v22;
  uint64_t v26 = v23;
  swift_release();
  uint64_t v27 = sub_10031E368(v24, v25, v26 & 0xFFFFFFFFFFFFFFLL, 0xD000000000000020, 0x80000001005E63C0, 2351);
  uint64_t v29 = v28;
  uint64_t v33 = sub_1005E1D70();
  uint64_t v34 = v30;
  swift_bridgeObjectRetain();
  v37._countAndFlagsBits = v27;
  v37._object = v29;
  sub_1005E1E30(v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  *a4 = v33;
  a4[1] = v34;
  return result;
}

void sub_10031754C()
{
  sub_10031D1E8();
  uint64_t v66 = v1;
  uint64_t v67 = v4;
  uint64_t v56 = v5;
  uint64_t v57 = v6;
  uint64_t v54 = v7;
  uint64_t v55 = v8;
  uint64_t v53 = v9;
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    uint64_t v12 = v3;
    if (v11 >= v3)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *uint64_t v19 = v12;
    }
    else
    {
      uint64_t v13 = v2;
      uint64_t v14 = *(void *)v2;
      uint64_t v15 = *(void *)(v2 + 8);
      int v16 = *(_DWORD *)(v2 + 16);
      __int16 v17 = *(_WORD *)(v2 + 20);
      char v18 = *(unsigned char *)(v2 + 22);
      sub_1003011D0();
      sub_100337E64();
      if (!v0)
      {
        uint64_t v47 = v11 + 1;
        uint64_t v48 = v11 + 2;
        uint64_t v45 = v11;
        while (1)
        {
          uint64_t v20 = *(void *)v13;
          int v21 = *(_DWORD *)(v13 + 8);
          int v49 = *(_DWORD *)(v13 + 16);
          int v50 = *(_DWORD *)(v13 + 12);
          __int16 v51 = *(_WORD *)(v13 + 20);
          char v52 = *(unsigned char *)(v13 + 22);
          unint64_t v22 = (void *)sub_1002E1F90();
          _OWORD v22[2] = v54;
          v22[3] = v55;
          v22[4] = v56;
          unsigned char v22[5] = v57;
          __chkstk_darwin(v22);
          swift_retain_n();
          swift_retain();
          sub_10031D2A8();
          uint64_t v27 = sub_10033C780(v23, v24, v25, v26);
          uint64_t v30 = v27;
          unsigned int v31 = v28;
          uint64_t v32 = v29;
          uint64_t v46 = v20;
          unint64_t v33 = HIDWORD(v28);
          swift_release();
          if (v33 < v31) {
            goto LABEL_22;
          }
          if (v32 - (BYTE6(v32) | (WORD2(v32) << 8)) < v33) {
            goto LABEL_23;
          }
          uint64_t v58 = v30;
          unsigned int v59 = v31;
          int v60 = v33;
          int v61 = v32;
          __int16 v62 = WORD2(v32);
          char v63 = BYTE6(v32);
          uint64_t v64 = v31;
          unint64_t v65 = v33;
          swift_retain();
          uint64_t v34 = sub_1002934A8((uint64_t)&v58);
          if (v35)
          {
            uint64_t v36 = v34;
            uint64_t v37 = v35;
            sub_1002D2194();
            uint64_t v38 = *(void *)(*(void *)v53 + 16);
            sub_1002D242C(v38);
            uint64_t v39 = *(void *)v53;
            *(void *)(v39 + 16) = v38 + 1;
            uint64_t v40 = v39 + 16 * v38;
            *(void *)(v40 + 32) = v36;
            *(void *)(v40 + 40) = v37;
            *(void *)uint64_t v53 = v39;
            sub_10031754C(v53, v13, v45, v12, v54, v55, v56, v57);
            swift_release_n();
          }
          else
          {
            sub_100296090();
            sub_10020DD10();
            strcpy(v42, "Invalid UTF8");
            v42[13] = 0;
            *((_WORD *)v42 + 7) = -5120;
            *((void *)v42 + 2) = 0xD000000000000020;
            *((void *)v42 + 3) = 0x80000001005E63C0;
            *((void *)v42 + 4) = 2385;
            swift_willThrow();
            swift_release();
            swift_release();
            *(void *)uint64_t v13 = v46;
            *(_DWORD *)(v13 + 8) = v21;
            *(_DWORD *)(v13 + 12) = v50;
            *(_DWORD *)(v13 + 16) = v49;
            *(_WORD *)(v13 + 20) = v51;
            *(unsigned char *)(v13 + 22) = v52;
            if (v47 >= v12)
            {
              sub_1002DB5BC();
              sub_10020DD10();
              *uint64_t v43 = v12;
              swift_retain();
LABEL_19:
              swift_willThrow();
              swift_errorRelease();
              swift_release();
              swift_release();
              sub_10031DD04();
              goto LABEL_20;
            }
            if (v48 >= v12)
            {
              sub_1002DB5BC();
              sub_10020DD10();
              *uint64_t v44 = v12;
              swift_retain_n();
              swift_willThrow();
              swift_release();
              sub_10031DD04();
              goto LABEL_19;
            }
            swift_retain_n();
            sub_100338020(v13, v48, v12, 0, 0x28uLL, 0xE100000000000000, 0);
            swift_release();
            sub_1002E1F54();
            sub_100317D14(v53, v13, v48, v12, v54, v55, v56, v57);
            swift_release();
            swift_release();
            swift_retain();
            sub_100338020(v13, v48, v12, 0, 0x29uLL, 0xE100000000000000, 0);
            swift_release();
            sub_10031DE3C(v53, v13, v47, v41, v54);
            swift_release_n();
            swift_errorRelease();
          }
          swift_release();
          sub_1003011D0();
          sub_100337E64();
        }
      }
      *(void *)uint64_t v13 = v14;
      *(void *)(v13 + 8) = v15;
      *(_DWORD *)(v13 + 16) = v16;
      *(_WORD *)(v13 + 20) = v17;
      *(unsigned char *)(v13 + 22) = v18;
    }
LABEL_20:
    swift_willThrow();
    swift_errorRelease();
    sub_10031D59C();
  }
}

#error "100317D74: call analysis failed (funcsize=75)"

void sub_100317E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10031D798();
  sub_10031D41C();
  if (!v8)
  {
    swift_retain();
    sub_10031F17C(v11, v10, v9, a4, a5, a6, a7, a8);
    sub_10031D408();
    sub_10031E1C0();
    sub_10031D680();
    sub_10031754C();
  }
}

uint64_t sub_100317F0C()
{
  sub_10031DE28();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)v15;
  uint64_t v18 = *(void *)(v15 + 8);
  __int16 v21 = *(_WORD *)(v15 + 20);
  int v22 = *(_DWORD *)(v15 + 16);
  char v20 = *(unsigned char *)(v15 + 22);
  swift_retain();
  sub_100317D14(v2, v16, v14, v12, v10, v8, v6, v4);
  if (!v0) {
    return swift_release();
  }
  swift_release();
  *(void *)uint64_t v16 = v17;
  *(void *)(v16 + 8) = v18;
  *(_DWORD *)(v16 + 16) = v22;
  *(_WORD *)(v16 + 20) = v21;
  *(unsigned char *)(v16 + 22) = v20;
  swift_retain();
  swift_retain();
  sub_10031F1B0(v16);
  swift_release();
  return swift_errorRelease();
}

uint64_t sub_100318068()
{
  sub_1002E1FA8();
  sub_10031DD70();
  sub_10031D2A8();
  uint64_t result = sub_10033CBF4(v1, v2, v3);
  if (!v0)
  {
    type metadata accessor for ParameterValue();
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

void sub_100318114()
{
  sub_1002F2480();
  uint64_t v2 = v1;
  sub_100300E48();
  if (!v0)
  {
    swift_retain();
    sub_10032B5C0();
    if (v3) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = _swiftEmptyArrayStorage;
    }
    sub_10031E1C0();
    *uint64_t v2 = v4;
    type metadata accessor for ParameterValue();
    swift_storeEnumTagMultiPayload();
  }
  sub_1002F2468();
}

void sub_100318210()
{
  sub_10031D99C();
  sub_10031D734();
  swift_retain();
  uint64_t v1 = sub_10031D0B8();
  sub_10031F17C(v1);
  if (v0) {
    swift_bridgeObjectRelease();
  }
  sub_10031D968();
}

void sub_100318284()
{
  sub_10031D99C();
  sub_10031D174();
  uint64_t v0 = sub_10031D0B8();
  sub_100329314(v0);
  sub_10031D354(v1);
  sub_10031D968();
}

void sub_1003182C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v4 = __OFADD__(a2, 1);
  uint64_t v5 = a2 + 1;
  if (v4)
  {
    __break(1u);
    return;
  }
  if (v5 >= a3)
  {
    sub_1002DB5BC();
    uint64_t v6 = sub_10020DD10();
    sub_10031DEC8(v6, v7);
  }
  else
  {
    sub_100337E64();
    if (!v3) {
      return;
    }
    sub_10031D700();
  }
  swift_willThrow();
}

uint64_t sub_100318370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1002E1F24(a1, a2, a3, a4, a5, a6, a7);
  sub_1002E1F6C();
  sub_1002E1DF0();
  sub_10031D0D8();
  return sub_10033CB54(v7, v8, v9, v10);
}

uint64_t sub_100318404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (v7) {
    return v8;
  }
  sub_10000566C(&qword_100710758);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1005F6670;
  sub_100308D44(a1, a2, a3, a4, a5, a6, a7, v16, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68,
    v69,
    __src[0],
    __src[1],
    __src[2],
    __src[3],
    __src[4],
    __src[5]);
  uint64_t v17 = a7;
  uint64_t v19 = v18;
  uint64_t v20 = a6;
  unsigned int v22 = v21;
  uint64_t v23 = a5;
  unint64_t v25 = v24;
  uint64_t v65 = v23;
  uint64_t v66 = v20;
  uint64_t v67 = v17;
  uint64_t v69 = a3;
  unint64_t v26 = HIDWORD(v21);
  swift_beginAccess();
  v27._rawValue = (void *)sub_1001F9054(*(void *)(v19 + 24) + ((v25 >> 24) & 0xFFFF00 | BYTE6(v25)) + v22, v26 - v22);
  NIOIMAPCore2::MailboxName v72 = MailboxName.init(_:)(v27);
  rawValue = v72.bytes._rawValue;
  LODWORD(v25) = v72._hashValue._value;
  uint64_t result = swift_release();
  *(void *)(v8 + 32) = rawValue;
  *(_DWORD *)(v8 + 40) = v25;
  uint64_t v30 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v31 = v69;
    if (v30 >= v69)
    {
      sub_1002DB5BC();
      uint64_t v54 = swift_allocError();
      *uint64_t v55 = v69;
    }
    else
    {
      uint64_t v61 = a4;
      uint64_t v58 = v8;
      uint64_t v64 = a2;
      uint64_t v32 = a2 + 2;
      uint64_t v33 = *(void *)a1;
      int v34 = *(_DWORD *)(a1 + 8);
      int v35 = *(_DWORD *)(a1 + 12);
      int v36 = *(_DWORD *)(a1 + 16);
      __int16 v37 = *(_WORD *)(a1 + 20);
      char v38 = *(unsigned char *)(a1 + 22);
      if (v30 + 1 < v69)
      {
        uint64_t v59 = v30;
        uint64_t v39 = v58;
        uint64_t v60 = v32;
        do
        {
          uint64_t v68 = v39;
          swift_retain();
          sub_100337E64();
          swift_release();
          uint64_t v40 = (void *)swift_allocObject();
          v40[2] = v61;
          uint64_t v41 = v65;
          uint64_t v42 = v66;
          void v40[3] = v65;
          v40[4] = v42;
          v40[5] = v67;
          __chkstk_darwin(v41);
          *(&v58 - 2) = (uint64_t)sub_10031CDC0;
          *(&v58 - 1) = (uint64_t)v40;
          swift_retain();
          uint64_t v43 = sub_10031F3C0();
          unint64_t v45 = v44;
          unint64_t v47 = v46;
          swift_release();
          swift_beginAccess();
          uint64_t v48 = (void *)sub_1001F9054(*(void *)(v43 + 24) + ((v47 >> 24) & 0xFFFF00 | BYTE6(v47)) + v45, HIDWORD(v45) - v45);
          swift_bridgeObjectRetain();
          char v49 = sub_1002220CC(0x584F424E49, 0xE500000000000000, (uint64_t)v48);
          swift_release();
          if (v49)
          {
            swift_release();
            uint64_t v48 = sub_10028479C(0x584F424E49, 0xE500000000000000);
          }
          sub_1005E3480();
          sub_1005E3400();
          memcpy(__dst, __src, sizeof(__dst));
          Swift::Int v50 = sub_1005E3460();
          swift_release();
          uint64_t v39 = v68;
          unint64_t v51 = *(void *)(v68 + 16);
          if (v51 >= *(void *)(v68 + 24) >> 1)
          {
            sub_100233B74();
            uint64_t v39 = v53;
          }
          *(void *)(v39 + 16) = v51 + 1;
          uint64_t v52 = v39 + 16 * v51;
          *(void *)(v52 + 32) = v48;
          *(_DWORD *)(v52 + 40) = HIDWORD(v50) ^ v50;
          uint64_t v33 = *(void *)a1;
          int v34 = *(_DWORD *)(a1 + 8);
          int v35 = *(_DWORD *)(a1 + 12);
          int v36 = *(_DWORD *)(a1 + 16);
          __int16 v37 = *(_WORD *)(a1 + 20);
          char v38 = *(unsigned char *)(a1 + 22);
          uint64_t v31 = v69;
        }
        while (v60 < v69);
      }
      sub_1002DB5BC();
      uint64_t v54 = swift_allocError();
      *uint64_t v56 = v31;
      swift_retain();
      swift_willThrow();
      swift_release();
      *(void *)a1 = v33;
      *(_DWORD *)(a1 + 8) = v34;
      *(_DWORD *)(a1 + 12) = v35;
      *(_DWORD *)(a1 + 16) = v36;
      *(_WORD *)(a1 + 20) = v37;
      *(unsigned char *)(a1 + 22) = v38;
      uint64_t v8 = v58;
    }
    swift_willThrow();
    __src[12] = v54;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      sub_10031E1C0();
      if (!*(void *)(v8 + 16))
      {
        swift_bridgeObjectRelease();
        sub_100296090();
        swift_allocError();
        *uint64_t v57 = 0xD000000000000035;
        v57[1] = 0x80000001005E6C40;
        v57[2] = 0xD000000000000020;
        v57[3] = 0x80000001005E63C0;
        v57[4] = 2522;
        swift_willThrow();
      }
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
    }
    return v8;
  }
  __break(1u);
  return result;
}

#error "100318C64: call analysis failed (funcsize=100)"

void sub_100318D7C()
{
  sub_10031DBE0();
  sub_10031D1C8();
  sub_10000566C(&qword_1007123E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6A00;
  *(void *)(inited + 32) = sub_1003192C4;
  *(void *)(inited + 40) = 0;
  uint64_t v2 = (void *)sub_1002E1F90();
  sub_10030750C(v2);
  uint64_t v3 = sub_1002E8414();
  *(void *)(v3 + 16) = sub_10031CDF0;
  *(void *)(v3 + 24) = v0;
  *(void *)(inited + 48) = sub_10031CB64;
  *(void *)(inited + 56) = v3;
  *(void *)(inited + 64) = sub_1003192F0;
  *(void *)(inited + 72) = 0;
  *(void *)(inited + 80) = sub_10031931C;
  *(void *)(inited + 88) = 0;
  *(void *)(inited + 96) = sub_100319348;
  *(void *)(inited + 104) = 0;
  *(void *)(inited + 112) = sub_100319374;
  *(void *)(inited + 120) = 0;
  BOOL v4 = (void *)sub_1002E1F90();
  sub_10030750C(v4);
  uint64_t v5 = sub_1002E8414();
  *(void *)(v5 + 16) = sub_10031CE08;
  *(void *)(v5 + 24) = v0;
  *(void *)(inited + 128) = sub_10031CB64;
  *(void *)(inited + 136) = v5;
  uint64_t v6 = (void *)sub_1002E1F90();
  sub_10030750C(v6);
  uint64_t v7 = sub_1002E8414();
  *(void *)(v7 + 16) = sub_10031CE20;
  *(void *)(v7 + 24) = v0;
  *(void *)(inited + 144) = sub_10031CB64;
  *(void *)(inited + 152) = v7;
  swift_retain_n();
  uint64_t v8 = sub_10031D1A4();
  sub_10033FFA8(v8);
  sub_10031DEE0();
  sub_10034A020();
  sub_10031DBC4();
}

uint64_t sub_100318F44()
{
  return 3;
}

uint64_t sub_100318F8C()
{
  return 4;
}

uint64_t sub_100318FD8()
{
  return 0;
}

uint64_t sub_100319020()
{
  return 1;
}

uint64_t sub_100319068()
{
  return 2;
}

void sub_1003190B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7) {
    sub_100318370(a1, a2, a3, a4, a5, a6, a7);
  }
}

void sub_100319160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7) {
    sub_100318370(a1, a2, a3, a4, a5, a6, a7);
  }
}

void sub_100319210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7) {
    sub_100318370(a1, a2, a3, a4, a5, a6, a7);
  }
}

uint64_t sub_1003192C4()
{
  return sub_1003193A0();
}

uint64_t sub_1003192F0()
{
  return sub_1003193A0();
}

uint64_t sub_10031931C()
{
  return sub_1003193A0();
}

uint64_t sub_100319348()
{
  return sub_1003193A0();
}

uint64_t sub_100319374()
{
  return sub_1003193A0();
}

uint64_t sub_1003193A0()
{
  sub_10031DA98();
  uint64_t result = v2();
  if (!v1)
  {
    *(void *)uint64_t v0 = result;
    *(unsigned char *)(v0 + 8) = v4;
  }
  return result;
}

void sub_1003193D4()
{
  sub_10031D1E8();
  uint64_t v74 = v2;
  uint64_t v75 = v3;
  uint64_t v4 = v0;
  uint64_t v56 = v5;
  uint64_t v55 = v6;
  uint64_t v54 = v7;
  uint64_t v53 = v8;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = sub_10000566C(&qword_1007122C8);
  uint64_t v16 = sub_100224550(v15);
  __chkstk_darwin(v16);
  sub_100208054();
  uint64_t v69 = v17;
  uint64_t v68 = sub_10000566C(&qword_10070FE28);
  sub_1001F3BBC();
  __chkstk_darwin(v18);
  sub_100224260();
  uint64_t v67 = sub_10000566C(&qword_10070FE48);
  sub_1001F3BBC();
  __chkstk_darwin(v19);
  sub_100208054();
  uint64_t v66 = v20;
  v73[6] = 0;
  v73[7] = (uint64_t)_swiftEmptyArrayStorage;
  v73[8] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v21 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    if (v21 >= v10)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *unint64_t v44 = v10;
    }
    else
    {
      uint64_t v22 = v12 + 2;
      uint64_t v23 = *(void *)v14;
      int v24 = *(_DWORD *)(v14 + 8);
      int v25 = *(_DWORD *)(v14 + 12);
      int v26 = *(_DWORD *)(v14 + 16);
      int v27 = *(unsigned __int16 *)(v14 + 20);
      int v64 = *(unsigned __int8 *)(v14 + 22);
      int v65 = v27;
      if (v21 + 1 < v10)
      {
        uint64_t v61 = v21 + 2;
        v50[1] = "SHSERVICE response type: ";
        unint64_t v51 = 0x80000001005E63C0;
        uint64_t v60 = v10;
        uint64_t v62 = v1;
        uint64_t v63 = v22;
        do
        {
          swift_retain_n();
          sub_1003171D8(v14, v22, v10, v73);
          if (v4)
          {
            swift_release();
            *(void *)uint64_t v14 = v23;
            *(_DWORD *)(v14 + 8) = v24;
            *(_DWORD *)(v14 + 12) = v25;
            *(_DWORD *)(v14 + 16) = v26;
            char v47 = v64;
            __int16 v46 = v65;
            *(_WORD *)(v14 + 20) = v65;
            *(unsigned char *)(v14 + 22) = v47;
            goto LABEL_14;
          }
          int v57 = v26;
          int v58 = v25;
          int v59 = v24;
          uint64_t v72 = v23;
          swift_release();
          uint64_t v70 = v73[0];
          uint64_t v71 = v73[1];
          if (v61 >= v10)
          {
            sub_1002DB5BC();
            uint64_t v28 = sub_10020DD10();
            *uint64_t v29 = v10;
            swift_retain();
            swift_willThrow();
            swift_release();
            sub_10031DD98();
            swift_willThrow();
            v73[5] = v28;
            swift_errorRetain();
            sub_10000566C(qword_100710378);
            if ((swift_dynamicCast() & 1) == 0)
            {
              swift_errorRelease();
              swift_bridgeObjectRelease();
              uint64_t v23 = v72;
              int v24 = v59;
              int v25 = v58;
              int v26 = v57;
              char v47 = v64;
              __int16 v46 = v65;
              goto LABEL_15;
            }
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v30 = type metadata accessor for ParameterValue();
            uint64_t v43 = v62;
            storeEnumTagSinglePayload for ClientCommand(v62, 1, 1, v30);
            swift_errorRelease();
            uint64_t v4 = 0;
          }
          else
          {
            swift_retain();
            sub_100337E64();
            uint64_t v52 = v50;
            uint64_t v37 = __chkstk_darwin(v36);
            uint64_t v38 = v54;
            v50[-4] = v53;
            v50[-3] = v38;
            __chkstk_darwin(v37);
            v50[-4] = v40;
            v50[-3] = v39;
            uint64_t v49 = 2437;
            unint64_t v48 = v51;
            sub_10033CBF4((uint64_t)sub_10030735C, v41, (uint64_t)sub_100307374);
            sub_10031DE9C();
            swift_release();
            uint64_t v42 = type metadata accessor for ParameterValue();
            uint64_t v43 = v62;
            storeEnumTagSinglePayload for ClientCommand(v62, 0, 1, v42);
          }
          uint64_t v31 = v71;
          uint64_t v32 = v66;
          uint64_t v33 = (uint64_t)v66 + *(int *)(v67 + 52);
          sub_1002ECC20(v43, v33);
          swift_release();
          uint64_t v34 = v69;
          *uint64_t v32 = v70;
          v32[1] = v31;
          sub_10031CD18(v33, v34, &qword_10070FE28);
          storeEnumTagSinglePayload for ClientCommand(v34, 0, 1, v68);
          swift_bridgeObjectRetain();
          sub_1002EA508();
          sub_1001F3A28((uint64_t)v32, &qword_10070FE48);
          swift_retain();
          uint64_t v22 = v63;
          uint64_t v10 = v60;
          sub_100337E64();
          swift_release();
          uint64_t v23 = *(void *)v14;
          int v24 = *(_DWORD *)(v14 + 8);
          int v25 = *(_DWORD *)(v14 + 12);
          int v26 = *(_DWORD *)(v14 + 16);
          int v35 = *(unsigned __int16 *)(v14 + 20);
          int v64 = *(unsigned __int8 *)(v14 + 22);
          int v65 = v35;
        }
        while (v22 < v10);
      }
      sub_1002DB5BC();
      sub_10020DD10();
      *unint64_t v45 = v10;
      swift_retain();
      char v47 = v64;
      __int16 v46 = v65;
LABEL_14:
      swift_willThrow();
LABEL_15:
      swift_release();
      *(void *)uint64_t v14 = v23;
      *(_DWORD *)(v14 + 8) = v24;
      *(_DWORD *)(v14 + 12) = v25;
      *(_DWORD *)(v14 + 16) = v26;
      *(_WORD *)(v14 + 20) = v46;
      *(unsigned char *)(v14 + 22) = v47;
    }
    swift_willThrow();
    swift_release();
    swift_release();
    swift_release();
    sub_10031D590();
    sub_10031D59C();
  }
}

void sub_100319AC8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10000566C(&qword_100710750);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1005F6670;
  sub_100318D7C();
  if (v7)
  {
    *(void *)(v15 + 16) = 0;
    swift_release();
  }
  else
  {
    *(void *)(v15 + 32) = v16;
    *(unsigned char *)(v15 + 40) = v17;
    uint64_t v18 = a2 + 1;
    if (__OFADD__(a2, 1))
    {
      __break(1u);
    }
    else
    {
      if (v18 >= a3)
      {
        sub_1002DB5BC();
        swift_allocError();
        *uint64_t v23 = a3;
      }
      else
      {
        uint64_t v39 = a4;
        uint64_t v40 = a6;
        uint64_t v41 = a7;
        uint64_t v19 = *a1;
        int v20 = *((_DWORD *)a1 + 2);
        int v21 = *((_DWORD *)a1 + 3);
        int v22 = *((_DWORD *)a1 + 4);
        char v42 = *((unsigned char *)a1 + 22);
        __int16 v43 = *((_WORD *)a1 + 10);
        if (v18 + 1 < a3)
        {
          swift_retain();
          sub_100337E64();
          while (1)
          {
            sub_10000566C(&qword_1007123E8);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_1005F6A00;
            *(void *)(inited + 32) = sub_1003192C4;
            *(void *)(inited + 40) = 0;
            int v26 = (void *)swift_allocObject();
            _OWORD v26[2] = v39;
            v26[3] = a5;
            v26[4] = v40;
            v26[5] = v41;
            uint64_t v27 = swift_allocObject();
            *(void *)(v27 + 16) = sub_10031CB48;
            *(void *)(v27 + 24) = v26;
            *(void *)(inited + 48) = sub_10031CB64;
            *(void *)(inited + 56) = v27;
            *(void *)(inited + 64) = sub_1003192F0;
            *(void *)(inited + 72) = 0;
            *(void *)(inited + 80) = sub_10031931C;
            *(void *)(inited + 88) = 0;
            *(void *)(inited + 96) = sub_100319348;
            *(void *)(inited + 104) = 0;
            *(void *)(inited + 112) = sub_100319374;
            *(void *)(inited + 120) = 0;
            uint64_t v28 = (void *)swift_allocObject();
            v28[2] = v39;
            void v28[3] = a5;
            v28[4] = v40;
            v28[5] = v41;
            uint64_t v29 = swift_allocObject();
            *(void *)(v29 + 16) = sub_10031CB80;
            *(void *)(v29 + 24) = v28;
            *(void *)(inited + 128) = sub_10031CB64;
            *(void *)(inited + 136) = v29;
            uint64_t v30 = (void *)swift_allocObject();
            v30[2] = v39;
            v30[3] = a5;
            v30[4] = v40;
            v30[5] = v41;
            uint64_t v31 = swift_allocObject();
            *(void *)(v31 + 16) = sub_10031CB9C;
            *(void *)(v31 + 24) = v30;
            *(void *)(inited + 144) = sub_10031CB64;
            *(void *)(inited + 152) = v31;
            swift_retain_n();
            uint64_t v32 = a3;
            uint64_t v33 = sub_10033FFA8(inited);
            char v35 = v34;
            swift_setDeallocating();
            sub_10034A020();
            swift_release();
            unint64_t v36 = *(void *)(v15 + 16);
            if (v36 >= *(void *)(v15 + 24) >> 1)
            {
              sub_100233B88();
              uint64_t v15 = v38;
            }
            *(void *)(v15 + 16) = v36 + 1;
            uint64_t v37 = v15 + 16 * v36;
            *(void *)(v37 + 32) = v33;
            *(unsigned char *)(v37 + 40) = v35;
            swift_retain();
            a3 = v32;
            sub_100337E64();
          }
        }
        sub_1002DB5BC();
        swift_allocError();
        *int v24 = a3;
        swift_retain();
        swift_willThrow();
        swift_release();
        *a1 = v19;
        *((_DWORD *)a1 + 2) = v20;
        *((_DWORD *)a1 + 3) = v21;
        *((_DWORD *)a1 + 4) = v22;
        *((_WORD *)a1 + 10) = v43;
        *((unsigned char *)a1 + 22) = v42;
      }
      swift_willThrow();
      swift_errorRetain();
      sub_10000566C(qword_100710378);
      if (swift_dynamicCast())
      {
        swift_errorRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t sub_10031A004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10031E1C0();
  if (!v7)
  {
    sub_1003193D4();
    a7 = v9;
    sub_10031E1C0();
  }
  return a7;
}

void sub_10031A108()
{
  sub_1002F2480();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  sub_100300E48();
  if (!v0)
  {
    sub_100319AC8(v14, v12, v10, v8, v6, v4, v2);
    uint64_t v33 = v17;
    v32[1] = v32;
    __chkstk_darwin(v17);
    sub_10031D5F0();
    *(void *)(v18 - 32) = v8;
    *(void *)(v18 - 24) = v6;
    *(void *)(v18 - 16) = v4;
    *(void *)(v18 - 8) = v2;
    uint64_t v19 = sub_1002F3294();
    uint64_t v24 = sub_10032CD4C(v19, v20, v21, v22, v23);
    uint64_t v26 = v25;
    uint64_t v28 = v27;
    sub_10031D070();
    if (*(void *)(v33 + 16))
    {
      *uint64_t v16 = v33;
      v16[1] = v24;
      v16[2] = v26;
      v16[3] = v28;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_100296090();
      sub_10020DD10();
      sub_10031DDC8();
      *uint64_t v29 = v30;
      v29[1] = 0x80000001005E6AD0;
      v29[2] = v31;
      v29[3] = 0x80000001005E63C0;
      sub_1002E9998((uint64_t)v29, 2664);
      sub_1000A6FC4(v24, v26);
    }
  }
  sub_10031D590();
  sub_1002F2468();
}

void sub_10031A2B4()
{
  sub_10031D99C();
  sub_10031D734();
  sub_10031E2BC(v1, v2, v3);
  if (!v0)
  {
    swift_retain();
    uint64_t v4 = sub_10031D0B8();
    sub_100321C10(v4);
  }
  sub_10031D968();
}

uint64_t sub_10031A308@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = (uint64_t)sub_10032D3F0(a1, a2, a3, 1);
  if (!v5)
  {
    if (result < 0)
    {
      sub_100296090();
      uint64_t v10 = sub_10020DD10();
      sub_1002E1E50(v10, v11);
      sub_1002F725C(v12, v13);
    }
    else
    {
      if (v9 == a4)
      {
        *a5 = result;
        return result;
      }
      sub_10031DA58();
      swift_bridgeObjectRelease();
      v17._countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v17);
      swift_bridgeObjectRelease();
      v18._countAndFlagsBits = 0x2C73746967696420;
      v18._object = (void *)0xED000020746F6720;
      sub_1005E1E30(v18);
      v19._countAndFlagsBits = sub_1005E3230();
      sub_10031DF0C(v19);
      swift_bridgeObjectRelease();
      sub_100296090();
      sub_10020DD10();
      *uint64_t v16 = 0x6465746365707845;
      v16[1] = 0xE900000000000020;
      sub_10031DA00((uint64_t)v16, 0xD000000000000020);
      uint64_t v15 = 2711;
    }
    return sub_1002E9998(v14, v15);
  }
  return result;
}

uint64_t sub_10031A494(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for ParameterValue();
  uint64_t v5 = sub_10031D0A0(v4);
  __chkstk_darwin(v5);
  sub_100224A54();
  uint64_t v8 = v6 - v7;
  __chkstk_darwin(v9);
  sub_10031DD1C();
  uint64_t v10 = sub_10000566C(&qword_10070FE60);
  sub_10022C254();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_100254960();
  sub_10031B838(*(void *)(a1 + 16), 0, (uint64_t (*)(void))sub_100212B90, (uint64_t (*)(uint64_t, uint64_t))sub_100339EC4, sub_100339E0C);
  char v14 = sub_10031DC18();
  sub_100212B70(v14, v15, v16);
  uint64_t v42 = *(void *)(a1 + 16);
  if (v42)
  {
    uint64_t v41 = (uint64_t)v2 + *(int *)(v10 + 48);
    uint64_t v40 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v18 = 0;
    uint64_t v19 = a1;
    uint64_t v38 = v2;
    uint64_t v39 = v12;
    while (v18 < *(void *)(v19 + 16))
    {
      unint64_t v43 = v18;
      sub_10031CD18(v40 + *(void *)(v12 + 72) * v18, (uint64_t)v2, &qword_10070FE60);
      uint64_t v20 = *v2;
      uint64_t v21 = v2[1];
      sub_10031C934(v41, v1);
      uint64_t v22 = _swiftEmptyArrayStorage[2];
      if (v22)
      {
        uint64_t result = _swiftEmptyArrayStorage[4];
        if (result == v20 && _swiftEmptyArrayStorage[5] == v21) {
          goto LABEL_46;
        }
        uint64_t v24 = v21;
        uint64_t result = sub_1005E3290();
        if (result) {
          goto LABEL_46;
        }
        if (v22 != 1)
        {
          uint64_t result = _swiftEmptyArrayStorage[6];
          if (result == v20 && _swiftEmptyArrayStorage[7] == v21) {
            goto LABEL_46;
          }
          uint64_t result = sub_10031D9D0();
          if (result) {
            goto LABEL_46;
          }
          if (v22 != 2)
          {
            uint64_t result = _swiftEmptyArrayStorage[8];
            if (result == v20 && _swiftEmptyArrayStorage[9] == v21) {
              goto LABEL_46;
            }
            uint64_t result = sub_10031D9D0();
            if (result) {
              goto LABEL_46;
            }
            uint64_t v27 = v22 - 3;
            if (v22 != 3)
            {
              uint64_t result = _swiftEmptyArrayStorage[10];
              if (result == v20 && _swiftEmptyArrayStorage[11] == v21) {
                goto LABEL_46;
              }
              uint64_t result = sub_10031D9D0();
              if (result) {
                goto LABEL_46;
              }
              unint64_t v36 = &_swiftEmptyArrayStorage[13];
              while (--v27)
              {
                uint64_t result = *(v36 - 1);
                if (result != v20 || *v36 != v21)
                {
                  v36 += 2;
                  uint64_t result = sub_10031D9D0();
                  if ((result & 1) == 0) {
                    continue;
                  }
                }
                goto LABEL_46;
              }
            }
          }
        }
      }
      else
      {
        uint64_t v24 = v21;
      }
      sub_100339910(v20, v24, 0);
      sub_1001F3974(v1, v8);
      uint64_t v28 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        char v29 = sub_10031DDE0();
        sub_100212B70(v29, v30, v31);
        uint64_t v28 = v44;
      }
      uint64_t v2 = v38;
      uint64_t v12 = v39;
      unint64_t v33 = *(void *)(v28 + 16);
      unint64_t v32 = *(void *)(v28 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_100212B70(v32 > 1, v33 + 1, 1);
        uint64_t v28 = v44;
      }
      unint64_t v18 = v43 + 1;
      *(void *)(v28 + 16) = v33 + 1;
      sub_10031DACC();
      sub_10031C934(v8, v34);
      sub_1002BD9D0(v1);
      uint64_t result = swift_bridgeObjectRelease();
      if (v43 + 1 == v42)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    __break(1u);
LABEL_46:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_10031A88C(uint64_t a1)
{
  sub_10031B838(*(void *)(a1 + 16), 0, (uint64_t (*)(void))sub_100212BB0, sub_100339EC4, sub_100339E0C);
  sub_100212BB0();
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    swift_bridgeObjectRetain();
    unint64_t v2 = 0;
    while (v2 < *(void *)(a1 + 16))
    {
      uint64_t v3 = (uint64_t *)(a1 + 32 + 32 * v2);
      uint64_t v5 = *v3;
      uint64_t v4 = v3[1];
      uint64_t v6 = v3[2];
      uint64_t v19 = v3[3];
      uint64_t v7 = _swiftEmptyArrayStorage[2];
      if (v7)
      {
        BOOL v8 = _swiftEmptyArrayStorage[4] == v5 && _swiftEmptyArrayStorage[5] == v4;
        if (v8 || (sub_1002A8D18() & 1) != 0) {
          goto LABEL_43;
        }
        if (v7 != 1)
        {
          BOOL v9 = _swiftEmptyArrayStorage[6] == v5 && _swiftEmptyArrayStorage[7] == v4;
          if (v9 || (sub_1002A8D18() & 1) != 0) {
            goto LABEL_43;
          }
          if (v7 != 2)
          {
            BOOL v10 = _swiftEmptyArrayStorage[8] == v5 && _swiftEmptyArrayStorage[9] == v4;
            if (v10 || (sub_1002A8D18() & 1) != 0) {
              goto LABEL_43;
            }
            uint64_t v11 = v7 - 3;
            if (v7 != 3)
            {
              BOOL v14 = _swiftEmptyArrayStorage[10] == v5 && _swiftEmptyArrayStorage[11] == v4;
              if (v14 || (sub_1002A8D18() & 1) != 0) {
                goto LABEL_43;
              }
              uint64_t v15 = &_swiftEmptyArrayStorage[13];
              while (--v11)
              {
                if (*(v15 - 1) != v5 || *v15 != v4)
                {
                  v15 += 2;
                  if ((sub_1002A8D18() & 1) == 0) {
                    continue;
                  }
                }
                goto LABEL_43;
              }
            }
          }
        }
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100339928(v5, v4, 0);
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      if (v12 >= _swiftEmptyArrayStorage[3] >> 1) {
        sub_100212BB0();
      }
      ++v2;
      _swiftEmptyArrayStorage[2] = v12 + 1;
      uint64_t v13 = &_swiftEmptyArrayStorage[2 * v12];
      v13[4] = v6;
      v13[5] = v19;
      swift_bridgeObjectRelease();
      if (v2 == v18)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    __break(1u);
LABEL_43:
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_10031AB74(uint64_t a1)
{
  uint64_t v4 = sub_10000566C(&qword_10070FE28);
  uint64_t v5 = sub_10031D0A0(v4);
  __chkstk_darwin(v5);
  sub_100224A54();
  uint64_t v37 = v6 - v7;
  __chkstk_darwin(v8);
  sub_10031DD1C();
  uint64_t v9 = sub_10000566C(&qword_10070FE30);
  sub_10022C254();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100224260();
  sub_10031B838(*(void *)(a1 + 16), 0, (uint64_t (*)(void))sub_100212BB0, sub_100339EC4, sub_100339E0C);
  sub_10031DC18();
  sub_100212C10();
  uint64_t v36 = a1;
  uint64_t v35 = *(void *)(a1 + 16);
  if (v35)
  {
    uint64_t v34 = (uint64_t)v2 + *(int *)(v9 + 48);
    uint64_t v33 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v14 = 0;
    char v31 = v2;
    uint64_t v32 = v11;
    while (v14 < *(void *)(v36 + 16))
    {
      sub_10031CD18(v33 + *(void *)(v11 + 72) * v14, (uint64_t)v2, &qword_10070FE30);
      uint64_t v15 = *v2;
      uint64_t v16 = v2[1];
      sub_1002ECC20(v34, v1);
      uint64_t v17 = _swiftEmptyArrayStorage[2];
      if (v17)
      {
        uint64_t result = _swiftEmptyArrayStorage[4];
        if (result == v15 && _swiftEmptyArrayStorage[5] == v16) {
          goto LABEL_45;
        }
        uint64_t result = sub_10031D718();
        if (result) {
          goto LABEL_45;
        }
        if (v17 != 1)
        {
          uint64_t result = _swiftEmptyArrayStorage[6];
          if (result == v15 && _swiftEmptyArrayStorage[7] == v16) {
            goto LABEL_45;
          }
          uint64_t result = sub_10031D718();
          if (result) {
            goto LABEL_45;
          }
          if (v17 != 2)
          {
            uint64_t result = _swiftEmptyArrayStorage[8];
            if (result == v15 && _swiftEmptyArrayStorage[9] == v16) {
              goto LABEL_45;
            }
            uint64_t result = sub_10031D718();
            if (result) {
              goto LABEL_45;
            }
            uint64_t v21 = v17 - 3;
            if (v17 != 3)
            {
              uint64_t result = _swiftEmptyArrayStorage[10];
              if (result == v15 && _swiftEmptyArrayStorage[11] == v16) {
                goto LABEL_45;
              }
              uint64_t result = sub_10031D718();
              if (result) {
                goto LABEL_45;
              }
              char v29 = &_swiftEmptyArrayStorage[13];
              while (--v21)
              {
                uint64_t result = *(v29 - 1);
                if (result != v15 || *v29 != v16)
                {
                  v29 += 2;
                  uint64_t result = sub_10031D718();
                  if ((result & 1) == 0) {
                    continue;
                  }
                }
                goto LABEL_45;
              }
            }
          }
        }
      }
      sub_10031DE10();
      sub_100339928(v22, v23, v24);
      sub_10031CD18(v1, v37, &qword_10070FE28);
      uint64_t v25 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10031DDE0();
        sub_100212C10();
        uint64_t v25 = v38;
      }
      unint64_t v2 = v31;
      uint64_t v11 = v32;
      unint64_t v26 = *(void *)(v25 + 16);
      if (v26 >= *(void *)(v25 + 24) >> 1)
      {
        sub_100212C10();
        uint64_t v25 = v38;
      }
      ++v14;
      *(void *)(v25 + 16) = v26 + 1;
      sub_10031DACC();
      sub_1002ECC20(v37, v27);
      sub_1001F3A28(v1, &qword_10070FE28);
      uint64_t result = swift_bridgeObjectRelease();
      if (v14 == v35)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    __break(1u);
LABEL_45:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_10031AF20(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ParameterValue();
  sub_10031D0A0(v3);
  uint64_t v73 = v4;
  __chkstk_darwin();
  sub_100224A54();
  uint64_t v7 = v5 - v6;
  __chkstk_darwin();
  uint64_t v9 = (char *)v67 - v8;
  uint64_t v10 = sub_10000566C(&qword_100710558);
  sub_10022C254();
  uint64_t v12 = v11;
  __chkstk_darwin();
  sub_100224260();
  uint64_t v91 = 0;
  v92 = _swiftEmptyArrayStorage;
  uint64_t v13 = *(void *)(a1 + 16);
  sub_10031B838(v13, 0, (uint64_t (*)(void))sub_100212C70, (uint64_t (*)(uint64_t, uint64_t))sub_100339EFC, sub_100339E0C);
  v90 = _swiftEmptyArrayStorage;
  sub_100212B70(0, v13, 0);
  uint64_t v72 = *(void *)(a1 + 16);
  if (!v72)
  {
    swift_bridgeObjectRelease();
    return v91;
  }
  uint64_t v70 = v1 + *(int *)(v10 + 48);
  uint64_t v69 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  swift_bridgeObjectRetain();
  uint64_t v75 = v7;
  uint64_t v76 = a1;
  uint64_t v74 = v9;
  uint64_t v71 = v12;
  unint64_t v14 = 0;
  uint64_t v68 = v1;
  while (1)
  {
    if (v14 >= *(void *)(a1 + 16))
    {
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      uint64_t result = swift_release();
      goto LABEL_52;
    }
    uint64_t v15 = (uint64_t)v9;
    sub_10031CD18(v69 + *(void *)(v71 + 72) * v14, v1, &qword_100710558);
    uint64_t v16 = *(void *)v1;
    uint64_t v17 = *(unsigned int *)(v1 + 8);
    uint64_t v18 = *(unsigned int *)(v1 + 12);
    uint64_t v82 = *(unsigned int *)(v1 + 16);
    uint64_t v19 = *(unsigned __int16 *)(v1 + 20);
    uint64_t v20 = (void *)*(unsigned __int8 *)(v1 + 22);
    sub_10031C934(v70, v15);
    uint64_t v21 = v91;
    uint64_t v83 = v19;
    uint64_t v84 = v17;
    uint64_t v85 = v16;
    uint64_t v79 = v18;
    if (!v91) {
      break;
    }
    v80 = v92;
    unint64_t v77 = v14;
    sub_1005E33F0();
    v81 = (void *)(v16 + 24);
    sub_1001F969C();
    sub_1005E3400();
    Swift::Int v22 = sub_1005E3470();
    uint64_t v23 = 1 << *(void *)(v21 + 16);
    BOOL v24 = __OFSUB__(v23, 1);
    uint64_t v25 = v23 - 1;
    if (v24) {
      goto LABEL_50;
    }
    unint64_t v26 = v20;
    uint64_t v27 = v25 & v22;
    uint64_t v28 = sub_1005E0B40();
    *(void *)&long long v97 = v21 + 16;
    *((void *)&v97 + 1) = v21 + 32;
    *(void *)&long long v98 = v27;
    *((void *)&v98 + 1) = v28;
    *(void *)&long long v99 = v29;
    *((void *)&v99 + 1) = v30;
    char v100 = 0;
    uint64_t v31 = sub_1005E0B70();
    char v33 = v32;
    long long v86 = v97;
    long long v87 = v98;
    long long v88 = v99;
    char v89 = v100;
    swift_retain();
    uint64_t v34 = v75;
    a1 = v76;
    uint64_t v9 = v74;
    if ((v33 & 1) == 0)
    {
      v67[1] = v21;
      uint64_t v35 = v80 + 4;
      int v36 = v79 - v84;
      while (1)
      {
        uint64_t v37 = &v35[3 * v31];
        uint64_t v38 = *((unsigned int *)v37 + 2);
        uint64_t v39 = *((unsigned int *)v37 + 3);
        if (v39 - v38 == v36)
        {
          uint64_t v40 = *v37;
          uint64_t v41 = *((unsigned __int16 *)v37 + 10);
          uint64_t v42 = *((unsigned __int8 *)v37 + 22);
          BOOL v43 = *((_DWORD *)v37 + 4) == v82 && v41 == v83;
          BOOL v44 = v43 && v42 == v26;
          if (v44 && v40 == v85) {
            goto LABEL_51;
          }
          sub_1001F969C();
          if (!sub_10031DE68((const void *)(*(void *)(v40 + 24) + (v42 | (v41 << 8)) + v38), v39 - v38, v81))goto LABEL_51; {
        }
          }
        sub_1005E0B90();
        long long v93 = v86;
        long long v94 = v87;
        long long v95 = v88;
        char v96 = v89;
        uint64_t v27 = v87;
        uint64_t v31 = sub_1005E0B70();
        if (v46)
        {
          uint64_t v34 = v75;
          a1 = v76;
          uint64_t v9 = v74;
          break;
        }
      }
    }
    swift_release();
    uint64_t v1 = v68;
    unint64_t v14 = v77;
    uint64_t v47 = v79;
    uint64_t v48 = v83;
LABEL_41:
    unint64_t v62 = v78 & 0xFF00000000000000 | v82 | (v48 << 32) | ((void)v26 << 48);
    sub_100339AD4(v85, v84 | (v47 << 32), v62, v27);
    sub_1001F3974((uint64_t)v9, v34);
    uint64_t v63 = v90;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v78 = v62;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100212B70(0, v63[2] + 1, 1);
      uint64_t v63 = v90;
    }
    unint64_t v66 = v63[2];
    unint64_t v65 = v63[3];
    if (v66 >= v65 >> 1)
    {
      sub_100212B70(v65 > 1, v66 + 1, 1);
      uint64_t v63 = v90;
    }
    ++v14;
    v63[2] = v66 + 1;
    sub_10031C934(v34, (uint64_t)v63+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(void *)(v73 + 72) * v66);
    sub_1002BD9D0((uint64_t)v9);
    swift_release();
    if (v14 == v72)
    {
      swift_bridgeObjectRelease_n();
      return v91;
    }
  }
  v81 = v20;
  uint64_t v49 = v92[2];
  if (!v49)
  {
    uint64_t v27 = 0;
    uint64_t v47 = v79;
    uint64_t v34 = v75;
    a1 = v76;
    uint64_t v48 = v83;
    uint64_t v9 = v74;
LABEL_40:
    unint64_t v26 = v81;
    goto LABEL_41;
  }
  unint64_t v77 = v14;
  Swift::Int v50 = v92;
  int v51 = v79 - v17;
  v80 = (void *)(v16 + 24);
  uint64_t result = sub_1001F969C();
  uint64_t v48 = v83;
  uint64_t v53 = (unsigned __int8 *)v50 + 54;
  while (1)
  {
    uint64_t v54 = *(unsigned int *)(v53 - 14);
    uint64_t v55 = *(unsigned int *)(v53 - 10);
    if (v55 - v54 == v51)
    {
      uint64_t v56 = *(void *)(v53 - 22);
      uint64_t v57 = *((unsigned __int16 *)v53 - 1);
      uint64_t v58 = *v53;
      BOOL v59 = *(_DWORD *)(v53 - 6) == v82 && v57 == v48;
      BOOL v60 = v59 && v58 == v81;
      if (v60 && v56 == v85) {
        break;
      }
      sub_1001F969C();
      uint64_t result = sub_10031DE68((const void *)(*(void *)(v56 + 24) + (v58 | (v57 << 8)) + v54), v55 - v54, v80);
      uint64_t v48 = v83;
      if (!result) {
        break;
      }
    }
    v53 += 24;
    if (!--v49)
    {
      uint64_t v27 = 0;
      uint64_t v34 = v75;
      a1 = v76;
      uint64_t v9 = v74;
      uint64_t v1 = v68;
      unint64_t v14 = v77;
      uint64_t v47 = v79;
      goto LABEL_40;
    }
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_10031B520(uint64_t a1)
{
  sub_10031B838(*(void *)(a1 + 16), 0, (uint64_t (*)(void))sub_100212BB0, (uint64_t (*)(uint64_t, uint64_t))sub_100339EC4, sub_100339E0C);
  sub_100212CD0();
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19)
  {
    swift_bridgeObjectRetain();
    unint64_t v2 = 0;
    while (v2 < *(void *)(a1 + 16))
    {
      uint64_t v3 = (uint64_t *)(a1 + 32 + 32 * v2);
      uint64_t v5 = *v3;
      uint64_t v4 = v3[1];
      uint64_t v7 = v3[2];
      uint64_t v6 = v3[3];
      uint64_t v8 = _swiftEmptyArrayStorage[2];
      if (v8)
      {
        BOOL v9 = _swiftEmptyArrayStorage[4] == v5 && _swiftEmptyArrayStorage[5] == v4;
        if (v9 || (sub_1005E3290() & 1) != 0) {
          goto LABEL_43;
        }
        if (v8 != 1)
        {
          BOOL v10 = _swiftEmptyArrayStorage[6] == v5 && _swiftEmptyArrayStorage[7] == v4;
          if (v10 || (sub_1005E3290() & 1) != 0) {
            goto LABEL_43;
          }
          if (v8 != 2)
          {
            BOOL v11 = _swiftEmptyArrayStorage[8] == v5 && _swiftEmptyArrayStorage[9] == v4;
            if (v11 || (sub_1005E3290() & 1) != 0) {
              goto LABEL_43;
            }
            uint64_t v12 = v8 - 3;
            if (v12)
            {
              BOOL v15 = _swiftEmptyArrayStorage[10] == v5 && _swiftEmptyArrayStorage[11] == v4;
              if (v15 || (sub_1005E3290() & 1) != 0) {
                goto LABEL_43;
              }
              uint64_t v16 = &_swiftEmptyArrayStorage[13];
              while (--v12)
              {
                if (*(v16 - 1) != v5 || *v16 != v4)
                {
                  v16 += 2;
                  if ((sub_1005E3290() & 1) == 0) {
                    continue;
                  }
                }
                goto LABEL_43;
              }
            }
          }
        }
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100339928(v5, v4, 0);
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      if (v13 >= _swiftEmptyArrayStorage[3] >> 1) {
        sub_100212CD0();
      }
      ++v2;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      unint64_t v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v7;
      unsigned char v14[5] = v6;
      swift_bridgeObjectRelease();
      if (v2 == v19)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    __break(1u);
LABEL_43:
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_10031B838(uint64_t result, char a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t), uint64_t (*a5)(void))
{
  if (result < 0) {
    goto LABEL_25;
  }
  uint64_t v8 = v5;
  sub_100308CB4(result, a3);
  uint64_t v10 = *v5;
  if (*v5)
  {
    sub_1001F969C();
    uint64_t v11 = *(void *)(v10 + 16) & 0x3FLL;
  }
  else
  {
    uint64_t v11 = 0;
  }
  uint64_t v12 = sub_1005E0BD0();
  uint64_t v13 = v12;
  if (a2) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v10 && (a2 & 1) == 0)
  {
    sub_1001F969C();
    uint64_t v14 = *(void *)(v10 + 24) & 0x3FLL;
  }
  if (v11 < v13)
  {
    uint64_t v15 = v13;
    return a4(v15, v14);
  }
  if (v14 > v13) {
    uint64_t v13 = v14;
  }
  uint64_t v15 = sub_1005E0BD0();
  if (v15 <= v13) {
    uint64_t v15 = v13;
  }
  if (v15 < v11) {
    return a4(v15, v14);
  }
  uint64_t result = a5();
  uint64_t v16 = *v8;
  if (!v16)
  {
    if (!v14) {
      return result;
    }
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t result = swift_beginAccess();
  if ((*(void *)(v16 + 24) & 0x3FLL) != v14) {
    *(void *)(v16 + 24) = *(void *)(v16 + 24) & 0xFFFFFFFFFFFFFFC0 | v14 & 0x3F;
  }
  return result;
}

void sub_10031B984(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 + v2 > *(void *)(v3 + 24) >> 1)
  {
    sub_1002325F4();
    uint64_t v3 = v6;
  }
  if (!*(void *)(a1 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  if ((*(void *)(v3 + 24) >> 1) - v7 < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  memcpy((void *)(v3 + v7 + 32), (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return;
  }
  uint64_t v8 = *(void *)(v3 + 16);
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    *(void *)(v3 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_10031BA60()
{
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10031BA98()
{
  sub_1002E1C9C();
  return sub_10030D1D8(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031BAB4()
{
  return sub_10031BDFC();
}

void sub_10031BACC()
{
  sub_1002E1C9C();
  sub_1003104B4(v0, v1, v2, v3, v4, v5, v6);
}

void sub_10031BB20()
{
}

uint64_t sub_10031BB3C()
{
  sub_1002E1C9C();
  return sub_10030D06C(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031BB58(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 64) & 0x1FFLL | 0x8000000000000000;
  *(void *)(result + 16) &= 0x1FFFFFFFFuLL;
  *(void *)(result + 64) = v1;
  return result;
}

void sub_10031BB78()
{
  sub_1002E1C9C();
  sub_10030DCE0(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031BB94@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10030DF6C(a1, a2, *(uint64_t (**)(uint64_t, void, void))(v3 + 16), a3);
}

void sub_10031BBB0()
{
  sub_1002E1C9C();
  sub_10030DD94(v0, v1, v2, v3, v4, v5, v6);
}

void sub_10031BBCC()
{
  sub_1002E1C9C();
  sub_1003104B4(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031BC20()
{
  sub_1002E1C9C();
  return sub_10030D344(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031BC3C()
{
  sub_1002E1C9C();
  return sub_10030F120(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031BC58()
{
  return sub_10031BFEC();
}

uint64_t sub_10031BC70()
{
  return sub_10030F314();
}

void sub_10031BC8C()
{
  sub_1002E1C9C();
  sub_10030F57C(v0, v1, v2);
}

uint64_t sub_10031BCA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10031BFAC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void))sub_10030A634);
}

void sub_10031BCD4()
{
  sub_1002E1C9C();
  sub_1003104B4(v0, v1, v2, v3, v4, v5, v6);
}

void sub_10031BD28()
{
}

uint64_t sub_10031BD44()
{
  return sub_10031BEE0();
}

uint64_t sub_10031BD60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10031BFAC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, void))sub_10030B55C);
}

uint64_t sub_10031BD8C()
{
  return sub_10031C6D0();
}

uint64_t sub_10031BDA8()
{
  sub_1002E1C9C();
  return sub_10030E0D8(v0, v1, v2, v3, v4, v5, v6);
}

void *sub_10031BDC4()
{
  sub_1002E1C9C();
  return sub_1002ED8BC(v0, v1, v2);
}

uint64_t sub_10031BDE0()
{
  sub_1002E1C9C();
  return sub_1003124AC(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031BDFC()
{
  sub_10031D7F0();
  uint64_t result = v2();
  if (!v1) {
    *uint64_t v0 = result;
  }
  return result;
}

double sub_10031BE2C()
{
  sub_1002E1C9C();
  *(void *)&double result = sub_100312620(v0, v1, v2, v3, v4, v5, v6, v7).n128_u64[0];
  return result;
}

double sub_10031BE48@<D0>(_OWORD *a1@<X8>)
{
  (*(void (**)(_OWORD *__return_ptr))(v1 + 16))(v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a1 = v7[0];
    a1[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a1[2] = v8;
    a1[3] = v6;
  }
  return result;
}

uint64_t sub_10031BE94()
{
  return 0;
}

uint64_t sub_10031BEC4()
{
  return sub_10031BEE0();
}

uint64_t sub_10031BEE0()
{
  sub_10031D7F0();
  uint64_t result = v2();
  if (!v1)
  {
    *uint64_t v0 = result;
    v0[1] = v4;
  }
  return result;
}

double sub_10031BF0C()
{
  sub_1002E1C9C();
  return sub_100312AE0(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_10031BF28()
{
}

void sub_10031BF60()
{
}

void sub_10031BF90()
{
}

uint64_t sub_10031BFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void, void))
{
  return a4(a1, a2, a3, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_10031BFD0()
{
  return sub_10030BF60();
}

uint64_t sub_10031BFEC()
{
  sub_10031D7F0();
  uint64_t result = v2();
  if (!v1)
  {
    *uint64_t v0 = result;
    v0[1] = v4;
  }
  return result;
}

uint64_t sub_10031C01C()
{
  sub_1002E1C9C();
  return sub_10030C1D4(v0, v1, v2);
}

uint64_t sub_10031C038@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10030C454(a1, a2, *(uint64_t (**)(uint64_t, void, void))(v3 + 16), a3);
}

uint64_t sub_10031C054()
{
  sub_1002E1C9C();
  return sub_10030C30C(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031C070()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10031C0A8()
{
  sub_1002E1C9C();
  sub_100311C60(v0, v1, v2, v3, v4, v5, v6, v7);
}

void *sub_10031C0C4@<X0>(uint64_t a1@<X8>)
{
  return sub_100311F88(*(void *(**)(long long *__return_ptr))(v1 + 16), a1);
}

void sub_10031C0E0()
{
  sub_1002E1C9C();
  sub_100311DF0(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_10031C0FC()
{
  sub_1002E1C9C();
  return sub_100311FD8(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031C118()
{
  return sub_10031C14C();
}

uint64_t sub_10031C130()
{
  sub_1002E1C9C();
  return sub_100312094(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031C14C()
{
  sub_10031D7F0();
  uint64_t result = v1();
  if (!v0) {
    return sub_10031D2B4(result, v3, v4);
  }
  return result;
}

uint64_t sub_10031C17C()
{
  return sub_100312DA0();
}

uint64_t sub_10031C198()
{
  return sub_10031C1B0();
}

uint64_t sub_10031C1B0()
{
  sub_10031D7F0();
  uint64_t result = v1();
  if (!v0) {
    return sub_10031D2B4(result, v3, v4);
  }
  return result;
}

void sub_10031C1E0()
{
}

uint64_t sub_10031C1FC()
{
  return sub_10031C230();
}

void sub_10031C214()
{
  sub_1002E1C9C();
  sub_10030EC00(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031C230()
{
  sub_10031D7F0();
  uint64_t result = v2();
  if (!v1)
  {
    *uint64_t v0 = result;
    v0[1] = v4;
    v0[2] = v5;
  }
  return result;
}

void sub_10031C264(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

Swift::Int sub_10031C290(Swift::Int result, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t result = sub_1005E1E80();
    uint64_t v3 = result;
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    uint64_t v3 = HIBYTE(a2) & 0xF;
  }
  else
  {
    uint64_t v3 = result & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
  }
  else
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v2 = v4;
    if (!isUniquelyReferenced_nonNull_native || *(void *)(v4 + 24) >> 1 < v5 + v3)
    {
      sub_1002325F4();
      uint64_t v4 = v7;
      *uint64_t v2 = v7;
    }
    swift_bridgeObjectRetain();
    sub_1003011D0();
    uint64_t result = sub_1005E2C90();
    if (v8) {
      goto LABEL_19;
    }
    uint64_t v9 = result;
    uint64_t result = swift_bridgeObjectRelease_n();
    if (v9 >= v3)
    {
      if (v9 < 1)
      {
LABEL_14:
        *uint64_t v2 = v4;
        return result;
      }
      uint64_t v10 = *(void *)(v4 + 16);
      BOOL v11 = __OFADD__(v10, v9);
      uint64_t v12 = v10 + v9;
      if (!v11)
      {
        *(void *)(v4 + 16) = v12;
        goto LABEL_14;
      }
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t *sub_10031C3B8(uint64_t *a1)
{
  return a1;
}

void sub_10031C3F0()
{
  sub_1002E1C9C();
  sub_100314F80(v0);
}

uint64_t sub_10031C40C()
{
  sub_1002E1C9C();
  return sub_100312190(v0, v1, v2, v3, v4);
}

uint64_t sub_10031C428()
{
  return sub_1003123EC();
}

uint64_t sub_10031C448()
{
  sub_1002E1C9C();
  return sub_1003122B8(v0, v1, v2, v3, v4, v5, v6);
}

void sub_10031C464()
{
}

void sub_10031C494()
{
}

uint64_t sub_10031C4B0()
{
  return sub_10031C6D0();
}

uint64_t sub_10031C4CC()
{
  sub_1002E1C9C();
  return sub_100314C64(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031C4E8()
{
  return sub_10032D3BC();
}

void sub_10031C504()
{
}

void sub_10031C520()
{
}

void sub_10031C53C()
{
  sub_1002E1C9C();
  sub_100315310(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031C558()
{
  return sub_10031CC38();
}

void sub_10031C574()
{
  sub_1002E1C9C();
  sub_1003153D0(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031C590()
{
  return sub_10030E488();
}

void sub_10031C5AC()
{
  sub_1002E1C9C();
  sub_10030C638(v0);
}

void sub_10031C5C8()
{
}

#error "10031C658: call analysis failed (funcsize=22)"

void sub_10031C668()
{
}

void sub_10031C698()
{
  sub_1002E1C9C();
  sub_10030CCFC(v0, v1, v2, v3);
}

uint64_t sub_10031C6B4()
{
  return sub_10031C6D0();
}

uint64_t sub_10031C6D0()
{
  sub_10031DDB0();
  uint64_t result = v2();
  if (!v1)
  {
    *uint64_t v0 = result;
    v0[1] = v4;
  }
  return result;
}

uint64_t sub_10031C6FC()
{
  sub_1002E1C9C();
  return sub_10030BA1C(v0, v1, v2);
}

uint64_t sub_10031C718()
{
  return sub_1003123EC();
}

uint64_t sub_10031C738()
{
  sub_1002E1C9C();
  return sub_100316C80(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031C754()
{
  return sub_100316840();
}

void sub_10031C770()
{
}

uint64_t sub_10031C7A0()
{
  sub_1002E1C9C();
  return sub_1003161B8(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_10031C7BC()
{
}

#error "10031C850: call analysis failed (funcsize=22)"

void sub_10031C860()
{
  sub_1002E1C9C();
  sub_10030B844(v0, v1, v2, v3);
}

uint64_t sub_10031C87C()
{
  return sub_10031C8B0();
}

void sub_10031C894()
{
  sub_1002E1C9C();
  sub_10030B920(v0, v1, v2, v3);
}

uint64_t sub_10031C8B0()
{
  sub_10031D7F0();
  uint64_t result = v2();
  if (!v1)
  {
    *uint64_t v0 = result;
    v0[1] = v4;
  }
  return result;
}

uint64_t sub_10031C8E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10000566C(a3);
  sub_1001F3BBC();
  uint64_t v4 = sub_10023C458();
  v5(v4);
  return a2;
}

uint64_t sub_10031C934(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10031DDF8();
  v4(v3);
  sub_1001F3BBC();
  uint64_t v5 = sub_10023C458();
  v6(v5);
  return a2;
}

#error "10031C9B0: call analysis failed (funcsize=13)"

double sub_10031C9C0()
{
  sub_1002E1C9C();
  return sub_1003147DC(v0, v1, v2, v3, v4, v5, v6, v7);
}

double sub_10031C9DC()
{
  sub_1002E1C9C();
  return sub_100314874(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_10031C9F8()
{
  sub_1002E1C9C();
  sub_100312E24(v0, v1, v2, v3, v4);
}

void *sub_10031CA14@<X0>(uint64_t a1@<X8>)
{
  return sub_100313020(*(void *(**)(void *__return_ptr))(v1 + 16), a1);
}

void sub_10031CA30()
{
  sub_1002E1C9C();
  sub_100312E58(v0);
}

uint64_t sub_10031CA4C()
{
  return sub_100313168();
}

uint64_t sub_10031CA68@<X0>(uint64_t a1@<X8>)
{
  return sub_10031351C(*(uint64_t (**)(void))(v1 + 16), a1);
}

void sub_10031CA84()
{
  sub_1002E1C9C();
  sub_10031319C(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031CAA0()
{
  sub_1002E1C9C();
  return sub_1003132F4(v0, v1, v2, v3, v4, v5, v6);
}

void sub_10031CABC()
{
  sub_1002E1C9C();
  sub_10031347C(v0, v1, v2, v3, v4, v5, v6, v7);
}

void sub_10031CAD8()
{
  sub_1002E1C9C();
  sub_100315EA0(v0, v1, v2, v3);
}

void sub_10031CAF4()
{
}

uint64_t sub_10031CB2C()
{
  sub_1002E1C9C();
  return sub_10031A004(v0, v1, v2, v3, v4, v5, v6);
}

void sub_10031CB48()
{
  sub_1002E1C9C();
  sub_100319210(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031CB64()
{
  return sub_10031CC38();
}

void sub_10031CB80()
{
  sub_1002E1C9C();
  sub_1003190B4(v0, v1, v2, v3, v4, v5, v6);
}

void sub_10031CB9C()
{
  sub_1002E1C9C();
  sub_100319160(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031CBB8()
{
  sub_1002E1C9C();
  return sub_100318404(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10031CBD4()
{
  return sub_10031CC08();
}

uint64_t sub_10031CBEC()
{
  return sub_100318BD8();
}

uint64_t sub_10031CC08()
{
  sub_10031D7F0();
  uint64_t result = v2();
  if (!v1) {
    *uint64_t v0 = result;
  }
  return result;
}

uint64_t sub_10031CC38()
{
  sub_10031DDB0();
  uint64_t result = v2();
  if (!v1)
  {
    *(void *)uint64_t v0 = result;
    *(unsigned char *)(v0 + 8) = v4;
  }
  return result;
}

#error "10031CC90: call analysis failed (funcsize=13)"

void sub_10031CCA0()
{
  sub_1002E1C9C();
  sub_100311808(v0, v1, v2, v3);
}

uint64_t *sub_10031CCBC()
{
  sub_1002E1C9C();
  return sub_100311924(v0, v1, v2, v3);
}

void sub_10031CCD8()
{
}

uint64_t sub_10031CD18(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10000566C(a3);
  sub_1001F3BBC();
  uint64_t v4 = sub_10023C458();
  v5(v4);
  return a2;
}

void type metadata accessor for StackTracker()
{
}

void sub_10031CD78()
{
}

void sub_10031CD90()
{
}

uint64_t sub_10031CDA8()
{
  return sub_10031C17C();
}

void sub_10031CDC0()
{
}

void sub_10031CDD8()
{
}

void sub_10031CDF0()
{
}

void sub_10031CE08()
{
}

void sub_10031CE20()
{
}

uint64_t sub_10031CE38@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10031BB94(a1, a2, a3);
}

uint64_t sub_10031CE50@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10031C038(a1, a2, a3);
}

_OWORD *sub_10031CE68@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _OWORD *a3@<X8>)
{
  return sub_1002F31F4(a1, a2, a3);
}

void sub_10031CE80()
{
}

void sub_10031CE98()
{
}

uint64_t sub_10031CEB0()
{
  return sub_10031C7A0();
}

void sub_10031CEC8()
{
}

void *sub_10031CFC8@<X0>(uint64_t a1@<X8>)
{
  return sub_10031213C(a1);
}

uint64_t sub_10031CFE0()
{
  return sub_1002F30E4();
}

void *sub_10031CFF8@<X0>(uint64_t a1@<X8>)
{
  return sub_10031C0C4(a1);
}

uint64_t sub_10031D010()
{
  return sub_10031C428();
}

uint64_t sub_10031D028()
{
  return sub_10031C4E8();
}

void *sub_10031D040@<X0>(uint64_t a1@<X8>)
{
  return sub_10031CA14(a1);
}

uint64_t sub_10031D058@<X0>(uint64_t a1@<X8>)
{
  return sub_10031CA68(a1);
}

void sub_10031D070()
{
  sub_10031E1C0();
}

uint64_t sub_10031D0A0(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_10031D0B8()
{
  return v0;
}

uint64_t sub_10031D0F8()
{
  return swift_dynamicCast();
}

uint64_t sub_10031D118()
{
  return swift_dynamicCast();
}

void sub_10031D138()
{
  sub_10031E1C0();
}

uint64_t sub_10031D174()
{
  return swift_retain();
}

uint64_t sub_10031D1A4()
{
  return v0;
}

uint64_t sub_10031D1FC()
{
  return swift_retain();
}

void sub_10031D234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10)
{
  *(void *)uint64_t v11 = v10;
  *(void *)(v11 + 8) = v14;
  *(_DWORD *)(v11 + 16) = v12;
  *(_WORD *)(v11 + 20) = v13;
  *(unsigned char *)(v11 + 22) = a10;
}

uint64_t sub_10031D274()
{
  return swift_retain();
}

uint64_t sub_10031D2B4(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(void *)uint64_t v3 = result;
  *(void *)(v3 + 8) = a2;
  *(_DWORD *)(v3 + 16) = a3;
  *(unsigned char *)(v3 + 22) = BYTE6(a3);
  *(_WORD *)(v3 + 20) = WORD2(a3);
  return result;
}

uint64_t sub_10031D2D0(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(void *)uint64_t v3 = result;
  *(void *)(v3 + 8) = a2;
  *(_DWORD *)(v3 + 16) = a3;
  *(_WORD *)(v3 + 20) = WORD2(a3);
  *(unsigned char *)(v3 + 22) = BYTE6(a3);
  return result;
}

uint64_t sub_10031D2F4()
{
  return v0;
}

uint64_t sub_10031D314()
{
  return v0;
}

uint64_t sub_10031D354@<X0>(uint64_t a1@<X8>)
{
  if (v1) {
    return a1;
  }
  return result;
}

uint64_t sub_10031D360()
{
  *(void *)(v1 - 88) = v0;
  return swift_allocObject();
}

uint64_t sub_10031D3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return a7;
}

uint64_t sub_10031D3DC()
{
  return swift_retain();
}

uint64_t sub_10031D408()
{
  return 41;
}

void sub_10031D41C()
{
  sub_10031E1C0();
}

uint64_t sub_10031D440()
{
  *(void *)(v1 - 88) = v0;
  return swift_errorRetain();
}

uint64_t sub_10031D458()
{
  return swift_errorRetain();
}

uint64_t sub_10031D470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t sub_10031D48C()
{
  return v0;
}

uint64_t sub_10031D4E0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10031D524()
{
  return swift_retain();
}

void sub_10031D568()
{
  sub_10031E1C0();
}

uint64_t sub_10031D5B8()
{
  return v0;
}

uint64_t sub_10031D5D4()
{
  return v0;
}

void sub_10031D610()
{
  sub_10031E1C0();
}

uint64_t sub_10031D638()
{
  return sub_1005E3230();
}

uint64_t sub_10031D654(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 32) = result;
  *(void *)(v3 + 40) = a2;
  *(_DWORD *)(v3 + 48) = a3;
  *(_WORD *)(v3 + 52) = WORD2(a3);
  *(unsigned char *)(v3 + 54) = BYTE6(a3);
  *(void *)(v4 - 72) = v3;
  return result;
}

void sub_10031D68C()
{
  *(void *)(v0 + 8) = v4;
  *(_DWORD *)(v0 + 16) = v1;
  *(_WORD *)(v0 + 20) = v2;
  *(unsigned char *)(v0 + 22) = v3;
}

void sub_10031D6A0(void *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
}

__n128 *sub_10031D6C0(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

void sub_10031D700()
{
  *(void *)uint64_t v0 = v1;
  *(void *)(v0 + 8) = v5;
  *(_DWORD *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 20) = v3;
  *(unsigned char *)(v0 + 22) = v4;
}

uint64_t sub_10031D718()
{
  return sub_1005E3290();
}

void sub_10031D74C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10031E2BC(a1, a2, a3);
}

void sub_10031D780()
{
  *(void *)uint64_t v0 = v1;
  *(void *)(v0 + 8) = v5;
  *(_DWORD *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 20) = v3;
  *(unsigned char *)(v0 + 22) = v4;
}

uint64_t sub_10031D7A8()
{
  return v0;
}

void sub_10031D7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  v14[2] = a14;
  v14[3] = a13;
  v14[4] = a12;
  unsigned char v14[5] = a11;
  v14[6] = a10;
}

uint64_t sub_10031D7FC()
{
  return v0;
}

uint64_t sub_10031D83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va1, a5);
  va_start(va, a5);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  return sub_10033C780(a1, (uint64_t)va1, a3, (uint64_t)va);
}

uint64_t sub_10031D86C()
{
  return v0;
}

void sub_10031D890()
{
  sub_10030A038();
}

uint64_t sub_10031D938()
{
  return v0;
}

uint64_t sub_10031D9B0()
{
  return v0;
}

uint64_t sub_10031D9D0()
{
  return sub_1005E3290();
}

uint64_t sub_10031D9EC()
{
  return v0;
}

void sub_10031DA00(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = (v2 - 32) | 0x8000000000000000;
}

uint64_t sub_10031DA10()
{
  return 40;
}

uint64_t sub_10031DA38()
{
  return v0;
}

void sub_10031DA58()
{
  sub_1005E2C80(26);
}

uint64_t sub_10031DA78()
{
  return 34;
}

uint64_t sub_10031DB04()
{
  *(void *)(v0 + 16) = 0;
  return swift_release();
}

void sub_10031DB28()
{
  *(void *)(v1 - 72) = v0;
}

uint64_t sub_10031DB34()
{
  return *(void *)(v0 - 72);
}

void sub_10031DB40(uint64_t a1, void *a2)
{
  *a2 = v2;
}

uint64_t sub_10031DB4C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10031DB68()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10031DB84()
{
  return swift_release();
}

uint64_t sub_10031DBFC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10031DC18()
{
  *(void *)(v1 - 104) = v0;
  return 0;
}

uint64_t sub_10031DC30()
{
  return swift_bridgeObjectRelease();
}

void sub_10031DC4C()
{
  sub_100309C60();
}

void sub_10031DC8C(void *a1@<X1>, uint64_t a2@<X8>)
{
  a1[2] = a2;
  a1[3] = (v2 - 32) | 0x8000000000000000;
  a1[4] = 167;
}

void sub_10031DCA4()
{
  *(void *)uint64_t v0 = v1;
  int v3 = *(_DWORD *)(v2 - 216);
  *(_DWORD *)(v0 + 8) = *(_DWORD *)(v2 - 220);
  *(_DWORD *)(v0 + 12) = v3;
}

void sub_10031DCCC()
{
  sub_10030AA50();
}

void sub_10031DCE8()
{
  sub_10031E1C0();
}

void sub_10031DD04()
{
  *(void *)uint64_t v0 = v4;
  *(_DWORD *)(v0 + 8) = v6;
  *(_DWORD *)(v0 + 12) = v2;
  *(_DWORD *)(v0 + 16) = v5;
  *(_WORD *)(v0 + 20) = v3;
  *(unsigned char *)(v0 + 22) = v1;
}

void sub_10031DD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 - 96) = &a9;
}

void sub_10031DD38()
{
  v1._countAndFlagsBits = 11838;
  v1._object = (void *)0xE200000000000000;
  sub_1005E1E30(v1);
}

void sub_10031DD54()
{
  v1._countAndFlagsBits = 46;
  v1._object = (void *)0xE100000000000000;
  sub_1005E1E30(v1);
}

void sub_10031DD80()
{
  sub_10031E1C0();
}

void sub_10031DD98()
{
  *(void *)uint64_t v1 = v6;
  *(_DWORD *)(v1 + 8) = v2;
  *(_DWORD *)(v1 + 12) = v3;
  *(_DWORD *)(v1 + 16) = v5;
  *(_WORD *)(v1 + 20) = v4;
  *(unsigned char *)(v1 + 22) = v0;
}

uint64_t sub_10031DDE0()
{
  return 0;
}

uint64_t sub_10031DDF8()
{
  return 0;
}

uint64_t sub_10031DE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(v6 - 152);
  uint64_t v9 = *(void *)(v6 - 144);
  uint64_t v10 = *(void *)(v6 - 136);
  return sub_10031754C(a1, a2, a3, v5, a5, v8, v9, v10);
}

uint64_t sub_10031DE68@<X0>(const void *a1@<X0>, size_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = (const void *)(*a3 + v4 + *(void *)(v3 + 144));
  return memcmp(a1, v6, a2);
}

uint64_t sub_10031DE88()
{
  return v0;
}

void *sub_10031DEA8(void *result)
{
  result[2] = v4;
  result[3] = v3;
  result[4] = v2;
  result[5] = v1;
  return result;
}

uint64_t sub_10031DEB4()
{
  return v0;
}

void sub_10031DEC8(uint64_t a1, void *a2)
{
  *a2 = v2;
}

uint64_t sub_10031DEE0()
{
  return swift_setDeallocating();
}

void sub_10031DEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 - 48) = a4;
  *(void *)(v7 - 40) = a5;
  *(void *)(v7 - 32) = a6;
  *(void *)(v7 - 24) = a7;
}

void sub_10031DF0C(Swift::String a1)
{
  sub_1005E1E30(a1);
}

uint64_t sub_10031DF30()
{
  return v0;
}

uint64_t sub_10031DF44()
{
  return v0;
}

void sub_10031DF80()
{
  sub_10031E1C0();
}

unint64_t sub_10031DFA0(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_1002368B8(a1, a2, 10);
    char v3 = v24;
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0) {
      uint64_t v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v8 = (unsigned __int8 *)sub_1005E2D30();
    }
    unint64_t v9 = (unint64_t)sub_100236888(v8, v6);
    char v3 = v10 & 1;
    goto LABEL_39;
  }
  if (a1 == 43)
  {
    if (!v5) {
      goto LABEL_52;
    }
    if (v5 == 1) {
      goto LABEL_36;
    }
    sub_100237288();
    if (!v14 && v13) {
      goto LABEL_36;
    }
    unint64_t v9 = v18;
    if (v17 != 2)
    {
      while (1)
      {
        sub_100237298();
        if (!v14 && v13) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v9, v19)) {
          goto LABEL_36;
        }
        BOOL v13 = __CFADD__(10 * v9, v20);
        unint64_t v9 = 10 * v9 + v20;
        if (v13) {
          goto LABEL_36;
        }
        sub_1002372A8();
        if (v14) {
          goto LABEL_39;
        }
      }
    }
LABEL_38:
    char v3 = 0;
    goto LABEL_39;
  }
  if (a1 != 45)
  {
    if (!v5 || (a1 - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v9 = (a1 - 48);
    if (v5 != 1)
    {
      while (1)
      {
        sub_100237298();
        if (!v14 && v13) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v9, v22)) {
          goto LABEL_36;
        }
        BOOL v13 = __CFADD__(10 * v9, v23);
        unint64_t v9 = 10 * v9 + v23;
        if (v13) {
          goto LABEL_36;
        }
        sub_1002372A8();
        if (v14) {
          goto LABEL_39;
        }
      }
    }
    goto LABEL_38;
  }
  if (v5)
  {
    if (v5 != 1)
    {
      sub_100237288();
      if (v14 || !v13)
      {
        unint64_t v2 = 0;
        unint64_t v9 = -(uint64_t)v12;
        if (!v12)
        {
          if (v11 != 2)
          {
            while (1)
            {
              sub_100237298();
              if (!v14 && v13) {
                goto LABEL_36;
              }
              if (!is_mul_ok(v9, v15)) {
                goto LABEL_36;
              }
              BOOL v13 = 10 * v9 >= v16;
              unint64_t v9 = 10 * v9 - v16;
              if (!v13) {
                goto LABEL_36;
              }
              sub_1002372A8();
              if (v14) {
                goto LABEL_39;
              }
            }
          }
          goto LABEL_38;
        }
        goto LABEL_53;
      }
    }
LABEL_36:
    unint64_t v9 = 0;
    char v3 = 1;
    goto LABEL_39;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  char v3 = 1;
  unint64_t v9 = v2;
LABEL_39:
  swift_bridgeObjectRelease();
  if (v3) {
    return 0;
  }
  else {
    return v9;
  }
}

void sub_10031E1C0()
{
  sub_10033B078();
  uint64_t v8 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    uint64_t v9 = v6;
    if (v8 >= v6)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *unsigned __int8 v18 = v9;
    }
    else
    {
      uint64_t v10 = v5;
      char v11 = v4;
      char v12 = v3;
      unint64_t v13 = v2;
      unint64_t v14 = v1;
      uint64_t v15 = *(void *)v5;
      uint64_t v16 = *(void *)(v5 + 8);
      int v17 = *(_DWORD *)(v5 + 16);
      char v19 = *(unsigned char *)(v5 + 22);
      v20[0] = *(_WORD *)(v5 + 20);
      swift_retain();
      sub_100338020(v10, v8, v9, v11 & 1, v14, v13, v12 & 1);
      if (!v0)
      {
        swift_release();
        goto LABEL_7;
      }
      swift_release();
      *(void *)uint64_t v10 = v15;
      *(void *)(v10 + 8) = v16;
      *(_DWORD *)(v10 + 16) = v17;
      *(_WORD *)(v10 + 20) = v20[0];
      *(unsigned char *)(v10 + 22) = v19;
    }
    swift_willThrow();
LABEL_7:
    sub_10033B058();
    return;
  }
  __break(1u);
}

void sub_10031E2BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v4 = __OFADD__(a2, 1);
  uint64_t v5 = a2 + 1;
  if (v4)
  {
    __break(1u);
    return;
  }
  if (v5 >= a3)
  {
    sub_1002DB5BC();
    sub_10020DD10();
    void *v7 = a3;
  }
  else
  {
    sub_100337E64();
    if (!v3) {
      return;
    }
    sub_10031D700();
  }
  swift_willThrow();
}

uint64_t sub_10031E368(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (HIDWORD(a2) < a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a3 - (BYTE6(a3) | (WORD2(a3) << 8)) < HIDWORD(a2))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v19 = v6;
  uint64_t v20 = v7;
  v13[0] = result;
  v13[1] = a2;
  int v14 = a3;
  __int16 v15 = WORD2(a3);
  char v16 = BYTE6(a3);
  uint64_t v17 = a2;
  unint64_t v18 = HIDWORD(a2);
  swift_retain();
  uint64_t result = sub_1002934A8((uint64_t)v13);
  if (!v11)
  {
    sub_100296090();
    sub_10020DD10();
    strcpy(v12, "Invalid UTF8");
    v12[13] = 0;
    *((_WORD *)v12 + 7) = -5120;
    *((void *)v12 + 2) = a4;
    *((void *)v12 + 3) = a5;
    *((void *)v12 + 4) = a6;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_10031E454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10031E46C(a1, a2, a3, a4, a5);
}

#error "10031E4B4: call analysis failed (funcsize=37)"

uint64_t sub_10031E504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031EFE0(a1, a2, a3, a4, a5, a6, sub_100336260);
}

uint64_t sub_10031E530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031F0C4(a1, a2, a3, a4, a5, a6, sub_10032FA10);
}

uint64_t sub_10031E55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031EFE0(a1, a2, a3, a4, a5, a6, sub_100335C14);
}

uint64_t sub_10031E588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031F0C4(a1, a2, a3, a4, a5, a6, sub_1003322C0);
}

#error "10031E668: call analysis failed (funcsize=72)"

uint64_t sub_10031E6D8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v6 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *int v14 = a3;
      return swift_willThrow();
    }
    uint64_t v10 = result;
    uint64_t v11 = *(void *)result;
    uint64_t v12 = *(void *)(result + 8);
    int v13 = *(_DWORD *)(result + 16);
    char v15 = *(unsigned char *)(result + 22);
    __int16 v16 = *(_WORD *)(result + 20);
    swift_retain();
    sub_1003359E8(v10, v6, a3, a4, a5);
    if (v5)
    {
      swift_release();
      *(void *)uint64_t v10 = v11;
      *(void *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v13;
      *(_WORD *)(v10 + 20) = v16;
      *(unsigned char *)(v10 + 22) = v15;
      return swift_willThrow();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_10031E7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031F0C4(a1, a2, a3, a4, a5, a6, sub_100330918);
}

uint64_t sub_10031E828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031F0C4(a1, a2, a3, a4, a5, a6, sub_100330B40);
}

void sub_10031E854()
{
}

void sub_10031E894()
{
  sub_1002E84C4();
  uint64_t v9 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    uint64_t v10 = v2;
    if (v9 >= v2)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *unint64_t v18 = v10;
    }
    else
    {
      uint64_t v11 = v5;
      uint64_t v12 = v4;
      uint64_t v13 = v3;
      int v14 = v1;
      uint64_t v15 = v1[1];
      __int16 v20 = *((_WORD *)v1 + 10);
      int v21 = *((_DWORD *)v1 + 4);
      char v19 = *((unsigned char *)v1 + 22);
      uint64_t v22 = *v1;
      __int16 v16 = v7;
      uint64_t v17 = v6;
      swift_retain();
      v16(v14, v9, v10, v13, v12, v11, v17);
      if (!v0)
      {
        swift_release();
        goto LABEL_7;
      }
      swift_release();
      *int v14 = v22;
      v14[1] = v15;
      *((_DWORD *)v14 + 4) = v21;
      *((_WORD *)v14 + 10) = v20;
      *((unsigned char *)v14 + 22) = v19;
    }
    swift_willThrow();
LABEL_7:
    sub_1002E84E4();
    return;
  }
  __break(1u);
}

uint64_t sub_10031E9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031F0C4(a1, a2, a3, a4, a5, a6, sub_100331168);
}

uint64_t sub_10031E9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031EFE0(a1, a2, a3, a4, a5, a6, sub_1003365DC);
}

uint64_t sub_10031EA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031F0C4(a1, a2, a3, a4, a5, a6, sub_10033154C);
}

uint64_t sub_10031EA30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031F0C4(a1, a2, a3, a4, a5, a6, sub_10033178C);
}

uint64_t sub_10031EA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031F0C4(a1, a2, a3, a4, a5, a6, sub_1003319F0);
}

uint64_t sub_10031EA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031F0C4(a1, a2, a3, a4, a5, a6, sub_100332C50);
}

uint64_t sub_10031EAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031EFE0(a1, a2, a3, a4, a5, a6, sub_1003367E8);
}

uint64_t sub_10031EAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031F0C4(a1, a2, a3, a4, a5, a6, sub_100332E50);
}

uint64_t sub_10031EB0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031F0C4(a1, a2, a3, a4, a5, a6, sub_100333070);
}

uint64_t sub_10031EB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031EFE0(a1, a2, a3, a4, a5, a6, sub_100336B78);
}

void sub_10031EB64()
{
}

void sub_10031EBA4()
{
}

uint64_t sub_10031EBE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031F0C4(a1, a2, a3, a4, a5, a6, sub_10033409C);
}

void sub_10031EC10()
{
}

void sub_10031EC50()
{
}

uint64_t sub_10031EC90(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v4 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      uint64_t *v12 = a3;
      return swift_willThrow();
    }
    uint64_t v6 = result;
    uint64_t v7 = *(void *)result;
    uint64_t v8 = *(void *)(result + 8);
    int v9 = *(_DWORD *)(result + 16);
    __int16 v10 = *(_WORD *)(result + 20);
    char v11 = *(unsigned char *)(result + 22);
    swift_retain();
    sub_10032D678(43, 0xE100000000000000, v6, v4, a3);
    if (v3)
    {
      swift_release();
      *(void *)uint64_t v6 = v7;
      *(void *)(v6 + 8) = v8;
      *(_DWORD *)(v6 + 16) = v9;
      *(_WORD *)(v6 + 20) = v10;
      *(unsigned char *)(v6 + 22) = v11;
      return swift_willThrow();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_10031ED80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031EFE0(a1, a2, a3, a4, a5, a6, sub_100335DB0);
}

#error "10031EDE0: call analysis failed (funcsize=42)"

#error "10031EE8C: call analysis failed (funcsize=42)"

uint64_t sub_10031EF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031F0C4(a1, a2, a3, a4, a5, a6, sub_100334D78);
}

uint64_t sub_10031EF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031EFE0(a1, a2, a3, a4, a5, a6, sub_100337010);
}

uint64_t sub_10031EF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031F0C4(a1, a2, a3, a4, a5, a6, sub_10033515C);
}

uint64_t sub_10031EF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031F0C4(a1, a2, a3, a4, a5, a6, sub_10033539C);
}

uint64_t sub_10031EFB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031EFE0(a1, a2, a3, a4, a5, a6, sub_1003376B8);
}

#error "10031F044: call analysis failed (funcsize=45)"

uint64_t sub_10031F098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10031F0C4(a1, a2, a3, a4, a5, a6, sub_100335604);
}

#error "10031F128: call analysis failed (funcsize=45)"

uint64_t sub_10031F17C(uint64_t a1)
{
  return sub_10031F1E4(a1);
}

uint64_t sub_10031F1B0(uint64_t a1)
{
  return sub_10031F1E4(a1);
}

#error "10031F290: call analysis failed (funcsize=65)"

void sub_10031F2EC()
{
  sub_10033B5B4();
  uint64_t v5 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    uint64_t v6 = v2;
    if (v5 >= v2)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *__int16 v10 = v6;
    }
    else
    {
      uint64_t v7 = v3;
      uint64_t v8 = v1;
      uint64_t v9 = *v1;
      swift_retain();
      v7(v8, v5, v6);
      if (!v0)
      {
        swift_release();
        goto LABEL_7;
      }
      swift_release();
      void *v8 = v9;
      sub_10033C0FC();
    }
    swift_willThrow();
LABEL_7:
    sub_10031D59C();
    return;
  }
  __break(1u);
}

uint64_t sub_10031F3C0()
{
  return sub_10031F3D8();
}

#error "10031F468: call analysis failed (funcsize=38)"

void sub_10031F474(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_10031F4A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_10031F4CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v4 = __OFADD__(a2, 1);
  uint64_t v5 = a2 + 1;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    if (v5 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v15 = sub_10020DD10();
      sub_10031DB40(v15, v16);
      goto LABEL_6;
    }
    sub_10033BE78();
    uint64_t v7 = v6();
    if (v3)
    {
      sub_10033C488();
LABEL_6:
      swift_willThrow();
      return;
    }
    sub_10031D470(v7, v8, v9, v10, v11, v12, v13, v14, v17, v18);
  }
}

void sub_10031F570(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_10031F59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v4 = __OFADD__(a2, 1);
  uint64_t v5 = a2 + 1;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    if (v5 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v17 = sub_10020DD10();
      sub_10031DB40(v17, v18);
      goto LABEL_6;
    }
    sub_10033BE78();
    uint64_t v9 = sub_10032E448(v6, v7, v8);
    if (v3)
    {
      sub_10033C488();
LABEL_6:
      swift_willThrow();
      return;
    }
    sub_10031D470(v9, v10, v11, v12, v13, v14, v15, v16, v19, v20);
  }
}

void sub_10031F63C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_10031F668(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_10031F694(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_10031F6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10031F770(a1, a2, a3, a4, a5, a6, a7, sub_100310A5C);
}

void sub_10031F6EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_10031F718(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_10031F744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10031F770(a1, a2, a3, a4, a5, a6, a7, sub_100310B64);
}

#error "10031F7BC: call analysis failed (funcsize=48)"

uint64_t *sub_10031F834(uint64_t *result, uint64_t a2, uint64_t a3)
{
  if (!__OFADD__(a2, 1))
  {
    uint64_t v4 = a3;
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      void *v8 = v4;
    }
    else
    {
      uint64_t v5 = result;
      uint64_t v6 = *result;
      uint64_t v7 = result[1];
      __int16 v11 = *((_WORD *)result + 10);
      int v12 = *((_DWORD *)result + 4);
      char v10 = *((unsigned char *)result + 22);
      swift_retain();
      sub_10031E1C0();
      if (!v3)
      {
        sub_100308E48();
        uint64_t v4 = v9;
        swift_release();
        swift_release();
        return (uint64_t *)v4;
      }
      swift_release();
      *uint64_t v5 = v6;
      v5[1] = v7;
      *((_DWORD *)v5 + 4) = v12;
      *((_WORD *)v5 + 10) = v11;
      *((unsigned char *)v5 + 22) = v10;
    }
    swift_willThrow();
    swift_release();
    return (uint64_t *)v4;
  }
  __break(1u);
  return result;
}

uint64_t sub_10031F9B4()
{
  return sub_10031F9CC();
}

#error "10031FA5C: call analysis failed (funcsize=38)"

void sub_10031FA68()
{
  sub_10033B078();
  if (!__OFADD__(v4, 1))
  {
    sub_10033B8F8();
    if (v5 != v6)
    {
      sub_10033C5DC();
      int v8 = *(_DWORD *)(v7 + 16);
      __int16 v9 = *(_WORD *)(v7 + 20);
      v16[0] = *(unsigned char *)(v7 + 22);
      swift_retain();
      sub_10033C4CC();
      sub_1003298A8();
      if (!v1)
      {
        sub_10033B854();
        if (((unint64_t)sub_10033BB4C() & 0x8000000000000000) == 0)
        {
          sub_10033C080();
          sub_1003298A8();
          sub_10033B854();
          sub_10033C080();
          sub_10032964C();
          swift_release();
          swift_release();
          goto LABEL_8;
        }
        sub_100296090();
        sub_10020DD10();
        sub_10033BC20();
        sub_10031D6A0(v12, v13);
        sub_1002E1EC4(v14, v15);
      }
      swift_release();
      *(void *)uint64_t v0 = v2;
      *(void *)(v0 + 8) = v3;
      *(_DWORD *)(v0 + 16) = v8;
      *(_WORD *)(v0 + 20) = v9;
      *(unsigned char *)(v0 + 22) = v16[0];
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v10 = sub_10020DD10();
      sub_10033C580(v10, v11);
    }
    swift_willThrow();
    swift_release();
LABEL_8:
    sub_10033B058();
    return;
  }
  __break(1u);
}

#error "10031FC48: call analysis failed (funcsize=40)"

#error "10031FD1C: call analysis failed (funcsize=61)"

void sub_10031FD9C(uint64_t a1, uint64_t a2)
{
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    sub_10033C5B4();
    if (v6 != v7)
    {
      int v8 = v4;
      __int16 v9 = v5;
      uint64_t v10 = *v4;
      sub_10033BA60();
      swift_retain();
      swift_retain();
      uint64_t v11 = sub_10033C274();
      sub_10031FCA4(v11);
      if (!v2)
      {
        uint64_t v12 = sub_10033BB70();
        sub_10031E2BC(v12, v13, v14);
        sub_10031E1C0();
        swift_release();
        swift_release();
        *__int16 v9 = v29;
        v9[1] = v30;
        v9[2] = v31;
        return;
      }
      uint64_t v16 = swift_release();
      void *v8 = v10;
      sub_10033B8D8(v16, v17, v18, v19, v20, v21, v22, v23, v24, *(int *)v25, v25[4], v26, v27, v28);
    }
    else
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *uint64_t v15 = v3;
    }
    swift_willThrow();
    swift_release();
  }
}

#error "10031FFEC: call analysis failed (funcsize=42)"

#error "10032011C: call analysis failed (funcsize=75)"

uint64_t sub_100320180(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v24 = v7;
    uint64_t v25 = v5;
    uint64_t v26 = v6;
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v16 = a3;
    }
    else
    {
      uint64_t v9 = result;
      uint64_t v21 = a4;
      uint64_t v10 = *(void *)result;
      uint64_t v11 = *(void *)(result + 8);
      int v12 = *(_DWORD *)(result + 16);
      int v19 = *(unsigned __int16 *)(result + 20);
      int v20 = v12;
      int v18 = *(unsigned __int8 *)(result + 22);
      sub_10000566C(&qword_1007106B0);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1005F6670;
      uint64_t v22 = v10;
      swift_retain();
      sub_10030DFB0();
      if (!v4)
      {
        uint64_t v17 = (uint64_t)&v17;
        *(void *)(v13 + 32) = v14;
        *(void *)(v13 + 40) = v15;
        uint64_t v23 = v13;
        __chkstk_darwin(v14);
        sub_10031E894();
        swift_release();
        swift_release();
        return v23;
      }
      *(void *)(v13 + 16) = 0;
      swift_release();
      swift_release();
      *(void *)uint64_t v9 = v22;
      *(void *)(v9 + 8) = v11;
      *(_DWORD *)(v9 + 16) = v20;
      *(_WORD *)(v9 + 20) = v19;
      *(unsigned char *)(v9 + 22) = v18;
    }
    swift_willThrow();
    return swift_release();
  }
  return result;
}

#error "100320420: call analysis failed (funcsize=40)"

#error "1003204C4: call analysis failed (funcsize=40)"

void sub_100320520()
{
}

uint64_t sub_100320538()
{
  return sub_100320550();
}

#error "1003205E0: call analysis failed (funcsize=38)"

uint64_t sub_1003205EC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      void *v8 = a3;
    }
    else
    {
      uint64_t v5 = result;
      uint64_t v6 = *(void *)result;
      uint64_t v7 = *(void *)(result + 8);
      __int16 v10 = *(_WORD *)(result + 20);
      int v11 = *(_DWORD *)(result + 16);
      char v9 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_1002DE920();
      if (!v3)
      {
        swift_release();
        return swift_release();
      }
      swift_release();
      *(void *)uint64_t v5 = v6;
      *(void *)(v5 + 8) = v7;
      *(_DWORD *)(v5 + 16) = v11;
      *(_WORD *)(v5 + 20) = v10;
      *(unsigned char *)(v5 + 22) = v9;
    }
    swift_willThrow();
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_10032072C()
{
  return sub_100320744();
}

#error "100320790: call analysis failed (funcsize=42)"

uint64_t sub_1003207F0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v17 = a3;
    }
    else
    {
      uint64_t v14 = result;
      uint64_t v15 = *(void *)result;
      uint64_t v16 = *(void *)(result + 8);
      __int16 v20 = *(_WORD *)(result + 20);
      int v21 = *(_DWORD *)(result + 16);
      char v19 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_10031E2BC(v14, v9, a3);
      if (!v7)
      {
        uint64_t v8 = sub_1002DFAE4(v14, v9, a3, a4, a5, a6, a7);
        swift_retain();
        sub_10032A454(v14, v9, a3, a4, a5, a6);
        swift_release();
        swift_release();
        return v8;
      }
      swift_release();
      *(void *)uint64_t v14 = v15;
      *(void *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v21;
      *(_WORD *)(v14 + 20) = v20;
      *(unsigned char *)(v14 + 22) = v19;
    }
    swift_willThrow();
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003209A4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *char v19 = a3;
    }
    else
    {
      uint64_t v15 = result;
      uint64_t v17 = *(void *)result;
      uint64_t v18 = *(void *)(result + 8);
      __int16 v21 = *(_WORD *)(result + 20);
      int v22 = *(_DWORD *)(result + 16);
      char v20 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_1002DEA50(v15, v9, a3, a4, a5, a6, a7, a8);
      if (!v8)
      {
        swift_release();
        return swift_release();
      }
      swift_release();
      *(void *)uint64_t v15 = v17;
      *(void *)(v15 + 8) = v18;
      *(_DWORD *)(v15 + 16) = v22;
      *(_WORD *)(v15 + 20) = v21;
      *(unsigned char *)(v15 + 22) = v20;
    }
    swift_willThrow();
    return swift_release();
  }
  __break(1u);
  return result;
}

#error "100320B2C: call analysis failed (funcsize=40)"

void sub_100320B88()
{
}

uint64_t sub_100320BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100328FB4(a1, a2, a3, a4, a5, a6, a7, sub_1002FCBE8);
}

uint64_t sub_100320BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100328FB4(a1, a2, a3, a4, a5, a6, a7, sub_10030E2F0);
}

uint64_t *sub_100320BF8(uint64_t *result, uint64_t a2, uint64_t a3)
{
  if (!__OFADD__(a2, 1))
  {
    uint64_t v4 = a3;
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *__int16 v10 = v4;
    }
    else
    {
      uint64_t v5 = result;
      uint64_t v6 = *result;
      uint64_t v7 = result[1];
      int v8 = *((_DWORD *)result + 4);
      char v11 = *((unsigned char *)result + 22);
      __int16 v12 = *((_WORD *)result + 10);
      swift_retain();
      sub_100318210();
      if (!v3)
      {
        uint64_t v4 = v9;
        swift_release();
        swift_release();
        return (uint64_t *)v4;
      }
      swift_release();
      *uint64_t v5 = v6;
      v5[1] = v7;
      *((_DWORD *)v5 + 4) = v8;
      *((_WORD *)v5 + 10) = v12;
      *((unsigned char *)v5 + 22) = v11;
    }
    swift_willThrow();
    swift_release();
    return (uint64_t *)v4;
  }
  __break(1u);
  return result;
}

void sub_100320D34()
{
}

void sub_100320D4C()
{
  sub_10033B078();
  if (!__OFADD__(v2, 1))
  {
    sub_10033B4C0();
    if (v3 != v4)
    {
      sub_10033B10C();
      uint64_t v5 = sub_10033B1D8();
      v0(v5);
      if (!v1)
      {
        swift_release();
        goto LABEL_7;
      }
      swift_release();
      sub_10033B184();
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v6 = sub_10020DD10();
      sub_10031DB40(v6, v7);
    }
    swift_willThrow();
LABEL_7:
    sub_10033B058();
    return;
  }
  __break(1u);
}

uint64_t sub_100320DE8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v17 = a3;
    }
    else
    {
      uint64_t v8 = a6;
      uint64_t v14 = result;
      uint64_t v15 = *(void *)result;
      uint64_t v16 = *(void *)(result + 8);
      __int16 v19 = *(_WORD *)(result + 20);
      int v20 = *(_DWORD *)(result + 16);
      char v18 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_10031E1C0();
      if (!v7)
      {
        uint64_t v8 = sub_10030B43C(v14, v9, a3, a4, a5, v8, a7);
        sub_10031E2BC(v14, v9, a3);
        swift_release();
        swift_release();
        return v8;
      }
      swift_release();
      *(void *)uint64_t v14 = v15;
      *(void *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v20;
      *(_WORD *)(v14 + 20) = v19;
      *(unsigned char *)(v14 + 22) = v18;
    }
    swift_willThrow();
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

#error "100321014: call analysis failed (funcsize=65)"

uint64_t sub_100321098(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v4 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v15 = a3;
    }
    else
    {
      uint64_t v6 = result;
      uint64_t v7 = *(void *)result;
      uint64_t v8 = *(void *)(result + 8);
      int v9 = *(_DWORD *)(result + 16);
      __int16 v10 = *(_WORD *)(result + 20);
      char v11 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_10031E2BC(v6, v4, a3);
      if (!v3)
      {
        sub_10031F4CC(v6, v4, a3);
        uint64_t v4 = sub_10031E368(v13, v14, v12 & 0xFFFFFFFFFFFFFFLL, 0xD000000000000020, 0x80000001005E63C0, 318);
        swift_release();
        swift_release();
        return v4;
      }
      swift_release();
      *(void *)uint64_t v6 = v7;
      *(void *)(v6 + 8) = v8;
      *(_DWORD *)(v6 + 16) = v9;
      *(_WORD *)(v6 + 20) = v10;
      *(unsigned char *)(v6 + 22) = v11;
    }
    swift_willThrow();
    return v4;
  }
  __break(1u);
  return result;
}

#error "100321254: call analysis failed (funcsize=43)"

#error "100321304: call analysis failed (funcsize=40)"

#error "1003213DC: call analysis failed (funcsize=53)"

uint64_t sub_100321444(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v5 = a3;
    if (v4 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *int v9 = v5;
    }
    else
    {
      uint64_t v6 = result;
      uint64_t v7 = *(void *)result;
      uint64_t v8 = *(void *)(result + 8);
      __int16 v12 = *(_WORD *)(result + 20);
      int v13 = *(_DWORD *)(result + 16);
      char v11 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_10031E2BC(v6, v4, v5);
      if (!v3)
      {
        sub_1002E1254();
        uint64_t v5 = v10;
        swift_release();
        swift_release();
        return v5;
      }
      swift_release();
      *(void *)uint64_t v6 = v7;
      *(void *)(v6 + 8) = v8;
      *(_DWORD *)(v6 + 16) = v13;
      *(_WORD *)(v6 + 20) = v12;
      *(unsigned char *)(v6 + 22) = v11;
    }
    swift_willThrow();
    swift_release();
    return v5;
  }
  __break(1u);
  return result;
}

#error "10032161C: call analysis failed (funcsize=48)"

void *sub_100321678(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *unint64_t v14 = a3;
    }
    else
    {
      uint64_t v8 = a7;
      uint64_t v10 = result;
      uint64_t v11 = *result;
      uint64_t v12 = result[1];
      __int16 v16 = *((_WORD *)result + 10);
      int v17 = *((_DWORD *)result + 4);
      char v15 = *((unsigned char *)result + 22);
      swift_retain();
      sub_10031E1C0();
      if (!v7)
      {
        swift_retain();
        sub_10032B618();
        if (v13) {
          uint64_t v8 = v13;
        }
        else {
          uint64_t v8 = _swiftEmptyArrayStorage;
        }
        sub_10031E1C0();
        swift_release();
        swift_release();
        return v8;
      }
      swift_release();
      *uint64_t v10 = v11;
      v10[1] = v12;
      *((_DWORD *)v10 + 4) = v17;
      *((_WORD *)v10 + 10) = v16;
      *((unsigned char *)v10 + 22) = v15;
    }
    swift_willThrow();
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_100321854(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v8 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *__int16 v19 = a3;
    }
    else
    {
      uint64_t v11 = result;
      uint64_t v27 = a7;
      uint64_t v12 = *(void *)result;
      uint64_t v13 = *(void *)(result + 8);
      int v14 = *(_DWORD *)(result + 16);
      int v23 = *(unsigned __int16 *)(result + 20);
      int v24 = v14;
      int v22 = *(unsigned __int8 *)(result + 22);
      uint64_t v25 = v7;
      sub_10000566C(&qword_100710720);
      type metadata accessor for SearchReturnOption();
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1005F6670;
      uint64_t v26 = v12;
      swift_retain();
      uint64_t v21 = a4;
      uint64_t v18 = sub_100306114();
      if (!v25)
      {
        uint64_t v28 = v17;
        __chkstk_darwin(v18);
        v20[2] = v21;
        v20[3] = a5;
        v20[4] = a6;
        v20[5] = v27;
        sub_10031F0C4(v11, v8, a3, sub_10033ACF4, v20, &v28, sub_100333AEC);
        swift_release();
        swift_release();
        return v28;
      }
      *(void *)(v17 + 16) = 0;
      swift_release();
      swift_release();
      *(void *)uint64_t v11 = v26;
      *(void *)(v11 + 8) = v13;
      *(_DWORD *)(v11 + 16) = v24;
      *(_WORD *)(v11 + 20) = v23;
      *(unsigned char *)(v11 + 22) = v22;
    }
    swift_willThrow();
    return swift_release();
  }
  return result;
}

uint64_t sub_100321AE0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v6 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v7 = a3;
    if (v6 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v17 = v7;
    }
    else
    {
      uint64_t v10 = result;
      uint64_t v11 = *(void *)result;
      uint64_t v12 = *(void *)(result + 8);
      int v13 = *(_DWORD *)(result + 16);
      __int16 v14 = *(_WORD *)(result + 20);
      char v18 = *(unsigned char *)(result + 22);
      swift_retain();
      uint64_t v15 = v7;
      uint64_t v7 = a5;
      uint64_t v16 = a4(v10, v6, v15);
      if (!v5)
      {
        uint64_t v7 = v16;
        swift_release();
        return v7;
      }
      swift_release();
      *(void *)uint64_t v10 = v11;
      *(void *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v13;
      *(_WORD *)(v10 + 20) = v14;
      *(unsigned char *)(v10 + 22) = v18;
    }
    swift_willThrow();
    return v7;
  }
  __break(1u);
  return result;
}

#error "100321C58: call analysis failed (funcsize=43)"

void sub_100321CC0()
{
  sub_10033B5B4();
  uint64_t v4 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    sub_10033BC48();
    if (v6 != v7)
    {
      uint64_t v8 = (uint64_t)v5;
      uint64_t v9 = *v5;
      sub_10033BA50();
      int v18 = v10;
      int v19 = v11;
      int v17 = *(unsigned __int8 *)(v12 + 22);
      swift_retain();
      sub_10033B9A0();
      if (!v0)
      {
        v16[1] = v16;
        __chkstk_darwin(v13);
        sub_10033C524();
        sub_10032D27C(v8, v4, v1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10033ACD8);
        sub_10033BFCC();
        swift_release();
        swift_release();
LABEL_8:
        sub_10031D59C();
        return;
      }
      swift_release();
      *(void *)uint64_t v8 = v9;
      *(void *)(v8 + 8) = v2;
      *(_DWORD *)(v8 + 16) = v19;
      *(_WORD *)(v8 + 20) = v18;
      *(unsigned char *)(v8 + 22) = v17;
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v14 = sub_10020DD10();
      sub_10033BE6C(v14, v15);
    }
    swift_willThrow();
    swift_release();
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_100321E28(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v5 = a3;
    if (v4 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v9 = v5;
    }
    else
    {
      uint64_t v6 = result;
      uint64_t v7 = *(void *)result;
      uint64_t v8 = *(void *)(result + 8);
      __int16 v11 = *(_WORD *)(result + 20);
      int v12 = *(_DWORD *)(result + 16);
      char v10 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_10031E2BC(v6, v4, v5);
      if (!v3)
      {
        uint64_t v5 = sub_10030A6D8();
        swift_release();
        swift_release();
        return v5;
      }
      swift_release();
      *(void *)uint64_t v6 = v7;
      *(void *)(v6 + 8) = v8;
      *(_DWORD *)(v6 + 16) = v12;
      *(_WORD *)(v6 + 20) = v11;
      *(unsigned char *)(v6 + 22) = v10;
    }
    swift_willThrow();
    swift_release();
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100321F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100328FB4(a1, a2, a3, a4, a5, a6, a7, sub_1002E7BE4);
}

uint64_t sub_100321FC4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v10 = a3;
    if (v8 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *int v19 = v10;
    }
    else
    {
      uint64_t v14 = result;
      uint64_t v15 = *(void *)result;
      uint64_t v16 = *(void *)(result + 8);
      int v17 = *(_DWORD *)(result + 16);
      char v20 = *(unsigned char *)(result + 22);
      __int16 v21 = *(_WORD *)(result + 20);
      swift_retain();
      swift_retain();
      uint64_t v18 = sub_100324B7C(v14, v8, v10, a4, a5, a6, a7, sub_100315948);
      if (!v7)
      {
        uint64_t v10 = v18;
        swift_release();
        swift_release();
        return v10;
      }
      swift_release();
      *(void *)uint64_t v14 = v15;
      *(void *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v17;
      *(_WORD *)(v14 + 20) = v21;
      *(unsigned char *)(v14 + 22) = v20;
    }
    swift_willThrow();
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

#error "100322194: call analysis failed (funcsize=48)"

void sub_1003221F0()
{
}

#error "1003222D8: call analysis failed (funcsize=74)"

#error "1003223DC: call analysis failed (funcsize=117)"

uint64_t sub_100322520(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *int v19 = a3;
    }
    else
    {
      uint64_t v8 = a6;
      uint64_t v14 = result;
      uint64_t v15 = *(void *)result;
      uint64_t v16 = *(void *)(result + 8);
      int v20 = *(_DWORD *)(result + 16);
      __int16 v21 = *(_WORD *)(result + 20);
      char v17 = *(unsigned char *)(result + 22);
      swift_retain();
      swift_retain();
      uint64_t v18 = sub_100328FB4(v14, v9, a3, a4, a5, v8, a7, sub_100311B38);
      if (!v7)
      {
        uint64_t v8 = v18;
        sub_10031E2BC(v14, v9, a3);
        swift_release();
        swift_release();
        return v8;
      }
      swift_release();
      *(void *)uint64_t v14 = v15;
      *(void *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v20;
      *(_WORD *)(v14 + 20) = v21;
      *(unsigned char *)(v14 + 22) = v17;
    }
    swift_willThrow();
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_10032269C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100324B7C(a1, a2, a3, a4, a5, a6, a7, sub_1002EA8EC);
}

#error "100322710: call analysis failed (funcsize=43)"

#error "1003227C0: call analysis failed (funcsize=40)"

#error "10032289C: call analysis failed (funcsize=54)"

void *sub_1003228F8(void *result, uint64_t a2, uint64_t a3)
{
  if (__OFADD__(a2, 1))
  {
    __break(1u);
    return result;
  }
  if (a2 + 1 >= a3)
  {
    sub_1002DB5BC();
    swift_allocError();
    *uint64_t v10 = a3;
    goto LABEL_7;
  }
  uint64_t v5 = result;
  uint64_t v6 = *result;
  uint64_t v7 = result[1];
  __int16 v12 = *((_WORD *)result + 10);
  int v13 = *((_DWORD *)result + 4);
  char v11 = *((unsigned char *)result + 22);
  swift_retain();
  sub_10031E1C0();
  if (v3)
  {
    swift_release();
    *uint64_t v5 = v6;
    v5[1] = v7;
    *((_DWORD *)v5 + 4) = v13;
    *((_WORD *)v5 + 10) = v12;
    *((unsigned char *)v5 + 22) = v11;
LABEL_7:
    swift_willThrow();
    return (void *)swift_release();
  }
  swift_retain();
  sub_10032B618();
  uint64_t v9 = v8;
  sub_10031E1C0();
  swift_release();
  swift_release();
  if (v9) {
    return (void *)v9;
  }
  else {
    return _swiftEmptyArrayStorage;
  }
}

uint64_t sub_100322AD0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v8 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *int v22 = a3;
    }
    else
    {
      uint64_t v10 = result;
      uint64_t v29 = a4;
      uint64_t v14 = *(void *)result;
      uint64_t v15 = *(void *)(result + 8);
      int v16 = *(_DWORD *)(result + 16);
      int v27 = *(unsigned __int16 *)(result + 20);
      int v28 = v16;
      int v26 = *(unsigned __int8 *)(result + 22);
      sub_10000566C(&qword_100710738);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1005F6670;
      uint64_t v30 = v14;
      uint64_t v18 = a5;
      uint64_t v19 = a7;
      uint64_t v20 = a6;
      uint64_t v21 = v29;
      swift_retain();
      sub_10030B030(v29, v18, v20, v19, v32);
      if (!v7)
      {
        int v23 = sub_10027B4F8(v32, (_OWORD *)(v17 + 32));
        uint64_t v25 = (uint64_t)&v25;
        uint64_t v31 = v17;
        __chkstk_darwin(v23);
        void v24[2] = v21;
        v24[3] = v18;
        v24[4] = v20;
        v24[5] = v19;
        sub_10031F0C4(v10, v8, a3, sub_10033AD78, v24, &v31, sub_100332568);
        swift_release();
        swift_release();
        return v31;
      }
      *(void *)(v17 + 16) = 0;
      swift_release();
      swift_release();
      *(void *)uint64_t v10 = v30;
      *(void *)(v10 + 8) = v15;
      *(_DWORD *)(v10 + 16) = v28;
      *(_WORD *)(v10 + 20) = v27;
      *(unsigned char *)(v10 + 22) = v26;
    }
    swift_willThrow();
    return swift_release();
  }
  return result;
}

uint64_t sub_100322D10(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      void *v8 = a3;
    }
    else
    {
      uint64_t v5 = result;
      uint64_t v6 = *(void *)result;
      uint64_t v7 = *(void *)(result + 8);
      __int16 v10 = *(_WORD *)(result + 20);
      int v11 = *(_DWORD *)(result + 16);
      char v9 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_1002F2C54();
      if (!v3)
      {
        swift_release();
        return swift_release();
      }
      swift_release();
      *(void *)uint64_t v5 = v6;
      *(void *)(v5 + 8) = v7;
      *(_DWORD *)(v5 + 16) = v11;
      *(_WORD *)(v5 + 20) = v10;
      *(unsigned char *)(v5 + 22) = v9;
    }
    swift_willThrow();
    return swift_release();
  }
  __break(1u);
  return result;
}

#error "100322EE0: call analysis failed (funcsize=59)"

#error "100322FE0: call analysis failed (funcsize=42)"

void sub_100322FEC()
{
  sub_10033B078();
  if (!__OFADD__(v2, 1))
  {
    sub_10033B4C0();
    if (v3 != v4)
    {
      sub_10033B10C();
      uint64_t v5 = sub_10033B1D8();
      v0(v5);
      if (!v1)
      {
        swift_release();
        goto LABEL_7;
      }
      swift_release();
      sub_10033B184();
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v6 = sub_10020DD10();
      sub_10031DB40(v6, v7);
    }
    swift_willThrow();
LABEL_7:
    sub_10033B058();
    return;
  }
  __break(1u);
}

void sub_100323088()
{
  sub_10033B078();
  if (!__OFADD__(v4, 1))
  {
    sub_10033B8F8();
    if (v5 != v6)
    {
      sub_10033C5DC();
      int v8 = *(_DWORD *)(v7 + 16);
      __int16 v9 = *(_WORD *)(v7 + 20);
      v16[0] = *(unsigned char *)(v7 + 22);
      swift_retain();
      sub_10033B9C8();
      if (!v1)
      {
        if (((unint64_t)sub_10033BB4C() & 0x8000000000000000) == 0)
        {
          sub_10033B854();
          swift_release();
          swift_release();
          goto LABEL_7;
        }
        sub_100296090();
        sub_10020DD10();
        sub_10033BC20();
        sub_10031D6A0(v12, v13);
        sub_1002E1EC4(v14, v15);
      }
      swift_release();
      *(void *)uint64_t v0 = v2;
      *(void *)(v0 + 8) = v3;
      *(_DWORD *)(v0 + 16) = v8;
      *(_WORD *)(v0 + 20) = v9;
      *(unsigned char *)(v0 + 22) = v16[0];
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v10 = sub_10020DD10();
      sub_10033C580(v10, v11);
    }
    swift_willThrow();
    swift_release();
LABEL_7:
    sub_10033B058();
    return;
  }
  __break(1u);
}

#error "1003232BC: call analysis failed (funcsize=89)"

void sub_100323320()
{
  sub_10033B5B4();
  if (!__OFADD__(v3, 1))
  {
    sub_10033B8F8();
    if (v4 != v5)
    {
      sub_10033C1A8();
      sub_10033B9C8();
      if (!v1)
      {
        if (((unint64_t)sub_10033BB4C() & 0x8000000000000000) == 0)
        {
          swift_release();
          swift_release();
          goto LABEL_7;
        }
        sub_100296090();
        sub_10020DD10();
        sub_10033BC20();
        sub_10031D6A0(v8, v9);
        sub_1002E1EC4(v10, v11);
      }
      swift_release();
      *uint64_t v0 = v2;
      sub_10033C0FC();
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v6 = sub_10020DD10();
      sub_10033C580(v6, v7);
    }
    swift_willThrow();
    swift_release();
LABEL_7:
    sub_10031D59C();
    return;
  }
  __break(1u);
}

uint64_t sub_100323418(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v6 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v7 = a3;
    if (v6 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v18 = v7;
    }
    else
    {
      uint64_t v10 = result;
      uint64_t v11 = *(void *)result;
      uint64_t v12 = *(void *)(result + 8);
      int v13 = *(_DWORD *)(result + 16);
      __int16 v14 = *(_WORD *)(result + 20);
      char v15 = *(unsigned char *)(result + 22);
      swift_retain();
      uint64_t v16 = v7;
      uint64_t v7 = a5;
      uint64_t v17 = a4(v10, v6, v16);
      if (!v5)
      {
        uint64_t v7 = v17;
        swift_release();
        return v7;
      }
      swift_release();
      *(void *)uint64_t v10 = v11;
      *(void *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v13;
      *(_WORD *)(v10 + 20) = v14;
      *(unsigned char *)(v10 + 22) = v15;
    }
    swift_willThrow();
    return v7;
  }
  __break(1u);
  return result;
}

void sub_100323520()
{
  sub_10033B5B4();
  if (!__OFADD__(v3, 1))
  {
    sub_10033B8F8();
    if (v4 != v5)
    {
      sub_10033C1A8();
      sub_10033B9C8();
      if (!v1)
      {
        uint64_t v6 = (uint64_t *)sub_10033C4CC();
        if (((unint64_t)sub_10032D3F0(v6, v7, v8, 0) & 0x8000000000000000) == 0)
        {
          swift_release();
          swift_release();
          goto LABEL_7;
        }
        sub_100296090();
        sub_10020DD10();
        sub_10033BC20();
        sub_10031D6A0(v11, v12);
        sub_1002E1EC4(v13, v14);
      }
      swift_release();
      *uint64_t v0 = v2;
      sub_10033C0FC();
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v9 = sub_10020DD10();
      sub_10033C580(v9, v10);
    }
    swift_willThrow();
    swift_release();
LABEL_7:
    sub_10031D59C();
    return;
  }
  __break(1u);
}

uint64_t sub_100323620(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v17 = a3;
    }
    else
    {
      uint64_t v8 = a6;
      uint64_t v14 = result;
      uint64_t v15 = *(void *)result;
      uint64_t v16 = *(void *)(result + 8);
      __int16 v19 = *(_WORD *)(result + 20);
      int v20 = *(_DWORD *)(result + 16);
      char v18 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_10031E1C0();
      if (!v7)
      {
        uint64_t v8 = sub_10030AC3C(v14, v9, a3, a4, a5, v8, a7);
        sub_10031E1C0();
        swift_release();
        swift_release();
        return v8;
      }
      swift_release();
      *(void *)uint64_t v14 = v15;
      *(void *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v20;
      *(_WORD *)(v14 + 20) = v19;
      *(unsigned char *)(v14 + 22) = v18;
    }
    swift_willThrow();
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

#error "100323820: call analysis failed (funcsize=40)"

#error "100323930: call analysis failed (funcsize=66)"

void sub_100323994()
{
}

void sub_1003239AC()
{
  sub_1002E84C4();
  if (!__OFADD__(v2, 1))
  {
    sub_10033B4C0();
    if (v3 != v4)
    {
      sub_10033B10C();
      uint64_t v5 = sub_10033B1D8();
      v0(v5);
      if (!v1)
      {
        swift_release();
        goto LABEL_7;
      }
      swift_release();
      sub_10033B184();
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v6 = sub_10020DD10();
      sub_10031DB40(v6, v7);
    }
    swift_willThrow();
LABEL_7:
    sub_1002E84E4();
    return;
  }
  __break(1u);
}

uint64_t sub_100323A4C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!__OFADD__(a2, 1))
  {
    uint64_t v4 = a3;
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v10 = v4;
    }
    else
    {
      uint64_t v5 = result;
      uint64_t v6 = *(void *)result;
      uint64_t v7 = *(void *)(result + 8);
      int v8 = *(_DWORD *)(result + 16);
      char v11 = *(unsigned char *)(result + 22);
      __int16 v12 = *(_WORD *)(result + 20);
      swift_retain();
      uint64_t v9 = sub_10030ACD0();
      if (!v3)
      {
        uint64_t v4 = v9;
        swift_release();
        swift_release();
        return v4;
      }
      swift_release();
      *(void *)uint64_t v5 = v6;
      *(void *)(v5 + 8) = v7;
      *(_DWORD *)(v5 + 16) = v8;
      *(_WORD *)(v5 + 20) = v12;
      *(unsigned char *)(v5 + 22) = v11;
    }
    swift_willThrow();
    swift_release();
    return v4;
  }
  __break(1u);
  return result;
}

void sub_100323B98()
{
  sub_10033B078();
  if (!__OFADD__(v3, 1))
  {
    if (v3 + 1 >= v4)
    {
      sub_1002DB5BC();
      uint64_t v14 = sub_10020DD10();
      sub_10033B994(v14, v15);
    }
    else
    {
      uint64_t v5 = v2;
      uint64_t v6 = *v2;
      sub_10033BA50();
      int v17 = v8;
      v18[0] = v7;
      char v10 = *(unsigned char *)(v9 + 22);
      swift_retain();
      uint64_t v11 = sub_100315044();
      if (!v0)
      {
        if (v12 < 2u || v11 != 2)
        {
          swift_release();
          swift_release();
LABEL_13:
          sub_10033B058();
          return;
        }
        sub_100296090();
        sub_10020DD10();
        *uint64_t v16 = 0xD00000000000002ALL;
        v16[1] = 0x80000001005E6D50;
        void v16[2] = 0xD000000000000020;
        v16[3] = 0x80000001005E63C0;
        v16[4] = 2009;
        swift_willThrow();
      }
      swift_release();
      *uint64_t v5 = v6;
      v5[1] = v1;
      *((_DWORD *)v5 + 4) = v17;
      *((_WORD *)v5 + 10) = v18[0];
      *((unsigned char *)v5 + 22) = v10;
    }
    swift_willThrow();
    swift_release();
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_100323D28(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v4 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *char v10 = a3;
      goto LABEL_6;
    }
    uint64_t v6 = result;
    uint64_t v7 = *(void *)result;
    uint64_t v8 = *(void *)(result + 8);
    int v9 = *(_DWORD *)(result + 16);
    char v11 = *(unsigned char *)(result + 22);
    __int16 v12 = *(_WORD *)(result + 20);
    swift_retain();
    sub_10031356C((uint64_t *)v6, v4, a3, (unsigned int *)&v13);
    if (v3)
    {
      swift_release();
      *(void *)uint64_t v6 = v7;
      *(void *)(v6 + 8) = v8;
      *(_DWORD *)(v6 + 16) = v9;
      *(_WORD *)(v6 + 20) = v12;
      *(unsigned char *)(v6 + 22) = v11;
LABEL_6:
      swift_willThrow();
      return swift_release();
    }
    swift_release();
    swift_release();
    return v13;
  }
  return result;
}

#error "100323F2C: call analysis failed (funcsize=75)"

#error "100323FD0: call analysis failed (funcsize=42)"

uint64_t sub_100324048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100326A84(a1, a2, a3, a4, a5, a6, a7, 0x534445474E414843, 0xED00002045434E49);
}

void sub_10032408C()
{
}

void sub_1003240A4()
{
  sub_10033B078();
  if (!__OFADD__(v2, 1))
  {
    sub_10033B4C0();
    if (v3 != v4)
    {
      sub_10033B10C();
      uint64_t v5 = sub_10033B1D8();
      v0(v5);
      if (!v1)
      {
        swift_release();
        goto LABEL_7;
      }
      swift_release();
      sub_10033B184();
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v6 = sub_10020DD10();
      sub_10031DB40(v6, v7);
    }
    swift_willThrow();
LABEL_7:
    sub_10033B058();
    return;
  }
  __break(1u);
}

#error "10032418C: call analysis failed (funcsize=40)"

#error "100324230: call analysis failed (funcsize=40)"

#error "1003242BC: call analysis failed (funcsize=40)"

#error "1003243B8: call analysis failed (funcsize=72)"

uint64_t sub_100324454(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      void *v8 = a3;
    }
    else
    {
      uint64_t v5 = result;
      uint64_t v6 = *(void *)result;
      uint64_t v7 = *(void *)(result + 8);
      __int16 v10 = *(_WORD *)(result + 20);
      int v11 = *(_DWORD *)(result + 16);
      char v9 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_1002F6264();
      if (!v3)
      {
        swift_release();
        return swift_release();
      }
      swift_release();
      *(void *)uint64_t v5 = v6;
      *(void *)(v5 + 8) = v7;
      *(_DWORD *)(v5 + 16) = v11;
      *(_WORD *)(v5 + 20) = v10;
      *(unsigned char *)(v5 + 22) = v9;
    }
    swift_willThrow();
    return swift_release();
  }
  __break(1u);
  return result;
}

#error "10032461C: call analysis failed (funcsize=59)"

#error "100324710: call analysis failed (funcsize=97)"

uint64_t sub_10032481C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v10 = a3;
    if (v8 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *int v17 = v10;
    }
    else
    {
      uint64_t v14 = result;
      uint64_t v15 = *(void *)result;
      uint64_t v16 = *(void *)(result + 8);
      __int16 v19 = *(_WORD *)(result + 20);
      int v20 = *(_DWORD *)(result + 16);
      char v18 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_10031E2BC(v14, v8, v10);
      if (!v7)
      {
        swift_retain();
        uint64_t v10 = sub_100324994(v14, v8, v10, a4, a5, a6, a7);
        swift_release();
        swift_release();
        return v10;
      }
      swift_release();
      *(void *)uint64_t v14 = v15;
      *(void *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v20;
      *(_WORD *)(v14 + 20) = v19;
      *(unsigned char *)(v14 + 22) = v18;
    }
    swift_willThrow();
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100324994(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *__int16 v19 = a3;
    }
    else
    {
      uint64_t v8 = a7;
      uint64_t v14 = result;
      uint64_t v15 = *(void *)result;
      uint64_t v16 = *(void *)(result + 8);
      __int16 v21 = *(_WORD *)(result + 20);
      int v22 = *(_DWORD *)(result + 16);
      char v20 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_10031E1C0();
      if (!v7)
      {
        swift_retain();
        uint64_t v17 = sub_10032B384(v14, v9, a3, a4, a5, a6, v8);
        if (v18) {
          uint64_t v8 = v17;
        }
        else {
          uint64_t v8 = sub_10031AF20((uint64_t)_swiftEmptyArrayStorage);
        }
        sub_10031E1C0();
        swift_release();
        swift_release();
        return v8;
      }
      swift_release();
      *(void *)uint64_t v14 = v15;
      *(void *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v22;
      *(_WORD *)(v14 + 20) = v21;
      *(unsigned char *)(v14 + 22) = v20;
    }
    swift_willThrow();
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

#error "100324BC8: call analysis failed (funcsize=44)"

uint64_t sub_100324C30(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v10 = a3;
    if (v8 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *__int16 v19 = v10;
    }
    else
    {
      uint64_t v14 = result;
      uint64_t v15 = *(void *)result;
      uint64_t v16 = *(void *)(result + 8);
      int v17 = *(_DWORD *)(result + 16);
      char v20 = *(unsigned char *)(result + 22);
      __int16 v21 = *(_WORD *)(result + 20);
      swift_retain();
      uint64_t v18 = sub_1002F4AC0(v14, v8, v10, a4, a5, a6, a7);
      if (!v7)
      {
        uint64_t v10 = v18;
        swift_release();
        swift_release();
        return v10;
      }
      swift_release();
      *(void *)uint64_t v14 = v15;
      *(void *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v17;
      *(_WORD *)(v14 + 20) = v21;
      *(unsigned char *)(v14 + 22) = v20;
    }
    swift_willThrow();
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100324D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100328FB4(a1, a2, a3, a4, a5, a6, a7, sub_1003139DC);
}

uint64_t sub_100324D98(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v10 = a3;
    if (v8 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *__int16 v19 = v10;
    }
    else
    {
      uint64_t v14 = result;
      uint64_t v15 = *(void *)result;
      uint64_t v16 = *(void *)(result + 8);
      int v17 = *(_DWORD *)(result + 16);
      char v20 = *(unsigned char *)(result + 22);
      __int16 v21 = *(_WORD *)(result + 20);
      swift_retain();
      uint64_t v18 = sub_10030B2C4(v14, v8, v10, a4, a5, a6, a7);
      if (!v7)
      {
        uint64_t v10 = v18;
        swift_release();
        swift_release();
        return v10;
      }
      swift_release();
      *(void *)uint64_t v14 = v15;
      *(void *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v17;
      *(_WORD *)(v14 + 20) = v21;
      *(unsigned char *)(v14 + 22) = v20;
    }
    swift_willThrow();
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

void sub_100324EE4()
{
  sub_10033B630();
  if (!__OFADD__(v3, 1))
  {
    sub_10033C5B4();
    if (v9 != v10)
    {
      int v11 = v4;
      uint64_t v41 = v5;
      uint64_t v42 = v6;
      uint64_t v43 = v7;
      uint64_t v45 = v0;
      uint64_t v40 = v8;
      uint64_t v12 = *v4;
      uint64_t v13 = v4[1];
      int v14 = *((_DWORD *)v4 + 4);
      __int16 v15 = *((_WORD *)v4 + 10);
      char v16 = *((unsigned char *)v4 + 22);
      swift_retain();
      uint64_t v17 = sub_10033BB70();
      sub_10031F4CC(v17, v18, v19);
      if (!v1)
      {
        sub_1002E201C();
        uint64_t v26 = sub_10031E368(v20, v21, v22, v23, v24, 2317);
        uint64_t v28 = v27;
        swift_release();
        sub_10033C670();
        uint64_t v39 = v26;
        swift_retain();
        uint64_t v29 = sub_10033BB70();
        uint64_t v33 = sub_100325604(v29, v30, v31, v41, v45, v42, v43, v32);
        uint64_t v35 = v34;
        uint64_t v37 = v36;
        char v44 = v38;
        sub_10032964C();
        swift_release();
        swift_release();
        *(void *)uint64_t v40 = v39;
        *(void *)(v40 + 8) = v28;
        *(void *)(v40 + 16) = v33;
        *(void *)(v40 + 24) = v35;
        *(void *)(v40 + 32) = v37;
        *(unsigned char *)(v40 + 40) = v44;
LABEL_8:
        sub_10033B610();
        return;
      }
      swift_release();
      uint64_t *v11 = v12;
      v11[1] = v13;
      *((_DWORD *)v11 + 4) = v14;
      *((_WORD *)v11 + 10) = v15;
      *((unsigned char *)v11 + 22) = v16;
    }
    else
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *uint64_t v25 = v2;
    }
    swift_willThrow();
    swift_release();
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_100325100(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v17 = a3;
    }
    else
    {
      uint64_t v8 = a7;
      uint64_t v14 = result;
      uint64_t v15 = *(void *)result;
      uint64_t v16 = *(void *)(result + 8);
      __int16 v19 = *(_WORD *)(result + 20);
      int v20 = *(_DWORD *)(result + 16);
      char v18 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_10031E1C0();
      if (!v7)
      {
        uint64_t v8 = sub_1002FB9F4(v14, v9, a3, a4, a5, a6, v8);
        sub_10031E1C0();
        swift_release();
        swift_release();
        return v8;
      }
      swift_release();
      *(void *)uint64_t v14 = v15;
      *(void *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v20;
      *(_WORD *)(v14 + 20) = v19;
      *(unsigned char *)(v14 + 22) = v18;
    }
    swift_willThrow();
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

void sub_1003252A4()
{
  sub_10033B5B4();
  uint64_t v29 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_10000566C(&qword_1007108C0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!__OFADD__(v5, 1))
  {
    if (v5 + 1 >= v3)
    {
      sub_1002DB5BC();
      uint64_t v19 = sub_10020DD10();
      sub_10033B490(v19, v20);
    }
    else
    {
      uint64_t v10 = *v7;
      uint64_t v11 = v7[1];
      int v12 = *((_DWORD *)v7 + 4);
      int v27 = *((unsigned __int16 *)v7 + 10);
      int v28 = v12;
      int v26 = *((unsigned __int8 *)v7 + 22);
      swift_retain();
      sub_10033C710();
      if (!v0)
      {
        uint64_t v13 = (uint64_t *)sub_10033BEC0();
        int v25 = sub_100307D88(v13, v14, v15);
        sub_10033C710();
        uint64_t v16 = sub_10033BEC0();
        sub_100307D5C(v16, v17, v18);
        uint64_t v21 = type metadata accessor for ResponseCodeAppend();
        swift_allocBox();
        uint64_t v23 = v22;
        sub_1001F39D8((uint64_t)v9, (uint64_t)v22 + *(int *)(v21 + 20), &qword_1007108C0);
        swift_release();
        swift_release();
        *uint64_t v23 = v25;
        goto LABEL_10;
      }
      swift_release();
      uint64_t *v7 = v10;
      v7[1] = v11;
      *((_DWORD *)v7 + 4) = v28;
      *((_WORD *)v7 + 10) = v27;
      *((unsigned char *)v7 + 22) = v26;
    }
    swift_willThrow();
    swift_release();
LABEL_10:
    sub_10031D59C();
    return;
  }
  __break(1u);
}

#error "100325550: call analysis failed (funcsize=88)"

uint64_t sub_1003255D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100325604(a1, a2, a3, a4, a5, a6, a7, sub_1002FB084);
}

#error "100325668: call analysis failed (funcsize=51)"

#error "100325774: call analysis failed (funcsize=42)"

void sub_100325780()
{
  sub_10033B5B4();
  uint64_t v8 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    uint64_t v9 = v2;
    if (v8 >= v2)
    {
      sub_1002DB5BC();
      uint64_t v17 = sub_10020DD10();
      sub_10033B490(v17, v18);
    }
    else
    {
      uint64_t v10 = v3;
      uint64_t v11 = v1;
      uint64_t v24 = v5;
      uint64_t v25 = v6;
      uint64_t v26 = v4;
      uint64_t v12 = *(void *)v1;
      uint64_t v13 = *(void *)(v1 + 8);
      int v14 = *(_DWORD *)(v1 + 16);
      int v15 = *(unsigned __int16 *)(v1 + 20);
      int v16 = *(unsigned __int8 *)(v1 + 22);
      swift_retain();
      sub_10031E1C0();
      if (!v0)
      {
        uint64_t v23 = v12;
        int v20 = v16;
        int v21 = v15;
        int v22 = v14;
        __chkstk_darwin();
        v19[2] = v10;
        v19[3] = v26;
        v19[4] = v24;
        void v19[5] = v25;
        sub_10032CFD8(v11, v8, v9, (uint64_t)sub_100300910, (uint64_t)v19, (uint64_t)&type metadata for Capability);
        sub_10033BC30();
        swift_release();
LABEL_8:
        sub_10033C650();
        sub_10031D59C();
        return;
      }
      swift_release();
      *(void *)uint64_t v11 = v12;
      *(void *)(v11 + 8) = v13;
      *(_DWORD *)(v11 + 16) = v14;
      *(_WORD *)(v11 + 20) = v15;
      *(unsigned char *)(v11 + 22) = v16;
    }
    swift_willThrow();
    swift_release();
    goto LABEL_8;
  }
  __break(1u);
}

#error "1003259C4: call analysis failed (funcsize=59)"

uint64_t sub_100325A24()
{
  return sub_100325A3C();
}

#error "100325A88: call analysis failed (funcsize=42)"

void sub_100325AE8()
{
  sub_10033B5B4();
  if (!__OFADD__(v3, 1))
  {
    uint64_t v5 = v4;
    if (v3 + 1 >= v4)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *int v15 = v5;
    }
    else
    {
      sub_10033C06C();
      __dst = v6;
      uint64_t v8 = *v7;
      sub_10033BA50();
      __int16 v30 = v9;
      int v31 = v10;
      char v29 = *(unsigned char *)(v11 + 22);
      swift_retain();
      sub_10033C39C();
      sub_10031E1C0();
      if (!v0)
      {
        swift_retain();
        sub_10033B538();
        sub_100326678(v12, v13, v14);
        uint64_t v23 = __src[0];
        uint64_t v24 = __src[1];
        uint64_t v25 = __src[2];
        uint64_t v26 = __src[3];
        uint64_t v27 = __src[5];
        uint64_t v20 = __src[6];
        uint64_t v21 = __src[4];
        char v22 = __src[7];
        sub_10033C39C();
        sub_10031E1C0();
        swift_retain_n();
        sub_10033B538();
        sub_10032C110(v16, v17, v18, v19);
        swift_release();
        swift_release_n();
        sub_1001F39D8((uint64_t)v34, (uint64_t)v32, &qword_10070FD88);
        __src[0] = v23;
        __src[1] = v24;
        __src[2] = v25;
        __src[3] = v26;
        void __src[4] = v21;
        __src[5] = v27;
        __src[6] = v20;
        LOBYTE(__src[7]) = v22;
        sub_1001F39D8((uint64_t)v32, (uint64_t)&__src[8], &qword_10070FD88);
        memcpy(__dst, __src, 0x100uLL);
LABEL_8:
        sub_10031D59C();
        return;
      }
      swift_release();
      *(void *)uint64_t v1 = v8;
      *(void *)(v1 + 8) = v2;
      *(_DWORD *)(v1 + 16) = v31;
      *(_WORD *)(v1 + 20) = v30;
      *(unsigned char *)(v1 + 22) = v29;
    }
    swift_willThrow();
    swift_release();
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_100325D34(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v8 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v24 = a3;
    }
    else
    {
      uint64_t v10 = result;
      uint64_t v30 = a4;
      uint64_t v14 = *(void *)result;
      uint64_t v15 = *(void *)(result + 8);
      int v16 = *(_DWORD *)(result + 16);
      int v28 = *(unsigned __int16 *)(result + 20);
      int v29 = v16;
      int v27 = *(unsigned __int8 *)(result + 22);
      sub_10000566C(&qword_100710648);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1005F6670;
      uint64_t v31 = v14;
      uint64_t v18 = a5;
      uint64_t v19 = a7;
      uint64_t v20 = a6;
      uint64_t v21 = v30;
      swift_retain();
      uint64_t v22 = sub_10030B4D0();
      if (!v7)
      {
        uint64_t v26 = (uint64_t)&v26;
        *(void *)(v17 + 32) = v22;
        *(void *)(v17 + 40) = v23;
        uint64_t v32 = v17;
        __chkstk_darwin();
        v25[2] = v21;
        void v25[3] = v18;
        v25[4] = v20;
        unsigned char v25[5] = v19;
        sub_10031F0C4(v10, v8, a3, sub_1003398F4, v25, &v32, sub_1003332B0);
        swift_release();
        swift_release();
        return v32;
      }
      *(void *)(v17 + 16) = 0;
      swift_release();
      swift_release();
      *(void *)uint64_t v10 = v31;
      *(void *)(v10 + 8) = v15;
      *(_DWORD *)(v10 + 16) = v29;
      *(_WORD *)(v10 + 20) = v28;
      *(unsigned char *)(v10 + 22) = v27;
    }
    swift_willThrow();
    return swift_release();
  }
  return result;
}

uint64_t sub_100325F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100328FB4(a1, a2, a3, a4, a5, a6, a7, sub_1002FE138);
}

uint64_t sub_100325F94@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7)
{
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      void *v12 = a3;
      goto LABEL_6;
    }
    uint64_t v10 = result;
    uint64_t v11 = *(void *)(result + 8);
    __int16 v18 = *(_WORD *)(result + 20);
    int v19 = *(_DWORD *)(result + 16);
    char v17 = *(unsigned char *)(result + 22);
    uint64_t v20 = *(void *)result;
    swift_retain();
    sub_100302208(a4, (uint64_t)&v22, a6, a7);
    if (v7)
    {
      swift_release();
      *(void *)uint64_t v10 = v20;
      *(void *)(v10 + 8) = v11;
      *(_DWORD *)(v10 + 16) = v19;
      *(_WORD *)(v10 + 20) = v18;
      *(unsigned char *)(v10 + 22) = v17;
LABEL_6:
      swift_willThrow();
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
    swift_release();
    swift_release();
    long long v21 = v22;
    uint64_t v13 = v23;
    char v14 = v25;
    uint64_t v15 = v24;
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    *(_OWORD *)a5 = v21;
    *(void *)(a5 + 16) = v13;
    *(void *)(a5 + 24) = v15;
    *(unsigned char *)(a5 + 32) = v14;
  }
  return result;
}

uint64_t sub_100326148@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v10 = a3;
      goto LABEL_6;
    }
    uint64_t v6 = result;
    uint64_t v8 = *(void *)result;
    uint64_t v9 = *(void *)(result + 8);
    __int16 v12 = *(_WORD *)(result + 20);
    int v13 = *(_DWORD *)(result + 16);
    char v11 = *(unsigned char *)(result + 22);
    swift_retain();
    sub_100301C8C();
    if (v4)
    {
      swift_release();
      *(void *)uint64_t v6 = v8;
      *(void *)(v6 + 8) = v9;
      *(_DWORD *)(v6 + 16) = v13;
      *(_WORD *)(v6 + 20) = v12;
      *(unsigned char *)(v6 + 22) = v11;
LABEL_6:
      swift_willThrow();
      return swift_release();
    }
    swift_release();
    uint64_t result = swift_release();
    *(_OWORD *)a4 = v14;
    *(_OWORD *)(a4 + 16) = v15;
    *(unsigned char *)(a4 + 32) = v16;
  }
  return result;
}

void sub_1003262A0()
{
}

void sub_1003262B8()
{
  sub_10033B078();
  if (!__OFADD__(v2, 1))
  {
    sub_10033B4C0();
    if (v3 != v4)
    {
      sub_10033B10C();
      uint64_t v5 = sub_10033B1D8();
      v0(v5);
      if (!v1)
      {
        swift_release();
        goto LABEL_7;
      }
      swift_release();
      sub_10033B184();
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v6 = sub_10020DD10();
      sub_10031DB40(v6, v7);
    }
    swift_willThrow();
LABEL_7:
    sub_10033B058();
    return;
  }
  __break(1u);
}

#error "1003263AC: call analysis failed (funcsize=43)"

void sub_100326414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, __int16 a14, int a15)
{
  sub_10033B298();
  uint64_t v19 = v18 + 1;
  if (!__OFADD__(v18, 1))
  {
    sub_10033B8F8();
    if (v21 != v22)
    {
      uint64_t v23 = (uint64_t)v20;
      uint64_t v24 = *v20;
      sub_10033C6D0();
      char v35 = *(unsigned char *)(v25 + 22);
      swift_retain();
      sub_10031E2BC(v23, v19, v16);
      if (!v15)
      {
        swift_retain();
        sub_10033B538();
        sub_100323620(v26, v27, v28, v29, v30, v31, v32);
        sub_10033C3B4(v23, v19);
        sub_100309438();
        sub_10033C6A4();
        swift_release();
LABEL_8:
        sub_10033B278();
        return;
      }
      swift_release();
      *(void *)uint64_t v23 = v24;
      *(void *)(v23 + 8) = v17;
      *(_DWORD *)(v23 + 16) = a15;
      *(_WORD *)(v23 + 20) = a14;
      *(unsigned char *)(v23 + 22) = v35;
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v33 = sub_10020DD10();
      sub_10033B994(v33, v34);
    }
    swift_willThrow();
    swift_release();
    goto LABEL_8;
  }
  __break(1u);
}

void sub_1003265DC()
{
  sub_10033B078();
  if (!__OFADD__(v2, 1))
  {
    sub_10033B4C0();
    if (v3 != v4)
    {
      sub_10033B10C();
      uint64_t v5 = sub_10033B1D8();
      v0(v5);
      if (!v1)
      {
        swift_release();
        goto LABEL_7;
      }
      swift_release();
      sub_10033B184();
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v6 = sub_10020DD10();
      sub_10031DB40(v6, v7);
    }
    swift_willThrow();
LABEL_7:
    sub_10033B058();
    return;
  }
  __break(1u);
}

uint64_t sub_100326678(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      void *v8 = a3;
    }
    else
    {
      uint64_t v5 = result;
      uint64_t v6 = *(void *)result;
      uint64_t v7 = *(void *)(result + 8);
      __int16 v10 = *(_WORD *)(result + 20);
      int v11 = *(_DWORD *)(result + 16);
      char v9 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_10030EED8();
      if (!v3)
      {
        swift_release();
        return swift_release();
      }
      swift_release();
      *(void *)uint64_t v5 = v6;
      *(void *)(v5 + 8) = v7;
      *(_DWORD *)(v5 + 16) = v11;
      *(_WORD *)(v5 + 20) = v10;
      *(unsigned char *)(v5 + 22) = v9;
    }
    swift_willThrow();
    return swift_release();
  }
  __break(1u);
  return result;
}

#error "100326800: call analysis failed (funcsize=40)"

uint64_t sub_10032685C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v8 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v17 = a3;
    }
    else
    {
      uint64_t v14 = result;
      uint64_t v15 = *(void *)result;
      uint64_t v16 = *(void *)(result + 8);
      __int16 v19 = *(_WORD *)(result + 20);
      int v20 = *(_DWORD *)(result + 16);
      char v18 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_100310594(v14, v8, a3, a4, a5, a6, a7);
      if (!v7)
      {
        swift_release();
        return swift_release();
      }
      swift_release();
      *(void *)uint64_t v14 = v15;
      *(void *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v20;
      *(_WORD *)(v14 + 20) = v19;
      *(unsigned char *)(v14 + 22) = v18;
    }
    swift_willThrow();
    return swift_release();
  }
  __break(1u);
  return result;
}

#error "1003269E4: call analysis failed (funcsize=40)"

uint64_t sub_100326A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100326A84(a1, a2, a3, a4, a5, a6, a7, 0x45474E4148434E55, 0xEF2045434E495344);
}

#error "100326AF8: call analysis failed (funcsize=52)"

uint64_t sub_100326B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100326BB0(a1, a2, a3, a4, a5, a6, a7, sub_10030CEF0);
}

uint64_t sub_100326B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100326BB0(a1, a2, a3, a4, a5, a6, a7, sub_10030D460);
}

#error "100326C14: call analysis failed (funcsize=49)"

uint64_t sub_100326C78(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v10 = a3;
    if (v8 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *__int16 v19 = v10;
    }
    else
    {
      uint64_t v14 = result;
      uint64_t v15 = *(void *)result;
      uint64_t v16 = *(void *)(result + 8);
      int v17 = *(_DWORD *)(result + 16);
      char v20 = *(unsigned char *)(result + 22);
      __int16 v21 = *(_WORD *)(result + 20);
      swift_retain();
      swift_retain();
      uint64_t v18 = sub_100326BB0(v14, v8, v10, a4, a5, a6, a7, sub_10030D460);
      if (!v7)
      {
        uint64_t v10 = v18;
        swift_release();
        swift_release();
        return v10;
      }
      swift_release();
      *(void *)uint64_t v14 = v15;
      *(void *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v17;
      *(_WORD *)(v14 + 20) = v21;
      *(unsigned char *)(v14 + 22) = v20;
    }
    swift_willThrow();
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100326DD8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      void *v11 = a3;
    }
    else
    {
      uint64_t v5 = result;
      uint64_t v6 = *(void *)result;
      uint64_t v7 = *(void *)(result + 8);
      int v8 = *(_DWORD *)(result + 16);
      __int16 v9 = *(_WORD *)(result + 20);
      char v10 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_10031E1C0();
      if (!v3)
      {
        swift_release();
        return 1;
      }
      swift_release();
      *(void *)uint64_t v5 = v6;
      *(void *)(v5 + 8) = v7;
      *(_DWORD *)(v5 + 16) = v8;
      *(_WORD *)(v5 + 20) = v9;
      *(unsigned char *)(v5 + 22) = v10;
    }
    swift_willThrow();
    return 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_100326ED8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v5 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *int v13 = a3;
    }
    else
    {
      uint64_t v7 = result;
      uint64_t v8 = *(void *)result;
      uint64_t v9 = *(void *)(result + 8);
      int v10 = *(_DWORD *)(result + 16);
      __int16 v11 = *(_WORD *)(result + 20);
      char v12 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_10031E1C0();
      if (!v4)
      {
        swift_retain();
        sub_100327064(v7, v5, a3, (uint64_t)v19);
        swift_release();
        uint64_t result = swift_release();
        uint64_t v14 = v20;
        char v15 = v21;
        long long v16 = v19[1];
        long long v17 = v19[2];
        *(_OWORD *)a4 = v19[0];
        *(_OWORD *)(a4 + 16) = v16;
        *(_OWORD *)(a4 + 32) = v17;
        *(void *)(a4 + 48) = v14;
        *(unsigned char *)(a4 + 56) = v15;
        return result;
      }
      swift_release();
      *(void *)uint64_t v7 = v8;
      *(void *)(v7 + 8) = v9;
      *(_DWORD *)(v7 + 16) = v10;
      *(_WORD *)(v7 + 20) = v11;
      *(unsigned char *)(v7 + 22) = v12;
    }
    swift_willThrow();
    return swift_release();
  }
  return result;
}

uint64_t sub_100327064@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (!__OFADD__(a2, 1))
  {
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *int v10 = a3;
    }
    else
    {
      uint64_t v6 = result;
      uint64_t v8 = *(void *)result;
      uint64_t v9 = *(void *)(result + 8);
      __int16 v12 = *(_WORD *)(result + 20);
      int v13 = *(_DWORD *)(result + 16);
      char v11 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_100310880(a4);
      if (!v4)
      {
        swift_release();
        return swift_release();
      }
      swift_release();
      *(void *)uint64_t v6 = v8;
      *(void *)(v6 + 8) = v9;
      *(_DWORD *)(v6 + 16) = v13;
      *(_WORD *)(v6 + 20) = v12;
      *(unsigned char *)(v6 + 22) = v11;
    }
    swift_willThrow();
    return swift_release();
  }
  __break(1u);
  return result;
}

void sub_1003271A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, __int16 a14, int a15)
{
  sub_10033B298();
  if (!__OFADD__(v18, 1))
  {
    uint64_t v22 = v19;
    if (v18 + 1 >= v19)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      void *v37 = v22;
    }
    else
    {
      uint64_t v23 = v20;
      uint64_t v24 = v17;
      uint64_t v42 = v21;
      uint64_t v25 = *v17;
      sub_10033C6D0();
      char v27 = *(unsigned char *)(v26 + 22);
      swift_retain();
      swift_retain();
      sub_10033C258();
      sub_100328108();
      if (!v15)
      {
        uint64_t v39 = v28;
        uint64_t v40 = v30;
        uint64_t v41 = v29;
        swift_retain();
        uint64_t v31 = sub_10033C258();
        uint64_t v38 = sub_10032BFC8(v31, v32, v33, v34, v35, v36, v23);
        sub_10033C6A4();
        swift_release();
        *(void *)uint64_t v42 = v39;
        *(void *)(v42 + 8) = v41;
        *(_DWORD *)(v42 + 16) = v40;
        *(unsigned char *)(v42 + 20) = BYTE4(v40) & 1;
        *(void *)(v42 + 24) = v38;
        *(void *)(v42 + 32) = v22;
LABEL_8:
        sub_10033B278();
        return;
      }
      swift_release();
      *uint64_t v24 = v25;
      v24[1] = v16;
      *((_DWORD *)v24 + 4) = a15;
      *((_WORD *)v24 + 10) = a14;
      *((unsigned char *)v24 + 22) = v27;
    }
    swift_willThrow();
    swift_release();
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1003272F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v10 = a3;
    if (v8 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v19 = v10;
    }
    else
    {
      uint64_t v14 = result;
      uint64_t v15 = *(void *)result;
      uint64_t v16 = *(void *)(result + 8);
      int v17 = *(_DWORD *)(result + 16);
      char v20 = *(unsigned char *)(result + 22);
      __int16 v21 = *(_WORD *)(result + 20);
      swift_retain();
      swift_retain();
      uint64_t v18 = sub_100327444(v14, v8, v10, a4, a5, a6, a7);
      if (!v7)
      {
        uint64_t v10 = v18;
        swift_release();
        swift_release();
        return v10;
      }
      swift_release();
      *(void *)uint64_t v14 = v15;
      *(void *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v17;
      *(_WORD *)(v14 + 20) = v21;
      *(unsigned char *)(v14 + 22) = v20;
    }
    swift_willThrow();
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100327444(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (!__OFADD__(a2, 1))
  {
    uint64_t v8 = a3;
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *int v17 = v8;
    }
    else
    {
      uint64_t v10 = result;
      uint64_t v23 = a6;
      uint64_t v24 = a7;
      uint64_t v25 = a5;
      uint64_t v11 = *(void *)result;
      uint64_t v12 = *(void *)(result + 8);
      int v13 = *(_DWORD *)(result + 16);
      int v14 = *(unsigned __int16 *)(result + 20);
      int v15 = *(unsigned __int8 *)(result + 22);
      swift_retain();
      sub_10031E1C0();
      if (!v7)
      {
        int v19 = v15;
        int v20 = v14;
        uint64_t v22 = v11;
        int v21 = v13;
        __chkstk_darwin();
        void v18[6] = a4;
        v18[7] = v25;
        v18[8] = v23;
        v18[9] = v24;
        __chkstk_darwin();
        void v18[2] = sub_1003398A4;
        v18[3] = v16;
        uint64_t v8 = sub_10033CBA4((uint64_t)sub_10032D64C, 0, (uint64_t)sub_1003398C0, (uint64_t)v18);
        swift_release();
        swift_release();
        return v8;
      }
      swift_release();
      *(void *)uint64_t v10 = v11;
      *(void *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v13;
      *(_WORD *)(v10 + 20) = v14;
      *(unsigned char *)(v10 + 22) = v15;
    }
    swift_willThrow();
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_100327680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1003277D0(a1, a2, a3, a4, a5, a6, a7, 0x4C4149545241503BLL, 0xE90000000000003DLL, sub_1003278A8);
}

#error "100327734: call analysis failed (funcsize=49)"

uint64_t sub_100327794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1003277D0(a1, a2, a3, a4, a5, a6, a7, 47, 0xE100000000000000, sub_100327680);
}

#error "100327848: call analysis failed (funcsize=53)"

uint64_t sub_1003278A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v18 = a3;
    }
    else
    {
      uint64_t v11 = result;
      uint64_t v25 = a4;
      uint64_t v26 = a6;
      uint64_t v27 = a7;
      uint64_t v28 = a5;
      uint64_t v12 = *(void *)result;
      uint64_t v13 = *(void *)(result + 8);
      int v14 = *(_DWORD *)(result + 16);
      int v15 = *(unsigned __int16 *)(result + 20);
      int v16 = *(unsigned __int8 *)(result + 22);
      swift_retain();
      int v17 = sub_10032D3F0((uint64_t *)v11, v9, a3, 1);
      if (!v7)
      {
        uint64_t v8 = v17;
        int v21 = v16;
        int v22 = v15;
        int v23 = v14;
        uint64_t v24 = v12;
        if (((unint64_t)v17 & 0x8000000000000000) == 0)
        {
          __chkstk_darwin();
          v20[2] = v25;
          v20[3] = v28;
          v20[4] = v26;
          v20[5] = v27;
          sub_10032AF48(v11, v9, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100339888, (uint64_t)v20);
          swift_release();
          swift_release();
          return (uint64_t)v8;
        }
        sub_100296090();
        swift_allocError();
        *int v19 = 0xD000000000000011;
        v19[1] = 0x80000001005E65D0;
        v19[2] = 0xD000000000000020;
        _OWORD v19[3] = 0x80000001005E63C0;
        v19[4] = 167;
        swift_willThrow();
        uint64_t v12 = v24;
        LOWORD(v15) = v22;
        int v14 = v23;
        LOBYTE(v16) = v21;
      }
      swift_release();
      *(void *)uint64_t v11 = v12;
      *(void *)(v11 + 8) = v13;
      *(_DWORD *)(v11 + 16) = v14;
      *(_WORD *)(v11 + 20) = v15;
      *(unsigned char *)(v11 + 22) = v16;
    }
    swift_willThrow();
    swift_release();
    return (uint64_t)v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_100327AD4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v10 = a3;
    if (v8 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *int v19 = v10;
    }
    else
    {
      uint64_t v14 = result;
      uint64_t v15 = *(void *)result;
      uint64_t v16 = *(void *)(result + 8);
      int v17 = *(_DWORD *)(result + 16);
      char v20 = *(unsigned char *)(result + 22);
      __int16 v21 = *(_WORD *)(result + 20);
      swift_retain();
      swift_retain();
      uint64_t v18 = sub_100327C4C(v14, v8, v10, a4, a5, a6, a7, 0x4F49544345533B2FLL, 0xEA00000000003D4ELL, sub_10030D2F4);
      if (!v7)
      {
        uint64_t v10 = v18;
        swift_release();
        swift_release();
        return v10;
      }
      swift_release();
      *(void *)uint64_t v14 = v15;
      *(void *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v17;
      *(_WORD *)(v14 + 20) = v21;
      *(unsigned char *)(v14 + 22) = v20;
    }
    swift_willThrow();
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

#error "100327CC4: call analysis failed (funcsize=53)"

uint64_t sub_100327D24(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v8 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *int v19 = a3;
    }
    else
    {
      uint64_t v14 = result;
      uint64_t v15 = *(void *)result;
      uint64_t v16 = *(void *)(result + 8);
      __int16 v21 = *(_WORD *)(result + 20);
      int v22 = *(_DWORD *)(result + 16);
      char v17 = *(unsigned char *)(result + 22);
      swift_retain();
      swift_retain();
      uint64_t v18 = sub_100327EB8(v14, v8, a3, a4, a5, a6, a7);
      if (!v7)
      {
        uint64_t v20 = v18;
        sub_10031E1C0();
        swift_release();
        swift_release();
        return v20;
      }
      swift_release();
      *(void *)uint64_t v14 = v15;
      *(void *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v22;
      *(_WORD *)(v14 + 20) = v21;
      *(unsigned char *)(v14 + 22) = v17;
    }
    swift_willThrow();
    return swift_release();
  }
  return result;
}

uint64_t sub_100327EB8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v8 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v25 = a3;
LABEL_10:
      swift_willThrow();
      return swift_release();
    }
    uint64_t v10 = result;
    uint64_t v11 = *(void *)result;
    uint64_t v12 = *(void *)(result + 8);
    __int16 v31 = *(_WORD *)(result + 20);
    int v32 = *(_DWORD *)(result + 16);
    char v14 = *(unsigned char *)(result + 22);
    swift_retain();
    swift_retain();
    uint64_t v29 = a6;
    uint64_t v30 = a7;
    char v18 = v14;
    __int16 v20 = v31;
    int v19 = v32;
    sub_10032C60C();
    if (v7)
    {
LABEL_9:
      swift_release();
      *(void *)uint64_t v10 = v11;
      *(void *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v19;
      *(_WORD *)(v10 + 20) = v20;
      *(unsigned char *)(v10 + 22) = v18;
      goto LABEL_10;
    }
    uint64_t v27 = v21;
    uint64_t v28 = v22;
    swift_retain_n();
    sub_10032C6F8(v10, v8, a3, a4, a5, v29, v30);
    uint64_t v24 = v23;
    swift_release();
    if (!v28 && v24 == 1)
    {
      sub_100296090();
      swift_allocError();
      *uint64_t v26 = 0xD000000000000021;
      v26[1] = 0x80000001005E6CE0;
      _OWORD v26[2] = 0xD000000000000020;
      v26[3] = 0x80000001005E63C0;
      v26[4] = 1228;
      swift_willThrow();
      __int16 v20 = v31;
      int v19 = v32;
      goto LABEL_9;
    }
    swift_release();
    swift_release();
    return v27;
  }
  return result;
}

void sub_100328108()
{
  sub_1002E84C4();
  if (!__OFADD__(v2, 1))
  {
    sub_10033B6EC();
    if (v5 != v6)
    {
      uint64_t v7 = v4;
      uint64_t v8 = v3;
      uint64_t v9 = *v3;
      sub_10033BA50();
      __int16 v29 = v10;
      int v30 = v11;
      char v13 = *(unsigned char *)(v12 + 22);
      swift_retain();
      swift_retain();
      uint64_t v14 = sub_10033C2EC();
      sub_100326BB0(v14, v15, v16, v17, v18, v19, v7, v20);
      if (!v0)
      {
        swift_retain();
        uint64_t v21 = sub_10033C2EC();
        sub_10032BE5C(v21, v22, v23, v24, v25, v26, v7);
        sub_10033BC30();
        swift_release();
LABEL_8:
        sub_1002E84E4();
        return;
      }
      swift_release();
      void *v8 = v9;
      v8[1] = v1;
      *((_DWORD *)v8 + 4) = v30;
      *((_WORD *)v8 + 10) = v29;
      *((unsigned char *)v8 + 22) = v13;
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v27 = sub_10020DD10();
      sub_10033B994(v27, v28);
    }
    swift_willThrow();
    swift_release();
    goto LABEL_8;
  }
  __break(1u);
}

#error "1003282D4: call analysis failed (funcsize=63)"

uint64_t sub_100328354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100328398(a1, a2, a3, a4, a5, a6, a7, 0x3D4449553BLL, 0xE500000000000000, sub_1002FAA58);
}

#error "100328414: call analysis failed (funcsize=56)"

#error "10032859C: call analysis failed (funcsize=99)"

#error "1003286B8: call analysis failed (funcsize=73)"

void sub_10032873C()
{
}

void sub_100328754()
{
  sub_10033B078();
  if (!__OFADD__(v2, 1))
  {
    sub_10033B4C0();
    if (v3 != v4)
    {
      sub_10033B10C();
      uint64_t v5 = sub_10033B1D8();
      v0(v5);
      if (!v1)
      {
        swift_release();
        goto LABEL_7;
      }
      swift_release();
      sub_10033B184();
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v6 = sub_10020DD10();
      sub_10031DB40(v6, v7);
    }
    swift_willThrow();
LABEL_7:
    sub_10033B058();
    return;
  }
  __break(1u);
}

#error "100328838: call analysis failed (funcsize=40)"

#error "1003288C4: call analysis failed (funcsize=40)"

void sub_100328938()
{
  sub_10033B690();
  if (!__OFADD__(v1, 1))
  {
    sub_10033B6EC();
    if (v4 != v5)
    {
      uint64_t v6 = v2;
      uint64_t v23 = v3;
      uint64_t v7 = *v2;
      sub_10033C560();
      char v9 = *(unsigned char *)(v8 + 22);
      swift_retain();
      uint64_t v10 = sub_10033C58C();
      sub_10031F4CC(v10, v11, v12);
      if (!v0)
      {
        sub_1002E201C();
        sub_10031E368(v13, v14, v15, v16, v17, 2479);
        swift_release();
        sub_10033BF74();
        uint64_t v20 = sub_10033C58C();
        sub_10030A634(v20, v21, v22, v23);
        swift_release();
        swift_release();
LABEL_8:
        sub_10033C548();
        sub_10033B650();
        return;
      }
      swift_release();
      *uint64_t v6 = v7;
      sub_10033C478();
      *((unsigned char *)v6 + 22) = v9;
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v18 = sub_10020DD10();
      sub_10033B994(v18, v19);
    }
    swift_willThrow();
    swift_release();
    goto LABEL_8;
  }
  __break(1u);
}

void sub_100328ABC()
{
  sub_1002E84C4();
  if (!__OFADD__(v2, 1))
  {
    sub_10033B4C0();
    if (v3 != v4)
    {
      sub_10033B10C();
      uint64_t v5 = sub_10033B1D8();
      v0(v5);
      if (!v1)
      {
        swift_release();
        goto LABEL_7;
      }
      swift_release();
      sub_10033B184();
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v6 = sub_10020DD10();
      sub_10031DB40(v6, v7);
    }
    swift_willThrow();
LABEL_7:
    sub_1002E84E4();
    return;
  }
  __break(1u);
}

uint64_t sub_100328B7C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v10 = a3;
    if (v8 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v17 = v10;
    }
    else
    {
      uint64_t v14 = result;
      uint64_t v15 = *(void *)result;
      uint64_t v16 = *(void *)(result + 8);
      __int16 v19 = *(_WORD *)(result + 20);
      int v20 = *(_DWORD *)(result + 16);
      char v18 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_10031E2BC(v14, v8, v10);
      if (!v7)
      {
        swift_retain();
        uint64_t v10 = sub_100328CFC(v14, v8, v10, a4, a5, a6, a7);
        swift_release();
        swift_release();
        return v10;
      }
      swift_release();
      *(void *)uint64_t v14 = v15;
      *(void *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v20;
      *(_WORD *)(v14 + 20) = v19;
      *(unsigned char *)(v14 + 22) = v18;
    }
    swift_willThrow();
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100328CFC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    if (v9 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v17 = a3;
    }
    else
    {
      uint64_t v8 = a7;
      uint64_t v14 = result;
      uint64_t v15 = *(void *)result;
      uint64_t v16 = *(void *)(result + 8);
      __int16 v19 = *(_WORD *)(result + 20);
      int v20 = *(_DWORD *)(result + 16);
      char v18 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_10031E1C0();
      if (!v7)
      {
        uint64_t v8 = sub_100313070(v14, v9, a3, a4, a5, a6, v8);
        sub_10031E1C0();
        swift_release();
        swift_release();
        return v8;
      }
      swift_release();
      *(void *)uint64_t v14 = v15;
      *(void *)(v14 + 8) = v16;
      *(_DWORD *)(v14 + 16) = v20;
      *(_WORD *)(v14 + 20) = v19;
      *(unsigned char *)(v14 + 22) = v18;
    }
    swift_willThrow();
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_100328EC4()
{
  return sub_100328EDC();
}

#error "100328F28: call analysis failed (funcsize=42)"

uint64_t sub_100328F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100328FB4(a1, a2, a3, a4, a5, a6, a7, sub_100315D88);
}

#error "100329000: call analysis failed (funcsize=43)"

uint64_t sub_100329064(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!__OFADD__(a2, 1))
  {
    uint64_t v4 = a3;
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      uint64_t *v8 = v4;
    }
    else
    {
      uint64_t v5 = result;
      uint64_t v6 = *(void *)result;
      uint64_t v7 = *(void *)(result + 8);
      __int16 v10 = *(_WORD *)(result + 20);
      int v11 = *(_DWORD *)(result + 16);
      char v9 = *(unsigned char *)(result + 22);
      swift_retain();
      sub_10031E1C0();
      if (!v3)
      {
        uint64_t v4 = sub_100315044();
        swift_release();
        swift_release();
        return v4;
      }
      swift_release();
      *(void *)uint64_t v5 = v6;
      *(void *)(v5 + 8) = v7;
      *(_DWORD *)(v5 + 16) = v11;
      *(_WORD *)(v5 + 20) = v10;
      *(unsigned char *)(v5 + 22) = v9;
    }
    swift_willThrow();
    swift_release();
    return v4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003291DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100329234(a1, a2, a3, a4, a5, a6, a7, sub_1003165D4);
}

uint64_t sub_100329208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100329234(a1, a2, a3, a4, a5, a6, a7, sub_1003169E0);
}

#error "100329298: call analysis failed (funcsize=55)"

#error "1003293E4: call analysis failed (funcsize=90)"

uint64_t sub_100329490(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v6 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v7 = a3;
    if (v6 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *char v18 = v7;
    }
    else
    {
      uint64_t v10 = result;
      uint64_t v11 = *(void *)result;
      uint64_t v12 = *(void *)(result + 8);
      int v13 = *(_DWORD *)(result + 16);
      __int16 v14 = *(_WORD *)(result + 20);
      char v15 = *(unsigned char *)(result + 22);
      swift_retain();
      uint64_t v16 = v7;
      uint64_t v7 = a5;
      uint64_t v17 = a4(v10, v6, v16);
      if (!v5)
      {
        uint64_t v7 = v17;
        swift_release();
        return v7;
      }
      swift_release();
      *(void *)uint64_t v10 = v11;
      *(void *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v13;
      *(_WORD *)(v10 + 20) = v14;
      *(unsigned char *)(v10 + 22) = v15;
    }
    swift_willThrow();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003295A8(uint64_t a1, uint64_t a2, uint64_t a3, int64_t a4)
{
  int v4 = *(_DWORD *)(a1 + 8);
  int v5 = *(_DWORD *)(a1 + 12);
  int64_t v6 = (v5 - v4);
  if (v5 == v4)
  {
    sub_1002E1490();
    sub_10020DD10();
    return swift_willThrow();
  }
  if (v6 < a4)
  {
    uint64_t result = ByteBuffer.readSlice(length:)(v6);
    if (result) {
      return result;
    }
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t result = ByteBuffer.readSlice(length:)(a4);
  if (!result) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_10032964C()
{
  sub_10031DE28();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)v4;
  uint64_t v7 = *(unsigned int *)(v4 + 8);
  unsigned int v8 = *(_DWORD *)(v4 + 12);
  int v9 = *(_DWORD *)(v4 + 16);
  uint64_t v10 = *(unsigned __int16 *)(v4 + 20);
  uint64_t v11 = *(unsigned __int8 *)(v4 + 22);
  uint64_t result = sub_1001FE728(v7, 0, *(void *)v4, *(_DWORD *)(v4 + 8));
  if ((result & 0x10000) != 0)
  {
    if (v8 != v7) {
      goto LABEL_14;
    }
    sub_1002E1490();
    sub_10020DD10();
    return swift_willThrow();
  }
  if ((unsigned __int16)result == 3338)
  {
    unsigned int v13 = v7 + 2;
    if (v7 >= 0xFFFFFFFE)
    {
      __break(1u);
    }
    else if (v8 >= v13)
    {
      *(_DWORD *)(v5 + 8) = v13;
      return result;
    }
    __break(1u);
    goto LABEL_35;
  }
  if (BYTE1(result) == 10)
  {
LABEL_11:
    unsigned int v14 = v7 + 1;
    if (v7 == -1)
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v8 >= v14) {
      goto LABEL_21;
    }
    __break(1u);
LABEL_14:
    uint64_t result = sub_1001F969C();
    int v15 = *(unsigned __int8 *)(*(void *)(v6 + 24) + (v11 | (v10 << 8)) + v7);
    if (v15 != 13 && v15 != 10)
    {
      sub_100296090();
      uint64_t v17 = sub_10020DD10();
      sub_10033BB0C(v17, v18);
      sub_10031DA00(v19, v20);
      uint64_t v22 = 365;
LABEL_29:
      *(void *)(v21 + 32) = v22;
      return swift_willThrow();
    }
    unsigned int v14 = v7 + 1;
    if (v7 == -1)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v8 < v14)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
LABEL_21:
    *(_DWORD *)(v5 + 8) = v14;
    return result;
  }
  if (BYTE1(result) != 32)
  {
    if (BYTE1(result) != 13)
    {
      sub_100296090();
      uint64_t v26 = sub_10020DD10();
      sub_10033BB0C(v26, v27);
      sub_10031DA00(v28, v29);
      uint64_t v22 = 369;
      goto LABEL_29;
    }
    goto LABEL_11;
  }
  BOOL v23 = __OFADD__(v3, 1);
  uint64_t v24 = v3 + 1;
  if (v23)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v24 >= v1)
  {
    sub_1002DB5BC();
    sub_10020DD10();
    void *v30 = v1;
    return swift_willThrow();
  }
  unsigned int v25 = v7 + 1;
  if (v7 == -1)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v8 >= v25)
  {
    *(_DWORD *)(v5 + 8) = v25;
    swift_retain();
    sub_10032964C(v5, v24, v1);
    if (!v31) {
      return swift_release();
    }
    swift_release();
    *(void *)uint64_t v5 = v6;
    *(_DWORD *)(v5 + 8) = v7;
    *(_DWORD *)(v5 + 12) = v8;
    *(_DWORD *)(v5 + 16) = v9;
    *(_WORD *)(v5 + 20) = v10;
    *(unsigned char *)(v5 + 22) = v11;
    return swift_willThrow();
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1003298A8()
{
  sub_10031F2EC();
  if (!v0) {
    return v0 != 0;
  }
  swift_errorRetain();
  sub_10000566C(qword_100710378);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    return v0 != 0;
  }
  return swift_errorRelease();
}

uint64_t sub_100329954()
{
  return sub_1003298A8();
}

uint64_t sub_100329980()
{
  return sub_1003298A8();
}

uint64_t sub_1003299AC()
{
  return sub_1003298A8();
}

uint64_t sub_1003299D8()
{
  return sub_1003298A8();
}

uint64_t sub_100329A04()
{
  return sub_1003298A8();
}

uint64_t sub_100329A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10031EC90(a1, a2, a3);
  if (!v3) {
    return v3 != 0;
  }
  swift_errorRetain();
  sub_10000566C(qword_100710378);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    return v3 != 0;
  }
  return swift_errorRelease();
}

uint64_t sub_100329ADC()
{
  return sub_1003298A8();
}

uint64_t sub_100329B08()
{
  return sub_1003298A8();
}

void sub_100329B34()
{
}

uint64_t sub_100329B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_retain();
  uint64_t v13 = sub_100320180(a1, a2, a3, a4);
  if (v7)
  {
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_release();
      return 0;
    }
    else
    {
      swift_errorRelease();
      swift_release();
    }
  }
  else
  {
    a7 = v13;
    swift_release();
  }
  return a7;
}

uint64_t sub_100329C98()
{
  return sub_10032AE34();
}

void sub_100329CE0(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, void *a4@<X8>)
{
}

void sub_100329CF8(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, void *a4@<X8>)
{
  uint64_t v7 = a1 + 1;
  if (!__OFADD__(a1, 1))
  {
    if (v7 >= a2)
    {
      sub_1002DB5BC();
      sub_10020DD10();
      *uint64_t v27 = a2;
    }
    else
    {
      sub_10033C630();
      uint64_t v39 = a3;
      uint64_t v12 = *v11;
      sub_10033BA50();
      __int16 v37 = v13;
      int v38 = v14;
      char v36 = *(unsigned char *)(v15 + 22);
      swift_retain();
      sub_10031E2BC(v5, v7, a2);
      if (!v4)
      {
        sub_10033C65C();
        sub_10033BC74();
        sub_1002DF0F0();
        uint64_t v35 = v40[1];
        uint64_t v33 = v40[3];
        uint64_t v34 = v40[2];
        uint64_t v32 = v40[4];
        swift_retain();
        sub_10033C65C();
        sub_10033BC74();
        uint64_t v23 = sub_100329F40(v16, v17, v18, v19, v20, v21, v22);
        if (!v39)
        {
          uint64_t v28 = v23;
          uint64_t v29 = v24;
          uint64_t v30 = v25;
          uint64_t v31 = v26;
          swift_release();
          *a4 = v40[0];
          a4[1] = v35;
          a4[2] = v34;
          a4[3] = v33;
          a4[4] = v32;
          a4[5] = v28;
          a4[6] = v29;
          a4[7] = v30;
          a4[8] = v31;
LABEL_11:
          swift_release();
          return;
        }
        sub_10033AC4C(v40);
      }
      swift_release();
      *(void *)uint64_t v5 = v12;
      *(void *)(v5 + 8) = v6;
      *(_DWORD *)(v5 + 16) = v38;
      *(_WORD *)(v5 + 20) = v37;
      *(unsigned char *)(v5 + 22) = v36;
    }
    swift_willThrow();
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_OWORD *)a4 = xmmword_1005F6750;
      *((_OWORD *)a4 + 1) = 0u;
      *((_OWORD *)a4 + 2) = 0u;
      *((_OWORD *)a4 + 3) = 0u;
      a4[8] = 0;
      swift_errorRelease();
      swift_release();
      return;
    }
    swift_errorRelease();
    goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_100329F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_retain();
  uint64_t v15 = sub_1003207F0(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
  {
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_release();
      return 0;
    }
    else
    {
      swift_errorRelease();
      swift_release();
    }
  }
  else
  {
    a6 = v15;
    swift_release();
  }
  return a6;
}

void sub_10032A084()
{
}

uint64_t sub_10032A0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100321098(a1, a2, a3);
  if (v3)
  {
    sub_10033C604();
    sub_10000566C(qword_100710378);
    if (sub_10033C0C0())
    {
      swift_errorRelease();
      sub_10033BCF8();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      return 0;
    }
    else
    {
      return swift_errorRelease();
    }
  }
  return result;
}

void sub_10032A13C(uint64_t a1, uint64_t a2)
{
  if (!__OFADD__(a2, 1))
  {
    sub_10033C024();
    if (v5 != v6)
    {
      sub_10033BA7C();
      sub_10033C4B0();
      if (!v3)
      {
        swift_retain();
        uint64_t v7 = sub_10033BCD0();
        sub_1003205EC(v7, v8, v9);
        if (!v4)
        {
          swift_release();
          *(_OWORD *)uint64_t v2 = v12;
          *(_OWORD *)(v2 + 16) = v13;
          *(_OWORD *)(v2 + 32) = v14;
          *(_OWORD *)(v2 + 48) = v15;
          *(_OWORD *)(v2 + 64) = v16;
          *(void *)(v2 + 80) = v17;
LABEL_10:
          swift_release();
          return;
        }
      }
      swift_release();
      sub_10033C358();
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v10 = sub_10020DD10();
      sub_10033BADC(v10, v11);
    }
    swift_willThrow();
    sub_10033C450();
    sub_10000566C(qword_100710378);
    if (sub_10033C5EC())
    {
      swift_errorRelease();
      sub_10033C768();
      swift_bridgeObjectRelease();
      *(_OWORD *)uint64_t v2 = xmmword_1005F6750;
      *(_OWORD *)(v2 + 16) = 0u;
      *(_OWORD *)(v2 + 32) = 0u;
      *(_OWORD *)(v2 + 48) = 0u;
      *(_OWORD *)(v2 + 64) = 0u;
      *(void *)(v2 + 80) = 0;
      swift_errorRelease();
      swift_release();
      return;
    }
    swift_errorRelease();
    goto LABEL_10;
  }
  __break(1u);
}

void sub_10032A2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, long long a15, long long a16, long long a17, long long a18, long long a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  sub_10033C188();
  a32 = v40;
  a33 = v42;
  uint64_t v44 = v43 + 1;
  if (!__OFADD__(v43, 1))
  {
    sub_10033C024();
    if (v49 != v50)
    {
      uint64_t v51 = v45;
      uint64_t v60 = v46;
      uint64_t v61 = v47;
      uint64_t v62 = v48;
      sub_10033BA7C();
      sub_10033C4B0();
      if (!v34)
      {
        swift_retain();
        sub_1003209A4(v51, v44, v35, v60, v36, v61, v62, (uint64_t)&a14);
        swift_release();
        uint64_t v54 = a20;
        long long v55 = a15;
        long long v56 = a16;
        long long v57 = a17;
        long long v58 = a18;
        long long v59 = a19;
        *(void *)uint64_t v33 = a14;
        *(_OWORD *)(v33 + 8) = v55;
        *(_OWORD *)(v33 + 24) = v56;
        *(_OWORD *)(v33 + 40) = v57;
        *(_OWORD *)(v33 + 56) = v58;
        *(_OWORD *)(v33 + 72) = v59;
        *(void *)(v33 + 88) = v54;
        goto LABEL_10;
      }
      swift_release();
      *(void *)uint64_t v51 = v36;
      *(void *)(v51 + 8) = v41;
      *(_DWORD *)(v51 + 16) = v37;
      *(_WORD *)(v51 + 20) = v38;
      *(unsigned char *)(v51 + 22) = v39;
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v52 = sub_10020DD10();
      sub_10033BADC(v52, v53);
    }
    swift_willThrow();
    sub_10033C450();
    sub_10000566C(qword_100710378);
    if (sub_10033C5EC())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_OWORD *)(v33 + 64) = 0u;
      *(_OWORD *)(v33 + 80) = 0u;
      *(_OWORD *)(v33 + 32) = 0u;
      *(_OWORD *)(v33 + 48) = 0u;
      *(_OWORD *)uint64_t v33 = 0u;
      *(_OWORD *)(v33 + 16) = 0u;
      swift_errorRelease();
      swift_release();
LABEL_11:
      sub_10033C168();
      return;
    }
    swift_errorRelease();
LABEL_10:
    swift_release();
    goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_10032A454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_retain();
  uint64_t v11 = sub_100321444(a1, a2, a3);
  if (v6)
  {
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_release();
      return 0;
    }
    else
    {
      swift_errorRelease();
      swift_release();
    }
  }
  else
  {
    a6 = v11;
    swift_release();
  }
  return a6;
}

uint64_t sub_10032A58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t result = sub_100321AE0(a1, a2, a3, a4, a5);
  if (v5)
  {
    sub_10033C604();
    sub_10000566C(qword_100710378);
    if (sub_10033C0C0())
    {
      swift_errorRelease();
      sub_10033BCF8();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      return 0;
    }
    else
    {
      return swift_errorRelease();
    }
  }
  return result;
}

uint64_t sub_10032A620()
{
  return sub_10032AA90();
}

void sub_10032A668()
{
}

void sub_10032A694()
{
}

uint64_t sub_10032A6C0()
{
  return sub_10032AA90();
}

uint64_t sub_10032A708()
{
  return sub_10032B920();
}

uint64_t sub_10032A76C()
{
  return sub_10032AA90();
}

void sub_10032A7B4()
{
}

void sub_10032A7E0(uint64_t a1, uint64_t a2)
{
  if (!__OFADD__(a2, 1))
  {
    sub_10033C024();
    if (v5 != v6)
    {
      sub_10033BA7C();
      sub_10033C4B0();
      if (!v3)
      {
        swift_retain();
        uint64_t v7 = sub_10033BCD0();
        sub_100322D10(v7, v8, v9);
        if (!v4)
        {
          swift_release();
          *(_OWORD *)uint64_t v2 = v12;
          *(_OWORD *)(v2 + 16) = v13;
          *(_OWORD *)(v2 + 32) = v14;
          *(_OWORD *)(v2 + 48) = v15;
          *(void *)(v2 + 64) = v16;
LABEL_10:
          swift_release();
          return;
        }
      }
      swift_release();
      sub_10033C358();
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v10 = sub_10020DD10();
      sub_10033BADC(v10, v11);
    }
    swift_willThrow();
    sub_10033C450();
    sub_10000566C(qword_100710378);
    if (sub_10033C5EC())
    {
      swift_errorRelease();
      sub_10033C768();
      swift_bridgeObjectRelease();
      *(void *)(v2 + 64) = 0;
      *(_OWORD *)(v2 + 32) = 0u;
      *(_OWORD *)(v2 + 48) = 0u;
      *(_OWORD *)uint64_t v2 = 0u;
      *(_OWORD *)(v2 + 16) = 0u;
      swift_errorRelease();
      swift_release();
      return;
    }
    swift_errorRelease();
    goto LABEL_10;
  }
  __break(1u);
}

void sub_10032A948()
{
}

void sub_10032A974()
{
  sub_10031DE28();
  sub_10033B4CC();
  uint64_t v1 = sub_10033B49C();
  sub_10032281C(v1);
  if (v0)
  {
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (sub_10033BC58())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_errorRelease();
    swift_release();
  }
  else
  {
    sub_10033C2D4();
  }
  sub_10033C704();
  sub_10033B880();
}

uint64_t sub_10032AA48()
{
  return sub_10032AA90();
}

uint64_t sub_10032AA90()
{
  sub_10033BAA4();
  uint64_t v2 = sub_10033B49C();
  v1(v2);
  if (v0)
  {
    sub_10033C730();
    sub_10000566C(qword_100710378);
    if (sub_10033B6D0())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_errorRelease();
    swift_release();
  }
  else
  {
    sub_10033C2D4();
  }
  return sub_10033C704();
}

void sub_10032AB64()
{
}

void sub_10032AB7C()
{
  sub_10033BA38();
  sub_10033B44C();
  uint64_t v1 = sub_10033C110();
  sub_1003215B4(v1);
  if (v0)
  {
    sub_10033C730();
    sub_10000566C(qword_100710378);
    if (sub_10033B6D0())
    {
      swift_errorRelease();
      sub_10033C59C();
      swift_bridgeObjectRelease();
    }
    swift_errorRelease();
    swift_release();
  }
  else
  {
    sub_10033C2D4();
  }
  sub_10033BA20();
}

void sub_10032AC5C()
{
  sub_10033BA38();
  sub_10033B3C8();
  uint64_t v1 = sub_10033B470();
  sub_100323A4C(v1, v2, v3);
  if (v0)
  {
    sub_10033C308();
    sub_10000566C(qword_100710378);
    if (sub_10033B6D0())
    {
      swift_errorRelease();
      sub_10033BCF8();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_release();
      sub_10033BFF8();
    }
    else
    {
      swift_errorRelease();
      swift_release();
    }
  }
  else
  {
    sub_10033C0DC();
  }
  sub_10033BA20();
}

void sub_10032AD1C()
{
}

void sub_10032AD34()
{
  sub_10033BA38();
  sub_10033B3C8();
  sub_10033B470();
  sub_100323088();
  if (v0)
  {
    sub_10033C308();
    sub_10000566C(qword_100710378);
    if (sub_10033B6D0())
    {
      swift_errorRelease();
      sub_10033C59C();
      swift_bridgeObjectRelease();
    }
    swift_errorRelease();
    swift_release();
  }
  else
  {
    swift_release();
  }
  sub_10033BA20();
}

uint64_t sub_10032ADFC()
{
  return sub_10032AE34();
}

uint64_t sub_10032AE34()
{
  sub_10033BAA4();
  uint64_t v3 = sub_10033B49C();
  v2(v3);
  if (v0)
  {
    sub_10033C730();
    sub_10000566C(qword_100710378);
    if (sub_10033B6D0())
    {
      swift_errorRelease();
      sub_10033C59C();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_release();
      return 0;
    }
    else
    {
      swift_errorRelease();
      swift_release();
    }
  }
  else
  {
    sub_10033C2D4();
  }
  return v1;
}

uint64_t sub_10032AF10()
{
  return sub_10032AE34();
}

uint64_t sub_10032AF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t result = sub_100323418(a1, a2, a3, a4, a5);
  if (v5)
  {
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      return 0;
    }
    else
    {
      return swift_errorRelease();
    }
  }
  return result;
}

uint64_t sub_10032AFFC()
{
  return sub_10032B920();
}

void sub_10032B060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, __int16 a12, __int16 a13, int a14, uint64_t a15, char a16, uint64_t a17, char a18, int a19, char a20,int a21,char a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,unsigned __int8 a30)
{
  sub_10033C188();
  if (!__OFADD__(v33, 1))
  {
    sub_10033C140();
    if (v35 != v36)
    {
      int v37 = v34;
      uint64_t v38 = *v34;
      sub_10033BA60();
      swift_retain();
      swift_retain();
      uint64_t v39 = sub_10033B8B8();
      sub_100324454(v39, v40, v41);
      if (!v31)
      {
        swift_release();
        *(void *)uint64_t v30 = a15;
        *(unsigned char *)(v30 + 8) = a16;
        *(void *)(v30 + 16) = a17;
        *(unsigned char *)(v30 + 24) = a18;
        *(_DWORD *)(v30 + 28) = a19;
        *(unsigned char *)(v30 + 32) = a20;
        *(_DWORD *)(v30 + 36) = a21;
        *(unsigned char *)(v30 + 40) = a22;
        *(void *)(v30 + 48) = a23;
        *(unsigned char *)(v30 + 56) = a24;
        *(void *)(v30 + 64) = a25;
        *(unsigned char *)(v30 + 72) = a26;
        *(void *)(v30 + 80) = a27;
        *(unsigned char *)(v30 + 88) = a28;
        *(void *)(v30 + 96) = a29;
        *(_WORD *)(v30 + 104) = a30;
        goto LABEL_10;
      }
      swift_release();
      void *v37 = v38;
      v37[1] = v32;
      *((_DWORD *)v37 + 4) = a14;
      *((_WORD *)v37 + 10) = a13;
      *((unsigned char *)v37 + 22) = a11;
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v42 = sub_10020DD10();
      sub_10033BADC(v42, v43);
    }
    swift_willThrow();
    sub_10033C450();
    sub_10000566C(qword_100710378);
    if (sub_10033C5EC())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_OWORD *)(v30 + 89) = 0u;
      *(_OWORD *)(v30 + 64) = 0u;
      *(_OWORD *)(v30 + 80) = 0u;
      *(_OWORD *)(v30 + 32) = 0u;
      *(_OWORD *)(v30 + 48) = 0u;
      *(_OWORD *)uint64_t v30 = 0u;
      *(_OWORD *)(v30 + 16) = 0u;
      *(unsigned char *)(v30 + 105) = 1;
      swift_errorRelease();
      swift_release();
LABEL_11:
      sub_10033C168();
      return;
    }
    swift_errorRelease();
LABEL_10:
    swift_release();
    goto LABEL_11;
  }
  __break(1u);
}

void sub_10032B244()
{
}

void sub_10032B270()
{
}

void sub_10032B29C()
{
  sub_10031DE28();
  uint64_t v2 = v1;
  sub_10033B4CC();
  uint64_t v3 = sub_10033B6B0();
  v2(v3);
  if (v0)
  {
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (sub_10033BC58())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_release();
      sub_10033BFF8();
    }
    else
    {
      swift_errorRelease();
      swift_release();
    }
  }
  else
  {
    sub_10033C0DC();
  }
  sub_10033B880();
}

uint64_t sub_10032B384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_retain();
  uint64_t v15 = sub_100324B7C(a1, a2, a3, a4, a5, a6, a7, sub_1002F50F4);
  if (v7)
  {
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_release();
      return 0;
    }
    else
    {
      swift_errorRelease();
      swift_release();
    }
  }
  else
  {
    a6 = v15;
    swift_release();
  }
  return a6;
}

void sub_10032B4D0()
{
}

void sub_10032B4FC()
{
  sub_10033BA38();
  sub_10033B44C();
  uint64_t v1 = sub_10033C110();
  sub_100325100(v1, v2, v3, v4, v5, v6, v7);
  if (v0)
  {
    sub_10033C730();
    sub_10000566C(qword_100710378);
    if (sub_10033B6D0())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_errorRelease();
    swift_release();
  }
  else
  {
    sub_10033C2D4();
  }
  sub_10033C704();
  sub_10033BA20();
}

void sub_10032B5C0()
{
}

void sub_10032B5EC()
{
}

void sub_10032B618()
{
  sub_10031DE28();
  uint64_t v2 = v1;
  sub_10033B4CC();
  uint64_t v3 = sub_10033C1F4();
  v2(v3);
  if (v0)
  {
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (sub_10033BC58())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_errorRelease();
    swift_release();
  }
  else
  {
    sub_10033C2D4();
  }
  sub_10033C704();
  sub_10033B880();
}

uint64_t sub_10032B6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10032B748(a1, a2, a3, a4, a5, a6, a7, sub_10030C97C);
}

uint64_t sub_10032B71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10032B748(a1, a2, a3, a4, a5, a6, a7, sub_100306810);
}

#error "10032B7D8: call analysis failed (funcsize=90)"

uint64_t sub_10032B8BC()
{
  return sub_10032B920();
}

uint64_t sub_10032B920()
{
  sub_10033BD10();
  swift_retain();
  uint64_t v1 = sub_10033B49C();
  unsigned int v2 = sub_100324330(v1);
  if (!v0)
  {
    unsigned int v4 = v2;
    swift_release();
    uint64_t v3 = v4;
    return v3 | ((unint64_t)(v0 != 0) << 32);
  }
  swift_errorRetain();
  sub_10000566C(qword_100710378);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_release();
    uint64_t v3 = 0;
    return v3 | ((unint64_t)(v0 != 0) << 32);
  }
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_10032BA48@<X0>(uint64_t a1@<X8>)
{
  swift_retain();
  uint64_t v3 = sub_10033B6B0();
  sub_100326148(v3, v4, v5, v6);
  if (!v1)
  {
    uint64_t v8 = v13;
    uint64_t v9 = v14;
    uint64_t v10 = v15;
    uint64_t v11 = v16;
    char v12 = v17;
    uint64_t result = swift_release();
    goto LABEL_5;
  }
  swift_errorRetain();
  sub_10000566C(qword_100710378);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    sub_10033C59C();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    uint64_t result = swift_release();
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    char v12 = 0;
LABEL_5:
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v10;
    *(void *)(a1 + 24) = v11;
    *(unsigned char *)(a1 + 32) = v12;
    return result;
  }
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_10032BB70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = sub_100326DD8(a1, a2, a3);
  if (!v3) {
    return v4 & 1;
  }
  sub_10033C604();
  sub_10000566C(qword_100710378);
  if ((sub_10033C0C0() & 1) == 0) {
    return swift_errorRelease();
  }
  swift_errorRelease();
  sub_10033BCF8();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  return 2;
}

#error "10032BC64: call analysis failed (funcsize=93)"

void sub_10032BD80()
{
  sub_10033BA38();
  sub_10033B3C8();
  uint64_t v1 = sub_10033B470();
  sub_100327D24(v1, v2, v3, v4, v5, v6, v7);
  if (v0)
  {
    sub_10033C308();
    sub_10000566C(qword_100710378);
    if (sub_10033B6D0())
    {
      swift_errorRelease();
      sub_10033BCF8();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_release();
      sub_10033BFF8();
    }
    else
    {
      swift_errorRelease();
      swift_release();
    }
  }
  else
  {
    swift_release();
  }
  sub_10033BA20();
}

uint64_t sub_10032BE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_retain();
  unsigned int v15 = sub_100328398(a1, a2, a3, a4, a5, a6, a7, 0x494C41564449553BLL, 0xED00003D59544944, sub_100307D88);
  if (!v7)
  {
    unsigned int v17 = v15;
    swift_release();
    uint64_t v16 = v17;
    return v16 | ((unint64_t)(v7 != 0) << 32);
  }
  swift_errorRetain();
  sub_10000566C(qword_100710378);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_release();
    uint64_t v16 = 0;
    return v16 | ((unint64_t)(v7 != 0) << 32);
  }
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_10032BFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_retain();
  uint64_t v15 = sub_100327C4C(a1, a2, a3, a4, a5, a6, a7, 63, 0xE100000000000000, sub_10030D188);
  if (v7)
  {
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_release();
      return 0;
    }
    else
    {
      swift_errorRelease();
      swift_release();
    }
  }
  else
  {
    a6 = v15;
    swift_release();
  }
  return a6;
}

uint64_t sub_10032C110@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (!__OFADD__(a2, 1))
  {
    uint64_t v6 = a4;
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v11 = swift_allocError();
      void *v12 = a3;
    }
    else
    {
      uint64_t v7 = result;
      uint64_t v8 = *(void *)result;
      uint64_t v9 = *(void *)(result + 8);
      int v10 = *(_DWORD *)(result + 16);
      char v13 = *(unsigned char *)(result + 22);
      __int16 v14 = *(_WORD *)(result + 20);
      swift_retain();
      sub_10030E584();
      uint64_t v11 = v4;
      if (!v4)
      {
        swift_release();
        sub_100217504((uint64_t)v18, a4);
        UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)a4);
        return swift_release();
      }
      swift_release();
      *(void *)uint64_t v7 = v8;
      *(void *)(v7 + 8) = v9;
      *(_DWORD *)(v7 + 16) = v10;
      *(_WORD *)(v7 + 20) = v14;
      *(unsigned char *)(v7 + 22) = v13;
      uint64_t v6 = a4;
    }
    swift_willThrow();
    uint64_t v17 = v11;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1001E53E0((uint64_t)v16);
      sub_1001F39D8((uint64_t)v16, v6, &qword_10070FD88);
      swift_errorRelease();
      return swift_release();
    }
    swift_errorRelease();
    return swift_release();
  }
  __break(1u);
  return result;
}

void sub_10032C2F4()
{
}

uint64_t sub_10032C320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10032C378(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_10032C34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10032C378(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_10032C378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10033B4CC();
  uint64_t v9 = sub_10033B6B0();
  sub_1003276CC(v9);
  if (v7)
  {
    sub_10033C308();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      a7 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_release();
      sub_10033BFF8();
    }
    else
    {
      swift_errorRelease();
      swift_release();
    }
  }
  else
  {
    sub_10033C0DC();
  }
  return a7;
}

void sub_10032C480(uint64_t a1, uint64_t a2)
{
  if (!__OFADD__(a2, 1))
  {
    sub_10033C140();
    if (v6 != v7)
    {
      uint64_t v8 = v5;
      sub_10033B7D4();
      swift_retain();
      uint64_t v9 = sub_10033B8B8();
      sub_100326ED8(v9, v10, v11, v12);
      if (!v3)
      {
        swift_release();
        *(_OWORD *)uint64_t v2 = v27;
        *(_OWORD *)(v2 + 16) = v28;
        *(_OWORD *)(v2 + 32) = v29;
        *(void *)(v2 + 48) = v30;
        *(_WORD *)(v2 + 56) = v31;
LABEL_10:
        swift_release();
        return;
      }
      uint64_t v13 = swift_release();
      void *v8 = v4;
      sub_10033B670(v13, v14, v15, v16, v17, v18, v19, v20, *(int *)v23, v23[4], v24, v25, v26);
    }
    else
    {
      sub_1002DB5BC();
      uint64_t v21 = sub_10020DD10();
      sub_10033BADC(v21, v22);
    }
    swift_willThrow();
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_OWORD *)(v2 + 41) = 0u;
      *(_OWORD *)(v2 + 16) = 0u;
      *(_OWORD *)(v2 + 32) = 0u;
      *(_OWORD *)uint64_t v2 = 0u;
      *(unsigned char *)(v2 + 57) = 1;
      swift_errorRelease();
      swift_release();
      return;
    }
    swift_errorRelease();
    goto LABEL_10;
  }
  __break(1u);
}

void sub_10032C60C()
{
  sub_10031DE28();
  uint64_t v2 = v1;
  sub_10033B4CC();
  uint64_t v3 = sub_10033C1F4();
  v2(v3);
  if (v0)
  {
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (sub_10033BC58())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_release();
      sub_10033BFF8();
    }
    else
    {
      swift_errorRelease();
      swift_release();
    }
  }
  else
  {
    swift_release();
  }
  sub_10033B880();
}

uint64_t sub_10032C6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_retain();
  uint64_t v15 = sub_1003272F8(a1, a2, a3, a4, a5, a6, a7);
  if (v7)
  {
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_release();
      return 0;
    }
    else
    {
      swift_errorRelease();
      swift_release();
    }
  }
  else
  {
    a6 = v15;
    swift_release();
  }
  return a6;
}

void sub_10032C824()
{
  sub_10031DE28();
  uint64_t v2 = v1;
  sub_10033B4CC();
  uint64_t v3 = sub_10033B6B0();
  v2(v3);
  if (v0)
  {
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (sub_10033BC58())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_release();
      sub_10033BFF8();
    }
    else
    {
      swift_errorRelease();
      swift_release();
    }
  }
  else
  {
    sub_10033C0DC();
  }
  sub_10033B880();
}

void sub_10032C90C()
{
  sub_10033BA38();
  sub_10033B3C8();
  uint64_t v1 = sub_10033B470();
  sub_100328B7C(v1, v2, v3, v4, v5, v6, v7);
  if (v0)
  {
    sub_10033C308();
    sub_10000566C(qword_100710378);
    if (sub_10033B6D0())
    {
      swift_errorRelease();
      sub_10033BCF8();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_release();
      sub_10033BFF8();
    }
    else
    {
      swift_errorRelease();
      swift_release();
    }
  }
  else
  {
    sub_10033C0DC();
  }
  sub_10033BA20();
}

void sub_10032C9CC()
{
  sub_10033BA38();
  sub_10033B3C8();
  uint64_t v1 = sub_10033B470();
  sub_100329064(v1, v2, v3);
  if (v0)
  {
    sub_10033C308();
    sub_10000566C(qword_100710378);
    if (sub_10033B6D0())
    {
      swift_errorRelease();
      sub_10033BCF8();
      swift_bridgeObjectRelease();
    }
    swift_errorRelease();
    swift_release();
  }
  else
  {
    swift_release();
  }
  sub_10033BA20();
}

#error "10032CB08: call analysis failed (funcsize=83)"

#error "10032CC68: call analysis failed (funcsize=83)"

uint64_t sub_10032CD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t result = sub_100329490(a1, a2, a3, a4, a5);
  if (v5)
  {
    sub_10033C604();
    sub_10000566C(qword_100710378);
    if (sub_10033C0C0())
    {
      swift_errorRelease();
      sub_10033BCF8();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      return 0;
    }
    else
    {
      return swift_errorRelease();
    }
  }
  return result;
}

uint64_t sub_10032CDDC@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  sub_10031E46C();
  if (!v2) {
    return storeEnumTagSinglePayload for ClientCommand(a2, 0, 1, a1);
  }
  swift_errorRetain();
  sub_10000566C(qword_100710378);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    sub_10033C59C();
    swift_bridgeObjectRelease();
    storeEnumTagSinglePayload for ClientCommand(a2, 1, 1, a1);
  }
  return swift_errorRelease();
}

uint64_t sub_10032CEB0(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if (*(_DWORD *)(a1 + 12) == v1)
  {
    sub_1002E1490();
    sub_10020DD10();
    return swift_willThrow();
  }
  else
  {
    uint64_t v4 = *(unsigned __int8 *)(a1 + 22);
    uint64_t v5 = *(unsigned __int16 *)(a1 + 20);
    uint64_t v6 = (void *)(*(void *)a1 + 24);
    uint64_t result = sub_1001F969C();
    if (v1 == -1)
    {
      __break(1u);
    }
    else
    {
      uint64_t result = *(unsigned __int8 *)(*v6 + (v4 | (v5 << 8)) + v1);
      *(_DWORD *)(a1 + 8) = v1 + 1;
    }
  }
  return result;
}

uint64_t sub_10032CF5C()
{
  sub_10031DE04();
  uint64_t result = v2();
  if (!v1)
  {
    *(void *)uint64_t v0 = result;
    *(void *)(v0 + 8) = v4;
    *(_DWORD *)(v0 + 16) = v5;
    *(unsigned char *)(v0 + 22) = BYTE6(v5);
    *(_WORD *)(v0 + 20) = WORD2(v5);
    *(unsigned char *)(v0 + 23) = HIBYTE(v5) & 1;
  }
  return result;
}

uint64_t sub_10032CFA8()
{
  sub_10031DE04();
  uint64_t result = v2();
  if (!v1) {
    *uint64_t v0 = result;
  }
  return result;
}

uint64_t sub_10032CFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = sub_1005E3260();
  sub_10032F3E0(a1, (uint64_t)&v15, a2, a3, a4, a5, a6);
  if (!v6) {
    return v15;
  }
  uint64_t v14 = sub_1005E21F0();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v14 - 8) + 8))(&v15, v14);
}

uint64_t sub_10032D0C8()
{
  return sub_10032D120();
}

uint64_t sub_10032D0F4()
{
  return sub_10032D120();
}

uint64_t sub_10032D120()
{
  sub_10033BD10();
  uint64_t v10 = _swiftEmptyArrayStorage;
  swift_retain();
  sub_10031E5B4(v8, v7, v6, &v10, v5, v0, v4, v3, v1);
  swift_release();
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  else {
    return (uint64_t)v10;
  }
}

uint64_t sub_10032D1CC()
{
  return sub_10032D120();
}

uint64_t sub_10032D1F8()
{
  return sub_10032D120();
}

uint64_t sub_10032D224()
{
  return sub_10032D120();
}

uint64_t sub_10032D250()
{
  return sub_10032D120();
}

void *sub_10032D27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = _swiftEmptyArrayStorage;
  sub_10031E6D8(a1, a2, a3, (uint64_t *)&v7, a4);
  uint64_t v5 = v7;
  if (v4) {
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_10032D2D8()
{
  sub_10031DE04();
  uint64_t result = v2();
  if (!v1) {
    *uint64_t v0 = result;
  }
  return result;
}

uint64_t sub_10032D308@<X0>(uint64_t *a1@<X8>)
{
  return sub_10032D38C(sub_1002EB118, a1);
}

uint64_t sub_10032D334@<X0>(uint64_t *a1@<X8>)
{
  return sub_10032D38C(sub_1002EB154, a1);
}

uint64_t sub_10032D360@<X0>(uint64_t *a1@<X8>)
{
  return sub_10032D38C(sub_1002EB190, a1);
}

uint64_t sub_10032D38C@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_10032D3BC()
{
  sub_10031DE04();
  uint64_t result = v2();
  if (!v1)
  {
    *(void *)uint64_t v0 = result;
    *(void *)(v0 + 8) = v4;
    *(unsigned char *)(v0 + 16) = v5;
  }
  return result;
}

uint64_t *sub_10032D3F0(uint64_t *result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v5 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v12 = sub_10020DD10();
      sub_10031DB40(v12, v13);
      return (uint64_t *)swift_willThrow();
    }
    uint64_t v8 = (uint64_t)result;
    uint64_t v9 = *result;
    sub_10033C560();
    char v11 = *(unsigned char *)(v10 + 22);
    swift_retain();
    sub_100337A24(v8, v5, a3, a4 & 1, &v14);
    if (v4)
    {
      swift_release();
      *(void *)uint64_t v8 = v9;
      sub_10033C478();
      *(unsigned char *)(v8 + 22) = v11;
      return (uint64_t *)swift_willThrow();
    }
    swift_release();
    return (uint64_t *)v14;
  }
  return result;
}

uint64_t sub_10032D4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t, void, uint64_t, void *, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))
{
  sub_10031DE28();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  sub_10031E1C0();
  if (!v11)
  {
    int v26 = (void *)swift_allocObject();
    _OWORD v26[2] = v19;
    v26[3] = v17;
    v26[4] = v15;
    v26[5] = v13;
    swift_retain();
    uint64_t v21 = a11(a9, 0, a10, v26, v25, v23, v21, 0xD000000000000020, 0x80000001005E63C0, 33);
    swift_release();
  }
  return v21;
}

void *sub_10032D5FC@<X0>(void *(*a1)(void *__return_ptr)@<X3>, uint64_t a2@<X8>)
{
  uint64_t result = a1(v5);
  if (!v2) {
    return (void *)sub_100217504((uint64_t)v5, a2);
  }
  return result;
}

uint64_t sub_10032D64C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10030E8E4();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_10032D678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_1005E19E0();
  if ((result & 0x100) != 0) {
    goto LABEL_10;
  }
  uint64_t v10 = a4 + 1;
  if (__OFADD__(a4, 1))
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (v10 >= a5)
  {
    sub_1002DB5BC();
    sub_10020DD10();
    uint64_t *v11 = a5;
  }
  else
  {
    uint64_t result = sub_100338ADC(a3, v10, a5, result);
    if (!v5) {
      return result;
    }
    sub_10031D700();
  }
  return swift_willThrow();
}

uint64_t BadCommand.parserError.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 BadCommand.parserError.setter(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v4;
  *(void *)(v1 + 48) = *(void *)(a1 + 32);
  return result;
}

unint64_t sub_10032D7D0@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(unsigned int *)(result + 8);
  unint64_t v3 = *(unsigned int *)(result + 12);
  if (v3 < v2)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    return result;
  }
  unint64_t v5 = *(unsigned __int8 *)(result + 22) | ((unint64_t)*(unsigned __int16 *)(result + 20) << 8);
  if (*(_DWORD *)(result + 16) - (int)v5 < v3) {
    goto LABEL_28;
  }
  if (v2 == v3)
  {
LABEL_4:
    sub_1002E1490();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    uint64_t v6 = *(void *)result;
    swift_beginAccess();
    __n128 result = 0;
    unint64_t v7 = *(void *)(v6 + 24) + v5 + v2;
    while (1)
    {
      if (v2 + result >= v3)
      {
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      if (result >= (v3 - v2)) {
        goto LABEL_26;
      }
      unsigned int v8 = *(unsigned __int8 *)(v7 + result);
      if (v8 != 93)
      {
        unsigned int v9 = v8 - 32;
        if (v8 < 0x20) {
          break;
        }
        BOOL v10 = v9 > 0x3C;
        uint64_t v11 = (1 << v9) & 0x1000000000000725;
        BOOL v12 = v10 || v11 == 0;
        if (!v12 || v8 == 123 || (v8 & 0x80) != 0 || v8 == 43) {
          break;
        }
      }
      ++result;
      if (!(v2 - v3 + result)) {
        goto LABEL_4;
      }
    }
    if (!result)
    {
      sub_1005E2C80(19);
      v16._object = (void *)0x80000001005E6810;
      v16._countAndFlagsBits = 0xD000000000000011;
      sub_1005E1E30(v16);
      sub_1005E1D80();
      sub_1005E1A20();
      swift_bridgeObjectRelease();
      sub_100296090();
      swift_allocError();
      *uint64_t v15 = 0;
      v15[1] = 0xE000000000000000;
      v15[2] = 0xD000000000000020;
      v15[3] = 0x80000001005E63C0;
      v15[4] = 110;
      return swift_willThrow();
    }
    __n128 result = ByteBuffer.readSlice(length:)(result);
    if (!result) {
      goto LABEL_29;
    }
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v13;
    *(_DWORD *)(a2 + 16) = v14;
    *(_WORD *)(a2 + 20) = WORD2(v14);
    *(unsigned char *)(a2 + 22) = BYTE6(v14);
  }
  return result;
}

uint64_t sub_10032DA6C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(unsigned int *)(result + 8);
  unint64_t v3 = *(unsigned int *)(result + 12);
  if (v3 < v2)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    return result;
  }
  unsigned int v4 = *(unsigned __int8 *)(result + 22) | (*(unsigned __int16 *)(result + 20) << 8);
  if (*(_DWORD *)(result + 16) - v4 < v3) {
    goto LABEL_21;
  }
  if (v2 == v3)
  {
LABEL_12:
    sub_1002E1490();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    unint64_t v5 = (void *)(*(void *)result + 24);
    __n128 result = swift_beginAccess();
    unint64_t v6 = 0;
    uint64_t v7 = v2 + v4;
    while (1)
    {
      if (v2 + v6 >= v3)
      {
        __break(1u);
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      if (v6 >= (v3 - v2)) {
        goto LABEL_19;
      }
      int v8 = *(unsigned __int8 *)(*v5 + v7 + v6);
      __n128 result = isalnum(v8);
      if (!result && (v8 - 45) > 1) {
        break;
      }
      ++v6;
      if (!(v2 - v3 + v6)) {
        goto LABEL_12;
      }
    }
    if (!v6)
    {
      sub_1005E2C80(19);
      v14._object = (void *)0x80000001005E6810;
      v14._countAndFlagsBits = 0xD000000000000011;
      sub_1005E1E30(v14);
      sub_1005E1D80();
      sub_1005E1A20();
      swift_bridgeObjectRelease();
      sub_100296090();
      swift_allocError();
      void *v12 = 0;
      v12[1] = 0xE000000000000000;
      v12[2] = 0xD000000000000020;
      v12[3] = 0x80000001005E63C0;
      v12[4] = 110;
      return swift_willThrow();
    }
    __n128 result = ByteBuffer.readSlice(length:)(v6);
    if (!result) {
      goto LABEL_22;
    }
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = v11;
    *(_WORD *)(a2 + 20) = WORD2(v11);
    *(unsigned char *)(a2 + 22) = BYTE6(v11);
  }
  return result;
}

unint64_t sub_10032DCE8@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(unsigned int *)(result + 8);
  unint64_t v3 = *(unsigned int *)(result + 12);
  if (v3 < v2)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  unint64_t v5 = *(unsigned __int8 *)(result + 22) | ((unint64_t)*(unsigned __int16 *)(result + 20) << 8);
  if (*(_DWORD *)(result + 16) - (int)v5 < v3) {
    goto LABEL_18;
  }
  if (v2 == v3)
  {
LABEL_9:
    sub_1002E1490();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    uint64_t v6 = *(void *)result;
    swift_beginAccess();
    __n128 result = 0;
    while (1)
    {
      if (v2 + result >= v3)
      {
        __break(1u);
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
      if (result >= (v3 - v2)) {
        goto LABEL_16;
      }
      if (*(unsigned __int8 *)(*(void *)(v6 + 24) + v5 + v2 + result) - 58 < 0xFFFFFFF6) {
        break;
      }
      ++result;
      if (!(v2 - v3 + result)) {
        goto LABEL_9;
      }
    }
    if (!result)
    {
      sub_1005E2C80(19);
      v10._object = (void *)0x80000001005E6810;
      v10._countAndFlagsBits = 0xD000000000000011;
      sub_1005E1E30(v10);
      sub_1005E1D80();
      sub_1005E1A20();
      swift_bridgeObjectRelease();
      sub_100296090();
      swift_allocError();
      *unsigned int v9 = 0;
      v9[1] = 0xE000000000000000;
      v9[2] = 0xD000000000000020;
      v9[3] = 0x80000001005E63C0;
      v9[4] = 110;
      return swift_willThrow();
    }
    __n128 result = ByteBuffer.readSlice(length:)(result);
    if (!result) {
      goto LABEL_19;
    }
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v7;
    *(_DWORD *)(a2 + 16) = v8;
    *(_WORD *)(a2 + 20) = WORD2(v8);
    *(unsigned char *)(a2 + 22) = BYTE6(v8);
  }
  return result;
}

unint64_t sub_10032DF48@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(unsigned int *)(result + 8);
  unint64_t v3 = *(unsigned int *)(result + 12);
  if (v3 < v2)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    return result;
  }
  unint64_t v5 = *(unsigned __int8 *)(result + 22) | ((unint64_t)*(unsigned __int16 *)(result + 20) << 8);
  if (*(_DWORD *)(result + 16) - (int)v5 < v3) {
    goto LABEL_26;
  }
  if (v2 == v3)
  {
LABEL_4:
    sub_1002E1490();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    uint64_t v6 = *(void *)result;
    swift_beginAccess();
    __n128 result = 0;
    unint64_t v7 = *(void *)(v6 + 24) + v5 + v2;
    while (1)
    {
      if (v2 + result >= v3)
      {
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      if (result >= (v3 - v2)) {
        goto LABEL_24;
      }
      unsigned int v8 = *(unsigned __int8 *)(v7 + result);
      unsigned int v9 = v8 - 32;
      if (v8 < 0x20) {
        break;
      }
      BOOL v10 = v9 > 0x3D;
      uint64_t v11 = (1 << v9) & 0x3000000000000725;
      BOOL v12 = v10 || v11 == 0;
      if (!v12 || v8 == 123 || (v8 & 0x80) != 0) {
        break;
      }
      ++result;
      if (!(v2 - v3 + result)) {
        goto LABEL_4;
      }
    }
    if (!result)
    {
      sub_1005E2C80(19);
      v16._object = (void *)0x80000001005E6810;
      v16._countAndFlagsBits = 0xD000000000000011;
      sub_1005E1E30(v16);
      sub_1005E1D80();
      sub_1005E1A20();
      swift_bridgeObjectRelease();
      sub_100296090();
      swift_allocError();
      *uint64_t v15 = 0;
      v15[1] = 0xE000000000000000;
      v15[2] = 0xD000000000000020;
      v15[3] = 0x80000001005E63C0;
      v15[4] = 110;
      return swift_willThrow();
    }
    __n128 result = ByteBuffer.readSlice(length:)(result);
    if (!result) {
      goto LABEL_27;
    }
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v13;
    *(_DWORD *)(a2 + 16) = v14;
    *(_WORD *)(a2 + 20) = WORD2(v14);
    *(unsigned char *)(a2 + 22) = BYTE6(v14);
  }
  return result;
}

unint64_t sub_10032E1D4@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(unsigned int *)(result + 8);
  unint64_t v3 = *(unsigned int *)(result + 12);
  if (v3 < v2)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  unint64_t v5 = *(unsigned __int8 *)(result + 22) | ((unint64_t)*(unsigned __int16 *)(result + 20) << 8);
  if (*(_DWORD *)(result + 16) - (int)v5 < v3) {
    goto LABEL_24;
  }
  if (v2 == v3)
  {
LABEL_15:
    sub_1002E1490();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    uint64_t v6 = *(void *)result;
    swift_beginAccess();
    __n128 result = 0;
    unint64_t v7 = *(void *)(v6 + 24) + v5 + v2;
    while (1)
    {
      if (v2 + result >= v3)
      {
        __break(1u);
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      if (result >= (v3 - v2)) {
        goto LABEL_22;
      }
      int v8 = *(unsigned __int8 *)(v7 + result);
      BOOL v9 = (v8 - 45) >= 2 && (v8 - 48) >= 0xA;
      if (v9 && (v8 & 0xFFFFFFDF) - 65 > 0x19) {
        break;
      }
      ++result;
      if (!(v2 - v3 + result)) {
        goto LABEL_15;
      }
    }
    if (!result)
    {
      sub_1005E2C80(19);
      v14._object = (void *)0x80000001005E6810;
      v14._countAndFlagsBits = 0xD000000000000011;
      sub_1005E1E30(v14);
      sub_1005E1D80();
      sub_1005E1A20();
      swift_bridgeObjectRelease();
      sub_100296090();
      swift_allocError();
      *uint64_t v13 = 0;
      v13[1] = 0xE000000000000000;
      void v13[2] = 0xD000000000000020;
      v13[3] = 0x80000001005E63C0;
      v13[4] = 110;
      return swift_willThrow();
    }
    __n128 result = ByteBuffer.readSlice(length:)(result);
    if (!result) {
      goto LABEL_25;
    }
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v11;
    *(_DWORD *)(a2 + 16) = v12;
    *(_WORD *)(a2 + 20) = WORD2(v12);
    *(unsigned char *)(a2 + 22) = BYTE6(v12);
  }
  return result;
}

uint64_t sub_10032E448@<X0>(uint64_t result@<X0>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3 = *(unsigned int *)(result + 8);
  unint64_t v4 = *(unsigned int *)(result + 12);
  if (v4 < v3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  unsigned int v5 = *(unsigned __int8 *)(result + 22) | (*(unsigned __int16 *)(result + 20) << 8);
  if (*(_DWORD *)(result + 16) - v5 < v4) {
    goto LABEL_18;
  }
  if (v3 == v4)
  {
LABEL_9:
    sub_1002E1490();
    sub_10020DD10();
    return swift_willThrow();
  }
  else
  {
    unint64_t v7 = (void *)(*(void *)result + 24);
    __n128 result = sub_1001F969C();
    unint64_t v8 = 0;
    uint64_t v9 = v3 + v5;
    while (1)
    {
      if (v3 + v8 >= v4)
      {
        __break(1u);
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
      if (v8 >= (v4 - v3)) {
        goto LABEL_16;
      }
      __n128 result = a2(*(unsigned __int8 *)(*v7 + v9 + v8));
      if (!result) {
        break;
      }
      ++v8;
      if (!(v3 - v4 + v8)) {
        goto LABEL_9;
      }
    }
    if (!v8)
    {
      sub_1005E2C80(19);
      v14._object = (void *)0x80000001005E6810;
      v14._countAndFlagsBits = 0xD000000000000011;
      sub_1005E1E30(v14);
      sub_1005E1D80();
      sub_1005E1A20();
      swift_bridgeObjectRelease();
      sub_100296090();
      sub_10020DD10();
      void *v12 = 0;
      v12[1] = 0xE000000000000000;
      sub_10033BC9C(v12, 0xD000000000000020);
      return swift_willThrow();
    }
    __n128 result = ByteBuffer.readSlice(length:)(v8);
    if (!result) {
      goto LABEL_19;
    }
    *(void *)a3 = result;
    *(void *)(a3 + 8) = v10;
    *(_DWORD *)(a3 + 16) = v11;
    *(_WORD *)(a3 + 20) = WORD2(v11);
    *(unsigned char *)(a3 + 22) = BYTE6(v11);
  }
  return result;
}

void sub_10032E6A8()
{
  sub_10031DE28();
  uint64_t v2 = *(unsigned int *)(v1 + 8);
  unint64_t v3 = *(unsigned int *)(v1 + 12);
  if (v3 < v2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_10033BF50();
  if (!v4)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    return;
  }
  if (v2 == v3)
  {
LABEL_15:
    sub_1002E1490();
    sub_10020DD10();
LABEL_16:
    swift_willThrow();
    goto LABEL_20;
  }
  sub_1001F969C();
  unint64_t v5 = sub_10033C33C();
  while (1)
  {
    if (v2 + v5 >= v3)
    {
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    if (v5 >= (v3 - v2)) {
      goto LABEL_23;
    }
    unsigned int v9 = *(unsigned __int8 *)(v7 + v5);
    unsigned int v10 = v9 - 32;
    if (v9 < 0x20) {
      break;
    }
    if (v10 <= 0x3D)
    {
      if (((v8 << v10) & 0x2000000000000420) != 0) {
        goto LABEL_14;
      }
      if (((v8 << v10) & 0x1000000000000305) != 0) {
        break;
      }
    }
    if (v9 == 123 || (v9 & 0x80) != 0) {
      break;
    }
LABEL_14:
    ++v5;
    if (!(v6 + v5)) {
      goto LABEL_15;
    }
  }
  if (!v5)
  {
    sub_10033C214();
    sub_10033C42C((uint64_t)"Found unexpected ");
    sub_10033B550();
    sub_1005E1A20();
    swift_bridgeObjectRelease();
    sub_100296090();
    sub_10020DD10();
    *Swift::String v14 = v15;
    v14[1] = v16;
    sub_10033BC9C(v14, v0 + 15);
    goto LABEL_16;
  }
  uint64_t v11 = ByteBuffer.readSlice(length:)(v5);
  if (!v11) {
    goto LABEL_26;
  }
  sub_10033BF08(v11, v12, v13);
LABEL_20:
  sub_10033B880();
}

unint64_t sub_10032E844@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(unsigned int *)(result + 8);
  unint64_t v3 = *(unsigned int *)(result + 12);
  if (v3 < v2)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    return result;
  }
  unint64_t v5 = *(unsigned __int8 *)(result + 22) | ((unint64_t)*(unsigned __int16 *)(result + 20) << 8);
  if (*(_DWORD *)(result + 16) - (int)v5 < v3) {
    goto LABEL_25;
  }
  if (v2 == v3)
  {
LABEL_4:
    sub_1002E1490();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    uint64_t v6 = *(void *)result;
    swift_beginAccess();
    __n128 result = 0;
    unint64_t v7 = *(void *)(v6 + 24) + v5 + v2;
    while (1)
    {
      if (v2 + result >= v3)
      {
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      if (result >= (v3 - v2)) {
        goto LABEL_23;
      }
      int v8 = *(unsigned __int8 *)(v7 + result);
      BOOL v9 = v8 == 10 || v8 == 13;
      if (v9 || (v8 & 0x80) != 0 || !*(unsigned char *)(v7 + result) || v8 == 93) {
        break;
      }
      ++result;
      if (!(v2 - v3 + result)) {
        goto LABEL_4;
      }
    }
    if (!result)
    {
      sub_1005E2C80(19);
      v13._object = (void *)0x80000001005E6810;
      v13._countAndFlagsBits = 0xD000000000000011;
      sub_1005E1E30(v13);
      sub_1005E1D80();
      sub_1005E1A20();
      swift_bridgeObjectRelease();
      sub_100296090();
      swift_allocError();
      void *v12 = 0;
      v12[1] = 0xE000000000000000;
      v12[2] = 0xD000000000000020;
      v12[3] = 0x80000001005E63C0;
      v12[4] = 110;
      return swift_willThrow();
    }
    __n128 result = ByteBuffer.readSlice(length:)(result);
    if (!result) {
      goto LABEL_26;
    }
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 16) = v11;
    *(_WORD *)(a2 + 20) = WORD2(v11);
    *(unsigned char *)(a2 + 22) = BYTE6(v11);
  }
  return result;
}

unint64_t sub_10032EAB8@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(unsigned int *)(result + 8);
  unint64_t v3 = *(unsigned int *)(result + 12);
  if (v3 < v2)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  unint64_t v5 = *(unsigned __int8 *)(result + 22) | ((unint64_t)*(unsigned __int16 *)(result + 20) << 8);
  if (*(_DWORD *)(result + 16) - (int)v5 < v3) {
    goto LABEL_24;
  }
  if (v2 == v3)
  {
LABEL_4:
    sub_1002E1490();
    swift_allocError();
    return swift_willThrow();
  }
  uint64_t v6 = *(void *)result;
  swift_beginAccess();
  __n128 result = 0;
  unint64_t v7 = *(void *)(v6 + 24) + v5 + v2;
  while (1)
  {
    if (v2 + result >= v3)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    if (result >= (v3 - v2)) {
      goto LABEL_22;
    }
    unsigned int v8 = *(unsigned __int8 *)(v7 + result);
    uint64_t v9 = v8 - 32;
    if (v8 < 0x20) {
      break;
    }
    if (v9 <= 0x3D)
    {
      if (v9 == 61) {
        goto LABEL_14;
      }
      if (((1 << (v8 - 32)) & 0x1000000000000725) != 0) {
        break;
      }
    }
    if (v8 == 123 || (v8 & 0x80) != 0) {
      break;
    }
LABEL_14:
    ++result;
    if (!(v2 - v3 + result)) {
      goto LABEL_4;
    }
  }
  if (!result)
  {
    sub_1005E2C80(19);
    v13._object = (void *)0x80000001005E6810;
    v13._countAndFlagsBits = 0xD000000000000011;
    sub_1005E1E30(v13);
    sub_1005E1D80();
    sub_1005E1A20();
    swift_bridgeObjectRelease();
    sub_100296090();
    swift_allocError();
    void *v12 = 0;
    v12[1] = 0xE000000000000000;
    v12[2] = 0xD000000000000020;
    v12[3] = 0x80000001005E63C0;
    v12[4] = 110;
    return swift_willThrow();
  }
  __n128 result = ByteBuffer.readSlice(length:)(result);
  if (!result) {
    goto LABEL_25;
  }
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v10;
  *(_DWORD *)(a2 + 16) = v11;
  *(_WORD *)(a2 + 20) = WORD2(v11);
  *(unsigned char *)(a2 + 22) = BYTE6(v11);
  return result;
}

unint64_t sub_10032ED4C@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(unsigned int *)(result + 8);
  unint64_t v3 = *(unsigned int *)(result + 12);
  if (v3 < v2)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    return result;
  }
  unint64_t v5 = *(unsigned __int8 *)(result + 22) | ((unint64_t)*(unsigned __int16 *)(result + 20) << 8);
  if (*(_DWORD *)(result + 16) - (int)v5 < v3) {
    goto LABEL_27;
  }
  if (v2 == v3)
  {
LABEL_4:
    sub_1002E1490();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    uint64_t v6 = *(void *)result;
    swift_beginAccess();
    __n128 result = 0;
    unint64_t v7 = *(void *)(v6 + 24) + v5 + v2;
    while (1)
    {
      if (v2 + result >= v3)
      {
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      if (result >= (v3 - v2)) {
        goto LABEL_25;
      }
      unsigned int v8 = *(unsigned __int8 *)(v7 + result);
      unsigned int v9 = v8 - 32;
      if (v8 < 0x20) {
        break;
      }
      BOOL v10 = v9 > 0x3D;
      uint64_t v11 = (1 << v9) & 0x3000000000000725;
      BOOL v12 = v10 || v11 == 0;
      if (!v12 || v8 == 123 || (v8 & 0x80) != 0 || v8 == 47) {
        break;
      }
      ++result;
      if (!(v2 - v3 + result)) {
        goto LABEL_4;
      }
    }
    if (!result)
    {
      sub_1005E2C80(19);
      v16._object = (void *)0x80000001005E6810;
      v16._countAndFlagsBits = 0xD000000000000011;
      sub_1005E1E30(v16);
      sub_1005E1D80();
      sub_1005E1A20();
      swift_bridgeObjectRelease();
      sub_100296090();
      swift_allocError();
      *uint64_t v15 = 0;
      v15[1] = 0xE000000000000000;
      v15[2] = 0xD000000000000020;
      v15[3] = 0x80000001005E63C0;
      v15[4] = 110;
      return swift_willThrow();
    }
    __n128 result = ByteBuffer.readSlice(length:)(result);
    if (!result) {
      goto LABEL_28;
    }
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v13;
    *(_DWORD *)(a2 + 16) = v14;
    *(_WORD *)(a2 + 20) = WORD2(v14);
    *(unsigned char *)(a2 + 22) = BYTE6(v14);
  }
  return result;
}

void sub_10032EFE0()
{
  sub_10031DE28();
  uint64_t v2 = *(unsigned int *)(v1 + 8);
  unint64_t v3 = *(unsigned int *)(v1 + 12);
  if (v3 < v2)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  sub_10033BF50();
  if (!v4)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return;
  }
  if (v2 == v3)
  {
LABEL_5:
    sub_1002E1490();
    sub_10020DD10();
LABEL_24:
    swift_willThrow();
  }
  else
  {
    sub_1001F969C();
    unint64_t v5 = sub_10033C33C();
    while (1)
    {
      if (v2 + v5 >= v3)
      {
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      if (v5 >= (v3 - v2)) {
        goto LABEL_27;
      }
      unsigned int v9 = *(unsigned __int8 *)(v7 + v5);
      if (v9 != 93)
      {
        unsigned int v10 = v9 - 32;
        if (v9 < 0x20) {
          break;
        }
        BOOL v11 = v10 > 0x3C;
        uint64_t v12 = (v8 << v10) & 0x1000000000000725;
        BOOL v13 = v11 || v12 == 0;
        if (!v13 || v9 == 123 || (char)v9 < 32) {
          break;
        }
      }
      ++v5;
      if (!(v6 + v5)) {
        goto LABEL_5;
      }
    }
    if (!v5)
    {
      sub_10033C214();
      sub_10033C42C((uint64_t)"Found unexpected ");
      sub_10033B550();
      sub_1005E1A20();
      swift_bridgeObjectRelease();
      sub_100296090();
      sub_10020DD10();
      *uint64_t v17 = v18;
      v17[1] = v19;
      sub_10033BC9C(v17, v0 + 15);
      goto LABEL_24;
    }
    uint64_t v14 = ByteBuffer.readSlice(length:)(v5);
    if (!v14) {
      goto LABEL_30;
    }
    sub_10033BF08(v14, v15, v16);
  }
  sub_10033B880();
}

unint64_t sub_10032F17C@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(unsigned int *)(result + 8);
  unint64_t v3 = *(unsigned int *)(result + 12);
  if (v3 < v2)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  unint64_t v5 = *(unsigned __int8 *)(result + 22) | ((unint64_t)*(unsigned __int16 *)(result + 20) << 8);
  if (*(_DWORD *)(result + 16) - (int)v5 < v3) {
    goto LABEL_18;
  }
  if (v2 == v3)
  {
LABEL_9:
    sub_1002E1490();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    uint64_t v6 = *(void *)result;
    swift_beginAccess();
    __n128 result = 0;
    while (1)
    {
      if (v2 + result >= v3)
      {
        __break(1u);
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
      if (result >= (v3 - v2)) {
        goto LABEL_16;
      }
      if ((*(unsigned char *)(*(void *)(v6 + 24) + v5 + v2 + result) & 0xDFu) - 91 < 0xFFFFFFE6) {
        break;
      }
      ++result;
      if (!(v2 - v3 + result)) {
        goto LABEL_9;
      }
    }
    if (!result)
    {
      sub_1005E2C80(19);
      v10._object = (void *)0x80000001005E6810;
      v10._countAndFlagsBits = 0xD000000000000011;
      sub_1005E1E30(v10);
      sub_1005E1D80();
      sub_1005E1A20();
      swift_bridgeObjectRelease();
      sub_100296090();
      swift_allocError();
      *unsigned int v9 = 0;
      v9[1] = 0xE000000000000000;
      v9[2] = 0xD000000000000020;
      v9[3] = 0x80000001005E63C0;
      v9[4] = 110;
      return swift_willThrow();
    }
    __n128 result = ByteBuffer.readSlice(length:)(result);
    if (!result) {
      goto LABEL_19;
    }
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v7;
    *(_DWORD *)(a2 + 16) = v8;
    *(_WORD *)(a2 + 20) = WORD2(v8);
    *(unsigned char *)(a2 + 22) = BYTE6(v8);
  }
  return result;
}

uint64_t sub_10032F3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[2] = a7;
  v8[3] = a2;
  v8[4] = a5;
  v8[5] = a6;
  return sub_10031E46C(a1, a3, a4, sub_10033ACB8, v8);
}

void *initializeWithCopy for BadCommand(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BadCommand(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

void *assignWithTake for BadCommand(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

uint64_t getEnumTagSinglePayload for BadCommand(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BadCommand(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for BadCommand()
{
}

void *initializeWithCopy for ParserError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ParserError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

void *assignWithTake for ParserError(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

void type metadata accessor for ParserError()
{
}

void type metadata accessor for TooMuchRecursion()
{
}

void type metadata accessor for IncompleteMessage()
{
}

uint64_t sub_10032F74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v32 = a4;
  uint64_t v38 = a5;
  uint64_t v12 = sub_1005E28C0();
  uint64_t v29 = *(void *)(v12 - 8);
  uint64_t v30 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v31 = *(void *)(a7 - 8);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v28 - v20;
  __chkstk_darwin(v19);
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v37 = a6;
  uint64_t v22 = v33;
  uint64_t result = v38(a1, a2, a3);
  if (!v22)
  {
    uint64_t v24 = sub_1005E21F0();
    sub_1005E21A0();
    sub_10032CDDC(a7, (uint64_t)v15);
    uint64_t v33 = v24;
    uint64_t v25 = (void (**)(char *, char *, uint64_t))(v31 + 32);
    int v26 = (void (**)(char *, char *, uint64_t))(v31 + 16);
    long long v27 = (void (**)(char *, uint64_t))(v31 + 8);
    while (getEnumTagSinglePayload for ClientCommand((uint64_t)v15, 1, a7) != 1)
    {
      (*v25)(v21, v15, a7);
      (*v26)(v18, v21, a7);
      sub_1005E21A0();
      (*v27)(v21, a7);
      sub_10032CDDC(a7, (uint64_t)v15);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v30);
  }
  return result;
}

uint64_t sub_10032FA10(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  uint64_t v7 = v6;
  uint64_t v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = a3;
    if (v8 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v7 = swift_allocError();
      *uint64_t v24 = v9;
    }
    else
    {
      uint64_t v10 = result;
      while (1)
      {
        uint64_t v11 = *(void *)v10;
        uint64_t v12 = *(void *)(v10 + 8);
        int v13 = *(_DWORD *)(v10 + 16);
        __int16 v14 = *(_WORD *)(v10 + 20);
        char v15 = *(unsigned char *)(v10 + 22);
        swift_retain();
        a4(v28, v10, v8, v9);
        if (v7) {
          break;
        }
        swift_release();
        uint64_t v16 = v28[0];
        uint64_t v17 = v28[1];
        uint64_t v18 = *a6;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100232974();
          uint64_t v18 = v22;
          *a6 = v22;
        }
        unint64_t v20 = *(void *)(v18 + 16);
        if (v20 >= *(void *)(v18 + 24) >> 1)
        {
          sub_100232974();
          uint64_t v18 = v23;
          *a6 = v23;
        }
        *(void *)(v18 + 16) = v20 + 1;
        uint64_t v21 = v18 + 16 * v20;
        *(void *)(v21 + 32) = v16;
        *(void *)(v21 + 40) = v17;
        swift_bridgeObjectRelease();
        uint64_t v9 = a3;
      }
      swift_release();
      *(void *)uint64_t v10 = v11;
      *(void *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v13;
      *(_WORD *)(v10 + 20) = v14;
      *(unsigned char *)(v10 + 22) = v15;
    }
    swift_willThrow();
    v28[5] = v7;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_errorRelease();
  }
  return result;
}

uint64_t *sub_10032FC38(uint64_t *result, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v96 = a8;
  uint64_t v95 = a7;
  uint64_t v99 = a6;
  uint64_t v94 = a5;
  long long v93 = a4;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = a3;
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v10 = (void *)swift_allocError();
      *uint64_t v67 = v9;
    }
    else
    {
      uint64_t v10 = v8;
      uint64_t v11 = (uint64_t)result;
      uint64_t v12 = *result;
      int v92 = *(_DWORD *)(v11 + 8);
      int v91 = *(_DWORD *)(v11 + 12);
      int v90 = *(_DWORD *)(v11 + 16);
      int v89 = *(unsigned __int16 *)(v11 + 20);
      int v88 = *(unsigned __int8 *)(v11 + 22);
      if (a2 + 2 < a3)
      {
        uint64_t v13 = a2 + 3;
        uint64_t v86 = a2 + 1;
        uint64_t v85 = a2 + 4;
        unint64_t v79 = (unint64_t)"SHSERVICE response type: ";
        unint64_t v80 = 0x80000001005E63C0;
        unint64_t v78 = 0x80000001005E65D0;
        uint64_t v101 = a3;
        uint64_t v103 = a2 + 3;
        uint64_t v87 = a2 + 2;
        do
        {
          uint64_t v102 = v12;
          swift_retain();
          sub_100337E64();
          if (v10)
          {
            *(void *)uint64_t v11 = v102;
            int v70 = v92;
            int v71 = v91;
            *(_DWORD *)(v11 + 8) = v92;
            *(_DWORD *)(v11 + 12) = v71;
            int v72 = v90;
            *(_DWORD *)(v11 + 16) = v90;
            __int16 v73 = v89;
            *(_WORD *)(v11 + 20) = v89;
            char v74 = v88;
            *(unsigned char *)(v11 + 22) = v88;
            goto LABEL_47;
          }
          char v100 = &v77;
          __int16 v14 = &v77;
          v110 = _swiftEmptyArrayStorage;
          uint64_t v15 = *(void *)v11;
          uint64_t v16 = *(void *)(v11 + 8);
          int v17 = *(_DWORD *)(v11 + 16);
          int v105 = *(unsigned __int16 *)(v11 + 20);
          int v106 = v17;
          int v104 = *(unsigned __int8 *)(v11 + 22);
          uint64_t v107 = v15;
          if (v13 >= v9)
          {
            sub_1002DB5BC();
            uint64_t v10 = (void *)swift_allocError();
            *uint64_t v25 = v9;
            swift_retain();
            swift_retain();
          }
          else
          {
            long long v97 = &v77;
            uint64_t v18 = *(void *)v11;
            int v19 = *(_DWORD *)(v11 + 8);
            int v20 = *(_DWORD *)(v11 + 12);
            int v21 = *(_DWORD *)(v11 + 16);
            __int16 v22 = *(_WORD *)(v11 + 20);
            char v23 = *(unsigned char *)(v11 + 22);
            uint64_t v24 = v85;
            if (v85 < v9)
            {
              LODWORD(v98) = *(_DWORD *)(v11 + 8);
              swift_retain_n();
              swift_retain();
              swift_retain();
              sub_100338020(v11, v24, v9, 0, 0x4C494EuLL, 0xE300000000000000, 0);
              swift_release();
              swift_release_n();
              unint64_t v51 = 0;
              uint64_t v52 = 0;
              uint64_t v53 = 0;
LABEL_32:
              char v50 = 0;
              goto LABEL_33;
            }
            sub_1002DB5BC();
            uint64_t v10 = (void *)swift_allocError();
            *int v26 = v9;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_willThrow();
            swift_release();
            *(void *)uint64_t v11 = v18;
            *(_DWORD *)(v11 + 8) = v19;
            *(_DWORD *)(v11 + 12) = v20;
            *(_DWORD *)(v11 + 16) = v21;
            *(_WORD *)(v11 + 20) = v22;
            *(unsigned char *)(v11 + 22) = v23;
            uint64_t v13 = v103;
            uint64_t v15 = v107;
            __int16 v14 = v97;
          }
          swift_willThrow();
          v109 = v10;
          swift_errorRetain();
          uint64_t v27 = sub_10000566C(qword_100710378);
          int v28 = swift_dynamicCast();
          uint64_t v98 = v27;
          if (v28)
          {
            swift_errorRelease();
          }
          else
          {
            swift_errorRelease();
            v109 = v10;
            swift_errorRetain();
            if ((swift_dynamicCast() & 1) == 0)
            {
              swift_errorRelease();
              goto LABEL_19;
            }
            swift_errorRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          if (v13 < v9)
          {
            long long v97 = v14;
            int v84 = *(_DWORD *)(v11 + 16);
            int v83 = *(unsigned __int16 *)(v11 + 20);
            int v82 = *(unsigned __int8 *)(v11 + 22);
            uint64_t v29 = (void *)swift_allocObject();
            v81 = &v77;
            uint64_t v30 = v94;
            uint64_t v31 = v99;
            v29[2] = v94;
            v29[3] = v31;
            uint64_t v32 = v95;
            uint64_t v33 = v96;
            v29[4] = v95;
            v29[5] = v33;
            uint64_t v34 = __chkstk_darwin();
            v76[2] = sub_10033AC80;
            v76[3] = v34;
            uint64_t v35 = (void *)swift_allocObject();
            v35[2] = v30;
            v35[3] = v31;
            v35[4] = v32;
            v35[5] = v33;
            uint64_t v36 = __chkstk_darwin();
            v75[2] = sub_10033AC9C;
            v75[3] = v36;
            swift_retain_n();
            swift_retain();
            uint64_t v10 = 0;
            unint64_t v51 = sub_10033C780((uint64_t)sub_1002F30E4, (uint64_t)v76, (uint64_t)sub_10031CFE0, (uint64_t)v75);
            uint64_t v52 = v48;
            uint64_t v53 = v49;
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            goto LABEL_32;
          }
          sub_1002DB5BC();
          uint64_t v10 = (void *)swift_allocError();
          uint64_t *v37 = v9;
          swift_willThrow();
LABEL_19:
          swift_release();
          *(void *)uint64_t v11 = v15;
          *(void *)(v11 + 8) = v16;
          *(_DWORD *)(v11 + 16) = v106;
          *(_WORD *)(v11 + 20) = v105;
          *(unsigned char *)(v11 + 22) = v104;
          swift_willThrow();
          v109 = v10;
          swift_errorRetain();
          if (swift_dynamicCast())
          {
            swift_errorRelease();
          }
          else
          {
            swift_errorRelease();
            v109 = v10;
            swift_errorRetain();
            if ((swift_dynamicCast() & 1) == 0)
            {
              swift_errorRelease();
              goto LABEL_28;
            }
            swift_errorRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          uint64_t v38 = *(void *)v11;
          int v39 = *(_DWORD *)(v11 + 8);
          int v40 = *(_DWORD *)(v11 + 12);
          LODWORD(v97) = *(_DWORD *)(v11 + 16);
          __int16 v41 = *(_WORD *)(v11 + 20);
          char v42 = *(unsigned char *)(v11 + 22);
          uint64_t v43 = v101;
          uint64_t v44 = v103;
          if (v103 >= v101)
          {
            sub_1002DB5BC();
            uint64_t v10 = (void *)swift_allocError();
            *uint64_t v45 = v43;
            swift_retain();
            int v46 = (int)v97;
            swift_willThrow();
          }
          else
          {
            swift_retain_n();
            sub_100337A24(v11, v44, v43, 1, &v108);
            uint64_t v10 = 0;
            swift_release();
            unint64_t v51 = v108;
            if ((v108 & 0x8000000000000000) == 0)
            {
              swift_release();
              uint64_t v52 = 0;
              uint64_t v53 = 0;
              char v50 = 1;
LABEL_33:
              uint64_t v47 = v110;
              sub_100223C54(v51, v52, v53, v50);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_100232960();
                uint64_t v47 = v65;
              }
              unint64_t v54 = v47[2];
              if (v54 >= v47[3] >> 1)
              {
                sub_100232960();
                uint64_t v47 = v66;
              }
              v47[2] = v54 + 1;
              long long v55 = &v47[3 * v54];
              v55[4] = v51;
              v55[5] = v52;
              *((unsigned char *)v55 + 54) = BYTE6(v53);
              *((_WORD *)v55 + 26) = WORD2(v53);
              *((_DWORD *)v55 + 12) = v53;
              *((unsigned char *)v55 + 55) = v50;
              sub_10022C15C(v51, v52, v53, v50);
              swift_release();
              swift_release();
              uint64_t v9 = v101;
              uint64_t v13 = v103;
              goto LABEL_38;
            }
            sub_100296090();
            uint64_t v10 = (void *)swift_allocError();
            unint64_t v60 = v78;
            *uint64_t v61 = 0xD000000000000011;
            v61[1] = v60;
            unint64_t v62 = v79 | 0x8000000000000000;
            v61[2] = 0xD000000000000020;
            v61[3] = v62;
            v61[4] = 167;
            swift_willThrow();
            int v46 = (int)v97;
          }
          swift_release();
          *(void *)uint64_t v11 = v38;
          *(_DWORD *)(v11 + 8) = v39;
          *(_DWORD *)(v11 + 12) = v40;
          *(_DWORD *)(v11 + 16) = v46;
          *(_WORD *)(v11 + 20) = v41;
          *(unsigned char *)(v11 + 22) = v42;
          swift_willThrow();
          uint64_t v9 = v101;
          uint64_t v13 = v103;
          uint64_t v15 = v107;
LABEL_28:
          v109 = v10;
          swift_errorRetain();
          if ((swift_dynamicCast() & 1) == 0)
          {
            swift_release();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            int v70 = v92;
            int v71 = v91;
            int v72 = v90;
            __int16 v73 = v89;
            char v74 = v88;
            goto LABEL_49;
          }
          swift_release();
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)uint64_t v11 = v15;
          *(void *)(v11 + 8) = v16;
          *(_DWORD *)(v11 + 16) = v106;
          *(_WORD *)(v11 + 20) = v105;
          *(unsigned char *)(v11 + 22) = v104;
          swift_retain();
          sub_1002DDC20(v11, v86, v9, (uint64_t *)&v110, v94, v99, v95, v96);
          uint64_t v10 = 0;
          swift_release();
          swift_errorRelease();
          swift_release();
          uint64_t v47 = v110;
LABEL_38:
          long long v56 = v93;
          uint64_t v57 = *v93;
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *long long v56 = v57;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_100232A40();
            uint64_t v57 = v63;
            *long long v93 = v63;
          }
          unint64_t v59 = *(void *)(v57 + 16);
          if (v59 >= *(void *)(v57 + 24) >> 1)
          {
            sub_100232A40();
            uint64_t v57 = v64;
            *long long v93 = v64;
          }
          *(void *)(v57 + 16) = v59 + 1;
          *(void *)(v57 + 8 * v59 + 32) = v47;
          swift_bridgeObjectRelease();
          uint64_t v12 = *(void *)v11;
          int v92 = *(_DWORD *)(v11 + 8);
          int v91 = *(_DWORD *)(v11 + 12);
          int v90 = *(_DWORD *)(v11 + 16);
          int v89 = *(unsigned __int16 *)(v11 + 20);
          int v88 = *(unsigned __int8 *)(v11 + 22);
        }
        while (v87 < v9);
      }
      uint64_t v68 = v12;
      sub_1002DB5BC();
      uint64_t v10 = (void *)swift_allocError();
      *uint64_t v69 = v9;
      uint64_t v102 = v68;
      swift_retain();
      int v70 = v92;
      int v71 = v91;
      int v72 = v90;
      __int16 v73 = v89;
      char v74 = v88;
LABEL_47:
      swift_willThrow();
LABEL_49:
      swift_release();
      *(void *)uint64_t v11 = v102;
      *(_DWORD *)(v11 + 8) = v70;
      *(_DWORD *)(v11 + 12) = v71;
      *(_DWORD *)(v11 + 16) = v72;
      *(_WORD *)(v11 + 20) = v73;
      *(unsigned char *)(v11 + 22) = v74;
    }
    swift_willThrow();
    v110 = v10;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_errorRelease();
    return (uint64_t *)swift_release();
  }
  return result;
}

uint64_t sub_100330918(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(unint64_t *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  uint64_t v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v6;
    if (v7 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v8 = swift_allocError();
      *__int16 v22 = a3;
    }
    else
    {
      uint64_t v10 = result;
      while (1)
      {
        uint64_t v11 = *(void *)v10;
        uint64_t v12 = *(void *)(v10 + 8);
        int v13 = *(_DWORD *)(v10 + 16);
        __int16 v14 = *(_WORD *)(v10 + 20);
        char v15 = *(unsigned char *)(v10 + 22);
        swift_retain();
        a4(v25, v10, v7, a3);
        if (v8) {
          break;
        }
        swift_release();
        unint64_t v16 = v25[0];
        uint64_t v17 = *a6;
        sub_1002238FC(v25[0]);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v17;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100232B20();
          uint64_t v17 = v20;
          *a6 = v20;
        }
        unint64_t v19 = *(void *)(v17 + 16);
        if (v19 >= *(void *)(v17 + 24) >> 1)
        {
          sub_100232B20();
          uint64_t v17 = v21;
        }
        *(void *)(v17 + 16) = v19 + 1;
        *(void *)(v17 + 8 * v19 + 32) = v16;
        *a6 = v17;
        sub_1002239B4(v16);
      }
      swift_release();
      *(void *)uint64_t v10 = v11;
      *(void *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v13;
      *(_WORD *)(v10 + 20) = v14;
      *(unsigned char *)(v10 + 22) = v15;
    }
    swift_willThrow();
    unsigned char v25[5] = v8;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100330B40(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  uint64_t v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v7 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v9 = swift_allocError();
      *char v23 = a3;
    }
    else
    {
      uint64_t v9 = v6;
      uint64_t v11 = result;
      while (1)
      {
        uint64_t v12 = *(void *)v11;
        uint64_t v13 = *(void *)(v11 + 8);
        int v14 = *(_DWORD *)(v11 + 16);
        __int16 v15 = *(_WORD *)(v11 + 20);
        char v16 = *(unsigned char *)(v11 + 22);
        swift_retain();
        a4(v26, v11, v7, a3);
        if (v6) {
          break;
        }
        swift_release();
        char v17 = v26[0];
        uint64_t v18 = *a6;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100232B34();
          uint64_t v18 = v21;
          *a6 = v21;
        }
        unint64_t v20 = *(void *)(v18 + 16);
        if (v20 >= *(void *)(v18 + 24) >> 1)
        {
          sub_100232B34();
          uint64_t v18 = v22;
        }
        *(void *)(v18 + 16) = v20 + 1;
        *(unsigned char *)(v18 + v20 + 32) = v17;
        *a6 = v18;
      }
      swift_release();
      *(void *)uint64_t v11 = v12;
      *(void *)(v11 + 8) = v13;
      *(_DWORD *)(v11 + 16) = v14;
      *(_WORD *)(v11 + 20) = v15;
      *(unsigned char *)(v11 + 22) = v16;
    }
    swift_willThrow();
    v26[5] = v9;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_errorRelease();
  }
  return result;
}

unint64_t sub_100330D40(unint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (__OFADD__(a2, 1))
  {
LABEL_27:
    __break(1u);
    return result;
  }
  uint64_t v5 = v4;
  if (a2 + 1 >= a3)
  {
    sub_1002DB5BC();
    uint64_t v5 = swift_allocError();
    *uint64_t v24 = a3;
  }
  else
  {
    unint64_t v7 = result;
    uint64_t v9 = *(void *)result;
    int v10 = *(_DWORD *)(result + 12);
    int v28 = *(_DWORD *)(result + 8);
    int v11 = *(_DWORD *)(result + 16);
    __int16 v12 = *(_WORD *)(result + 20);
    char v13 = *(unsigned char *)(result + 22);
    if (a2 + 2 < a3)
    {
      uint64_t v8 = a2 + 2;
      while (1)
      {
        swift_retain();
        sub_100337E64();
        if (v5)
        {
          uint64_t v30 = v9;
          *(void *)unint64_t v7 = v9;
          int v26 = v28;
          *(_DWORD *)(v7 + 8) = v28;
          *(_DWORD *)(v7 + 12) = v10;
          *(_DWORD *)(v7 + 16) = v11;
          *(_WORD *)(v7 + 20) = v12;
          *(unsigned char *)(v7 + 22) = v13;
          goto LABEL_17;
        }
        uint64_t result = sub_10032E1D4(v7, (uint64_t)&v31);
        uint64_t v5 = 0;
        if (HIDWORD(v32) < v32) {
          break;
        }
        if (v33 - (v35 | (v34 << 8)) < HIDWORD(v32)) {
          goto LABEL_26;
        }
        v37[0] = v31;
        v37[1] = v32;
        int v38 = v33;
        unsigned __int16 v39 = v34;
        unsigned __int8 v40 = v35;
        uint64_t v41 = v32;
        uint64_t v42 = HIDWORD(v32);
        swift_retain();
        uint64_t v14 = sub_1002934A8((uint64_t)v37);
        if (!v15)
        {
          sub_100296090();
          uint64_t v5 = swift_allocError();
          strcpy(v27, "Invalid UTF8");
          v27[13] = 0;
          *((_WORD *)v27 + 7) = -5120;
          *((void *)v27 + 2) = 0xD000000000000020;
          *((void *)v27 + 3) = 0x80000001005E63C0;
          *((void *)v27 + 4) = 2465;
          swift_willThrow();
          swift_release();
          int v26 = v28;
          uint64_t v30 = v9;
          goto LABEL_20;
        }
        uint64_t v16 = v14;
        uint64_t v17 = v15;
        swift_release();
        swift_release();
        uint64_t v18 = *a4;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a4 = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100232C10();
          uint64_t v18 = v22;
          *a4 = v22;
        }
        unint64_t v20 = *(void *)(v18 + 16);
        if (v20 >= *(void *)(v18 + 24) >> 1)
        {
          sub_100232C10();
          uint64_t v18 = v23;
          *a4 = v23;
        }
        *(void *)(v18 + 16) = v20 + 1;
        uint64_t v21 = v18 + 16 * v20;
        *(void *)(v21 + 32) = v16;
        *(void *)(v21 + 40) = v17;
        swift_bridgeObjectRelease();
        uint64_t v9 = *(void *)v7;
        int v10 = *(_DWORD *)(v7 + 12);
        int v28 = *(_DWORD *)(v7 + 8);
        int v11 = *(_DWORD *)(v7 + 16);
        __int16 v12 = *(_WORD *)(v7 + 20);
        char v13 = *(unsigned char *)(v7 + 22);
        if (v8 >= a3) {
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
LABEL_16:
    sub_1002DB5BC();
    uint64_t v5 = swift_allocError();
    *uint64_t v25 = a3;
    uint64_t v30 = v9;
    swift_retain();
    int v26 = v28;
LABEL_17:
    swift_willThrow();
LABEL_20:
    swift_release();
    *(void *)unint64_t v7 = v30;
    *(_DWORD *)(v7 + 8) = v26;
    *(_DWORD *)(v7 + 12) = v10;
    *(_DWORD *)(v7 + 16) = v11;
    *(_WORD *)(v7 + 20) = v12;
    *(unsigned char *)(v7 + 22) = v13;
  }
  swift_willThrow();
  uint64_t v36 = v5;
  swift_errorRetain();
  sub_10000566C(qword_100710378);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_100331168(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t, uint64_t), uint64_t a5, void *a6)
{
  uint64_t v7 = v6;
  uint64_t v36 = a6;
  int v33 = a4;
  uint64_t v38 = a3;
  uint64_t v10 = sub_10000566C(&qword_100712458);
  __chkstk_darwin(v10 - 8);
  __int16 v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for SelectParameter(0);
  uint64_t v35 = *(void *)(v37 - 8);
  uint64_t v13 = __chkstk_darwin(v37);
  uint64_t v40 = (uint64_t)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v13);
  uint64_t v39 = (uint64_t)&v33 - v16;
  uint64_t v17 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v34 = a2 + 1;
    while (1)
    {
      uint64_t v18 = v38;
      if (v17 >= v38)
      {
        sub_1002DB5BC();
        uint64_t v7 = swift_allocError();
        *uint64_t v24 = v18;
      }
      else
      {
        uint64_t v19 = *a1;
        uint64_t v20 = a1[1];
        int v21 = *((_DWORD *)a1 + 4);
        __int16 v22 = *((_WORD *)a1 + 10);
        char v23 = *((unsigned char *)a1 + 22);
        swift_retain();
        v33(a1, v17, v18);
        if (!v7)
        {
          swift_release();
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v12, 0, 1, v37);
          goto LABEL_10;
        }
        swift_release();
        *a1 = v19;
        a1[1] = v20;
        *((_DWORD *)a1 + 4) = v21;
        *((_WORD *)a1 + 10) = v22;
        *((unsigned char *)a1 + 22) = v23;
      }
      swift_willThrow();
      uint64_t v41 = v7;
      swift_errorRetain();
      sub_10000566C(qword_100710378);
      if (!swift_dynamicCast()) {
        return swift_errorRelease();
      }
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = v37;
      storeEnumTagSinglePayload for ClientCommand((uint64_t)v12, 1, 1, v37);
      swift_errorRelease();
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v12, 1, v25) == 1) {
        return sub_1001F3A28((uint64_t)v12, &qword_100712458);
      }
      uint64_t v7 = 0;
LABEL_10:
      uint64_t v26 = v39;
      sub_10033AEDC((uint64_t)v12, v39, (void (*)(void))type metadata accessor for SelectParameter);
      sub_10033AF30(v26, v40, (void (*)(void))type metadata accessor for SelectParameter);
      uint64_t v27 = v36;
      uint64_t v28 = *v36;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v27 = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100232C24();
        uint64_t v28 = v31;
        *uint64_t v36 = v31;
      }
      uint64_t v17 = v34;
      unint64_t v30 = *(void *)(v28 + 16);
      if (v30 >= *(void *)(v28 + 24) >> 1)
      {
        sub_100232C24();
        uint64_t v28 = v32;
        *uint64_t v36 = v32;
      }
      *(void *)(v28 + 16) = v30 + 1;
      sub_10033AEDC(v40, v28+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v30, (void (*)(void))type metadata accessor for SelectParameter);
      sub_10033AF90(v39, (void (*)(void))type metadata accessor for SelectParameter);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10033154C(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  uint64_t v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = a3;
    if (v7 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v9 = swift_allocError();
      *uint64_t v27 = v8;
    }
    else
    {
      uint64_t v9 = v6;
      uint64_t v10 = result;
      uint64_t v28 = a2 + 1;
      while (1)
      {
        uint64_t v11 = *(void *)v10;
        uint64_t v12 = *(void *)(v10 + 8);
        int v13 = *(_DWORD *)(v10 + 16);
        __int16 v14 = *(_WORD *)(v10 + 20);
        char v15 = *(unsigned char *)(v10 + 22);
        swift_retain();
        a4(v32, v10, v7, v8);
        if (v6) {
          break;
        }
        swift_release();
        uint64_t v16 = v32[0];
        uint64_t v17 = v32[1];
        int v18 = v33;
        __int16 v19 = v34;
        char v20 = v35;
        uint64_t v21 = *a6;
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100232DFC();
          uint64_t v21 = v25;
          *a6 = v25;
        }
        unint64_t v23 = *(void *)(v21 + 16);
        if (v23 >= *(void *)(v21 + 24) >> 1)
        {
          sub_100232DFC();
          uint64_t v21 = v26;
        }
        *(void *)(v21 + 16) = v23 + 1;
        uint64_t v24 = v21 + 24 * v23;
        *(void *)(v24 + 32) = v16;
        *(void *)(v24 + 40) = v17;
        *(_DWORD *)(v24 + 48) = v18;
        *(_WORD *)(v24 + 52) = v19;
        *(unsigned char *)(v24 + 54) = v20;
        *a6 = v21;
        swift_release();
        uint64_t v7 = v28;
        uint64_t v8 = a3;
      }
      swift_release();
      *(void *)uint64_t v10 = v11;
      *(void *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v13;
      *(_WORD *)(v10 + 20) = v14;
      *(unsigned char *)(v10 + 22) = v15;
    }
    swift_willThrow();
    uint64_t v36 = v9;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_10033178C(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  uint64_t v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = a3;
    if (v7 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v15 = swift_allocError();
      *uint64_t v27 = v8;
    }
    else
    {
      uint64_t v9 = result;
      uint64_t v28 = a2 + 1;
      while (1)
      {
        uint64_t v10 = *(void *)v9;
        uint64_t v11 = *(void *)(v9 + 8);
        int v12 = *(_DWORD *)(v9 + 16);
        __int16 v13 = *(_WORD *)(v9 + 20);
        char v14 = *(unsigned char *)(v9 + 22);
        swift_retain();
        a4(&v32, v9, v7, v8);
        uint64_t v15 = v6;
        if (v6) {
          break;
        }
        swift_release();
        uint64_t v16 = v32;
        uint64_t v17 = v33;
        uint64_t v18 = v34;
        uint64_t v19 = v35;
        unint64_t v20 = v36 | ((unint64_t)v37 << 32);
        uint64_t v21 = *a6;
        sub_1001F379C(v32, v33, v34, v35, v20);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100232FC8();
          uint64_t v21 = v25;
          *a6 = v25;
        }
        unint64_t v23 = *(void *)(v21 + 16);
        if (v23 >= *(void *)(v21 + 24) >> 1)
        {
          sub_100232FC8();
          uint64_t v21 = v26;
          *a6 = v26;
        }
        *(void *)(v21 + 16) = v23 + 1;
        uint64_t v24 = v21 + 40 * v23;
        *(void *)(v24 + 32) = v16;
        *(void *)(v24 + 40) = v17;
        *(void *)(v24 + 48) = v18;
        *(void *)(v24 + 56) = v19;
        *(unsigned char *)(v24 + 68) = BYTE4(v20);
        *(_DWORD *)(v24 + 64) = v20;
        sub_1001F385C(v16, v17, v18, v19, v20);
        uint64_t v6 = 0;
        uint64_t v7 = v28;
        uint64_t v8 = a3;
      }
      swift_release();
      *(void *)uint64_t v9 = v10;
      *(void *)(v9 + 8) = v11;
      *(_DWORD *)(v9 + 16) = v12;
      *(_WORD *)(v9 + 20) = v13;
      *(unsigned char *)(v9 + 22) = v14;
    }
    swift_willThrow();
    uint64_t v38 = v15;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_1003319F0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t, uint64_t), uint64_t a5, void *a6)
{
  uint64_t v7 = v6;
  unsigned int v36 = a6;
  uint64_t v33 = a4;
  uint64_t v38 = a3;
  uint64_t v10 = sub_10000566C(&qword_100712430);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Modifier = type metadata accessor for FetchModifier();
  uint64_t v35 = *(void *)(Modifier - 8);
  uint64_t v13 = __chkstk_darwin(Modifier);
  uint64_t v40 = (uint64_t)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v13);
  uint64_t v39 = (uint64_t)&v33 - v16;
  uint64_t v17 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v34 = a2 + 1;
    while (1)
    {
      uint64_t v18 = v38;
      if (v17 >= v38)
      {
        sub_1002DB5BC();
        uint64_t v7 = swift_allocError();
        *uint64_t v24 = v18;
      }
      else
      {
        uint64_t v19 = *a1;
        uint64_t v20 = a1[1];
        int v21 = *((_DWORD *)a1 + 4);
        __int16 v22 = *((_WORD *)a1 + 10);
        char v23 = *((unsigned char *)a1 + 22);
        swift_retain();
        v33(a1, v17, v18);
        if (!v7)
        {
          swift_release();
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v12, 0, 1, Modifier);
          goto LABEL_10;
        }
        swift_release();
        *a1 = v19;
        a1[1] = v20;
        *((_DWORD *)a1 + 4) = v21;
        *((_WORD *)a1 + 10) = v22;
        *((unsigned char *)a1 + 22) = v23;
      }
      swift_willThrow();
      uint64_t v41 = v7;
      swift_errorRetain();
      sub_10000566C(qword_100710378);
      if (!swift_dynamicCast()) {
        return swift_errorRelease();
      }
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = Modifier;
      storeEnumTagSinglePayload for ClientCommand((uint64_t)v12, 1, 1, Modifier);
      swift_errorRelease();
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v12, 1, v25) == 1) {
        return sub_1001F3A28((uint64_t)v12, &qword_100712430);
      }
      uint64_t v7 = 0;
LABEL_10:
      uint64_t v26 = v39;
      sub_10033AEDC((uint64_t)v12, v39, (void (*)(void))type metadata accessor for FetchModifier);
      sub_10033AF30(v26, v40, (void (*)(void))type metadata accessor for FetchModifier);
      uint64_t v27 = v36;
      uint64_t v28 = *v36;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v27 = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100232FDC();
        uint64_t v28 = v31;
        *unsigned int v36 = v31;
      }
      uint64_t v17 = v34;
      unint64_t v30 = *(void *)(v28 + 16);
      if (v30 >= *(void *)(v28 + 24) >> 1)
      {
        sub_100232FDC();
        uint64_t v28 = v32;
        *unsigned int v36 = v32;
      }
      *(void *)(v28 + 16) = v30 + 1;
      sub_10033AEDC(v40, v28+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v30, (void (*)(void))type metadata accessor for FetchModifier);
      sub_10033AF90(v39, (void (*)(void))type metadata accessor for FetchModifier);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100331DD4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v9 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v18 = swift_allocError();
      *uint64_t v26 = a3;
    }
    else
    {
      uint64_t v11 = v8;
      uint64_t v12 = result;
      uint64_t v28 = a2 + 2;
      while (1)
      {
        uint64_t v13 = *(void *)v12;
        uint64_t v14 = *(void *)(v12 + 8);
        __int16 v30 = *(_WORD *)(v12 + 20);
        int v31 = *(_DWORD *)(v12 + 16);
        char v29 = *(unsigned char *)(v12 + 22);
        sub_10000566C(&qword_100712308);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1005F66A0;
        *(void *)(inited + 32) = sub_1002F2AC8;
        *(void *)(inited + 40) = 0;
        *(void *)(inited + 48) = sub_1002F2AFC;
        *(void *)(inited + 56) = 0;
        *(void *)(inited + 64) = sub_1002F2B84;
        *(void *)(inited + 72) = 0;
        *(void *)(inited + 80) = sub_1002F2BC0;
        *(void *)(inited + 88) = 0;
        uint64_t v16 = (void *)swift_allocObject();
        void v16[2] = a5;
        v16[3] = a6;
        v16[4] = a7;
        v16[5] = a8;
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = sub_10033AE88;
        *(void *)(v17 + 24) = v16;
        *(void *)(inited + 96) = sub_1002F31F4;
        *(void *)(inited + 104) = v17;
        swift_retain();
        swift_retain();
        sub_10033DF60(v44, inited, v12, v9, a3, 0xD000000000000020, 0x80000001005E63C0, 100);
        uint64_t v18 = v11;
        if (v11)
        {
          swift_setDeallocating();
          sub_10034A020();
          goto LABEL_14;
        }
        swift_setDeallocating();
        sub_10034A020();
        uint64_t v38 = v44[0];
        uint64_t v39 = v44[1];
        uint64_t v40 = v44[2];
        uint64_t v41 = v44[3];
        uint64_t v19 = v44[6];
        uint64_t v42 = v44[4];
        uint64_t v43 = v44[5];
        uint64_t v37 = v44[7];
        if (v28 >= a3) {
          break;
        }
        sub_100337E64();
        swift_release();
        uint64_t v20 = *a4;
        sub_10033AE00(v38, v39, v40, v41, v42, v43, v19, v37, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F33C4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F3404);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a4 = v20;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100233010();
          uint64_t v20 = v24;
          *a4 = v24;
        }
        unint64_t v22 = *(void *)(v20 + 16);
        if (v22 >= *(void *)(v20 + 24) >> 1)
        {
          sub_100233010();
          uint64_t v20 = v25;
          *a4 = v25;
        }
        *(void *)(v20 + 16) = v22 + 1;
        char v23 = (void *)(v20 + (v22 << 6));
        v23[4] = v38;
        unsigned char v23[5] = v39;
        v23[6] = v40;
        v23[7] = v41;
        v23[8] = v42;
        v23[9] = v43;
        v23[10] = v19;
        v23[11] = v37;
        sub_10033AE00(v38, v39, v40, v41, v42, v43, v19, v37, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F3480, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F34D0);
        uint64_t v11 = 0;
      }
      sub_1002DB5BC();
      uint64_t v18 = swift_allocError();
      *uint64_t v27 = a3;
      swift_willThrow();
      sub_10033AE00(v38, v39, v40, v41, v42, v43, v19, v37, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F3480, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F34D0);
LABEL_14:
      swift_release();
      *(void *)uint64_t v12 = v13;
      *(void *)(v12 + 8) = v14;
      *(_DWORD *)(v12 + 16) = v31;
      *(_WORD *)(v12 + 20) = v30;
      *(unsigned char *)(v12 + 22) = v29;
    }
    swift_willThrow();
    v44[12] = v18;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_errorRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1003322C0(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  uint64_t v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = a3;
    if (v7 >= a3)
    {
LABEL_11:
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v26 = v8;
    }
    else
    {
      uint64_t v9 = result;
      uint64_t v27 = a2 + 1;
      while (1)
      {
        uint64_t v10 = *(void *)v9;
        uint64_t v11 = *(void *)(v9 + 8);
        int v12 = *(_DWORD *)(v9 + 16);
        __int16 v13 = *(_WORD *)(v9 + 20);
        char v14 = *(unsigned char *)(v9 + 22);
        swift_retain();
        a4(&v34, v9, v7, v8);
        if (v6) {
          break;
        }
        uint64_t result = swift_release();
        uint64_t v15 = v38;
        if (v38 == 251) {
          return result;
        }
        uint64_t v17 = v34;
        uint64_t v16 = v35;
        uint64_t v18 = v36;
        uint64_t v19 = v39;
        uint64_t v20 = *a6;
        uint64_t v32 = v40;
        uint64_t v33 = v37;
        uint64_t v31 = v41;
        sub_10033AE00(v34, v35, v36, v37, v38, v39, v40, v41, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F33C4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F3404);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v20;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100233010();
          uint64_t v20 = v24;
          *a6 = v24;
        }
        unint64_t v22 = *(void *)(v20 + 16);
        if (v22 >= *(void *)(v20 + 24) >> 1)
        {
          sub_100233010();
          uint64_t v20 = v25;
          *a6 = v25;
        }
        *(void *)(v20 + 16) = v22 + 1;
        char v23 = (void *)(v20 + (v22 << 6));
        v23[4] = v17;
        unsigned char v23[5] = v16;
        v23[6] = v18;
        v23[7] = v33;
        v23[8] = v15;
        v23[9] = v19;
        v23[10] = v32;
        v23[11] = v31;
        sub_10033ADA8(v17, v16, v18, v33, v15, v19, v32, v31);
        uint64_t v7 = v27;
        uint64_t v8 = a3;
        if (v27 >= a3) {
          goto LABEL_11;
        }
      }
      swift_release();
      *(void *)uint64_t v9 = v10;
      *(void *)(v9 + 8) = v11;
      *(_DWORD *)(v9 + 16) = v12;
      *(_WORD *)(v9 + 20) = v13;
      *(unsigned char *)(v9 + 22) = v14;
    }
    swift_willThrow();
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    else
    {
      return swift_errorRelease();
    }
  }
  return result;
}

uint64_t sub_100332568(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  uint64_t v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = a3;
    if (v7 >= a3)
    {
LABEL_11:
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v26 = v8;
    }
    else
    {
      uint64_t v9 = result;
      uint64_t v27 = a2 + 1;
      while (1)
      {
        uint64_t v10 = *(void *)v9;
        uint64_t v11 = *(void *)(v9 + 8);
        int v12 = *(_DWORD *)(v9 + 16);
        __int16 v13 = *(_WORD *)(v9 + 20);
        char v14 = *(unsigned char *)(v9 + 22);
        swift_retain();
        a4(&v34, v9, v7, v8);
        if (v6) {
          break;
        }
        uint64_t result = swift_release();
        unint64_t v15 = v38;
        if (v38 >> 1 == 0xFFFFFFFF) {
          return result;
        }
        uint64_t v17 = v34;
        uint64_t v16 = v35;
        uint64_t v18 = v36;
        uint64_t v19 = v39;
        uint64_t v20 = *a6;
        uint64_t v32 = v40;
        uint64_t v33 = v37;
        unint64_t v31 = v41;
        sub_1001F3560(v34, v35, v36, v37, v38, v39, v40, v41);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v20;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100233024();
          uint64_t v20 = v24;
          *a6 = v24;
        }
        unint64_t v22 = *(void *)(v20 + 16);
        if (v22 >= *(void *)(v20 + 24) >> 1)
        {
          sub_100233024();
          uint64_t v20 = v25;
          *a6 = v25;
        }
        *(void *)(v20 + 16) = v22 + 1;
        char v23 = (void *)(v20 + (v22 << 6));
        v23[4] = v17;
        unsigned char v23[5] = v16;
        v23[6] = v18;
        v23[7] = v33;
        v23[8] = v15;
        v23[9] = v19;
        v23[10] = v32;
        v23[11] = v31;
        sub_10033AD94(v17, v16, v18, v33, v15, v19, v32, v31);
        uint64_t v7 = v27;
        uint64_t v8 = a3;
        if (v27 >= a3) {
          goto LABEL_11;
        }
      }
      swift_release();
      *(void *)uint64_t v9 = v10;
      *(void *)(v9 + 8) = v11;
      *(_DWORD *)(v9 + 16) = v12;
      *(_WORD *)(v9 + 20) = v13;
      *(unsigned char *)(v9 + 22) = v14;
    }
    swift_willThrow();
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    else
    {
      return swift_errorRelease();
    }
  }
  return result;
}

uint64_t sub_1003327E8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v37 = v7;
    uint64_t v38 = v5;
    uint64_t v39 = v6;
    if (a2 + 1 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v15 = swift_allocError();
      *unint64_t v22 = a3;
    }
    else
    {
      uint64_t v9 = result;
      uint64_t v10 = a2 + 2;
      uint64_t v11 = *(void *)result;
      int v12 = *(_DWORD *)(result + 8);
      int v13 = *(_DWORD *)(result + 12);
      __int16 v31 = *(_WORD *)(result + 20);
      int v32 = *(_DWORD *)(result + 16);
      char v14 = *(unsigned char *)(result + 22);
      if (a2 + 2 >= a3)
      {
LABEL_15:
        char v33 = v14;
        sub_1002DB5BC();
        uint64_t v15 = swift_allocError();
        *char v23 = a3;
        swift_retain();
        __int16 v25 = v31;
        int v24 = v32;
LABEL_16:
        swift_willThrow();
      }
      else
      {
        uint64_t v15 = v4;
        while (1)
        {
          swift_retain();
          sub_100337E64();
          char v33 = v14;
          if (v4)
          {
            *(void *)uint64_t v9 = v11;
            *(_DWORD *)(v9 + 8) = v12;
            *(_DWORD *)(v9 + 12) = v13;
            __int16 v25 = v31;
            int v24 = v32;
            *(_DWORD *)(v9 + 16) = v32;
            *(_WORD *)(v9 + 20) = v31;
            *(unsigned char *)(v9 + 22) = v14;
            goto LABEL_16;
          }
          swift_retain();
          sub_100337A24(v9, v10, a3, 0, &v34);
          swift_release();
          unint64_t v16 = v34;
          if ((v34 & 0x8000000000000000) != 0)
          {
            sub_100296090();
            uint64_t v15 = swift_allocError();
            *uint64_t v26 = 0xD000000000000011;
            v26[1] = 0x80000001005E65D0;
            _OWORD v26[2] = 0xD000000000000020;
            v26[3] = 0x80000001005E63C0;
            v26[4] = 167;
            swift_willThrow();
            goto LABEL_20;
          }
          if (v34 - 0x100000000 < 0xFFFFFFFF00000001) {
            break;
          }
          swift_release();
          uint64_t v17 = *a4;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *a4 = v17;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_100233104();
            uint64_t v17 = v20;
            *a4 = v20;
          }
          unint64_t v19 = *(void *)(v17 + 16);
          if (v19 >= *(void *)(v17 + 24) >> 1)
          {
            sub_100233104();
            uint64_t v17 = v21;
          }
          *(void *)(v17 + 16) = v19 + 1;
          *(_DWORD *)(v17 + 4 * v19 + 32) = v16;
          *a4 = v17;
          uint64_t v11 = *(void *)v9;
          int v12 = *(_DWORD *)(v9 + 8);
          int v13 = *(_DWORD *)(v9 + 12);
          __int16 v31 = *(_WORD *)(v9 + 20);
          int v32 = *(_DWORD *)(v9 + 16);
          char v14 = *(unsigned char *)(v9 + 22);
          if (v10 >= a3) {
            goto LABEL_15;
          }
        }
        unint64_t v34 = 0;
        unint64_t v35 = 0xE000000000000000;
        sub_1005E2C80(45);
        swift_bridgeObjectRelease();
        unint64_t v34 = 0xD00000000000002BLL;
        unint64_t v35 = 0x80000001005E67C0;
        unint64_t v36 = v16;
        v40._countAndFlagsBits = sub_1005E3230();
        sub_1005E1E30(v40);
        swift_bridgeObjectRelease();
        unint64_t v27 = v34;
        unint64_t v28 = v35;
        sub_100296090();
        uint64_t v15 = swift_allocError();
        *char v29 = v27;
        v29[1] = v28;
        v29[2] = 0xD000000000000020;
        v29[3] = 0x80000001005E63C0;
        v29[4] = 62;
        swift_willThrow();
LABEL_20:
        __int16 v25 = v31;
        int v24 = v32;
      }
      swift_release();
      *(void *)uint64_t v9 = v11;
      *(_DWORD *)(v9 + 8) = v12;
      *(_DWORD *)(v9 + 12) = v13;
      *(_DWORD *)(v9 + 16) = v24;
      *(_WORD *)(v9 + 20) = v25;
      *(unsigned char *)(v9 + 22) = v33;
    }
    swift_willThrow();
    unint64_t v36 = v15;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_errorRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_100332C50(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  uint64_t v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v7 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v9 = swift_allocError();
      *char v23 = a3;
    }
    else
    {
      uint64_t v9 = v6;
      uint64_t v11 = result;
      while (1)
      {
        uint64_t v12 = *(void *)v11;
        uint64_t v13 = *(void *)(v11 + 8);
        int v14 = *(_DWORD *)(v11 + 16);
        __int16 v15 = *(_WORD *)(v11 + 20);
        char v16 = *(unsigned char *)(v11 + 22);
        swift_retain();
        a4(v26, v11, v7, a3);
        if (v6) {
          break;
        }
        swift_release();
        uint64_t v17 = v26[0];
        uint64_t v18 = *a6;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100232524();
          uint64_t v18 = v21;
          *a6 = v21;
        }
        unint64_t v20 = *(void *)(v18 + 16);
        if (v20 >= *(void *)(v18 + 24) >> 1)
        {
          sub_100232524();
          uint64_t v18 = v22;
        }
        *(void *)(v18 + 16) = v20 + 1;
        *(void *)(v18 + 8 * v20 + 32) = v17;
        *a6 = v18;
      }
      swift_release();
      *(void *)uint64_t v11 = v12;
      *(void *)(v11 + 8) = v13;
      *(_DWORD *)(v11 + 16) = v14;
      *(_WORD *)(v11 + 20) = v15;
      *(unsigned char *)(v11 + 22) = v16;
    }
    swift_willThrow();
    v26[5] = v9;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100332E50(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  uint64_t v7 = v6;
  uint64_t v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = a3;
    if (v8 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v7 = swift_allocError();
      *int v24 = v9;
    }
    else
    {
      uint64_t v10 = result;
      while (1)
      {
        uint64_t v11 = *(void *)v10;
        uint64_t v12 = *(void *)(v10 + 8);
        int v13 = *(_DWORD *)(v10 + 16);
        __int16 v14 = *(_WORD *)(v10 + 20);
        char v15 = *(unsigned char *)(v10 + 22);
        swift_retain();
        a4(&v28, v10, v8, v9);
        if (v7) {
          break;
        }
        swift_release();
        uint64_t v16 = v28;
        char v17 = v29;
        uint64_t v18 = *a6;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1002331E4();
          uint64_t v18 = v22;
          *a6 = v22;
        }
        unint64_t v20 = *(void *)(v18 + 16);
        if (v20 >= *(void *)(v18 + 24) >> 1)
        {
          sub_1002331E4();
          uint64_t v18 = v23;
        }
        *(void *)(v18 + 16) = v20 + 1;
        uint64_t v21 = v18 + 16 * v20;
        *(void *)(v21 + 32) = v16;
        *(unsigned char *)(v21 + 40) = v17;
        *a6 = v18;
        uint64_t v9 = a3;
      }
      swift_release();
      *(void *)uint64_t v10 = v11;
      *(void *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v13;
      *(_WORD *)(v10 + 20) = v14;
      *(unsigned char *)(v10 + 22) = v15;
    }
    swift_willThrow();
    uint64_t v30 = v7;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100333070(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  uint64_t v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = a3;
    if (v7 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v9 = swift_allocError();
      *unint64_t v27 = v8;
    }
    else
    {
      uint64_t v9 = v6;
      uint64_t v10 = result;
      uint64_t v28 = a2 + 1;
      while (1)
      {
        uint64_t v11 = *(void *)v10;
        uint64_t v12 = *(void *)(v10 + 8);
        int v13 = *(_DWORD *)(v10 + 16);
        __int16 v14 = *(_WORD *)(v10 + 20);
        char v15 = *(unsigned char *)(v10 + 22);
        swift_retain();
        a4(v32, v10, v7, v8);
        if (v6) {
          break;
        }
        swift_release();
        uint64_t v16 = v32[0];
        uint64_t v17 = v32[1];
        int v18 = v33;
        __int16 v19 = v34;
        char v20 = v35;
        uint64_t v21 = *a6;
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1002332A4();
          uint64_t v21 = v25;
          *a6 = v25;
        }
        unint64_t v23 = *(void *)(v21 + 16);
        if (v23 >= *(void *)(v21 + 24) >> 1)
        {
          sub_1002332A4();
          uint64_t v21 = v26;
        }
        *(void *)(v21 + 16) = v23 + 1;
        uint64_t v24 = v21 + 24 * v23;
        *(void *)(v24 + 32) = v16;
        *(void *)(v24 + 40) = v17;
        *(_DWORD *)(v24 + 48) = v18;
        *(_WORD *)(v24 + 52) = v19;
        *(unsigned char *)(v24 + 54) = v20;
        *a6 = v21;
        swift_release();
        uint64_t v7 = v28;
        uint64_t v8 = a3;
      }
      swift_release();
      *(void *)uint64_t v10 = v11;
      *(void *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v13;
      *(_WORD *)(v10 + 20) = v14;
      *(unsigned char *)(v10 + 22) = v15;
    }
    swift_willThrow();
    uint64_t v36 = v9;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_1003332B0(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  uint64_t v7 = v6;
  uint64_t v8 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = a3;
    if (v8 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v7 = swift_allocError();
      *uint64_t v24 = v9;
    }
    else
    {
      uint64_t v10 = result;
      while (1)
      {
        uint64_t v11 = *(void *)v10;
        uint64_t v12 = *(void *)(v10 + 8);
        int v13 = *(_DWORD *)(v10 + 16);
        __int16 v14 = *(_WORD *)(v10 + 20);
        char v15 = *(unsigned char *)(v10 + 22);
        swift_retain();
        a4(v28, v10, v8, v9);
        if (v7) {
          break;
        }
        swift_release();
        uint64_t v16 = v28[0];
        uint64_t v17 = v28[1];
        uint64_t v18 = *a6;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1002332C4();
          uint64_t v18 = v22;
          *a6 = v22;
        }
        unint64_t v20 = *(void *)(v18 + 16);
        if (v20 >= *(void *)(v18 + 24) >> 1)
        {
          sub_1002332C4();
          uint64_t v18 = v23;
          *a6 = v23;
        }
        *(void *)(v18 + 16) = v20 + 1;
        uint64_t v21 = v18 + 16 * v20;
        *(void *)(v21 + 32) = v16;
        *(void *)(v21 + 40) = v17;
        swift_bridgeObjectRelease();
        uint64_t v9 = a3;
      }
      swift_release();
      *(void *)uint64_t v10 = v11;
      *(void *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v13;
      *(_WORD *)(v10 + 20) = v14;
      *(unsigned char *)(v10 + 22) = v15;
    }
    swift_willThrow();
    v28[5] = v7;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_errorRelease();
  }
  return result;
}

unint64_t sub_1003334D8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (__OFADD__(a2, 1))
  {
LABEL_30:
    __break(1u);
    return result;
  }
  uint64_t v5 = a3;
  if (a2 + 1 >= a3)
  {
    sub_1002DB5BC();
    uint64_t v6 = swift_allocError();
    uint64_t *v30 = v5;
  }
  else
  {
    uint64_t v6 = v4;
    unint64_t v7 = result;
    uint64_t v8 = a2 + 2;
    uint64_t v9 = *(void *)result;
    int v10 = *(_DWORD *)(result + 8);
    int v11 = *(_DWORD *)(result + 12);
    int v12 = *(_DWORD *)(result + 16);
    __int16 v13 = *(_WORD *)(result + 20);
    char v42 = *(unsigned char *)(result + 22);
    if (a2 + 2 < a3)
    {
      uint64_t v40 = a2 + 3;
      uint64_t v44 = a2 + 2;
      while (1)
      {
        swift_retain();
        sub_100337E64();
        if (v6)
        {
          *(void *)unint64_t v7 = v9;
          *(_DWORD *)(v7 + 8) = v10;
          *(_DWORD *)(v7 + 12) = v11;
          *(_DWORD *)(v7 + 16) = v12;
          *(_WORD *)(v7 + 20) = v13;
          *(unsigned char *)(v7 + 22) = v42;
          goto LABEL_18;
        }
        uint64_t v45 = v9;
        int v14 = v10;
        uint64_t v15 = *(void *)v7;
        int v38 = *(_DWORD *)(v7 + 12);
        int v39 = *(_DWORD *)(v7 + 8);
        __int16 v36 = *(_WORD *)(v7 + 20);
        int v37 = *(_DWORD *)(v7 + 16);
        char v35 = *(unsigned char *)(v7 + 22);
        if (v40 >= v5)
        {
          sub_1002DB5BC();
          uint64_t v6 = swift_allocError();
          *int v32 = v5;
          swift_retain();
          swift_retain();
          swift_willThrow();
LABEL_22:
          swift_release();
          *(void *)unint64_t v7 = v15;
          *(_DWORD *)(v7 + 8) = v39;
          *(_DWORD *)(v7 + 12) = v38;
          *(_DWORD *)(v7 + 16) = v37;
          *(_WORD *)(v7 + 20) = v36;
          *(unsigned char *)(v7 + 22) = v35;
          swift_willThrow();
          swift_release();
          int v10 = v14;
          uint64_t v9 = v45;
          goto LABEL_23;
        }
        swift_retain();
        swift_retain();
        uint64_t result = sub_10032E1D4(v7, (uint64_t)&v46);
        if (HIDWORD(v47) < v47) {
          break;
        }
        if (v48 - (v50 | (v49 << 8)) < HIDWORD(v47)) {
          goto LABEL_29;
        }
        v51[0] = v46;
        v51[1] = v47;
        int v52 = v48;
        unsigned __int16 v53 = v49;
        unsigned __int8 v54 = v50;
        uint64_t v55 = v47;
        uint64_t v56 = HIDWORD(v47);
        swift_retain();
        uint64_t v16 = sub_1002934A8((uint64_t)v51);
        if (!v17)
        {
          sub_100296090();
          uint64_t v6 = swift_allocError();
          strcpy(v33, "Invalid UTF8");
          v33[13] = 0;
          *((_WORD *)v33 + 7) = -5120;
          *((void *)v33 + 2) = 0xD000000000000020;
          *((void *)v33 + 3) = 0x80000001005E63C0;
          *((void *)v33 + 4) = 2465;
          swift_willThrow();
          swift_release();
          goto LABEL_22;
        }
        uint64_t v18 = v17;
        uint64_t v43 = v16;
        swift_release();
        swift_retain_n();
        __int16 v19 = sub_10031F834((uint64_t *)v7, v44, v5);
        uint64_t v21 = v20;
        uint64_t v23 = v22;
        swift_release();
        swift_release_n();
        swift_release();
        uint64_t v24 = *a4;
        swift_retain();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a4 = v24;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100233390();
          uint64_t v24 = v28;
          *a4 = v28;
        }
        unint64_t v26 = *(void *)(v24 + 16);
        if (v26 >= *(void *)(v24 + 24) >> 1)
        {
          sub_100233390();
          uint64_t v24 = v29;
          *a4 = v29;
        }
        *(void *)(v24 + 16) = v26 + 1;
        uint64_t v27 = v24 + 40 * v26;
        *(void *)(v27 + 32) = v43;
        *(void *)(v27 + 40) = v18;
        *(void *)(v27 + 48) = v19;
        *(void *)(v27 + 56) = v21;
        *(unsigned char *)(v27 + 70) = BYTE6(v23);
        *(_WORD *)(v27 + 68) = WORD2(v23);
        *(_DWORD *)(v27 + 64) = v23;
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v9 = *(void *)v7;
        int v10 = *(_DWORD *)(v7 + 8);
        int v11 = *(_DWORD *)(v7 + 12);
        int v12 = *(_DWORD *)(v7 + 16);
        __int16 v13 = *(_WORD *)(v7 + 20);
        char v42 = *(unsigned char *)(v7 + 22);
        uint64_t v5 = a3;
        if (v8 >= a3) {
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
LABEL_17:
    sub_1002DB5BC();
    uint64_t v6 = swift_allocError();
    *__int16 v31 = v5;
    swift_retain();
LABEL_18:
    swift_willThrow();
LABEL_23:
    swift_release();
    *(void *)unint64_t v7 = v9;
    *(_DWORD *)(v7 + 8) = v10;
    *(_DWORD *)(v7 + 12) = v11;
    *(_DWORD *)(v7 + 16) = v12;
    *(_WORD *)(v7 + 20) = v13;
    *(unsigned char *)(v7 + 22) = v42;
  }
  swift_willThrow();
  uint64_t v57 = v6;
  swift_errorRetain();
  sub_10000566C(qword_100710378);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_100333AEC(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t, uint64_t), uint64_t a5, void *a6)
{
  uint64_t v7 = v6;
  __int16 v36 = a6;
  int v33 = a4;
  uint64_t v38 = a3;
  uint64_t v10 = sub_10000566C(&qword_100712450);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for SearchReturnOption();
  uint64_t v35 = *(void *)(v37 - 8);
  uint64_t v13 = __chkstk_darwin(v37);
  uint64_t v40 = (uint64_t)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v13);
  uint64_t v39 = (uint64_t)&v33 - v16;
  uint64_t v17 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v34 = a2 + 1;
    while (1)
    {
      uint64_t v18 = v38;
      if (v17 >= v38)
      {
        sub_1002DB5BC();
        uint64_t v7 = swift_allocError();
        *uint64_t v24 = v18;
      }
      else
      {
        uint64_t v19 = *a1;
        uint64_t v20 = a1[1];
        int v21 = *((_DWORD *)a1 + 4);
        __int16 v22 = *((_WORD *)a1 + 10);
        char v23 = *((unsigned char *)a1 + 22);
        swift_retain();
        v33(a1, v17, v18);
        if (!v7)
        {
          swift_release();
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v12, 0, 1, v37);
          goto LABEL_10;
        }
        swift_release();
        *a1 = v19;
        a1[1] = v20;
        *((_DWORD *)a1 + 4) = v21;
        *((_WORD *)a1 + 10) = v22;
        *((unsigned char *)a1 + 22) = v23;
      }
      swift_willThrow();
      uint64_t v41 = v7;
      swift_errorRetain();
      sub_10000566C(qword_100710378);
      if (!swift_dynamicCast()) {
        return swift_errorRelease();
      }
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = v37;
      storeEnumTagSinglePayload for ClientCommand((uint64_t)v12, 1, 1, v37);
      swift_errorRelease();
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v12, 1, v25) == 1) {
        return sub_1001F3A28((uint64_t)v12, &qword_100712450);
      }
      uint64_t v7 = 0;
LABEL_10:
      uint64_t v26 = v39;
      sub_10033AEDC((uint64_t)v12, v39, (void (*)(void))type metadata accessor for SearchReturnOption);
      sub_10033AF30(v26, v40, (void (*)(void))type metadata accessor for SearchReturnOption);
      uint64_t v27 = v36;
      uint64_t v28 = *v36;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v27 = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10023353C();
        uint64_t v28 = v31;
        *__int16 v36 = v31;
      }
      uint64_t v17 = v34;
      unint64_t v30 = *(void *)(v28 + 16);
      if (v30 >= *(void *)(v28 + 24) >> 1)
      {
        sub_10023353C();
        uint64_t v28 = v32;
        *__int16 v36 = v32;
      }
      *(void *)(v28 + 16) = v30 + 1;
      sub_10033AEDC(v40, v28+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v30, (void (*)(void))type metadata accessor for SearchReturnOption);
      sub_10033AF90(v39, (void (*)(void))type metadata accessor for SearchReturnOption);
    }
  }
  __break(1u);
  return result;
}

void sub_100333ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  void (*v37)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  __int16 v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t (*v56)(uint64_t);
  uint64_t v57;
  void (*v58)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t);

  sub_10033B630();
  a29 = v31;
  a30 = v36;
  long long v58 = v37;
  uint64_t v39 = v38 + 1;
  if (__OFADD__(v38, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v40 = v33;
    if (v39 >= v33)
    {
      sub_1002DB5BC();
      uint64_t v41 = sub_10020DD10();
      *uint64_t v55 = v40;
    }
    else
    {
      uint64_t v41 = v30;
      char v42 = v34;
      uint64_t v43 = v32;
      uint64_t v56 = v35;
      uint64_t v57 = v33;
      while (1)
      {
        uint64_t v44 = *v43;
        uint64_t v45 = v43[1];
        uint64_t v46 = *((_DWORD *)v43 + 4);
        uint64_t v47 = *((_WORD *)v43 + 10);
        int v48 = *((unsigned char *)v43 + 22);
        swift_retain();
        v58(&a13, v43, v39, v57);
        if (v30) {
          break;
        }
        swift_release();
        unsigned __int16 v49 = a13;
        unsigned __int8 v50 = *v42;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *char v42 = v50;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unsigned __int8 v54 = sub_1002ECE78();
          unsigned __int8 v50 = v56(v54);
          *char v42 = v50;
        }
        unsigned __int16 v53 = *(void *)(v50 + 16);
        int v52 = *(void *)(v50 + 24);
        if (v53 >= v52 >> 1) {
          unsigned __int8 v50 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))v56)(v52 > 1, v53 + 1, 1, v50);
        }
        *(void *)(v50 + 16) = v53 + 1;
        *(void *)(v50 + 8 * v53 + 32) = v49;
        *char v42 = v50;
      }
      swift_release();
      *uint64_t v43 = v44;
      v43[1] = v45;
      *((_DWORD *)v43 + 4) = v46;
      *((_WORD *)v43 + 10) = v47;
      *((unsigned char *)v43 + 22) = v48;
    }
    swift_willThrow();
    a18 = v41;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (sub_10033BCB4())
    {
      swift_errorRelease();
      sub_10033C768();
      swift_bridgeObjectRelease();
    }
    swift_errorRelease();
    sub_10033B610();
  }
}

uint64_t sub_10033409C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t, uint64_t), uint64_t a5, void *a6)
{
  uint64_t v7 = v6;
  uint64_t v36 = a6;
  uint64_t v33 = a4;
  uint64_t v38 = a3;
  uint64_t v10 = sub_10000566C(&qword_100712428);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Parameter = type metadata accessor for CreateParameter();
  uint64_t v35 = *(void *)(Parameter - 8);
  uint64_t v13 = __chkstk_darwin(Parameter);
  uint64_t v40 = (uint64_t)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v13);
  uint64_t v39 = (uint64_t)&v33 - v16;
  uint64_t v17 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v34 = a2 + 1;
    while (1)
    {
      uint64_t v18 = v38;
      if (v17 >= v38)
      {
        sub_1002DB5BC();
        uint64_t v7 = swift_allocError();
        *uint64_t v24 = v18;
      }
      else
      {
        uint64_t v19 = *a1;
        uint64_t v20 = a1[1];
        int v21 = *((_DWORD *)a1 + 4);
        __int16 v22 = *((_WORD *)a1 + 10);
        char v23 = *((unsigned char *)a1 + 22);
        swift_retain();
        v33(a1, v17, v18);
        if (!v7)
        {
          swift_release();
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v12, 0, 1, Parameter);
          goto LABEL_10;
        }
        swift_release();
        *a1 = v19;
        a1[1] = v20;
        *((_DWORD *)a1 + 4) = v21;
        *((_WORD *)a1 + 10) = v22;
        *((unsigned char *)a1 + 22) = v23;
      }
      swift_willThrow();
      uint64_t v41 = v7;
      swift_errorRetain();
      sub_10000566C(qword_100710378);
      if (!swift_dynamicCast()) {
        return swift_errorRelease();
      }
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = Parameter;
      storeEnumTagSinglePayload for ClientCommand((uint64_t)v12, 1, 1, Parameter);
      swift_errorRelease();
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v12, 1, v25) == 1) {
        return sub_1001F3A28((uint64_t)v12, &qword_100712428);
      }
      uint64_t v7 = 0;
LABEL_10:
      uint64_t v26 = v39;
      sub_10033AEDC((uint64_t)v12, v39, (void (*)(void))type metadata accessor for CreateParameter);
      sub_10033AF30(v26, v40, (void (*)(void))type metadata accessor for CreateParameter);
      uint64_t v27 = v36;
      uint64_t v28 = *v36;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v27 = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10023363C();
        uint64_t v28 = v31;
        *uint64_t v36 = v31;
      }
      uint64_t v17 = v34;
      unint64_t v30 = *(void *)(v28 + 16);
      if (v30 >= *(void *)(v28 + 24) >> 1)
      {
        sub_10023363C();
        uint64_t v28 = v32;
        *uint64_t v36 = v32;
      }
      *(void *)(v28 + 16) = v30 + 1;
      sub_10033AEDC(v40, v28+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v30, (void (*)(void))type metadata accessor for CreateParameter);
      sub_10033AF90(v39, (void (*)(void))type metadata accessor for CreateParameter);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100334480(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v6 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = a3;
    if (v6 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v28 = v7;
    }
    else
    {
      uint64_t v8 = v5;
      uint64_t v9 = result;
      uint64_t v29 = a2 + 1;
      while (1)
      {
        uint64_t v10 = *(void *)v9;
        uint64_t v11 = *(void *)(v9 + 8);
        int v12 = *(_DWORD *)(v9 + 16);
        __int16 v13 = *(_WORD *)(v9 + 20);
        char v14 = *(unsigned char *)(v9 + 22);
        swift_retain();
        sub_10031E2BC(v9, v6, v7);
        if (v8) {
          break;
        }
        sub_10030A634(v9, v6, v7, a5);
        uint64_t v8 = 0;
        uint64_t v16 = v15;
        unint64_t v18 = v17;
        swift_bridgeObjectRetain();
        unint64_t v19 = sub_100240DB8(61, 0xE100000000000000, v16, v18);
        char v21 = v20;
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v22 = *a4;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a4 = v22;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100233684();
          uint64_t v22 = v26;
          *a4 = v26;
        }
        unint64_t v24 = *(void *)(v22 + 16);
        if (v24 >= *(void *)(v22 + 24) >> 1)
        {
          sub_100233684();
          uint64_t v22 = v27;
          *a4 = v27;
        }
        *(void *)(v22 + 16) = v24 + 1;
        uint64_t v25 = v22 + 32 * v24;
        *(void *)(v25 + 32) = v16;
        *(void *)(v25 + 40) = v18;
        *(void *)(v25 + 48) = v19;
        *(unsigned char *)(v25 + 56) = v21 & 1;
        swift_bridgeObjectRelease();
        uint64_t v6 = v29;
        uint64_t v7 = a3;
      }
      swift_release();
      *(void *)uint64_t v9 = v10;
      *(void *)(v9 + 8) = v11;
      *(_DWORD *)(v9 + 16) = v12;
      *(_WORD *)(v9 + 20) = v13;
      *(unsigned char *)(v9 + 22) = v14;
    }
    swift_willThrow();
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_errorRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_100334708(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  v37[1] = a7;
  void v37[2] = a8;
  v37[3] = a6;
  v37[0] = a5;
  uint64_t v43 = a4;
  sub_10000566C(&qword_100712410);
  __chkstk_darwin();
  char v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SearchReturnData();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v46 = (uint64_t)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin();
  uint64_t v45 = (uint64_t)v37 - v19;
  uint64_t v20 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v21 = a2 + 2;
    uint64_t v40 = a3;
    uint64_t v41 = v14;
    uint64_t v44 = a2 + 1;
    uint64_t v42 = a2 + 2;
    uint64_t v38 = v16;
    uint64_t v39 = v15;
    while (1)
    {
      if (v20 >= a3)
      {
        sub_1002DB5BC();
        uint64_t v9 = swift_allocError();
        *uint64_t v28 = a3;
      }
      else
      {
        uint64_t v22 = *a1;
        int v23 = *((_DWORD *)a1 + 2);
        int v24 = *((_DWORD *)a1 + 3);
        int v25 = *((_DWORD *)a1 + 4);
        __int16 v26 = *((_WORD *)a1 + 10);
        char v27 = *((unsigned char *)a1 + 22);
        if (v21 >= a3)
        {
          sub_1002DB5BC();
          uint64_t v9 = swift_allocError();
          *uint64_t v29 = a3;
          swift_retain();
        }
        else
        {
          swift_retain();
          sub_100337E64();
          if (!v9)
          {
            sub_1003053E4();
            uint64_t v9 = 0;
            swift_release();
            char v14 = v41;
            uint64_t v15 = v39;
            storeEnumTagSinglePayload for ClientCommand((uint64_t)v41, 0, 1, v39);
            a3 = v40;
            uint64_t v16 = v38;
            goto LABEL_13;
          }
          *a1 = v22;
          *((_DWORD *)a1 + 2) = v23;
          *((_DWORD *)a1 + 3) = v24;
          *((_DWORD *)a1 + 4) = v25;
          *((_WORD *)a1 + 10) = v26;
          *((unsigned char *)a1 + 22) = v27;
        }
        swift_willThrow();
        swift_release();
        *a1 = v22;
        *((_DWORD *)a1 + 2) = v23;
        *((_DWORD *)a1 + 3) = v24;
        *((_DWORD *)a1 + 4) = v25;
        *((_WORD *)a1 + 10) = v26;
        *((unsigned char *)a1 + 22) = v27;
        a3 = v40;
        char v14 = v41;
        uint64_t v16 = v38;
        uint64_t v15 = v39;
      }
      swift_willThrow();
      uint64_t v47 = v9;
      swift_errorRetain();
      sub_10000566C(qword_100710378);
      if (!swift_dynamicCast())
      {
        swift_errorRelease();
        return swift_release();
      }
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      storeEnumTagSinglePayload for ClientCommand((uint64_t)v14, 1, 1, v15);
      swift_errorRelease();
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v14, 1, v15) == 1)
      {
        sub_1001F3A28((uint64_t)v14, &qword_100712410);
        return swift_release();
      }
      uint64_t v9 = 0;
LABEL_13:
      uint64_t v30 = v45;
      sub_10033AEDC((uint64_t)v14, v45, (void (*)(void))type metadata accessor for SearchReturnData);
      sub_10033AF30(v30, v46, (void (*)(void))type metadata accessor for SearchReturnData);
      uint64_t v31 = v43;
      uint64_t v32 = *v43;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v31 = v32;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100233740();
        uint64_t v32 = v35;
        *uint64_t v43 = v35;
      }
      unint64_t v34 = *(void *)(v32 + 16);
      if (v34 >= *(void *)(v32 + 24) >> 1)
      {
        sub_100233740();
        uint64_t v32 = v36;
        *uint64_t v43 = v36;
      }
      *(void *)(v32 + 16) = v34 + 1;
      sub_10033AEDC(v46, v32+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v34, (void (*)(void))type metadata accessor for SearchReturnData);
      sub_10033AF90(v45, (void (*)(void))type metadata accessor for SearchReturnData);
      uint64_t v20 = v44;
      uint64_t v21 = v42;
    }
  }
  __break(1u);
  return result;
}

void sub_100334B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  void (*v37)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t);
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  __int16 v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t (*v57)(uint64_t);
  uint64_t i;
  uint64_t *v59;
  void (*v60)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t);

  sub_10033B630();
  a29 = v31;
  a30 = v35;
  uint64_t v36 = v30;
  unint64_t v59 = v38;
  unint64_t v60 = v37;
  uint64_t v40 = v39 + 1;
  if (__OFADD__(v39, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v41 = v33;
    if (v40 >= v33)
    {
      sub_1002DB5BC();
      uint64_t v36 = sub_10020DD10();
      *uint64_t v56 = v41;
    }
    else
    {
      uint64_t v42 = v32;
      uint64_t v57 = v34;
      for (i = v33; ; uint64_t v41 = i)
      {
        uint64_t v43 = *v42;
        uint64_t v44 = v42[1];
        uint64_t v45 = *((_DWORD *)v42 + 4);
        uint64_t v46 = *((_WORD *)v42 + 10);
        uint64_t v47 = *((unsigned char *)v42 + 22);
        swift_retain();
        v60(&a13, v42, v40, v41);
        if (v36) {
          break;
        }
        swift_release();
        int v48 = a13;
        unsigned __int16 v49 = a14;
        unsigned __int8 v50 = *v59;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *unint64_t v59 = v50;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v55 = sub_1002ECE78();
          unsigned __int8 v50 = v57(v55);
          *unint64_t v59 = v50;
        }
        unsigned __int16 v53 = *(void *)(v50 + 16);
        int v52 = *(void *)(v50 + 24);
        if (v53 >= v52 >> 1)
        {
          unsigned __int8 v50 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))v57)(v52 > 1, v53 + 1, 1, v50);
          *unint64_t v59 = v50;
        }
        *(void *)(v50 + 16) = v53 + 1;
        unsigned __int8 v54 = v50 + 16 * v53;
        *(void *)(v54 + 32) = v48;
        *(void *)(v54 + 40) = v49;
        swift_bridgeObjectRelease();
      }
      swift_release();
      *uint64_t v42 = v43;
      v42[1] = v44;
      *((_DWORD *)v42 + 4) = v45;
      *((_WORD *)v42 + 10) = v46;
      *((unsigned char *)v42 + 22) = v47;
    }
    swift_willThrow();
    a18 = v36;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (sub_10033BCB4())
    {
      swift_errorRelease();
      sub_10033C768();
      swift_bridgeObjectRelease();
    }
    swift_errorRelease();
    sub_10033B610();
  }
}

uint64_t sub_100334D78(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t, uint64_t), uint64_t a5, void *a6)
{
  uint64_t v7 = v6;
  uint64_t v36 = a6;
  uint64_t v33 = a4;
  uint64_t v38 = a3;
  uint64_t v10 = sub_10000566C(&qword_100712470);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for MetadataOption();
  uint64_t v35 = *(void *)(v37 - 8);
  uint64_t v13 = __chkstk_darwin(v37);
  uint64_t v40 = (uint64_t)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v13);
  uint64_t v39 = (uint64_t)&v33 - v16;
  uint64_t v17 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v34 = a2 + 1;
    while (1)
    {
      uint64_t v18 = v38;
      if (v17 >= v38)
      {
        sub_1002DB5BC();
        uint64_t v7 = swift_allocError();
        *int v24 = v18;
      }
      else
      {
        uint64_t v19 = *a1;
        uint64_t v20 = a1[1];
        int v21 = *((_DWORD *)a1 + 4);
        __int16 v22 = *((_WORD *)a1 + 10);
        char v23 = *((unsigned char *)a1 + 22);
        swift_retain();
        v33(a1, v17, v18);
        if (!v7)
        {
          swift_release();
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v12, 0, 1, v37);
          goto LABEL_10;
        }
        swift_release();
        *a1 = v19;
        a1[1] = v20;
        *((_DWORD *)a1 + 4) = v21;
        *((_WORD *)a1 + 10) = v22;
        *((unsigned char *)a1 + 22) = v23;
      }
      swift_willThrow();
      uint64_t v41 = v7;
      swift_errorRetain();
      sub_10000566C(qword_100710378);
      if (!swift_dynamicCast()) {
        return swift_errorRelease();
      }
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = v37;
      storeEnumTagSinglePayload for ClientCommand((uint64_t)v12, 1, 1, v37);
      swift_errorRelease();
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v12, 1, v25) == 1) {
        return sub_1001F3A28((uint64_t)v12, &qword_100712470);
      }
      uint64_t v7 = 0;
LABEL_10:
      uint64_t v26 = v39;
      sub_10033AEDC((uint64_t)v12, v39, (void (*)(void))type metadata accessor for MetadataOption);
      sub_10033AF30(v26, v40, (void (*)(void))type metadata accessor for MetadataOption);
      char v27 = v36;
      uint64_t v28 = *v36;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *char v27 = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10023384C();
        uint64_t v28 = v31;
        *uint64_t v36 = v31;
      }
      uint64_t v17 = v34;
      unint64_t v30 = *(void *)(v28 + 16);
      if (v30 >= *(void *)(v28 + 24) >> 1)
      {
        sub_10023384C();
        uint64_t v28 = v32;
        *uint64_t v36 = v32;
      }
      *(void *)(v28 + 16) = v30 + 1;
      sub_10033AEDC(v40, v28+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v30, (void (*)(void))type metadata accessor for MetadataOption);
      sub_10033AF90(v39, (void (*)(void))type metadata accessor for MetadataOption);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10033515C(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  uint64_t v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = a3;
    if (v7 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v9 = swift_allocError();
      *char v27 = v8;
    }
    else
    {
      uint64_t v9 = v6;
      uint64_t v10 = result;
      uint64_t v28 = a2 + 1;
      while (1)
      {
        uint64_t v11 = *(void *)v10;
        uint64_t v12 = *(void *)(v10 + 8);
        int v13 = *(_DWORD *)(v10 + 16);
        __int16 v14 = *(_WORD *)(v10 + 20);
        char v15 = *(unsigned char *)(v10 + 22);
        swift_retain();
        a4(v32, v10, v7, v8);
        if (v6) {
          break;
        }
        swift_release();
        uint64_t v16 = v32[0];
        uint64_t v17 = v32[1];
        int v18 = v33;
        __int16 v19 = v34;
        char v20 = v35;
        uint64_t v21 = *a6;
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100233880();
          uint64_t v21 = v25;
          *a6 = v25;
        }
        unint64_t v23 = *(void *)(v21 + 16);
        if (v23 >= *(void *)(v21 + 24) >> 1)
        {
          sub_100233880();
          uint64_t v21 = v26;
        }
        *(void *)(v21 + 16) = v23 + 1;
        uint64_t v24 = v21 + 24 * v23;
        *(void *)(v24 + 32) = v16;
        *(void *)(v24 + 40) = v17;
        *(_DWORD *)(v24 + 48) = v18;
        *(_WORD *)(v24 + 52) = v19;
        *(unsigned char *)(v24 + 54) = v20;
        *a6 = v21;
        swift_release();
        uint64_t v7 = v28;
        uint64_t v8 = a3;
      }
      swift_release();
      *(void *)uint64_t v10 = v11;
      *(void *)(v10 + 8) = v12;
      *(_DWORD *)(v10 + 16) = v13;
      *(_WORD *)(v10 + 20) = v14;
      *(unsigned char *)(v10 + 22) = v15;
    }
    swift_willThrow();
    uint64_t v36 = v9;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_10033539C(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  uint64_t v7 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = a3;
    if (v7 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v15 = swift_allocError();
      *uint64_t v26 = v8;
    }
    else
    {
      uint64_t v9 = result;
      uint64_t v27 = a2 + 1;
      while (1)
      {
        uint64_t v10 = *(void *)v9;
        uint64_t v11 = *(void *)(v9 + 8);
        int v12 = *(_DWORD *)(v9 + 16);
        __int16 v13 = *(_WORD *)(v9 + 20);
        char v14 = *(unsigned char *)(v9 + 22);
        swift_retain();
        a4(&v31, v9, v7, v8);
        uint64_t v15 = v6;
        if (v6) {
          break;
        }
        swift_release();
        uint64_t v16 = v31;
        uint64_t v17 = v32;
        unint64_t v18 = v33 | ((unint64_t)(v34 | (v35 << 16)) << 32);
        char v19 = v36;
        uint64_t v20 = *a6;
        sub_1001F33AC(v31, v32, v18, v36);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a6 = v20;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100233970();
          uint64_t v20 = v24;
          *a6 = v24;
        }
        unint64_t v22 = *(void *)(v20 + 16);
        if (v22 >= *(void *)(v20 + 24) >> 1)
        {
          sub_100233970();
          uint64_t v20 = v25;
          *a6 = v25;
        }
        *(void *)(v20 + 16) = v22 + 1;
        uint64_t v23 = v20 + 24 * v22;
        *(void *)(v23 + 32) = v16;
        *(void *)(v23 + 40) = v17;
        *(unsigned char *)(v23 + 54) = BYTE6(v18);
        *(_WORD *)(v23 + 52) = WORD2(v18);
        *(_DWORD *)(v23 + 48) = v18;
        *(unsigned char *)(v23 + 55) = v19;
        sub_1001F33B8(v16, v17, v18, v19);
        uint64_t v7 = v27;
        uint64_t v8 = a3;
      }
      swift_release();
      *(void *)uint64_t v9 = v10;
      *(void *)(v9 + 8) = v11;
      *(_DWORD *)(v9 + 16) = v12;
      *(_WORD *)(v9 + 20) = v13;
      *(unsigned char *)(v9 + 22) = v14;
    }
    swift_willThrow();
    uint64_t v37 = v15;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100335604(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t, uint64_t), uint64_t a5, void *a6)
{
  uint64_t v7 = v6;
  char v36 = a6;
  unsigned int v33 = a4;
  uint64_t v38 = a3;
  uint64_t v10 = sub_10000566C(&qword_100712438);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for StoreModifier();
  uint64_t v35 = *(void *)(v37 - 8);
  uint64_t v13 = __chkstk_darwin(v37);
  uint64_t v40 = (uint64_t)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v13);
  uint64_t v39 = (uint64_t)&v33 - v16;
  uint64_t v17 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v34 = a2 + 1;
    while (1)
    {
      uint64_t v18 = v38;
      if (v17 >= v38)
      {
        sub_1002DB5BC();
        uint64_t v7 = swift_allocError();
        *uint64_t v24 = v18;
      }
      else
      {
        uint64_t v19 = *a1;
        uint64_t v20 = a1[1];
        int v21 = *((_DWORD *)a1 + 4);
        __int16 v22 = *((_WORD *)a1 + 10);
        char v23 = *((unsigned char *)a1 + 22);
        swift_retain();
        v33(a1, v17, v18);
        if (!v7)
        {
          swift_release();
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v12, 0, 1, v37);
          goto LABEL_10;
        }
        swift_release();
        *a1 = v19;
        a1[1] = v20;
        *((_DWORD *)a1 + 4) = v21;
        *((_WORD *)a1 + 10) = v22;
        *((unsigned char *)a1 + 22) = v23;
      }
      swift_willThrow();
      uint64_t v41 = v7;
      swift_errorRetain();
      sub_10000566C(qword_100710378);
      if (!swift_dynamicCast()) {
        return swift_errorRelease();
      }
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = v37;
      storeEnumTagSinglePayload for ClientCommand((uint64_t)v12, 1, 1, v37);
      swift_errorRelease();
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v12, 1, v25) == 1) {
        return sub_1001F3A28((uint64_t)v12, &qword_100712438);
      }
      uint64_t v7 = 0;
LABEL_10:
      uint64_t v26 = v39;
      sub_10033AEDC((uint64_t)v12, v39, (void (*)(void))type metadata accessor for StoreModifier);
      sub_10033AF30(v26, v40, (void (*)(void))type metadata accessor for StoreModifier);
      uint64_t v27 = v36;
      uint64_t v28 = *v36;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v27 = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100233A60();
        uint64_t v28 = v31;
        *char v36 = v31;
      }
      uint64_t v17 = v34;
      unint64_t v30 = *(void *)(v28 + 16);
      if (v30 >= *(void *)(v28 + 24) >> 1)
      {
        sub_100233A60();
        uint64_t v28 = v32;
        *char v36 = v32;
      }
      *(void *)(v28 + 16) = v30 + 1;
      sub_10033AEDC(v40, v28+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v30, (void (*)(void))type metadata accessor for StoreModifier);
      sub_10033AF90(v39, (void (*)(void))type metadata accessor for StoreModifier);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1003359E8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = a3;
    if (v6 >= a3)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v26 = v7;
    }
    else
    {
      uint64_t v8 = result;
      uint64_t v27 = a2 + 1;
      while (1)
      {
        uint64_t v9 = *(void *)v8;
        uint64_t v10 = *(void *)(v8 + 8);
        int v11 = *(_DWORD *)(v8 + 16);
        __int16 v12 = *(_WORD *)(v8 + 20);
        char v13 = *(unsigned char *)(v8 + 22);
        swift_retain();
        uint64_t v14 = a5(v8, v6, v7);
        if (v5) {
          break;
        }
        uint64_t v17 = v14;
        uint64_t v18 = v15;
        uint64_t v19 = v16;
        swift_release();
        uint64_t v20 = *a4;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a4 = v20;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100233A94();
          uint64_t v20 = v24;
          *a4 = v24;
        }
        unint64_t v22 = *(void *)(v20 + 16);
        if (v22 >= *(void *)(v20 + 24) >> 1)
        {
          sub_100233A94();
          uint64_t v20 = v25;
          *a4 = v25;
        }
        *(void *)(v20 + 16) = v22 + 1;
        char v23 = (void *)(v20 + 24 * v22);
        v23[4] = v17;
        unsigned char v23[5] = v18;
        v23[6] = v19;
        swift_bridgeObjectRelease();
        uint64_t v6 = v27;
        uint64_t v7 = a3;
      }
      swift_release();
      *(void *)uint64_t v8 = v9;
      *(void *)(v8 + 8) = v10;
      *(_DWORD *)(v8 + 16) = v11;
      *(_WORD *)(v8 + 20) = v12;
      *(unsigned char *)(v8 + 22) = v13;
    }
    swift_willThrow();
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100335C14(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v5 >= a3)
    {
      sub_1002DB5BC();
      uint64_t v7 = swift_allocError();
      *uint64_t v14 = a3;
    }
    else
    {
      uint64_t v7 = v4;
      uint64_t v8 = result;
      while (1)
      {
        uint64_t v9 = *(void *)v8;
        uint64_t v10 = *(void *)(v8 + 8);
        int v11 = *(_DWORD *)(v8 + 16);
        __int16 v12 = *(_WORD *)(v8 + 20);
        char v13 = *(unsigned char *)(v8 + 22);
        swift_retain();
        a4(v17, v16, v8, v5, a3);
        if (v4) {
          break;
        }
        swift_release();
        sub_1002E9CA4(v16[0], v16[1], v17[0], v17[1]);
      }
      swift_release();
      *(void *)uint64_t v8 = v9;
      *(void *)(v8 + 8) = v10;
      *(_DWORD *)(v8 + 16) = v11;
      *(_WORD *)(v8 + 20) = v12;
      *(unsigned char *)(v8 + 22) = v13;
    }
    swift_willThrow();
    v16[0] = v7;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_errorRelease();
  }
  return result;
}

void sub_100335DB0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, void *, uint64_t *, uint64_t, uint64_t), uint64_t a5, void *a6)
{
  uint64_t v7 = a2 + 1;
  if (__OFADD__(a2, 1)) {
    goto LABEL_66;
  }
  uint64_t v8 = a3;
  if (v7 >= a3)
  {
    sub_1002DB5BC();
    uint64_t v9 = swift_allocError();
    *uint64_t v43 = v8;
LABEL_60:
    swift_willThrow();
    v50[0] = v9;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_errorRelease();
    return;
  }
  uint64_t v9 = v6;
  uint64_t v47 = a6 + 2;
  uint64_t v45 = a2 + 1;
  while (1)
  {
    uint64_t v11 = *a1;
    uint64_t v12 = a1[1];
    int v13 = *((_DWORD *)a1 + 4);
    __int16 v14 = *((_WORD *)a1 + 10);
    char v15 = *((unsigned char *)a1 + 22);
    swift_retain();
    uint64_t v16 = v9;
    a4(&v51, v50, a1, v7, v8);
    if (v9)
    {
      swift_release();
      *a1 = v11;
      a1[1] = v12;
      *((_DWORD *)a1 + 4) = v13;
      *((_WORD *)a1 + 10) = v14;
      *((unsigned char *)a1 + 22) = v15;
      goto LABEL_60;
    }
    swift_release();
    uint64_t v17 = v51;
    uint64_t v18 = v52;
    uint64_t v19 = v50[1];
    uint64_t v49 = v50[0];
    uint64_t v20 = (void *)a6[1];
    uint64_t v21 = v20[2];
    if (*a6)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_10033A3B0(v17, v18, (uint64_t)(v20 + 4));
      unint64_t v23 = v22;
      char v25 = v24;
      uint64_t v27 = v26;
      swift_release();
      swift_release();
      if (v25)
      {
        uint64_t v9 = 0;
        goto LABEL_23;
      }
    }
    else
    {
      if (!v21) {
        goto LABEL_22;
      }
      BOOL v28 = v20[4] == v51 && v20[5] == v52;
      if (v28 || (sub_1005E3290() & 1) != 0)
      {
        unint64_t v23 = 0;
      }
      else
      {
        if (v21 == 1) {
          goto LABEL_22;
        }
        BOOL v37 = v20[6] == v17 && v20[7] == v18;
        if (v37 || (sub_1005E3290() & 1) != 0)
        {
          unint64_t v23 = 1;
        }
        else
        {
          if (v21 == 2) {
            goto LABEL_22;
          }
          BOOL v38 = v20[8] == v17 && v20[9] == v18;
          if (v38 || (sub_1005E3290() & 1) != 0)
          {
            unint64_t v23 = 2;
          }
          else
          {
            if (v21 == 3) {
              goto LABEL_22;
            }
            BOOL v39 = v20[10] == v17 && v20[11] == v18;
            if (!v39 && (sub_1005E3290() & 1) == 0)
            {
              uint64_t v40 = v20 + 13;
              uint64_t v41 = 4;
              while (1)
              {
                uint64_t v9 = v16;
                if (v21 == v41) {
                  break;
                }
                if (*(v40 - 1) == v17 && *v40 == v18)
                {
                  unint64_t v23 = v41;
                  goto LABEL_15;
                }
                unint64_t v23 = v41++;
                v40 += 2;
                if (sub_1005E3290()) {
                  goto LABEL_15;
                }
              }
LABEL_22:
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v27 = 0;
LABEL_23:
              uint64_t v7 = v45;
              swift_bridgeObjectRetain();
              sub_100339940(v17, v18, v27, (uint64_t (*)(uint64_t))sub_100212BB0);
              uint64_t v33 = a6[2];
              swift_bridgeObjectRetain();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              a6[2] = v33;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_100212CD0();
                uint64_t v33 = *v47;
              }
              unint64_t v35 = *(void *)(v33 + 16);
              if (v35 >= *(void *)(v33 + 24) >> 1)
              {
                sub_100212CD0();
                uint64_t v33 = *v47;
              }
              *(void *)(v33 + 16) = v35 + 1;
              uint64_t v36 = v33 + 16 * v35;
              *(void *)(v36 + 32) = v49;
              *(void *)(v36 + 40) = v19;
              *uint64_t v47 = v33;
              goto LABEL_28;
            }
            unint64_t v23 = 3;
          }
        }
      }
LABEL_15:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v7 = v45;
    uint64_t v29 = *v47;
    swift_bridgeObjectRetain();
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v47 = v29;
    if ((v30 & 1) == 0)
    {
      sub_100338E88();
      uint64_t v29 = v31;
      *uint64_t v47 = v31;
    }
    if ((v23 & 0x8000000000000000) != 0) {
      break;
    }
    if (v23 >= *(void *)(v29 + 16)) {
      goto LABEL_65;
    }
    uint64_t v32 = v29 + 16 * v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
    *(void *)(v32 + 32) = v49;
    *(void *)(v32 + 40) = v19;
LABEL_28:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v8 = a3;
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
}

uint64_t sub_100336260(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v38 = a3;
  uint64_t v11 = sub_10000566C(&qword_10070FE28);
  __chkstk_darwin(v11 - 8);
  int v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000566C(&qword_100712478);
  __chkstk_darwin(v14 - 8);
  uint64_t v37 = (uint64_t)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000566C(&qword_10070FE78);
  uint64_t result = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v36 = a2 + 1;
    uint64_t v31 = v13;
    uint64_t v32 = a6;
    uint64_t v30 = v16;
    while (1)
    {
      if (v20 >= v38)
      {
        sub_1002DB5BC();
        uint64_t v7 = swift_allocError();
        *uint64_t v27 = v38;
      }
      else
      {
        uint64_t v21 = *a1;
        uint64_t v22 = a1[1];
        uint64_t v23 = v38;
        int v24 = *((_DWORD *)a1 + 4);
        __int16 v25 = *((_WORD *)a1 + 10);
        int v35 = *((unsigned __int8 *)a1 + 22);
        swift_retain();
        uint64_t v26 = v37;
        v33(a1, v20, v23);
        if (!v7)
        {
          swift_release();
          uint64_t v16 = v30;
          storeEnumTagSinglePayload for ClientCommand(v26, 0, 1, v30);
          int v13 = v31;
          goto LABEL_10;
        }
        swift_release();
        *a1 = v21;
        a1[1] = v22;
        *((_DWORD *)a1 + 4) = v24;
        *((_WORD *)a1 + 10) = v25;
        *((unsigned char *)a1 + 22) = v35;
        int v13 = v31;
        uint64_t v16 = v30;
      }
      swift_willThrow();
      uint64_t v39 = v7;
      swift_errorRetain();
      sub_10000566C(qword_100710378);
      if (!swift_dynamicCast()) {
        return swift_errorRelease();
      }
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = v37;
      storeEnumTagSinglePayload for ClientCommand(v37, 1, 1, v16);
      swift_errorRelease();
      if (getEnumTagSinglePayload for ClientCommand(v26, 1, v16) == 1) {
        return sub_1001F3A28(v26, &qword_100712478);
      }
      uint64_t v7 = 0;
LABEL_10:
      sub_1001F39D8(v26, (uint64_t)v19, &qword_10070FE78);
      sub_10033AF30((uint64_t)&v19[*(int *)(v16 + 52)], (uint64_t)v13, (void (*)(void))type metadata accessor for ParameterValue);
      uint64_t v28 = type metadata accessor for ParameterValue();
      storeEnumTagSinglePayload for ClientCommand((uint64_t)v13, 0, 1, v28);
      swift_bridgeObjectRetain();
      sub_1002E99B0();
      sub_1001F3A28((uint64_t)v19, &qword_10070FE78);
      uint64_t v20 = v36;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1003365DC(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a3;
    if (v5 >= a3)
    {
LABEL_7:
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v21 = v6;
    }
    else
    {
      uint64_t v7 = v4;
      uint64_t v8 = result;
      while (1)
      {
        uint64_t v9 = *(void *)v8;
        uint64_t v10 = *(void *)(v8 + 8);
        int v11 = *(_DWORD *)(v8 + 16);
        __int16 v12 = *(_WORD *)(v8 + 20);
        char v13 = *(unsigned char *)(v8 + 22);
        swift_retain();
        a4(v24, v8, v5, v6);
        if (v7) {
          break;
        }
        uint64_t result = swift_release();
        uint64_t v14 = v24[0];
        if (!v24[0]) {
          return result;
        }
        unint64_t v15 = v25 | ((unint64_t)(v26 | (v27 << 16)) << 32);
        uint64_t v16 = v24[4];
        uint64_t v17 = v5;
        unint64_t v18 = v24[1];
        uint64_t v19 = v24[2] & 0xFFFFFFFFFFFFFFLL;
        swift_retain();
        uint64_t v20 = swift_retain();
        sub_1002E9EB0(v20, v16, v15, v14, v18, v19);
        uint64_t v5 = v17;
        uint64_t v6 = a3;
        uint64_t v7 = 0;
        sub_10033ABF0(v14);
        if (v5 >= a3) {
          goto LABEL_7;
        }
      }
      swift_release();
      *(void *)uint64_t v8 = v9;
      *(void *)(v8 + 8) = v10;
      *(_DWORD *)(v8 + 16) = v11;
      *(_WORD *)(v8 + 20) = v12;
      *(unsigned char *)(v8 + 22) = v13;
    }
    swift_willThrow();
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    else
    {
      return swift_errorRelease();
    }
  }
  return result;
}

uint64_t sub_1003367E8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v36 = a6;
  v31[0] = a4;
  v31[1] = a5;
  sub_10000566C(&qword_10070FE28);
  __chkstk_darwin();
  uint64_t v35 = (uint64_t)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100712420);
  __chkstk_darwin();
  uint64_t v37 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_10000566C(&qword_100712320);
  uint64_t result = __chkstk_darwin();
  unint64_t v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v33 = a2 + 1;
    uint64_t v34 = a3;
    for (i = a1; ; a1 = i)
    {
      uint64_t v17 = (uint64_t)v37;
      if (v16 >= a3)
      {
        sub_1002DB5BC();
        uint64_t v7 = swift_allocError();
        *uint64_t v23 = a3;
      }
      else
      {
        uint64_t v18 = *a1;
        uint64_t v19 = a1[1];
        int v20 = *((_DWORD *)a1 + 4);
        __int16 v21 = *((_WORD *)a1 + 10);
        char v22 = *((unsigned char *)a1 + 22);
        swift_retain();
        ((void (*)(uint64_t *, uint64_t, uint64_t))v31[0])(a1, v16, a3);
        if (!v7)
        {
          swift_release();
          storeEnumTagSinglePayload for ClientCommand(v17, 0, 1, v39);
          goto LABEL_10;
        }
        swift_release();
        *a1 = v18;
        a1[1] = v19;
        *((_DWORD *)a1 + 4) = v20;
        *((_WORD *)a1 + 10) = v21;
        *((unsigned char *)a1 + 22) = v22;
      }
      swift_willThrow();
      uint64_t v40 = v7;
      swift_errorRetain();
      sub_10000566C(qword_100710378);
      if (!swift_dynamicCast()) {
        return swift_errorRelease();
      }
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = v39;
      storeEnumTagSinglePayload for ClientCommand(v17, 1, 1, v39);
      swift_errorRelease();
      if (getEnumTagSinglePayload for ClientCommand(v17, 1, v24) == 1) {
        return sub_1001F3A28(v17, &qword_100712420);
      }
      uint64_t v7 = 0;
LABEL_10:
      sub_1001F39D8(v17, (uint64_t)v15, &qword_100712320);
      uint64_t v25 = *((unsigned int *)v15 + 4);
      uint64_t v26 = *((unsigned __int16 *)v15 + 10);
      uint64_t v27 = v15[22];
      uint64_t v28 = v35;
      sub_10033AF30((uint64_t)&v15[*(int *)(v39 + 52)], v35, (void (*)(void))type metadata accessor for ParameterValue);
      uint64_t v29 = type metadata accessor for ParameterValue();
      storeEnumTagSinglePayload for ClientCommand(v28, 0, 1, v29);
      unint64_t v30 = v38 & 0xFF00000000000000 | v25 | (v26 << 32) | (v27 << 48);
      swift_retain();
      unint64_t v38 = v30;
      sub_1002EA144();
      sub_1001F3A28((uint64_t)v15, &qword_100712320);
      uint64_t v16 = v33;
      a3 = v34;
    }
  }
  __break(1u);
  return result;
}

void sub_100336B78(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  uint64_t v7 = a2 + 1;
  if (__OFADD__(a2, 1)) {
    goto LABEL_66;
  }
  uint64_t v8 = a3;
  if (v7 >= a3)
  {
    sub_1002DB5BC();
    uint64_t v9 = swift_allocError();
    void *v41 = v8;
LABEL_60:
    swift_willThrow();
    uint64_t v52 = v9;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_errorRelease();
    return;
  }
  uint64_t v9 = v6;
  uint64_t v45 = a6 + 2;
  uint64_t v43 = a2 + 1;
  while (1)
  {
    uint64_t v11 = *a1;
    uint64_t v12 = a1[1];
    int v13 = *((_DWORD *)a1 + 4);
    __int16 v14 = *((_WORD *)a1 + 10);
    char v15 = *((unsigned char *)a1 + 22);
    swift_retain();
    uint64_t v16 = v9;
    a4(&v48, a1, v7, v8);
    if (v9)
    {
      swift_release();
      *a1 = v11;
      a1[1] = v12;
      *((_DWORD *)a1 + 4) = v13;
      *((_WORD *)a1 + 10) = v14;
      *((unsigned char *)a1 + 22) = v15;
      goto LABEL_60;
    }
    swift_release();
    uint64_t v17 = v48;
    uint64_t v18 = v49;
    uint64_t v19 = v51;
    uint64_t v47 = v50;
    uint64_t v20 = *a6;
    __int16 v21 = (void *)a6[1];
    uint64_t v22 = v21[2];
    if (*a6)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      unint64_t v23 = sub_10033A5FC(v17, v18, (uint64_t)(v21 + 4), v22, (void *)(v20 + 16));
      char v25 = v24;
      swift_release();
      swift_release();
      if (v25)
      {
        uint64_t v9 = 0;
        goto LABEL_23;
      }
    }
    else
    {
      if (!v22) {
        goto LABEL_22;
      }
      BOOL v26 = v21[4] == v48 && v21[5] == v49;
      if (v26 || (sub_1005E3290() & 1) != 0)
      {
        unint64_t v23 = 0;
      }
      else
      {
        if (v22 == 1) {
          goto LABEL_22;
        }
        BOOL v35 = v21[6] == v17 && v21[7] == v18;
        if (v35 || (sub_1005E3290() & 1) != 0)
        {
          unint64_t v23 = 1;
        }
        else
        {
          if (v22 == 2) {
            goto LABEL_22;
          }
          BOOL v36 = v21[8] == v17 && v21[9] == v18;
          if (v36 || (sub_1005E3290() & 1) != 0)
          {
            unint64_t v23 = 2;
          }
          else
          {
            if (v22 == 3) {
              goto LABEL_22;
            }
            BOOL v37 = v21[10] == v17 && v21[11] == v18;
            if (!v37 && (sub_1005E3290() & 1) == 0)
            {
              unint64_t v38 = v21 + 13;
              uint64_t v39 = 4;
              while (1)
              {
                uint64_t v9 = v16;
                if (v22 == v39) {
                  break;
                }
                if (*(v38 - 1) == v17 && *v38 == v18)
                {
                  unint64_t v23 = v39;
                  goto LABEL_15;
                }
                unint64_t v23 = v39++;
                v38 += 2;
                if (sub_1005E3290()) {
                  goto LABEL_15;
                }
              }
LABEL_22:
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
LABEL_23:
              uint64_t v7 = v43;
              swift_bridgeObjectRetain();
              sub_100339C94(v17, v18);
              uint64_t v31 = a6[2];
              swift_bridgeObjectRetain();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              a6[2] = v31;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_100212C90();
                uint64_t v31 = *v45;
              }
              unint64_t v33 = *(void *)(v31 + 16);
              if (v33 >= *(void *)(v31 + 24) >> 1)
              {
                sub_100212C90();
                uint64_t v31 = *v45;
              }
              *(void *)(v31 + 16) = v33 + 1;
              uint64_t v34 = v31 + 16 * v33;
              *(void *)(v34 + 32) = v47;
              *(void *)(v34 + 40) = v19;
              *uint64_t v45 = v31;
              goto LABEL_28;
            }
            unint64_t v23 = 3;
          }
        }
      }
LABEL_15:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v7 = v43;
    uint64_t v27 = *v45;
    swift_bridgeObjectRetain();
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v45 = v27;
    if ((v28 & 1) == 0)
    {
      sub_100338E3C();
      uint64_t v27 = v29;
      *uint64_t v45 = v29;
    }
    if ((v23 & 0x8000000000000000) != 0) {
      break;
    }
    if (v23 >= *(void *)(v27 + 16)) {
      goto LABEL_65;
    }
    uint64_t v30 = v27 + 16 * v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
    *(void *)(v30 + 32) = v47;
    *(void *)(v30 + 40) = v19;
LABEL_28:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v8 = a3;
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
}

void sub_100337010(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6)
{
  uint64_t v7 = a2 + 1;
  if (__OFADD__(a2, 1)) {
    goto LABEL_64;
  }
  uint64_t v8 = a3;
  if (v7 >= a3)
  {
LABEL_55:
    sub_1002DB5BC();
    swift_allocError();
    *uint64_t v64 = v8;
LABEL_57:
    swift_willThrow();
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
    return;
  }
  uint64_t v9 = v6;
  unint64_t v66 = a6 + 2;
  uint64_t v65 = a2 + 1;
  while (1)
  {
    uint64_t v10 = *a1;
    uint64_t v11 = a1[1];
    int v12 = *((_DWORD *)a1 + 4);
    __int16 v13 = *((_WORD *)a1 + 10);
    char v14 = *((unsigned char *)a1 + 22);
    swift_retain();
    a4(&v89, a1, v7, v8);
    if (v9)
    {
      swift_release();
      *a1 = v10;
      a1[1] = v11;
      *((_DWORD *)a1 + 4) = v12;
      *((_WORD *)a1 + 10) = v13;
      *((unsigned char *)a1 + 22) = v14;
      goto LABEL_57;
    }
    swift_release();
    uint64_t v15 = v89;
    if (!v89) {
      return;
    }
    unint64_t v16 = v90;
    uint64_t v17 = v92;
    unint64_t v18 = HIDWORD(v91);
    int v82 = WORD2(v91);
    uint64_t v83 = v89;
    unint64_t v84 = v91;
    uint64_t v19 = BYTE6(v91);
    uint64_t v21 = *a6;
    uint64_t v20 = a6[1];
    unint64_t v73 = v90;
    uint64_t v79 = v20;
    if (*a6) {
      break;
    }
    uint64_t v48 = *(void *)(v20 + 16);
    if (!v48)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v26 = 0;
      unint64_t v16 = v73;
LABEL_26:
      swift_release();
      swift_bridgeObjectRetain();
      sub_100339B00(v15, v16, v70 & 0xFF00000000000000 | v84 & 0xFFFFFFFFFFFFFFLL, v26, (uint64_t (*)(uint64_t))sub_100212C70);
      uint64_t v45 = a6[2];
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      a6[2] = v45;
      unint64_t v70 = v70 & 0xFF00000000000000 | v84 & 0xFFFFFFFFFFFFFFLL;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100212CF0();
        uint64_t v45 = *v66;
      }
      uint64_t v9 = 0;
      uint64_t v8 = a3;
      unint64_t v47 = *(void *)(v45 + 16);
      if (v47 >= *(void *)(v45 + 24) >> 1)
      {
        sub_100212CF0();
        uint64_t v8 = a3;
        uint64_t v45 = *v66;
      }
      *(void *)(v45 + 16) = v47 + 1;
      *(void *)(v45 + 8 * v47 + 32) = v17;
      *unint64_t v66 = v45;
      goto LABEL_54;
    }
    int v49 = HIDWORD(v90) - v90;
    swift_retain();
    uint64_t v72 = v17;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t v78 = (void *)(v15 + 24);
    swift_beginAccess();
    uint64_t v50 = 0;
    unint64_t v30 = 0;
    int v81 = v19;
    unint64_t v75 = v19 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v18 << 8);
    while (1)
    {
      uint64_t v51 = v20 + v50;
      uint64_t v52 = *(unsigned int *)(v20 + v50 + 40);
      uint64_t v53 = *(unsigned int *)(v20 + v50 + 44);
      if (v53 - v52 == v49)
      {
        uint64_t v54 = *(void *)(v51 + 32);
        uint64_t v55 = *(unsigned __int16 *)(v51 + 52);
        uint64_t v56 = *(unsigned __int8 *)(v51 + 54);
        BOOL v57 = *(_DWORD *)(v51 + 48) == v84 && v55 == v82;
        BOOL v58 = v57 && v56 == v81;
        if (v58 && v54 == v83) {
          break;
        }
        swift_beginAccess();
        int v60 = memcmp((const void *)(*(void *)(v54 + 24) + (v56 | (v55 << 8)) + v52), (const void *)(*v78 + v75 + v73), v53 - v52);
        uint64_t v20 = v79;
        if (!v60) {
          break;
        }
      }
      ++v30;
      v50 += 24;
      if (v48 == v30)
      {
        uint64_t v26 = 0;
        uint64_t v15 = v83;
        unint64_t v16 = v73;
        goto LABEL_25;
      }
    }
LABEL_49:
    swift_release();
    uint64_t v61 = *v66;
    swift_bridgeObjectRetain();
    char v62 = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v66 = v61;
    uint64_t v9 = 0;
    if ((v62 & 1) == 0)
    {
      sub_100338E9C();
      uint64_t v61 = v63;
      *unint64_t v66 = v63;
    }
    if ((v30 & 0x8000000000000000) != 0) {
      goto LABEL_62;
    }
    if (v30 >= *(void *)(v61 + 16)) {
      goto LABEL_63;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v61 + 8 * v30 + 32) = v72;
    uint64_t v8 = a3;
LABEL_54:
    swift_release();
    swift_bridgeObjectRelease_n();
    sub_10033AB1C(v83);
    uint64_t v7 = v65;
    if (v65 >= v8) {
      goto LABEL_55;
    }
  }
  uint64_t v72 = v92;
  sub_1005E33F0();
  uint64_t v77 = (void *)(v15 + 24);
  swift_beginAccess();
  unint64_t v76 = v19 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v18 << 8);
  sub_1005E3400();
  Swift::Int v22 = sub_1005E3470();
  uint64_t v23 = 1 << *(void *)(v21 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (!v24)
  {
    uint64_t v26 = v25 & v22;
    uint64_t v27 = sub_1005E0B40();
    *(void *)&long long v97 = v21 + 16;
    *((void *)&v97 + 1) = v21 + 32;
    *(void *)&long long v98 = v26;
    *((void *)&v98 + 1) = v27;
    *(void *)&long long v99 = v28;
    *((void *)&v99 + 1) = v29;
    char v100 = 0;
    unint64_t v30 = sub_1005E0B70();
    char v32 = v31;
    long long v85 = v97;
    long long v86 = v98;
    long long v87 = v99;
    char v88 = v100;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v32)
    {
LABEL_24:
      swift_release();
LABEL_25:
      uint64_t v17 = v72;
      goto LABEL_26;
    }
    int v80 = v19;
    uint64_t v33 = v20 + 32;
    uint64_t v74 = v16;
    int v34 = HIDWORD(v16) - v16;
    while (1)
    {
      BOOL v35 = (uint64_t *)(v33 + 24 * v30);
      uint64_t v37 = *((unsigned int *)v35 + 2);
      uint64_t v36 = *((unsigned int *)v35 + 3);
      if (v36 - v37 == v34)
      {
        uint64_t v38 = *v35;
        uint64_t v39 = *((unsigned __int16 *)v35 + 10);
        uint64_t v40 = *((unsigned __int8 *)v35 + 22);
        BOOL v41 = *((_DWORD *)v35 + 4) == v84 && v39 == v82;
        BOOL v42 = v41 && v40 == v80;
        if (v42 && v38 == v83) {
          break;
        }
        swift_beginAccess();
        if (!memcmp((const void *)(*(void *)(v38 + 24) + (v40 | (v39 << 8)) + v37), (const void *)(*v77 + v76 + v74), v36 - v37))break; {
      }
        }
      sub_1005E0B90();
      long long v93 = v85;
      long long v94 = v86;
      long long v95 = v87;
      char v96 = v88;
      uint64_t v26 = v86;
      unint64_t v30 = sub_1005E0B70();
      if (v44)
      {
        uint64_t v15 = v83;
        unint64_t v16 = v73;
        goto LABEL_24;
      }
    }
    swift_release();
    goto LABEL_49;
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
}

uint64_t sub_1003376B8(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v38 = a3;
  uint64_t v11 = sub_10000566C(&qword_1007122C8);
  __chkstk_darwin(v11 - 8);
  __int16 v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000566C(&qword_100712468);
  __chkstk_darwin(v14 - 8);
  uint64_t v37 = (uint64_t)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000566C(&qword_10070FE48);
  uint64_t result = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a2 + 1;
  if (!__OFADD__(a2, 1))
  {
    uint64_t v36 = a2 + 1;
    char v31 = v13;
    uint64_t v32 = a6;
    uint64_t v30 = v16;
    while (1)
    {
      if (v20 >= v38)
      {
        sub_1002DB5BC();
        uint64_t v7 = swift_allocError();
        *uint64_t v27 = v38;
      }
      else
      {
        uint64_t v21 = *a1;
        uint64_t v22 = a1[1];
        uint64_t v23 = v38;
        int v24 = *((_DWORD *)a1 + 4);
        __int16 v25 = *((_WORD *)a1 + 10);
        int v35 = *((unsigned __int8 *)a1 + 22);
        swift_retain();
        uint64_t v26 = v37;
        v33(a1, v20, v23);
        if (!v7)
        {
          swift_release();
          uint64_t v16 = v30;
          storeEnumTagSinglePayload for ClientCommand(v26, 0, 1, v30);
          __int16 v13 = v31;
          goto LABEL_10;
        }
        swift_release();
        *a1 = v21;
        a1[1] = v22;
        *((_DWORD *)a1 + 4) = v24;
        *((_WORD *)a1 + 10) = v25;
        *((unsigned char *)a1 + 22) = v35;
        __int16 v13 = v31;
        uint64_t v16 = v30;
      }
      swift_willThrow();
      uint64_t v39 = v7;
      swift_errorRetain();
      sub_10000566C(qword_100710378);
      if (!swift_dynamicCast()) {
        return swift_errorRelease();
      }
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = v37;
      storeEnumTagSinglePayload for ClientCommand(v37, 1, 1, v16);
      swift_errorRelease();
      if (getEnumTagSinglePayload for ClientCommand(v26, 1, v16) == 1) {
        return sub_1001F3A28(v26, &qword_100712468);
      }
      uint64_t v7 = 0;
LABEL_10:
      sub_1001F39D8(v26, (uint64_t)v19, &qword_10070FE48);
      sub_10033AD10((uint64_t)&v19[*(int *)(v16 + 52)], (uint64_t)v13);
      uint64_t v28 = sub_10000566C(&qword_10070FE28);
      storeEnumTagSinglePayload for ClientCommand((uint64_t)v13, 0, 1, v28);
      swift_bridgeObjectRetain();
      sub_1002EA508();
      sub_1001F3A28((uint64_t)v19, &qword_10070FE48);
      uint64_t v20 = v36;
    }
  }
  __break(1u);
  return result;
}

void sub_100337A24(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, unint64_t *a5@<X8>)
{
  sub_10031F4CC(a1, a2, a3);
  if (!v5)
  {
    sub_1002E201C();
    uint64_t v13 = sub_10031E368(v8, v9, v10, v11, v12, 176);
    uint64_t v14 = v13;
    unint64_t v16 = v15;
    uint64_t v17 = HIBYTE(v15) & 0xF;
    uint64_t v18 = v13 & 0xFFFFFFFFFFFFLL;
    if ((v16 & 0x2000000000000000) != 0) {
      uint64_t v19 = v17;
    }
    else {
      uint64_t v19 = v13 & 0xFFFFFFFFFFFFLL;
    }
    if (!v19) {
      goto LABEL_43;
    }
    if ((v16 & 0x1000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_10033C75C();
      unint64_t v21 = sub_1002368B8(v48, v49, 10);
      char v51 = v50;
      swift_bridgeObjectRelease();
      LOBYTE(v17) = v51;
      goto LABEL_38;
    }
    if ((v16 & 0x2000000000000000) == 0)
    {
      if ((v13 & 0x1000000000000000) != 0)
      {
        uint64_t v20 = (unsigned __int8 *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else
      {
        sub_10033C75C();
        uint64_t v20 = (unsigned __int8 *)sub_1005E2D30();
      }
      unint64_t v21 = (unint64_t)sub_100236888(v20, v18);
      LOBYTE(v17) = v22 & 1;
LABEL_38:
      if ((v17 & 1) == 0)
      {
        if (a4) {
          goto LABEL_46;
        }
        uint64_t v34 = sub_10033C75C();
        __int16 v36 = sub_100271E7C(v34, v35);
        if ((v36 & 0x100) == 0)
        {
          if (v36 == 48)
          {
            swift_bridgeObjectRelease();
            sub_100296090();
            sub_10020DD10();
            strcpy((char *)v37, "starts with 0");
            *(_WORD *)(v37 + 14) = -4864;
            *(void *)(v37 + 16) = 0xD000000000000020;
            *(void *)(v37 + 24) = 0x80000001005E63C0;
            uint64_t v38 = 181;
LABEL_44:
            *(void *)(v37 + 32) = v38;
            swift_willThrow();
            swift_release();
            return;
          }
LABEL_46:
          *a5 = v21;
          sub_10033C75C();
          uint64_t v39 = sub_1005E1DC0();
          swift_bridgeObjectRelease();
          swift_release();
          a5[1] = v39;
          return;
        }
LABEL_71:
        __break(1u);
        return;
      }
LABEL_43:
      sub_1005E2C80(18);
      swift_bridgeObjectRelease();
      v52._countAndFlagsBits = 0xD000000000000010;
      v52._object = (void *)0x80000001005E6CC0;
      sub_1005E1E30(v52);
      sub_100296090();
      sub_10020DD10();
      *(void *)uint64_t v37 = v14;
      *(void *)(v37 + 8) = v16;
      *(void *)(v37 + 16) = 0xD000000000000020;
      *(void *)(v37 + 24) = 0x80000001005E63C0;
      uint64_t v38 = 178;
      goto LABEL_44;
    }
    if (v13 == 43)
    {
      if (v17)
      {
        if (v17 != 1)
        {
          sub_100237288();
          if (v26 || !v25)
          {
            unint64_t v21 = v29;
            if (v28 == 2) {
              goto LABEL_37;
            }
            sub_100237288();
            if (v26 || !v25)
            {
              unint64_t v21 = 10 * v21 + v31;
              if (v30 != 3)
              {
                while (1)
                {
                  sub_10033C570();
                  if (!v26 && v25) {
                    goto LABEL_34;
                  }
                  if (!is_mul_ok(v21, v33)) {
                    goto LABEL_34;
                  }
                  BOOL v25 = __CFADD__(10 * v21, v32);
                  unint64_t v21 = 10 * v21 + v32;
                  if (v25) {
                    goto LABEL_34;
                  }
                  sub_10033C468();
                  if (v26) {
                    goto LABEL_38;
                  }
                }
              }
              goto LABEL_37;
            }
          }
          goto LABEL_34;
        }
        goto LABEL_68;
      }
    }
    else
    {
      if (v13 != 45)
      {
        if (v17 && (v13 - 48) <= 9u)
        {
          unint64_t v21 = (v13 - 48);
          if (v17 == 1) {
            goto LABEL_37;
          }
          sub_100237288();
          if (v26 || !v25)
          {
            unint64_t v21 = 10 * v21 + v41;
            if (v40 != 2)
            {
              while (1)
              {
                sub_10033C570();
                if (!v26 && v25) {
                  goto LABEL_34;
                }
                if (!is_mul_ok(v21, v43)) {
                  goto LABEL_34;
                }
                BOOL v25 = __CFADD__(10 * v21, v42);
                unint64_t v21 = 10 * v21 + v42;
                if (v25) {
                  goto LABEL_34;
                }
                sub_10033C468();
                if (v26) {
                  goto LABEL_38;
                }
              }
            }
            goto LABEL_37;
          }
        }
LABEL_34:
        unint64_t v21 = 0;
LABEL_35:
        LOBYTE(v17) = 1;
        goto LABEL_38;
      }
      if (v17)
      {
        if (v17 != 1)
        {
          sub_100237288();
          if (v26 || !v25)
          {
            unint64_t v21 = 0;
            BOOL v25 = v24 == 0;
            unint64_t v27 = -(uint64_t)v24;
            if (!v25) {
              goto LABEL_35;
            }
            if (v23 == 2)
            {
              LOBYTE(v17) = 0;
              unint64_t v21 = v27;
              goto LABEL_38;
            }
            unsigned __int8 v44 = BYTE2(v14) - 48;
            if ((BYTE2(v14) - 48) <= 9u && is_mul_ok(v27, 0xAuLL))
            {
              unint64_t v45 = 10 * v27;
              unint64_t v21 = v45 - v44;
              if (v45 >= v44)
              {
                if (v23 != 3)
                {
                  while (1)
                  {
                    sub_10033C570();
                    if (!v26 && v25) {
                      goto LABEL_34;
                    }
                    if (!is_mul_ok(v21, v47)) {
                      goto LABEL_34;
                    }
                    BOOL v25 = 10 * v21 >= v46;
                    unint64_t v21 = 10 * v21 - v46;
                    if (!v25) {
                      goto LABEL_34;
                    }
                    sub_10033C468();
                    if (v26) {
                      goto LABEL_38;
                    }
                  }
                }
LABEL_37:
                LOBYTE(v17) = 0;
                goto LABEL_38;
              }
            }
          }
          goto LABEL_34;
        }
LABEL_68:
        unint64_t v21 = 0;
        goto LABEL_38;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_71;
  }
}

void sub_100337E64()
{
  sub_10031DE28();
  unint64_t v2 = *((unsigned int *)v0 + 2);
  unint64_t v1 = *((unsigned int *)v0 + 3);
  if (v1 == v2)
  {
    sub_1002E1490();
    sub_10020DD10();
LABEL_3:
    swift_willThrow();
LABEL_15:
    sub_10033B880();
    return;
  }
  if (v1 < v2)
  {
LABEL_19:
    __break(1u);
  }
  else
  {
    uint64_t v3 = v0;
    unint64_t v4 = *((unsigned __int8 *)v0 + 22) | ((unint64_t)*((unsigned __int16 *)v0 + 10) << 8);
    if (*((_DWORD *)v0 + 4) - (int)v4 >= v1)
    {
      uint64_t v5 = *v0;
      sub_1001F969C();
      unint64_t v6 = v2;
      while (1)
      {
        if (v6 >= v1)
        {
          __break(1u);
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
        if (v6 >= v2 + (v1 - v2)) {
          goto LABEL_18;
        }
        if (*(unsigned char *)(*(void *)(v5 + 24) + v4 + v6) != 32) {
          break;
        }
        if (v1 == ++v6)
        {
          *((_DWORD *)v3 + 2) = v1;
          goto LABEL_15;
        }
      }
      if (v6 <= v2)
      {
        sub_1005E2C80(24);
        swift_bridgeObjectRelease();
        v9._countAndFlagsBits = sub_1005E3230();
        sub_1005E1E30(v9);
        swift_bridgeObjectRelease();
        sub_100296090();
        sub_10020DD10();
        void *v7 = 0xD000000000000016;
        v7[1] = 0x80000001005E6CA0;
        sub_10031DA00((uint64_t)v7, 0xD000000000000020);
        *(void *)(v8 + 32) = 201;
        goto LABEL_3;
      }
      if (v1 < v6) {
        goto LABEL_21;
      }
      *((_DWORD *)v3 + 2) = v6;
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
}

uint64_t sub_100338020(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5, unint64_t a6, char a7)
{
  if ((a4 & 1) == 0 || (uint64_t result = sub_1003298A8(), !v7))
  {
    unint64_t v38 = a5;
    char v29 = a7;
    if ((a6 & 0x1000000000000000) != 0)
    {
      Swift::Int v13 = sub_1005E1E80();
    }
    else if ((a6 & 0x2000000000000000) != 0)
    {
      Swift::Int v13 = HIBYTE(a6) & 0xF;
    }
    else
    {
      Swift::Int v13 = a5 & 0xFFFFFFFFFFFFLL;
    }
    unint64_t v14 = *(void *)a1;
    uint64_t v16 = *(unsigned int *)(a1 + 8);
    unint64_t v15 = *(unsigned int *)(a1 + 12);
    int v17 = *(_DWORD *)(a1 + 16);
    unint64_t v18 = *(unsigned __int16 *)(a1 + 20);
    unsigned int v19 = *(unsigned __int8 *)(a1 + 22);
    if (v13 < 0 || v13 > (v15 - v16))
    {
      if (v15 >= v16)
      {
        Swift::Int v13 = v19 | (v18 << 8);
        if (v17 - (int)v13 >= v15)
        {
          unint64_t v30 = *(void *)a1;
          int v31 = v16;
          int v32 = v15;
          int v33 = v17;
          __int16 v34 = v18;
          char v35 = v19;
          uint64_t v36 = v16;
          unint64_t v37 = v15;
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v25 = v38;
          char v26 = sub_100338518((uint64_t)&v30, v38, a6);
          swift_bridgeObjectRelease();
          swift_release();
          if (v26)
          {
            sub_1002E1490();
            sub_10020DD10();
            return swift_willThrow();
          }
          sub_1005E2C80(23);
          swift_bridgeObjectRelease();
          v40._countAndFlagsBits = v25;
          v40._object = (void *)a6;
          sub_1005E1E30(v40);
          v41._countAndFlagsBits = 544106784;
          v41._object = (void *)0xE400000000000000;
          sub_1005E1E30(v41);
          sub_1001F969C();
          v42._countAndFlagsBits = sub_1005E1D70();
          sub_1005E1E30(v42);
          swift_bridgeObjectRelease();
          sub_100296090();
          sub_10020DD10();
          *unint64_t v27 = 0x6F74206465697254;
          v27[1] = 0xEF20657372617020;
          sub_10031DA00((uint64_t)v27, 0xD000000000000020);
          uint64_t v24 = 218;
LABEL_23:
          v23[4] = v24;
          return swift_willThrow();
        }
        goto LABEL_36;
      }
    }
    else
    {
      sub_1001F969C();
      uint64_t v20 = sub_1005E1D70();
      if (!__CFADD__(v16, v13))
      {
        unint64_t v15 = v20;
        unint64_t v14 = v21;
        *(_DWORD *)(a1 + 8) = v16 + v13;
        unint64_t v18 = v38;
        BOOL v22 = v20 == v38 && v21 == a6;
        if (v22 || (sub_1005E3290() & 1) != 0) {
          return swift_bridgeObjectRelease();
        }
        if (v29)
        {
          sub_1005E2C80(40);
          swift_bridgeObjectRelease();
          sub_10033C374();
          sub_10033C2AC();
          v39._countAndFlagsBits = v15;
          v39._object = (void *)v14;
          sub_1005E1E30(v39);
          swift_bridgeObjectRelease();
          sub_100296090();
          sub_10020DD10();
          *uint64_t v23 = 0;
          v23[1] = 0xE000000000000000;
          v23[2] = 0xD000000000000020;
          v23[3] = 0x80000001005E63C0;
          uint64_t v24 = 234;
          goto LABEL_23;
        }
        if ((v14 & 0x1000000000000000) == 0)
        {
          if ((v14 & 0x2000000000000000) != 0) {
            uint64_t v28 = HIBYTE(v14) & 0xF;
          }
          else {
            uint64_t v28 = v15 & 0xFFFFFFFFFFFFLL;
          }
LABEL_30:
          if (v13 != v28 || (sub_1003387D8(v18, a6, v15, v14) & 1) == 0)
          {
            sub_1005E2C80(42);
            swift_bridgeObjectRelease();
            sub_10033C374();
            sub_10033C2AC();
            v43._countAndFlagsBits = v15;
            v43._object = (void *)v14;
            sub_1005E1E30(v43);
            swift_bridgeObjectRelease();
            sub_100296090();
            sub_10020DD10();
            *uint64_t v23 = 0;
            v23[1] = 0xE000000000000000;
            v23[2] = 0xD000000000000020;
            v23[3] = 0x80000001005E63C0;
            uint64_t v24 = 231;
            goto LABEL_23;
          }
          return swift_bridgeObjectRelease();
        }
LABEL_37:
        uint64_t v28 = sub_1005E1E80();
        goto LABEL_30;
      }
      __break(1u);
    }
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  return result;
}

void sub_100338454(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  BOOL v4 = __OFADD__(a2, 1);
  uint64_t v5 = a2 + 1;
  if (v4)
  {
    __break(1u);
    return;
  }
  if (v5 >= a3)
  {
    sub_1002DB5BC();
    swift_allocError();
    *Swift::Int v13 = a3;
  }
  else
  {
    uint64_t v8 = *a1;
    uint64_t v9 = a1[1];
    int v10 = *((_DWORD *)a1 + 4);
    __int16 v11 = *((_WORD *)a1 + 10);
    char v12 = *((unsigned char *)a1 + 22);
    sub_100337E64();
    if (!v3) {
      return;
    }
    *a1 = v8;
    a1[1] = v9;
    *((_DWORD *)a1 + 4) = v10;
    *((_WORD *)a1 + 10) = v11;
    *((unsigned char *)a1 + 22) = v12;
  }
  swift_willThrow();
}

unint64_t sub_100338518(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v5 = *(unsigned int *)(a1 + 8);
  int v4 = *(_DWORD *)(a1 + 12);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v8 = a2 & 0xFFFFFFFFFFFFLL;
  }
  int v21 = *(_DWORD *)(a1 + 12);
  if (v8)
  {
    unint64_t v29 = v8;
    uint64_t v25 = 4 * v8;
    uint64_t v10 = *(unsigned __int8 *)(a1 + 22);
    uint64_t v11 = (a2 >> 59) & 1;
    if ((a3 & 0x1000000000000000) == 0) {
      LOBYTE(v11) = 1;
    }
    uint64_t v12 = *(unsigned __int16 *)(a1 + 20);
    uint64_t v31 = 4 << v11;
    uint64_t v23 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
    uint64_t v24 = a3 & 0xFFFFFFFFFFFFFFLL;
    Swift::Int v13 = (void *)(v3 + 24);
    uint64_t v26 = v10 | (v12 << 8);
    uint64_t v27 = (v4 - v5);
    unint64_t v14 = 15;
    uint64_t v15 = v6;
    while (1)
    {
      unint64_t result = v14;
      if ((v14 & 0xC) == v31) {
        unint64_t result = sub_100272294(v14, a2, a3);
      }
      unint64_t v17 = result >> 16;
      uint64_t v18 = a2;
      if (result >> 16 >= v29) {
        break;
      }
      if ((a3 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_1005E1EC0();
        uint64_t v18 = a2;
        unsigned __int8 v19 = result;
      }
      else if ((a3 & 0x2000000000000000) != 0)
      {
        v30[0] = a2;
        v30[1] = v24;
        unsigned __int8 v19 = *((unsigned char *)v30 + v17);
      }
      else
      {
        unint64_t result = v23;
        if ((a2 & 0x1000000000000000) == 0)
        {
          unint64_t result = sub_1005E2D30();
          uint64_t v18 = a2;
        }
        unsigned __int8 v19 = *(unsigned char *)(result + v17);
      }
      if ((v14 & 0xC) == v31)
      {
        unint64_t result = sub_100272294(v14, v18, a3);
        unint64_t v14 = result;
      }
      if ((a3 & 0x1000000000000000) != 0)
      {
        if (v29 <= v14 >> 16) {
          goto LABEL_48;
        }
        unint64_t result = sub_1005E1E90();
        unint64_t v14 = result;
      }
      else
      {
        unint64_t v14 = (v14 & 0xFFFFFFFFFFFF0000) + 65540;
      }
      if (v7 == v15) {
        goto LABEL_40;
      }
      if (v15 >= v7) {
        goto LABEL_45;
      }
      if (v6 < v5) {
        goto LABEL_46;
      }
      if (v15 - v5 >= v27) {
        goto LABEL_47;
      }
      swift_beginAccess();
      if (((*(unsigned char *)(*v13 + v26 + v15) ^ v19) & 0xDF) != 0)
      {
        sub_1000811BC(a1);
        swift_release();
        return 0;
      }
      ++v15;
      if (v25 == v14 >> 14) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v15 = *(void *)(a1 + 24);
LABEL_31:
  sub_1000811BC(a1);
  unint64_t result = swift_release();
  if (v15 == v7) {
    return 1;
  }
  if (v15 < v6 || v15 >= v7)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (v15 >= v5)
  {
    if (v15 - v5 < (v21 - v5)) {
      return 0;
    }
    __break(1u);
LABEL_40:
    sub_1000811BC(a1);
    swift_release();
    return 1;
  }
LABEL_50:
  __break(1u);
  return result;
}

unint64_t sub_1003387D8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v6 = a3 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v24 = v6;
  uint64_t v7 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v7) = 1;
  }
  uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v8 = HIBYTE(a2) & 0xF;
  }
  uint64_t v32 = 4 * v6;
  uint64_t v27 = 4 << v7;
  unint64_t v28 = v8;
  uint64_t v20 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v21 = a4 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v26 = 4 * v8;
  uint64_t v9 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v9) = 1;
  }
  uint64_t v10 = 4 << v9;
  uint64_t v22 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v23 = a2 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v11 = 15;
  unint64_t v12 = 15;
  while (1)
  {
    unint64_t v13 = v12 >> 14;
    BOOL v14 = v12 >> 14 == v32;
    if (v12 >> 14 == v32)
    {
      unsigned __int8 v15 = 0;
      goto LABEL_29;
    }
    unint64_t result = v12;
    if ((v12 & 0xC) == v27) {
      unint64_t result = sub_100272294(v12, a3, a4);
    }
    unint64_t v17 = result >> 16;
    if (result >> 16 >= v24) {
      goto LABEL_51;
    }
    if ((a4 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1005E1EC0();
      unsigned __int8 v15 = result;
    }
    else if ((a4 & 0x2000000000000000) != 0)
    {
      unint64_t v30 = a3;
      uint64_t v31 = v21;
      unsigned __int8 v15 = *((unsigned char *)&v30 + v17);
    }
    else
    {
      unint64_t result = v20;
      if ((a3 & 0x1000000000000000) == 0) {
        unint64_t result = sub_1005E2D30();
      }
      unsigned __int8 v15 = *(unsigned char *)(result + v17);
    }
    if ((v12 & 0xC) == v27)
    {
      unint64_t result = sub_100272294(v12, a3, a4);
      unint64_t v12 = result;
      if ((a4 & 0x1000000000000000) == 0)
      {
LABEL_24:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_29;
      }
    }
    else if ((a4 & 0x1000000000000000) == 0)
    {
      goto LABEL_24;
    }
    if (v24 <= v12 >> 16) {
      goto LABEL_53;
    }
    unint64_t v12 = sub_1005E1E90();
LABEL_29:
    if (v26 == v11 >> 14) {
      return v14;
    }
    unint64_t result = v11;
    if ((v11 & 0xC) == v10) {
      unint64_t result = sub_100272294(v11, a1, a2);
    }
    unint64_t v18 = result >> 16;
    if (result >> 16 >= v28) {
      break;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1005E1EC0();
      unsigned __int8 v19 = result;
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      unint64_t v30 = a1;
      uint64_t v31 = v23;
      unsigned __int8 v19 = *((unsigned char *)&v30 + v18);
    }
    else
    {
      unint64_t result = v22;
      if ((a1 & 0x1000000000000000) == 0) {
        unint64_t result = sub_1005E2D30();
      }
      unsigned __int8 v19 = *(unsigned char *)(result + v18);
    }
    if ((v11 & 0xC) == v10)
    {
      unint64_t result = sub_100272294(v11, a1, a2);
      unint64_t v11 = result;
      if ((a2 & 0x1000000000000000) == 0)
      {
LABEL_41:
        unint64_t v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_46;
      }
    }
    else if ((a2 & 0x1000000000000000) == 0)
    {
      goto LABEL_41;
    }
    if (v28 <= v11 >> 16) {
      goto LABEL_52;
    }
    unint64_t v11 = sub_1005E1E90();
LABEL_46:
    if (v13 == v32 || ((v19 ^ v15) & 0xDF) != 0) {
      return 0;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_100338ADC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result = sub_10032CEB0(a1);
  if (!v4 && result != a4)
  {
    sub_1005E2C80(23);
    swift_bridgeObjectRelease();
    strcpy((char *)v9, "looking for ");
    BYTE5(v9[1]) = 0;
    HIWORD(v9[1]) = -5120;
    v10._countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v10);
    swift_bridgeObjectRelease();
    v11._countAndFlagsBits = 0x20646E756F6620;
    v11._object = (void *)0xE700000000000000;
    sub_1005E1E30(v11);
    v12._countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v12);
    swift_bridgeObjectRelease();
    uint64_t v7 = v9[1];
    sub_100296090();
    swift_allocError();
    void *v8 = v9[0];
    v8[1] = v7;
    v8[2] = 0xD000000000000020;
    v8[3] = 0x80000001005E63C0;
    v8[4] = 246;
    return swift_willThrow();
  }
  return result;
}

void *sub_100338C40(void *(*a1)(uint64_t *__return_ptr, uint64_t, void), uint64_t a2, uint64_t a3)
{
  return sub_100338C58(a1, a2, a3);
}

void *sub_100338C58(void *(*a1)(uint64_t *__return_ptr, uint64_t, void), uint64_t a2, uint64_t a3)
{
  uint64_t result = a1(&v5, a3 + 32, *(void *)(a3 + 16));
  if (!v3) {
    return (void *)v5;
  }
  return result;
}

void sub_100338CAC()
{
  sub_10033C53C();
  sub_100338EF8(0, v0, 0, v1, (void (*)(uint64_t, uint64_t, void *))sub_10023232C);
}

void sub_100338CE4()
{
}

void sub_100338D2C()
{
  sub_10033C53C();
  sub_1003391BC(0, v0, 0, v1, (void (*)(unint64_t, uint64_t, char *))sub_100232374);
}

void sub_100338D64()
{
}

void sub_100338DAC()
{
}

void sub_100338DF4()
{
}

void sub_100338E3C()
{
}

void sub_100338E88()
{
}

void sub_100338E9C()
{
}

void sub_100338EB0()
{
}

void sub_100338EC8(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_100338EE0(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_100338EF8(char a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, void *))
{
  if (a3)
  {
    sub_100234FF8();
    if (v9 != v10)
    {
      sub_100235018();
      if (v9)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  else
  {
    uint64_t v8 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v8 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v8;
  }
  if (v12)
  {
    sub_10000566C(&qword_100712480);
    unint64_t v13 = (void *)sub_100235060();
    j__malloc_size(v13);
    sub_10033C038();
    void v13[2] = v11;
    v13[3] = v14;
  }
  else
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
  }
  if (a1)
  {
    a5(a4 + 32, v11, v13 + 4);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    memcpy(v13 + 4, (const void *)(a4 + 32), 16 * v11);
  }
  swift_release();
}

void sub_100338FD4(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_100338FEC()
{
}

void sub_100339014()
{
}

void sub_10033903C()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235050();
  if (v3)
  {
    sub_10000566C(&qword_10070FEE0);
    uint64_t v7 = (char *)swift_allocObject();
    size_t v8 = j__malloc_size(v7);
    *((void *)v7 + 2) = v2;
    *((void *)v7 + 3) = 2 * v8 - 64;
  }
  else
  {
    uint64_t v7 = (char *)_swiftEmptyArrayStorage;
  }
  if (v1)
  {
    sub_10023234C((char *)(v0 + 32), v2, v7 + 32);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    memcpy(v7 + 32, (const void *)(v0 + 32), v2);
  }
  swift_release();
}

void sub_100339100()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235050();
  if (v3)
  {
    sub_10000566C(&qword_10070FEB0);
    uint64_t v7 = (char *)sub_100235060();
    size_t v8 = j__malloc_size(v7);
    sub_10033C414(v8);
  }
  else
  {
    uint64_t v7 = (char *)_swiftEmptyArrayStorage;
  }
  if (v1)
  {
    sub_10023230C((char *)(v0 + 32), v2, v7 + 32);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    memcpy(v7 + 32, (const void *)(v0 + 32), 8 * v2);
  }
  swift_release();
}

void sub_1003391BC(char a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(unint64_t, uint64_t, char *))
{
  if (a3)
  {
    sub_100234FF8();
    if (v9 != v10)
    {
      sub_100235018();
      if (v9)
      {
LABEL_24:
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  else
  {
    uint64_t v8 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v8 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v8;
  }
  if (!v12)
  {
    unint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_10000566C(&qword_100712418);
  uint64_t v13 = type metadata accessor for ParameterValue();
  sub_10031D0A0(v13);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_23;
  }
  void v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_18:
  type metadata accessor for ParameterValue();
  sub_1002BA518();
  if (a1)
  {
    unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    a5(a4 + v22, v11, (char *)v18 + v22);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
}

void sub_100339318()
{
  sub_1002350C0();
  if (v3)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
LABEL_23:
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  else
  {
    uint64_t v4 = v2;
  }
  uint64_t v7 = *(void *)(v0 + 16);
  if (v4 <= v7) {
    uint64_t v8 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v8 = v4;
  }
  if (!v8) {
    goto LABEL_17;
  }
  sub_10000566C(&qword_100712460);
  uint64_t v9 = sub_10000566C(&qword_10070FE28);
  sub_10031D0A0(v9);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (void *)swift_allocObject();
  size_t v15 = j__malloc_size(v14);
  if (!v11)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v15 - v13 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_22;
  }
  v14[2] = v7;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v11);
LABEL_17:
  sub_10000566C(&qword_10070FE28);
  sub_1002BA518();
  if (v1)
  {
    sub_10023238C();
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
}

void sub_100339470()
{
}

void sub_100339498()
{
}

void sub_1003394C0()
{
}

void sub_1003394E8()
{
  sub_10033C748();
  if (v5)
  {
    sub_100234FF8();
    if (v7 != v8)
    {
      sub_100235018();
      if (v7)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  else
  {
    uint64_t v6 = v3;
  }
  uint64_t v9 = *(void *)(v0 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (v10)
  {
    sub_10000566C(v4);
    uint64_t v11 = (void *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    v11[2] = v9;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  if (v2)
  {
    v1(v0 + 32, v9, v11 + 4);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
}

void sub_1003395D4()
{
}

void sub_1003395FC()
{
}

void sub_100339624()
{
  sub_10033C748();
  if (v5)
  {
    sub_100234FF8();
    if (v7 != v8)
    {
      sub_100235018();
      if (v7)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  else
  {
    uint64_t v6 = v3;
  }
  uint64_t v9 = *(void *)(v0 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (v10)
  {
    sub_10000566C(v4);
    uint64_t v11 = (void *)sub_100235060();
    j__malloc_size(v11);
    sub_10033C038();
    v11[2] = v9;
    v11[3] = v12;
  }
  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  if (v2)
  {
    v1(v0 + 32, v9, v11 + 4);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
}

void sub_1003396F4()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235050();
  if (v3)
  {
    sub_10000566C(&qword_100712408);
    char v7 = (char *)sub_100235060();
    j__malloc_size(v7);
    sub_10033C038();
    *((void *)v7 + 2) = v2;
    *((void *)v7 + 3) = v8;
  }
  else
  {
    char v7 = (char *)_swiftEmptyArrayStorage;
  }
  if (v1)
  {
    sub_10023232C((char *)(v0 + 32), v2, v7 + 32);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_10000566C(&qword_1007107F8);
    sub_100235198();
  }
  swift_release();
}

void sub_1003397C0()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235050();
  if (v3)
  {
    sub_10000566C(&qword_1007123F0);
    char v7 = (char *)sub_100235060();
    size_t v8 = j__malloc_size(v7);
    sub_10033C414(v8);
  }
  else
  {
    char v7 = (char *)_swiftEmptyArrayStorage;
  }
  if (v1)
  {
    sub_10023230C((char *)(v0 + 32), v2, v7 + 32);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_10000566C(&qword_1007123F8);
    sub_100235198();
  }
  swift_release();
}

void sub_100339888()
{
}

void sub_1003398A4()
{
}

uint64_t sub_1003398C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
  {
    *a1 = result;
    a1[1] = v5;
  }
  return result;
}

void sub_1003398F4()
{
  sub_1002E1C9C();
  sub_1002FCFA0(v0, v1, v2);
}

uint64_t sub_100339910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100339940(a1, a2, a3, (uint64_t (*)(uint64_t))sub_100212B90);
}

uint64_t sub_100339928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100339940(a1, a2, a3, (uint64_t (*)(uint64_t))sub_100212BB0);
}

uint64_t sub_100339940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  char v6 = v4;
  uint64_t v11 = v4[1];
  uint64_t v9 = v4 + 1;
  uint64_t v10 = v11;
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v9 = v11;
  if ((result & 1) == 0)
  {
    uint64_t v13 = sub_1002ECE78();
    uint64_t result = a4(v13);
    uint64_t v10 = *v9;
  }
  unint64_t v15 = *(void *)(v10 + 16);
  unint64_t v14 = *(void *)(v10 + 24);
  if (v15 >= v14 >> 1)
  {
    uint64_t result = ((uint64_t (*)(BOOL, unint64_t, uint64_t))a4)(v14 > 1, v15 + 1, 1);
    uint64_t v10 = *v9;
  }
  *(void *)(v10 + 16) = v15 + 1;
  uint64_t v16 = v10 + 16 * v15;
  *(void *)(v16 + 32) = a1;
  *(void *)(v16 + 40) = a2;
  v6[1] = v10;
  unint64_t v17 = *(void *)(v10 + 16);
  uint64_t v18 = *v6;
  if (*v6)
  {
    sub_1001F969C();
    if (sub_1005E0BA0() < (uint64_t)v17)
    {
      if (v17 <= 0xF && (*(void *)(v18 + 24) & 0x3FLL) == 0)
      {
        uint64_t result = swift_release();
        *char v6 = 0;
        return result;
      }
      goto LABEL_14;
    }
    uint64_t result = sub_100339E10();
    if (*v6) {
      return sub_100339E5C();
    }
    else {
      __break(1u);
    }
  }
  else if (v17 > 0xF)
  {
LABEL_14:
    sub_1005E0BD0();
    return sub_100339EC8();
  }
  return result;
}

uint64_t sub_100339AA8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100339B00(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_100212C50);
}

uint64_t sub_100339AD4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100339B00(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_100212C70);
}

uint64_t sub_100339B00(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  char v7 = v5;
  int v9 = a2;
  unint64_t v11 = HIDWORD(a2);
  uint64_t v14 = v5[1];
  uint64_t v12 = v5 + 1;
  uint64_t v13 = v14;
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v12 = v14;
  if ((result & 1) == 0)
  {
    uint64_t v16 = sub_1002ECE78();
    uint64_t result = a5(v16);
    uint64_t v13 = *v12;
  }
  unint64_t v18 = *(void *)(v13 + 16);
  unint64_t v17 = *(void *)(v13 + 24);
  if (v18 >= v17 >> 1)
  {
    uint64_t result = ((uint64_t (*)(BOOL, unint64_t, uint64_t))a5)(v17 > 1, v18 + 1, 1);
    uint64_t v13 = *v12;
  }
  *(void *)(v13 + 16) = v18 + 1;
  uint64_t v19 = v13 + 24 * v18;
  *(void *)(v19 + 32) = a1;
  *(_DWORD *)(v19 + 40) = v9;
  *(_DWORD *)(v19 + 44) = v11;
  *(_DWORD *)(v19 + 48) = a3;
  *(_WORD *)(v19 + 52) = WORD2(a3);
  *(unsigned char *)(v19 + 54) = BYTE6(a3);
  v7[1] = v13;
  uint64_t v20 = *v7;
  if (!*v7)
  {
    if (v18 <= 0xE) {
      return result;
    }
    goto LABEL_15;
  }
  sub_1001F969C();
  if (sub_1005E0BA0() <= (uint64_t)v18)
  {
    if (v18 <= 0xE && (*(void *)(v20 + 24) & 0x3FLL) == 0)
    {
      uint64_t result = swift_release();
      uint64_t *v7 = 0;
      return result;
    }
LABEL_15:
    sub_1005E0BD0();
    return sub_100339F14();
  }
  uint64_t result = sub_100339E10();
  if (*v7) {
    return sub_100339E5C();
  }
  __break(1u);
  return result;
}

void sub_100339C94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v8 = v2[1];
  char v6 = v2 + 1;
  uint64_t v7 = v8;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *char v6 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_100212CB0();
    uint64_t v7 = *v6;
  }
  unint64_t v10 = *(void *)(v7 + 16);
  if (v10 >= *(void *)(v7 + 24) >> 1)
  {
    sub_100212CB0();
    uint64_t v7 = *v6;
  }
  *(void *)(v7 + 16) = v10 + 1;
  uint64_t v11 = v7 + 16 * v10;
  *(void *)(v11 + 32) = a1;
  *(void *)(v11 + 40) = a2;
  v3[1] = v7;
  unint64_t v12 = *(void *)(v7 + 16);
  uint64_t v13 = *v3;
  if (*v3)
  {
    swift_beginAccess();
    if (sub_1005E0BA0() < (uint64_t)v12)
    {
      if (v12 <= 0xF && (*(void *)(v13 + 24) & 0x3FLL) == 0)
      {
        swift_release();
        *uint64_t v3 = 0;
        return;
      }
      goto LABEL_14;
    }
    sub_100339E10();
    if (*v3) {
      sub_100339E5C();
    }
    else {
      __break(1u);
    }
  }
  else if (v12 > 0xF)
  {
LABEL_14:
    sub_1005E0BD0();
    sub_100339F14();
  }
}

uint64_t sub_100339E10()
{
  uint64_t result = *v0;
  if (*v0)
  {
    uint64_t result = swift_isUniquelyReferenced_native();
    if (!result)
    {
      uint64_t result = *v0;
      if (*v0)
      {
        uint64_t v2 = sub_1005E0BC0();
        uint64_t result = swift_release();
        *uint64_t v0 = v2;
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_100339E5C()
{
  return sub_1005E0B60();
}

uint64_t sub_100339EC8()
{
  uint64_t v1 = sub_10033C320();
  uint64_t v5 = sub_100339F4C(v1, v2, v3, v4);
  uint64_t result = swift_release();
  *uint64_t v0 = v5;
  return result;
}

uint64_t sub_100339EFC()
{
  return sub_100339F14();
}

uint64_t sub_100339F14()
{
  uint64_t v1 = sub_10033C320();
  uint64_t v6 = sub_100339FD4(v1, v2, v3, v4, v5);
  uint64_t result = swift_release();
  *uint64_t v0 = v6;
  return result;
}

uint64_t sub_100339F4C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = sub_1005E0BD0();
  uint64_t v9 = 0;
  if (a3) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10 <= v8) {
    uint64_t v10 = v8;
  }
  if (v10 <= a4) {
    uint64_t v11 = a4;
  }
  else {
    uint64_t v11 = v10;
  }
  if (v11 >= 5)
  {
    uint64_t v9 = sub_1005E0BE0();
    sub_10033A064(a1);
  }
  return v9;
}

uint64_t sub_100339FD4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = sub_1005E0BD0();
  uint64_t v11 = 0;
  if (a3) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = a2;
  }
  if (v12 <= v10) {
    uint64_t v12 = v10;
  }
  if (v12 <= a4) {
    uint64_t v13 = a4;
  }
  else {
    uint64_t v13 = v12;
  }
  if (v13 >= 5)
  {
    uint64_t v11 = sub_1005E0BE0();
    a5(a1, v11 + 16, v11 + 32);
  }
  return v11;
}

void sub_10033A064(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    while (1)
    {
      sub_1005E33F0();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      sub_1005E3470();
      sub_10033C130();
      if (v3) {
        break;
      }
      uint64_t v4 = sub_1005E0B40();
      swift_bridgeObjectRelease();
      if (v4)
      {
        while (1)
          sub_1005E0B90();
      }
      sub_1005E0B80();
      if (++v2 == v1) {
        return;
      }
    }
    __break(1u);
  }
}

Swift::Int sub_10033A170(Swift::Int result, void *a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v4 = 0;
    while (1)
    {
      sub_1005E33F0();
      swift_beginAccess();
      sub_1005E3400();
      uint64_t result = sub_1005E3470();
      if (__OFSUB__(1 << *a2, 1)) {
        break;
      }
      if (sub_1005E0B40())
      {
        while (1)
          sub_1005E0B90();
      }
      uint64_t result = sub_1005E0B80();
      if (++v4 == v2) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

Swift::Int sub_10033A298(Swift::Int result, void *a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v4 = 0;
    while (1)
    {
      sub_1005E33F0();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      uint64_t result = sub_1005E3470();
      if (__OFSUB__(1 << *a2, 1)) {
        break;
      }
      uint64_t v5 = sub_1005E0B40();
      swift_bridgeObjectRelease();
      if (v5)
      {
        while (1)
          sub_1005E0B90();
      }
      uint64_t result = sub_1005E0B80();
      if (++v4 == v2) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

void sub_10033A3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1005E33F0();
  sub_1005E1DB0();
  sub_1005E3470();
  sub_10033C130();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    sub_1005E0B40();
    uint64_t v7 = sub_1005E0B70();
    if ((v8 & 1) == 0)
    {
      uint64_t v9 = (void *)(a3 + 16 * v7);
      if (*v9 != a1 || v9[1] != a2)
      {
        do
        {
          if (sub_1005E3290()) {
            break;
          }
          sub_1005E0B90();
          uint64_t v11 = sub_1005E0B70();
          if (v12) {
            break;
          }
          uint64_t v13 = (void *)(a3 + 16 * v11);
        }
        while (*v13 != a1 || v13[1] != a2);
      }
    }
  }
}

void sub_10033A50C()
{
  sub_10033BD88();
  sub_1001F969C();
  sub_10033BBA8();
  sub_1005E3470();
  sub_10033C130();
  if (v3)
  {
    __break(1u);
  }
  else
  {
    sub_10033C500();
    uint64_t v4 = sub_10033C4DC();
    sub_10033C1D4(v4, v5, v6, v7, v8, v9, v10, v11, v33, v35, v37, v0 + 24, v40, v42, v44, v46, v48, v50, v52,
      v54,
      v55,
      v57,
      v58,
      v60,
      v61,
      v63,
      v64,
      v65,
      v66,
      v67);
    if ((v12 & 1) == 0)
    {
      sub_10033BB80();
      do
      {
        sub_10033C690();
        if (v13)
        {
          sub_10033C290();
          BOOL v13 = v13 && v2 == v38;
          BOOL v14 = v13 && v1 == v36;
          if (v14 && v0 == v41) {
            break;
          }
          uint64_t v16 = sub_1001F969C();
          uint64_t v0 = 24;
          if (!sub_10033BD58(v16, v17, v18, v19, v20, v21, v22, v23, v34, v36, v38, v39)) {
            break;
          }
        }
        sub_1005E0B90();
        sub_10033BE18(v24, v25, v26, v27, v28, v29, v30, v31, v34, v36, v38, (uint64_t)v39, v41, v43, v45, v47, v49, v51, v53,
          v56,
          v59,
          v62);
      }
      while ((v32 & 1) == 0);
    }
  }
}

Swift::Int sub_10033A5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  Swift::Int result = sub_1005E3470();
  if (__OFSUB__(1 << *a5, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1005E0B40();
    uint64_t v10 = sub_1005E0B70();
    uint64_t v11 = v10;
    if ((v12 & 1) == 0)
    {
      BOOL v13 = (void *)(a3 + 16 * v10);
      if (*v13 != a1 || v13[1] != a2)
      {
        do
        {
          if (sub_1005E3290()) {
            break;
          }
          sub_1005E0B90();
          uint64_t v15 = sub_1005E0B70();
          uint64_t v11 = v15;
          if (v16) {
            break;
          }
          uint64_t v17 = (void *)(a3 + 16 * v15);
        }
        while (*v17 != a1 || v17[1] != a2);
      }
    }
    return v11;
  }
  return result;
}

uint64_t sub_10033A770@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6 = (void *)result;
  uint64_t v8 = *a4;
  uint64_t v9 = a4[1];
  if (a3)
  {
    swift_retain();
    sub_10033A3B0(v8, v9, (uint64_t)v6);
    uint64_t v11 = v10;
    char v13 = v12;
    uint64_t v15 = v14;
    Swift::Int result = swift_release();
    char v16 = v13 & 1;
  }
  else
  {
    if (!a2) {
      goto LABEL_11;
    }
    Swift::Int result = *(void *)result;
    BOOL v17 = *v6 == v8 && v6[1] == v9;
    if (v17 || (Swift::Int result = sub_10033C3DC(), (result & 1) != 0))
    {
      uint64_t v15 = 0;
      uint64_t v11 = 0;
      char v16 = 0;
      goto LABEL_12;
    }
    if (a2 == 1) {
      goto LABEL_11;
    }
    Swift::Int result = v6[2];
    BOOL v18 = result == v8 && v6[3] == v9;
    if (v18 || (Swift::Int result = sub_10033C3DC(), (result & 1) != 0))
    {
      uint64_t v15 = 0;
      char v16 = 0;
      uint64_t v11 = 1;
      goto LABEL_12;
    }
    if (a2 == 2)
    {
LABEL_11:
      uint64_t v15 = 0;
      uint64_t v11 = 0;
      char v16 = 1;
      goto LABEL_12;
    }
    Swift::Int result = v6[4];
    BOOL v19 = result == v8 && v6[5] == v9;
    if (v19 || (Swift::Int result = sub_10033C3DC(), (result & 1) != 0))
    {
      uint64_t v15 = 0;
      char v16 = 0;
      uint64_t v11 = 2;
    }
    else
    {
      uint64_t v20 = v6 + 7;
      uint64_t v21 = 2;
      uint64_t v22 = 3;
      while (1)
      {
        char v16 = a2 == v22;
        if (a2 == v22)
        {
          uint64_t v15 = 0;
          uint64_t v11 = 0;
          goto LABEL_12;
        }
        uint64_t v23 = v21 + 1;
        Swift::Int result = *(v20 - 1);
        if (result == v8 && *v20 == v9) {
          break;
        }
        uint64_t v25 = v23;
        uint64_t v11 = v22;
        Swift::Int result = sub_1005E3290();
        uint64_t v15 = 0;
        uint64_t v22 = v11 + 1;
        v20 += 2;
        uint64_t v21 = v25;
        if (result) {
          goto LABEL_12;
        }
      }
      uint64_t v15 = 0;
      uint64_t v11 = v23;
    }
  }
LABEL_12:
  *(void *)a5 = v11;
  *(unsigned char *)(a5 + 8) = v16;
  *(void *)(a5 + 16) = v15;
  return result;
}

uint64_t sub_10033A930@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5 = a2;
  uint64_t v6 = *((unsigned int *)a4 + 2);
  int v7 = *((_DWORD *)a4 + 4);
  uint64_t v8 = *((unsigned __int16 *)a4 + 10);
  uint64_t v9 = *((unsigned __int8 *)a4 + 22);
  if (a3)
  {
    uint64_t v10 = a5;
    swift_retain();
    sub_10033A50C();
    uint64_t v12 = v11;
    char v14 = v13;
    uint64_t v5 = v15;
    Swift::Int result = swift_release();
    a5 = v10;
    char v16 = v14 & 1;
  }
  else if (a2)
  {
    uint64_t v30 = a5;
    uint64_t v12 = 0;
    uint64_t v17 = (*((_DWORD *)a4 + 3) - v6);
    uint64_t v36 = *a4;
    char v32 = (void *)(*a4 + 24);
    int v33 = *((unsigned __int16 *)a4 + 10);
    BOOL v18 = (unsigned __int8 *)(result + 22);
    uint64_t v31 = (v9 | (v8 << 8)) + v6;
    int v35 = *((_DWORD *)a4 + 4);
    while (1)
    {
      uint64_t v19 = *(unsigned int *)(v18 - 14);
      uint64_t v20 = *(unsigned int *)(v18 - 10);
      if (v20 - v19 == v17)
      {
        uint64_t v21 = *(void *)(v18 - 22);
        uint64_t v22 = *((unsigned __int16 *)v18 - 1);
        uint64_t v23 = *v18;
        BOOL v24 = *(_DWORD *)(v18 - 6) == v7 && v22 == v8;
        BOOL v25 = v24 && v23 == v9;
        if (v25 && v21 == v36) {
          break;
        }
        uint64_t v27 = v9;
        uint64_t v28 = v17;
        swift_beginAccess();
        uint64_t v29 = (const void *)(*(void *)(v21 + 24) + (v23 | (v22 << 8)) + v19);
        sub_1001F969C();
        Swift::Int result = memcmp(v29, (const void *)(*v32 + v31), v20 - v19);
        uint64_t v17 = v28;
        uint64_t v9 = v27;
        LODWORD(v8) = v33;
        uint64_t v5 = a2;
        int v7 = v35;
        if (!result) {
          break;
        }
      }
      v18 += 24;
      if (v5 == ++v12)
      {
        uint64_t v5 = 0;
        uint64_t v12 = 0;
        char v16 = 1;
        goto LABEL_21;
      }
    }
    uint64_t v5 = 0;
    char v16 = 0;
LABEL_21:
    a5 = v30;
  }
  else
  {
    uint64_t v12 = 0;
    char v16 = 1;
  }
  *(void *)a5 = v12;
  *(unsigned char *)(a5 + 8) = v16;
  *(void *)(a5 + 16) = v5;
  return result;
}

uint64_t sub_10033AB1C(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10033AB5C()
{
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10033AB94()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10033ABD4()
{
  return sub_1002EB0E4();
}

uint64_t sub_10033ABF0(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_10033AC30()
{
}

uint64_t *sub_10033AC4C(uint64_t *a1)
{
  return a1;
}

void sub_10033AC80()
{
}

void sub_10033AC9C()
{
}

uint64_t sub_10033ACB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10032F74C(a1, a2, a3, *(void *)(v3 + 24), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 16));
}

void sub_10033ACD8()
{
}

void sub_10033ACF4()
{
  sub_1002E1C9C();
  sub_1003062A4(v0, v1, v2);
}

uint64_t sub_10033AD10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070FE28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10033AD78()
{
  sub_1002E1C9C();
  sub_1002F2EB4(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_10033AD94(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a5 >> 1 != 0xFFFFFFFF) {
    return sub_1001F34E8(result, a2, a3, a4, a5, a6, a7, a8);
  }
  return result;
}

uint64_t sub_10033ADA8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a5 != 251) {
    return sub_10033AE00(result, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F3480, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F34D0);
  }
  return result;
}

uint64_t sub_10033AE00(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, void), uint64_t (*a10)(uint64_t, uint64_t, uint64_t))
{
  if ((a5 & 0xFC | 2) != 0xFE)
  {
    a9(result, a2, a3, a4, a5 & 1);
    return a10(a6, a7, a8);
  }
  return result;
}

double sub_10033AE88()
{
  sub_1002E1C9C();
  return sub_1002F2A04(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_10033AEA4()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10033AEDC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1001F3BBC();
  uint64_t v4 = sub_1001F4A1C();
  v5(v4);
  return a2;
}

uint64_t sub_10033AF30(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1001F3BBC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10033AF90(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1001F3BBC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void type metadata accessor for ParseBuffer()
{
}

unint64_t sub_10033AFF8()
{
  unint64_t result = qword_100712488;
  if (!qword_100712488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712488);
  }
  return result;
}

uint64_t sub_10033B098()
{
  return swift_retain();
}

uint64_t sub_10033B0DC()
{
  return swift_retain();
}

uint64_t sub_10033B10C()
{
  return swift_retain();
}

void sub_10033B140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, __int16 a11, __int16 a12, int a13)
{
  *(void *)(v13 + 8) = v14;
  *(_DWORD *)(v13 + 16) = a13;
  *(_WORD *)(v13 + 20) = a12;
  *(unsigned char *)(v13 + 22) = a10;
}

uint64_t sub_10033B160()
{
  return v0;
}

void sub_10033B184()
{
  *(void *)uint64_t v0 = v1;
  *(void *)(v0 + 8) = v5;
  *(_DWORD *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 20) = v3;
  *(unsigned char *)(v0 + 22) = v4;
}

uint64_t sub_10033B19C()
{
  return swift_retain();
}

uint64_t sub_10033B1D8()
{
  return v0;
}

void sub_10033B1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, __int16 a11, __int16 a12, int a13)
{
  *(void *)(v13 + 8) = v14;
  *(_DWORD *)(v13 + 16) = a13;
  *(_WORD *)(v13 + 20) = a12;
  *(unsigned char *)(v13 + 22) = a10;
}

uint64_t sub_10033B210()
{
  return swift_retain();
}

uint64_t sub_10033B240()
{
  return v0;
}

void sub_10033B260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11)
{
  *(void *)(v11 + 8) = v14;
  *(_DWORD *)(v11 + 16) = v12;
  *(_WORD *)(v11 + 20) = v13;
  *(unsigned char *)(v11 + 22) = a11;
}

uint64_t sub_10033B2B8()
{
  return v0;
}

void sub_10033B2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, __int16 a13, __int16 a14, int a15)
{
  *(void *)(v15 + 8) = v16;
  *(_DWORD *)(v15 + 16) = a15;
  *(_WORD *)(v15 + 20) = a14;
  *(unsigned char *)(v15 + 22) = a12;
}

uint64_t sub_10033B2F8()
{
  return swift_retain();
}

uint64_t sub_10033B328()
{
  return v0;
}

uint64_t sub_10033B350()
{
  return swift_retain();
}

uint64_t sub_10033B38C()
{
  return swift_retain();
}

uint64_t sub_10033B3C8()
{
  return swift_retain();
}

uint64_t sub_10033B408()
{
  return swift_retain();
}

uint64_t sub_10033B44C()
{
  return swift_retain();
}

uint64_t sub_10033B470()
{
  return v0;
}

void sub_10033B490(uint64_t a1, void *a2)
{
  *a2 = v2;
}

uint64_t sub_10033B49C()
{
  return v0;
}

uint64_t sub_10033B4CC()
{
  return swift_retain();
}

uint64_t sub_10033B4F0()
{
  return swift_retain();
}

void sub_10033B52C(uint64_t a1, void *a2)
{
  *a2 = v2;
}

uint64_t sub_10033B550()
{
  return sub_1005E1D80();
}

void sub_10033B5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int16 a11, __int16 a12)
{
  *(void *)uint64_t v12 = v13;
  *(void *)(v12 + 8) = v15;
  *(_DWORD *)(v12 + 16) = v14;
  *(_WORD *)(v12 + 20) = a12;
  *(unsigned char *)(v12 + 22) = a10;
}

void sub_10033B5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, __int16 a10, __int16 a11)
{
  *(void *)uint64_t v11 = v12;
  *(void *)(v11 + 8) = v14;
  *(_DWORD *)(v11 + 16) = v13;
  *(_WORD *)(v11 + 20) = a11;
  *(unsigned char *)(v11 + 22) = a9;
}

void sub_10033B670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, __int16 a11, __int16 a12, int a13)
{
  *(void *)(v13 + 8) = v14;
  *(_DWORD *)(v13 + 16) = a13;
  *(_WORD *)(v13 + 20) = a12;
  *(unsigned char *)(v13 + 22) = a10;
}

uint64_t sub_10033B6B0()
{
  return v0;
}

uint64_t sub_10033B6D0()
{
  return swift_dynamicCast();
}

uint64_t sub_10033B6FC()
{
  return swift_retain();
}

void sub_10033B74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, __int16 a13, __int16 a14, int a15)
{
  *(void *)uint64_t v15 = v16;
  *(void *)(v15 + 8) = v17;
  *(_DWORD *)(v15 + 16) = a15;
  *(_WORD *)(v15 + 20) = a14;
  *(unsigned char *)(v15 + 22) = a12;
}

void sub_10033B770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, __int16 a12, __int16 a13, int a14)
{
  *(void *)uint64_t v14 = v15;
  *(void *)(v14 + 8) = v16;
  *(_DWORD *)(v14 + 16) = a14;
  *(_WORD *)(v14 + 20) = a13;
  *(unsigned char *)(v14 + 22) = a11;
}

uint64_t sub_10033B794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_100312418(v12, v13, v14, v16, v11, v15, a11);
}

uint64_t sub_10033B7D4()
{
  return swift_retain();
}

void sub_10033B804()
{
  sub_10031E1C0();
}

void sub_10033B828()
{
  sub_10031E1C0();
}

void sub_10033B854()
{
  sub_10031E1C0();
}

uint64_t sub_10033B8B8()
{
  return v0;
}

void sub_10033B8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, __int16 a12, __int16 a13, int a14)
{
  *(void *)(v14 + 8) = v15;
  *(_DWORD *)(v14 + 16) = a14;
  *(_WORD *)(v14 + 20) = a13;
  *(unsigned char *)(v14 + 22) = a11;
}

uint64_t sub_10033B908()
{
  return swift_retain();
}

uint64_t sub_10033B948()
{
  return swift_retain();
}

void sub_10033B988(uint64_t a1, void *a2)
{
  *a2 = v2;
}

void sub_10033B994(uint64_t a1, void *a2)
{
  *a2 = v2;
}

void sub_10033B9A0()
{
  sub_10031E1C0();
}

void sub_10033B9C8()
{
  sub_10031E1C0();
}

uint64_t sub_10033B9F0()
{
  return v0;
}

uint64_t sub_10033BA7C()
{
  return swift_retain();
}

uint64_t sub_10033BAA4()
{
  return swift_retain();
}

void sub_10033BADC(uint64_t a1, void *a2)
{
  *a2 = v2;
}

void sub_10033BAE8()
{
  sub_10031E1C0();
}

void sub_10033BB0C(uint64_t a1, void *a2)
{
  *a2 = 0x6E776F6E6B6E55;
  a2[1] = 0xE700000000000000;
}

uint64_t *sub_10033BB4C()
{
  return sub_10032D3F0(v0, v2, v1, 1);
}

uint64_t sub_10033BB70()
{
  return v0;
}

uint64_t sub_10033BBA8()
{
  return sub_1005E3400();
}

uint64_t sub_10033BBDC(uint64_t a1)
{
  storeEnumTagSinglePayload for ClientCommand(v1, 1, 1, a1);
  return swift_errorRelease();
}

uint64_t sub_10033BC30()
{
  return swift_release();
}

uint64_t sub_10033BC58()
{
  return swift_dynamicCast();
}

uint64_t sub_10033BC84()
{
  return v0;
}

void sub_10033BC9C(void *a1@<X1>, uint64_t a2@<X8>)
{
  a1[2] = a2;
  a1[3] = (v2 - 32) | 0x8000000000000000;
  a1[4] = 110;
}

uint64_t sub_10033BCB4()
{
  return swift_dynamicCast();
}

uint64_t sub_10033BCD0()
{
  return v0;
}

uint64_t sub_10033BCF8()
{
  return swift_bridgeObjectRelease();
}

void sub_10033BD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, __int16 a11, __int16 a12, int a13)
{
  *(void *)uint64_t v13 = v14;
  *(void *)(v13 + 8) = v15;
  *(_DWORD *)(v13 + 16) = a13;
  *(_WORD *)(v13 + 20) = a12;
  *(unsigned char *)(v13 + 22) = a10;
}

uint64_t sub_10033BD58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  uint64_t v19 = (const void *)(*(void *)(v12 + 24) + (v16 | (v17 << 8)) + v13);
  uint64_t v20 = (const void *)(*a12 + v14);
  return memcmp(v19, v20, v15 - v13);
}

uint64_t sub_10033BD88()
{
  return sub_1005E33F0();
}

void sub_10033BDB8()
{
  sub_10030AA50();
}

uint64_t sub_10033BDE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100328FB4(v9, v14, v10, v13, v8, v12, v11, a8);
}

uint64_t sub_10033BE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, long long a19, long long a20,long long a21,char a22)
{
  *(_OWORD *)(v22 - 160) = a19;
  *(_OWORD *)(v22 - 144) = a20;
  *(_OWORD *)(v22 - 128) = a21;
  *(unsigned char *)(v22 - 112) = a22;
  return sub_1005E0B70();
}

uint64_t sub_10033BE48()
{
  return v0;
}

void sub_10033BE6C(uint64_t a1, void *a2)
{
  *a2 = v2;
}

uint64_t sub_10033BE9C()
{
  return v0;
}

uint64_t sub_10033BEC0()
{
  return v0;
}

void sub_10033BEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int16 a11, __int16 a12)
{
  *(void *)uint64_t v13 = v14;
  *(void *)(v13 + 8) = v15;
  *(_DWORD *)(v13 + 16) = v12;
  *(_WORD *)(v13 + 20) = a12;
  *(unsigned char *)(v13 + 22) = a10;
}

uint64_t sub_10033BF08(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(void *)uint64_t v3 = result;
  *(void *)(v3 + 8) = a2;
  *(_DWORD *)(v3 + 16) = a3;
  *(_WORD *)(v3 + 20) = WORD2(a3);
  *(unsigned char *)(v3 + 22) = BYTE6(a3);
  return result;
}

void sub_10033BF2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, __int16 a13, __int16 a14, int a15)
{
  *(void *)uint64_t v16 = v15;
  *(void *)(v16 + 8) = v17;
  *(_DWORD *)(v16 + 16) = a15;
  *(_WORD *)(v16 + 20) = a14;
  *(unsigned char *)(v16 + 22) = a12;
}

void sub_10033BF74()
{
  sub_10031E1C0();
}

void sub_10033BFA0()
{
  sub_10031E1C0();
}

void sub_10033BFCC()
{
  sub_10031E1C0();
}

uint64_t sub_10033C004()
{
  return v0;
}

uint64_t sub_10033C04C()
{
  return 34;
}

uint64_t sub_10033C080()
{
  return v0;
}

void sub_10033C094()
{
  sub_10031E1C0();
}

uint64_t sub_10033C0C0()
{
  return swift_dynamicCast();
}

uint64_t sub_10033C0DC()
{
  return swift_release();
}

void sub_10033C0FC()
{
  *(void *)(v0 + 8) = v4;
  *(_DWORD *)(v0 + 16) = v1;
  *(_WORD *)(v0 + 20) = v2;
  *(unsigned char *)(v0 + 22) = v3;
}

uint64_t sub_10033C110()
{
  return v0;
}

uint64_t sub_10033C1A8()
{
  return swift_retain();
}

__n128 sub_10033C1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,long long a30)
{
  return (__n128)a30;
}

uint64_t sub_10033C1F4()
{
  return v0;
}

void sub_10033C214()
{
  sub_1005E2C80(19);
}

uint64_t sub_10033C23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t sub_10033C258()
{
  return v0;
}

uint64_t sub_10033C274()
{
  return v0;
}

void sub_10033C2AC()
{
  v1._countAndFlagsBits = 0x20646E756F6620;
  v1._object = (void *)0xE700000000000000;
  sub_1005E1E30(v1);
}

uint64_t sub_10033C2D4()
{
  return swift_release();
}

uint64_t sub_10033C2EC()
{
  return v0;
}

uint64_t sub_10033C308()
{
  return swift_errorRetain();
}

uint64_t sub_10033C320()
{
  return *(void *)(v0 + 8);
}

uint64_t sub_10033C33C()
{
  return 0;
}

void sub_10033C358()
{
  *(void *)uint64_t v0 = v1;
  *(void *)(v0 + 8) = v5;
  *(_DWORD *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 20) = v3;
  *(unsigned char *)(v0 + 22) = v4;
}

void sub_10033C374()
{
  v3._countAndFlagsBits = v1;
  v3._object = v0;
  sub_1005E1E30(v3);
}

void sub_10033C3B4(uint64_t a1, uint64_t a2)
{
  sub_10031E2BC(a1, a2, v2);
}

uint64_t sub_10033C3DC()
{
  return sub_1005E3290();
}

uint64_t sub_10033C3F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t sub_10033C414(uint64_t result)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * ((result - 32) / 8);
  return result;
}

void sub_10033C42C(uint64_t a1@<X8>)
{
  v2._countAndFlagsBits = 0xD000000000000011;
  v2._object = (void *)((a1 - 32) | 0x8000000000000000);
  sub_1005E1E30(v2);
}

uint64_t sub_10033C450()
{
  *(void *)(v1 - 88) = v0;
  return swift_errorRetain();
}

void sub_10033C478()
{
  *(void *)(v0 + 8) = v3;
  *(_DWORD *)(v0 + 16) = v1;
  *(_WORD *)(v0 + 20) = v2;
}

void sub_10033C488()
{
  *(void *)uint64_t v0 = v1;
  *(void *)(v0 + 8) = v5;
  *(_DWORD *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 20) = v3;
  *(unsigned char *)(v0 + 22) = v4;
}

uint64_t sub_10033C4A0()
{
  return v0;
}

void sub_10033C4B0()
{
  sub_10031E2BC(v1, v0, v2);
}

uint64_t sub_10033C4CC()
{
  return v0;
}

uint64_t sub_10033C4DC()
{
  return sub_1005E0B70();
}

uint64_t sub_10033C500()
{
  return sub_1005E0B40();
}

uint64_t sub_10033C548()
{
  return v0;
}

void sub_10033C580(uint64_t a1, void *a2)
{
  *a2 = v2;
}

uint64_t sub_10033C58C()
{
  return v0;
}

uint64_t sub_10033C59C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10033C5EC()
{
  return swift_dynamicCast();
}

uint64_t sub_10033C604()
{
  *(void *)(v1 - 8) = v0;
  return swift_errorRetain();
}

uint64_t sub_10033C61C(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_10033C650()
{
  return v0;
}

uint64_t sub_10033C65C()
{
  return v0;
}

void sub_10033C670()
{
  sub_10031E2BC(v0, v2, v1);
}

uint64_t sub_10033C6A4()
{
  return swift_release();
}

uint64_t sub_10033C6BC()
{
  return v0;
}

uint64_t sub_10033C6E4()
{
  return swift_release();
}

uint64_t sub_10033C704()
{
  return v0;
}

void sub_10033C710()
{
  sub_10031E2BC(v0, v2, v1);
}

uint64_t sub_10033C730()
{
  return swift_errorRetain();
}

uint64_t sub_10033C75C()
{
  return v0;
}

uint64_t sub_10033C768()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10033C780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10033CF0C(a1, a2, a3, a4);
}

#error "10033C868: call analysis failed (funcsize=68)"

uint64_t sub_10033C8F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10033CC80(a1, a2, a3, a4);
}

uint64_t sub_10033C940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10033CF0C(a1, a2, a3, a4);
}

uint64_t sub_10033C990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_100344ABC(a1, a2, a3, a4, a5);
  uint64_t result = sub_10032072C();
  if (v6)
  {
    sub_100344D58();
    sub_10000566C(qword_100710378);
    if (sub_100344C28())
    {
      swift_errorRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      sub_100344C48();
      return sub_10032072C();
    }
    swift_errorRelease();
    sub_100344D58();
    if (sub_100344C28())
    {
      swift_errorRelease();
      sub_100344DB8();
      goto LABEL_6;
    }
    return swift_errorRelease();
  }
  else
  {
    uint64_t v9 = *(void *)(v7 + 32);
    long long v10 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)uint64_t v5 = *(_OWORD *)v7;
    *(_OWORD *)(v5 + 16) = v10;
    *(void *)(v5 + 32) = v9;
  }
  return result;
}

#error "10033CAD8: call analysis failed (funcsize=49)"

uint64_t sub_10033CB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10033D468(a1, a2, a3, a4);
}

uint64_t sub_10033CBA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10033D298(a1, a2, a3, a4);
}

uint64_t sub_10033CBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10033D544(a1, a2, a3);
}

uint64_t sub_10033CC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10033D1BC(a1, a2, a3, a4);
}

#error "10033CCD8: call analysis failed (funcsize=55)"

#error "10033CDBC: call analysis failed (funcsize=49)"

#error "10033CE8C: call analysis failed (funcsize=50)"

#error "10033CF64: call analysis failed (funcsize=53)"

uint64_t sub_10033CFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_100344ABC(a1, a2, a3, a4, a5);
  uint64_t result = sub_100325A24();
  if (v6)
  {
    sub_100344D58();
    sub_10000566C(qword_100710378);
    if (sub_100344C28())
    {
      swift_errorRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      sub_100344C48();
      return sub_100325A24();
    }
    swift_errorRelease();
    sub_100344D58();
    if (sub_100344C28())
    {
      swift_errorRelease();
      sub_100344DB8();
      goto LABEL_6;
    }
    return swift_errorRelease();
  }
  else
  {
    int v9 = *(_DWORD *)(v7 + 32);
    long long v10 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)uint64_t v5 = *(_OWORD *)v7;
    *(_OWORD *)(v5 + 16) = v10;
    *(_DWORD *)(v5 + 32) = v9;
  }
  return result;
}

#error "10033D134: call analysis failed (funcsize=52)"

#error "10033D214: call analysis failed (funcsize=52)"

#error "10033D2F0: call analysis failed (funcsize=52)"

uint64_t sub_10033D374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_100344ABC(a1, a2, a3, a4, a5);
  uint64_t result = sub_100328EC4();
  if (v6)
  {
    sub_100344D58();
    sub_10000566C(qword_100710378);
    if (sub_100344C28())
    {
      swift_errorRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      sub_100344C48();
      return sub_100328EC4();
    }
    swift_errorRelease();
    sub_100344D58();
    if (sub_100344C28())
    {
      swift_errorRelease();
      sub_100344DB8();
      goto LABEL_6;
    }
    return swift_errorRelease();
  }
  else
  {
    char v9 = *(unsigned char *)(v7 + 32);
    long long v10 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)uint64_t v5 = *(_OWORD *)v7;
    *(_OWORD *)(v5 + 16) = v10;
    *(unsigned char *)(v5 + 32) = v9;
  }
  return result;
}

#error "10033D4C0: call analysis failed (funcsize=52)"

#error "10033D5DC: call analysis failed (funcsize=70)"

#error "10033D728: call analysis failed (funcsize=107)"

#error "10033D8F4: call analysis failed (funcsize=107)"

#error "10033DAC0: call analysis failed (funcsize=107)"

#error "10033DC8C: call analysis failed (funcsize=106)"

#error "10033DE54: call analysis failed (funcsize=106)"

#error "10033E01C: call analysis failed (funcsize=106)"

#error "10033E1E4: call analysis failed (funcsize=106)"

#error "10033E3AC: call analysis failed (funcsize=106)"

#error "10033E574: call analysis failed (funcsize=108)"

#error "10033E744: call analysis failed (funcsize=106)"

#error "10033E90C: call analysis failed (funcsize=106)"

#error "10033EAD4: call analysis failed (funcsize=106)"

#error "10033EC9C: call analysis failed (funcsize=107)"

#error "10033EE68: call analysis failed (funcsize=106)"

#error "10033F030: call analysis failed (funcsize=106)"

#error "10033F1F8: call analysis failed (funcsize=106)"

#error "10033F3C0: call analysis failed (funcsize=109)"

#error "10033F594: call analysis failed (funcsize=107)"

#error "10033F760: call analysis failed (funcsize=108)"

#error "10033F930: call analysis failed (funcsize=107)"

#error "10033FAFC: call analysis failed (funcsize=107)"

#error "10033FCC8: call analysis failed (funcsize=108)"

#error "10033FE98: call analysis failed (funcsize=107)"

#error "100340064: call analysis failed (funcsize=108)"

uint64_t sub_100340178(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a7;
  uint64_t v9 = a6;
  uint64_t v10 = a5;
  uint64_t v29 = *(void *)(result + 16);
  if (!v29)
  {
LABEL_14:
    sub_100296090();
    swift_allocError();
    *BOOL v24 = 0xD000000000000019;
    v24[1] = 0x80000001005E6DD0;
    void v24[2] = v10;
    v24[3] = v9;
    v24[4] = v8;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  uint64_t v30 = a3 + 1;
  if (__OFADD__(a3, 1))
  {
    __break(1u);
    return result;
  }
  uint64_t v11 = v7;
  uint64_t v14 = result;
  uint64_t v15 = 0;
  uint64_t v16 = a3 + 1;
  uint64_t v28 = swift_bridgeObjectRetain();
  while (1)
  {
    *(_OWORD *)(swift_allocObject() + 16) = *(_OWORD *)(v14 + 16 * v15 + 32);
    if (v16 >= a4)
    {
      sub_1002DB5BC();
      swift_allocError();
      *uint64_t v23 = a4;
      swift_retain();
    }
    else
    {
      uint64_t v17 = *a2;
      uint64_t v18 = a2[1];
      int v19 = *((_DWORD *)a2 + 4);
      __int16 v20 = *((_WORD *)a2 + 10);
      uint64_t v21 = a4;
      char v22 = *((unsigned char *)a2 + 22);
      swift_retain();
      swift_retain();
      sub_100342930();
      if (!v11)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      swift_release();
      *a2 = v17;
      a2[1] = v18;
      *((_DWORD *)a2 + 4) = v19;
      *((_WORD *)a2 + 10) = v20;
      *((unsigned char *)a2 + 22) = v22;
      uint64_t v14 = v28;
      a4 = v21;
      uint64_t v16 = v30;
    }
    swift_willThrow();
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (!swift_dynamicCast()) {
      break;
    }
    swift_errorRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_release();
    uint64_t v11 = 0;
    if (v29 == ++v15)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = a7;
      uint64_t v9 = a6;
      uint64_t v10 = a5;
      goto LABEL_14;
    }
  }
  swift_errorRelease();
  swift_errorRetain();
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_100340470@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = ListID.description.getter(*a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1003404A0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, void *))
{
  v5[0] = a1;
  v5[1] = a2;
  a3(&v4, v5);
  return v4;
}

void WindowOfInterestSize.hash(into:)(uint64_t a1, Swift::UInt a2, char a3)
{
  if (a3) {
    a2 = 0;
  }
  else {
    sub_1005E3410(1uLL);
  }
  sub_1005E3410(a2);
}

BOOL static WindowOfInterestSize.__derived_enum_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) == 0)
  {
    if ((a4 & 1) == 0) {
      return a1 == a3;
    }
    return 0;
  }
  return (a4 & 1) != 0;
}

Swift::Int WindowOfInterestSize.hashValue.getter(Swift::UInt a1, char a2)
{
  sub_1005E33F0();
  Swift::UInt v4 = 0;
  if ((a2 & 1) == 0)
  {
    sub_1005E3410(1uLL);
    Swift::UInt v4 = a1;
  }
  sub_1005E3410(v4);
  return sub_1005E3470();
}

void sub_1003405A8(uint64_t a1, Swift::UInt a2, Swift::UInt a3, unsigned __int8 a4)
{
  if (a4)
  {
    if (a4 == 1)
    {
      Swift::UInt v6 = a4;
    }
    else
    {
      sub_1005E3410(2uLL);
      Swift::UInt v6 = a2;
      a2 = a3;
    }
    goto LABEL_7;
  }
  sub_1005E3410(0);
  Swift::UInt v7 = 0;
  if ((a3 & 1) == 0)
  {
    Swift::UInt v6 = 1;
LABEL_7:
    sub_1005E3410(v6);
    Swift::UInt v7 = a2;
  }
  sub_1005E3410(v7);
}

uint64_t sub_100340624(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (a6) {
      return 0;
    }
    if (a2)
    {
      if ((a5 & 1) == 0) {
        return 0;
      }
    }
    else if ((a5 & 1) != 0 || a1 != a4)
    {
      return 0;
    }
    return 1;
  }
  BOOL v7 = a6 == 1 && a1 == a4;
  BOOL v10 = a6 == 2 && a1 == a4 && a2 == a5;
  if (a3 == 1) {
    return v7;
  }
  else {
    return v10;
  }
}

Swift::Int sub_100340688(Swift::UInt a1, Swift::UInt a2, unsigned __int8 a3)
{
  sub_1005E33F0();
  sub_1003405A8((uint64_t)v7, a1, a2, a3);
  return sub_1005E3470();
}

Swift::Int sub_1003406E8()
{
  return WindowOfInterestSize.hashValue.getter(*(void *)v0, *(unsigned char *)(v0 + 8));
}

void sub_1003406F4(uint64_t a1)
{
  WindowOfInterestSize.hash(into:)(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

Swift::Int sub_100340700()
{
  Swift::UInt v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_1005E33F0();
  if (v2) {
    Swift::UInt v1 = 0;
  }
  else {
    sub_1005E3410(1uLL);
  }
  sub_1005E3410(v1);
  return sub_1005E3470();
}

BOOL sub_100340760(uint64_t a1, uint64_t a2)
{
  return static WindowOfInterestSize.__derived_enum_equals(_:_:)(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

Swift::Int sub_10034077C()
{
  return sub_100340688(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_100340788(uint64_t a1)
{
  sub_1003405A8(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

Swift::Int sub_100340794()
{
  Swift::UInt v1 = *(void *)v0;
  Swift::UInt v2 = *(void *)(v0 + 8);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 16);
  sub_1005E33F0();
  sub_1003405A8((uint64_t)v5, v1, v2, v3);
  return sub_1005E3470();
}

uint64_t sub_1003407EC(uint64_t a1, uint64_t a2)
{
  return sub_100340624(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

double ResponseParser.init(bufferLimit:messageAttributeLimit:bodySizeLimit:literalSizeLimit:parsedStringCache:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  if (a5)
  {
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a5;
    *(void *)(v14 + 24) = a6;
    uint64_t v15 = sub_10034093C;
  }
  else
  {
    uint64_t v15 = sub_100340470;
    uint64_t v14 = 0;
  }
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = v14;
  *(void *)a7 = sub_100340934;
  *(void *)(a7 + 8) = v16;
  *(void *)(a7 + 16) = a4;
  *(void *)(a7 + 24) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(a7 + 32) = a1;
  *(void *)(a7 + 40) = a2;
  *(void *)(a7 + 48) = a3;
  double result = 0.0;
  *(_OWORD *)(a7 + 56) = xmmword_1005F6750;
  *(unsigned char *)(a7 + 72) = 0;
  return result;
}

uint64_t sub_1003408FC()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100340934(uint64_t a1, uint64_t a2)
{
  return sub_1003404A0(a1, a2, *(void (**)(uint64_t *__return_ptr, void *))(v2 + 16));
}

uint64_t sub_10034093C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  a2[1] = v5;
  return result;
}

void ResponseParser.parseResponseStream(buffer:)(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v6 = *(void *)a1;
  unsigned int v8 = *(_DWORD *)(a1 + 8);
  unsigned int v7 = *(_DWORD *)(a1 + 12);
  unsigned int v9 = *(_DWORD *)(a1 + 16);
  __int16 v10 = *(_WORD *)(a1 + 20);
  LOBYTE(v11) = *(unsigned char *)(a1 + 22);
  uint64_t v34 = *(void *)a1;
  unsigned int v35 = v8;
  unsigned int v36 = v7;
  unsigned int v37 = v9;
  __int16 v38 = v10;
  char v39 = v11;
  uint64_t v12 = *(void *)(v2 + 56);
  uint64_t v13 = *(void *)(v2 + 64);
  if (!*(unsigned char *)(v2 + 72)) {
    goto LABEL_7;
  }
  unsigned int v9 = v8;
  unsigned int v11 = v7;
  if (*(unsigned char *)(v2 + 72) == 1)
  {
    swift_retain();
    sub_100340FF8((uint64_t)&v34, v12, a2);
    uint64_t v2 = v3;
    if (v3) {
      goto LABEL_10;
    }
    uint64_t v6 = type metadata accessor for ResponseOrContinuationRequest(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = sub_100344DA8();
    storeEnumTagSinglePayload for ClientCommand(v14, v15, v16, v6);
    unsigned int v7 = v35;
    unsigned int v17 = v11 - v36 + v35;
    if (__CFADD__(v9, v11 - (v9 + v36) + v35))
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v17) {
      goto LABEL_19;
    }
    __break(1u);
LABEL_7:
    unsigned int v32 = v8;
    unsigned int v33 = v7;
    swift_retain_n();
    sub_1003413F8(&v34, 1, 100, v2, a2);
    uint64_t v2 = v3;
    if (v3)
    {
      swift_release();
      uint64_t v34 = v6;
      unsigned int v35 = v32;
      unsigned int v36 = v33;
      unsigned int v37 = v9;
      __int16 v38 = v10;
      char v39 = v11;
      swift_willThrow();
      goto LABEL_10;
    }
    swift_release();
    type metadata accessor for ResponseOrContinuationRequest(0);
    uint64_t v24 = sub_100344DA8();
    storeEnumTagSinglePayload for ClientCommand(v24, v25, v26, v27);
    unsigned int v17 = v33 - v36 + v35;
    if (__CFADD__(v32, v33 - (v32 + v36) + v35))
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    if (v33 < v17)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
LABEL_19:
    *(_DWORD *)(a1 + 8) = v17;
    goto LABEL_20;
  }
  swift_retain();
  sub_100340C78((uint64_t)&v34, v12, v13, (uint64_t)a2);
  uint64_t v2 = v3;
  if (v3)
  {
LABEL_10:
    uint64_t v40 = v2;
    swift_errorRetain();
    sub_10000566C(qword_100710378);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      uint64_t v18 = type metadata accessor for ResponseOrContinuationRequest(0);
      storeEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, 1, v18);
      swift_errorRelease();
      sub_100344D3C();
      if (v21)
      {
        __break(1u);
      }
      else if (v19 >= v20)
      {
        *(_DWORD *)(a1 + 8) = v20;
LABEL_20:
        swift_release();
        return;
      }
      __break(1u);
    }
    else
    {
      swift_errorRelease();
      sub_100344D3C();
      if (!v21)
      {
        if (v22 >= v23)
        {
          *(_DWORD *)(a1 + 8) = v23;
          swift_release();
          return;
        }
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v28 = type metadata accessor for ResponseOrContinuationRequest(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = sub_100344DA8();
  storeEnumTagSinglePayload for ClientCommand(v29, v30, v31, v28);
  swift_release();
  if (__CFADD__(v9, v35 - v9))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v11 >= v35)
  {
    *(_DWORD *)(a1 + 8) = v35;
    return;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_100340C78@<X0>(uint64_t a1@<X0>, int64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v10 = type metadata accessor for Response(0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v24 - v13;
  if (a2)
  {
    uint64_t result = sub_1003295A8(a1, 0, 100, a2);
    if (v5) {
      return result;
    }
    uint64_t v18 = (HIDWORD(v16) - v16);
    uint64_t v34 = a2 - v18;
    if (!__OFSUB__(a2, v18))
    {
      __src[0] = result;
      __src[1] = v16;
      int v31 = v17;
      __int16 v32 = WORD2(v17);
      char v33 = BYTE6(v17);
      sub_1002F187C((uint64_t)__src);
      sub_100288FF8(__src, v12);
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = *(void *)(v4 + 56);
      a1 = *(void *)(v4 + 64);
      int v19 = *(unsigned __int8 *)(v4 + 72);
      if (v19 != 2 || v10 != a2 || a1 != a3)
      {
        while (1)
        {
          char v23 = v19;
          uint64_t v25 = 0;
          unint64_t v26 = 0xE000000000000000;
          swift_retain();
          sub_1005E2C80(19);
          uint64_t v28 = v25;
          unint64_t v29 = v26;
          v36._object = (void *)0x80000001005E6DB0;
          v36._countAndFlagsBits = 0xD000000000000011;
          sub_1005E1E30(v36);
          uint64_t v25 = v10;
          unint64_t v26 = a1;
          char v27 = v23;
LABEL_23:
          sub_1005E2E90();
          sub_1005E2F20();
          __break(1u);
        }
      }
      *(void *)(v4 + 56) = v34;
      *(void *)(v4 + 64) = a3;
      *(unsigned char *)(v4 + 72) = 2;
      uint64_t v22 = (uint64_t)v12;
      return sub_100342B6C(v22, a4, type metadata accessor for Response);
    }
    goto LABEL_21;
  }
  a1 = a3 + 1;
  if (__OFADD__(a3, 1))
  {
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    uint64_t v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    sub_1005E2C80(19);
    uint64_t v28 = v25;
    unint64_t v29 = v26;
    v35._object = (void *)0x80000001005E6DB0;
    v35._countAndFlagsBits = 0xD000000000000011;
    sub_1005E1E30(v35);
    uint64_t v25 = v10;
    unint64_t v26 = a2;
    char v27 = (char)v12;
    goto LABEL_23;
  }
  sub_1002F1838(__src);
  sub_100288FF8(__src, v14);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(void *)(v4 + 56);
  a2 = *(void *)(v4 + 64);
  LODWORD(v12) = *(unsigned __int8 *)(v4 + 72);
  if (v12 != 2 || v10 || a2 != a3) {
    goto LABEL_22;
  }
  *(void *)(v4 + 56) = a1;
  *(void *)(v4 + 64) = 0;
  *(unsigned char *)(v4 + 72) = 0;
  uint64_t v22 = (uint64_t)v14;
  return sub_100342B6C(v22, a4, type metadata accessor for Response);
}

uint64_t sub_100340FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  int v10 = *(_DWORD *)(a1 + 16);
  __int16 v11 = *(_WORD *)(a1 + 20);
  char v12 = *(unsigned char *)(a1 + 22);
  swift_retain();
  sub_100313B54(a1, 1, 100, v19);
  if (v4)
  {
    swift_release();
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v9;
    *(_DWORD *)(a1 + 16) = v10;
    *(_WORD *)(a1 + 20) = v11;
    *(unsigned char *)(a1 + 22) = v12;
    return swift_willThrow();
  }
  else
  {
    swift_release();
    __src[0] = v19[0];
    __src[1] = v19[1];
    int v16 = v20;
    __int16 v17 = v21;
    char v18 = v22;
    sub_1002F187C((uint64_t)__src);
    sub_100288FF8(__src, a3);
    type metadata accessor for Response(0);
    uint64_t result = swift_storeEnumTagMultiPayload();
    if (*(unsigned char *)(v3 + 72) == 1 && *(void *)(v3 + 56) == a2)
    {
      *(void *)(v3 + 56) = 0;
      *(void *)(v3 + 64) = a2;
      *(unsigned char *)(v3 + 72) = 2;
    }
    else
    {
      swift_retain();
      sub_1005E2C80(19);
      v23._object = (void *)0x80000001005E6DB0;
      v23._countAndFlagsBits = 0xD000000000000011;
      sub_1005E1E30(v23);
      sub_1005E2E90();
      uint64_t result = sub_1005E2F20();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1003411E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W4>, uint64_t *a5@<X5>, void *a6@<X8>)
{
  uint64_t v13 = *a5;
  uint64_t v12 = a5[1];
  uint64_t v14 = a5[2];
  uint64_t v15 = a5[3];
  swift_retain();
  if (a4)
  {
    __int16 v17 = &v20;
    sub_1002F06B0(a1, a2, a3, v13, v12, v14, v15, v16, v19, v20);
  }
  else
  {
    __int16 v17 = (uint64_t *)&v21;
    sub_1002F1244(a1, a2, a3, v13, v12, v14, v15, v16, v19, v20);
  }
  uint64_t result = swift_release();
  if (!v6)
  {
    sub_100288FF8(v17, a6);
    type metadata accessor for ResponseParser._Response();
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t sub_1003412D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  type metadata accessor for ResponsePayload();
  __chkstk_darwin();
  int v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1002FAB80(a1, a2, a3);
  uint64_t result = swift_release();
  if (!v4)
  {
    sub_100342B6C((uint64_t)v10, a4, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
    type metadata accessor for ResponseParser._Response();
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t sub_1003413F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, void *a5@<X8>)
{
  uint64_t v57 = a5;
  uint64_t v56 = type metadata accessor for ResponseParser._Response();
  __chkstk_darwin();
  __int16 v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v59 = (unint64_t)&v56 - v12;
  int v71 = a1;
  uint64_t v13 = (uint64_t)a1;
  uint64_t v14 = a2;
  uint64_t v58 = a3;
  sub_10031E2BC(v13, a2, a3);
  if (v5) {
    swift_errorRelease();
  }
  __chkstk_darwin();
  uint64_t v15 = a4;
  __chkstk_darwin();
  unint64_t v16 = v59;
  sub_10033D544(sub_100341EF0, v17, sub_100341F14);
  sub_100342124(v16, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1003445C4(v16, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
    sub_100342B6C((uint64_t)v11, (uint64_t)v57, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
    type metadata accessor for Response(0);
LABEL_39:
    swift_storeEnumTagMultiPayload();
    type metadata accessor for ResponseOrContinuationRequest(0);
    return swift_storeEnumTagMultiPayload();
  }
  sub_100288FF8(v11, v68);
  sub_100288FF8(v68, v69);
  switch(sub_10029C0D8((uint64_t)v69))
  {
    case 1u:
      uint64_t v41 = (int *)sub_10029C1C4((uint64_t)v69);
      uint64_t v20 = v15 + 56;
      unint64_t v16 = *(void *)(v15 + 64);
      LODWORD(v15) = *(unsigned __int8 *)(v15 + 72);
      if (v15 || (v16 & 1) == 0) {
        goto LABEL_50;
      }
      int v42 = *v41;
      *(void *)uint64_t v20 = 0;
      *(void *)(v20 + 8) = 0;
      *(unsigned char *)(v20 + 16) = 0;
      sub_1003445C4(v59, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
      LODWORD(v62) = v42;
      sub_1002F17D0((uint64_t)&v62);
      goto LABEL_38;
    case 2u:
      uint64_t v33 = sub_10029C1C4((uint64_t)v69);
      uint64_t v20 = *(unsigned __int8 *)(v15 + 72);
      if (*(unsigned char *)(v15 + 72) || (uint64_t v20 = *(unsigned __int8 *)(v15 + 64), (v20 & 1) != 0))
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        uint64_t v55 = *(void *)v20;
        uint64_t v62 = 0;
        unint64_t v63 = 0xE000000000000000;
        sub_1005E2C80(19);
        uint64_t v60 = v62;
        unint64_t v61 = v63;
        v72._object = (void *)0x80000001005E6DB0;
        v72._countAndFlagsBits = 0xD000000000000011;
        sub_1005E1E30(v72);
        uint64_t v62 = v55;
        unint64_t v63 = v16;
        LOBYTE(v64) = v15;
        sub_1005E2E90();
        sub_1005E2F20();
        __break(1u);
        JUMPOUT(0x100341C3CLL);
      }
      uint64_t v34 = *(void *)(v15 + 40);
      uint64_t v35 = *(void *)(v15 + 56);
      if (v35 < v34)
      {
        Swift::String v36 = (void *)v33;
        *(void *)(v15 + 56) = v35 + 1;
        *(void *)(v15 + 64) = 0;
        *(unsigned char *)(v15 + 72) = 0;
        sub_1003445C4(v59, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
        sub_100288FF8(v36, &v62);
        sub_1002F1868((uint64_t)&v62);
LABEL_38:
        sub_100288FF8(&v62, v57);
        type metadata accessor for Response(0);
        goto LABEL_39;
      }
      sub_100342188();
      uint64_t v38 = swift_allocError();
      void *v52 = v35;
      v52[1] = v34;
      swift_retain();
      swift_willThrow();
      sub_1003445C4(v59, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
LABEL_43:
      swift_release();
      sub_1003421D4((uint64_t)v68);
LABEL_44:
      uint64_t v53 = v58;
      v68[0] = v38;
      swift_errorRetain();
      sub_10000566C(qword_100710378);
      if (swift_dynamicCast())
      {
        swift_errorRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        memcpy(__dst, (const void *)v15, 0x49uLL);
        sub_1003420CC((uint64_t)__dst);
        sub_100341F30(v71, v14, v53);
        sub_1003420F8((uint64_t)__dst);
      }
      return swift_errorRelease();
    case 3u:
      uint64_t v37 = sub_10029C1C4((uint64_t)v69);
      uint64_t v23 = *(void *)v37;
      unint64_t v24 = *(void *)(v37 + 8);
      uint64_t v25 = *(void *)(v37 + 16);
      uint64_t v26 = *(void *)(v37 + 24);
      char v27 = *(unsigned char *)(v37 + 32);
      unint64_t v28 = *(void *)(v37 + 40);
      uint64_t v29 = *(void *)(v15 + 40);
      uint64_t v30 = *(void *)(v15 + 56);
      if ((v28 & 0x8000000000000000) == 0)
      {
        unint64_t v16 = *(void *)(v15 + 48);
        if (v28 >= v16) {
          goto LABEL_25;
        }
      }
      uint64_t v20 = *(unsigned __int8 *)(v15 + 72);
      if (*(unsigned char *)(v15 + 72)) {
        goto LABEL_49;
      }
      uint64_t v20 = *(void *)(v15 + 64);
      if (v20) {
        goto LABEL_49;
      }
      uint64_t v31 = v59;
      if (v30 >= v29) {
        goto LABEL_40;
      }
      *(void *)(v15 + 56) = v28;
      *(void *)(v15 + 64) = v30 + 1;
      char v32 = 2;
      goto LABEL_37;
    case 4u:
      uint64_t v22 = sub_10029C1C4((uint64_t)v69);
      uint64_t v23 = *(void *)v22;
      unint64_t v24 = *(void *)(v22 + 8);
      uint64_t v25 = *(void *)(v22 + 16);
      uint64_t v26 = *(void *)(v22 + 24);
      char v27 = *(unsigned char *)(v22 + 32);
      unint64_t v28 = *(void *)(v22 + 40);
      uint64_t v29 = *(void *)(v15 + 40);
      uint64_t v30 = *(void *)(v15 + 56);
      if ((v28 & 0x8000000000000000) != 0 || (unint64_t v16 = *(void *)(v15 + 48), v28 < v16))
      {
        uint64_t v20 = *(unsigned __int8 *)(v15 + 72);
        if (*(unsigned char *)(v15 + 72)) {
          goto LABEL_48;
        }
        uint64_t v20 = *(void *)(v15 + 64);
        if (v20) {
          goto LABEL_48;
        }
        uint64_t v31 = v59;
        if (v30 < v29)
        {
          *(void *)(v15 + 56) = v30 + 1;
          *(void *)(v15 + 64) = 0;
          char v32 = 1;
LABEL_37:
          *(unsigned char *)(v15 + 72) = v32;
          uint64_t v45 = v31;
          uint64_t v46 = v23;
          unint64_t v47 = v24;
          uint64_t v48 = v25;
          uint64_t v49 = v26;
          char v50 = v27;
          sub_1003445C4(v45, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
          uint64_t v62 = v46;
          unint64_t v63 = v47;
          uint64_t v64 = v48;
          uint64_t v65 = v49;
          char v66 = v50;
          unint64_t v67 = v28;
          sub_1002F18F4((uint64_t)&v62);
          goto LABEL_38;
        }
LABEL_40:
        sub_100342188();
        uint64_t v38 = swift_allocError();
        void *v51 = v30;
        v51[1] = v29;
        swift_retain();
        swift_willThrow();
        uint64_t v40 = v31;
      }
      else
      {
LABEL_25:
        sub_1003422A0();
        uint64_t v38 = swift_allocError();
        *char v39 = v28;
        v39[1] = v16;
        swift_retain();
        swift_willThrow();
        uint64_t v40 = v59;
      }
      sub_1003445C4(v40, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
      goto LABEL_43;
    case 5u:
      uint64_t v20 = *(unsigned __int8 *)(v15 + 72);
      if (*(unsigned char *)(v15 + 72)) {
        goto LABEL_47;
      }
      uint64_t v20 = *(unsigned __int8 *)(v15 + 64);
      if (v20) {
        goto LABEL_47;
      }
      uint64_t v43 = *(void *)(v15 + 40);
      uint64_t v44 = *(void *)(v15 + 56);
      if (v44 < v43)
      {
        *(_OWORD *)(v15 + 56) = xmmword_1005F6750;
        *(unsigned char *)(v15 + 72) = 0;
        sub_1003445C4(v16, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
        sub_100342268((uint64_t)&v62);
        goto LABEL_38;
      }
      sub_100342188();
      uint64_t v38 = swift_allocError();
      *uint64_t v54 = v44;
      v54[1] = v43;
      swift_retain();
      swift_willThrow();
      sub_1003445C4(v16, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
      swift_release();
      goto LABEL_44;
    default:
      uint64_t v19 = (int *)sub_10029C1C4((uint64_t)v69);
      uint64_t v20 = v15 + 56;
      unint64_t v16 = *(void *)(v15 + 64);
      LODWORD(v15) = *(unsigned __int8 *)(v15 + 72);
      if (v15 || (v16 & 1) == 0) {
        goto LABEL_50;
      }
      int v21 = *v19;
      *(void *)uint64_t v20 = 0;
      *(void *)(v20 + 8) = 0;
      *(unsigned char *)(v20 + 16) = 0;
      sub_1003445C4(v59, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
      LODWORD(v62) = v21;
      sub_10029C1C4((uint64_t)&v62);
      goto LABEL_38;
  }
}

void type metadata accessor for ExceededMaximumMessageAttributesError()
{
}

void type metadata accessor for ExceededMaximumBodySizeError()
{
}

uint64_t initializeWithCopy for ResponseParser(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ResponseParser(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v5;
  return a1;
}

void *initializeWithTake for ResponseParser(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

uint64_t assignWithTake for ResponseParser(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseParser(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 73))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseParser(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ResponseParser()
{
}

uint64_t sub_100341E3C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_100341E44(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

void type metadata accessor for ResponseParser.Mode()
{
}

unint64_t sub_100341E5C()
{
  unint64_t result = qword_100712490;
  if (!qword_100712490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712490);
  }
  return result;
}

uint64_t type metadata accessor for ResponseParser._Response()
{
  uint64_t result = qword_100712520;
  if (!qword_100712520) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100341EF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1003411E0(a1, a2, a3, *(unsigned char *)(v4 + 24), *(uint64_t **)(v4 + 32), a4);
}

uint64_t sub_100341F14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1003412D8(a1, a2, a3, a4);
}

uint64_t sub_100341F30(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_10000566C(&qword_1007124A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6690;
  uint64_t v9 = swift_allocObject();
  memcpy((void *)(v9 + 16), v4, 0x49uLL);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100342388;
  *(void *)(v10 + 24) = v9;
  *(void *)(inited + 32) = sub_1002E326C;
  *(void *)(inited + 40) = v10;
  uint64_t v11 = swift_allocObject();
  memcpy((void *)(v11 + 16), v4, 0x49uLL);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100342470;
  *(void *)(v12 + 24) = v11;
  *(void *)(inited + 48) = sub_1002E83EC;
  *(void *)(inited + 56) = v12;
  sub_1003420CC((uint64_t)v4);
  sub_1003420CC((uint64_t)v4);
  sub_100340178(inited, a1, a2, a3, 0xD000000000000020, 0x80000001005E63C0, 220);
  swift_setDeallocating();
  return sub_10034A020();
}

uint64_t sub_1003420CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1003420F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100342124(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ResponseParser._Response();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100342188()
{
  unint64_t result = qword_100712498;
  if (!qword_100712498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712498);
  }
  return result;
}

uint64_t sub_1003421D4(uint64_t a1)
{
  sub_10034329C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(_WORD *)(a1 + 176),
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100212EB0,
    (uint64_t (*)(void))sub_100212DE0);
  return a1;
}

void sub_100342268(uint64_t a1)
{
  *(void *)a1 = 1;
  bzero((void *)(a1 + 8), 0xA8uLL);
  *(_WORD *)(a1 + 176) = 2560;
}

unint64_t sub_1003422A0()
{
  unint64_t result = qword_1007124A0;
  if (!qword_1007124A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007124A0);
  }
  return result;
}

void sub_1003422EC(uint64_t a1@<X8>)
{
  sub_10030C01C();
  if (!v1)
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    *(unsigned char *)(a1 + 24) = v6 & 1;
    type metadata accessor for ResponseOrContinuationRequest(0);
    swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_100342350()
{
  swift_release();
  return _swift_deallocObject(v0, 89, 7);
}

void sub_100342388(uint64_t a1@<X8>)
{
}

void sub_1003423A4(_OWORD *a1@<X8>)
{
  swift_retain();
  sub_100324EE4();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = *(_OWORD *)v4;
    *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)&v4[9];
    type metadata accessor for Response(0);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for ResponseOrContinuationRequest(0);
    swift_storeEnumTagMultiPayload();
  }
}

void sub_100342470(_OWORD *a1@<X8>)
{
}

uint64_t sub_10034248C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ResponsePayload();
  __chkstk_darwin(v4 - 8);
  char v6 = &__dst[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = type metadata accessor for ResponseParser._Response();
  __chkstk_darwin(v7);
  uint64_t v9 = &__dst[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100342124(v2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100288FF8(v9, __dst);
    sub_1005E3410(1uLL);
    sub_1002F0A5C(a1);
    return sub_1003421D4((uint64_t)__dst);
  }
  else
  {
    sub_100342B6C((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
    sub_1005E3410(0);
    ResponsePayload.hash(into:)(a1);
    return sub_1003445C4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
  }
}

uint64_t sub_1003425FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ResponsePayload();
  __chkstk_darwin(v4 - 8);
  char v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for ResponseParser._Response();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v12 = &v20[-v11];
  uint64_t v13 = sub_10000566C(&qword_100712568);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  unint64_t v16 = &v20[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = &v16[*(int *)(v14 + 56)];
  sub_100342124(a1, (uint64_t)v16);
  sub_100342124(a2, (uint64_t)v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100342124((uint64_t)v16, (uint64_t)v10);
    sub_100288FF8(v10, v20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100288FF8(v17, v21);
      char v18 = sub_1002F0CEC(v20, v21);
      sub_1003421D4((uint64_t)v21);
      sub_1003421D4((uint64_t)v20);
LABEL_9:
      sub_1003445C4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
      return v18 & 1;
    }
    sub_1003421D4((uint64_t)v20);
  }
  else
  {
    sub_100342124((uint64_t)v16, (uint64_t)v12);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_100342B6C((uint64_t)v17, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
      char v18 = static ResponsePayload.__derived_enum_equals(_:_:)((unint64_t)v12, (uint64_t)v6);
      sub_1003445C4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
      sub_1003445C4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
      goto LABEL_9;
    }
    sub_1003445C4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ResponsePayload);
  }
  sub_100344624((uint64_t)v16);
  char v18 = 0;
  return v18 & 1;
}

Swift::Int sub_1003428A8()
{
  sub_1005E33F0();
  sub_10034248C((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_1003428F0()
{
  sub_1005E33F0();
  sub_10034248C((uint64_t)v1);
  return sub_1005E3470();
}

uint64_t sub_100342930()
{
  return sub_100342AD0();
}

double sub_100342948@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(long long *__return_ptr, uint64_t, void *)@<X3>, _OWORD *a5@<X8>)
{
  v8[0] = a2;
  v8[1] = a3;
  a4(&v9, a1, v8);
  if (!v5)
  {
    double result = *(double *)&v9;
    *a5 = v9;
  }
  return result;
}

uint64_t sub_100342994()
{
  sub_100344D8C();
  uint64_t result = v2();
  if (!v1) {
    *uint64_t v0 = v4;
  }
  return result;
}

uint64_t sub_1003429CC()
{
  return sub_100342994();
}

double sub_1003429E8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(long long *__return_ptr, uint64_t, void *)@<X3>, uint64_t a5@<X8>)
{
  v10[0] = a2;
  v10[1] = a3;
  a4(&v11, a1, v10);
  if (!v5)
  {
    uint64_t v8 = v12;
    char v9 = v13;
    double result = *(double *)&v11;
    *(_OWORD *)a5 = v11;
    *(void *)(a5 + 16) = v8;
    *(unsigned char *)(a5 + 24) = v9;
  }
  return result;
}

double sub_100342A44@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(long long *__return_ptr, uint64_t, void *)@<X3>, uint64_t a5@<X8>)
{
  v9[0] = a2;
  v9[1] = a3;
  a4(&v10, a1, v9);
  if (!v5)
  {
    char v8 = v11;
    double result = *(double *)&v10;
    *(_OWORD *)a5 = v10;
    *(unsigned char *)(a5 + 16) = v8;
  }
  return result;
}

double sub_100342A98@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_100342A44(a1, a2, a3, *(void (**)(long long *__return_ptr, uint64_t, void *))(v4 + 16), a4);
}

double sub_100342AB4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1003429E8(a1, a2, a3, *(void (**)(long long *__return_ptr, uint64_t, void *))(v4 + 16), a4);
}

uint64_t sub_100342AD0()
{
  sub_100344CF4();
  return v0();
}

uint64_t sub_100342AFC()
{
  return sub_100342BF0();
}

double sub_100342B18@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  return sub_100342948(a1, a2, a3, *(void (**)(long long *__return_ptr, uint64_t, void *))(v4 + 16), a4);
}

uint64_t sub_100342B34()
{
  sub_100344D70();
  uint64_t result = v2();
  if (!v1)
  {
    *uint64_t v0 = v4;
    v0[1] = v5;
  }
  return result;
}

uint64_t sub_100342B6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100342BD4()
{
  return sub_100342B34();
}

uint64_t sub_100342BF0()
{
  sub_100344D70();
  uint64_t result = v2();
  if (!v1)
  {
    *(void *)uint64_t v0 = v4;
    *(unsigned char *)(v0 + 8) = v5;
  }
  return result;
}

unint64_t sub_100342C30(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v21 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = *(void *)a2;
      uint64_t v7 = *(void *)(a2 + 8);
      uint64_t v8 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      uint64_t v10 = *(void *)(a2 + 32);
      uint64_t v11 = *(void *)(a2 + 40);
      uint64_t v12 = *(void *)(a2 + 48);
      uint64_t v13 = *(void *)(a2 + 56);
      uint64_t v48 = *(void *)(a2 + 72);
      uint64_t v49 = *(void *)(a2 + 80);
      uint64_t v50 = *(void *)(a2 + 88);
      uint64_t v51 = *(void *)(a2 + 96);
      uint64_t v52 = *(void *)(a2 + 104);
      uint64_t v53 = *(void *)(a2 + 112);
      uint64_t v54 = *(void *)(a2 + 120);
      uint64_t v56 = *(void *)(a2 + 128);
      uint64_t v58 = *(void *)(a2 + 136);
      uint64_t v60 = *(void *)(a2 + 144);
      uint64_t v62 = *(void *)(a2 + 152);
      uint64_t v64 = *(void *)(a2 + 160);
      uint64_t v66 = *(void *)(a2 + 168);
      unsigned __int16 v68 = *(_WORD *)(a2 + 176);
      uint64_t v14 = *(void *)(a2 + 64);
      uint64_t v15 = v6;
      uint64_t v16 = v7;
      uint64_t v17 = v8;
      uint64_t v18 = v9;
      uint64_t v19 = v12;
      uint64_t v20 = v13;
      sub_10034329C(v6, v7, v8, v9, v10, v11, v12, v13, v14, v48, v49, v50, v51, v52, v53, v54, v56, v58, v60,
        v62,
        v64,
        v66,
        v68,
        (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1002890C4,
        (uint64_t (*)(void))sub_1002892B4);
      *(void *)a1 = v15;
      *(void *)(a1 + 8) = v16;
      *(void *)(a1 + 16) = v17;
      *(void *)(a1 + 24) = v18;
      *(void *)(a1 + 32) = v10;
      *(void *)(a1 + 40) = v11;
      *(void *)(a1 + 48) = v19;
      *(void *)(a1 + 56) = v20;
      *(void *)(a1 + 64) = v14;
      *(void *)(a1 + 72) = v48;
      *(void *)(a1 + 80) = v49;
      *(void *)(a1 + 88) = v50;
      *(void *)(a1 + 96) = v51;
      *(void *)(a1 + 104) = v52;
      *(void *)(a1 + 112) = v53;
      *(void *)(a1 + 120) = v54;
      *(void *)(a1 + 128) = v56;
      *(void *)(a1 + 136) = v58;
      *(void *)(a1 + 144) = v60;
      *(void *)(a1 + 152) = v62;
      *(void *)(a1 + 160) = v64;
      *(void *)(a1 + 168) = v66;
      *(_WORD *)(a1 + 176) = v68;
    }
    else
    {
      type metadata accessor for ResponsePayload();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v26 = *(void *)a2;
          uint64_t v27 = *(void *)(a2 + 8);
          uint64_t v28 = *(void *)(a2 + 16);
          uint64_t v29 = *(void *)(a2 + 24);
          uint64_t v30 = *(void *)(a2 + 32);
          uint64_t v31 = *(void *)(a2 + 40);
          uint64_t v55 = *(void *)(a2 + 64);
          uint64_t v57 = *(void *)(a2 + 72);
          uint64_t v59 = *(void *)(a2 + 80);
          uint64_t v61 = *(void *)(a2 + 88);
          uint64_t v63 = *(void *)(a2 + 96);
          uint64_t v65 = *(void *)(a2 + 104);
          uint64_t v67 = *(void *)(a2 + 112);
          unsigned __int8 v69 = *(unsigned char *)(a2 + 120);
          uint64_t v32 = *(void *)a2;
          uint64_t v33 = *(void *)(a2 + 48);
          uint64_t v34 = *(void *)(a2 + 56);
          sub_100280BDC(v32, v27, v28, v29, v30, v31, v33, v34, v55, v57, v59, v61, v63, v65, v67, v69);
          *(void *)a1 = v26;
          *(void *)(a1 + 8) = v27;
          *(void *)(a1 + 16) = v28;
          *(void *)(a1 + 24) = v29;
          *(void *)(a1 + 32) = v30;
          *(void *)(a1 + 40) = v31;
          *(void *)(a1 + 48) = v33;
          *(void *)(a1 + 56) = v34;
          *(void *)(a1 + 64) = v55;
          *(void *)(a1 + 72) = v57;
          *(void *)(a1 + 80) = v59;
          *(void *)(a1 + 88) = v61;
          *(void *)(a1 + 96) = v63;
          *(void *)(a1 + 104) = v65;
          *(void *)(a1 + 112) = v67;
          *(unsigned char *)(a1 + 120) = v69;
          break;
        case 2u:
          uint64_t v35 = type metadata accessor for MessageData();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 2u:
              uint64_t v36 = sub_10000566C(&qword_100710538);
              (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
              goto LABEL_18;
            case 3u:
            case 4u:
              *(void *)a1 = *(void *)a2;
              swift_bridgeObjectRetain();
LABEL_18:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v35 - 8) + 64));
              break;
          }
          break;
        case 3u:
        case 4u:
          *(void *)a1 = *(void *)a2;
          swift_bridgeObjectRetain();
          break;
        case 5u:
          uint64_t v37 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v37;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          break;
        case 6u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
          *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
          swift_bridgeObjectRetain();
          swift_retain();
          break;
        case 7u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
          *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          swift_retain();
          swift_bridgeObjectRetain();
          break;
        case 8u:
          uint64_t v38 = *(void *)a2;
          uint64_t v39 = *(void *)(a2 + 8);
          uint64_t v40 = *(void *)(a2 + 16);
          uint64_t v41 = *(void *)(a2 + 24);
          int v42 = *(_DWORD *)(a2 + 32);
          sub_10028D48C(v38, v39, v40);
          *(void *)a1 = v38;
          *(void *)(a1 + 8) = v39;
          *(void *)(a1 + 16) = v40;
          *(void *)(a1 + 24) = v41;
          *(_DWORD *)(a1 + 32) = v42;
          break;
        case 9u:
          uint64_t v43 = *(void *)a2;
          uint64_t v44 = *(void *)(a2 + 8);
          uint64_t v45 = *(void *)(a2 + 16);
          char v46 = *(unsigned char *)(a2 + 24);
          sub_1002953E0();
          *(void *)a1 = v43;
          *(void *)(a1 + 8) = v44;
          *(void *)(a1 + 16) = v45;
          *(unsigned char *)(a1 + 24) = v46;
          break;
        default:
          unint64_t v22 = *(void *)a2;
          uint64_t v23 = *(void *)(a2 + 8);
          uint64_t v24 = *(void *)(a2 + 16);
          unsigned __int8 v25 = *(unsigned char *)(a2 + 24);
          sub_10029CBFC(v22, v23, v24, v25);
          *(void *)a1 = v22;
          *(void *)(a1 + 8) = v23;
          *(void *)(a1 + 16) = v24;
          *(unsigned char *)(a1 + 24) = v25;
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10034329C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23,uint64_t (*a24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),uint64_t (*a25)(void))
{
  int v26 = (a23 >> 9) & 7;
  if (v26 == 4 || v26 == 3)
  {
    return a25();
  }
  else if (v26 == 2)
  {
    return a24(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  }
  return result;
}

unint64_t sub_100343360(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_10034329C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
  }
             *(void *)(a1 + 152),
             *(void *)(a1 + 160),
             *(void *)(a1 + 168),
             *(_WORD *)(a1 + 176),
             (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100212EB0,
             (uint64_t (*)(void))sub_100212DE0);
  type metadata accessor for ResponsePayload();
  unint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      unint64_t v3 = *(void *)a1;
      uint64_t v4 = *(void *)(a1 + 8);
      uint64_t v5 = *(void *)(a1 + 16);
      unsigned __int8 v6 = *(unsigned char *)(a1 + 24);
      return sub_10029CFCC(v3, v4, v5, v6);
    case 1:
      return sub_100280A34(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(unsigned char *)(a1 + 120));
    case 2:
      type metadata accessor for MessageData();
      unint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 1:
        case 2:
          uint64_t v7 = sub_10000566C(&qword_100710538);
          uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
          unint64_t result = v8(a1, v7);
          break;
        case 3:
        case 4:
          goto LABEL_19;
        default:
          return result;
      }
      return result;
    case 3:
    case 4:
      goto LABEL_19;
    case 5:
      swift_release();
      swift_release();
      goto LABEL_15;
    case 6:
      swift_bridgeObjectRelease();
LABEL_15:
      unint64_t result = swift_release();
      break;
    case 7:
      swift_release();
LABEL_19:
      unint64_t result = swift_bridgeObjectRelease();
      break;
    case 8:
      uint64_t v9 = *(void *)a1;
      uint64_t v10 = *(void *)(a1 + 8);
      uint64_t v11 = *(void *)(a1 + 16);
      unint64_t result = sub_10028D508(v9, v10, v11);
      break;
    case 9:
      unint64_t result = sub_100295400();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100343638(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = *(void *)a2;
    uint64_t v5 = *(void *)(a2 + 8);
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t v8 = *(void *)(a2 + 32);
    uint64_t v9 = *(void *)(a2 + 40);
    uint64_t v10 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v45 = *(void *)(a2 + 72);
    uint64_t v46 = *(void *)(a2 + 80);
    uint64_t v47 = *(void *)(a2 + 88);
    uint64_t v48 = *(void *)(a2 + 96);
    uint64_t v49 = *(void *)(a2 + 104);
    uint64_t v50 = *(void *)(a2 + 112);
    uint64_t v51 = *(void *)(a2 + 120);
    uint64_t v53 = *(void *)(a2 + 128);
    uint64_t v55 = *(void *)(a2 + 136);
    uint64_t v57 = *(void *)(a2 + 144);
    uint64_t v59 = *(void *)(a2 + 152);
    uint64_t v61 = *(void *)(a2 + 160);
    uint64_t v63 = *(void *)(a2 + 168);
    unsigned __int16 v65 = *(_WORD *)(a2 + 176);
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = v4;
    uint64_t v14 = v5;
    uint64_t v15 = v6;
    uint64_t v16 = v7;
    uint64_t v17 = v10;
    uint64_t v18 = v11;
    sub_10034329C(v4, v5, v6, v7, v8, v9, v10, v11, v12, v45, v46, v47, v48, v49, v50, v51, v53, v55, v57,
      v59,
      v61,
      v63,
      v65,
      (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1002890C4,
      (uint64_t (*)(void))sub_1002892B4);
    *(void *)a1 = v13;
    *(void *)(a1 + 8) = v14;
    *(void *)(a1 + 16) = v15;
    *(void *)(a1 + 24) = v16;
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v17;
    *(void *)(a1 + 56) = v18;
    *(void *)(a1 + 64) = v12;
    *(void *)(a1 + 72) = v45;
    *(void *)(a1 + 80) = v46;
    *(void *)(a1 + 88) = v47;
    *(void *)(a1 + 96) = v48;
    *(void *)(a1 + 104) = v49;
    *(void *)(a1 + 112) = v50;
    *(void *)(a1 + 120) = v51;
    *(void *)(a1 + 128) = v53;
    *(void *)(a1 + 136) = v55;
    *(void *)(a1 + 144) = v57;
    *(void *)(a1 + 152) = v59;
    *(void *)(a1 + 160) = v61;
    *(void *)(a1 + 168) = v63;
    *(_WORD *)(a1 + 176) = v65;
  }
  else
  {
    type metadata accessor for ResponsePayload();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v23 = *(void *)a2;
        uint64_t v24 = *(void *)(a2 + 8);
        uint64_t v25 = *(void *)(a2 + 16);
        uint64_t v26 = *(void *)(a2 + 24);
        uint64_t v27 = *(void *)(a2 + 32);
        uint64_t v28 = *(void *)(a2 + 40);
        uint64_t v52 = *(void *)(a2 + 64);
        uint64_t v54 = *(void *)(a2 + 72);
        uint64_t v56 = *(void *)(a2 + 80);
        uint64_t v58 = *(void *)(a2 + 88);
        uint64_t v60 = *(void *)(a2 + 96);
        uint64_t v62 = *(void *)(a2 + 104);
        uint64_t v64 = *(void *)(a2 + 112);
        unsigned __int8 v66 = *(unsigned char *)(a2 + 120);
        uint64_t v29 = *(void *)a2;
        uint64_t v30 = *(void *)(a2 + 48);
        uint64_t v31 = *(void *)(a2 + 56);
        sub_100280BDC(v29, v24, v25, v26, v27, v28, v30, v31, v52, v54, v56, v58, v60, v62, v64, v66);
        *(void *)a1 = v23;
        *(void *)(a1 + 8) = v24;
        *(void *)(a1 + 16) = v25;
        *(void *)(a1 + 24) = v26;
        *(void *)(a1 + 32) = v27;
        *(void *)(a1 + 40) = v28;
        *(void *)(a1 + 48) = v30;
        *(void *)(a1 + 56) = v31;
        *(void *)(a1 + 64) = v52;
        *(void *)(a1 + 72) = v54;
        *(void *)(a1 + 80) = v56;
        *(void *)(a1 + 88) = v58;
        *(void *)(a1 + 96) = v60;
        *(void *)(a1 + 104) = v62;
        *(void *)(a1 + 112) = v64;
        *(unsigned char *)(a1 + 120) = v66;
        break;
      case 2u:
        uint64_t v32 = type metadata accessor for MessageData();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 2u:
            uint64_t v33 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
            goto LABEL_16;
          case 3u:
          case 4u:
            *(void *)a1 = *(void *)a2;
            swift_bridgeObjectRetain();
LABEL_16:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v32 - 8) + 64));
            break;
        }
        break;
      case 3u:
      case 4u:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v34 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v34;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
        *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
        swift_bridgeObjectRetain();
        swift_retain();
        break;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
        *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        swift_retain();
        swift_bridgeObjectRetain();
        break;
      case 8u:
        uint64_t v35 = *(void *)a2;
        uint64_t v36 = *(void *)(a2 + 8);
        uint64_t v37 = *(void *)(a2 + 16);
        uint64_t v38 = *(void *)(a2 + 24);
        int v39 = *(_DWORD *)(a2 + 32);
        sub_10028D48C(v35, v36, v37);
        *(void *)a1 = v35;
        *(void *)(a1 + 8) = v36;
        *(void *)(a1 + 16) = v37;
        *(void *)(a1 + 24) = v38;
        *(_DWORD *)(a1 + 32) = v39;
        break;
      case 9u:
        uint64_t v40 = *(void *)a2;
        uint64_t v41 = *(void *)(a2 + 8);
        uint64_t v42 = *(void *)(a2 + 16);
        char v43 = *(unsigned char *)(a2 + 24);
        sub_1002953E0();
        *(void *)a1 = v40;
        *(void *)(a1 + 8) = v41;
        *(void *)(a1 + 16) = v42;
        *(unsigned char *)(a1 + 24) = v43;
        break;
      default:
        unint64_t v19 = *(void *)a2;
        uint64_t v20 = *(void *)(a2 + 8);
        uint64_t v21 = *(void *)(a2 + 16);
        unsigned __int8 v22 = *(unsigned char *)(a2 + 24);
        sub_10029CBFC(v19, v20, v21, v22);
        *(void *)a1 = v19;
        *(void *)(a1 + 8) = v20;
        *(void *)(a1 + 16) = v21;
        *(unsigned char *)(a1 + 24) = v22;
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100343C54(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1003445C4(a1, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = *(void *)a2;
      uint64_t v5 = *(void *)(a2 + 8);
      uint64_t v6 = *(void *)(a2 + 16);
      uint64_t v7 = *(void *)(a2 + 24);
      uint64_t v8 = *(void *)(a2 + 32);
      uint64_t v9 = *(void *)(a2 + 40);
      uint64_t v10 = *(void *)(a2 + 48);
      uint64_t v11 = *(void *)(a2 + 56);
      uint64_t v47 = *(void *)(a2 + 72);
      uint64_t v48 = *(void *)(a2 + 80);
      uint64_t v49 = *(void *)(a2 + 88);
      uint64_t v50 = *(void *)(a2 + 96);
      uint64_t v51 = *(void *)(a2 + 104);
      uint64_t v52 = *(void *)(a2 + 112);
      uint64_t v53 = *(void *)(a2 + 120);
      uint64_t v55 = *(void *)(a2 + 128);
      uint64_t v57 = *(void *)(a2 + 136);
      uint64_t v59 = *(void *)(a2 + 144);
      uint64_t v61 = *(void *)(a2 + 152);
      uint64_t v63 = *(void *)(a2 + 160);
      uint64_t v65 = *(void *)(a2 + 168);
      unsigned __int16 v67 = *(_WORD *)(a2 + 176);
      uint64_t v12 = *(void *)(a2 + 64);
      uint64_t v13 = v4;
      uint64_t v14 = v5;
      uint64_t v15 = v6;
      uint64_t v16 = v7;
      uint64_t v17 = v8;
      uint64_t v18 = v10;
      uint64_t v19 = v11;
      sub_10034329C(v4, v5, v6, v7, v8, v9, v10, v11, v12, v47, v48, v49, v50, v51, v52, v53, v55, v57, v59,
        v61,
        v63,
        v65,
        v67,
        (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1002890C4,
        (uint64_t (*)(void))sub_1002892B4);
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v14;
      *(void *)(a1 + 16) = v15;
      *(void *)(a1 + 24) = v16;
      *(void *)(a1 + 32) = v17;
      *(void *)(a1 + 40) = v9;
      *(void *)(a1 + 48) = v18;
      *(void *)(a1 + 56) = v19;
      *(void *)(a1 + 64) = v12;
      *(void *)(a1 + 72) = v47;
      *(void *)(a1 + 80) = v48;
      *(void *)(a1 + 88) = v49;
      *(void *)(a1 + 96) = v50;
      *(void *)(a1 + 104) = v51;
      *(void *)(a1 + 112) = v52;
      *(void *)(a1 + 120) = v53;
      *(void *)(a1 + 128) = v55;
      *(void *)(a1 + 136) = v57;
      *(void *)(a1 + 144) = v59;
      *(void *)(a1 + 152) = v61;
      *(void *)(a1 + 160) = v63;
      *(void *)(a1 + 168) = v65;
      *(_WORD *)(a1 + 176) = v67;
    }
    else
    {
      type metadata accessor for ResponsePayload();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v24 = *(void *)a2;
          uint64_t v25 = *(void *)(a2 + 8);
          uint64_t v26 = *(void *)(a2 + 16);
          uint64_t v27 = *(void *)(a2 + 24);
          uint64_t v28 = *(void *)(a2 + 32);
          uint64_t v29 = *(void *)(a2 + 40);
          uint64_t v30 = *(void *)(a2 + 48);
          uint64_t v54 = *(void *)(a2 + 64);
          uint64_t v56 = *(void *)(a2 + 72);
          uint64_t v58 = *(void *)(a2 + 80);
          uint64_t v60 = *(void *)(a2 + 88);
          uint64_t v62 = *(void *)(a2 + 96);
          uint64_t v64 = *(void *)(a2 + 104);
          uint64_t v66 = *(void *)(a2 + 112);
          unsigned __int8 v68 = *(unsigned char *)(a2 + 120);
          uint64_t v31 = *(void *)a2;
          uint64_t v32 = *(void *)(a2 + 56);
          sub_100280BDC(v31, v25, v26, v27, v28, v29, v30, v32, v54, v56, v58, v60, v62, v64, v66, v68);
          *(void *)a1 = v24;
          *(void *)(a1 + 8) = v25;
          *(void *)(a1 + 16) = v26;
          *(void *)(a1 + 24) = v27;
          *(void *)(a1 + 32) = v28;
          *(void *)(a1 + 40) = v29;
          *(void *)(a1 + 48) = v30;
          *(void *)(a1 + 56) = v32;
          *(void *)(a1 + 64) = v54;
          *(void *)(a1 + 72) = v56;
          *(void *)(a1 + 80) = v58;
          *(void *)(a1 + 88) = v60;
          *(void *)(a1 + 96) = v62;
          *(void *)(a1 + 104) = v64;
          *(void *)(a1 + 112) = v66;
          *(unsigned char *)(a1 + 120) = v68;
          break;
        case 2u:
          uint64_t v33 = type metadata accessor for MessageData();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 2u:
              uint64_t v34 = sub_10000566C(&qword_100710538);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
              goto LABEL_17;
            case 3u:
            case 4u:
              *(void *)a1 = *(void *)a2;
              swift_bridgeObjectRetain();
LABEL_17:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v33 - 8) + 64));
              break;
          }
          break;
        case 3u:
        case 4u:
          *(void *)a1 = *(void *)a2;
          swift_bridgeObjectRetain();
          break;
        case 5u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          break;
        case 6u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
          int v35 = *(_DWORD *)(a2 + 32);
          *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
          *(_DWORD *)(a1 + 32) = v35;
          swift_bridgeObjectRetain();
          swift_retain();
          break;
        case 7u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
          int v36 = *(_DWORD *)(a2 + 16);
          *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
          *(_DWORD *)(a1 + 16) = v36;
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          swift_retain();
          swift_bridgeObjectRetain();
          break;
        case 8u:
          uint64_t v37 = *(void *)a2;
          uint64_t v38 = *(void *)(a2 + 8);
          uint64_t v39 = *(void *)(a2 + 16);
          uint64_t v40 = *(void *)(a2 + 24);
          int v41 = *(_DWORD *)(a2 + 32);
          sub_10028D48C(v37, v38, v39);
          *(void *)a1 = v37;
          *(void *)(a1 + 8) = v38;
          *(void *)(a1 + 16) = v39;
          *(void *)(a1 + 24) = v40;
          *(_DWORD *)(a1 + 32) = v41;
          break;
        case 9u:
          uint64_t v42 = *(void *)a2;
          uint64_t v43 = *(void *)(a2 + 8);
          uint64_t v44 = *(void *)(a2 + 16);
          char v45 = *(unsigned char *)(a2 + 24);
          sub_1002953E0();
          *(void *)a1 = v42;
          *(void *)(a1 + 8) = v43;
          *(void *)(a1 + 16) = v44;
          *(unsigned char *)(a1 + 24) = v45;
          break;
        default:
          unint64_t v20 = *(void *)a2;
          uint64_t v21 = *(void *)(a2 + 8);
          uint64_t v22 = *(void *)(a2 + 16);
          unsigned __int8 v23 = *(unsigned char *)(a2 + 24);
          sub_10029CBFC(v20, v21, v22, v23);
          *(void *)a1 = v20;
          *(void *)(a1 + 8) = v21;
          *(void *)(a1 + 16) = v22;
          *(unsigned char *)(a1 + 24) = v23;
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100344280(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1003445C4((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ResponseParser._Response);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for ResponsePayload();
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v7 = type metadata accessor for MessageData();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
        {
          uint64_t v9 = sub_10000566C(&qword_100710538);
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100344464()
{
  uint64_t result = type metadata accessor for ResponsePayload();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1003444F4(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 8) = v2;
  return result;
}

void type metadata accessor for ResponseParser.ResponseState()
{
}

unint64_t sub_100344524()
{
  unint64_t result = qword_100712558;
  if (!qword_100712558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712558);
  }
  return result;
}

unint64_t sub_100344574()
{
  unint64_t result = qword_100712560;
  if (!qword_100712560)
  {
    type metadata accessor for ResponseParser._Response();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712560);
  }
  return result;
}

uint64_t sub_1003445C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100344624(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100712568);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003446F8()
{
  return sub_100342BD4();
}

uint64_t sub_100344710()
{
  return sub_100342AFC();
}

uint64_t sub_100344728()
{
  return sub_1003429CC();
}

uint64_t sub_100344744()
{
  return swift_retain();
}

void sub_1003447C0()
{
  *(void *)uint64_t v4 = v0;
  *(void *)(v4 + 8) = v5;
  *(_DWORD *)(v4 + 16) = v1;
  *(_WORD *)(v4 + 20) = v3;
  *(unsigned char *)(v4 + 22) = v2;
}

void sub_1003447E4()
{
  *(void *)uint64_t v4 = v0;
  *(void *)(v4 + 8) = v5;
  *(_DWORD *)(v4 + 16) = v1;
  *(_WORD *)(v4 + 20) = v3;
  *(unsigned char *)(v4 + 22) = v2;
}

uint64_t sub_100344808()
{
  return swift_retain();
}

uint64_t sub_100344838@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
  a1[2] = v5;
  a1[3] = v3;
  a1[4] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100344860()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100344888()
{
  return swift_dynamicCast();
}

uint64_t sub_1003448C4()
{
  return v0;
}

uint64_t sub_1003448E0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100344908@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
  a1[2] = v5;
  a1[3] = v3;
  a1[4] = v4;
  return swift_bridgeObjectRetain();
}

char *sub_100344930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  return &a17;
}

__n128 sub_100344940(__n128 *a1)
{
  __n128 result = v1[2];
  a1[1] = result;
  return result;
}

uint64_t sub_100344958()
{
  return v0;
}

uint64_t sub_100344970()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10034498C()
{
  return swift_allocObject();
}

uint64_t sub_1003449A8()
{
  return v0;
}

char *sub_1003449C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  return &a17;
}

uint64_t sub_1003449D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a5;
}

uint64_t sub_100344A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a5;
}

__n128 sub_100344A44(__n128 *a1)
{
  __n128 result = v1[2];
  a1[1] = result;
  return result;
}

uint64_t sub_100344A6C()
{
  return swift_retain();
}

uint64_t sub_100344AA4()
{
  *(void *)(v1 - 88) = v0;
  return swift_errorRetain();
}

uint64_t sub_100344ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a5;
}

uint64_t sub_100344B04(uint64_t a1, void *a2)
{
  *a2 = v2;
  return swift_retain();
}

uint64_t sub_100344B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return a20;
}

uint64_t sub_100344B48()
{
  return swift_dynamicCast();
}

uint64_t sub_100344B68(uint64_t a1, void *a2)
{
  *a2 = v2;
  return swift_retain();
}

uint64_t sub_100344B84()
{
  *(void *)(v1 - 56) = v0;
  return swift_errorRetain();
}

void sub_100344B9C()
{
  *(void *)uint64_t v2 = v4;
  *(void *)(v2 + 8) = v5;
  *(_DWORD *)(v2 + 16) = v1;
  *(_WORD *)(v2 + 20) = v3;
  *(unsigned char *)(v2 + 22) = v0;
}

uint64_t sub_100344BBC()
{
  return v0;
}

uint64_t sub_100344C28()
{
  return swift_dynamicCast();
}

uint64_t sub_100344C48()
{
  return v0;
}

uint64_t sub_100344C78()
{
  return v0;
}

uint64_t sub_100344CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return a13;
}

uint64_t sub_100344D08()
{
  return swift_errorRetain();
}

uint64_t sub_100344D20()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100344D58()
{
  return swift_errorRetain();
}

uint64_t sub_100344DA8()
{
  return v0;
}

uint64_t sub_100344DB8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100344DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return a16;
}

uint64_t sub_100344DEC(uint64_t a1)
{
  BOOL v1 = __OFSUB__(a1, 1);
  uint64_t result = a1 - 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

void SynchronizingLiteralParser.parseContinuationsNecessary(_:)(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  int v5 = a3;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  unint64_t v8 = HIDWORD(a2);
  uint64_t v9 = *v3;
  unint64_t v10 = a2;
  unint64_t v11 = a3 - (BYTE6(a3) | (a3 >> 24) & 0xFFFF00);
  int v12 = BYTE6(a3) | (WORD2(a3) << 8);
  uint64_t v123 = (a3 - v12);
  unsigned int v13 = v12 + a2;
  BOOL v14 = __CFADD__(v12, a2);
  unsigned int v101 = v13;
  BOOL v102 = v14;
  int v96 = v13;
  int v97 = (unsigned __int16)(v13 >> 8);
  uint64_t v95 = a3 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v105 = a3 - (BYTE6(a3) | (a3 >> 24) & 0xFFFF00);
  unint64_t v106 = HIWORD(a3);
  int v100 = a3;
  while (*((unsigned char *)v4 + 24) != 1)
  {
    if (v8 < v10) {
      goto LABEL_96;
    }
    if (v11 < v8) {
      goto LABEL_99;
    }
    uint64_t v35 = v10 + v9;
    if (__OFADD__(v10, v9)) {
      goto LABEL_100;
    }
    BOOL v36 = __OFSUB__(v8, v35);
    uint64_t v37 = v8 - v35;
    if (v36) {
      goto LABEL_102;
    }
    uint64_t v38 = v4[2];
    if (v37 >= v38)
    {
      v4[2] = 0;
      *((unsigned char *)v4 + 24) = 1;
      uint64_t v20 = v9 + v38;
      if (__OFADD__(v9, v38)) {
        goto LABEL_112;
      }
    }
    else
    {
      BOOL v36 = __OFSUB__(v38, v37);
      uint64_t v39 = v38 - v37;
      if (v36) {
        goto LABEL_110;
      }
      v4[2] = v39;
      *((unsigned char *)v4 + 24) = 0;
      uint64_t v20 = v9 + v37;
      if (__OFADD__(v9, v37)) {
        goto LABEL_111;
      }
    }
    *uint64_t v4 = v20;
LABEL_45:
    if (v9 >= v20) {
      goto LABEL_85;
    }
    if (v8 < v10)
    {
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      sub_100296090();
      uint64_t v93 = sub_10020DD10();
      sub_100345A20(v93, v94);
      uint64_t v88 = 80;
LABEL_90:
      v86[1] = v87;
      v86[2] = 0xD000000000000020;
      v86[3] = 0x80000001005E63C0;
      v86[4] = v88;
      swift_willThrow();
LABEL_91:
      swift_release();
      swift_release();
      return;
    }
    if (v11 < v8) {
      goto LABEL_93;
    }
    uint64_t v9 = v20;
    if (v20 >= (uint64_t)v8)
    {
LABEL_85:
      v4[1] = 0;
      return;
    }
  }
  if (v8 > v123)
  {
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  uint64_t v15 = v10 + v9;
  if (__OFADD__(v10, v9)) {
    goto LABEL_97;
  }
  if (v8 < v10 || (uint64_t)v8 < v15) {
    goto LABEL_98;
  }
  if (v15 < 0) {
    goto LABEL_101;
  }
  uint64_t v115 = v7;
  int v116 = v6;
  int v117 = v8;
  int v118 = v5;
  __int16 v119 = v107;
  char v120 = v106;
  uint64_t v121 = v10 + v9;
  unint64_t v122 = v8;
  uint64_t v17 = sub_100345794();
  if (v18)
  {
    uint64_t v20 = v9;
LABEL_44:
    unint64_t v11 = v105;
    goto LABEL_45;
  }
  unint64_t v19 = v17 - v10;
  if (__OFSUB__(v17, v10)) {
    goto LABEL_108;
  }
  uint64_t v20 = v19 + 1;
  if (__OFADD__(v19, 1)) {
    goto LABEL_109;
  }
  *uint64_t v4 = v20;
  uint64_t v21 = v17 + 1;
  if (__OFADD__(v17, 1)) {
    goto LABEL_113;
  }
  if (v21 < (uint64_t)v10) {
    goto LABEL_114;
  }
  if (v21 > v123) {
    goto LABEL_115;
  }
  int64_t v22 = v21 - v10;
  if ((uint64_t)(v21 - v10) < 0) {
    goto LABEL_116;
  }
  if ((uint64_t)v8 < v22) {
    goto LABEL_117;
  }
  if ((uint64_t)(v8 - v22) < (uint64_t)v10) {
    goto LABEL_118;
  }
  if (v102) {
    goto LABEL_119;
  }
  if (HIBYTE(v101))
  {
    swift_retain();
    unint64_t v98 = v98 & 0xFF00000000000000 | v95;
    uint64_t v23 = ByteBuffer._copyIntoByteBufferWithSliceIndex0_slowPath(index:length:)(v6, v22, v7);
    unsigned int v31 = v24;
    int v32 = v25;
    int64_t v22 = HIDWORD(v24);
    int v33 = WORD2(v25);
    int v34 = BYTE6(v25);
  }
  else
  {
    int v32 = v101 + v22;
    uint64_t v23 = swift_retain_n();
    unsigned int v31 = 0;
    int v34 = v96;
    int v33 = v97;
  }
  uint64_t v104 = v23;
  uint64_t v109 = v23;
  unsigned int v110 = v31;
  unsigned int v111 = v22;
  int v112 = v32;
  __int16 v113 = v33;
  char v114 = v34;
  sub_100345454(&v109, v24, v25, v26, v27, v28, v29, v30);
  if (v108) {
    goto LABEL_91;
  }
  if (v111 == v31 || (sub_1003455F8(0x7DuLL, (uint64_t)&v109, v40, v41, v42, v43, v44, v45) & 1) == 0)
  {
    uint64_t v108 = 0;
    uint64_t v7 = a1;
    swift_release();
    swift_release();
    uint64_t v6 = a2;
    int v5 = v100;
    goto LABEL_44;
  }
  uint64_t v58 = v34 | (v33 << 8);
  if (sub_1003455F8(0x2BuLL, (uint64_t)&v109, v46, v47, v48, v49, v50, v51))
  {
    uint64_t v108 = 0;
    goto LABEL_51;
  }
  uint64_t v108 = 0;
  if (sub_1003455F8(0x2DuLL, (uint64_t)&v109, v52, v53, v54, v55, v56, v57))
  {
LABEL_51:
    swift_beginAccess();
    if (v111 >= v31)
    {
      sub_1003459DC();
      while (v60 >= v63)
      {
        if (!(v62 + v63)) {
          goto LABEL_86;
        }
        uint64_t v65 = v63 + v61;
        if (v65 >= v62 + v63) {
          goto LABEL_105;
        }
        char v66 = *(unsigned char *)(*(void *)(v104 + 24) + v59 + v65);
        if ((v66 - 58) < 0xF6u)
        {
          unsigned int v111 = v63;
          if (v64 == 1) {
            goto LABEL_94;
          }
          swift_release();
          swift_release();
          goto LABEL_82;
        }
        uint64_t v67 = (v66 - 48);
        uint64_t v68 = v64 * v67;
        if ((unsigned __int128)(v64 * (__int128)v67) >> 64 != (v64 * v67) >> 63) {
          goto LABEL_106;
        }
        BOOL v36 = __OFADD__(v58, v68);
        v58 += v68;
        if (v36) {
          goto LABEL_87;
        }
        sub_100345A40();
        if (!v71) {
          goto LABEL_89;
        }
        unsigned int v63 = v70 - 1;
        if (v60 < v63) {
          goto LABEL_107;
        }
        if (v63 < v31) {
          goto LABEL_103;
        }
      }
      goto LABEL_104;
    }
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
    goto LABEL_120;
  }
  swift_beginAccess();
  if (v111 < v31) {
    goto LABEL_121;
  }
  sub_1003459DC();
  while (v73 >= v63)
  {
    if (!(v75 + v63))
    {
LABEL_86:
      unsigned int v111 = v31;
      sub_100296090();
      uint64_t v84 = sub_10020DD10();
      sub_100345A20(v84, v85);
      uint64_t v88 = 85;
      goto LABEL_90;
    }
    uint64_t v77 = v63 + v74;
    if (v77 >= v75 + v63) {
      goto LABEL_122;
    }
    char v78 = *(unsigned char *)(*(void *)(v104 + 24) + v72 + v77);
    if ((v78 - 58) < 0xF6u)
    {
      unsigned int v111 = v63;
      if (v76 == 1) {
        goto LABEL_94;
      }
      swift_release();
      swift_release();
      uint64_t v82 = v4[1];
      BOOL v36 = __OFADD__(v82, 1);
      uint64_t v83 = v82 + 1;
      if (!v36)
      {
        v4[1] = v83;
LABEL_82:
        uint64_t v6 = a2;
        int v5 = v100;
        unint64_t v11 = v105;
        if (v58 >= 1)
        {
          v4[2] = v58;
          *((unsigned char *)v4 + 24) = 0;
        }
        uint64_t v7 = a1;
        goto LABEL_45;
      }
      goto LABEL_125;
    }
    uint64_t v79 = (v78 - 48);
    uint64_t v80 = v76 * v79;
    if ((unsigned __int128)(v76 * (__int128)v79) >> 64 != (v76 * v79) >> 63) {
      goto LABEL_123;
    }
    BOOL v36 = __OFADD__(v58, v80);
    v58 += v80;
    if (v36)
    {
LABEL_87:
      unsigned int v111 = v63;
      sub_100296090();
      uint64_t v89 = sub_10020DD10();
      sub_100345A00(v89, v90);
      uint64_t v88 = 69;
      goto LABEL_90;
    }
    sub_100345A40();
    if (!v71)
    {
LABEL_89:
      unsigned int v111 = v69 - 18;
      sub_100296090();
      uint64_t v91 = sub_10020DD10();
      sub_100345A00(v91, v92);
      uint64_t v88 = 74;
      goto LABEL_90;
    }
    unsigned int v63 = v81 - 1;
    if (v73 < v63) {
      goto LABEL_124;
    }
    if (v63 < v31) {
      goto LABEL_121;
    }
  }
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
}

Swift::Void __swiftcall SynchronizingLiteralParser.consumed(_:)(Swift::Int a1)
{
  if (*v1 < a1)
  {
    __break(1u);
  }
  else if (!__OFSUB__(*v1, a1))
  {
    *v1 -= a1;
    return;
  }
  __break(1u);
}

void sub_100345454(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *((unsigned int *)a1 + 2);
  uint64_t v9 = *((unsigned int *)a1 + 3);
  if (v9 < v8)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (*((_DWORD *)a1 + 4) - (*((unsigned __int8 *)a1 + 22) | (*((unsigned __int16 *)a1 + 10) << 8)) < v9)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v16 = *a1;
  unint64_t v17 = __PAIR64__(v9, v8);
  LODWORD(v18) = *((_DWORD *)a1 + 4);
  WORD2(v18) = *((_WORD *)a1 + 10);
  BYTE6(v18) = *((unsigned char *)a1 + 22);
  uint64_t v19 = *((unsigned int *)a1 + 2);
  Swift::Int v10 = v9 - 1;
  if (v8 == v9) {
    uint64_t v11 = *((unsigned int *)a1 + 2);
  }
  else {
    uint64_t v11 = v9 - 1;
  }
  if (v11 < v8) {
    goto LABEL_26;
  }
  if (v11 > v9)
  {
LABEL_27:
    __break(1u);
    return;
  }
  if (v11 == v8)
  {
    BOOL v12 = 0;
  }
  else
  {
    uint64_t v11 = sub_100345920(v11);
    BOOL v12 = v11 == 13;
  }
  __int16 v13 = sub_10022EEB0(v11, a2, a3, a4, a5, a6, a7, a8, v16, v17, v18, v19);
  if (v12)
  {
    if ((v13 & 0x100) == 0)
    {
      if (v13 == 13)
      {
LABEL_22:
        ByteBuffer.moveWriterIndex(to:)(v10);
        return;
      }
      if (v13 == 10)
      {
        Swift::Int v10 = v9 - 2;
        goto LABEL_22;
      }
    }
  }
  else if ((v13 & 0x100) == 0 && (v13 == 10 || v13 == 13))
  {
    goto LABEL_22;
  }
  sub_100296090();
  swift_allocError();
  *uint64_t v15 = 0x6E776F6E6B6E55;
  v15[1] = 0xE700000000000000;
  v15[2] = 0xD000000000000020;
  v15[3] = 0x80000001005E63C0;
  v15[4] = 45;
  swift_willThrow();
}

unint64_t sub_1003455F8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *(unsigned int *)(a2 + 12);
  if (v8 < *(_DWORD *)(a2 + 8))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a2 + 16) - (*(unsigned __int8 *)(a2 + 22) | (*(unsigned __int16 *)(a2 + 20) << 8)) < v8)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  unsigned __int8 v9 = result;
  __int16 v10 = sub_10022EEB0(result, a2, a3, a4, a5, a6, a7, a8);
  if ((v10 & 0x100) != 0)
  {
    sub_1005E2C80(37);
    swift_bridgeObjectRelease();
    v13._countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v13);
    swift_bridgeObjectRelease();
    v14._object = (void *)0x80000001005E6E10;
    v14._countAndFlagsBits = 0xD000000000000010;
    sub_1005E1E30(v14);
    unint64_t v11 = 0x80000001005E6DF0;
    sub_100296090();
    swift_allocError();
    void *v12 = 0xD000000000000013;
    v12[1] = 0x80000001005E6DF0;
    v12[2] = 0xD000000000000020;
    v12[3] = 0x80000001005E63C0;
    v12[4] = 57;
    swift_willThrow();
  }
  else
  {
    LOBYTE(v11) = v10 == v9;
    if ((_BYTE)v11) {
      ByteBuffer.moveWriterIndex(to:)(v8 - 1);
    }
  }
  return v11 & 1;
}

uint64_t sub_100345794()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  if (v2 == v1) {
    return 0;
  }
  uint64_t v3 = *v0;
  uint64_t v4 = *((unsigned int *)v0 + 2);
  uint64_t v5 = *((unsigned __int16 *)v0 + 10);
  uint64_t v6 = *((unsigned __int8 *)v0 + 22);
  uint64_t v7 = (*((_DWORD *)v0 + 3) - v4);
  uint64_t v8 = v6 | (v5 << 8);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v3 + 24) + v8;
  uint64_t result = v2;
  while (1)
  {
    if (result >= v1)
    {
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      return result;
    }
    if (v2 < v4) {
      goto LABEL_16;
    }
    if (result - v4 >= v7) {
      goto LABEL_17;
    }
    int v11 = *(unsigned __int8 *)(v9 + result);
    if (v11 == 10) {
      return result;
    }
    if (v11 == 13) {
      break;
    }
    if (v1 == ++result) {
      return 0;
    }
  }
  if (result + 1 >= v1) {
    return result;
  }
  if (result - v4 + 1 >= v7) {
    goto LABEL_18;
  }
  if (*(unsigned char *)(v9 + result + 1) == 10) {
    ++result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SynchronizingLiteralParser()
{
  return &type metadata for SynchronizingLiteralParser;
}

ValueMetadata *type metadata accessor for SynchronizingLiteralParser.FramingResult()
{
  return &type metadata for SynchronizingLiteralParser.FramingResult;
}

ValueMetadata *type metadata accessor for SynchronizingLiteralParser.State()
{
  return &type metadata for SynchronizingLiteralParser.State;
}

unint64_t sub_1003458D4()
{
  unint64_t result = qword_100712570;
  if (!qword_100712570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712570);
  }
  return result;
}

uint64_t sub_100345920(uint64_t result)
{
  if (*(void *)v1 < result || *(void *)(v1 + 8) >= result)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (*(void *)(v1 + 40) >= result) {
    goto LABEL_11;
  }
  if (*(void *)(v1 + 48) < result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v3 = *(unsigned int *)(v1 + 24);
  if (v3 >= result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v4 = result - 1;
  if (result - 1 - v3 < (*(_DWORD *)(v1 + 28) - v3))
  {
    uint64_t v5 = *(void *)(v1 + 16);
    uint64_t v6 = *(unsigned __int16 *)(v1 + 36);
    uint64_t v7 = *(unsigned __int8 *)(v1 + 38);
    swift_beginAccess();
    return *(unsigned __int8 *)(*(void *)(v5 + 24) + (v7 | (v6 << 8)) + v4);
  }
LABEL_14:
  __break(1u);
  return result;
}

void sub_100345A00(uint64_t a1, void *a2)
{
  *a2 = 0x776F6C667265764FLL;
}

void sub_100345A20(uint64_t a1, void *a2)
{
  *a2 = 0x6E776F6E6B6E55;
}

BOOL sub_100345A58(char a1)
{
  BOOL v1 = a1 == 10 || a1 == 13;
  if (v1 || a1 < 0 || !a1) {
    return 0;
  }
  if (a1 == 34) {
    return 0;
  }
  return a1 != 92;
}

BOOL sub_100345A94(unsigned __int8 a1)
{
  return a1 - 58 > 0xFFFFFFF5 || a1 - 103 > 0xFFFFFFF9 || a1 - 65 < 6;
}

uint64_t sub_100345AC0(unsigned __int8 a1)
{
  int v1 = a1;
  int v2 = isalnum(a1);
  BOOL v3 = v1 == 126;
  if (v1 == 95) {
    BOOL v3 = 1;
  }
  unsigned int v4 = (v1 - 45) < 2 || v3;
  if (v2) {
    return 1;
  }
  else {
    return v4;
  }
}

uint64_t sub_100345B14(unsigned __int8 a1)
{
  return (a1 < 0x2Du) & (0x1F9200000000uLL >> a1);
}

uint64_t sub_100345B30(unsigned __int8 a1)
{
  BOOL v1 = a1 - 65 < 0x1A;
  if (a1 - 123 > 0xFFFFFFE5) {
    BOOL v1 = 1;
  }
  return a1 - 45 <= 0x32 && ((1 << (a1 - 45)) & 0x4000000000003) != 0 || v1;
}

uint64_t sub_100345B78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10000566C(&qword_10070FD90);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_100710908);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = 0xFFFFFFFF00000000;
  sub_100223B18();
  sub_1005E36A0();
  sub_10024E2A4((uint64_t)v4, (uint64_t)v7);
  uint64_t v8 = sub_10000566C(&qword_1007108C0);
  uint64_t result = getEnumTagSinglePayload for ClientCommand((uint64_t)v7, 1, v8);
  if (result != 1) {
    return sub_1002A0BC0((uint64_t)v7, a1);
  }
  __break(1u);
  return result;
}

void PipeliningRequirement.hash(into:)()
{
  uint64_t v3 = sub_10000566C(&qword_1007108C0);
  uint64_t v4 = sub_100224550(v3);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_10034E918();
  type metadata accessor for PipeliningRequirement(v5);
  sub_1001F3BBC();
  __chkstk_darwin(v6);
  sub_100224490();
  sub_100346550(v1, v2, (void (*)(void))type metadata accessor for PipeliningRequirement);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10034EADC();
      Swift::UInt v7 = 4;
      goto LABEL_4;
    case 2u:
      Swift::UInt v8 = 0;
      goto LABEL_8;
    case 3u:
      Swift::UInt v8 = 1;
      goto LABEL_8;
    case 4u:
      Swift::UInt v8 = 2;
LABEL_8:
      sub_1005E3410(v8);
      break;
    default:
      sub_10034EADC();
      Swift::UInt v7 = 3;
LABEL_4:
      sub_1005E3410(v7);
      sub_10000566C(&qword_100710538);
      sub_10022AAC0();
      sub_10034EABC();
      sub_1001F3A28(v0, &qword_1007108C0);
      break;
  }
}

uint64_t type metadata accessor for PipeliningRequirement(uint64_t a1)
{
  return sub_10029BE2C(a1, qword_100712610);
}

void static PipeliningRequirement.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1001FE5B4();
  a19 = v25;
  a20 = v26;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v31 = sub_10000566C(&qword_1007108C0);
  uint64_t v32 = sub_100224550(v31);
  __chkstk_darwin(v32);
  sub_10034E748();
  __chkstk_darwin(v33);
  uint64_t v34 = sub_10034EA74();
  type metadata accessor for PipeliningRequirement(v34);
  sub_1001F3BBC();
  __chkstk_darwin(v35);
  sub_10022C58C();
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&a9 - v37;
  uint64_t v39 = sub_10000566C(&qword_100712578);
  uint64_t v40 = sub_100224550(v39);
  __chkstk_darwin(v40);
  sub_10034E868();
  sub_100346550(v30, v20, (void (*)(void))type metadata accessor for PipeliningRequirement);
  sub_100346550(v28, v24, (void (*)(void))type metadata accessor for PipeliningRequirement);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100346550(v20, v23, (void (*)(void))type metadata accessor for PipeliningRequirement);
      if (sub_10034E708() != 1) {
        goto LABEL_6;
      }
      sub_1002A0BC0(v24, v21);
      sub_100223B18();
      sub_1005E35A0();
      sub_1001F3A28(v21, &qword_1007108C0);
      uint64_t v41 = sub_1001F4C24();
      goto LABEL_14;
    case 2u:
      if (sub_10034E708() == 2) {
        goto LABEL_8;
      }
      goto LABEL_12;
    case 3u:
      if (sub_10034E708() != 3) {
        goto LABEL_12;
      }
      goto LABEL_8;
    case 4u:
      if (sub_10034E708() != 4) {
        goto LABEL_12;
      }
LABEL_8:
      sub_1003468D8(v20, (void (*)(void))type metadata accessor for PipeliningRequirement);
      break;
    default:
      sub_100346550(v20, (uint64_t)v38, (void (*)(void))type metadata accessor for PipeliningRequirement);
      if (sub_10034E708())
      {
        uint64_t v23 = (uint64_t)v38;
LABEL_6:
        sub_1001F3A28(v23, &qword_1007108C0);
LABEL_12:
        sub_1001F3A28(v20, &qword_100712578);
      }
      else
      {
        sub_1002A0BC0(v24, v22);
        sub_100223B18();
        sub_1005E35A0();
        sub_1001F3A28(v22, &qword_1007108C0);
        uint64_t v41 = (uint64_t)v38;
        uint64_t v42 = &qword_1007108C0;
LABEL_14:
        sub_1001F3A28(v41, v42);
        sub_1003468D8(v20, (void (*)(void))type metadata accessor for PipeliningRequirement);
      }
      break;
  }
  sub_1001FE57C();
}

Swift::Int PipeliningRequirement.hashValue.getter()
{
  return sub_100346948((void (*)(unsigned char *))PipeliningRequirement.hash(into:));
}

Swift::Int sub_100346138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003469B0(a1, a2, a3, (void (*)(unsigned char *))PipeliningRequirement.hash(into:));
}

uint64_t sub_100346154(uint64_t a1)
{
  return sub_100346230(a1, type metadata accessor for PipeliningRequirement, static PipeliningRequirement.noFlagChangesToAnyMessage);
}

uint64_t PipeliningRequirement.noFlagChangesToAnyMessage.unsafeMutableAddressor()
{
  return sub_1003462E0(&qword_10070FD68, type metadata accessor for PipeliningRequirement, (uint64_t)static PipeliningRequirement.noFlagChangesToAnyMessage);
}

uint64_t sub_1003461B0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t static PipeliningRequirement.noFlagChangesToAnyMessage.getter()
{
  return sub_100346360();
}

uint64_t sub_10034620C(uint64_t a1)
{
  return sub_100346230(a1, type metadata accessor for PipeliningRequirement, static PipeliningRequirement.noFlagReadsFromAnyMessage);
}

uint64_t sub_100346230(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t v4 = a2(0);
  sub_10034E5B4(v4, a3);
  uint64_t v5 = sub_1003461B0(v4, (uint64_t)a3);
  sub_100345B78(v5);
  return swift_storeEnumTagMultiPayload();
}

uint64_t PipeliningRequirement.noFlagReadsFromAnyMessage.unsafeMutableAddressor()
{
  return sub_1003462E0(&qword_10070FD70, type metadata accessor for PipeliningRequirement, (uint64_t)static PipeliningRequirement.noFlagReadsFromAnyMessage);
}

uint64_t sub_1003462E0(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = a2(0);
  return sub_1003461B0(v5, a3);
}

uint64_t static PipeliningRequirement.noFlagReadsFromAnyMessage.getter()
{
  return sub_100346360();
}

uint64_t sub_100346360()
{
  sub_10034EAF4();
  if (!v2) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for PipeliningRequirement(0);
  uint64_t v4 = sub_1003461B0(v3, v1);
  return sub_100346550(v4, v0, (void (*)(void))type metadata accessor for PipeliningRequirement);
}

void PipeliningBehavior.hash(into:)()
{
  uint64_t v3 = sub_10000566C(&qword_1007108C0);
  uint64_t v4 = sub_100224550(v3);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_10034E918();
  type metadata accessor for PipeliningBehavior(v5);
  sub_1001F3BBC();
  __chkstk_darwin(v6);
  sub_100224490();
  sub_100346550(v1, v2, (void (*)(void))type metadata accessor for PipeliningBehavior);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10034EADC();
      Swift::UInt v7 = 5;
      goto LABEL_4;
    case 2u:
      Swift::UInt v8 = 0;
      goto LABEL_10;
    case 3u:
      Swift::UInt v8 = 1;
      goto LABEL_10;
    case 4u:
      Swift::UInt v8 = 2;
      goto LABEL_10;
    case 5u:
      Swift::UInt v8 = 3;
      goto LABEL_10;
    case 6u:
      Swift::UInt v8 = 6;
LABEL_10:
      sub_1005E3410(v8);
      break;
    default:
      sub_10034EADC();
      Swift::UInt v7 = 4;
LABEL_4:
      sub_1005E3410(v7);
      sub_10000566C(&qword_100710538);
      sub_10022AAC0();
      sub_10034EABC();
      sub_1001F3A28(v0, &qword_1007108C0);
      break;
  }
}

uint64_t type metadata accessor for PipeliningBehavior(uint64_t a1)
{
  return sub_10029BE2C(a1, qword_1007126B8);
}

uint64_t sub_100346550(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1001F3BBC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

void static PipeliningBehavior.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1001FE5B4();
  a19 = v25;
  a20 = v26;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v31 = sub_10000566C(&qword_1007108C0);
  uint64_t v32 = sub_100224550(v31);
  __chkstk_darwin(v32);
  sub_10034E748();
  __chkstk_darwin(v33);
  uint64_t v34 = sub_10034EA74();
  type metadata accessor for PipeliningBehavior(v34);
  sub_1001F3BBC();
  __chkstk_darwin(v35);
  sub_10022C58C();
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&a9 - v37;
  uint64_t v39 = sub_10000566C(&qword_100712580);
  uint64_t v40 = sub_100224550(v39);
  __chkstk_darwin(v40);
  sub_10034E868();
  sub_100346550(v30, v20, (void (*)(void))type metadata accessor for PipeliningBehavior);
  sub_100346550(v28, v24, (void (*)(void))type metadata accessor for PipeliningBehavior);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100346550(v20, v23, (void (*)(void))type metadata accessor for PipeliningBehavior);
      if (sub_10034E708() != 1) {
        goto LABEL_6;
      }
      sub_1002A0BC0(v24, v21);
      sub_100223B18();
      sub_1005E35A0();
      sub_1001F3A28(v21, &qword_1007108C0);
      uint64_t v41 = sub_1001F4C24();
      goto LABEL_19;
    case 2u:
      if (sub_10034E708() == 2) {
        goto LABEL_8;
      }
      goto LABEL_16;
    case 3u:
      if (sub_10034E708() != 3) {
        goto LABEL_16;
      }
      goto LABEL_8;
    case 4u:
      if (sub_10034E708() != 4) {
        goto LABEL_16;
      }
      goto LABEL_8;
    case 5u:
      if (sub_10034E708() != 5) {
        goto LABEL_16;
      }
      goto LABEL_8;
    case 6u:
      if (sub_10034E708() != 6) {
        goto LABEL_16;
      }
LABEL_8:
      sub_1003468D8(v20, (void (*)(void))type metadata accessor for PipeliningBehavior);
      break;
    default:
      sub_100346550(v20, (uint64_t)v38, (void (*)(void))type metadata accessor for PipeliningBehavior);
      if (sub_10034E708())
      {
        uint64_t v23 = (uint64_t)v38;
LABEL_6:
        sub_1001F3A28(v23, &qword_1007108C0);
LABEL_16:
        sub_1001F3A28(v20, &qword_100712580);
      }
      else
      {
        sub_1002A0BC0(v24, v22);
        sub_100223B18();
        sub_1005E35A0();
        sub_1001F3A28(v22, &qword_1007108C0);
        uint64_t v41 = (uint64_t)v38;
        uint64_t v42 = &qword_1007108C0;
LABEL_19:
        sub_1001F3A28(v41, v42);
        sub_1003468D8(v20, (void (*)(void))type metadata accessor for PipeliningBehavior);
      }
      break;
  }
  sub_1001FE57C();
}

uint64_t sub_1003468D8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1001F3BBC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

Swift::Int PipeliningBehavior.hashValue.getter()
{
  return sub_100346948((void (*)(unsigned char *))PipeliningBehavior.hash(into:));
}

Swift::Int sub_100346948(void (*a1)(unsigned char *))
{
  sub_1005E33F0();
  a1(v3);
  return sub_1005E3470();
}

Swift::Int sub_100346998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003469B0(a1, a2, a3, (void (*)(unsigned char *))PipeliningBehavior.hash(into:));
}

Swift::Int sub_1003469B0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_1005E33F0();
  a4(v6);
  return sub_1005E3470();
}

uint64_t sub_1003469F8(uint64_t a1)
{
  return sub_100346230(a1, type metadata accessor for PipeliningBehavior, static PipeliningBehavior.changesFlagsOnAnyMessage);
}

uint64_t PipeliningBehavior.changesFlagsOnAnyMessage.unsafeMutableAddressor()
{
  return sub_1003462E0(&qword_10070FD78, type metadata accessor for PipeliningBehavior, (uint64_t)static PipeliningBehavior.changesFlagsOnAnyMessage);
}

uint64_t static PipeliningBehavior.changesFlagsOnAnyMessage.getter()
{
  return sub_100346A78();
}

uint64_t sub_100346A78()
{
  sub_10034EAF4();
  if (!v2) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for PipeliningBehavior(0);
  uint64_t v4 = sub_1003461B0(v3, v1);
  return sub_100346550(v4, v0, (void (*)(void))type metadata accessor for PipeliningBehavior);
}

uint64_t sub_100346AD4(uint64_t a1)
{
  return sub_100346230(a1, type metadata accessor for PipeliningBehavior, static PipeliningBehavior.readsFlagsFromAnyMessage);
}

uint64_t PipeliningBehavior.readsFlagsFromAnyMessage.unsafeMutableAddressor()
{
  return sub_1003462E0(&qword_10070FD80, type metadata accessor for PipeliningBehavior, (uint64_t)static PipeliningBehavior.readsFlagsFromAnyMessage);
}

uint64_t static PipeliningBehavior.readsFlagsFromAnyMessage.getter()
{
  return sub_100346A78();
}

unsigned char *CommandStreamPart.pipeliningRequirements.getter()
{
  uint64_t v2 = v0;
  type metadata accessor for TaggedCommand();
  sub_1001F3BBC();
  __chkstk_darwin(v3);
  sub_10025DB8C();
  sub_1001F3BBC();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100346550(v2, (uint64_t)v6, (void (*)(void))type metadata accessor for CommandStreamPart);
  Swift::UInt v7 = &_swiftEmptySetSingleton;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100255FEC(*(void *)v6, *((void *)v6 + 1), *((void *)v6 + 2), *((void *)v6 + 3), *((void *)v6 + 4), *((void *)v6 + 5), *((void *)v6 + 6), v6[56]);
      break;
    case 2u:
      swift_release();
      break;
    case 3u:
      return v7;
    default:
      sub_10034D8F0((uint64_t)v6, v1, (void (*)(void))type metadata accessor for TaggedCommand);
      Swift::UInt v7 = sub_100346CD8();
      sub_1003468D8(v1, (void (*)(void))type metadata accessor for TaggedCommand);
      break;
  }
  return v7;
}

unsigned char *sub_100346CD8()
{
  uint64_t v3 = sub_10000566C(&qword_1007108C0);
  sub_1001F3BBC();
  uint64_t v5 = __chkstk_darwin(v4);
  Swift::UInt v7 = &v77[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  uint64_t v8 = sub_10034EA88();
  sub_1001F3BBC();
  __chkstk_darwin(v9);
  sub_1002677E8();
  sub_100346550(v1, (uint64_t)v0, (void (*)(void))type metadata accessor for Command);
  sub_10034E9B4();
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v18 = &_swiftEmptySetSingleton;
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
    case 9:
    case 10:
    case 13:
    case 27:
    case 33:
    case 34:
    case 35:
      goto LABEL_2;
    case 2:
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 3:
      sub_10034E670(EnumCaseMultiPayload, v11, v12, v13, v14, v15, v16, v17, (uint64_t)v76);
      goto LABEL_12;
    case 4:
      sub_10034E7E0();
LABEL_12:
      swift_bridgeObjectRelease();
      sub_1001F33B8(v2, v8, (uint64_t)v7, v3);
      goto LABEL_45;
    case 5:
      swift_release();
      goto LABEL_45;
    case 6:
      sub_10034EA54();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_47;
    case 11:
      swift_bridgeObjectRelease();
      goto LABEL_40;
    case 14:
    case 18:
      sub_10000566C(&qword_1007108E8);
      sub_10034E814();
      sub_1001F3A28((uint64_t)v0, &qword_1007104D8);
      sub_10000566C(&qword_1007126F8);
      type metadata accessor for PipeliningRequirement(0);
      sub_10034E618();
      uint64_t v19 = sub_10034E634();
      *(_OWORD *)(v19 + 16) = xmmword_1005F6690;
      sub_10034E778();
      goto LABEL_6;
    case 15:
      uint64_t v23 = *(unint64_t *)((char *)v0 + *(int *)(sub_10000566C(&qword_1007108F8) + 48));
      swift_bridgeObjectRelease();
      uint64_t v76 = &_swiftEmptySetSingleton;
      uint64_t v24 = *(void *)(v23 + 16);
      if (v24)
      {
        uint64_t v25 = v23 + 32;
        swift_bridgeObjectRetain();
        do
        {
          sub_1001F3740(v25, (uint64_t)v77);
          sub_1001F3814((uint64_t)v77, (void (*)(void, void, void, void, unint64_t))sub_1001F379C);
          uint64_t v26 = sub_100349904();
          sub_100349694((uint64_t)v26);
          sub_1001F3814((uint64_t)v77, (void (*)(void, void, void, void, unint64_t))sub_1001F385C);
          v25 += 40;
          --v24;
        }
        while (v24);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_10000566C(&qword_1007126F8);
      type metadata accessor for PipeliningRequirement(0);
      sub_10034E618();
      sub_10034E82C();
      char v71 = (__n128 *)sub_10034E9FC();
      sub_10034E960(v71, (__n128)xmmword_1005F6690);
      swift_storeEnumTagMultiPayload();
      sub_100347BD4();
      uint64_t v18 = v72;
      goto LABEL_66;
    case 16:
      uint64_t v27 = sub_10000566C(&qword_1007108F0);
      sub_10034E814();
      uint64_t v28 = *(unint64_t *)((char *)v0 + *(int *)(v27 + 64));
      sub_10000566C(&qword_1007126F8);
      uint64_t v29 = type metadata accessor for PipeliningRequirement(0);
      sub_10034E618();
      uint64_t v31 = *(void *)(v30 + 72);
      sub_10034E764();
      uint64_t v32 = 2 * v31;
      if ((v28 & 0x100) != 0)
      {
        uint64_t v33 = (__n128 *)swift_allocObject();
        sub_10034E6E4(v33, (__n128)xmmword_1005F66F0);
        sub_10034E984();
        uint64_t v36 = v3 + v32;
        if (qword_10070FD70 != -1) {
          swift_once();
        }
        uint64_t v37 = static PipeliningRequirement.noFlagReadsFromAnyMessage;
      }
      else
      {
        uint64_t v33 = (__n128 *)swift_allocObject();
        sub_10034E6E4(v33, (__n128)xmmword_1005F6680);
        sub_10034E984();
        uint64_t v34 = v3 + v32;
        if (qword_10070FD70 != -1) {
          swift_once();
        }
        uint64_t v35 = sub_1003461B0(v29, (uint64_t)static PipeliningRequirement.noFlagReadsFromAnyMessage);
        sub_100346550(v35, v34, (void (*)(void))type metadata accessor for PipeliningRequirement);
        uint64_t v36 = v3 + 3 * v31;
        if (qword_10070FD68 != -1) {
          swift_once();
        }
        uint64_t v37 = static PipeliningRequirement.noFlagChangesToAnyMessage;
      }
      uint64_t v62 = sub_1003461B0(v29, (uint64_t)v37);
      sub_100346550(v62, v36, (void (*)(void))type metadata accessor for PipeliningRequirement);
      if (v33[1].n128_u64[0])
      {
        uint64_t v18 = sub_10034A118((uint64_t)v33);
      }
      else
      {
        swift_setDeallocating();
        sub_10034A094((void (*)(void))type metadata accessor for PipeliningRequirement);
        uint64_t v18 = &_swiftEmptySetSingleton;
      }
      sub_10024EEEC();
LABEL_66:
      uint64_t v21 = &qword_1007104D8;
      goto LABEL_67;
    case 17:
    case 23:
      unint64_t v22 = *v0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = sub_100347A3C(v22);
      sub_1002239B4(v22);
      return v18;
    case 19:
      swift_release();
      swift_release();
      goto LABEL_47;
    case 20:
    case 21:
      sub_10000566C(&qword_1007108E0);
      sub_10034E814();
      uint64_t v21 = &qword_1007108C8;
LABEL_67:
      uint64_t v73 = (uint64_t)v0;
      goto LABEL_68;
    case 22:
      uint64_t v38 = *(unint64_t *)((char *)v0 + *(int *)(sub_10000566C(&qword_1007108D8) + 48));
      swift_bridgeObjectRelease();
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v0, 1, v3) != 1)
      {
        sub_1002A0BC0((uint64_t)v0, v2);
        uint64_t v76 = &_swiftEmptySetSingleton;
        uint64_t v63 = *(void *)(v38 + 16);
        if (v63)
        {
          uint64_t v64 = v38 + 32;
          swift_bridgeObjectRetain();
          do
          {
            sub_1001F3740(v64, (uint64_t)v77);
            sub_1001F3814((uint64_t)v77, (void (*)(void, void, void, void, unint64_t))sub_1001F379C);
            uint64_t v65 = sub_1003495B0();
            sub_100349694((uint64_t)v65);
            sub_1001F3814((uint64_t)v77, (void (*)(void, void, void, void, unint64_t))sub_1001F385C);
            v64 += 40;
            --v63;
          }
          while (v63);
          swift_bridgeObjectRelease_n();
          uint64_t v18 = v76;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v21 = &qword_1007108C0;
        uint64_t v73 = v2;
        goto LABEL_68;
      }
      uint64_t v76 = &_swiftEmptySetSingleton;
      uint64_t v39 = *(void *)(v38 + 16);
      if (v39)
      {
        uint64_t v40 = v38 + 32;
        swift_bridgeObjectRetain();
        do
        {
          sub_1001F3740(v40, (uint64_t)v77);
          sub_1001F3814((uint64_t)v77, (void (*)(void, void, void, void, unint64_t))sub_1001F379C);
          uint64_t v41 = sub_100349904();
          sub_100349694((uint64_t)v41);
          sub_1001F3814((uint64_t)v77, (void (*)(void, void, void, void, unint64_t))sub_1001F385C);
          v40 += 40;
          --v39;
        }
        while (v39);
        swift_bridgeObjectRelease_n();
        uint64_t v18 = v76;
      }
      else
      {
LABEL_2:
        swift_bridgeObjectRelease();
      }
      break;
    case 24:
      sub_10000566C(&qword_1007108D0);
      sub_10034E814();
      uint64_t v42 = sub_10034EAA8();
      if (getEnumTagSinglePayload for ClientCommand(v42, v43, v3) == 1)
      {
        sub_10000566C(&qword_1007126F8);
        uint64_t v44 = type metadata accessor for PipeliningRequirement(0);
        sub_10034E618();
        uint64_t v46 = *(void *)(v45 + 72);
        sub_10034E82C();
        if ((v8 & 0x100) != 0)
        {
          uint64_t v47 = sub_10034E888();
          *(_OWORD *)(v47 + 16) = xmmword_1005F6670;
          uint64_t v50 = (uint64_t)&v7[v47];
          if (qword_10070FD70 != -1) {
            swift_once();
          }
          uint64_t v51 = static PipeliningRequirement.noFlagReadsFromAnyMessage;
        }
        else
        {
          uint64_t v47 = sub_10034E888();
          *(_OWORD *)(v47 + 16) = xmmword_1005F6690;
          uint64_t v48 = (uint64_t)&v7[v47];
          if (qword_10070FD70 != -1) {
            swift_once();
          }
          uint64_t v49 = sub_1003461B0(v44, (uint64_t)static PipeliningRequirement.noFlagReadsFromAnyMessage);
          sub_100346550(v49, v48, (void (*)(void))type metadata accessor for PipeliningRequirement);
          uint64_t v50 = v48 + v46;
          if (qword_10070FD68 != -1) {
            swift_once();
          }
          uint64_t v51 = static PipeliningRequirement.noFlagChangesToAnyMessage;
        }
        uint64_t v75 = sub_1003461B0(v44, (uint64_t)v51);
        sub_100346550(v75, v50, (void (*)(void))type metadata accessor for PipeliningRequirement);
        if (*(void *)(v47 + 16))
        {
          uint64_t v18 = sub_10034A118(v47);
          sub_10034E900();
        }
        else
        {
          swift_setDeallocating();
          sub_10034A094((void (*)(void))type metadata accessor for PipeliningRequirement);
          sub_10034E900();
LABEL_48:
          uint64_t v18 = &_swiftEmptySetSingleton;
        }
      }
      else
      {
        sub_1002A0BC0((uint64_t)v0, (uint64_t)v7);
        sub_10000566C(&qword_1007126F8);
        type metadata accessor for PipeliningRequirement(0);
        sub_10034E618();
        uint64_t v67 = *(void *)(v66 + 72);
        unint64_t v69 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
        int v70 = (__n128 *)sub_10034E888();
        if ((v8 & 0x100) != 0)
        {
          sub_10034EA34(v70, (__n128)xmmword_1005F6670);
          sub_10034E950();
        }
        else
        {
          sub_10034EA34(v70, (__n128)xmmword_1005F6690);
          sub_10034E950();
          swift_storeEnumTagMultiPayload();
          sub_1002A0A18((uint64_t)v7, v69 + v67);
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v18 = sub_10034A118((uint64_t)v70);
        sub_10034E900();
        uint64_t v21 = &qword_1007108C0;
        uint64_t v73 = (uint64_t)v7;
LABEL_68:
        sub_1001F3A28(v73, v21);
      }
      break;
    case 25:
      sub_1003468D8((uint64_t)v0, (void (*)(void))type metadata accessor for Command);
      return v18;
    case 26:
LABEL_40:
      swift_release();
      return v18;
    case 28:
      swift_bridgeObjectRelease();
      goto LABEL_47;
    case 29:
      swift_bridgeObjectRelease();
      goto LABEL_44;
    case 30:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_47:
      swift_release();
      goto LABEL_48;
    case 31:
      unint64_t v52 = *v0;
      uint64_t v53 = v0[4];
      uint64_t v54 = v0[5];
      uint64_t v55 = v0[6];
      uint64_t v18 = sub_100347A3C(*v0);
      sub_1002239B4(v52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10024EE94(v53, v54, v55);
      return v18;
    case 36:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10000566C(&qword_1007126F8);
      type metadata accessor for PipeliningRequirement(0);
      sub_10034E618();
      uint64_t v57 = *(void *)(v56 + 72);
      unint64_t v59 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
      uint64_t v60 = sub_10034E888();
      *(_OWORD *)(v60 + 16) = xmmword_1005F66A0;
      unint64_t v61 = v60 + v59;
      swift_storeEnumTagMultiPayload();
      sub_10034E7B0();
      sub_10034E7C8();
      sub_100345B78(v61 + 3 * v57);
      swift_storeEnumTagMultiPayload();
      sub_100345B78(v61 + 4 * v57);
      swift_storeEnumTagMultiPayload();
      uint64_t v20 = v60;
      return sub_10034A118(v20);
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 43:
    case 45:
    case 46:
      return v18;
    case 42:
    case 44:
LABEL_4:
      sub_10000566C(&qword_1007126F8);
      type metadata accessor for PipeliningRequirement(0);
      sub_10034E618();
      uint64_t v19 = sub_10034E720();
      *(_OWORD *)(v19 + 16) = xmmword_1005F6670;
LABEL_6:
      swift_storeEnumTagMultiPayload();
      uint64_t v20 = v19;
      return sub_10034A118(v20);
    default:
LABEL_44:
      swift_bridgeObjectRelease();
LABEL_45:
      swift_bridgeObjectRelease();
      goto LABEL_48;
  }
  return v18;
}

void *sub_100347A3C(unint64_t a1)
{
  uint64_t v3 = type metadata accessor for PipeliningRequirement(0);
  sub_1001F3BBC();
  __chkstk_darwin(v4);
  sub_10034E934();
  __chkstk_darwin(v5);
  Swift::UInt v7 = (char *)&v10 - v6;
  uint64_t v11 = &_swiftEmptySetSingleton;
  if (sub_100349A54(a1))
  {
    sub_10034E9B4();
    swift_storeEnumTagMultiPayload();
    sub_10034B6B8((uint64_t)v7, v1);
    sub_1003468D8((uint64_t)v7, (void (*)(void))type metadata accessor for PipeliningRequirement);
    sub_10034E9B4();
    swift_storeEnumTagMultiPayload();
    sub_10034B6B8((uint64_t)v7, v1);
    sub_1003468D8((uint64_t)v7, (void (*)(void))type metadata accessor for PipeliningRequirement);
  }
  if (sub_100349C30(a1))
  {
    if (qword_10070FD68 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1003461B0(v3, (uint64_t)static PipeliningRequirement.noFlagChangesToAnyMessage);
    sub_100346550(v8, v1, (void (*)(void))type metadata accessor for PipeliningRequirement);
    sub_10034B6B8((uint64_t)v7, v1);
    sub_1003468D8((uint64_t)v7, (void (*)(void))type metadata accessor for PipeliningRequirement);
  }
  return v11;
}

void sub_100347BD4()
{
  sub_1001FE5B4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10(0) - 8;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v17 = (char *)v21 - v16;
  v21[1] = v7;
  uint64_t v18 = *(void *)(v9 + 16);
  if (v18)
  {
    uint64_t v19 = v9 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v20 = *(void *)(v15 + 72);
    do
    {
      sub_100346550(v19, (uint64_t)v14, v5);
      v3(v17, v14);
      sub_1003468D8((uint64_t)v17, v1);
      v19 += v20;
      --v18;
    }
    while (v18);
  }
  swift_bridgeObjectRelease();
  sub_1001FE57C();
}

void CommandStreamPart.pipeliningBehavior.getter()
{
  sub_1001FE5B4();
  type metadata accessor for TaggedCommand();
  sub_1001F3BBC();
  __chkstk_darwin(v2);
  sub_10025DB8C();
  sub_1001F3BBC();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100346550(v0, (uint64_t)v5, (void (*)(void))type metadata accessor for CommandStreamPart);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unsigned int v6 = v5[56];
      if (v6 >> 5 != 4 && v6 >> 5)
      {
        uint64_t v15 = sub_10034E8E4();
        sub_100255FEC(v15, v16, v17, v18, v19, v20, v21, v6);
      }
      else
      {
        uint64_t v23 = *((void *)v5 + 6);
        sub_10000566C(&qword_100712588);
        type metadata accessor for PipeliningBehavior(0);
        sub_10034E618();
        uint64_t v8 = sub_10034E8A0();
        *(_OWORD *)(v8 + 16) = xmmword_1005F6670;
        swift_storeEnumTagMultiPayload();
        sub_10034A880(v8);
        uint64_t v9 = sub_10034E8E4();
        sub_100255FEC(v9, v10, v11, v12, v13, v14, v23, v6);
      }
      break;
    case 2u:
      swift_release();
      break;
    case 3u:
      sub_10000566C(&qword_100712588);
      type metadata accessor for PipeliningBehavior(0);
      sub_10034E618();
      uint64_t v7 = sub_10034E6B8();
      *(_OWORD *)(v7 + 16) = xmmword_1005F66F0;
      sub_10034E778();
      sub_10034E984();
      swift_storeEnumTagMultiPayload();
      sub_10034A880(v7);
      break;
    default:
      sub_10034D8F0((uint64_t)v5, v1, (void (*)(void))type metadata accessor for TaggedCommand);
      sub_100348024();
      sub_1003468D8(v1, (void (*)(void))type metadata accessor for TaggedCommand);
      break;
  }
  sub_1001FE57C();
}

void sub_100348024()
{
  sub_1001FE5B4();
  uint64_t v3 = sub_10000566C(&qword_1007108C0);
  sub_1001F3BBC();
  __chkstk_darwin(v4);
  sub_10034E748();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_10034EA88();
  sub_1001F3BBC();
  __chkstk_darwin(v7);
  sub_1002677E8();
  sub_100346550(v1, (uint64_t)v0, (void (*)(void))type metadata accessor for Command);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
    case 9:
    case 10:
    case 13:
    case 27:
      goto LABEL_50;
    case 2:
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 3:
      sub_10034E670(EnumCaseMultiPayload, v9, v10, v11, v12, v13, v14, v15, v74);
      goto LABEL_12;
    case 4:
      sub_10034E7E0();
LABEL_12:
      swift_bridgeObjectRelease();
      sub_1001F33B8(v2, v1, v3, v6);
      goto LABEL_50;
    case 5:
      swift_release();
      goto LABEL_50;
    case 6:
      sub_10034EA54();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_52;
    case 11:
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_53;
    case 12:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 14:
    case 18:
      sub_10000566C(&qword_1007108E8);
      sub_10034E814();
      sub_1001F3A28((uint64_t)v0, &qword_1007104D8);
      goto LABEL_5;
    case 15:
      sub_10000566C(&qword_1007108F8);
      sub_10034EA14();
      char v17 = sub_100349350(v1);
      swift_bridgeObjectRelease();
      sub_10000566C(&qword_100712588);
      uint64_t v18 = type metadata accessor for PipeliningBehavior(0);
      sub_10034E618();
      uint64_t v20 = *(void *)(v19 + 72);
      unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      if (v17)
      {
        uint64_t v23 = sub_10034E9FC();
        *(_OWORD *)(v23 + 16) = xmmword_1005F6690;
        sub_10034E778();
        if (qword_10070FD80 != -1) {
          swift_once();
        }
        uint64_t v24 = sub_1003461B0(v18, (uint64_t)static PipeliningBehavior.readsFlagsFromAnyMessage);
        sub_100346550(v24, v23 + v22 + v20, (void (*)(void))type metadata accessor for PipeliningBehavior);
        if (!*(void *)(v23 + 16))
        {
          swift_setDeallocating();
          sub_10034A094((void (*)(void))type metadata accessor for PipeliningBehavior);
          goto LABEL_75;
        }
      }
      else
      {
        uint64_t v23 = sub_10034E9FC();
        *(_OWORD *)(v23 + 16) = xmmword_1005F6670;
        sub_10034E778();
      }
      sub_10034A880(v23);
LABEL_75:
      char v71 = &qword_1007104D8;
      uint64_t v72 = (uint64_t)v0;
      goto LABEL_76;
    case 16:
      uint64_t v25 = sub_10000566C(&qword_1007108F0);
      sub_10034E814();
      uint64_t v26 = *(unint64_t *)((char *)v0 + *(int *)(v25 + 64));
      sub_10000566C(&qword_100712588);
      uint64_t v27 = type metadata accessor for PipeliningBehavior(0);
      sub_10034E618();
      uint64_t v29 = *(void *)(v28 + 72);
      sub_10034E764();
      if ((v26 & 0x100) != 0)
      {
        uint64_t v30 = (__n128 *)swift_allocObject();
        sub_10034E6E4(v30, (__n128)xmmword_1005F6690);
        uint64_t v32 = v6 + v29;
        if (qword_10070FD78 != -1) {
          swift_once();
        }
        uint64_t v33 = static PipeliningBehavior.changesFlagsOnAnyMessage;
      }
      else
      {
        uint64_t v30 = (__n128 *)swift_allocObject();
        sub_10034E6E4(v30, (__n128)xmmword_1005F66F0);
        if (qword_10070FD78 != -1) {
          swift_once();
        }
        uint64_t v31 = sub_1003461B0(v27, (uint64_t)static PipeliningBehavior.changesFlagsOnAnyMessage);
        sub_100346550(v31, v6 + v29, (void (*)(void))type metadata accessor for PipeliningBehavior);
        uint64_t v32 = v6 + 2 * v29;
        if (qword_10070FD80 != -1) {
          swift_once();
        }
        uint64_t v33 = static PipeliningBehavior.readsFlagsFromAnyMessage;
      }
      uint64_t v59 = sub_1003461B0(v27, (uint64_t)v33);
      sub_100346550(v59, v32, (void (*)(void))type metadata accessor for PipeliningBehavior);
      if (v30[1].n128_u64[0])
      {
        sub_10034A880((uint64_t)v30);
      }
      else
      {
        swift_setDeallocating();
        sub_10034A094((void (*)(void))type metadata accessor for PipeliningBehavior);
      }
      sub_10024EEEC();
      goto LABEL_75;
    case 17:
      unint64_t v34 = *v0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100349440(v34);
      sub_10000566C(&qword_100712588);
      type metadata accessor for PipeliningBehavior(0);
      sub_10034E618();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1005F6670;
      goto LABEL_37;
    case 19:
      swift_release();
      swift_release();
      goto LABEL_52;
    case 20:
    case 21:
      sub_10000566C(&qword_1007108E0);
      sub_10034E814();
      sub_1001F3A28((uint64_t)v0, &qword_1007108C8);
      sub_10000566C(&qword_100712588);
      type metadata accessor for PipeliningBehavior(0);
      sub_10034E618();
      uint64_t v16 = sub_10034E6B8();
      *(_OWORD *)(v16 + 16) = xmmword_1005F66F0;
      sub_10034E778();
      sub_10034E984();
      goto LABEL_54;
    case 22:
      sub_10000566C(&qword_1007108D8);
      sub_10034EA14();
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v0, 1, v3) != 1)
      {
        sub_1002A0BC0((uint64_t)v0, v2);
        char v60 = sub_100349350(v1);
        swift_bridgeObjectRelease();
        sub_10000566C(&qword_100712588);
        type metadata accessor for PipeliningBehavior(0);
        sub_10034E618();
        uint64_t v62 = *(void *)(v61 + 72);
        unint64_t v64 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
        uint64_t v65 = swift_allocObject();
        if (v60)
        {
          *(_OWORD *)(v65 + 16) = xmmword_1005F6680;
          sub_10034E7B0();
          sub_10034E7C8();
          sub_10034E850();
          sub_1002A0A18(v2, v65 + v64 + 3 * v62);
        }
        else
        {
          *(_OWORD *)(v65 + 16) = xmmword_1005F66F0;
          sub_10034E7B0();
          sub_10034E7C8();
        }
        swift_storeEnumTagMultiPayload();
        sub_10034A880(v65);
        char v71 = &qword_1007108C0;
        uint64_t v72 = v2;
        goto LABEL_76;
      }
      char v35 = sub_100349350(v1);
      swift_bridgeObjectRelease();
      sub_10000566C(&qword_100712588);
      uint64_t v36 = type metadata accessor for PipeliningBehavior(0);
      sub_10034E618();
      uint64_t v38 = *(void *)(v37 + 72);
      sub_10034E764();
      if (v35)
      {
        uint64_t v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = xmmword_1005F6680;
        sub_10034E7B0();
        sub_10034E7C8();
        sub_10034E850();
        if (qword_10070FD80 != -1) {
          swift_once();
        }
        uint64_t v40 = sub_1003461B0(v36, (uint64_t)static PipeliningBehavior.readsFlagsFromAnyMessage);
        sub_100346550(v40, v39 + v6 + 3 * v38, (void (*)(void))type metadata accessor for PipeliningBehavior);
        if (!*(void *)(v39 + 16))
        {
          swift_setDeallocating();
          sub_10034A094((void (*)(void))type metadata accessor for PipeliningBehavior);
          break;
        }
      }
      else
      {
        uint64_t v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = xmmword_1005F66F0;
        sub_10034E7B0();
        sub_10034E7C8();
        sub_10034E850();
      }
      uint64_t v55 = v39;
LABEL_55:
      sub_10034A880(v55);
      break;
    case 23:
      unint64_t v34 = *v0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100349440(v34);
      sub_10000566C(&qword_100712588);
      type metadata accessor for PipeliningBehavior(0);
      sub_10034E618();
      sub_10034E82C();
      uint64_t v41 = (__n128 *)sub_10034E9FC();
      sub_10034E960(v41, (__n128)xmmword_1005F66F0);
      swift_storeEnumTagMultiPayload();
LABEL_37:
      swift_storeEnumTagMultiPayload();
      sub_100347BD4();
      sub_1002239B4(v34);
      break;
    case 24:
      sub_10000566C(&qword_1007108D0);
      sub_10034E814();
      uint64_t v42 = sub_10034EAA8();
      if (getEnumTagSinglePayload for ClientCommand(v42, v43, v3) == 1)
      {
        sub_10000566C(&qword_100712588);
        uint64_t v44 = type metadata accessor for PipeliningBehavior(0);
        sub_10034E618();
        uint64_t v46 = *(void *)(v45 + 72);
        sub_10034E82C();
        uint64_t v47 = 3 * v46;
        if ((v1 & 0x100) != 0)
        {
          uint64_t v48 = swift_allocObject();
          *(_OWORD *)(v48 + 16) = xmmword_1005F6680;
          sub_10034E7B0();
          sub_10034E7C8();
          sub_10034E850();
          uint64_t v52 = v48 + v3 + v47;
          if (qword_10070FD78 != -1) {
            swift_once();
          }
          uint64_t v53 = static PipeliningBehavior.changesFlagsOnAnyMessage;
        }
        else
        {
          uint64_t v48 = swift_allocObject();
          *(_OWORD *)(v48 + 16) = xmmword_1005F66A0;
          uint64_t v49 = v48 + v3;
          sub_10034E7B0();
          sub_10034E7C8();
          sub_10034E850();
          uint64_t v50 = v49 + v47;
          if (qword_10070FD78 != -1) {
            swift_once();
          }
          uint64_t v51 = sub_1003461B0(v44, (uint64_t)static PipeliningBehavior.changesFlagsOnAnyMessage);
          sub_100346550(v51, v50, (void (*)(void))type metadata accessor for PipeliningBehavior);
          uint64_t v52 = v49 + 4 * v46;
          if (qword_10070FD80 != -1) {
            swift_once();
          }
          uint64_t v53 = static PipeliningBehavior.readsFlagsFromAnyMessage;
        }
        uint64_t v73 = sub_1003461B0(v44, (uint64_t)v53);
        sub_100346550(v73, v52, (void (*)(void))type metadata accessor for PipeliningBehavior);
        if (*(void *)(v48 + 16))
        {
          sub_10034A880(v48);
        }
        else
        {
          swift_setDeallocating();
          sub_10034A094((void (*)(void))type metadata accessor for PipeliningBehavior);
        }
        sub_10034E900();
      }
      else
      {
        sub_1002A0BC0((uint64_t)v0, v1);
        sub_10000566C(&qword_100712588);
        type metadata accessor for PipeliningBehavior(0);
        sub_10034E618();
        uint64_t v67 = *(void *)(v66 + 72);
        sub_10034E764();
        uint64_t v68 = 3 * v67;
        uint64_t v69 = swift_allocObject();
        if ((v1 & 0x100) != 0)
        {
          *(_OWORD *)(v69 + 16) = xmmword_1005F6680;
          sub_10034E7B0();
          sub_10034E7C8();
          sub_10034E850();
          sub_1002A0A18(v1, v69 + v6 + v68);
        }
        else
        {
          *(_OWORD *)(v69 + 16) = xmmword_1005F66A0;
          uint64_t v70 = v69 + v6;
          sub_10034E7B0();
          sub_10034E7C8();
          sub_10034E850();
          sub_1002A0A18(v1, v70 + v68);
          swift_storeEnumTagMultiPayload();
          sub_1002A0A18(v1, v70 + 4 * v67);
          sub_10034E950();
        }
        swift_storeEnumTagMultiPayload();
        sub_10034A880(v69);
        sub_10034E900();
        char v71 = &qword_1007108C0;
        uint64_t v72 = v1;
LABEL_76:
        sub_1001F3A28(v72, v71);
      }
      break;
    case 25:
      sub_10000566C(&qword_100712588);
      type metadata accessor for PipeliningBehavior(0);
      sub_10034E618();
      uint64_t v54 = sub_10034E888();
      *(_OWORD *)(v54 + 16) = xmmword_1005F66F0;
      sub_1001F4C24();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_10034A880(v54);
      sub_1003468D8((uint64_t)v0, (void (*)(void))type metadata accessor for Command);
      break;
    case 26:
      goto LABEL_52;
    case 28:
      swift_bridgeObjectRelease();
      goto LABEL_52;
    case 29:
      swift_bridgeObjectRelease();
      goto LABEL_49;
    case 30:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_52:
      swift_release();
      goto LABEL_53;
    case 31:
      unint64_t v56 = *v0;
      uint64_t v57 = v0[5];
      uint64_t v58 = v0[6];
      uint64_t v75 = v0[4];
      sub_100349440(*v0);
      sub_10000566C(&qword_100712588);
      type metadata accessor for PipeliningBehavior(0);
      sub_10034E618();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1005F66F0;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_100347BD4();
      sub_1002239B4(v56);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10024EE94(v75, v57, v58);
      break;
    case 33:
    case 34:
      swift_bridgeObjectRelease();
      sub_10000566C(&qword_100712588);
      type metadata accessor for PipeliningBehavior(0);
      sub_10034E618();
      uint64_t v16 = sub_10034E634();
      sub_10034E83C((__n128 *)v16, (__n128)xmmword_1005F6690);
      swift_storeEnumTagMultiPayload();
      goto LABEL_54;
    case 35:
      goto LABEL_59;
    case 36:
      swift_bridgeObjectRelease();
LABEL_59:
      swift_bridgeObjectRelease();
      goto LABEL_53;
    case 37:
    case 38:
    case 40:
    case 46:
      goto LABEL_53;
    case 39:
    case 41:
    case 43:
LABEL_5:
      sub_10000566C(&qword_100712588);
      type metadata accessor for PipeliningBehavior(0);
      sub_10034E618();
      uint64_t v16 = sub_10034E634();
      *(_OWORD *)(v16 + 16) = xmmword_1005F6690;
      goto LABEL_6;
    case 42:
    case 44:
LABEL_3:
      sub_10000566C(&qword_100712588);
      type metadata accessor for PipeliningBehavior(0);
      sub_10034E618();
      uint64_t v16 = sub_10034E634();
      sub_10034E83C((__n128 *)v16, (__n128)xmmword_1005F6690);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      goto LABEL_54;
    case 45:
      sub_10000566C(&qword_100712588);
      type metadata accessor for PipeliningBehavior(0);
      sub_10034E618();
      uint64_t v16 = sub_10034E6B8();
      sub_10034E83C((__n128 *)v16, (__n128)xmmword_1005F66F0);
      swift_storeEnumTagMultiPayload();
      sub_10034E778();
      goto LABEL_54;
    default:
LABEL_49:
      swift_bridgeObjectRelease();
LABEL_50:
      swift_bridgeObjectRelease();
LABEL_53:
      sub_10000566C(&qword_100712588);
      type metadata accessor for PipeliningBehavior(0);
      sub_10034E618();
      uint64_t v16 = sub_10034E720();
      *(_OWORD *)(v16 + 16) = xmmword_1005F6670;
LABEL_54:
      swift_storeEnumTagMultiPayload();
      uint64_t v55 = v16;
      goto LABEL_55;
  }
  sub_1001FE57C();
}

uint64_t sub_100349350(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  for (i = (unsigned int *)(a1 + 64); ; i += 10)
  {
    if (*((unsigned __int8 *)i + 4) >> 5 >= 6u)
    {
      unint64_t v3 = *i | ((unint64_t)*((unsigned __int8 *)i + 4) << 32);
      uint64_t v4 = *((void *)i - 1);
      uint64_t v5 = *((void *)i - 4);
      uint64_t v6 = *((void *)i - 2) | *((void *)i - 3);
      if (v6 | v5 | v4 || v3 != 0xC000000000)
      {
        uint64_t v8 = v6 | v4;
        BOOL v9 = v3 == 0xC000000000 && v5 == 1;
        if (v9 && v8 == 0) {
          break;
        }
      }
    }
    if (!--v1) {
      return 0;
    }
  }
  return 1;
}

void *sub_100349440(unint64_t a1)
{
  uint64_t v3 = type metadata accessor for PipeliningBehavior(0);
  sub_1001F3BBC();
  __chkstk_darwin(v4);
  sub_10034E934();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v11 = &_swiftEmptySetSingleton;
  if (sub_100349E44(a1))
  {
    sub_10034E9B4();
    swift_storeEnumTagMultiPayload();
    sub_10034BC90((uint64_t)v7, v1);
    sub_1003468D8((uint64_t)v7, (void (*)(void))type metadata accessor for PipeliningBehavior);
  }
  if (sub_100349C30(a1))
  {
    if (qword_10070FD80 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1003461B0(v3, (uint64_t)static PipeliningBehavior.readsFlagsFromAnyMessage);
    sub_100346550(v8, v1, (void (*)(void))type metadata accessor for PipeliningBehavior);
    sub_10034BC90((uint64_t)v7, v1);
    sub_1003468D8((uint64_t)v7, (void (*)(void))type metadata accessor for PipeliningBehavior);
  }
  return v11;
}

unsigned char *sub_1003495B0()
{
  sub_1001F3740(v0, (uint64_t)v9);
  sub_10034E8C8();
  if (!v3) {
    return &_swiftEmptySetSingleton;
  }
  sub_10034E99C();
  BOOL v3 = v3 && v2 == 1;
  if (!v3 || v1 != 0) {
    return &_swiftEmptySetSingleton;
  }
  sub_10000566C(&qword_1007126F8);
  type metadata accessor for PipeliningRequirement(0);
  sub_10034E618();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005F6670;
  uint64_t v7 = sub_10034E9B4();
  sub_1002A0A18(v7, v8);
  sub_1001F4C24();
  swift_storeEnumTagMultiPayload();
  return sub_10034A118(v6);
}

uint64_t sub_100349694(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PipeliningRequirement(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  BOOL v9 = (char *)&v24 - v8;
  uint64_t result = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v24 - v11;
  int64_t v13 = 0;
  uint64_t v14 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(a1 + 56);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  if (!v17) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v19 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v13 << 6))
  {
    sub_100346550(*(void *)(a1 + 48) + *(void *)(v3 + 72) * i, (uint64_t)v12, (void (*)(void))type metadata accessor for PipeliningRequirement);
    sub_10034D8F0((uint64_t)v12, (uint64_t)v6, (void (*)(void))type metadata accessor for PipeliningRequirement);
    sub_10034B6B8((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_1003468D8((uint64_t)v9, (void (*)(void))type metadata accessor for PipeliningRequirement);
    if (v17) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v14 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        return swift_release();
      }
      unint64_t v22 = *(void *)(v14 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          return swift_release();
        }
        unint64_t v22 = *(void *)(v14 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            return swift_release();
          }
          unint64_t v22 = *(void *)(v14 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v17 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v14 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v14 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unsigned char *sub_100349904()
{
  sub_1001F3740(v0, (uint64_t)v12);
  sub_10034E8C8();
  if (v3)
  {
    sub_10034E99C();
    BOOL v3 = v3 && v2 == 1;
    if (v3 && v1 == 0)
    {
      sub_10000566C(&qword_1007126F8);
      uint64_t v5 = type metadata accessor for PipeliningRequirement(0);
      sub_10034E618();
      unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1005F6670;
      uint64_t v9 = v8 + v7;
      if (qword_10070FD68 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1003461B0(v5, (uint64_t)static PipeliningRequirement.noFlagChangesToAnyMessage);
      sub_100346550(v10, v9, (void (*)(void))type metadata accessor for PipeliningRequirement);
      if (*(void *)(v8 + 16)) {
        return sub_10034A118(v8);
      }
      swift_setDeallocating();
      sub_10034A094((void (*)(void))type metadata accessor for PipeliningRequirement);
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_100349A54(unint64_t a1)
{
  unint64_t v2 = (a1 >> 59) & 0x1E | (a1 >> 2) & 1;
  uint64_t result = 0;
  switch(v2)
  {
    case 0xEuLL:
      unint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1002238FC(v4);
      char v5 = sub_100349A54(v4);
      sub_1002239B4(v4);
      return v5 & 1;
    case 0xFuLL:
      uint64_t v6 = a1 & 0xFFFFFFFFFFFFFFBLL;
      unint64_t v8 = *(void *)(v6 + 16);
      unint64_t v7 = *(void *)(v6 + 24);
      sub_1002238FC(v8);
      sub_1002238FC(v7);
      if (sub_100349A54(v8))
      {
        sub_1002239B4(v8);
        sub_1002239B4(v7);
        return 1;
      }
      char v14 = sub_100349A54(v7);
      sub_1002239B4(v8);
      sub_1002239B4(v7);
      return v14 & 1;
    case 0x17uLL:
    case 0x1BuLL:
      return 1;
    case 0x18uLL:
      uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v10 = *(void *)(v9 + 16);
      if (!v10) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v11 = 0;
      break;
    default:
      return result;
  }
  do
  {
    unint64_t v12 = *(void *)(v9 + 8 * v11 + 32);
    sub_1002238FC(v12);
    char v13 = sub_100349A54(v12);
    sub_1002239B4(v12);
    if (v13)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    ++v11;
  }
  while (v10 != v11);
  swift_bridgeObjectRelease();
  return 0;
}

BOOL sub_100349C30(unint64_t a1)
{
  unint64_t v2 = (a1 >> 59) & 0x1E | (a1 >> 2) & 1;
  BOOL result = 0;
  switch(v2)
  {
    case 5uLL:
    case 0xBuLL:
    case 0x1BuLL:
      return 1;
    case 0xEuLL:
      unint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1002238FC(v4);
      char v5 = sub_100349C30(v4);
      sub_1002239B4(v4);
      return v5 & 1;
    case 0xFuLL:
      uint64_t v6 = a1 & 0xFFFFFFFFFFFFFFBLL;
      unint64_t v8 = *(void *)(v6 + 16);
      unint64_t v7 = *(void *)(v6 + 24);
      sub_1002238FC(v8);
      sub_1002238FC(v7);
      if (sub_100349C30(v8))
      {
        sub_1002239B4(v8);
        sub_1002239B4(v7);
        return 1;
      }
      char v14 = sub_100349C30(v7);
      sub_1002239B4(v8);
      sub_1002239B4(v7);
      return v14 & 1;
    case 0x18uLL:
      uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v10 = *(void *)(v9 + 16);
      if (!v10) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v11 = 0;
      break;
    case 0x1CuLL:
      return *(void *)(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20) + 16) != 0;
    case 0x1DuLL:
      return (0x3F8Eu >> ((a1 + 131068) >> 3)) & 1;
    default:
      return result;
  }
  while (1)
  {
    unint64_t v12 = *(void *)(v9 + 8 * v11 + 32);
    sub_1002238FC(v12);
    char v13 = sub_100349C30(v12);
    sub_1002239B4(v12);
    if (v13) {
      break;
    }
    if (v10 == ++v11)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_100349E44(unint64_t a1)
{
  unint64_t v2 = (a1 >> 59) & 0x1E | (a1 >> 2) & 1;
  uint64_t result = 0;
  switch(v2)
  {
    case 0xEuLL:
      unint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1002238FC(v4);
      char v5 = sub_100349E44(v4);
      sub_1002239B4(v4);
      return v5 & 1;
    case 0xFuLL:
      uint64_t v6 = a1 & 0xFFFFFFFFFFFFFFBLL;
      unint64_t v8 = *(void *)(v6 + 16);
      unint64_t v7 = *(void *)(v6 + 24);
      sub_1002238FC(v8);
      sub_1002238FC(v7);
      if (sub_100349E44(v8))
      {
        sub_1002239B4(v8);
        sub_1002239B4(v7);
        return 1;
      }
      char v14 = sub_100349E44(v7);
      sub_1002239B4(v8);
      sub_1002239B4(v7);
      return v14 & 1;
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x1BuLL:
      return 1;
    case 0x18uLL:
      uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v10 = *(void *)(v9 + 16);
      if (!v10) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v11 = 0;
      break;
    default:
      return result;
  }
  do
  {
    unint64_t v12 = *(void *)(v9 + 8 * v11 + 32);
    sub_1002238FC(v12);
    char v13 = sub_100349E44(v12);
    sub_1002239B4(v12);
    if (v13)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    ++v11;
  }
  while (v10 != v11);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10034A020()
{
  return sub_10034A038(&qword_100712708);
}

uint64_t sub_10034A02C()
{
  return sub_10034A038(&qword_100712710);
}

uint64_t sub_10034A038(uint64_t *a1)
{
  sub_10000566C(a1);
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_10034A094(void (*a1)(void))
{
  a1(0);
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

unsigned char *sub_10034A118(uint64_t a1)
{
  uint64_t v66 = sub_10000566C(&qword_100712578);
  __chkstk_darwin(v66);
  BOOL v3 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000566C(&qword_1007108C0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v62 = (uint64_t)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v56 = (uint64_t)&v55 - v8;
  __chkstk_darwin(v7);
  uint64_t v55 = (uint64_t)&v55 - v9;
  uint64_t v10 = type metadata accessor for PipeliningRequirement(0);
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v65 = (uint64_t)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  int64_t v18 = (char *)&v55 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v63 = (uint64_t)&v55 - v20;
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v55 - v21;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v24 = &_swiftEmptySetSingleton;
    goto LABEL_35;
  }
  sub_10000566C(&qword_100712700);
  uint64_t v23 = sub_1005E2C30();
  uint64_t v24 = (unsigned char *)v23;
  uint64_t v59 = *(void *)(a1 + 16);
  if (v59)
  {
    unint64_t v25 = 0;
    uint64_t v26 = v23 + 56;
    uint64_t v27 = *(unsigned __int8 *)(v60 + 80);
    uint64_t v57 = a1;
    uint64_t v58 = a1 + ((v27 + 32) & ~v27);
    uint64_t v61 = v23 + 56;
    while (1)
    {
      if (v25 >= *(void *)(a1 + 16))
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v28 = *(void *)(v60 + 72);
      unint64_t v64 = v25 + 1;
      uint64_t v68 = v28;
      sub_100346550(v58 + v28 * v25, (uint64_t)v22, (void (*)(void))type metadata accessor for PipeliningRequirement);
      sub_1005E33F0();
      sub_100346550((uint64_t)v22, v63, (void (*)(void))type metadata accessor for PipeliningRequirement);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v29 = v55;
          sub_1002A0BC0(v63, v55);
          Swift::UInt v30 = 4;
          goto LABEL_8;
        case 2u:
          Swift::UInt v31 = 0;
          goto LABEL_12;
        case 3u:
          Swift::UInt v31 = 1;
          goto LABEL_12;
        case 4u:
          Swift::UInt v31 = 2;
LABEL_12:
          sub_1005E3410(v31);
          break;
        default:
          uint64_t v29 = v55;
          sub_1002A0BC0(v63, v55);
          Swift::UInt v30 = 3;
LABEL_8:
          sub_1005E3410(v30);
          sub_10000566C(&qword_100710538);
          sub_10022AAC0();
          sub_1005E19C0();
          sub_1001F3A28(v29, &qword_1007108C0);
          break;
      }
      Swift::Int v32 = sub_1005E3470();
      uint64_t v67 = ~(-1 << v24[32]);
      unint64_t v33 = v32 & v67;
      unint64_t v34 = (v32 & (unint64_t)v67) >> 6;
      uint64_t v35 = *(void *)(v26 + 8 * v34);
      uint64_t v36 = 1 << (v32 & v67);
      if ((v36 & v35) == 0)
      {
LABEL_29:
        *(void *)(v26 + 8 * v34) = v36 | v35;
        sub_10034D8F0((uint64_t)v22, *((void *)v24 + 6) + v33 * v68, (void (*)(void))type metadata accessor for PipeliningRequirement);
        uint64_t v51 = *((void *)v24 + 2);
        BOOL v52 = __OFADD__(v51, 1);
        uint64_t v53 = v51 + 1;
        if (!v52)
        {
          *((void *)v24 + 2) = v53;
          goto LABEL_32;
        }
LABEL_37:
        __break(1u);
        JUMPOUT(0x10034A858);
      }
      while (2)
      {
        sub_100346550(*((void *)v24 + 6) + v33 * v68, (uint64_t)v18, (void (*)(void))type metadata accessor for PipeliningRequirement);
        uint64_t v37 = (uint64_t)&v3[*(int *)(v66 + 48)];
        sub_100346550((uint64_t)v18, (uint64_t)v3, (void (*)(void))type metadata accessor for PipeliningRequirement);
        sub_100346550((uint64_t)v22, v37, (void (*)(void))type metadata accessor for PipeliningRequirement);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v43 = v65;
            sub_100346550((uint64_t)v3, v65, (void (*)(void))type metadata accessor for PipeliningRequirement);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v39 = v43;
            if (EnumCaseMultiPayload != 1) {
              goto LABEL_21;
            }
            uint64_t v45 = v62;
            sub_1002A0BC0(v37, v62);
            sub_100223B18();
            uint64_t v46 = v10;
            uint64_t v47 = v22;
            uint64_t v48 = v24;
            uint64_t v49 = v15;
            uint64_t v50 = v65;
            char v41 = sub_1005E35A0();
            sub_1001F3A28(v45, &qword_1007108C0);
            uint64_t v42 = v50;
            uint64_t v15 = v49;
            uint64_t v24 = v48;
            unint64_t v22 = v47;
            uint64_t v10 = v46;
            uint64_t v26 = v61;
            goto LABEL_19;
          case 2u:
            if (swift_getEnumCaseMultiPayload() == 2) {
              goto LABEL_31;
            }
            goto LABEL_27;
          case 3u:
            if (swift_getEnumCaseMultiPayload() == 3) {
              goto LABEL_31;
            }
            goto LABEL_27;
          case 4u:
            if (swift_getEnumCaseMultiPayload() != 4) {
              goto LABEL_27;
            }
            goto LABEL_31;
          default:
            sub_100346550((uint64_t)v3, (uint64_t)v15, (void (*)(void))type metadata accessor for PipeliningRequirement);
            int v38 = swift_getEnumCaseMultiPayload();
            uint64_t v39 = (uint64_t)v15;
            if (v38)
            {
LABEL_21:
              sub_1001F3A28(v39, &qword_1007108C0);
LABEL_27:
              sub_1001F3A28((uint64_t)v3, &qword_100712578);
              goto LABEL_28;
            }
            uint64_t v40 = v56;
            sub_1002A0BC0(v37, v56);
            sub_100223B18();
            char v41 = sub_1005E35A0();
            sub_1001F3A28(v40, &qword_1007108C0);
            uint64_t v42 = (uint64_t)v15;
LABEL_19:
            sub_1001F3A28(v42, &qword_1007108C0);
            if ((v41 & 1) == 0)
            {
              sub_1003468D8((uint64_t)v3, (void (*)(void))type metadata accessor for PipeliningRequirement);
LABEL_28:
              sub_1003468D8((uint64_t)v18, (void (*)(void))type metadata accessor for PipeliningRequirement);
              unint64_t v33 = (v33 + 1) & v67;
              unint64_t v34 = v33 >> 6;
              uint64_t v35 = *(void *)(v26 + 8 * (v33 >> 6));
              uint64_t v36 = 1 << v33;
              if ((v35 & (1 << v33)) == 0) {
                goto LABEL_29;
              }
              continue;
            }
LABEL_31:
            sub_1003468D8((uint64_t)v3, (void (*)(void))type metadata accessor for PipeliningRequirement);
            sub_1003468D8((uint64_t)v18, (void (*)(void))type metadata accessor for PipeliningRequirement);
            sub_1003468D8((uint64_t)v22, (void (*)(void))type metadata accessor for PipeliningRequirement);
LABEL_32:
            unint64_t v25 = v64;
            a1 = v57;
            if (v64 == v59) {
              goto LABEL_35;
            }
            break;
        }
        break;
      }
    }
  }
LABEL_35:
  swift_bridgeObjectRelease();
  return v24;
}

unsigned char *sub_10034A880(uint64_t a1)
{
  uint64_t v64 = sub_10000566C(&qword_100712580);
  __chkstk_darwin(v64);
  BOOL v3 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000566C(&qword_1007108C0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v55 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v54 = (uint64_t)&v53 - v8;
  __chkstk_darwin(v7);
  uint64_t v53 = (uint64_t)&v53 - v9;
  uint64_t v10 = type metadata accessor for PipeliningBehavior(0);
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v63 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v53 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  int64_t v18 = (char *)&v53 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v61 = (uint64_t)&v53 - v20;
  __chkstk_darwin(v19);
  uint64_t v56 = (char *)&v53 - v21;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v23 = &_swiftEmptySetSingleton;
    goto LABEL_41;
  }
  sub_10000566C(&qword_1007126F0);
  uint64_t v22 = sub_1005E2C30();
  uint64_t v23 = (unsigned char *)v22;
  uint64_t v59 = *(void *)(a1 + 16);
  if (v59)
  {
    unint64_t v24 = 0;
    uint64_t v65 = v22 + 56;
    uint64_t v25 = *(unsigned __int8 *)(v60 + 80);
    uint64_t v57 = a1;
    uint64_t v58 = a1 + ((v25 + 32) & ~v25);
    uint64_t v26 = (uint64_t)v56;
    while (1)
    {
      if (v24 >= *(void *)(a1 + 16))
      {
        __break(1u);
        goto LABEL_43;
      }
      uint64_t v27 = *(void *)(v60 + 72);
      unint64_t v62 = v24 + 1;
      uint64_t v66 = v27;
      sub_100346550(v58 + v27 * v24, v26, (void (*)(void))type metadata accessor for PipeliningBehavior);
      sub_1005E33F0();
      sub_100346550(v26, v61, (void (*)(void))type metadata accessor for PipeliningBehavior);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v28 = v53;
          sub_1002A0BC0(v61, v53);
          Swift::UInt v29 = 5;
          goto LABEL_8;
        case 2u:
          Swift::UInt v30 = 0;
          goto LABEL_14;
        case 3u:
          Swift::UInt v30 = 1;
          goto LABEL_14;
        case 4u:
          Swift::UInt v30 = 2;
          goto LABEL_14;
        case 5u:
          Swift::UInt v30 = 3;
          goto LABEL_14;
        case 6u:
          Swift::UInt v30 = 6;
LABEL_14:
          sub_1005E3410(v30);
          break;
        default:
          uint64_t v28 = v53;
          sub_1002A0BC0(v61, v53);
          Swift::UInt v29 = 4;
LABEL_8:
          sub_1005E3410(v29);
          sub_10000566C(&qword_100710538);
          sub_10022AAC0();
          sub_1005E19C0();
          sub_1001F3A28(v28, &qword_1007108C0);
          break;
      }
      Swift::Int v31 = sub_1005E3470();
      uint64_t v32 = ~(-1 << v23[32]);
      unint64_t v33 = v31 & v32;
      unint64_t v34 = (v31 & (unint64_t)v32) >> 6;
      uint64_t v35 = *(void *)(v65 + 8 * v34);
      uint64_t v36 = 1 << (v31 & v32);
      if ((v36 & v35) == 0)
      {
LABEL_35:
        *(void *)(v65 + 8 * v34) = v36 | v35;
        sub_10034D8F0(v26, *((void *)v23 + 6) + v33 * v66, (void (*)(void))type metadata accessor for PipeliningBehavior);
        uint64_t v49 = *((void *)v23 + 2);
        BOOL v50 = __OFADD__(v49, 1);
        uint64_t v51 = v49 + 1;
        if (!v50)
        {
          *((void *)v23 + 2) = v51;
          goto LABEL_38;
        }
LABEL_43:
        __break(1u);
        JUMPOUT(0x10034B000);
      }
      while (2)
      {
        sub_100346550(*((void *)v23 + 6) + v33 * v66, (uint64_t)v18, (void (*)(void))type metadata accessor for PipeliningBehavior);
        uint64_t v37 = (uint64_t)&v3[*(int *)(v64 + 48)];
        sub_100346550((uint64_t)v18, (uint64_t)v3, (void (*)(void))type metadata accessor for PipeliningBehavior);
        sub_100346550(v26, v37, (void (*)(void))type metadata accessor for PipeliningBehavior);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v43 = v63;
            sub_100346550((uint64_t)v3, v63, (void (*)(void))type metadata accessor for PipeliningBehavior);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v39 = v43;
            if (EnumCaseMultiPayload != 1) {
              goto LABEL_23;
            }
            uint64_t v45 = v55;
            sub_1002A0BC0(v37, v55);
            sub_100223B18();
            uint64_t v46 = v23;
            uint64_t v47 = v15;
            uint64_t v48 = v63;
            char v41 = sub_1005E35A0();
            sub_1001F3A28(v45, &qword_1007108C0);
            uint64_t v42 = v48;
            uint64_t v15 = v47;
            uint64_t v23 = v46;
            uint64_t v26 = (uint64_t)v56;
            goto LABEL_21;
          case 2u:
            if (swift_getEnumCaseMultiPayload() == 2) {
              goto LABEL_37;
            }
            goto LABEL_33;
          case 3u:
            if (swift_getEnumCaseMultiPayload() == 3) {
              goto LABEL_37;
            }
            goto LABEL_33;
          case 4u:
            if (swift_getEnumCaseMultiPayload() == 4) {
              goto LABEL_37;
            }
            goto LABEL_33;
          case 5u:
            if (swift_getEnumCaseMultiPayload() == 5) {
              goto LABEL_37;
            }
            goto LABEL_33;
          case 6u:
            if (swift_getEnumCaseMultiPayload() != 6) {
              goto LABEL_33;
            }
            goto LABEL_37;
          default:
            sub_100346550((uint64_t)v3, (uint64_t)v15, (void (*)(void))type metadata accessor for PipeliningBehavior);
            int v38 = swift_getEnumCaseMultiPayload();
            uint64_t v39 = (uint64_t)v15;
            if (v38)
            {
LABEL_23:
              sub_1001F3A28(v39, &qword_1007108C0);
LABEL_33:
              sub_1001F3A28((uint64_t)v3, &qword_100712580);
              goto LABEL_34;
            }
            uint64_t v40 = v54;
            sub_1002A0BC0(v37, v54);
            sub_100223B18();
            char v41 = sub_1005E35A0();
            sub_1001F3A28(v40, &qword_1007108C0);
            uint64_t v42 = (uint64_t)v15;
LABEL_21:
            sub_1001F3A28(v42, &qword_1007108C0);
            if ((v41 & 1) == 0)
            {
              sub_1003468D8((uint64_t)v3, (void (*)(void))type metadata accessor for PipeliningBehavior);
LABEL_34:
              sub_1003468D8((uint64_t)v18, (void (*)(void))type metadata accessor for PipeliningBehavior);
              unint64_t v33 = (v33 + 1) & v32;
              unint64_t v34 = v33 >> 6;
              uint64_t v35 = *(void *)(v65 + 8 * (v33 >> 6));
              uint64_t v36 = 1 << v33;
              if ((v35 & (1 << v33)) == 0) {
                goto LABEL_35;
              }
              continue;
            }
LABEL_37:
            sub_1003468D8((uint64_t)v3, (void (*)(void))type metadata accessor for PipeliningBehavior);
            sub_1003468D8((uint64_t)v18, (void (*)(void))type metadata accessor for PipeliningBehavior);
            sub_1003468D8(v26, (void (*)(void))type metadata accessor for PipeliningBehavior);
LABEL_38:
            unint64_t v24 = v62;
            a1 = v57;
            if (v62 == v59) {
              goto LABEL_41;
            }
            break;
        }
        break;
      }
    }
  }
LABEL_41:
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_10034B038()
{
  return sub_10034B0C8(&qword_100712590, (void (*)(uint64_t))type metadata accessor for PipeliningRequirement);
}

uint64_t sub_10034B080()
{
  return sub_10034B0C8(&qword_100712598, (void (*)(uint64_t))type metadata accessor for PipeliningBehavior);
}

uint64_t sub_10034B0C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t assignWithCopy for PipeliningRequirement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10034B3B4(a1, a2, a3, (void (*)(void))type metadata accessor for PipeliningRequirement);
}

uint64_t assignWithTake for PipeliningRequirement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10034B55C(a1, a2, a3, (void (*)(void))type metadata accessor for PipeliningRequirement);
}

uint64_t *_s12NIOIMAPCore221PipeliningRequirementOwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = *(void *)(a3 - 8);
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      sub_10000566C(&qword_100710538);
      sub_1001F3BBC();
      uint64_t v11 = sub_10034E65C();
      v12(v11);
      sub_10034E7A0();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        sub_10034E9C0(EnumCaseMultiPayload, v7, *(void *)(v5 + 64));
        return a1;
      }
      sub_10000566C(&qword_100710538);
      sub_1001F3BBC();
      uint64_t v8 = sub_10034E65C();
      v9(v8);
      sub_10034E790();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s12NIOIMAPCore221PipeliningRequirementOwxx_0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    sub_10000566C(&qword_100710538);
    sub_1001F3BBC();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
    return v5(a1, v3);
  }
  return result;
}

uint64_t _s12NIOIMAPCore221PipeliningRequirementOwcp_0()
{
  uint64_t v2 = sub_10034E9D8();
  if (v2 == 1)
  {
    sub_10000566C(&qword_100710538);
    sub_1001F3BBC();
    uint64_t v6 = sub_10034E65C();
    v7(v6);
    sub_10034E7A0();
  }
  else
  {
    if (v2)
    {
      sub_10034E9C0(v2, v3, *(void *)(*(void *)(v1 - 8) + 64));
      return v0;
    }
    sub_10000566C(&qword_100710538);
    sub_1001F3BBC();
    uint64_t v4 = sub_10034E65C();
    v5(v4);
    sub_10034E790();
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for PipeliningBehavior(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10034B3B4(a1, a2, a3, (void (*)(void))type metadata accessor for PipeliningBehavior);
}

uint64_t sub_10034B3B4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a1 != a2)
  {
    sub_10034EB08(a1, a2, a3, a4);
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      sub_10000566C(&qword_100710538);
      sub_1001F3BBC();
      uint64_t v10 = sub_10034E65C();
      v11(v10);
      sub_10034E7A0();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        sub_10034E9C0(EnumCaseMultiPayload, v7, *(void *)(*(void *)(v4 - 8) + 64));
        return a1;
      }
      sub_10000566C(&qword_100710538);
      sub_1001F3BBC();
      uint64_t v8 = sub_10034E65C();
      v9(v8);
      sub_10034E790();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s12NIOIMAPCore221PipeliningRequirementOwtk_0()
{
  uint64_t v2 = sub_10034E9D8();
  if (v2 == 1)
  {
    sub_10000566C(&qword_100710538);
    sub_1001F3BBC();
    uint64_t v6 = sub_100298C70();
    v7(v6);
    sub_10034E7A0();
  }
  else
  {
    if (v2)
    {
      sub_10034E9C0(v2, v3, *(void *)(*(void *)(v1 - 8) + 64));
      return v0;
    }
    sub_10000566C(&qword_100710538);
    sub_1001F3BBC();
    uint64_t v4 = sub_100298C70();
    v5(v4);
    sub_10034E790();
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for PipeliningBehavior(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10034B55C(a1, a2, a3, (void (*)(void))type metadata accessor for PipeliningBehavior);
}

uint64_t sub_10034B55C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a1 != a2)
  {
    sub_10034EB08(a1, a2, a3, a4);
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      sub_10000566C(&qword_100710538);
      sub_1001F3BBC();
      uint64_t v10 = sub_100298C70();
      v11(v10);
      sub_10034E7A0();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        sub_10034E9C0(EnumCaseMultiPayload, v7, *(void *)(*(void *)(v4 - 8) + 64));
        return a1;
      }
      sub_10000566C(&qword_100710538);
      sub_1001F3BBC();
      uint64_t v8 = sub_100298C70();
      v9(v8);
      sub_10034E790();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_10034B630()
{
  sub_10027AC38();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t sub_10034B6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000566C(&qword_1007108C0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v46 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v45 = (uint64_t)&v40 - v9;
  uint64_t v50 = sub_10000566C(&qword_100712578);
  __chkstk_darwin(v50);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PipeliningRequirement(0);
  uint64_t v44 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v47 = (uint64_t)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v49 = (uint64_t)&v40 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v40 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v40 - v20;
  uint64_t v22 = *v3;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  uint64_t v51 = a2;
  PipeliningRequirement.hash(into:)();
  Swift::Int v23 = sub_1005E3470();
  uint64_t v24 = -1 << *(unsigned char *)(v22 + 32);
  unint64_t v25 = v23 & ~v24;
  if (((*(void *)(v22 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  char v41 = v21;
  uint64_t v42 = v3;
  uint64_t v43 = a1;
  uint64_t v48 = ~v24;
  uint64_t v26 = *(void *)(v44 + 72);
  while (2)
  {
    sub_100346550(*(void *)(v22 + 48) + v26 * v25, (uint64_t)v19, (void (*)(void))type metadata accessor for PipeliningRequirement);
    uint64_t v27 = (uint64_t)&v11[*(int *)(v50 + 48)];
    sub_100346550((uint64_t)v19, (uint64_t)v11, (void (*)(void))type metadata accessor for PipeliningRequirement);
    sub_100346550(v51, v27, (void (*)(void))type metadata accessor for PipeliningRequirement);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v29 = v49;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v34 = v47;
        sub_100346550((uint64_t)v11, v47, (void (*)(void))type metadata accessor for PipeliningRequirement);
        int v35 = swift_getEnumCaseMultiPayload();
        uint64_t v31 = v34;
        if (v35 != 1) {
          goto LABEL_10;
        }
        uint64_t v36 = v27;
        uint64_t v33 = v46;
        sub_1002A0BC0(v36, v46);
        sub_100223B18();
        uint64_t v29 = v47;
        goto LABEL_8;
      case 2:
        if (swift_getEnumCaseMultiPayload() == 2) {
          goto LABEL_22;
        }
        goto LABEL_16;
      case 3:
        if (swift_getEnumCaseMultiPayload() == 3) {
          goto LABEL_22;
        }
        goto LABEL_16;
      case 4:
        if (swift_getEnumCaseMultiPayload() != 4) {
          goto LABEL_16;
        }
        goto LABEL_22;
      default:
        sub_100346550((uint64_t)v11, v49, (void (*)(void))type metadata accessor for PipeliningRequirement);
        int v30 = swift_getEnumCaseMultiPayload();
        uint64_t v31 = v29;
        if (v30)
        {
LABEL_10:
          sub_1001F3A28(v31, &qword_1007108C0);
LABEL_16:
          sub_1001F3A28((uint64_t)v11, &qword_100712578);
          goto LABEL_17;
        }
        uint64_t v32 = v27;
        uint64_t v33 = v45;
        sub_1002A0BC0(v32, v45);
        sub_100223B18();
LABEL_8:
        if ((sub_1005E35A0() & 1) == 0)
        {
          sub_1001F3A28(v33, &qword_1007108C0);
          sub_1001F3A28(v29, &qword_1007108C0);
          sub_1003468D8((uint64_t)v11, (void (*)(void))type metadata accessor for PipeliningRequirement);
LABEL_17:
          sub_1003468D8((uint64_t)v19, (void (*)(void))type metadata accessor for PipeliningRequirement);
          unint64_t v25 = (v25 + 1) & v48;
          if (((*(void *)(v22 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v3 = v42;
            a1 = v43;
            uint64_t v21 = v41;
LABEL_20:
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v38 = v51;
            sub_100346550(v51, (uint64_t)v21, (void (*)(void))type metadata accessor for PipeliningRequirement);
            uint64_t v52 = *v3;
            *uint64_t v3 = 0x8000000000000000;
            sub_10034CD30((uint64_t)v21, v25, isUniquelyReferenced_nonNull_native);
            *uint64_t v3 = v52;
            swift_bridgeObjectRelease();
            sub_10034D8F0(v38, a1, (void (*)(void))type metadata accessor for PipeliningRequirement);
            return 1;
          }
          continue;
        }
        sub_1001F3A28(v33, &qword_1007108C0);
        sub_1001F3A28(v29, &qword_1007108C0);
LABEL_22:
        sub_1003468D8((uint64_t)v11, (void (*)(void))type metadata accessor for PipeliningRequirement);
        sub_1003468D8((uint64_t)v19, (void (*)(void))type metadata accessor for PipeliningRequirement);
        swift_bridgeObjectRelease();
        sub_1003468D8(v51, (void (*)(void))type metadata accessor for PipeliningRequirement);
        sub_100346550(*(void *)(*v42 + 48) + v26 * v25, v43, (void (*)(void))type metadata accessor for PipeliningRequirement);
        return 0;
    }
  }
}

uint64_t sub_10034BC90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000566C(&qword_1007108C0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  char v41 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v38 - v9;
  uint64_t v46 = sub_10000566C(&qword_100712580);
  __chkstk_darwin(v46);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PipeliningBehavior(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v43 = (uint64_t)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v42 = (uint64_t)&v38 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v38 - v20;
  __chkstk_darwin(v19);
  uint64_t v40 = (uint64_t)&v38 - v22;
  uint64_t v23 = *v3;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  uint64_t v47 = a2;
  PipeliningBehavior.hash(into:)();
  Swift::Int v24 = sub_1005E3470();
  uint64_t v25 = -1 << *(unsigned char *)(v23 + 32);
  unint64_t v26 = v24 & ~v25;
  if ((*(void *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26))
  {
    uint64_t v38 = v3;
    uint64_t v39 = a1;
    uint64_t v44 = ~v25;
    uint64_t v45 = *(void *)(v14 + 72);
    while (1)
    {
      uint64_t v27 = (uint64_t)v10;
      unint64_t v28 = v45 * v26;
      sub_100346550(*(void *)(v23 + 48) + v45 * v26, (uint64_t)v21, (void (*)(void))type metadata accessor for PipeliningBehavior);
      uint64_t v29 = (uint64_t)&v12[*(int *)(v46 + 48)];
      sub_100346550((uint64_t)v21, (uint64_t)v12, (void (*)(void))type metadata accessor for PipeliningBehavior);
      sub_100346550(v47, v29, (void (*)(void))type metadata accessor for PipeliningBehavior);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v30 = v43;
          sub_100346550((uint64_t)v12, v43, (void (*)(void))type metadata accessor for PipeliningBehavior);
          if (swift_getEnumCaseMultiPayload() != 1) {
            goto LABEL_10;
          }
          uint64_t v33 = v29;
          uint64_t v10 = v41;
          sub_1002A0BC0(v33, (uint64_t)v41);
          sub_100223B18();
          uint64_t v32 = v43;
          if (sub_1005E35A0()) {
            goto LABEL_26;
          }
          sub_1001F3A28((uint64_t)v10, &qword_1007108C0);
          sub_1001F3A28(v32, &qword_1007108C0);
          sub_1003468D8((uint64_t)v12, (void (*)(void))type metadata accessor for PipeliningBehavior);
          goto LABEL_21;
        case 2u:
          if (swift_getEnumCaseMultiPayload() == 2) {
            goto LABEL_27;
          }
          goto LABEL_20;
        case 3u:
          if (swift_getEnumCaseMultiPayload() == 3) {
            goto LABEL_27;
          }
          goto LABEL_20;
        case 4u:
          if (swift_getEnumCaseMultiPayload() == 4) {
            goto LABEL_27;
          }
          goto LABEL_20;
        case 5u:
          if (swift_getEnumCaseMultiPayload() == 5) {
            goto LABEL_27;
          }
          goto LABEL_20;
        case 6u:
          if (swift_getEnumCaseMultiPayload() != 6) {
            goto LABEL_20;
          }
          goto LABEL_27;
        default:
          uint64_t v30 = v42;
          sub_100346550((uint64_t)v12, v42, (void (*)(void))type metadata accessor for PipeliningBehavior);
          if (swift_getEnumCaseMultiPayload())
          {
LABEL_10:
            sub_1001F3A28(v30, &qword_1007108C0);
LABEL_20:
            sub_1001F3A28((uint64_t)v12, &qword_100712580);
LABEL_21:
            uint64_t v10 = (char *)v27;
          }
          else
          {
            uint64_t v31 = v29;
            uint64_t v10 = (char *)v27;
            sub_1002A0BC0(v31, v27);
            sub_100223B18();
            uint64_t v32 = v42;
            if (sub_1005E35A0())
            {
LABEL_26:
              sub_1001F3A28((uint64_t)v10, &qword_1007108C0);
              sub_1001F3A28(v32, &qword_1007108C0);
LABEL_27:
              sub_1003468D8((uint64_t)v12, (void (*)(void))type metadata accessor for PipeliningBehavior);
              sub_1003468D8((uint64_t)v21, (void (*)(void))type metadata accessor for PipeliningBehavior);
              swift_bridgeObjectRelease();
              sub_1003468D8(v47, (void (*)(void))type metadata accessor for PipeliningBehavior);
              sub_100346550(*(void *)(*v38 + 48) + v28, v39, (void (*)(void))type metadata accessor for PipeliningBehavior);
              return 0;
            }
            sub_1001F3A28(v27, &qword_1007108C0);
            sub_1001F3A28(v32, &qword_1007108C0);
            sub_1003468D8((uint64_t)v12, (void (*)(void))type metadata accessor for PipeliningBehavior);
          }
          sub_1003468D8((uint64_t)v21, (void (*)(void))type metadata accessor for PipeliningBehavior);
          unint64_t v26 = (v26 + 1) & v44;
          if (((*(void *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v3 = v38;
            a1 = v39;
            goto LABEL_25;
          }
          break;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_25:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v35 = v47;
  uint64_t v36 = v40;
  sub_100346550(v47, v40, (void (*)(void))type metadata accessor for PipeliningBehavior);
  uint64_t v48 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_10034D2F4(v36, v26, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v48;
  swift_bridgeObjectRelease();
  sub_10034D8F0(v35, a1, (void (*)(void))type metadata accessor for PipeliningBehavior);
  return 1;
}

uint64_t sub_10034C2FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_1007108C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PipeliningRequirement(0);
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = *v0;
  sub_10000566C(&qword_100712700);
  uint64_t v12 = v11;
  uint64_t v13 = sub_1005E2C10();
  uint64_t v14 = v13;
  if (*(void *)(v12 + 16))
  {
    char v41 = v0;
    uint64_t v15 = 1 << *(unsigned char *)(v12 + 32);
    uint64_t v16 = *(void *)(v12 + 56);
    uint64_t v44 = (void *)(v12 + 56);
    if (v15 < 64) {
      uint64_t v17 = ~(-1 << v15);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v18 = v17 & v16;
    int64_t v43 = (unint64_t)(v15 + 63) >> 6;
    uint64_t v19 = v13 + 56;
    swift_retain();
    int64_t v20 = 0;
    uint64_t v42 = v12;
    if (!v18) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v22 = v21 | (v20 << 6);
LABEL_21:
      uint64_t v26 = *(void *)(v45 + 72);
      sub_10034D8F0(*(void *)(v12 + 48) + v26 * v22, (uint64_t)v10, (void (*)(void))type metadata accessor for PipeliningRequirement);
      sub_1005E33F0();
      sub_100346550((uint64_t)v10, (uint64_t)v8, (void (*)(void))type metadata accessor for PipeliningRequirement);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_1002A0BC0((uint64_t)v8, (uint64_t)v4);
          Swift::UInt v27 = 4;
          goto LABEL_24;
        case 2u:
          Swift::UInt v28 = 0;
          goto LABEL_28;
        case 3u:
          Swift::UInt v28 = 1;
          goto LABEL_28;
        case 4u:
          Swift::UInt v28 = 2;
LABEL_28:
          sub_1005E3410(v28);
          break;
        default:
          sub_1002A0BC0((uint64_t)v8, (uint64_t)v4);
          Swift::UInt v27 = 3;
LABEL_24:
          sub_1005E3410(v27);
          sub_10000566C(&qword_100710538);
          sub_10022AAC0();
          uint64_t v12 = v42;
          sub_1005E19C0();
          sub_1001F3A28((uint64_t)v4, &qword_1007108C0);
          break;
      }
      Swift::Int v29 = sub_1005E3470();
      uint64_t v30 = -1 << *(unsigned char *)(v14 + 32);
      unint64_t v31 = v29 & ~v30;
      unint64_t v32 = v31 >> 6;
      if (((-1 << v31) & ~*(void *)(v19 + 8 * (v31 >> 6))) != 0)
      {
        unint64_t v33 = __clz(__rbit64((-1 << v31) & ~*(void *)(v19 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_38;
      }
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        BOOL v36 = v32 == v35;
        if (v32 == v35) {
          unint64_t v32 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v19 + 8 * v32);
      }
      while (v37 == -1);
      unint64_t v33 = __clz(__rbit64(~v37)) + (v32 << 6);
LABEL_38:
      *(void *)(v19 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
      sub_10034D8F0((uint64_t)v10, *(void *)(v14 + 48) + v33 * v26, (void (*)(void))type metadata accessor for PipeliningRequirement);
      ++*(void *)(v14 + 16);
      if (v18) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      goto LABEL_46;
    }
    if (v23 < v43)
    {
      unint64_t v24 = v44[v23];
      ++v20;
      if (v24) {
        goto LABEL_20;
      }
      int64_t v20 = v23 + 1;
      if (v23 + 1 < v43)
      {
        unint64_t v24 = v44[v20];
        if (v24) {
          goto LABEL_20;
        }
        int64_t v20 = v23 + 2;
        if (v23 + 2 < v43)
        {
          unint64_t v24 = v44[v20];
          if (v24) {
            goto LABEL_20;
          }
          int64_t v25 = v23 + 3;
          if (v25 < v43)
          {
            unint64_t v24 = v44[v25];
            if (v24)
            {
              int64_t v20 = v25;
LABEL_20:
              unint64_t v18 = (v24 - 1) & v24;
              unint64_t v22 = __clz(__rbit64(v24)) + (v20 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v20 = v25 + 1;
              if (__OFADD__(v25, 1)) {
                break;
              }
              if (v20 >= v43) {
                goto LABEL_40;
              }
              unint64_t v24 = v44[v20];
              ++v25;
              if (v24) {
                goto LABEL_20;
              }
            }
LABEL_47:
            __break(1u);
            JUMPOUT(0x10034C7E8);
          }
        }
      }
    }
LABEL_40:
    swift_release();
    uint64_t v1 = v41;
    uint64_t v38 = 1 << *(unsigned char *)(v12 + 32);
    if (v38 > 63) {
      sub_10034D950(0, (unint64_t)(v38 + 63) >> 6, v44);
    }
    else {
      *uint64_t v44 = -1 << v38;
    }
    *(void *)(v12 + 16) = 0;
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v14;
  return result;
}

uint64_t sub_10034C7FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_1007108C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v41 = (uint64_t)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for PipeliningBehavior(0);
  uint64_t v45 = *(void *)(v42 - 8);
  uint64_t v4 = __chkstk_darwin(v42);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v39 - v7;
  uint64_t v9 = *v0;
  sub_10000566C(&qword_1007126F0);
  uint64_t v10 = sub_1005E2C10();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v39 = v0;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 56);
    uint64_t v44 = (void *)(v9 + 56);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v43 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v16 = v10 + 56;
    swift_retain();
    int64_t v17 = 0;
    uint64_t v40 = v9;
    if (!v15) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v19 = v18 | (v17 << 6);
LABEL_21:
      uint64_t v23 = *(void *)(v45 + 72);
      sub_10034D8F0(*(void *)(v9 + 48) + v23 * v19, (uint64_t)v8, (void (*)(void))type metadata accessor for PipeliningBehavior);
      sub_1005E33F0();
      sub_100346550((uint64_t)v8, (uint64_t)v6, (void (*)(void))type metadata accessor for PipeliningBehavior);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v24 = v41;
          sub_1002A0BC0((uint64_t)v6, v41);
          Swift::UInt v25 = 5;
          goto LABEL_24;
        case 2u:
          Swift::UInt v27 = 0;
          goto LABEL_30;
        case 3u:
          Swift::UInt v27 = 1;
          goto LABEL_30;
        case 4u:
          Swift::UInt v27 = 2;
          goto LABEL_30;
        case 5u:
          Swift::UInt v27 = 3;
          goto LABEL_30;
        case 6u:
          Swift::UInt v27 = 6;
LABEL_30:
          sub_1005E3410(v27);
          break;
        default:
          uint64_t v24 = v41;
          sub_1002A0BC0((uint64_t)v6, v41);
          Swift::UInt v25 = 4;
LABEL_24:
          sub_1005E3410(v25);
          sub_10000566C(&qword_100710538);
          sub_10022AAC0();
          sub_1005E19C0();
          uint64_t v26 = v24;
          uint64_t v9 = v40;
          sub_1001F3A28(v26, &qword_1007108C0);
          break;
      }
      Swift::Int v28 = sub_1005E3470();
      uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v30 = v28 & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v32 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_40;
      }
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
        BOOL v35 = v31 == v34;
        if (v31 == v34) {
          unint64_t v31 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v16 + 8 * v31);
      }
      while (v36 == -1);
      unint64_t v32 = __clz(__rbit64(~v36)) + (v31 << 6);
LABEL_40:
      *(void *)(v16 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
      sub_10034D8F0((uint64_t)v8, *(void *)(v11 + 48) + v32 * v23, (void (*)(void))type metadata accessor for PipeliningBehavior);
      ++*(void *)(v11 + 16);
      if (v15) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v20 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      goto LABEL_48;
    }
    if (v20 < v43)
    {
      unint64_t v21 = v44[v20];
      ++v17;
      if (v21) {
        goto LABEL_20;
      }
      int64_t v17 = v20 + 1;
      if (v20 + 1 < v43)
      {
        unint64_t v21 = v44[v17];
        if (v21) {
          goto LABEL_20;
        }
        int64_t v17 = v20 + 2;
        if (v20 + 2 < v43)
        {
          unint64_t v21 = v44[v17];
          if (v21) {
            goto LABEL_20;
          }
          int64_t v22 = v20 + 3;
          if (v22 < v43)
          {
            unint64_t v21 = v44[v22];
            if (v21)
            {
              int64_t v17 = v22;
LABEL_20:
              unint64_t v15 = (v21 - 1) & v21;
              unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v17 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                break;
              }
              if (v17 >= v43) {
                goto LABEL_42;
              }
              unint64_t v21 = v44[v17];
              ++v22;
              if (v21) {
                goto LABEL_20;
              }
            }
LABEL_49:
            __break(1u);
            JUMPOUT(0x10034CD14);
          }
        }
      }
    }
LABEL_42:
    swift_release();
    uint64_t v1 = v39;
    uint64_t v37 = 1 << *(unsigned char *)(v9 + 32);
    if (v37 > 63) {
      sub_10034D950(0, (unint64_t)(v37 + 63) >> 6, v44);
    }
    else {
      *uint64_t v44 = -1 << v37;
    }
    *(void *)(v9 + 16) = 0;
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v11;
  return result;
}

uint64_t sub_10034CD30(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v55 = a1;
  uint64_t v6 = sub_10000566C(&qword_1007108C0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v47 - v10;
  uint64_t v54 = sub_10000566C(&qword_100712578);
  __chkstk_darwin(v54);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PipeliningRequirement(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v52 = (uint64_t)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v51 = (char *)&v47 - v19;
  __chkstk_darwin(v18);
  unint64_t v21 = (char *)&v47 - v20;
  unint64_t v22 = *(void *)(*v3 + 16);
  unint64_t v23 = *(void *)(*v3 + 24);
  uint64_t v49 = v15;
  uint64_t v50 = v3;
  if (v23 <= v22 || (a3 & 1) == 0)
  {
    if (a3)
    {
      uint64_t v47 = v11;
      sub_10034C2FC();
    }
    else
    {
      if (v23 > v22)
      {
        sub_10034D96C();
        goto LABEL_26;
      }
      uint64_t v47 = v11;
      sub_10034DBD8();
    }
    uint64_t v24 = *v3;
    sub_1005E33F0();
    PipeliningRequirement.hash(into:)();
    Swift::Int v25 = sub_1005E3470();
    uint64_t v26 = -1 << *(unsigned char *)(v24 + 32);
    a2 = v25 & ~v26;
    uint64_t v53 = v24 + 56;
    uint64_t v27 = (uint64_t)v51;
    if ((*(void *)(v24 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v48 = v9;
      uint64_t v28 = ~v26;
      uint64_t v29 = *(void *)(v15 + 72);
      while (1)
      {
        sub_100346550(*(void *)(v24 + 48) + v29 * a2, (uint64_t)v21, (void (*)(void))type metadata accessor for PipeliningRequirement);
        uint64_t v30 = (uint64_t)&v13[*(int *)(v54 + 48)];
        sub_100346550((uint64_t)v21, (uint64_t)v13, (void (*)(void))type metadata accessor for PipeliningRequirement);
        sub_100346550(v55, v30, (void (*)(void))type metadata accessor for PipeliningRequirement);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v37 = v52;
            sub_100346550((uint64_t)v13, v52, (void (*)(void))type metadata accessor for PipeliningRequirement);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v32 = v37;
            if (EnumCaseMultiPayload != 1) {
              goto LABEL_23;
            }
            uint64_t v39 = v30;
            uint64_t v40 = (uint64_t)v48;
            sub_1002A0BC0(v39, (uint64_t)v48);
            sub_100223B18();
            uint64_t v41 = v52;
            char v35 = sub_1005E35A0();
            sub_1001F3A28(v40, &qword_1007108C0);
            uint64_t v36 = v41;
            uint64_t v27 = (uint64_t)v51;
            goto LABEL_21;
          case 2u:
            if (swift_getEnumCaseMultiPayload() == 2) {
              goto LABEL_29;
            }
            goto LABEL_24;
          case 3u:
            if (swift_getEnumCaseMultiPayload() == 3) {
              goto LABEL_29;
            }
            goto LABEL_24;
          case 4u:
            if (swift_getEnumCaseMultiPayload() == 4) {
              goto LABEL_29;
            }
            goto LABEL_24;
          default:
            sub_100346550((uint64_t)v13, v27, (void (*)(void))type metadata accessor for PipeliningRequirement);
            int v31 = swift_getEnumCaseMultiPayload();
            uint64_t v32 = v27;
            if (v31)
            {
LABEL_23:
              sub_1001F3A28(v32, &qword_1007108C0);
LABEL_24:
              sub_1001F3A28((uint64_t)v13, &qword_100712578);
            }
            else
            {
              uint64_t v33 = v30;
              uint64_t v34 = (uint64_t)v47;
              sub_1002A0BC0(v33, (uint64_t)v47);
              sub_100223B18();
              char v35 = sub_1005E35A0();
              sub_1001F3A28(v34, &qword_1007108C0);
              uint64_t v36 = v27;
LABEL_21:
              sub_1001F3A28(v36, &qword_1007108C0);
              if (v35) {
                goto LABEL_29;
              }
              sub_1003468D8((uint64_t)v13, (void (*)(void))type metadata accessor for PipeliningRequirement);
            }
            sub_1003468D8((uint64_t)v21, (void (*)(void))type metadata accessor for PipeliningRequirement);
            a2 = (a2 + 1) & v28;
            if (((*(void *)(v53 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              goto LABEL_26;
            }
            break;
        }
      }
    }
  }
LABEL_26:
  uint64_t v42 = *v50;
  *(void *)(*v50 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_10034D8F0(v55, *(void *)(v42 + 48) + *(void *)(v49 + 72) * a2, (void (*)(void))type metadata accessor for PipeliningRequirement);
  uint64_t v44 = *(void *)(v42 + 16);
  BOOL v45 = __OFADD__(v44, 1);
  uint64_t v46 = v44 + 1;
  if (v45)
  {
    __break(1u);
LABEL_29:
    sub_1003468D8((uint64_t)v13, (void (*)(void))type metadata accessor for PipeliningRequirement);
    sub_1003468D8((uint64_t)v21, (void (*)(void))type metadata accessor for PipeliningRequirement);
    sub_1005E3370();
    __break(1u);
    JUMPOUT(0x10034D2E0);
  }
  *(void *)(v42 + 16) = v46;
  return result;
}

uint64_t sub_10034D2F4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v54 = a1;
  uint64_t v6 = sub_10000566C(&qword_1007108C0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v46 - v10;
  uint64_t v53 = sub_10000566C(&qword_100712580);
  __chkstk_darwin(v53);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PipeliningBehavior(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v51 = (uint64_t)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v48 = (char *)&v46 - v19;
  __chkstk_darwin(v18);
  unint64_t v21 = (char *)&v46 - v20;
  unint64_t v22 = *(void *)(*v3 + 16);
  unint64_t v23 = *(void *)(*v3 + 24);
  uint64_t v49 = v15;
  uint64_t v50 = v3;
  if (v23 <= v22 || (a3 & 1) == 0)
  {
    if (a3)
    {
      uint64_t v47 = v11;
      sub_10034C7FC();
    }
    else
    {
      if (v23 > v22)
      {
        sub_10034D96C();
        goto LABEL_29;
      }
      uint64_t v47 = v11;
      sub_10034E0B8();
    }
    uint64_t v24 = *v3;
    sub_1005E33F0();
    PipeliningBehavior.hash(into:)();
    Swift::Int v25 = sub_1005E3470();
    uint64_t v26 = -1 << *(unsigned char *)(v24 + 32);
    a2 = v25 & ~v26;
    uint64_t v27 = (uint64_t)v48;
    if ((*(void *)(v24 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v46 = v9;
      uint64_t v52 = ~v26;
      uint64_t v28 = *(void *)(v15 + 72);
      while (1)
      {
        sub_100346550(*(void *)(v24 + 48) + v28 * a2, (uint64_t)v21, (void (*)(void))type metadata accessor for PipeliningBehavior);
        uint64_t v29 = (uint64_t)&v13[*(int *)(v53 + 48)];
        sub_100346550((uint64_t)v21, (uint64_t)v13, (void (*)(void))type metadata accessor for PipeliningBehavior);
        sub_100346550(v54, v29, (void (*)(void))type metadata accessor for PipeliningBehavior);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v36 = v51;
            sub_100346550((uint64_t)v13, v51, (void (*)(void))type metadata accessor for PipeliningBehavior);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v31 = v36;
            if (EnumCaseMultiPayload != 1) {
              goto LABEL_21;
            }
            uint64_t v38 = v29;
            uint64_t v39 = (uint64_t)v46;
            sub_1002A0BC0(v38, (uint64_t)v46);
            sub_100223B18();
            uint64_t v40 = v51;
            char v34 = sub_1005E35A0();
            sub_1001F3A28(v39, &qword_1007108C0);
            uint64_t v35 = v40;
            uint64_t v27 = (uint64_t)v48;
            goto LABEL_19;
          case 2u:
            if (swift_getEnumCaseMultiPayload() == 2) {
              goto LABEL_32;
            }
            goto LABEL_27;
          case 3u:
            if (swift_getEnumCaseMultiPayload() == 3) {
              goto LABEL_32;
            }
            goto LABEL_27;
          case 4u:
            if (swift_getEnumCaseMultiPayload() == 4) {
              goto LABEL_32;
            }
            goto LABEL_27;
          case 5u:
            if (swift_getEnumCaseMultiPayload() == 5) {
              goto LABEL_32;
            }
            goto LABEL_27;
          case 6u:
            if (swift_getEnumCaseMultiPayload() != 6) {
              goto LABEL_27;
            }
            goto LABEL_32;
          default:
            sub_100346550((uint64_t)v13, v27, (void (*)(void))type metadata accessor for PipeliningBehavior);
            int v30 = swift_getEnumCaseMultiPayload();
            uint64_t v31 = v27;
            if (v30)
            {
LABEL_21:
              sub_1001F3A28(v31, &qword_1007108C0);
LABEL_27:
              sub_1001F3A28((uint64_t)v13, &qword_100712580);
            }
            else
            {
              uint64_t v32 = v29;
              uint64_t v33 = (uint64_t)v47;
              sub_1002A0BC0(v32, (uint64_t)v47);
              sub_100223B18();
              char v34 = sub_1005E35A0();
              sub_1001F3A28(v33, &qword_1007108C0);
              uint64_t v35 = v27;
LABEL_19:
              sub_1001F3A28(v35, &qword_1007108C0);
              if (v34) {
                goto LABEL_32;
              }
              sub_1003468D8((uint64_t)v13, (void (*)(void))type metadata accessor for PipeliningBehavior);
            }
            sub_1003468D8((uint64_t)v21, (void (*)(void))type metadata accessor for PipeliningBehavior);
            a2 = (a2 + 1) & v52;
            if (((*(void *)(v24 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              goto LABEL_29;
            }
            break;
        }
      }
    }
  }
LABEL_29:
  uint64_t v41 = *v50;
  *(void *)(*v50 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_10034D8F0(v54, *(void *)(v41 + 48) + *(void *)(v49 + 72) * a2, (void (*)(void))type metadata accessor for PipeliningBehavior);
  uint64_t v43 = *(void *)(v41 + 16);
  BOOL v44 = __OFADD__(v43, 1);
  uint64_t v45 = v43 + 1;
  if (v44)
  {
    __break(1u);
LABEL_32:
    sub_1003468D8((uint64_t)v13, (void (*)(void))type metadata accessor for PipeliningBehavior);
    sub_1003468D8((uint64_t)v21, (void (*)(void))type metadata accessor for PipeliningBehavior);
    sub_1005E3370();
    __break(1u);
    JUMPOUT(0x10034D8D4);
  }
  *(void *)(v41 + 16) = v45;
  return result;
}

uint64_t sub_10034D8F0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1001F3BBC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10034D950(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void sub_10034D96C()
{
  sub_1001FE5B4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = v0;
  uint64_t v9 = v8(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v31 - v11;
  sub_10000566C(v6);
  uint64_t v13 = *v0;
  uint64_t v14 = sub_1005E2C00();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16))
  {
    swift_release();
LABEL_30:
    uint64_t *v7 = v15;
    sub_1001FE57C();
    return;
  }
  uint64_t v16 = (void *)(v14 + 56);
  unint64_t v17 = (unint64_t)((1 << *(unsigned char *)(v15 + 32)) + 63) >> 6;
  uint64_t v31 = v7;
  uint64_t v32 = (const void *)(v13 + 56);
  if (v15 != v13 || (unint64_t)v16 >= v13 + 56 + 8 * v17) {
    memmove(v16, v32, 8 * v17);
  }
  int64_t v19 = 0;
  *(void *)(v15 + 16) = *(void *)(v13 + 16);
  uint64_t v20 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v21 = *(void *)(v13 + 56);
  uint64_t v22 = -1;
  if (v20 < 64) {
    uint64_t v22 = ~(-1 << v20);
  }
  unint64_t v23 = v22 & v21;
  int64_t v24 = (unint64_t)(v20 + 63) >> 6;
  if ((v22 & v21) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v25 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  for (unint64_t i = v25 | (v19 << 6); ; unint64_t i = __clz(__rbit64(v28)) + (v19 << 6))
  {
    unint64_t v30 = *(void *)(v10 + 72) * i;
    sub_100346550(*(void *)(v13 + 48) + v30, (uint64_t)v12, v4);
    sub_10034D8F0((uint64_t)v12, *(void *)(v15 + 48) + v30, v2);
    if (v23) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v27 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v27 >= v24) {
      goto LABEL_28;
    }
    unint64_t v28 = *((void *)v32 + v27);
    ++v19;
    if (!v28)
    {
      int64_t v19 = v27 + 1;
      if (v27 + 1 >= v24) {
        goto LABEL_28;
      }
      unint64_t v28 = *((void *)v32 + v19);
      if (!v28)
      {
        int64_t v19 = v27 + 2;
        if (v27 + 2 >= v24) {
          goto LABEL_28;
        }
        unint64_t v28 = *((void *)v32 + v19);
        if (!v28) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v23 = (v28 - 1) & v28;
  }
  int64_t v29 = v27 + 3;
  if (v29 >= v24)
  {
LABEL_28:
    swift_release();
    uint64_t v7 = v31;
    goto LABEL_30;
  }
  unint64_t v28 = *((void *)v32 + v29);
  if (v28)
  {
    int64_t v19 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v19 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v19 >= v24) {
      goto LABEL_28;
    }
    unint64_t v28 = *((void *)v32 + v19);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_10034DBD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_1007108C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v39 = (uint64_t)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PipeliningRequirement(0);
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v43 = (uint64_t)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v38 - v7;
  uint64_t v9 = *v0;
  sub_10000566C(&qword_100712700);
  uint64_t v10 = sub_1005E2C10();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (*(void *)(v11 + 16))
  {
    v38[0] = v1;
    uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v40 = v11 + 56;
    if (v13 < 64) {
      uint64_t v15 = ~(-1 << v13);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v14;
    int64_t v41 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v17 = v10 + 56;
    swift_retain();
    int64_t v18 = 0;
    v38[1] = v4;
    if (!v16) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v20 = v19 | (v18 << 6);
LABEL_21:
      uint64_t v24 = *(void *)(v42 + 72);
      sub_100346550(*(void *)(v11 + 48) + v24 * v20, (uint64_t)v8, (void (*)(void))type metadata accessor for PipeliningRequirement);
      sub_1005E33F0();
      sub_100346550((uint64_t)v8, v43, (void (*)(void))type metadata accessor for PipeliningRequirement);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v25 = v39;
          sub_1002A0BC0(v43, v39);
          Swift::UInt v26 = 4;
          goto LABEL_24;
        case 2u:
          Swift::UInt v27 = 0;
          goto LABEL_28;
        case 3u:
          Swift::UInt v27 = 1;
          goto LABEL_28;
        case 4u:
          Swift::UInt v27 = 2;
LABEL_28:
          sub_1005E3410(v27);
          break;
        default:
          uint64_t v25 = v39;
          sub_1002A0BC0(v43, v39);
          Swift::UInt v26 = 3;
LABEL_24:
          sub_1005E3410(v26);
          sub_10000566C(&qword_100710538);
          sub_10022AAC0();
          sub_1005E19C0();
          sub_1001F3A28(v25, &qword_1007108C0);
          break;
      }
      Swift::Int v28 = sub_1005E3470();
      uint64_t v29 = -1 << *(unsigned char *)(v12 + 32);
      unint64_t v30 = v28 & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v17 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v32 = __clz(__rbit64((-1 << v30) & ~*(void *)(v17 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_38;
      }
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
        BOOL v35 = v31 == v34;
        if (v31 == v34) {
          unint64_t v31 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v17 + 8 * v31);
      }
      while (v36 == -1);
      unint64_t v32 = __clz(__rbit64(~v36)) + (v31 << 6);
LABEL_38:
      *(void *)(v17 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
      sub_10034D8F0((uint64_t)v8, *(void *)(v12 + 48) + v32 * v24, (void (*)(void))type metadata accessor for PipeliningRequirement);
      ++*(void *)(v12 + 16);
      if (v16) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      goto LABEL_44;
    }
    if (v21 < v41)
    {
      unint64_t v22 = *(void *)(v40 + 8 * v21);
      ++v18;
      if (v22) {
        goto LABEL_20;
      }
      int64_t v18 = v21 + 1;
      if (v21 + 1 < v41)
      {
        unint64_t v22 = *(void *)(v40 + 8 * v18);
        if (v22) {
          goto LABEL_20;
        }
        int64_t v18 = v21 + 2;
        if (v21 + 2 < v41)
        {
          unint64_t v22 = *(void *)(v40 + 8 * v18);
          if (v22) {
            goto LABEL_20;
          }
          int64_t v23 = v21 + 3;
          if (v23 < v41)
          {
            unint64_t v22 = *(void *)(v40 + 8 * v23);
            if (v22)
            {
              int64_t v18 = v23;
LABEL_20:
              unint64_t v16 = (v22 - 1) & v22;
              unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v18 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                break;
              }
              if (v18 >= v41) {
                goto LABEL_40;
              }
              unint64_t v22 = *(void *)(v40 + 8 * v18);
              ++v23;
              if (v22) {
                goto LABEL_20;
              }
            }
LABEL_45:
            __break(1u);
            JUMPOUT(0x10034E0A4);
          }
        }
      }
    }
LABEL_40:
    uint64_t result = swift_release_n();
    uint64_t v1 = (uint64_t *)v38[0];
  }
  else
  {
    uint64_t result = swift_release();
  }
  *uint64_t v1 = v12;
  return result;
}

uint64_t sub_10034E0B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_1007108C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v41 = (uint64_t)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PipeliningBehavior(0);
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v45 = (uint64_t)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v40 - v7;
  uint64_t v9 = *v0;
  sub_10000566C(&qword_1007126F0);
  uint64_t v10 = v9;
  uint64_t v11 = sub_1005E2C10();
  uint64_t v12 = v11;
  if (*(void *)(v10 + 16))
  {
    v40[0] = v0;
    uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
    uint64_t v14 = *(void *)(v10 + 56);
    uint64_t v42 = v10 + 56;
    if (v13 < 64) {
      uint64_t v15 = ~(-1 << v13);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v14;
    int64_t v43 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v17 = v11 + 56;
    swift_retain();
    int64_t v18 = 0;
    v40[1] = v4;
    if (!v16) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v20 = v19 | (v18 << 6);
LABEL_21:
      uint64_t v24 = v10;
      uint64_t v25 = *(void *)(v10 + 48);
      uint64_t v26 = *(void *)(v44 + 72);
      sub_100346550(v25 + v26 * v20, (uint64_t)v8, (void (*)(void))type metadata accessor for PipeliningBehavior);
      sub_1005E33F0();
      sub_100346550((uint64_t)v8, v45, (void (*)(void))type metadata accessor for PipeliningBehavior);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v27 = v41;
          sub_1002A0BC0(v45, v41);
          Swift::UInt v28 = 5;
          goto LABEL_24;
        case 2u:
          Swift::UInt v29 = 0;
          goto LABEL_30;
        case 3u:
          Swift::UInt v29 = 1;
          goto LABEL_30;
        case 4u:
          Swift::UInt v29 = 2;
          goto LABEL_30;
        case 5u:
          Swift::UInt v29 = 3;
          goto LABEL_30;
        case 6u:
          Swift::UInt v29 = 6;
LABEL_30:
          sub_1005E3410(v29);
          break;
        default:
          uint64_t v27 = v41;
          sub_1002A0BC0(v45, v41);
          Swift::UInt v28 = 4;
LABEL_24:
          sub_1005E3410(v28);
          sub_10000566C(&qword_100710538);
          sub_10022AAC0();
          sub_1005E19C0();
          sub_1001F3A28(v27, &qword_1007108C0);
          break;
      }
      Swift::Int v30 = sub_1005E3470();
      uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
      unint64_t v32 = v30 & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v17 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v34 = __clz(__rbit64((-1 << v32) & ~*(void *)(v17 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_40;
      }
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        BOOL v37 = v33 == v36;
        if (v33 == v36) {
          unint64_t v33 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v17 + 8 * v33);
      }
      while (v38 == -1);
      unint64_t v34 = __clz(__rbit64(~v38)) + (v33 << 6);
LABEL_40:
      *(void *)(v17 + ((v34 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v34;
      sub_10034D8F0((uint64_t)v8, *(void *)(v12 + 48) + v34 * v26, (void (*)(void))type metadata accessor for PipeliningBehavior);
      ++*(void *)(v12 + 16);
      uint64_t v10 = v24;
      if (v16) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      goto LABEL_46;
    }
    if (v21 < v43)
    {
      unint64_t v22 = *(void *)(v42 + 8 * v21);
      ++v18;
      if (v22) {
        goto LABEL_20;
      }
      int64_t v18 = v21 + 1;
      if (v21 + 1 < v43)
      {
        unint64_t v22 = *(void *)(v42 + 8 * v18);
        if (v22) {
          goto LABEL_20;
        }
        int64_t v18 = v21 + 2;
        if (v21 + 2 < v43)
        {
          unint64_t v22 = *(void *)(v42 + 8 * v18);
          if (v22) {
            goto LABEL_20;
          }
          int64_t v23 = v21 + 3;
          if (v23 < v43)
          {
            unint64_t v22 = *(void *)(v42 + 8 * v23);
            if (v22)
            {
              int64_t v18 = v23;
LABEL_20:
              unint64_t v16 = (v22 - 1) & v22;
              unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v18 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                break;
              }
              if (v18 >= v43) {
                goto LABEL_42;
              }
              unint64_t v22 = *(void *)(v42 + 8 * v18);
              ++v23;
              if (v22) {
                goto LABEL_20;
              }
            }
LABEL_47:
            __break(1u);
            JUMPOUT(0x10034E598);
          }
        }
      }
    }
LABEL_42:
    uint64_t result = swift_release_n();
    uint64_t v1 = (uint64_t *)v40[0];
  }
  else
  {
    uint64_t result = swift_release();
  }
  *uint64_t v1 = v12;
  return result;
}

uint64_t *sub_10034E5B4(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_10034E634()
{
  return swift_allocObject();
}

uint64_t sub_10034E65C()
{
  return v0;
}

uint64_t sub_10034E670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = *v9;
  uint64_t v12 = v9[1];
  uint64_t v13 = v9[2];
  uint64_t v14 = v9[3];
  uint64_t v15 = v9[4];
  uint64_t v16 = v9[5];
  uint64_t v17 = v9[6];
  uint64_t v18 = v9[7];
  return sub_10024EEF4(v11, v12, v13, v14, v15, v16, v17, v18, a9);
}

uint64_t sub_10034E6B8()
{
  return swift_allocObject();
}

uint64_t sub_10034E6E4(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10034E708()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_10034E720()
{
  return swift_allocObject();
}

uint64_t sub_10034E778()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10034E790()
{
  return v0;
}

uint64_t sub_10034E7A0()
{
  return v0;
}

uint64_t sub_10034E7B0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10034E7C8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10034E7E0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10034E814()
{
  return swift_bridgeObjectRelease();
}

char *sub_10034E83C(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return (char *)a1 + v2;
}

uint64_t sub_10034E850()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10034E888()
{
  return swift_allocObject();
}

uint64_t sub_10034E8A0()
{
  return swift_allocObject();
}

uint64_t sub_10034E8E4()
{
  return v0;
}

uint64_t sub_10034E900()
{
  return sub_10024EEEC();
}

uint64_t sub_10034E918()
{
  return 0;
}

uint64_t sub_10034E950()
{
  return v0;
}

uint64_t sub_10034E960(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10034E984()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10034E9B4()
{
  return v0;
}

void *sub_10034E9C0(uint64_t a1, uint64_t a2, size_t a3)
{
  return memcpy(v3, v4, a3);
}

uint64_t sub_10034E9D8()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_10034E9FC()
{
  return swift_allocObject();
}

uint64_t sub_10034EA14()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10034EA34(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  uint64_t v5 = (uint64_t)a1 + v3;
  return sub_1002A0A18(v2, v5);
}

uint64_t sub_10034EA54()
{
  return swift_release();
}

uint64_t sub_10034EA74()
{
  return 0;
}

uint64_t sub_10034EA88()
{
  return type metadata accessor for Command();
}

uint64_t sub_10034EAA8()
{
  return v0;
}

uint64_t sub_10034EABC()
{
  return sub_1005E19C0();
}

uint64_t sub_10034EADC()
{
  return sub_1002A0BC0(v1, v0);
}

uint64_t sub_10034EB08(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return sub_1003468D8(v4, a4);
}

unint64_t sub_10034EB2C()
{
  unint64_t result = qword_100712718;
  if (!qword_100712718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712718);
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewText()
{
  return &type metadata for PreviewText;
}

void sub_10034EB88(uint64_t a1)
{
  uint64_t v4 = v1;
  sub_100289018(a1, (uint64_t)&v48);
  int v5 = v52;
  int v6 = v52 >> 6;
  if (!v6)
  {
    v52 &= 0x3Fu;
    uint64_t v4 = v1 + 5;
    uint64_t v25 = sub_100270578();
    sub_100290B38(v25, v26);
    if (v27)
    {
      uint64_t v28 = sub_100270578();
      sub_10026D8F8(v28, v29);
    }
    sub_100290C1C();
    if (!v13) {
      goto LABEL_45;
    }
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v2 = v48;
  if (v6 != 1)
  {
LABEL_17:
    if (v5 != 128 || (v50 | v51 | v2 | v49) != 0)
    {
      if (v5 == 128 && v2 == 1 && (v50 | v51 | v49) == 0) {
        goto LABEL_42;
      }
      uint64_t v34 = sub_10034FF5C();
      uint64_t v35 = sub_1002704A4(v34);
      sub_100290B38(v35, v36);
      if (v37)
      {
        uint64_t v38 = sub_1002704A4(0x323238434652);
        sub_10026D8F8(v38, v39);
      }
      sub_100290C1C();
      if (!v13) {
        goto LABEL_45;
      }
      __break(1u);
    }
    uint64_t v40 = sub_10034FF5C();
    sub_100290B38(v40, 0xE600000000000000);
    if (v41) {
      sub_10026D8F8(0x323238434652, 0xE600000000000000);
    }
    sub_100290C1C();
    if (!v13) {
      goto LABEL_45;
    }
    __break(1u);
    goto LABEL_38;
  }
  v52 &= 0x3Fu;
  uint64_t v7 = v49;
  uint64_t v8 = v50;
  sub_100290B38(1497648962, 0xE400000000000000);
  if (v10) {
    Swift::Int v9 = sub_10026D8F8(1497648962, 0xE400000000000000);
  }
  Swift::Int v11 = v9;
  int v12 = v1[5];
  BOOL v13 = __CFADD__(v12, v9);
  int v14 = v12 + v9;
  if (v13)
  {
    __break(1u);
    goto LABEL_48;
  }
  v1[5] = v14;
  sub_1002B3FD4(v2, v7, v8);
  BOOL v16 = __OFADD__(v11, v15);
  Swift::Int v3 = v11 + v15;
  if (v16)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    return;
  }
  if (v5)
  {
LABEL_38:
    Swift::Int v19 = 0;
    goto LABEL_39;
  }
  v53._countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v53);
  swift_bridgeObjectRelease();
  v54._countAndFlagsBits = 62;
  v54._object = (void *)0xE100000000000000;
  sub_1005E1E30(v54);
  Swift::Int v17 = v1[5];
  swift_bridgeObjectRetain();
  sub_100210AD0(60, 0xE100000000000000, (uint64_t)(v1 + 2), v17);
  Swift::Int v19 = v18;
  char v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    v22._countAndFlagsBits = 60;
    v22._object = (void *)0xE100000000000000;
    Swift::Int v19 = ByteBuffer._setStringSlowpath(_:at:)(v22, v17);
  }
  swift_bridgeObjectRelease();
  int v23 = v4[5];
  BOOL v13 = __CFADD__(v23, v19);
  int v24 = v23 + v19;
  if (v13) {
    goto LABEL_49;
  }
  v4[5] = v24;
LABEL_39:
  if (!__OFADD__(v3, v19)) {
    return;
  }
  __break(1u);
LABEL_42:
  uint64_t v42 = sub_10034FF5C();
  uint64_t v43 = sub_10027053C(v42);
  sub_100290B38(v43, v44);
  if (v45)
  {
    uint64_t v46 = sub_10027053C(0x323238434652);
    sub_10026D8F8(v46, v47);
  }
  sub_100290C1C();
  if (v13) {
    goto LABEL_50;
  }
LABEL_45:
  *uint64_t v4 = v30;
}

uint64_t ResponseEncodeBuffer.writeResponse(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ResponsePayload();
  __chkstk_darwin(v4 - 8);
  int v6 = &v63[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for Response(0);
  __chkstk_darwin(v7);
  Swift::Int v9 = (long long *)&v63[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1002D2238(a1, (uint64_t)v9);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100288FF8(v9, &__dst);
      uint64_t v2 = sub_10034F908(&__dst);
      sub_10034FEE8((uint64_t)&__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_10029BF60);
      return v2;
    case 2u:
      long long v11 = v9[1];
      long long __dst = *v9;
      v65[0] = v11;
      *(_OWORD *)((char *)v65 + 9) = *(long long *)((char *)v9 + 25);
      sub_1002A8088((uint64_t)&__dst);
      uint64_t v2 = v12;
      long long v66 = __dst;
      sub_10002A77C((uint64_t)&v66);
      sub_10034F878((uint64_t)v65, (uint64_t)v67);
      sub_10034F8D4((uint64_t)v67);
      return v2;
    case 3u:
      unint64_t v13 = *(void *)v9;
      sub_1002A1A9C(*(void *)v9, *((void *)v9 + 1), *((void **)v9 + 2));
      uint64_t v2 = v14;
      sub_100212D94(v13);
      swift_bridgeObjectRelease();
      return v2;
    case 4u:
      uint64_t v15 = *((unsigned int *)v9 + 2);
      uint64_t v16 = *((unsigned int *)v9 + 3);
      if (v16 < v15)
      {
        __break(1u);
        goto LABEL_37;
      }
      int v17 = *((_DWORD *)v9 + 4);
      int v18 = *((unsigned __int16 *)v9 + 10);
      int v19 = *((unsigned __int8 *)v9 + 22);
      if (v17 - (v19 | (v18 << 8)) < v16)
      {
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      *(void *)&long long __dst = *(void *)v9;
      *((void *)&__dst + 1) = __PAIR64__(v16, v15);
      LODWORD(v65[0]) = v17;
      WORD2(v65[0]) = v18;
      BYTE6(v65[0]) = v19;
      *((void *)&v65[0] + 1) = v15;
      *(void *)&v65[1] = v16;
      swift_retain();
      char v20 = sub_1001E6610(&__dst);
      swift_release();
      Swift::Int v21 = *(unsigned int *)(v2 + 20);
      sub_100210AD0(8235, 0xE200000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
      if (v23)
      {
        v24._countAndFlagsBits = 8235;
        v24._object = (void *)0xE200000000000000;
        Swift::Int v22 = ByteBuffer._setStringSlowpath(_:at:)(v24, v21);
      }
      Swift::Int v25 = v22;
      int v26 = *(_DWORD *)(v2 + 20);
      BOOL v27 = __CFADD__(v26, v22);
      int v28 = v26 + v22;
      if (v27) {
        goto LABEL_38;
      }
      *(_DWORD *)(v2 + 20) = v28;
      sub_100254F34((uint64_t)v20);
      uint64_t v30 = v29;
      swift_bridgeObjectRelease();
      BOOL v31 = __OFADD__(v25, v30);
      Swift::Int v32 = v25 + v30;
      if (v31)
      {
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      Swift::Int v33 = *(unsigned int *)(v2 + 20);
      sub_100210AD0(2573, 0xE200000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
      if (v35)
      {
        v36._countAndFlagsBits = 2573;
        v36._object = (void *)0xE200000000000000;
        Swift::Int v34 = ByteBuffer._setStringSlowpath(_:at:)(v36, v33);
      }
      Swift::Int v37 = v34;
      swift_release();
      int v38 = *(_DWORD *)(v2 + 20);
      BOOL v27 = __CFADD__(v38, v37);
      int v39 = v38 + v37;
      if (v27) {
        goto LABEL_40;
      }
      *(_DWORD *)(v2 + 20) = v39;
      uint64_t v2 = v32 + v37;
      if (!__OFADD__(v32, v37)) {
        return v2;
      }
      __break(1u);
LABEL_18:
      Swift::Int v40 = *(unsigned int *)(v2 + 20);
      sub_100210AD0(8235, 0xE200000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
      if (v42)
      {
        v43._countAndFlagsBits = 8235;
        v43._object = (void *)0xE200000000000000;
        Swift::Int v41 = ByteBuffer._setStringSlowpath(_:at:)(v43, v40);
      }
      Swift::Int v44 = v41;
      int v45 = *(_DWORD *)(v2 + 20);
      Swift::Int v46 = (v45 + v41);
      if (__CFADD__(v45, v41)) {
        goto LABEL_41;
      }
      *(_DWORD *)(v2 + 20) = v46;
      uint64_t v47 = sub_1005E1DC0();
      if (v47 <= 0) {
        uint64_t v48 = 32;
      }
      else {
        uint64_t v48 = 0x676E696C6469;
      }
      if (v47 <= 0) {
        uint64_t v49 = (void *)0xE100000000000000;
      }
      else {
        uint64_t v49 = (void *)0xE600000000000000;
      }
      swift_bridgeObjectRetain();
      sub_100210AD0(v48, (unint64_t)v49, v2 + 8, v46);
      Swift::Int v51 = v50;
      char v53 = v52;
      swift_bridgeObjectRelease();
      if (v53)
      {
        v54._countAndFlagsBits = v48;
        v54._object = v49;
        Swift::Int v51 = ByteBuffer._setStringSlowpath(_:at:)(v54, v46);
      }
      swift_bridgeObjectRelease();
      int v55 = *(_DWORD *)(v2 + 20);
      Swift::Int v56 = (v55 + v51);
      if (__CFADD__(v55, v51)) {
        goto LABEL_42;
      }
      *(_DWORD *)(v2 + 20) = v56;
      BOOL v31 = __OFADD__(v44, v51);
      Swift::Int v57 = v44 + v51;
      if (v31)
      {
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      sub_100210AD0(2573, 0xE200000000000000, v2 + 8, v55 + v51);
      if (v58)
      {
        v59._countAndFlagsBits = 2573;
        v59._object = (void *)0xE200000000000000;
        ByteBuffer._setStringSlowpath(_:at:)(v59, v56);
      }
      sub_1001F4888();
      if (v27) {
        goto LABEL_44;
      }
      *(_DWORD *)(v2 + 20) = v61;
      uint64_t v2 = v57 + v60;
      if (__OFADD__(v57, v60))
      {
LABEL_45:
        __break(1u);
        JUMPOUT(0x10034F2DCLL);
      }
      return v2;
    case 5u:
      goto LABEL_18;
    default:
      sub_10034FD20((uint64_t)v9, (uint64_t)v6);
      sub_1002A19A8();
      uint64_t v2 = v10;
      sub_100300948((uint64_t)v6);
      return v2;
  }
}

uint64_t sub_10034F2F4(char a1, uint64_t (*a2)(char *))
{
  if (qword_10070FB10 != -1) {
    swift_once();
  }
  uint64_t v4 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
  int v5 = dword_100761860;
  __int16 v6 = word_100761864;
  char v7 = byte_100761866;
  swift_retain();
  uint64_t v8 = qword_100761858;
  sub_10020E5E8((uint64_t)_swiftEmptyArrayStorage);
  char v16 = a1 & 1;
  char v18 = 0x80;
  int v17 = 256;
  uint64_t v19 = v4;
  uint64_t v20 = v8;
  int v21 = v5;
  unsigned __int16 v22 = v6;
  unsigned __int8 v23 = v7;
  uint64_t v24 = v9;
  uint64_t v25 = v10;
  uint64_t v26 = v11;
  uint64_t result = a2(&v16);
  if (HIDWORD(v20) < v20)
  {
    __break(1u);
  }
  else if (v21 - (v23 | (v22 << 8)) >= HIDWORD(v20))
  {
    v27[0] = v19;
    v27[1] = v20;
    int v28 = v21;
    unsigned __int16 v29 = v22;
    unsigned __int8 v30 = v23;
    uint64_t v31 = v20;
    uint64_t v32 = HIDWORD(v20);
    Swift::Int v13 = HIDWORD(v20) - (unint64_t)v20;
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    swift_retain();
    sub_1005E1D10(v13);
    sub_1001FF5EC((uint64_t)v27, v15);
    swift_release();
    uint64_t v14 = v15[0];
    swift_release();
    swift_release();
    return v14;
  }
  __break(1u);
  return result;
}

void ResponseEncodeBuffer.readBytes()()
{
  uint64_t v1 = v0;
  EncodeBuffer.nextChunk(allowEmptyChunk:)(1);
  if (*(_DWORD *)(v0 + 20) == *(_DWORD *)(v0 + 16))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v2 = *(void *)(v0 + 8);
      swift_beginAccess();
      *(void *)(v1 + 8) = ByteBuffer._Storage.allocateStorage(capacity:)(*(_DWORD *)(v2 + 16));
      swift_release();
    }
    uint64_t v3 = *(void *)(v1 + 8);
    swift_beginAccess();
    *(_DWORD *)(v1 + 24) = *(_DWORD *)(v3 + 16);
    *(_WORD *)(v1 + 28) = 0;
    *(unsigned char *)(v1 + 30) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    __break(1u);
  }
}

void ResponseEncodeBuffer.init(buffer:options:loggingMode:)(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  int v7 = a3;
  int v8 = a2;
  unint64_t v11 = HIDWORD(a2);
  unint64_t v12 = HIDWORD(a3);
  unint64_t v13 = HIWORD(a3);
  if (a4) {
    int v14 = 256;
  }
  else {
    int v14 = 0;
  }
  sub_10020E5E8((uint64_t)_swiftEmptyArrayStorage);
  *(unsigned char *)a6 = a5;
  *(unsigned char *)(a6 + 5) = 0x80;
  *(_DWORD *)(a6 + 1) = v14;
  *(void *)(a6 + 8) = a1;
  *(_DWORD *)(a6 + 16) = v8;
  *(_DWORD *)(a6 + 20) = v11;
  *(_DWORD *)(a6 + 24) = v7;
  *(_WORD *)(a6 + 28) = v12;
  *(unsigned char *)(a6 + 30) = v13;
  *(void *)(a6 + 32) = v15;
  *(void *)(a6 + 40) = v16;
  *(void *)(a6 + 48) = v17;
}

uint64_t ResponseEncodeBuffer.init(buffer:capabilities:loggingMode:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, char a4@<W4>, uint64_t a5@<X8>)
{
  int v6 = a3;
  int v7 = a2;
  unint64_t v10 = HIDWORD(a2);
  unint64_t v18 = HIDWORD(a3);
  unint64_t v19 = HIWORD(a3);
  sub_10020E5E8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)a5 = a4;
  *(unsigned char *)(a5 + 5) = 0x80;
  *(_DWORD *)(a5 + 1) = 256;
  *(void *)(a5 + 8) = a1;
  *(_DWORD *)(a5 + 16) = v7;
  *(_DWORD *)(a5 + 20) = v10;
  *(_DWORD *)(a5 + 24) = v6;
  *(_WORD *)(a5 + 28) = v18;
  *(unsigned char *)(a5 + 30) = v19;
  *(void *)(a5 + 32) = v12;
  *(void *)(a5 + 40) = v14;
  *(void *)(a5 + 48) = v16;
  return result;
}

void ResponseEncodeBuffer.writeContinuationRequest(_:)(unint64_t a1, unint64_t a2, void *a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = v4 + 8;
  sub_100290B38(8235, 0xE200000000000000);
  if (v12) {
    Swift::Int v11 = sub_10026D8F8(8235, 0xE200000000000000);
  }
  Swift::Int v13 = v11;
  int v14 = *(_DWORD *)(v4 + 20);
  BOOL v15 = __CFADD__(v14, v11);
  int v16 = v14 + v11;
  if (v15)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  *(_DWORD *)(v4 + 20) = v16;
  if ((a4 & 1) == 0)
  {
    sub_1002965E4(a1);
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1002A4994(a1, a2, a3);
    sub_100212D94(a1);
    swift_bridgeObjectRelease();
    a3 = (void *)(v13 + v17);
    if (!__OFADD__(v13, v17)) {
      goto LABEL_11;
    }
    __break(1u);
  }
  if (HIDWORD(a2) < a2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (a3 - (BYTE6(a3) | (WORD2(a3) << 8)) < HIDWORD(a2))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v24[0] = a1;
  v24[1] = a2;
  int v25 = (int)a3;
  __int16 v26 = WORD2(a3);
  char v27 = BYTE6(a3);
  uint64_t v28 = a2;
  unint64_t v29 = HIDWORD(a2);
  swift_retain();
  unint64_t v18 = sub_1001E6610(v24);
  sub_100254F34((uint64_t)v18);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  sub_1002966C8(a1, a2, (uint64_t)a3, 1);
  a3 = (void *)(v13 + v20);
  if (__OFADD__(v13, v20))
  {
LABEL_21:
    __break(1u);
    return;
  }
LABEL_11:
  sub_100210AD0(2573, 0xE200000000000000, v10, *(_DWORD *)(v5 + 20));
  if (v21) {
    sub_10026D8F8(2573, 0xE200000000000000);
  }
  sub_1001F4888();
  if (v15) {
    goto LABEL_17;
  }
  *(_DWORD *)(v5 + 20) = v23;
  if (__OFADD__(a3, v22))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
}

uint64_t sub_10034F878(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10034F8D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_10034F908(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = 0;
  sub_100288FF8(a1, __dst);
  sub_100288FF8(__dst, __src);
  sub_100288FF8(a1, v62);
  switch(sub_10029C0D8((uint64_t)v62))
  {
    case 1u:
      goto LABEL_12;
    case 2u:
      goto LABEL_22;
    case 3u:
      uint64_t v38 = sub_10029C1C4((uint64_t)v62);
      char v39 = *(unsigned char *)(v38 + 32);
      long long v40 = *(_OWORD *)(v38 + 16);
      *(_OWORD *)uint64_t v63 = *(_OWORD *)v38;
      *(_OWORD *)&unsigned char v63[16] = v40;
      char v64 = v39;
      if (((*(unsigned int *)(v1 + 1) | ((unint64_t)*(unsigned __int8 *)(v1 + 5) << 32)) & 0x8000000000) == 0) {
        goto LABEL_57;
      }
      if (*(_DWORD *)(v1 + 1)) {
        goto LABEL_41;
      }
      sub_10034FFC0(*(_DWORD *)(v1 + 1));
      sub_10034FD94((uint64_t)v63);
      return v41;
    case 4u:
      uint64_t v42 = sub_10029C1C4((uint64_t)v62);
      *(_OWORD *)uint64_t v63 = *(_OWORD *)v42;
      *(void *)&v63[15] = *(void *)(v42 + 15);
      EncodeBuffer.writeBuffer(_:)();
      return v41;
    case 5u:
      return v5;
    case 6u:
      unint64_t v43 = *(unsigned int *)(v1 + 1) | (unint64_t)((uint64_t)*(char *)(v1 + 5) << 32);
      if ((v43 & 0x8000000000000000) == 0) {
        goto LABEL_58;
      }
      *(unsigned char *)(v1 + 5) = 0x80;
      *(_DWORD *)(v1 + 1) = v43 & 0x100;
      Swift::Int v44 = *(unsigned int *)(v1 + 20);
      sub_100210AD0(658729, 0xE300000000000000, v1 + 8, *(_DWORD *)(v1 + 20));
      if (v45)
      {
        v46._countAndFlagsBits = 658729;
        v46._object = (void *)0xE300000000000000;
        ByteBuffer._setStringSlowpath(_:at:)(v46, v44);
      }
      sub_100254260();
      if (v10) {
        goto LABEL_48;
      }
      *(_DWORD *)(v1 + 20) = v47;
      return v5;
    default:
      sub_10029C1C4((uint64_t)v62);
      sub_10034FF74();
      if (v7) {
        Swift::Int v6 = sub_10026D8F8(8234, 0xE200000000000000);
      }
      Swift::Int v8 = v6;
      int v9 = *(_DWORD *)(v1 + 20);
      BOOL v10 = __CFADD__(v9, v6);
      int v11 = v9 + v6;
      if (v10)
      {
        __break(1u);
        goto LABEL_47;
      }
      *(_DWORD *)(v1 + 20) = v11;
      uint64_t v12 = sub_1002BA570();
      Swift::Int v2 = v8 + v12;
      if (__OFADD__(v8, v12))
      {
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      Swift::UInt32 v13 = *(_DWORD *)(v1 + 20);
      uint64_t v14 = sub_10034FFD8();
      sub_100210AD0(v14, v15, (uint64_t)a1, v13);
      if (v16)
      {
        uint64_t v17 = sub_10034FFD8();
        sub_10026D8F8(v17, v18);
      }
      sub_1001F4888();
      if (v10) {
        goto LABEL_51;
      }
      *(_DWORD *)(v3 + 20) = v20;
      uint64_t v5 = v2 + v19;
      if (!__OFADD__(v2, v19)) {
        return v5;
      }
      __break(1u);
LABEL_12:
      sub_10029C1C4((uint64_t)v62);
      sub_10034FF74();
      if (v22) {
        Swift::Int v21 = sub_10026D8F8(8234, 0xE200000000000000);
      }
      Swift::Int v23 = v21;
      int v24 = *(_DWORD *)(v3 + 20);
      BOOL v10 = __CFADD__(v24, v21);
      int v25 = v24 + v21;
      if (v10)
      {
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      *(_DWORD *)(v3 + 20) = v25;
      uint64_t v26 = sub_1002C9B08(v2);
      Swift::Int v27 = v23 + v26;
      if (__OFADD__(v23, v26))
      {
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
      Swift::UInt32 v28 = *(_DWORD *)(v3 + 20);
      uint64_t v29 = sub_10034FFA0();
      sub_100210AD0(v29, v30, (uint64_t)a1, v28);
      if (v31)
      {
        uint64_t v32 = sub_10034FFA0();
        sub_10026D8F8(v32, v33);
      }
      sub_1001F4888();
      if (v10) {
        goto LABEL_52;
      }
      *(_DWORD *)(v3 + 20) = v35;
      uint64_t v5 = v27 + v34;
      if (!__OFADD__(v27, v34)) {
        return v5;
      }
      __break(1u);
LABEL_22:
      Swift::String v36 = (void *)sub_10029C1C4((uint64_t)v62);
      sub_100288FF8(v36, v63);
      if (((*(unsigned int *)(v3 + 1) | ((unint64_t)*(unsigned __int8 *)(v3 + 5) << 32)) & 0x8000000000) == 0)
      {
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
        JUMPOUT(0x10034FD04);
      }
      if (*(_DWORD *)(v3 + 1))
      {
        Swift::Int v48 = *(unsigned int *)(v3 + 20);
        sub_100288FF8(__src, v60);
        uint64_t v49 = sub_10029C1C4((uint64_t)v60);
        sub_10034FEE8(v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1002890C4);
        sub_10034FFF0();
        if (v50)
        {
          v51._countAndFlagsBits = 32;
          v51._object = (void *)0xE100000000000000;
          ByteBuffer._setStringSlowpath(_:at:)(v51, v48);
        }
        sub_100254260();
        if (!v10)
        {
          *(_DWORD *)(v3 + 20) = v52;
          uint64_t v3 = sub_100288128((__n128 *)v63);
          sub_10034FEE8((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_10029BF60);
          BOOL v53 = __OFADD__(v5, v3);
          v5 += v3;
          if (!v53) {
            return v5;
          }
          __break(1u);
LABEL_41:
          Swift::Int v54 = *(unsigned int *)(v3 + 20);
          sub_10034FFF0();
          if (v55)
          {
            v56._countAndFlagsBits = 32;
            v56._object = (void *)0xE100000000000000;
            ByteBuffer._setStringSlowpath(_:at:)(v56, v54);
          }
          sub_100254260();
          if (!v10)
          {
            *(_DWORD *)(v3 + 20) = v57;
            sub_10034FD94((uint64_t)v63);
            BOOL v53 = __OFADD__(v5, v58);
            v5 += v58;
            if (!v53) {
              return v5;
            }
            goto LABEL_55;
          }
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      sub_10034FFC0(*(_DWORD *)(v3 + 1));
      sub_100288FF8(__src, v60);
      uint64_t v37 = sub_10029C1C4((uint64_t)v60);
      sub_10034FEE8(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_1002890C4);
      uint64_t v5 = sub_100288128((__n128 *)v63);
      sub_10034FEE8((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_10029BF60);
      return v5;
  }
}

uint64_t sub_10034FD20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ResponsePayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ResponseEncodeBuffer()
{
  return &type metadata for ResponseEncodeBuffer;
}

void sub_10034FD94(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10034EB88(a1);
  uint64_t v4 = v3;
  sub_100290B38(32, 0xE100000000000000);
  if (v6) {
    Swift::Int v5 = sub_10026D8F8(32, 0xE100000000000000);
  }
  int v7 = *(_DWORD *)(v1 + 20);
  Swift::Int v8 = (v7 + v5);
  if (__CFADD__(v7, v5))
  {
    __break(1u);
    goto LABEL_11;
  }
  *(_DWORD *)(v1 + 20) = v8;
  Swift::Int v9 = v4 + v5;
  if (__OFADD__(v4, v5))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v18._countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v18);
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = 658813;
  v19._object = (void *)0xE300000000000000;
  sub_1005E1E30(v19);
  swift_bridgeObjectRetain();
  sub_100210AD0(123, 0xE100000000000000, v1 + 8, v8);
  Swift::Int v11 = v10;
  char v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    v14._countAndFlagsBits = 123;
    v14._object = (void *)0xE100000000000000;
    Swift::Int v11 = ByteBuffer._setStringSlowpath(_:at:)(v14, v8);
  }
  swift_bridgeObjectRelease();
  int v15 = *(_DWORD *)(v2 + 20);
  BOOL v16 = __CFADD__(v15, v11);
  int v17 = v15 + v11;
  if (v16) {
    goto LABEL_12;
  }
  *(_DWORD *)(v2 + 20) = v17;
  if (__OFADD__(v9, v11)) {
LABEL_13:
  }
    __break(1u);
}

uint64_t sub_10034FEE8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))
{
  __int16 v4 = *(_WORD *)(a1 + 176);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    v4);
  return a1;
}

uint64_t sub_10034FF5C()
{
  return 0x323238434652;
}

void sub_10034FF74()
{
  Swift::UInt32 v2 = *(_DWORD *)(v0 + 20);
  sub_100210AD0(8234, 0xE200000000000000, v0 + 8, v2);
}

uint64_t sub_10034FFA0()
{
  return 0x4354454644495520;
}

void sub_10034FFC0(__int16 a1@<W8>)
{
  *(unsigned char *)(v1 + 5) = 0x80;
  *(_DWORD *)(v1 + 1) = a1 & 0x100 | 1;
}

uint64_t sub_10034FFD8()
{
  return 0x2820484354454620;
}

void sub_10034FFF0()
{
  sub_100210AD0(32, 0xE100000000000000, v0, v1);
}

BOOL static ResponseEncodingOptions.__derived_struct_equals(_:_:)(int a1, int a2)
{
  return ((a1 ^ a2) & 1) == 0;
}

NIOIMAPCore2::ResponseEncodingOptions __swiftcall ResponseEncodingOptions.init(capabilities:)(Swift::OpaquePointer capabilities)
{
  return (NIOIMAPCore2::ResponseEncodingOptions)1;
}

void ResponseEncodingOptions.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int ResponseEncodingOptions.hashValue.getter(char a1)
{
  return sub_1005E3470();
}

Swift::Int sub_1003500AC()
{
  return ResponseEncodingOptions.hashValue.getter(*v0);
}

void sub_1003500B4(uint64_t a1)
{
  ResponseEncodingOptions.hash(into:)(a1, *v1);
}

Swift::Int sub_1003500BC()
{
  Swift::UInt8 v1 = *v0;
  sub_1005E33F0();
  sub_1005E3420(v1);
  return sub_1005E3470();
}

unint64_t sub_100350104()
{
  unint64_t result = qword_100712720;
  if (!qword_100712720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712720);
  }
  return result;
}

BOOL sub_100350150(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ResponseEncodingOptions.__derived_struct_equals(_:_:)(*a1, *a2);
}

uint64_t getEnumTagSinglePayload for ResponseEncodingOptions(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ResponseEncodingOptions(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003502C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseEncodingOptions()
{
  return &type metadata for ResponseEncodingOptions;
}

uint64_t sub_1003502F8(uint64_t result, uint64_t a2, uint64_t *a3)
{
  unsigned int v4 = (char *)result;
  LODWORD(v5) = 0;
  int v6 = 0;
  if (result) {
    BOOL v7 = (unsigned __int8 *)(result + a2);
  }
  else {
    BOOL v7 = 0;
  }
  while (1)
  {
    int v21 = v5;
    unsigned __int8 v22 = v6;
    if (!(_BYTE)v6) {
      break;
    }
    if ((v5 & 0x80) == 0)
    {
      sub_1002102E0();
      char v13 = UnsafeExtractedAttachment.part.modify();
      sub_10035061C(0);
      ((void (*)(uint64_t *, void))v13)(&v19, 0);
      goto LABEL_34;
    }
    if (!v4)
    {
LABEL_19:
      unsigned int v11 = v5;
      goto LABEL_20;
    }
    Swift::Int v9 = (unsigned __int8 *)v4;
LABEL_9:
    if (v9 == v7) {
      goto LABEL_19;
    }
    unsigned int v4 = (char *)(v9 + 1);
    unsigned int v11 = v5;
    while (1)
    {
      int v12 = *v9++;
      unsigned int v11 = ((-255 << v6) - 1) & v11 | (v12 << v6);
      v6 += 8;
      if (v6 >= 0x20u) {
        break;
      }
      ++v4;
      if (v9 == v7)
      {
        unsigned int v4 = (char *)v7;
        if ((_BYTE)v6) {
          break;
        }
        return result;
      }
    }
LABEL_20:
    if ((v11 & 0xC0E0) == 0x80C0)
    {
      if ((v11 & 0x1E) == 0) {
        goto LABEL_32;
      }
      int v14 = 16;
    }
    else if ((v11 & 0xC0C0F0) == 0x8080E0)
    {
      if ((v11 & 0x200F) == 0 || (v11 & 0x200F) == 0x200D) {
        goto LABEL_32;
      }
      int v14 = 24;
    }
    else
    {
      if ((v11 & 0xC0C0C0F8) != 0x808080F0 || (v11 & 0x3007) == 0 || __rev16(v11 & 0x3007) > 0x400)
      {
LABEL_32:
        unint64_t result = sub_1005E3510();
        int v15 = 0;
        int v14 = 8 * result;
        goto LABEL_33;
      }
      int v14 = 32;
    }
    int v15 = 1;
LABEL_33:
    unint64_t v5 = (unint64_t)v11 >> (v14 & 0x38);
    int v21 = v5;
    v6 -= v14;
    unsigned __int8 v22 = v6;
    if (v15)
    {
LABEL_34:
      LODWORD(v5) = v21;
      int v6 = v22;
      uint64_t v16 = a3[1];
      uint64_t v19 = *a3;
      uint64_t v20 = v16;
      *a3 = 0;
      a3[1] = 0xE000000000000000;
      sub_1005E1D60();
      uint64_t v18 = v19;
      uint64_t v17 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *a3 = v18;
      a3[1] = v17;
      unint64_t result = swift_bridgeObjectRelease();
    }
  }
  if (v4 && v4 != (char *)v7)
  {
    int v8 = *v4++;
    Swift::Int v9 = (unsigned __int8 *)v4;
    int v10 = v8;
    if ((v8 & 0x80000000) == 0) {
      goto LABEL_34;
    }
    LODWORD(v5) = v5 & 0xFFFFFF00 | v10;
    int v6 = 8;
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_10035061C(uint64_t result)
{
  char v2 = *(unsigned char *)(v1 + 4);
  if (v2)
  {
    if (result <= 0xF7u)
    {
      uint64_t v3 = (*(_DWORD *)v1 >> result);
      int v4 = ((result + 8) - result) / -8;
      *(_DWORD *)uint64_t v1 = (*(_DWORD *)v1 >> (((result + 8) >> 1) & 0x1C) >> (((result + 8) >> 1) & 0x1C) << ((result + 8 + 8 * v4) & 0x18)) | *(_DWORD *)v1 & ((1 << ((result >> 1) & 0x1C) << ((result >> 1) & 0x1C)) - 1);
      *(unsigned char *)(v1 + 4) = v2 + 8 * v4;
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t AtomicFlag.Storage.deinit()
{
  return v0;
}

uint64_t AtomicFlag.Storage.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t variable initialization expression of Engine.didTearDown()
{
  type metadata accessor for AtomicFlag.Storage();
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t type metadata accessor for AtomicFlag.Storage()
{
  uint64_t result = qword_100712758;
  if (!qword_100712758) {
    return swift_getSingletonMetadata();
  }
  return result;
}

Swift::Bool __swiftcall AtomicFlag.testAndSet()()
{
  uint64_t v1 = v0;
  if (qword_100712730 != -1) {
    swift_once();
  }
  return atomicFlag_testAndSet(v1 + 16);
}

_UNKNOWN **atomicFlag_testAndSet.unsafeMutableAddressor()
{
  if (qword_100712730 != -1) {
    swift_once();
  }
  return &atomicFlag_testAndSet;
}

Swift::Void __swiftcall AtomicFlag.clear()()
{
  uint64_t v1 = v0;
  if (qword_100712738 != -1) {
    swift_once();
  }
  char v2 = (void (*)(uint64_t))atomicFlag_clear;
  v2(v1 + 16);
}

_UNKNOWN **atomicFlag_clear.unsafeMutableAddressor()
{
  if (qword_100712738 != -1) {
    swift_once();
  }
  return &atomicFlag_clear;
}

void *sub_100350898(uint64_t a1)
{
  return sub_1003508C0(a1, "atomic_flag_test_and_set", &atomicFlag_testAndSet);
}

void *sub_1003508AC(uint64_t a1)
{
  return sub_1003508C0(a1, "atomic_flag_clear", &atomicFlag_clear);
}

void *sub_1003508C0(uint64_t a1, const char *a2, void *a3)
{
  uint64_t result = dlsym((void *)0xFFFFFFFFFFFFFFFELL, a2);
  if (result) {
    *a3 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

ValueMetadata *type metadata accessor for AtomicFlag()
{
  return &type metadata for AtomicFlag;
}

uint64_t sub_100350904()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100350944()
{
  return type metadata accessor for AtomicFlag.Storage();
}

void type metadata accessor for SecTrustResultType(uint64_t a1)
{
}

void type metadata accessor for SecTrust(uint64_t a1)
{
}

uint64_t RandomAccessCollection.binarySearch(for:using:)@<X0>(char *a1@<X0>, uint64_t (*a2)(uint64_t, char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v62 = a2;
  uint64_t v63 = a3;
  uint64_t v46 = a6;
  uint64_t v50 = *(void *)(a5 + 8);
  uint64_t v10 = *(void *)(v50 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v64 = *(void (**)(void))(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v60 = (char *)&v45 - v11;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v70 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v45 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v45 - v19;
  __chkstk_darwin(v18);
  unsigned __int8 v22 = (char *)&v45 - v21;
  if (sub_1005E23D0())
  {
    Swift::Int v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
    uint64_t v24 = v46;
    return v23(v24, 1, 1, v12);
  }
  else
  {
    sub_1005E2390();
    sub_1005E23E0();
    sub_1005E1A30();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v47 + 8);
    Swift::String v59 = v17;
    uint64_t v68 = v26;
    uint64_t v69 = v47 + 8;
    v26(v17, v12);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    if (sub_1005E1AC0())
    {
      char v55 = (void (**)(void))((char *)v64 + 16);
      Swift::Int v54 = (void (**)(char *, uint64_t))((char *)v64 + 8);
      Swift::Int v48 = (void (**)(char *, char *, uint64_t))(v47 + 16);
      Swift::String v56 = (void (**)(char *, char *, uint64_t))(v47 + 32);
      long long v66 = a1;
      uint64_t v52 = v10;
      uint64_t v71 = a4;
      uint64_t v53 = a5;
      uint64_t v67 = v12;
      uint64_t v49 = v22;
      int v57 = v20;
      uint64_t v65 = v6;
      do
      {
        sub_1005E2320();
        sub_1005E2310();
        uint64_t v32 = sub_1005E24D0();
        uint64_t v34 = v60;
        uint64_t v33 = AssociatedTypeWitness;
        char v64 = *v55;
        v64(v60);
        ((void (*)(unsigned char *, void))v32)(v72, 0);
        int v35 = a1;
        Swift::String v36 = v62;
        LOBYTE(v32) = v62((uint64_t)v34, v35);
        uint64_t v37 = *v54;
        (*v54)(v34, v33);
        if (v32)
        {
          Swift::Int v27 = v59;
          Swift::UInt32 v28 = v70;
          sub_1005E23C0();
          uint64_t v29 = v22;
          uint64_t v20 = v57;
        }
        else
        {
          uint64_t v38 = *v48;
          Swift::String v51 = v37;
          Swift::Int v27 = v59;
          uint64_t v39 = v67;
          v38(v59, v70, v67);
          uint64_t v40 = sub_1005E24D0();
          v64(v34);
          ((void (*)(unsigned char *, void))v40)(v72, 0);
          v68(v27, v39);
          LOBYTE(v40) = v36((uint64_t)v66, v34);
          v51(v34, v33);
          if ((v40 & 1) == 0)
          {
            uint64_t v42 = v67;
            unint64_t v43 = v68;
            v68(v57, v67);
            v43(v49, v42);
            uint64_t v44 = v46;
            (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v46, v70, v42);
            return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v42);
          }
          Swift::UInt32 v28 = v70;
          sub_1005E1A30();
          uint64_t v20 = v57;
          uint64_t v29 = v57;
          unsigned __int8 v22 = v49;
        }
        uint64_t v12 = v67;
        unint64_t v30 = v68;
        v68(v28, v67);
        v30(v29, v12);
        (*v56)(v29, v27, v12);
        char v31 = sub_1005E1AC0();
        a1 = v66;
      }
      while ((v31 & 1) != 0);
    }
    uint64_t v41 = v68;
    v68(v20, v12);
    v41(v22, v12);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v46, 1, 1, v12);
  }
}

uint64_t RandomAccessCollection.binarySearch<A>(forKey:using:_:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, char *)@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(char *, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  int v61 = a4;
  uint64_t v62 = a5;
  uint64_t v47 = a3;
  uint64_t v46 = a2;
  uint64_t v60 = a1;
  uint64_t v42 = a8;
  uint64_t v48 = *(void *)(a7 + 8);
  uint64_t v11 = *(void *)(v48 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v63 = *(char **)(AssociatedTypeWitness - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v49 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v42 - v16;
  __chkstk_darwin();
  uint64_t v19 = (char *)&v42 - v18;
  __chkstk_darwin();
  uint64_t v21 = (char *)&v42 - v20;
  if (sub_1005E23D0())
  {
    unsigned __int8 v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56);
    uint64_t v23 = v42;
    return v22(v23, 1, 1, v14);
  }
  else
  {
    uint64_t v58 = v13;
    sub_1005E2390();
    sub_1005E23E0();
    sub_1005E1A30();
    uint64_t v67 = *(void (**)(char *, uint64_t))(v43 + 8);
    uint64_t v68 = v43 + 8;
    v67(v17, v14);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v25 = sub_1005E1AC0();
    uint64_t v26 = v49;
    if (v25)
    {
      uint64_t v52 = (char **)(v63 + 8);
      uint64_t v53 = (void (**)(char *))(v63 + 16);
      uint64_t v44 = (void (**)(char *, char *, uint64_t))(v43 + 16);
      Swift::Int v54 = (void (**)(char *, char *, uint64_t))(v43 + 32);
      uint64_t v50 = v11;
      uint64_t v51 = a7;
      uint64_t v66 = v14;
      uint64_t v45 = v21;
      char v55 = v19;
      Swift::String v56 = v17;
      uint64_t v64 = v8;
      uint64_t v65 = a6;
      do
      {
        sub_1005E2320();
        sub_1005E2310();
        uint64_t v30 = sub_1005E24D0();
        char v31 = *v53;
        uint64_t v32 = v58;
        uint64_t v33 = AssociatedTypeWitness;
        (*v53)(v58);
        ((void (*)(unsigned char *, void))v30)(v69, 0);
        uint64_t v34 = v60;
        LOBYTE(v30) = v61(v32, v60);
        uint64_t v63 = *v52;
        ((void (*)(char *, uint64_t))v63)(v32, v33);
        if (v30)
        {
          Swift::Int v27 = v56;
          sub_1005E23C0();
          Swift::UInt32 v28 = v21;
          uint64_t v19 = v55;
        }
        else
        {
          int v35 = v56;
          uint64_t v36 = v66;
          (*v44)(v56, v26, v66);
          uint64_t v37 = sub_1005E24D0();
          v31(v32);
          ((void (*)(unsigned char *, void))v37)(v69, 0);
          v67(v35, v36);
          LOBYTE(v37) = v46(v34, v32);
          ((void (*)(char *, uint64_t))v63)(v32, v33);
          if ((v37 & 1) == 0)
          {
            uint64_t v39 = v66;
            uint64_t v40 = v67;
            v67(v55, v66);
            v40(v45, v39);
            uint64_t v41 = v42;
            (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v42, v49, v39);
            return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56))(v41, 0, 1, v39);
          }
          uint64_t v26 = v49;
          sub_1005E1A30();
          uint64_t v19 = v55;
          Swift::UInt32 v28 = v55;
          uint64_t v21 = v45;
          Swift::Int v27 = v35;
        }
        uint64_t v14 = v66;
        uint64_t v29 = v67;
        v67(v26, v66);
        v29(v28, v14);
        (*v54)(v28, v27, v14);
      }
      while ((sub_1005E1AC0() & 1) != 0);
    }
    uint64_t v38 = v67;
    v67(v19, v14);
    v38(v21, v14);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v42, 1, 1, v14);
  }
}

uint64_t CertUITrustManager.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  CertUITrustManager.init()();
  return v0;
}

void CertUITrustManager.init()()
{
  uint64_t v1 = (NSString *)sub_1005E1BD0();
  char v2 = NSClassFromString(v1);

  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = (const char *)sub_1005E0B30();
  ClassMethod = class_getClassMethod(v2, v3);
  if (!ClassMethod)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  IMP Implementation = method_getImplementation(ClassMethod);
  uint64_t v6 = sub_1005E0B30();
  id v7 = (id)((uint64_t (*)(objc_class *, uint64_t))Implementation)(v2, v6);
  uint64_t v8 = (const char *)sub_1005E0B30();
  InstanceMethod = class_getInstanceMethod(v2, v8);
  if (!InstanceMethod)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  IMP v10 = method_getImplementation(InstanceMethod);
  uint64_t v11 = sub_1005E0B30();
  v0[2] = (id)((uint64_t (*)(id, uint64_t))v10)(v7, v11);
  uint64_t v12 = class_getInstanceMethod(v2, "rawTrustResultForSSLTrust:hostname:service:");
  if (!v12)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v0[3] = method_getImplementation(v12);
  uint64_t v13 = class_getInstanceMethod(v2, "allowTrust:forHost:service:");
  if (v13)
  {
    IMP v14 = method_getImplementation(v13);
    swift_unknownObjectRelease();
    v0[4] = v14;
    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t CertUITrustManager.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t CertUITrustManager.__deallocating_deinit()
{
  return sub_100351FA4();
}

uint64_t CertUITrustManager.rawTrustResult(forSSLTrust:hostname:service:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  NSString v6 = a5;
  uint64_t v10 = v5 + 16;
  uint64_t v8 = *(void *)(v5 + 16);
  Swift::Int v9 = *(uint64_t (**)(uint64_t, const char *, uint64_t, NSString, NSString))(v10 + 8);
  if (!a3)
  {
    NSString v11 = 0;
    if (!a5) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  NSString v11 = sub_1005E1BD0();
  if (v6) {
LABEL_3:
  }
    NSString v6 = sub_1005E1BD0();
LABEL_4:
  uint64_t v12 = v9(v8, "rawTrustResultForSSLTrust:hostname:service:", a1, v11, v6);

  return v12;
}

Swift::Void __swiftcall CertUITrustManager.allow(_:forHost:service:)(SecTrustRef_optional _, Swift::String_optional forHost, Swift::String_optional service)
{
  object = service.value._object;
  NSString v6 = *(void (**)(uint64_t, const char *, SecTrustRef, NSString))(v3 + 32);
  uint64_t v7 = *(void *)(v3 + 16);
  if (forHost.value._object)
  {
    NSString v8 = sub_1005E1BD0();
    if (object)
    {
LABEL_3:
      NSString v9 = sub_1005E1BD0();
      goto LABEL_6;
    }
  }
  else
  {
    NSString v8 = 0;
    if (service.value._object) {
      goto LABEL_3;
    }
  }
  NSString v9 = 0;
LABEL_6:
  id v10 = v9;
  v6(v7, "allowTrust:forHost:service:", _.value, v8);
}

uint64_t CertUITrustManager.showPrompt(hostname:service:trust:options:_:)(uint64_t a1, NSString a2, uint64_t a3, NSString a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  type metadata accessor for CertUIPrompt();
  uint64_t inited = swift_initStackObject();
  sub_100351DDC();
  IMP v14 = *(void (**)(uint64_t, const char *, NSString))(inited + 32);
  uint64_t v15 = *(void *)(inited + 16);
  if (a2) {
    a2 = sub_1005E1BD0();
  }
  v14(v15, "setHost:", a2);

  uint64_t v16 = *(void (**)(uint64_t, const char *, NSString))(inited + 40);
  uint64_t v17 = *(void *)(inited + 16);
  if (a4) {
    a4 = sub_1005E1BD0();
  }
  v16(v17, "setService:", a4);

  (*(void (**)(void, const char *, uint64_t))(inited + 24))(*(void *)(inited + 16), "setTrust:", a5);
  sub_100351CD0(a6, a7, a8);
  return swift_release();
}

uint64_t type metadata accessor for CertUIPrompt()
{
  return self;
}

void sub_100351CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v6 = *(void (**)(uint64_t, const char *, Class, void *))(v3 + 48);
  uint64_t v7 = *(void *)(v3 + 16);
  if (a1) {
    v8.super.isa = sub_1005E1950().super.isa;
  }
  else {
    v8.super.isa = 0;
  }
  v10[4] = a2;
  v10[5] = a3;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  void v10[2] = sub_100352190;
  void v10[3] = &unk_1006D9F20;
  NSString v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  v6(v7, "showPromptWithOptions:responseBlock:", v8.super.isa, v9);
  _Block_release(v9);
}

void sub_100351DDC()
{
  uint64_t v1 = (NSString *)sub_1005E1BD0();
  char v2 = NSClassFromString(v1);

  if (!v2)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v3 = (const char *)sub_1005E0B30();
  ClassMethod = class_getClassMethod(v2, v3);
  if (!ClassMethod)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  IMP Implementation = method_getImplementation(ClassMethod);
  uint64_t v6 = sub_1005E0B30();
  id v7 = (id)((uint64_t (*)(objc_class *, uint64_t))Implementation)(v2, v6);
  NSDictionary v8 = (const char *)sub_1005E0B30();
  InstanceMethod = class_getInstanceMethod(v2, v8);
  if (!InstanceMethod)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  IMP v10 = method_getImplementation(InstanceMethod);
  uint64_t v11 = sub_1005E0B30();
  v0[2] = (id)((uint64_t (*)(id, uint64_t))v10)(v7, v11);
  uint64_t v12 = class_getInstanceMethod(v2, "setTrust:");
  if (!v12)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v0[3] = method_getImplementation(v12);
  uint64_t v13 = class_getInstanceMethod(v2, "setHost:");
  if (!v13)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v0[4] = method_getImplementation(v13);
  IMP v14 = class_getInstanceMethod(v2, "setService:");
  if (!v14)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v0[5] = method_getImplementation(v14);
  uint64_t v15 = class_getInstanceMethod(v2, "showPromptWithOptions:responseBlock:");
  if (v15)
  {
    IMP v16 = method_getImplementation(v15);
    swift_unknownObjectRelease();
    v0[6] = v16;
    return;
  }
LABEL_15:
  __break(1u);
}

uint64_t type metadata accessor for CertUITrustManager()
{
  return self;
}

uint64_t sub_100351F9C()
{
  return sub_100351FA4();
}

uint64_t sub_100351FA4()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_100352190(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1003522B0()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003522E8()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1003522FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10035230C()
{
  return swift_release();
}

uint64_t Array.findAppendOnlyDiff<A>(from:id:added:removed:update:)(uint64_t a1, void *a2, void (**a3)(char *, void), void (**a4)(char *, void), void (*a5)(char *), void (**a6)(char *, void), void (*a7)(char *, char *), uint64_t a8, uint64_t a9, void (**a10)(char *, void))
{
  uint64_t v76 = a8;
  uint64_t v75 = (void (*)(char *, char *))a7;
  uint64_t v73 = a6;
  uint64_t v72 = (void (*)(char *))a5;
  uint64_t v71 = a4;
  uint64_t v70 = a3;
  uint64_t v11 = *a2;
  uint64_t v84 = a2;
  uint64_t v12 = *(void (***)(char *, void))(v11 + class metadata base offset for KeyPath);
  uint64_t v13 = (uint64_t)*(v12 - 1);
  uint64_t v14 = __chkstk_darwin(a9);
  uint64_t v74 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v69 - v17;
  long long v86 = *(void (***)(void, void))(v19 + 8);
  uint64_t v20 = (uint64_t)*(v86 - 1);
  uint64_t v21 = __chkstk_darwin(v16);
  char v78 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  char v25 = (char *)&v69 - v24;
  uint64_t v82 = v23;
  uint64_t v26 = sub_1005E21C0();
  uint64_t v87 = a10;
  if (v26 < 1)
  {
    uint64_t v27 = 0;
    uint64_t v88 = 0;
    uint64_t v81 = 0;
  }
  else
  {
    uint64_t v85 = a1;
    if (sub_1005E21C0() >= 1)
    {
      uint64_t v80 = v18;
      uint64_t v81 = 0;
      uint64_t v27 = 0;
      uint64_t v88 = 0;
      Swift::UInt32 v28 = (void (**)(char *, void))(v13 + 8);
      uint64_t v79 = v25;
      uint64_t v69 = (void (**)(char *, void))(v13 + 8);
      uint64_t v77 = (void (**)(char *, void))(v20 + 8);
      while (1)
      {
        uint64_t v29 = v80;
        sub_1005E2230();
        swift_getAtKeyPath();
        uint64_t v30 = *v28;
        (*v28)(v29, v12);
        sub_1005E2230();
        swift_getAtKeyPath();
        v30(v29, v12);
        char v31 = v86;
        if (sub_1005E1BC0())
        {
          uint64_t v83 = v27;
          uint64_t v32 = v88;
          sub_1005E2230();
          uint64_t v33 = v74;
          sub_1005E2230();
          v75(v29, v33);
          uint64_t v34 = v33;
          int v35 = v78;
          v30(v34, v12);
          v30(v29, v12);
          uint64_t v36 = *v77;
          uint64_t result = ((uint64_t (*)(char *, void))*v77)(v35, v31);
          BOOL v38 = __OFADD__(v32, 1);
          uint64_t v39 = v32 + 1;
          if (v38)
          {
            __break(1u);
LABEL_21:
            __break(1u);
LABEL_22:
            __break(1u);
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
          uint64_t v27 = v83 + 1;
          v36(v79, v31);
          uint64_t v88 = v39;
        }
        else
        {
          uint64_t v40 = v30;
          uint64_t result = sub_1005E21C0();
          if (result < v88) {
            goto LABEL_21;
          }
          uint64_t v95 = sub_1005E2220();
          uint64_t v96 = v41;
          uint64_t v97 = v42;
          uint64_t v98 = v43;
          __chkstk_darwin(v95);
          uint64_t v44 = v84;
          *(&v69 - 4) = v87;
          *(&v69 - 3) = (void (**)(char *, void))v44;
          uint64_t v45 = v79;
          *(&v69 - 2) = (void (**)(char *, void))v79;
          sub_1005E2A80();
          swift_getWitnessTable();
          uint64_t v46 = v81;
          sub_1005E2410();
          uint64_t result = swift_unknownObjectRelease();
          if (v94)
          {
            uint64_t v81 = v46;
            uint64_t v47 = v80;
            sub_1005E2230();
            v72(v47);
            Swift::UInt32 v28 = v69;
            v40(v47, v12);
            uint64_t v48 = *v77;
            uint64_t v49 = v86;
            (*v77)(v78, v86);
            ++v27;
            v48(v45, v49);
          }
          else
          {
            uint64_t v50 = v93;
            if (v93 < v88) {
              goto LABEL_22;
            }
            uint64_t v89 = sub_1005E2220();
            uint64_t v90 = v51;
            uint64_t v91 = v52;
            uint64_t v92 = v53;
            __chkstk_darwin(v89);
            uint64_t v83 = v27;
            char v55 = (void (**)(char *, void))v86;
            Swift::Int v54 = v87;
            *(&v69 - 6) = v12;
            *(&v69 - 5) = v55;
            Swift::String v56 = v70;
            *(&v69 - 4) = v54;
            *(&v69 - 3) = v56;
            *(&v69 - 2) = v71;
            swift_getWitnessTable();
            sub_1005E2020();
            uint64_t v81 = v46;
            swift_unknownObjectRelease();
            int v57 = *v77;
            (*v77)(v78, v55);
            v57(v79, v55);
            uint64_t v27 = v83;
            uint64_t v88 = v50;
            Swift::UInt32 v28 = v69;
          }
        }
        if (v88 >= sub_1005E21C0() || v27 >= sub_1005E21C0()) {
          goto LABEL_17;
        }
      }
    }
    uint64_t v27 = 0;
    uint64_t v88 = 0;
    uint64_t v81 = 0;
  }
LABEL_17:
  uint64_t result = sub_1005E21C0();
  if (result < v88) {
    goto LABEL_23;
  }
  uint64_t v95 = sub_1005E2220();
  uint64_t v96 = v58;
  uint64_t v97 = v59;
  uint64_t v98 = v60;
  __chkstk_darwin(v95);
  int v61 = (void (**)(char *, void))v86;
  uint64_t v62 = v87;
  *(&v69 - 6) = v12;
  *(&v69 - 5) = v61;
  uint64_t v63 = v70;
  *(&v69 - 4) = v62;
  *(&v69 - 3) = v63;
  *(&v69 - 2) = v71;
  sub_1005E2A80();
  swift_getWitnessTable();
  sub_1005E2020();
  swift_unknownObjectRelease();
  uint64_t result = sub_1005E21C0();
  if (result < v27)
  {
LABEL_24:
    __break(1u);
  }
  else
  {
    uint64_t v95 = sub_1005E2220();
    uint64_t v96 = v64;
    uint64_t v97 = v65;
    uint64_t v98 = v66;
    __chkstk_darwin(v95);
    uint64_t v67 = (void (**)(char *, void))v86;
    *(&v69 - 6) = v12;
    *(&v69 - 5) = v67;
    uint64_t v68 = (void (*)(void))v72;
    *(&v69 - 4) = v62;
    *(&v69 - 3) = (void (**)(char *, void))v68;
    *(&v69 - 2) = v73;
    sub_1005E2020();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100352B94(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(class metadata base offset for KeyPath + *a2 + 8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(a1);
  uint64_t v5 = (char *)&v8 - v4;
  swift_getAtKeyPath();
  char v6 = sub_1005E1BC0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

uint64_t sub_100352CB4()
{
  return sub_100352CF0();
}

uint64_t sub_100352CCC(uint64_t a1)
{
  return sub_100352B94(a1, *(void **)(v1 + 24)) & 1;
}

uint64_t sub_100352CF0()
{
  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t static DispatchData.makeMappedRead(fileDescriptor:count:)(int a1, size_t a2)
{
  uint64_t v4 = sub_1005E1720();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  id v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = mmap(0, a2, 1, 1, a1, 0);
  if (!v8 || (NSString v9 = v8, (v10 = sub_1005E1020()) != 0) && v9 == (void *)v10)
  {
    sub_100352E80();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchData.Deallocator.unmap(_:), v4);
    return sub_1005E1730();
  }
}

unint64_t sub_100352E80()
{
  unint64_t result = qword_1007129F0;
  if (!qword_1007129F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007129F0);
  }
  return result;
}

uint64_t static URL.makeTemporaryFile(baseDirectory:pathExtension:)(char *a1)
{
  uint64_t v3 = sub_1005E07F0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E0780();
  sub_1005E0790();
  id v7 = *(void (**)(char *, uint64_t))(v4 + 8);
  v7(v6, v3);
  uint64_t v8 = sub_1003531A4((uint64_t)sub_100353034, 0);
  if (v1) {
    v7(a1, v3);
  }
  return v8;
}

uint64_t sub_100353034@<X0>(char *a1@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  uint64_t v6 = sub_1005E0360();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  NSString v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = mkstemps(a1, a2);
  if ((int)result <= 0)
  {
    sub_1005E1050();
    uint64_t v11 = sub_1005E1030();
    if ((v11 & 0x100000000) != 0)
    {
      sub_100353A00();
      swift_allocError();
    }
    else
    {
      int v13 = v11;
      sub_100353A54((uint64_t)_swiftEmptyArrayStorage);
      sub_100353B80();
      sub_1005E06D0();
      sub_1005E0350();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return swift_willThrow();
  }
  else
  {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1003531A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v21 = a2;
  uint64_t v20 = a1;
  uint64_t v5 = sub_1005E07F0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000566C(&qword_1007129F8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E0720();
  uint64_t v12 = sub_1005E1DC0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v12 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v12 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  BOOL v14 = __OFADD__(v12, 1);
  int v15 = v12 + 1;
  if (v14)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v4, v5);
  __chkstk_darwin();
  uint64_t v16 = v21;
  *(&v19 - 4) = v20;
  *(&v19 - 3) = v16;
  *((_DWORD *)&v19 - 4) = v15;
  __chkstk_darwin();
  *(&v19 - 2) = (uint64_t)sub_100353910;
  *(&v19 - 1) = v17;
  sub_1005E07A0();
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v18(v4, v5);
    v18((uint64_t)v8, v5);
    uint64_t v8 = (char *)*(unsigned int *)v11;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v4, &v11[*(int *)(v9 + 48)], v5);
  }
  return (uint64_t)v8;
}

ValueMetadata *_s19MemoryMappingFailedVMa()
{
  return &_s19MemoryMappingFailedVN;
}

uint64_t sub_100353454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t *__return_ptr, char *, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _DWORD *a6@<X8>)
{
  void (*v42)(uint64_t *__return_ptr, char *, uint64_t);
  char *v43;
  uint64_t v44;

  uint64_t v42 = a3;
  uint64_t v41 = a4;
  uint64_t v10 = sub_10000566C(&qword_1007129F8);
  __chkstk_darwin();
  BOOL v38 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  int v13 = (char *)&v36 - v12;
  sub_10000566C(&qword_100712A08);
  __chkstk_darwin();
  int v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005E07F0();
  uint64_t v40 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v39 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    uint64_t v36 = v16;
    uint64_t v37 = a6;
    uint64_t v18 = v10;
LABEL_7:
    __chkstk_darwin();
    uint64_t v20 = (char *)&v36 - v19;
    sub_1005E2960();
    uint64_t v21 = v43;
    v42(&v44, v20, a5);
    if (v21) {
      return swift_willThrow();
    }
    uint64_t v43 = &v13[*(int *)(v18 + 48)];
    uint64_t v23 = v40;
    uint64_t v24 = v36;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v15, 1, 1, v36);
    char v25 = v39;
    sub_1005E07B0();
    sub_1003539A0((uint64_t)v15);
    uint64_t v26 = &v38[*(int *)(v18 + 48)];
    int v27 = v44;
    Swift::UInt32 v28 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v28(v26, v25, v24);
    uint64_t v29 = v43;
    v28(v43, v26, v24);
    uint64_t v30 = (char *)v37 + *(int *)(v18 + 48);
    _DWORD *v37 = v27;
    return ((uint64_t (*)(char *, char *, uint64_t))v28)(v30, v29, v24);
  }
  if (a2 - a1 < 0) {
    __break(1u);
  }
  if (a2 - a1 < 1025 || (swift_stdlib_isStackAllocationSafe() & 1) != 0)
  {
    uint64_t v36 = v16;
    uint64_t v37 = a6;
    uint64_t v18 = v10;
    goto LABEL_7;
  }
  uint64_t v31 = swift_slowAlloc();
  sub_1005E2960();
  uint64_t v32 = v43;
  v42(&v44, (char *)v31, a5);
  if (!v32)
  {
    uint64_t v33 = v40;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v15, 1, 1, v16);
    uint64_t v34 = v39;
    sub_1005E07B0();
    sub_1003539A0((uint64_t)v15);
    int v35 = (char *)a6 + *(int *)(v10 + 48);
    *a6 = v44;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v35, v34, v16);
  }
  return swift_slowDealloc();
}

size_t sub_100353870(const char *a1, uint64_t (*a2)(const char *, const char *))
{
  if (a1)
  {
    size_t result = strlen(a1);
    if (__OFADD__(result, 1)) {
      __break(1u);
    }
    else {
      return a2(a1, &a1[result + 1]);
    }
  }
  else
  {
    sub_10035394C();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_100353910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  return sub_100353454(a1, a2, *(void (**)(uint64_t *__return_ptr, char *, uint64_t))(v3 + 16), *(void *)(v3 + 24), *(unsigned int *)(v3 + 32), a3);
}

size_t sub_100353930(const char *a1)
{
  return sub_100353870(a1, *(uint64_t (**)(const char *, const char *))(v1 + 16));
}

unint64_t sub_10035394C()
{
  unint64_t result = qword_100712A00;
  if (!qword_100712A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712A00);
  }
  return result;
}

uint64_t sub_1003539A0(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100712A08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100353A00()
{
  unint64_t result = qword_100712A10;
  if (!qword_100712A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712A10);
  }
  return result;
}

unint64_t sub_100353A54(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000566C(&qword_100712A20);
  uint64_t v2 = sub_1005E2FF0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100353C50(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_100353BD8(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_100353CB8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100353B80()
{
  unint64_t result = qword_100712A18;
  if (!qword_100712A18)
  {
    sub_1005E0360();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712A18);
  }
  return result;
}

unint64_t sub_100353BD8(uint64_t a1, uint64_t a2)
{
  sub_1005E33F0();
  sub_1005E1DB0();
  Swift::Int v4 = sub_1005E3470();
  return sub_100353CC8(a1, a2, v4);
}

uint64_t sub_100353C50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(qword_100712A28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_100353CB8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_100353CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1005E3290() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1005E3290() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_1005E3290()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

ValueMetadata *_s25UnableToMakeTemporaryFileVMa()
{
  return &_s25UnableToMakeTemporaryFileVN;
}

ValueMetadata *type metadata accessor for InvalidTemporaryFileTemplate()
{
  return &type metadata for InvalidTemporaryFileTemplate;
}

uint64_t KeyedSequence.readKey.getter(uint64_t a1)
{
  return a1;
}

uint64_t FlagsChange.changeIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t KeyedSequence.init(element:key:)(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t Array.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

Swift::Void __swiftcall KeyedSequence.consolidate()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v76 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v59 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin();
  uint64_t v58 = (char *)&v50 - v7;
  uint64_t v8 = *(void *)(v6 + 24);
  uint64_t v69 = *(void *)(v8 - 8);
  __chkstk_darwin();
  char v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v77 = (char *)&v50 - v11;
  uint64_t v12 = sub_1005E28C0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __chkstk_darwin();
  uint64_t v79 = (char *)&v50 - v13;
  uint64_t v75 = v12;
  uint64_t v51 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v53 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v52 = (char *)&v50 - v15;
  __chkstk_darwin();
  uint64_t v72 = (char *)&v50 - v16;
  __chkstk_darwin();
  uint64_t v71 = (char *)&v50 - v17;
  uint64_t v60 = v4;
  uint64_t v80 = v4;
  uint64_t v81 = v8;
  uint64_t v57 = *(void *)(v3 + 32);
  uint64_t v82 = v57;
  uint64_t v83 = v2;
  uint64_t v18 = sub_1005E21F0();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1005E1B60();
  uint64_t v96 = sub_1005E2130();
  uint64_t v19 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1005E2180();
  swift_bridgeObjectRelease();
  uint64_t v74 = (void (**)(void))v2;
  uint64_t v21 = *(void *)(v2 + 24);
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1005E2180();
  swift_bridgeObjectRelease();
  if (__OFADD__(v20, v22))
  {
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    Swift::String v56 = v10;
    uint64_t v50 = v2 + 24;
    sub_1005E2100(v20 + v22);
    uint64_t v88 = v19;
    sub_1005E1B40();
    uint64_t v84 = v21;
    uint64_t v68 = v18;
    sub_1005E1B40();
    uint64_t v23 = sub_1005E2A80();
    uint64_t v70 = v51 + 32;
    char v78 = (uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48);
    char v55 = (void (**)(char *, char *, uint64_t))(v69 + 32);
    Swift::Int v54 = (void (**)(char *, uint64_t))(v76 + 8);
    uint64_t v65 = (void (**)(char *, uint64_t))(v69 + 8);
    uint64_t v69 = v8;
    uint64_t v67 = v23;
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v51 + 32);
    while (1)
    {
      uint64_t v64 = v92;
      uint64_t v84 = v92;
      uint64_t v85 = v93;
      uint64_t v63 = v93;
      uint64_t v62 = v94;
      long long v86 = v94;
      uint64_t v87 = v95;
      int v61 = v95;
      uint64_t WitnessTable = swift_getWitnessTable();
      Swift::UInt32 v28 = v71;
      sub_1005E2480();
      uint64_t v29 = v89;
      uint64_t v30 = v90;
      uint64_t v31 = v91;
      uint64_t v66 = v88;
      uint64_t v84 = v88;
      uint64_t v85 = v89;
      long long v86 = v90;
      uint64_t v87 = v91;
      uint64_t v32 = v72;
      uint64_t v76 = WitnessTable;
      sub_1005E2480();
      uint64_t v33 = v79;
      uint64_t v34 = &v79[*(int *)(TupleTypeMetadata2 + 48)];
      int v35 = *v24;
      uint64_t v36 = v75;
      (*v24)(v79, v28, v75);
      v35(v34, v32, v36);
      uint64_t v37 = *v78;
      uint64_t v38 = v69;
      LODWORD(v36) = (*v78)(v33, 1, v69);
      uint64_t v39 = v38;
      int v40 = v37(v34, 1, v38);
      if (v36 == 1) {
        break;
      }
      if (v40 == 1)
      {
        uint64_t v84 = v64;
        uint64_t v85 = v63;
        long long v86 = v62;
        uint64_t v87 = v61;
        swift_unknownObjectRetain();
        swift_getWitnessTable();
        sub_1005E2190();
        (*v65)(v79, v38);
        goto LABEL_13;
      }
      uint64_t v41 = *v55;
      uint64_t v42 = v77;
      (*v55)(v77, v79, v39);
      uint64_t v30 = v56;
      v41(v56, v34, v39);
      uint64_t v43 = (void (*)(char *))*v74;
      swift_retain();
      uint64_t v29 = v58;
      v43(v42);
      swift_release();
      swift_retain();
      uint64_t v44 = v59;
      v43(v30);
      swift_release();
      uint64_t v45 = v60;
      LOBYTE(v41) = sub_1005E1AA0();
      uint64_t v31 = v54;
      uint64_t v46 = *v54;
      (*v54)(v44, v45);
      v46(v29, v45);
      if (v41)
      {
        char v25 = v52;
        sub_1005E2400();
        if (v37(v25, 1, v39) == 1) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v47 = v53;
        uint64_t v34 = (char *)v67;
        sub_1005E2400();
        int v40 = v37(v47, 1, v39);
        if (v40 == 1)
        {
          __break(1u);
          break;
        }
      }
      sub_1005E21A0();
      uint64_t v26 = *v65;
      (*v65)(v30, v39);
      v26(v77, v39);
    }
    if (v40 != 1)
    {
      uint64_t v84 = v66;
      uint64_t v85 = v29;
      long long v86 = v30;
      uint64_t v87 = v31;
      swift_unknownObjectRetain();
      swift_getWitnessTable();
      sub_1005E2190();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v75);
    }
LABEL_13:
    sub_1005E21E0(1);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v48 = v96;
    uint64_t v49 = v74;
    swift_bridgeObjectRelease();
    v49[2] = (void (*)(void))v48;
  }
}

uint64_t KeyedSequence.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  KeyedSequence.index(for:)(a1, a2, a3, a4, a5, a6, a7, a8);
  if (v11 == -1)
  {
    uint64_t v12 = 1;
  }
  else
  {
    sub_1005E2230();
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 56);
  return v13(a9, v12, 1, a7);
}

uint64_t KeyedSequence.index(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v30 = a4;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v25 = a8;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v15 = a6;
  uint64_t v16 = a7;
  uint64_t v17 = a8;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  uint64_t v21 = a5;
  uint64_t v10 = sub_1005E21F0();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  RandomAccessCollection.binarySearch<A>(forKey:using:_:)(a1, (uint64_t (*)(uint64_t, char *))sub_100355EFC, (uint64_t)v22, (uint64_t (*)(char *, uint64_t))sub_100355F14, (uint64_t)v14, v10, WitnessTable, (uint64_t)&v31);
  swift_bridgeObjectRelease();
  if ((v32 & 1) == 0) {
    return v31;
  }
  v13[1] = v13;
  uint64_t v30 = a5;
  __chkstk_darwin();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1005E2410();
  swift_bridgeObjectRelease();
  if (v32) {
    return 0;
  }
  else {
    return v31;
  }
}

uint64_t KeyedSequence.subscript.getter()
{
  return sub_1005E2230();
}

BOOL KeyedSequence.contains(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  KeyedSequence.index(for:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v8 != -1;
}

void KeyedSequence.insert(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v35 = a1;
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v32 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v29 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = *(void *)(v7 + 16);
  uint64_t v8 = *(void *)(v34 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void (**)(uint64_t))v2;
  uint64_t v11 = *(void *)(v2 + 8);
  uint64_t v13 = *(void *)(v3 + 16);
  uint64_t v28 = (uint64_t *)(v3 + 16);
  uint64_t v14 = *(void *)(v3 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v35);
  uint64_t v30 = a2;
  uint64_t v15 = *(void *)(a2 + 32);
  uint64_t v16 = v34;
  uint64_t v33 = v5;
  unint64_t v31 = KeyedSequence.index(for:)((uint64_t)v10, (uint64_t)v12, v11, v13, v14, v34, v5, v15);
  char v18 = v17;
  LODWORD(v5) = ~v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  if (v5)
  {
    uint64_t v19 = v35;
    uint64_t v20 = v33;
    sub_1005E21F0();
    uint64_t v21 = v32;
    if (v18)
    {
      sub_1005E2120();
      uint64_t v23 = *(void *)(v3 + 24);
    }
    else
    {
      uint64_t v22 = v28;
      sub_1005E2120();
      uint64_t v23 = *v22;
    }
    unint64_t v25 = v31;
    sub_100355FA4(v31, v23);
    char isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
    uint64_t v27 = v23 & 0xFFFFFFFFFFFFFF8;
    if ((isClassOrObjCExistentialType & 1) == 0) {
      uint64_t v27 = v23;
    }
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 24))(v27+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v25, v19, v20);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v29, v35, v33);
    sub_1005E21F0();
    sub_1005E21A0();
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1005E2180();
    swift_bridgeObjectRelease();
    if (v24 >= 11) {
      KeyedSequence.consolidate()();
    }
  }
}

uint64_t KeyedSequence.insert<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a2;
  uint64_t v23 = a1;
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E28C0();
  __chkstk_darwin();
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = *(void *)(a3 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v20 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v19 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v23, a3);
  sub_1005E1F60();
  swift_getAssociatedConformanceWitness();
  uint64_t v22 = v15;
  uint64_t v23 = AssociatedTypeWitness;
  sub_1005E2950();
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v16(v9, 1, v4) != 1)
  {
    char v17 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    do
    {
      v17(v7, v9, v4);
      KeyedSequence.insert(_:)((uint64_t)v7, v21);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      sub_1005E2950();
    }
    while (v16(v9, 1, v4) != 1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v23);
}

BOOL KeyedSequence.update(key:_:)(uint64_t a1, void (*a2)(unint64_t), uint64_t a3, void *a4)
{
  uint64_t v6 = v4 + 2;
  uint64_t v7 = v4[2];
  uint64_t v8 = *v4;
  uint64_t v9 = v4[1];
  uint64_t v11 = v4[3];
  uint64_t v10 = v4 + 3;
  uint64_t v13 = a4[2];
  uint64_t v12 = a4[3];
  uint64_t v14 = a4[4];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v15 = KeyedSequence.index(for:)(a1, v8, v9, v7, v11, v13, v12, v14);
  char v17 = v16;
  LODWORD(v14) = ~v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v14)
  {
    sub_1005E21F0();
    if ((v17 & 1) == 0) {
      uint64_t v10 = v6;
    }
    sub_1005E2120();
    uint64_t v18 = *v10;
    sub_100355FA4(v15, *v10);
    if (_swift_isClassOrObjCExistentialType()) {
      uint64_t v19 = v18 & 0xFFFFFFFFFFFFFF8;
    }
    else {
      uint64_t v19 = v18;
    }
    a2(v19+ ((*(unsigned __int8 *)(*(void *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80))+ *(void *)(*(void *)(v12 - 8) + 72) * v15);
  }
  return ~v17 != 0;
}

uint64_t KeyedSequence.removeElement(forKey:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a2[3];
  KeyedSequence.index(for:)(a1, *v3, v3[1], v3[2], v3[3], a2[2], v5, a2[4]);
  if (v6 == -1)
  {
    uint64_t v7 = 1;
  }
  else
  {
    sub_1005E21F0();
    sub_1005E21B0();
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v8(a3, v7, 1, v5);
}

uint64_t sub_1003553FC(uint64_t a1, uint64_t a2, void (**a3)(uint64_t), uint64_t a4)
{
  uint64_t v8 = *(void *)(a4 - 8);
  uint64_t v9 = __chkstk_darwin(a1);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20 - v12;
  unint64_t v15 = *v14;
  swift_retain();
  v15(a1);
  swift_release();
  char v16 = *a3;
  swift_retain();
  v16(a2);
  swift_release();
  char v17 = sub_1005E1AA0();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v11, a4);
  v18(v13, a4);
  return v17 & 1;
}

uint64_t KeyedSequence.isEmpty.getter()
{
  sub_1005E21F0();
  swift_getWitnessTable();
  if (sub_1005E24A0()) {
    char v0 = sub_1005E24A0();
  }
  else {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t KeyedSequence.count.getter()
{
  uint64_t v0 = sub_1005E2180();
  uint64_t v1 = sub_1005E2180();
  BOOL v2 = __OFADD__(v0, v1);
  uint64_t result = v0 + v1;
  if (v2) {
    __break(1u);
  }
  return result;
}

uint64_t KeyedSequence.reduce<A>(into:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X6>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6)
{
  uint64_t v25 = a3;
  uint64_t v21 = a4;
  uint64_t v8 = *(void *)(a6 - 8);
  __chkstk_darwin();
  uint64_t v20 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)v18 - v10;
  __chkstk_darwin();
  uint64_t v13 = (char *)v18 - v12;
  uint64_t v27 = v14;
  uint64_t v24 = v8;
  uint64_t v19 = *(void (**)(char *))(v8 + 16);
  v19(v11);
  sub_1005E21F0();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  v18[1] = WitnessTable;
  uint64_t v16 = v26;
  sub_1005E2010();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v16)
  {
    uint64_t v27 = v25;
    ((void (*)(char *, char *, uint64_t))v19)(v20, v13, a6);
    swift_bridgeObjectRetain();
    sub_1005E2010();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v13, a6);
  }
  return result;
}

uint64_t KeyedSequence.makeIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = 0;
  a5[1] = 0;
  a5[2] = a1;
  a5[3] = a2;
  a5[4] = a3;
  a5[5] = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t KeyedSequence.Iterator.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = 0;
  a5[1] = 0;
  a5[2] = result;
  a5[3] = a2;
  a5[4] = a3;
  a5[5] = a4;
  return result;
}

uint64_t KeyedSequence.Iterator.array.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t KeyedSequence.Iterator.array.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return result;
}

uint64_t KeyedSequence.Iterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(a1 + 24);
  if (v4 < sub_1005E21C0())
  {
    sub_1005E2230();
    uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a2, 0, 1, v5);
    if (!__OFADD__(*v2, 1))
    {
      ++*v2;
      return result;
    }
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v7 = v2[1];
  if (v7 < sub_1005E21C0())
  {
    sub_1005E2230();
    uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a2, 0, 1, v5);
    uint64_t v8 = v2[1];
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (!v9)
    {
      v2[1] = v10;
      return result;
    }
    goto LABEL_11;
  }
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v11(a2, 1, 1, v5);
}

uint64_t sub_100355B24@<X0>(void *a1@<X8>)
{
  KeyedSequence.makeIterator()(*v1, v1[1], v1[2], v1[3], a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_100355B84()
{
  return KeyedSequence.count.getter();
}

uint64_t sub_100355B90()
{
  uint64_t v0 = sub_1003563E0();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100355BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12(v11);
  char v13 = sub_1005E1AA0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a7);
  return v13 & 1;
}

uint64_t sub_100355CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a7 - 8);
  uint64_t v9 = __chkstk_darwin();
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12(v9);
  char v13 = sub_1005E1AA0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a7);
  return v13 & 1;
}

uint64_t sub_100355DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(a7 - 8);
  uint64_t v9 = __chkstk_darwin();
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12(v9);
  char v13 = sub_1005E1BC0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a7);
  return v13 & 1;
}

uint64_t type metadata accessor for KeyedSequence()
{
  return sub_1000DAF2C();
}

uint64_t sub_100355ED8(uint64_t a1, uint64_t a2)
{
  return sub_1003553FC(a1, a2, *(void (***)(uint64_t))(v2 + 40), *(void *)(v2 + 16)) & 1;
}

uint64_t sub_100355EFC(uint64_t a1, uint64_t a2)
{
  return sub_100355F2C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void))sub_100355BDC);
}

uint64_t sub_100355F14(uint64_t a1, uint64_t a2)
{
  return sub_100355F2C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void))sub_100355CD0);
}

uint64_t sub_100355F2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[5], v3[6], v3[7], v3[8], v3[2], v3[3], v3[4]) & 1;
}

uint64_t sub_100355F6C(uint64_t a1)
{
  return sub_100355DC0(a1, v1[5], v1[6], v1[7], v1[8], v1[9], v1[2]) & 1;
}

uint64_t sub_100355FA4(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_100355FF8()
{
  return swift_getWitnessTable();
}

uint64_t sub_100356014()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_100356058(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1003560A8(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 sub_100356120(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_OWORD *sub_10035612C(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10035617C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003561C0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100356218(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 sub_1003562A0(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_OWORD *sub_1003562B4(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100356304(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10035634C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for KeyedSequence.Iterator()
{
  return sub_1000DAF2C();
}

uint64_t sub_1003563B0(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t type metadata accessor for KeyedSequence.Index()
{
  return sub_1000DAF2C();
}

void *MonotonicTime.bootTime.unsafeMutableAddressor()
{
  return &static MonotonicTime.bootTime;
}

__uint64_t static MonotonicTime.now()()
{
  __uint64_t result = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW_APPROX);
  if ((result & 0x8000000000000000) != 0) {
    __break(1u);
  }
  return result;
}

double static MonotonicTime.nanoSecondsPerSecond.getter()
{
  return 1000000000.0;
}

IMAP2Helpers::MonotonicTime __swiftcall MonotonicTime.init(nanoSeconds:since:)(IMAP2Helpers::MonotonicTime nanoSeconds, IMAP2Helpers::MonotonicTime since)
{
  if (nanoSeconds.rawValue >= 1)
  {
    BOOL v2 = __OFADD__(since.rawValue, nanoSeconds.rawValue);
    nanoSeconds.rawValue += since.rawValue;
    if (!v2) {
      return nanoSeconds;
    }
    __break(1u);
  }
  Swift::Int64 v3 = -nanoSeconds.rawValue;
  if (__OFSUB__(0, nanoSeconds.rawValue))
  {
    __break(1u);
    goto LABEL_9;
  }
  nanoSeconds.rawValue += since.rawValue;
  if (__OFSUB__(since.rawValue, v3)) {
LABEL_9:
  }
    __break(1u);
  return nanoSeconds;
}

IMAP2Helpers::MonotonicTime __swiftcall MonotonicTime.init(secondsSinceNow:)(Swift::Double secondsSinceNow)
{
  result.rawValue = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW_APPROX);
  if (result.rawValue < 0)
  {
    __break(1u);
  }
  else
  {
    return (IMAP2Helpers::MonotonicTime)_s12IMAP2Helpers13MonotonicTimeV7seconds5sinceACSd_ACtcfC_0(result.rawValue, secondsSinceNow);
  }
  return result;
}

Swift::Int sub_10035649C()
{
  Swift::UInt64 v1 = *v0;
  sub_1005E33F0();
  sub_1005E3450(v1);
  return sub_1005E3470();
}

void sub_1003564E4()
{
  sub_1005E3450(*v0);
}

int64_t DispatchTime.init(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1005E1670();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1005E1810();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t result = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW_APPROX);
  if (result < 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v11 = a1 - result;
  if (a1 >= result)
  {
LABEL_5:
    sub_1005E17F0();
    *uint64_t v5 = v11;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchTimeInterval.nanoseconds(_:), v2);
    sub_1005E1800();
    (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  if (__OFSUB__(result, a1)) {
    goto LABEL_7;
  }
  uint64_t v11 = a1 - result;
  if (!__OFSUB__(0, result - a1)) {
    goto LABEL_5;
  }
LABEL_8:
  __break(1u);
  return result;
}

Swift::Int64 __swiftcall MonotonicTime.nanoSeconds(since:)(IMAP2Helpers::MonotonicTime since)
{
  BOOL v3 = __OFSUB__(v1, since.rawValue);
  Swift::Int64 result = v1 - since.rawValue;
  if (result < 0 != v3)
  {
    BOOL v3 = __OFSUB__(since.rawValue, v1);
    Swift::Int64 v5 = since.rawValue - v1;
    if (v3)
    {
      __break(1u);
      goto LABEL_10;
    }
    BOOL v3 = __OFSUB__(0, v5);
    Swift::Int64 result = -v5;
    if (!__OFSUB__(0, v5)) {
      return result;
    }
    __break(1u);
  }
  if (v3) {
LABEL_10:
  }
    __break(1u);
  return result;
}

uint64_t Date.init(_:now:now:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  BOOL v4 = __OFSUB__(result, a2);
  if (result < a2)
  {
    uint64_t v5 = a2 - result;
    if (__OFSUB__(a2, result))
    {
      __break(1u);
      goto LABEL_11;
    }
    BOOL v4 = __OFSUB__(0, v5);
    if (!__OFSUB__(0, v5)) {
      goto LABEL_7;
    }
    __break(1u);
  }
  if (v4)
  {
LABEL_11:
    __break(1u);
    return result;
  }
LABEL_7:
  sub_1005E0900();
  uint64_t v6 = sub_1005E0970();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(a3, v6);
}

Swift::Double __swiftcall MonotonicTime.seconds(since:)(IMAP2Helpers::MonotonicTime since)
{
  BOOL v2 = __OFSUB__(v1, since.rawValue);
  uint64_t v3 = v1 - since.rawValue;
  if (v1 < since.rawValue)
  {
    if (__OFSUB__(since.rawValue, v1))
    {
      __break(1u);
      goto LABEL_9;
    }
    BOOL v2 = __OFSUB__(0, since.rawValue - v1);
    uint64_t v3 = v1 - since.rawValue;
    if (!v2) {
      return (double)v3 / 1000000000.0;
    }
    __break(1u);
  }
  if (!v2) {
    return (double)v3 / 1000000000.0;
  }
LABEL_9:
  __break(1u);
  return result;
}

int64_t static MonotonicTime.secondsSince(_:)(int64_t a1)
{
  int64_t result = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW_APPROX);
  if (result < 0)
  {
    __break(1u);
LABEL_6:
    __break(1u);
    return result;
  }
  if (a1 <= result && __OFSUB__(result, a1)) {
    goto LABEL_6;
  }
  return result;
}

BOOL static DownloadRequest.ID.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 < a2;
}

BOOL static MonotonicTime.<= infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a2 >= a1;
}

BOOL static DownloadRequest.ID.> infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a2 < a1;
}

BOOL static MonotonicTime.>= infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 >= a2;
}

BOOL sub_100356890(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL sub_1003568A4(void *a1, void *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1003568B8(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1003568CC(void *a1, void *a2)
{
  return *a2 < *a1;
}

uint64_t _s12IMAP2Helpers13MonotonicTimeV7seconds5sinceACSd_ACtcfC_0(uint64_t result, double a2)
{
  double v2 = round(a2 * 1000000000.0);
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v3 = (uint64_t)v2;
  if ((uint64_t)v2 >= 1)
  {
    BOOL v4 = __OFADD__(result, v3);
    result += v3;
    if (!v4) {
      return result;
    }
    __break(1u);
  }
  BOOL v4 = __OFSUB__(0, v3);
  uint64_t v5 = -v3;
  if (v4) {
    goto LABEL_14;
  }
  BOOL v4 = __OFSUB__(result, v5);
  result -= v5;
  if (v4) {
LABEL_15:
  }
    __break(1u);
  return result;
}

unint64_t sub_10035696C()
{
  unint64_t result = qword_100712BB0;
  if (!qword_100712BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712BB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MonotonicTime()
{
  return &type metadata for MonotonicTime;
}

uint64_t MutableCollection.modifyEach(_:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  uint64_t v6 = *(void *)(a3 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = v9;
  uint64_t v10 = *(void *)(v9 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin();
  uint64_t v43 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v48 = (char *)v42 - v13;
  __chkstk_darwin();
  uint64_t v47 = (char *)v42 - v14;
  __chkstk_darwin();
  uint64_t v16 = (char *)v42 - v15;
  char v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v55 = v4;
  v17(v8, v4, a3);
  uint64_t v57 = v16;
  uint64_t v51 = v10;
  sub_1005E2390();
  uint64_t v18 = v17;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v53 = v8;
  uint64_t v54 = v6 + 8;
  uint64_t v56 = a3;
  uint64_t v50 = v19;
  v19(v8, a3);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v52 = v11 + 16;
  uint64_t v21 = (void (**)(char *, uint64_t))(v11 + 8);
  v42[0] = v18;
  v42[1] = v6 + 16;
  while (1)
  {
    uint64_t v22 = v47;
    uint64_t v23 = AssociatedTypeWitness;
    v20(v47, v57, AssociatedTypeWitness);
    uint64_t v24 = v53;
    uint64_t v25 = v56;
    v18(v53, v55, v56);
    uint64_t v26 = v48;
    sub_1005E23E0();
    v50(v24, v25);
    swift_getAssociatedConformanceWitness();
    LOBYTE(v24) = sub_1005E1BC0();
    uint64_t v27 = *v21;
    (*v21)(v26, v23);
    v27(v22, v23);
    if (v24) {
      return ((uint64_t (*)(char *, uint64_t))v27)(v57, AssociatedTypeWitness);
    }
    uint64_t v28 = v21;
    uint64_t v29 = v53;
    uint64_t v30 = v43;
    unint64_t v31 = v20;
    v20(v43, v57, AssociatedTypeWitness);
    uint64_t v32 = v55;
    uint64_t v33 = (void (*)(unsigned char *, uint64_t))sub_1005E1B70();
    uint64_t v34 = v49;
    v44(v35);
    if (v34) {
      break;
    }
    uint64_t v49 = 0;
    v33(v58, 0);
    uint64_t v36 = v30;
    uint64_t v21 = v28;
    v27(v36, AssociatedTypeWitness);
    uint64_t v37 = v29;
    uint64_t v38 = v29;
    uint64_t v39 = v56;
    uint64_t v18 = (void (*)(char *, uint64_t, uint64_t))v42[0];
    ((void (*)(char *, uint64_t, uint64_t))v42[0])(v38, v32, v56);
    sub_1005E23F0();
    v50(v37, v39);
    uint64_t v20 = v31;
  }
  v33(v58, 1);
  uint64_t v41 = AssociatedTypeWitness;
  v27(v30, AssociatedTypeWitness);
  return ((uint64_t (*)(char *, uint64_t))v27)(v57, v41);
}

uint64_t RestartableTimer.__allocating_init(queue:repeating:leeway:closure:)(void *a1, uint64_t a2, uint64_t a3, const void *a4)
{
  swift_allocObject();
  uint64_t v8 = sub_100357334(a1, a2, a3, a4);
  _Block_release(a4);
  return v8;
}

uint64_t RestartableTimer.init(queue:repeating:leeway:closure:)(void *a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v5 = sub_100357334(a1, a2, a3, a4);
  _Block_release(a4);
  return v5;
}

uint64_t RestartableTimer.deinit()
{
  swift_getObjectType();
  sub_1005E26A0();
  if (*(unsigned char *)(v0 + 24) == 1) {
    sub_1005E26B0();
  }
  swift_unknownObjectRelease();

  return v0;
}

uint64_t RestartableTimer.__deallocating_deinit()
{
  swift_getObjectType();
  sub_1005E26A0();
  if (*(unsigned char *)(v0 + 24) == 1) {
    sub_1005E26B0();
  }
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

Swift::Void __swiftcall RestartableTimer.start()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E1850();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + 32);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = sub_1005E1860();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (*(unsigned char *)(v1 + 24) == 1)
    {
      swift_getObjectType();
      sub_1005E26B0();
      *(unsigned char *)(v1 + 24) = 0;
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall RestartableTimer.stop()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E1850();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + 32);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = sub_1005E1860();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if ((*(unsigned char *)(v1 + 24) & 1) == 0)
    {
      swift_getObjectType();
      sub_1005E26C0();
      *(unsigned char *)(v1 + 24) = 1;
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t RestartableTimer.isRunning.getter()
{
  uint64_t v1 = sub_1005E1850();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + 32);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5) {
    return (*(unsigned char *)(v0 + 24) & 1) == 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_100357334(void *a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v33 = a3;
  uint64_t v32 = a2;
  id v28 = a1;
  uint64_t v5 = sub_1005E1810();
  uint64_t v30 = *(void *)(v5 - 8);
  uint64_t v31 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v29 = (char *)&v26 - v9;
  uint64_t v10 = sub_1005E2640();
  uint64_t v27 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005E1680();
  __chkstk_darwin(v13);
  uint64_t v14 = sub_1005E16C0();
  __chkstk_darwin(v14 - 8);
  _Block_copy(a4);
  sub_1005E16B0();
  uint64_t v35 = &_swiftEmptyArrayStorage;
  sub_100357994(&qword_100712CD8, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000566C(&qword_100712CE0);
  sub_100057E98(&qword_100712CE8, &qword_100712CE0);
  sub_1005E2AD0();
  sub_1005E1840();
  swift_allocObject();
  sub_1005E1820();
  sub_100357954();
  uint64_t v35 = &_swiftEmptyArrayStorage;
  sub_100357994(&qword_100712CF8, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
  sub_10000566C(&qword_100712D00);
  sub_100057E98(&qword_100712D08, &qword_100712D00);
  sub_1005E2AD0();
  id v15 = v28;
  id v26 = v15;
  uint64_t v16 = sub_1005E2650();

  (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v10);
  swift_getObjectType();
  sub_1005E2670();
  sub_1005E17F0();
  char v17 = v29;
  uint64_t v18 = v32;
  sub_1005E1800();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v20 = v8;
  uint64_t v21 = v31;
  v19(v20, v31);
  uint64_t v22 = v33;
  sub_1005E27C0();
  swift_release();
  uint64_t v23 = sub_1005E1670();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8);
  v24(v22, v23);
  v24(v18, v23);
  v19(v17, v21);
  uint64_t result = v34;
  *(void *)(v34 + 32) = v26;
  *(void *)(result + 16) = v16;
  *(unsigned char *)(result + 24) = 1;
  return result;
}

uint64_t type metadata accessor for RestartableTimer()
{
  return self;
}

unsigned char *initializeBufferWithCopyOfBuffer for RestartableTimer.State(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

unsigned char *storeEnumTagSinglePayload for RestartableTimer.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003578C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RestartableTimer.State()
{
  return &type metadata for RestartableTimer.State;
}

unint64_t sub_100357900()
{
  unint64_t result = qword_100712CD0;
  if (!qword_100712CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712CD0);
  }
  return result;
}

unint64_t sub_100357954()
{
  unint64_t result = qword_100712CF0;
  if (!qword_100712CF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100712CF0);
  }
  return result;
}

uint64_t sub_100357994(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static PCG32Random.random.getter()
{
  return 0;
}

Swift::Void __swiftcall PCG32Random.seed(state:sequence:)(Swift::UInt64 state, Swift::UInt64 sequence)
{
  Swift::UInt64 v3 = (2 * sequence) | 1;
  *uint64_t v2 = v3 + 0x5851F42D4C957F2DLL * (v3 + state);
  v2[1] = v3;
}

Swift::UInt32 __swiftcall PCG32Random.next()()
{
  unint64_t v1 = *v0;
  *uint64_t v0 = v0[1] + 0x5851F42D4C957F2DLL * *v0;
  return __ROR4__((v1 >> 45) ^ (v1 >> 27), v1 >> 59);
}

Swift::UInt64 __swiftcall PCG32Random.next()()
{
  uint64_t v1 = v0[1];
  unint64_t v2 = v1 + 0x5851F42D4C957F2DLL * *v0;
  unsigned int v3 = __ROR4__((*v0 >> 45) ^ (*v0 >> 27), *v0 >> 59);
  *uint64_t v0 = v1 + 0x5851F42D4C957F2DLL * v2;
  return __ROR4__((v2 >> 45) ^ (v2 >> 27), v2 >> 59) | ((unint64_t)v3 << 32);
}

unint64_t sub_100357AD8()
{
  uint64_t v0 = PCG32Random.next()();
  return PCG32Random.next()() | (unint64_t)(v0 << 32);
}

BOOL sub_100357B08(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

__n128 initializeBufferWithCopyOfBuffer for PCG32Random(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

ValueMetadata *type metadata accessor for PCG32Random()
{
  return &type metadata for PCG32Random;
}

BOOL static MailboxName.stableOrder(_:_:)(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4)
{
  uint64_t v8 = MailboxName.inbox.unsafeMutableAddressor();
  uint64_t v9 = *v8;
  unint64_t v10 = *((unsigned int *)v8 + 2) | ((unint64_t)*((unsigned int *)v8 + 2) << 32);
  unint64_t v11 = a2 | ((unint64_t)a2 << 32);
  if (v10 == v11 && sub_100357CFC(*v8, a1) && v10 == (a4 | ((unint64_t)a4 << 32)) && sub_100357CFC(v9, a3)
    || v10 == (a4 | ((unint64_t)a4 << 32)) && sub_100357CFC(v9, a3))
  {
    return 0;
  }
  if (v10 == v11 && sub_100357CFC(v9, a1)) {
    return 1;
  }
  sub_100357C50((void *)(a3 + 32), (void *)(a1 + 32), a3 + 32 + *(void *)(a3 + 16), a1 + 32 + *(void *)(a1 + 16), &v13);
  return v13 == -1;
}

uint64_t static MailboxName.stableOrderCompare(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100357D80(a1, a3);
}

uint64_t sub_100357C50@<X0>(void *__s2@<X0>, void *__s1@<X2>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  if (__s1) {
    uint64_t v8 = a4 - (void)__s1;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = a3 - (void)__s2;
  if (a3 - (uint64_t)__s2 >= v8) {
    size_t v10 = v8;
  }
  else {
    size_t v10 = a3 - (void)__s2;
  }
  if (__s2) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = v8 & (v8 >> 63);
  }
  uint64_t result = memcmp(__s1, __s2, v11);
  if ((result & 0x80000000) != 0) {
    goto LABEL_11;
  }
  if (result)
  {
LABEL_13:
    uint64_t v13 = 1;
    goto LABEL_14;
  }
  if (__s2)
  {
    if (v8 >= v9)
    {
      if (v8 != v9) {
        goto LABEL_13;
      }
LABEL_21:
      uint64_t v13 = 0;
      goto LABEL_14;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (v8) {
      goto LABEL_13;
    }
    goto LABEL_21;
  }
LABEL_11:
  uint64_t v13 = -1;
LABEL_14:
  *a5 = v13;
  return result;
}

BOOL sub_100357CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 33) != *(unsigned __int8 *)(a2 + 33)) {
    return 0;
  }
  unsigned int v4 = (unsigned __int8 *)(a1 + 34);
  uint64_t v5 = (unsigned __int8 *)(a2 + 34);
  uint64_t v6 = v2 - 2;
  do
  {
    BOOL result = v6 == 0;
    if (!v6) {
      break;
    }
    int v8 = *v4++;
    int v7 = v8;
    int v9 = *v5++;
    --v6;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_100357D80(uint64_t a1, uint64_t a2)
{
  sub_100357C50((void *)(a2 + 32), (void *)(a1 + 32), a2 + 32 + *(void *)(a2 + 16), a1 + 32 + *(void *)(a1 + 16), &v3);
  return v3;
}

uint64_t sub_100357DCC()
{
  uint64_t v0 = sub_1005E0ED0();
  sub_10034E5B4(v0, qword_100712D10);
  sub_1003461B0(v0, (uint64_t)qword_100712D10);
  return sub_1005E0EC0();
}

uint64_t sub_100357E54()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  return swift_deallocClassInstance();
}

uint64_t sub_100357F00(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v19 = sub_1005E2600();
  uint64_t v5 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  int v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005E25F0();
  __chkstk_darwin(v8);
  uint64_t v9 = sub_1005E16C0();
  __chkstk_darwin(v9 - 8);
  *(void *)(v3 + 24) = a1;
  sub_10000566C(&qword_100712E68);
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 0;
  uint64_t v23 = v3;
  *(void *)(v3 + 32) = v10;
  unint64_t v18 = sub_100358C2C();
  id v20 = a1;
  swift_retain();
  sub_1005E16A0();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_100358C6C();
  sub_10000566C(&qword_100712E80);
  sub_100358CC4();
  sub_1005E2AD0();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v19);
  size_t v11 = (void *)sub_1005E2620();
  if (qword_100712748 != -1) {
    swift_once();
  }
  uint64_t v12 = (uint64_t (*)(void *, void *))off_100712D28;
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = v21;
  void v13[2] = v10;
  v13[3] = v14;
  v13[4] = v22;
  aBlock[4] = sub_100358D60;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100358708;
  aBlock[3] = &unk_1006DA308;
  id v15 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v16 = v12(v11, v15);

  swift_release();
  _Block_release(v15);
  swift_release();
  uint64_t result = v23;
  *(void *)(v23 + 16) = v16;
  return result;
}

uint64_t sub_100358250(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (*(unsigned char *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = a3();
  if (!v4) {
    return 0;
  }
  uint64_t v7 = v3;
  uint64_t v8 = v4;
  uint64_t v9 = v5;
  unint64_t v10 = v6;
  uint64_t v11 = sub_1003582CC(v3, v4, v5, v6);
  sub_100358D84(v7, v8, v9, v10);
  return v11;
}

uint64_t sub_1003582CC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 62;
  unint64_t v5 = a4;
  uint64_t v9 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      LODWORD(v9) = HIDWORD(a3) - a3;
      if (__OFSUB__(HIDWORD(a3), a3)) {
        goto LABEL_45;
      }
      uint64_t v9 = (int)v9;
LABEL_6:
      uint64_t v13 = v9 + 200;
      if (__OFADD__(v9, 200))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      break;
    case 2uLL:
      uint64_t v11 = *(void *)(a3 + 16);
      uint64_t v10 = *(void *)(a3 + 24);
      BOOL v12 = __OFSUB__(v10, v11);
      uint64_t v9 = v10 - v11;
      if (!v12) {
        goto LABEL_6;
      }
      goto LABEL_46;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v9 = BYTE6(a4);
      goto LABEL_6;
  }
  uint64_t v14 = swift_slowAlloc();
  *(_OWORD *)uint64_t v14 = 0u;
  *(_OWORD *)(v14 + 16) = 0u;
  *(_OWORD *)(v14 + 32) = 0u;
  *(_OWORD *)(v14 + 48) = 0u;
  *(_OWORD *)(v14 + 64) = 0u;
  *(_OWORD *)(v14 + 80) = 0u;
  *(_OWORD *)(v14 + 96) = 0u;
  *(_OWORD *)(v14 + 112) = 0u;
  *(_OWORD *)(v14 + 128) = 0u;
  *(_OWORD *)(v14 + 144) = 0u;
  *(_OWORD *)(v14 + 160) = 0u;
  *(_OWORD *)(v14 + 176) = 0u;
  *(void *)(v14 + 192) = 0;
  uint64_t v15 = v14;
  switch((int)v4)
  {
    case 1:
      uint64_t v17 = (a3 >> 32) - (int)a3;
      if (a3 >> 32 < (int)a3) {
        goto LABEL_48;
      }
      sub_100008D24(a3, v5);
      uint64_t v18 = sub_1005E0550();
      if (!v18) {
        goto LABEL_32;
      }
      uint64_t v19 = v18;
      uint64_t v20 = sub_1005E0580();
      if (__OFSUB__((int)a3, v20)) {
        goto LABEL_54;
      }
      uint64_t v21 = (void *)(v19 + (int)a3 - v20);
      goto LABEL_33;
    case 2:
      uint64_t v36 = a1;
      a1 = a2;
      v5 &= 0x3FFFFFFFFFFFFFFFuLL;
      uint64_t v17 = *(void *)(a3 + 16);
      a2 = *(void *)(a3 + 24);
      swift_retain();
      swift_retain();
      uint64_t v22 = sub_1005E0550();
      if (!v22)
      {
        uint64_t v25 = 0;
        uint64_t v26 = a2 - v17;
        if (!__OFSUB__(a2, v17)) {
          goto LABEL_17;
        }
LABEL_31:
        __break(1u);
LABEL_32:
        uint64_t v21 = 0;
LABEL_33:
        uint64_t v32 = sub_1005E0570();
        if (v13 < 200) {
          goto LABEL_51;
        }
        uint64_t v36 = a1;
        a1 = a2;
        if (v32 >= v17) {
          uint64_t v33 = v17;
        }
        else {
          uint64_t v33 = v32;
        }
        uint64_t v34 = (char *)v21 + v33;
        if (!v21) {
          uint64_t v34 = 0;
        }
        uint64_t v38 = v21;
        uint64_t v39 = v34;
        sub_100358DD0();
        sub_1005E04F0();
        sub_1000094D4(a3, v5);
        *(_DWORD *)uint64_t v15 = 1;
        if (__OFSUB__(HIDWORD(a3), a3)) {
          goto LABEL_52;
        }
        unint64_t v16 = HIDWORD(a3) - (int)a3;
LABEL_41:
        a2 = a1;
        a1 = v36;
        if (!HIDWORD(v16)) {
          goto LABEL_42;
        }
        goto LABEL_44;
      }
      uint64_t v23 = v22;
      uint64_t v24 = sub_1005E0580();
      if (__OFSUB__(v17, v24))
      {
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
      }
      uint64_t v25 = (void *)(v23 + v17 - v24);
      uint64_t v26 = a2 - v17;
      if (__OFSUB__(a2, v17)) {
        goto LABEL_31;
      }
LABEL_17:
      uint64_t v27 = sub_1005E0570();
      if (v13 < 200)
      {
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
      if (v27 >= v26) {
        uint64_t v28 = v26;
      }
      else {
        uint64_t v28 = v27;
      }
      uint64_t v29 = (char *)v25 + v28;
      if (!v25) {
        uint64_t v29 = 0;
      }
      v13 += v15;
      uint64_t v38 = v25;
      uint64_t v39 = v29;
      sub_100358DD0();
      sub_1005E04F0();
      swift_release();
      swift_release();
      *(_DWORD *)uint64_t v15 = 1;
      uint64_t v31 = *(void *)(a3 + 16);
      uint64_t v30 = *(void *)(a3 + 24);
      unint64_t v16 = v30 - v31;
      if (!__OFSUB__(v30, v31)) {
        goto LABEL_41;
      }
      __break(1u);
LABEL_26:
      memset(v37, 0, 14);
      if (v13 < 200)
      {
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      uint64_t v38 = v37;
      uint64_t v39 = (char *)v37;
      sub_100358DD0();
      sub_1005E04F0();
      LODWORD(v16) = 0;
LABEL_28:
      *(_DWORD *)uint64_t v15 = 1;
LABEL_42:
      *(_DWORD *)(v15 + 4) = v16;
      sub_100358AA8(a1, a2, (char *)(v15 + 136), 0x40uLL);
      return v15;
    case 3:
      goto LABEL_26;
    default:
      v37[0] = a3;
      LOWORD(v37[1]) = v5;
      BYTE2(v37[1]) = BYTE2(v5);
      BYTE3(v37[1]) = BYTE3(v5);
      BYTE4(v37[1]) = BYTE4(v5);
      BYTE5(v37[1]) = BYTE5(v5);
      if (v13 < 200) {
        goto LABEL_47;
      }
      unint64_t v16 = BYTE6(v5);
      uint64_t v38 = v37;
      uint64_t v39 = (char *)v37 + v16;
      sub_100358DD0();
      sub_1005E04F0();
      goto LABEL_28;
  }
}

uint64_t sub_100358708(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v4 = v3(a2);
  swift_release();
  return v4;
}

Swift::Void __swiftcall StateCapture.tearDown()()
{
  uint64_t v1 = sub_1005E1850();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v5 = (void *)v0[3];
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = sub_1005E1860();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_7:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v7 = v0[4];
  if (*(unsigned char *)(v7 + 16)) {
    return;
  }
  *(unsigned char *)(v7 + 16) = 1;
  if (qword_100712750 != -1) {
    goto LABEL_7;
  }
LABEL_4:
  off_100712D30(v0[2]);
}

uint64_t StateCapture.deinit()
{
  uint64_t result = *(void *)(v0 + 32);
  if (*(unsigned char *)(result + 16) == 1)
  {
    uint64_t v2 = *(void **)(v0 + 24);
    swift_release();

    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t StateCapture.__deallocating_deinit()
{
  if (*(unsigned char *)(*(void *)(v0 + 32) + 16) == 1)
  {

    swift_release();
    return swift_deallocClassInstance();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t StateCapture.__allocating_init(title:queue:capture:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a4;
  void v10[3] = a5;
  v10[4] = a1;
  v10[5] = a2;
  uint64_t v11 = swift_allocObject();
  sub_100357F00(a3, (uint64_t)sub_100358BE4, (uint64_t)v10);
  return v11;
}

uint64_t sub_1003589E8(void (*a1)(long long *__return_ptr), uint64_t a2, uint64_t a3, unint64_t a4)
{
  a1(&v8);
  if (v9)
  {
    sub_100021BFC(&v8, (uint64_t)v10);
    sub_100021C34((uint64_t)v10, (uint64_t)&v8);
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1003594FC(a3, a4, &v8);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v10);
  }
  else
  {
    sub_10035949C((uint64_t)&v8);
    return 0;
  }
  return v6;
}

char *sub_100358AA8(uint64_t a1, uint64_t a2, char *__dst, size_t __n)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000)) {
    return (char *)sub_1005E2C50();
  }
  if ((a2 & 0x2000000000000000) != 0)
  {
    *(void *)__src = a1;
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v6 = __src;
  }
  else if ((a1 & 0x1000000000000000) != 0)
  {
    uint64_t v6 = (const char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    uint64_t v6 = (const char *)sub_1005E2D30();
  }
  return strncpy(__dst, v6, __n);
}

void *sub_100358B7C(uint64_t a1)
{
  return sub_1003508C0(a1, "os_state_add_handler", &off_100712D28);
}

void *sub_100358B90(uint64_t a1)
{
  return sub_1003508C0(a1, "os_state_remove_handler", &off_100712D30);
}

uint64_t sub_100358BA4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100358BE4()
{
  return sub_1003589E8(*(void (**)(long long *__return_ptr))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t type metadata accessor for StateCapture()
{
  return self;
}

uint64_t type metadata accessor for StateCapture.Reference()
{
  return sub_1000DAF2C();
}

unint64_t sub_100358C2C()
{
  unint64_t result = qword_100712E70;
  if (!qword_100712E70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100712E70);
  }
  return result;
}

unint64_t sub_100358C6C()
{
  unint64_t result = qword_100712E78;
  if (!qword_100712E78)
  {
    sub_1005E25F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712E78);
  }
  return result;
}

unint64_t sub_100358CC4()
{
  unint64_t result = qword_100712E88;
  if (!qword_100712E88)
  {
    sub_10000744C(&qword_100712E80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712E88);
  }
  return result;
}

uint64_t sub_100358D20()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100358D60(uint64_t a1)
{
  return sub_100358250(a1, *(void *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t sub_100358D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100358D7C()
{
  return swift_release();
}

void sub_100358D84(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_1000094D4(a3, a4);
  }
}

unint64_t sub_100358DD0()
{
  unint64_t result = qword_100712E90;
  if (!qword_100712E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712E90);
  }
  return result;
}

char *sub_100358E24(char *__src)
{
  return strncpy(*(char **)(v1 + 16), __src, *(void *)(v1 + 24));
}

uint64_t sub_100358E44(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100358F18(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1000D65AC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000D65AC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_100358F18(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1005E2970();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1003590D4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1005E2D30();
  if (!v8)
  {
    sub_1005E2F10();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1005E3000();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1003590D4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10035916C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10035934C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10035934C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10035916C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1003592E4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1005E2C90();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1005E2F10();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1005E1E80();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_1005E3000();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1005E2F10();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1003592E4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10000566C(&qword_100712EA0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10035934C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100712EA0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10035949C(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100712E98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003594FC(uint64_t a1, unint64_t a2, void *a3)
{
  sub_1005E06C0();
  swift_allocObject();
  sub_1005E06B0();
  sub_1005E0690();
  sub_10003BCDC(a3, a3[3]);
  uint64_t v6 = sub_1005E06A0();
  unint64_t v8 = v7;
  unint64_t v9 = v7 >> 62;
  uint64_t v10 = v6;
  switch(v7 >> 62)
  {
    case 1uLL:
      LODWORD(v11) = HIDWORD(v6) - v6;
      if (!__OFSUB__(HIDWORD(v6), v6))
      {
        uint64_t v11 = (int)v11;
        goto LABEL_5;
      }
      __break(1u);
      goto LABEL_29;
    case 2uLL:
      uint64_t v13 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v6 + 24);
      BOOL v14 = __OFSUB__(v12, v13);
      uint64_t v11 = v12 - v13;
      if (v14)
      {
LABEL_29:
        __break(1u);
LABEL_30:
        swift_once();
        goto LABEL_7;
      }
LABEL_5:
      if (v11 <= 0x8000)
      {
LABEL_12:
        if (qword_100712740 != -1) {
          swift_once();
        }
        uint64_t v19 = sub_1005E0ED0();
        sub_1003461B0(v19, (uint64_t)qword_100712D10);
        swift_bridgeObjectRetain();
        sub_100008D24(v10, v8);
        swift_bridgeObjectRetain();
        sub_100008D24(v10, v8);
        unint64_t v16 = sub_1005E0EB0();
        os_log_type_t v20 = sub_1005E2590();
        if (os_log_type_enabled(v16, v20))
        {
          os_log_type_t v25 = v20;
          log = v16;
          uint64_t v21 = swift_slowAlloc();
          v28[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v21 = 136446466;
          swift_bridgeObjectRetain();
          sub_100358E44(a1, a2, v28);
          sub_1005E2960();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v21 + 12) = 2048;
          switch((int)v9)
          {
            case 1:
              sub_1000094D4(v10, v8);
              if (!__OFSUB__(HIDWORD(v10), v10)) {
                goto LABEL_23;
              }
              __break(1u);
              goto LABEL_32;
            case 2:
              uint64_t v23 = *(void *)(v10 + 16);
              uint64_t v22 = *(void *)(v10 + 24);
              sub_1000094D4(v10, v8);
              if (!__OFSUB__(v22, v23)) {
                goto LABEL_23;
              }
              __break(1u);
LABEL_22:
              sub_1000094D4(v10, v8);
LABEL_23:
              sub_1005E2960();
              sub_1000094D4(v10, v8);
              unint64_t v16 = log;
              _os_log_impl((void *)&_mh_execute_header, log, v25, "Encoded plist state capture data '%{public}s' is %{iec-bytes}ld", (uint8_t *)v21, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              goto LABEL_26;
            default:
              goto LABEL_22;
          }
        }
        goto LABEL_16;
      }
      if (qword_100712740 != -1) {
        goto LABEL_30;
      }
LABEL_7:
      uint64_t v15 = sub_1005E0ED0();
      sub_1003461B0(v15, (uint64_t)qword_100712D10);
      swift_bridgeObjectRetain();
      sub_100008D24(v10, v8);
      swift_bridgeObjectRetain();
      sub_100008D24(v10, v8);
      unint64_t v16 = sub_1005E0EB0();
      os_log_type_t v17 = sub_1005E25A0();
      if (!os_log_type_enabled(v16, v17))
      {
LABEL_16:
        sub_1000094D4(v10, v8);
        swift_bridgeObjectRelease_n();
        sub_1000094D4(v10, v8);
        goto LABEL_27;
      }
      uint64_t v18 = swift_slowAlloc();
      v28[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136446466;
      swift_bridgeObjectRetain();
      sub_100358E44(a1, a2, v28);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2048;
      if (v9 != 2)
      {
        sub_1000094D4(v10, v8);
        if (__OFSUB__(HIDWORD(v10), v10))
        {
LABEL_32:
          __break(1u);
          JUMPOUT(0x100359BE8);
        }
        goto LABEL_25;
      }
      unint64_t v9 = *(void *)(v10 + 16);
      os_log_t loga = *(os_log_t *)(v10 + 24);
      sub_1000094D4(v10, v8);
      if (__OFSUB__(loga, v9))
      {
        __break(1u);
        goto LABEL_12;
      }
LABEL_25:
      sub_1005E2960();
      sub_1000094D4(v10, v8);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Encoded plist state capture data '%{public}s' is %{iec-bytes}ld > 32KiB", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
LABEL_26:
      swift_slowDealloc();
LABEL_27:

      swift_release();
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a3);
      return a1;
    default:
      goto LABEL_12;
  }
}

void *EngineTracingID.invalid.unsafeMutableAddressor()
{
  return &static EngineTracingID.invalid;
}

uint64_t static EngineTracingID.invalid.getter()
{
  return 31;
}

void *EngineTracingID.test.unsafeMutableAddressor()
{
  return &static EngineTracingID.test;
}

void Header.Priority.hash(into:)(uint64_t a1, Swift::UInt8 a2)
{
}

Swift::Int Header.Priority.hashValue.getter(Swift::UInt8 a1)
{
  return sub_1005E3470();
}

Swift::Int sub_100359C98()
{
  Swift::UInt8 v1 = *v0;
  sub_1005E33F0();
  sub_1005E3420(v1);
  return sub_1005E3470();
}

void sub_100359CE0()
{
  sub_1005E3420(*v0);
}

uint64_t EngineTracingIDOwner.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  if (qword_100712EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_100712EB0 + 16;
  uint64_t v2 = (os_unfair_lock_s *)(qword_100712EB0 + 28);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_10035A15C(v1, &v4);
  os_unfair_lock_unlock(v2);
  LOBYTE(v1) = v4;
  swift_release();
  *(unsigned char *)(v0 + 16) = v1;
  return v0;
}

uint64_t EngineTracingIDOwner.init()()
{
  if (qword_100712EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_100712EB0 + 16;
  uint64_t v2 = (os_unfair_lock_s *)(qword_100712EB0 + 28);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_10035A15C(v1, &v4);
  os_unfair_lock_unlock(v2);
  LOBYTE(v1) = v4;
  swift_release();
  *(unsigned char *)(v0 + 16) = v1;
  return v0;
}

uint64_t EngineTracingIDOwner.deinit()
{
  if (qword_100712EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_100712EB0;
  unsigned __int8 v2 = *(unsigned char *)(v0 + 16);
  swift_retain();
  sub_100359EF0(v2, v1);
  swift_release();
  return v0;
}

void sub_100359EF0(unsigned __int8 a1, uint64_t a2)
{
  size_t v5 = (os_unfair_lock_s *)(a2 + 28);
  os_unfair_lock_lock((os_unfair_lock_t)(a2 + 28));
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v6 = (char **)(a2 + 16);
  unint64_t v7 = (char *)v8;
  int64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
    unint64_t v11 = 0;
    goto LABEL_22;
  }
  int v10 = a1;
  if (v7[32] == a1)
  {
    unint64_t v11 = 0;
  }
  else
  {
    if (v9 == 1)
    {
      unint64_t v11 = 1;
      goto LABEL_22;
    }
    uint64_t v20 = 33;
    while (1)
    {
      unint64_t v11 = v20 - 32;
      if (v7[v20] == v10) {
        break;
      }
      uint64_t v21 = v20 - 31;
      if (__OFADD__(v11, 1))
      {
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      ++v20;
      if (v21 == v9)
      {
        unint64_t v11 = v9;
        goto LABEL_22;
      }
    }
  }
  unint64_t v2 = v11 + 1;
  if (__OFADD__(v11, 1)) {
    goto LABEL_36;
  }
  if (v2 == v9) {
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v6 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_37;
  }
  while (1)
  {
    uint64_t v13 = v7 + 32;
    unint64_t v14 = v11 + 33;
    do
    {
      if ((v2 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      unint64_t v16 = *((void *)v7 + 2);
      if (v14 - 32 >= v16) {
        goto LABEL_31;
      }
      int v17 = v7[v14];
      if (v17 != v10)
      {
        if (v14 - 32 != v11)
        {
          if (v11 >= v16) {
            goto LABEL_34;
          }
          char v18 = v13[v11];
          v13[v11] = v17;
          v7[v14] = v18;
        }
        if (__OFADD__(v11++, 1)) {
          goto LABEL_32;
        }
        unint64_t v16 = *((void *)v7 + 2);
      }
      unint64_t v15 = v14 - 31;
      ++v14;
    }
    while (v15 != v16);
    *uint64_t v6 = v7;
    int64_t v9 = *((void *)v7 + 2);
LABEL_21:
    if (v9 >= (uint64_t)v11) {
      break;
    }
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    unint64_t v7 = sub_10035A418((uint64_t)v7);
  }
LABEL_22:
  sub_10035A42C(v11, v9);
  os_unfair_lock_unlock(v5);
}

uint64_t EngineTracingIDOwner.__deallocating_deinit()
{
  if (qword_100712EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_100712EB0;
  unsigned __int8 v2 = *(unsigned char *)(v0 + 16);
  swift_retain();
  sub_100359EF0(v2, v1);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_10035A110()
{
  sub_10000566C(&qword_100712F78);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 28) = 0;
  *(void *)(result + 16) = _swiftEmptyArrayStorage;
  *(unsigned char *)(result + 24) = 1;
  qword_100712EB0 = result;
  return result;
}

uint64_t sub_10035A15C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  unsigned __int8 v2 = (void *)result;
  unsigned int v4 = *(unsigned __int8 *)(result + 8);
  uint64_t v5 = *(void *)result;
  uint64_t v6 = *(void *)(*(void *)result + 16);
  unsigned int v7 = v4;
  while (1)
  {
    unsigned int v8 = v7;
    if (v7 < 0x1E) {
      ++v7;
    }
    else {
      unsigned int v7 = 1;
    }
    if (!v6) {
      break;
    }
    if (*(unsigned __int8 *)(v5 + 32) != v8)
    {
      if (v6 == 1) {
        goto LABEL_15;
      }
      if (*(unsigned __int8 *)(v5 + 33) != v8)
      {
        if (v6 != 2)
        {
          uint64_t v9 = 34;
          while (1)
          {
            uint64_t v10 = v9 - 31;
            if (__OFADD__(v9 - 32, 1)) {
              break;
            }
            if (*(unsigned __int8 *)(v5 + v9) == v8) {
              goto LABEL_2;
            }
            ++v9;
            if (v10 == v6) {
              goto LABEL_15;
            }
          }
          __break(1u);
          goto LABEL_23;
        }
LABEL_15:
        LOBYTE(v4) = v8;
        break;
      }
    }
LABEL_2:
    if (v7 == v4)
    {
      LOBYTE(v4) = 31;
      goto LABEL_20;
    }
  }
  *(unsigned char *)(result + 8) = v7;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result) {
    goto LABEL_17;
  }
LABEL_23:
  uint64_t result = (uint64_t)sub_10035A32C(0, v6 + 1, 1, (char *)v5);
  uint64_t v5 = result;
LABEL_17:
  unint64_t v12 = *(void *)(v5 + 16);
  unint64_t v11 = *(void *)(v5 + 24);
  if (v12 >= v11 >> 1)
  {
    uint64_t result = (uint64_t)sub_10035A32C((char *)(v11 > 1), v12 + 1, 1, (char *)v5);
    uint64_t v5 = result;
  }
  *(void *)(v5 + 16) = v12 + 1;
  *(unsigned char *)(v5 + v12 + 32) = v4;
  *unsigned __int8 v2 = v5;
LABEL_20:
  *a2 = v4;
  return result;
}

unint64_t sub_10035A2A4()
{
  unint64_t result = qword_100712EC8;
  if (!qword_100712EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712EC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for EngineTracingID()
{
  return &type metadata for EngineTracingID;
}

uint64_t type metadata accessor for EngineTracingIDOwner()
{
  return self;
}

char *sub_10035A32C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100712F70);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10035A418(uint64_t a1)
{
  return sub_10035A32C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_10035A42C(unint64_t result, int64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v6 = result;
  unint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v10 = v5 + v8;
    }
    else {
      int64_t v10 = v5;
    }
    unint64_t result = (unint64_t)sub_10035A32C((char *)result, v10, 1, (char *)v4);
    unint64_t v4 = result;
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  size_t v12 = v11 - a2;
  if (__OFSUB__(v11, a2)) {
    goto LABEL_26;
  }
  unint64_t result = v4 + 32 + v6;
  uint64_t v13 = (const void *)(v4 + 32 + a2);
  if (v6 != a2 || result >= (unint64_t)v13 + v12) {
    unint64_t result = (unint64_t)memmove((void *)result, v13, v12);
  }
  uint64_t v14 = *(void *)(v4 + 16);
  BOOL v15 = __OFADD__(v14, v8);
  uint64_t v16 = v14 + v8;
  if (!v15)
  {
    *(void *)(v4 + 16) = v16;
LABEL_20:
    *unsigned __int8 v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

void type metadata accessor for os_unfair_lock_s()
{
  if (!qword_100712F80)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_100712F80);
    }
  }
}

ValueMetadata *type metadata accessor for ActiveIdentifiers()
{
  return &type metadata for ActiveIdentifiers;
}

uint64_t initializeBufferWithCopyOfBuffer for ActiveIdentifiers.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActiveIdentifiers.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t initializeWithTake for ActiveIdentifiers.State(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for ActiveIdentifiers.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActiveIdentifiers.State(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActiveIdentifiers.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActiveIdentifiers.State()
{
  return &type metadata for ActiveIdentifiers.State;
}

uint64_t sub_10035A930()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10035A968()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10035AAF4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10035AEF0()
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 16))();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_10035AF28()
{
  (*(void (**)(void))(v0 + 16))();
  return v1;
}

uint64_t sub_10035B70C()
{
  (*(void (**)(void *__return_ptr))(v0 + 16))(v3);
  uint64_t v1 = v3[1];
  uint64_t v5 = v3[4];
  int v6 = v4;
  sub_10001D550((uint64_t)&v5);
  return v1;
}

Swift::Void __swiftcall DefaultStringInterpolation.appendInterpolation(_:)(IMAP2Tracing::EngineTracingID a1)
{
  sub_10035BB74();
  uint64_t v1 = sub_1005E1F20();
  unint64_t v3 = v2;
  if (sub_1005E1DC0() <= 1)
  {
    v4._countAndFlagsBits = 48;
    v4._object = (void *)0xE100000000000000;
    sub_1005E1E30(v4);
  }
  v5._countAndFlagsBits = v1;
  v5._object = v3;
  sub_1005E1E30(v5);
  swift_bridgeObjectRelease();
}

uint64_t sub_10035BAB0()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v3);
  uint64_t v1 = v5;
  long long v6 = v4;
  sub_10002A77C((uint64_t)&v6);
  return v1;
}

uint64_t sub_10035BB04()
{
  (*(void (**)(void))(v0 + 16))();
  return sub_1005E1CC0();
}

uint64_t sub_10035BB4C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_10035BB74()
{
  unint64_t result = qword_100712F88;
  if (!qword_100712F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712F88);
  }
  return result;
}

void *sub_10035BC0C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t MailboxTaskLoggerID.counter.getter()
{
  return *(unsigned __int16 *)(v0 + 24);
}

uint64_t MailboxTaskLoggerID.mailbox.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall MailboxTaskLoggerID.init(id:name:counter:mailbox:)(IMAP2Tracing::MailboxTaskLoggerID *__return_ptr retstr, IMAP2Tracing::EngineTracingID id, IMAP2Tracing::TaskName name, NIOIMAPCore2::MailboxLoggingCounter counter, NIOIMAPCore2::MailboxName mailbox)
{
  retstr->id = id;
  retstr->name = name;
  retstr->counter = counter;
  retstr->mailbox = mailbox;
}

__n128 initializeWithTake for TaskName(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TaskName(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for TaskName()
{
  return &type metadata for TaskName;
}

uint64_t sub_10035BCCC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TaskLoggerID(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for TaskLoggerID(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TaskLoggerID(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TaskLoggerID()
{
  return &type metadata for TaskLoggerID;
}

uint64_t destroy for MailboxTaskLoggerID()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MailboxTaskLoggerID(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MailboxTaskLoggerID(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

__n128 initializeWithTake for MailboxTaskLoggerID(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 28) = *(_OWORD *)(a2 + 28);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MailboxTaskLoggerID(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxTaskLoggerID(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 44)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxTaskLoggerID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 44) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 44) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxTaskLoggerID()
{
  return &type metadata for MailboxTaskLoggerID;
}

ValueMetadata *type metadata accessor for EngineLoggerID()
{
  return &type metadata for EngineLoggerID;
}

uint64_t sub_10035BFEC()
{
  sub_10035C468();
  uint64_t result = sub_1005E28B0();
  tracingLog = result;
  return result;
}

uint64_t *tracingLog.unsafeMutableAddressor()
{
  if (qword_100712EB8 != -1) {
    swift_once();
  }
  return &tracingLog;
}

uint64_t sub_10035C098()
{
  uint64_t v0 = sub_1005E0D80();
  sub_10034E5B4(v0, tracingSignposter);
  sub_1003461B0(v0, (uint64_t)tracingSignposter);
  if (qword_100712EB8 != -1) {
    swift_once();
  }
  id v1 = (id)tracingLog;
  return sub_1005E0D60();
}

uint64_t tracingSignposter.unsafeMutableAddressor()
{
  if (qword_100712EC0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1005E0D80();
  return sub_1003461B0(v0, (uint64_t)tracingSignposter);
}

uint64_t OSSignpostID.init(engine:kind:idA:idB:)(uint64_t a1, char a2, int a3, int a4)
{
  return OSSignpostID.init(_:)((a1 << 59) | ((unint64_t)(a3 & 0xFFFFFF) << 35) | ((unint64_t)(a4 & 0xFFFFFF) << 11) | ((unint64_t)((a2 + 1) & 0x1F) << 6));
}

uint64_t OSSignpostID.TraceKind.rawValue.getter(int a1)
{
  return (a1 + 1);
}

uint64_t OSSignpostID.init(engine:kind:connectionID:)(uint64_t a1, char a2, unsigned int a3)
{
  return OSSignpostID.init(_:)((a1 << 59) | ((unint64_t)a3 << 27) | ((unint64_t)((a2 + 1) & 0x1F) << 22));
}

Swift::Int sub_10035C1D4()
{
  char v1 = *v0;
  sub_1005E33F0();
  sub_1005E3420(v1 + 1);
  return sub_1005E3470();
}

void sub_10035C21C()
{
  sub_1005E3420(*v0 + 1);
}

Swift::Int sub_10035C24C()
{
  char v1 = *v0;
  sub_1005E33F0();
  sub_1005E3420(v1 + 1);
  return sub_1005E3470();
}

uint64_t sub_10035C290@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s2os12OSSignpostIDV12IMAP2TracingE9TraceKindO8rawValueAFSgs5UInt8V_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_10035C2BC(unsigned char *a1@<X8>)
{
  *a1 = *v1 + 1;
}

uint64_t _s2os12OSSignpostIDV12IMAP2TracingE9TraceKindO8rawValueAFSgs5UInt8V_tcfC_0(unsigned __int8 a1)
{
  if (a1 <= 6u) {
    return (0x5040302010006uLL >> (8 * a1));
  }
  else {
    return 6;
  }
}

unint64_t sub_10035C300()
{
  unint64_t result = qword_100712F90;
  if (!qword_100712F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712F90);
  }
  return result;
}

unsigned char *_s9TraceKindOwCP(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

unsigned char *_s9TraceKindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10035C430);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OSSignpostID.TraceKind()
{
  return &type metadata for OSSignpostID.TraceKind;
}

unint64_t sub_10035C468()
{
  unint64_t result = qword_100712F98;
  if (!qword_100712F98)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100712F98);
  }
  return result;
}

void ClientCommand.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v90 = a1;
  sub_10000566C(&qword_100712FC8);
  __chkstk_darwin();
  uint64_t v89 = (uint64_t)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v87 - v4;
  unint64_t v88 = *(void *)(type metadata accessor for SearchReturnOption() - 8);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  int64_t v9 = (char *)&v87 - v8;
  uint64_t v10 = sub_1005E0970();
  uint64_t v87 = *(void *)(v10 - 8);
  __chkstk_darwin();
  size_t v12 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100712FD0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v87 - v15;
  type metadata accessor for ClientCommand(0);
  __chkstk_darwin();
  char v18 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100360D98(v2, (uint64_t)v18, type metadata accessor for ClientCommand);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1005E3410(4uLL);
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      sub_1005E1DB0();
      goto LABEL_58;
    case 2u:
      uint64_t v20 = *((unsigned int *)v18 + 2);
      uint64_t v21 = *((void *)v18 + 2);
      uint64_t v22 = v90;
      sub_1005E3410(5uLL);
      sub_1005E3410(v20 | (v20 << 32));
      swift_bridgeObjectRelease();
      sub_100360F58(v22, v21);
      goto LABEL_58;
    case 3u:
      uint64_t v23 = *((unsigned int *)v18 + 2);
      Swift::UInt v24 = 6;
      goto LABEL_9;
    case 4u:
      uint64_t v23 = *((unsigned int *)v18 + 2);
      Swift::UInt v24 = 7;
      goto LABEL_9;
    case 5u:
      uint64_t v23 = *((unsigned int *)v18 + 2);
      Swift::UInt v24 = 8;
LABEL_9:
      sub_1005E3410(v24);
      sub_1005E3410(v23 | (v23 << 32));
      goto LABEL_58;
    case 6u:
      uint64_t v25 = *((unsigned int *)v18 + 2);
      uint64_t v26 = *((unsigned int *)v18 + 6);
      sub_1005E3410(9uLL);
      sub_1005E3410(v25 | (v25 << 32));
      swift_bridgeObjectRelease();
      sub_1005E3410(v26 | (v26 << 32));
      goto LABEL_58;
    case 7u:
      uint64_t v27 = *(void *)v18;
      uint64_t v28 = *((unsigned int *)v18 + 2);
      uint64_t v29 = *((void *)v18 + 2);
      uint64_t v30 = *((unsigned int *)v18 + 6);
      uint64_t v31 = *((void *)v18 + 4);
      uint64_t v32 = v90;
      sub_1005E3410(0xAuLL);
      if (v27)
      {
        sub_1005E3420(1u);
        sub_1005E3410(v28 | (v28 << 32));
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1005E3420(0);
      }
      if (v29)
      {
        sub_1005E3420(1u);
        sub_1005E3410(v30 | (v30 << 32));
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1005E3420(0);
      }
      sub_1005E3410(*(void *)(v31 + 16));
      uint64_t v85 = *(void *)(v31 + 16);
      if (v85)
      {
        uint64_t v86 = v31 + 32;
        do
        {
          sub_100360EB8(v86, (uint64_t)v91);
          sub_100360F14(v91, (void (*)(void, void, void, void, void, void, void, void))sub_1001F3560);
          ReturnOption.hash(into:)(v32);
          sub_100360F14(v91, (void (*)(void, void, void, void, void, void, void, void))sub_1001F34E8);
          v86 += 64;
          --v85;
        }
        while (v85);
      }
      goto LABEL_58;
    case 8u:
      uint64_t v33 = *((unsigned int *)v18 + 2);
      uint64_t v34 = *((void *)v18 + 2);
      uint64_t v35 = v90;
      sub_1005E3410(0xBuLL);
      sub_1005E3410(v33 | (v33 << 32));
      swift_bridgeObjectRelease();
      sub_100360A04(v35, v34);
      goto LABEL_58;
    case 9u:
      uint64_t v36 = *((unsigned int *)v18 + 2);
      uint64_t v37 = *((void *)v18 + 2);
      uint64_t v38 = sub_10000566C(&qword_100713008);
      uint64_t v39 = (uint64_t)&v18[*(int *)(v38 + 64)];
      int v40 = (uint64_t *)&v18[*(int *)(v38 + 80)];
      uint64_t v41 = *v40;
      unint64_t v88 = v40[1];
      uint64_t v89 = v41;
      sub_10001FDF0(v39, (uint64_t)v16, &qword_100712FD0);
      uint64_t v42 = v90;
      sub_1005E3410(0xCuLL);
      sub_1005E3410(v36 | (v36 << 32));
      swift_bridgeObjectRelease();
      sub_10001B1B0(v42, v37);
      swift_bridgeObjectRelease();
      sub_1000079E4((uint64_t)v16, (uint64_t)v14, &qword_100712FD0);
      uint64_t v43 = v87;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v14, 1, v10) == 1)
      {
        sub_1005E3420(0);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v12, v14, v10);
        sub_1005E3420(1u);
        sub_100363728(&qword_100713010, (void (*)(uint64_t))&type metadata accessor for Date);
        sub_1005E19C0();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v10);
      }
      unint64_t v84 = v88;
      uint64_t v83 = v89;
      sub_1005E08B0();
      sub_100007A48((uint64_t)v16, &qword_100712FD0);
      sub_1000094D4(v83, v84);
      return;
    case 0xAu:
      unint64_t v44 = *(void *)v18;
      Swift::UInt v45 = 17;
      goto LABEL_22;
    case 0xBu:
      unint64_t v47 = *(void *)v18;
      uint64_t v46 = *((void *)v18 + 1);
      uint64_t v48 = v90;
      sub_1005E3410(0x12uLL);
      SearchKey.hash(into:)(v48, v47);
      sub_1005E3410(*(void *)(v46 + 16));
      uint64_t v49 = *(void *)(v46 + 16);
      if (v49)
      {
        uint64_t v50 = v46 + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80));
        uint64_t v51 = *(void *)(v88 + 72);
        do
        {
          sub_100360D98(v50, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SearchReturnOption);
          SearchReturnOption.hash(into:)(v48);
          sub_100363110((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SearchReturnOption);
          v50 += v51;
          --v49;
        }
        while (v49);
      }
      goto LABEL_26;
    case 0xCu:
      unint64_t v44 = *(void *)v18;
      Swift::UInt v45 = 19;
LABEL_22:
      uint64_t v52 = v90;
      sub_1005E3410(v45);
      SearchKey.hash(into:)(v52, v44);
      sub_100360E00(v44);
      return;
    case 0xDu:
      unint64_t v47 = *(void *)v18;
      uint64_t v53 = *((void *)v18 + 1);
      uint64_t v54 = v90;
      sub_1005E3410(0x14uLL);
      SearchKey.hash(into:)(v54, v47);
      sub_1005E3410(*(void *)(v53 + 16));
      uint64_t v55 = *(void *)(v53 + 16);
      if (v55)
      {
        uint64_t v56 = v53 + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80));
        uint64_t v57 = *(void *)(v88 + 72);
        do
        {
          sub_100360D98(v56, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SearchReturnOption);
          SearchReturnOption.hash(into:)(v54);
          sub_100363110((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SearchReturnOption);
          v56 += v57;
          --v55;
        }
        while (v55);
      }
LABEL_26:
      sub_100360E00(v47);
      goto LABEL_58;
    case 0xEu:
      uint64_t v58 = &v18[*(int *)(sub_10000566C(&qword_100713000) + 48)];
      uint64_t v60 = *(void *)v58;
      Swift::UInt64 v59 = *((void *)v58 + 1);
      int v61 = v58[16];
      sub_10001FDF0((uint64_t)v18, (uint64_t)v5, &qword_100712FC8);
      uint64_t v62 = v90;
      sub_1005E3410(0x15uLL);
      sub_10000566C(&qword_100712FE0);
      sub_100360CD0();
      sub_1005E19C0();
      Swift::UInt v63 = *(void *)(v60 + 16);
      sub_1005E3410(v63);
      if (v63)
      {
        uint64_t v64 = v60 + 32;
        swift_bridgeObjectRetain();
        do
        {
          sub_1001F3740(v64, (uint64_t)v91);
          sub_1001F3814((uint64_t)v91, (void (*)(void, void, void, void, unint64_t))sub_1001F379C);
          FetchAttribute.hash(into:)(v62);
          sub_1001F3814((uint64_t)v91, (void (*)(void, void, void, void, unint64_t))sub_1001F385C);
          v64 += 40;
          --v63;
        }
        while (v63);
        swift_bridgeObjectRelease();
      }
      if (v61)
      {
        sub_1005E3420(0);
      }
      else
      {
        sub_1005E3420(1u);
        sub_1005E3450(v59);
      }
      sub_100007A48((uint64_t)v5, &qword_100712FC8);
      goto LABEL_58;
    case 0xFu:
      uint64_t v65 = &v18[*(int *)(sub_10000566C(&qword_100712FF8) + 48)];
      __int16 v66 = *v65;
      int v67 = v65[1];
      uint64_t v68 = *((void *)v65 + 1);
      uint64_t v69 = v89;
      sub_10001FDF0((uint64_t)v18, v89, &qword_100712FC8);
      uint64_t v70 = v90;
      sub_1005E3410(0x16uLL);
      sub_10000566C(&qword_100712FE0);
      sub_100360CD0();
      sub_1005E19C0();
      if (v67) {
        __int16 v71 = 256;
      }
      else {
        __int16 v71 = 0;
      }
      StoreFlags.hash(into:)(v70, v71 | v66, v68);
      uint64_t v72 = v69;
      goto LABEL_40;
    case 0x10u:
      uint64_t v73 = *(unsigned int *)&v18[*(int *)(sub_10000566C(&qword_100712FD8) + 48) + 8];
      uint64_t v74 = v89;
      sub_10001FDF0((uint64_t)v18, v89, &qword_100712FC8);
      Swift::UInt v75 = 23;
      goto LABEL_39;
    case 0x11u:
      uint64_t v73 = *(unsigned int *)&v18[*(int *)(sub_10000566C(&qword_100712FD8) + 48) + 8];
      uint64_t v74 = v89;
      sub_10001FDF0((uint64_t)v18, v89, &qword_100712FC8);
      Swift::UInt v75 = 24;
LABEL_39:
      sub_1005E3410(v75);
      sub_10000566C(&qword_100712FE0);
      sub_100360CD0();
      sub_1005E19C0();
      sub_1005E3410(v73 | (v73 << 32));
      uint64_t v72 = v74;
LABEL_40:
      sub_100007A48(v72, &qword_100712FC8);
LABEL_58:
      swift_bridgeObjectRelease();
      return;
    case 0x12u:
      uint64_t v76 = *(void *)v18;
      uint64_t v77 = *((void *)v18 + 1);
      uint64_t v78 = *((void *)v18 + 2);
      uint64_t v79 = v90;
      sub_1005E3410(0x19uLL);
      sub_100360B6C(v79, v76, v77, v78);
      swift_release();
      swift_release();
      goto LABEL_43;
    case 0x13u:
      long long v80 = *((_OWORD *)v18 + 1);
      v91[0] = *(_OWORD *)v18;
      v91[1] = v80;
      long long v81 = *((_OWORD *)v18 + 3);
      v91[2] = *((_OWORD *)v18 + 2);
      v91[3] = v81;
      sub_1005E3410(0x1AuLL);
      PushRegistrationInfo.hash(into:)();
      sub_10035F628((uint64_t)v91);
      return;
    case 0x14u:
      Swift::UInt v82 = 0;
      goto LABEL_53;
    case 0x15u:
      Swift::UInt v82 = 1;
      goto LABEL_53;
    case 0x16u:
      Swift::UInt v82 = 2;
      goto LABEL_53;
    case 0x17u:
      Swift::UInt v82 = 13;
      goto LABEL_53;
    case 0x18u:
      Swift::UInt v82 = 14;
      goto LABEL_53;
    case 0x19u:
      Swift::UInt v82 = 15;
      goto LABEL_53;
    case 0x1Au:
      Swift::UInt v82 = 16;
      goto LABEL_53;
    case 0x1Bu:
      Swift::UInt v82 = 27;
LABEL_53:
      sub_1005E3410(v82);
      break;
    default:
      uint64_t v19 = *((void *)v18 + 2);
      sub_1005E3410(3uLL);
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_bridgeObjectRelease_n();
      if (v19)
      {
        sub_1005E3420(1u);
        SocketAddressError.FailedToParseIPByteBuffer.hash(into:)();
LABEL_43:
        swift_release();
      }
      else
      {
        sub_1005E3420(0);
      }
      break;
  }
}

uint64_t sub_10035D0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    while (1)
    {
      uint64_t v4 = a1 + 32 + 16 * v3;
      uint64_t v5 = a2 + 32 + 16 * v3;
      if ((*(unsigned int *)(v4 + 8) | ((unint64_t)*(unsigned int *)(v4 + 8) << 32)) != (*(unsigned int *)(v5 + 8) | ((unint64_t)*(unsigned int *)(v5 + 8) << 32))) {
        break;
      }
      uint64_t v6 = *(void *)v4;
      uint64_t v7 = *(void *)v5;
      uint64_t v8 = *(void *)(v6 + 16);
      if (v8 != *(void *)(v7 + 16)) {
        break;
      }
      if (v8) {
        BOOL v9 = v6 == v7;
      }
      else {
        BOOL v9 = 1;
      }
      if (!v9)
      {
        if (*(unsigned __int8 *)(v6 + 32) != *(unsigned __int8 *)(v7 + 32)) {
          return 0;
        }
        if (v8 != 1)
        {
          if (*(unsigned __int8 *)(v6 + 33) != *(unsigned __int8 *)(v7 + 33)) {
            return 0;
          }
          if (v8 != 2)
          {
            if (*(unsigned __int8 *)(v6 + 34) != *(unsigned __int8 *)(v7 + 34)) {
              return 0;
            }
            uint64_t v10 = (unsigned __int8 *)(v6 + 35);
            uint64_t v11 = (unsigned __int8 *)(v7 + 35);
            for (uint64_t i = v8 - 3; i; --i)
            {
              int v14 = *v10++;
              int v13 = v14;
              int v15 = *v11++;
              if (v13 != v15) {
                return 0;
              }
            }
          }
        }
      }
      if (++v3 == v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_10035D1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v5 = *(void *)(a1 + 48);
  char v6 = *(unsigned char *)(a1 + 56);
  uint64_t v7 = *(void *)(a2 + 48);
  char v8 = *(unsigned char *)(a2 + 56);
  BOOL v9 = *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40);
  if (v9 || (char v10 = sub_1005E3290(), result = 0, (v10 & 1) != 0))
  {
    size_t v12 = (unsigned char *)(a1 + 88);
    uint64_t v13 = v2 - 1;
    for (uint64_t i = (unsigned char *)(a2 + 88); ; i += 32)
    {
      if (v6)
      {
        if ((v8 & 1) == 0) {
          return 0;
        }
      }
      else if (v8 & 1 | (((v7 ^ v5) & 0xFFFFFFFFFFFFC000) != 0))
      {
        return 0;
      }
      if (!v13) {
        break;
      }
      uint64_t v5 = *((void *)v12 - 1);
      char v6 = *v12;
      uint64_t v7 = *((void *)i - 1);
      char v8 = *i;
      BOOL v15 = *((void *)v12 - 3) == *((void *)i - 3) && *((void *)v12 - 2) == *((void *)i - 2);
      if (!v15 && (sub_1005E3290() & 1) == 0) {
        return 0;
      }
      v12 += 32;
      --v13;
    }
    return 1;
  }
  return result;
}

uint64_t sub_10035D2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  sub_1001F3740(a1 + 32, (uint64_t)v14);
  sub_1001F3740(a2 + 32, (uint64_t)v15);
  sub_1001F3814((uint64_t)v14, (void (*)(void, void, void, void, unint64_t))sub_1001F379C);
  sub_1001F3814((uint64_t)v15, (void (*)(void, void, void, void, unint64_t))sub_1001F379C);
  char v5 = static FetchAttribute.__derived_enum_equals(_:_:)((uint64_t)v14, (uint64_t)v15);
  sub_1001F3814((uint64_t)v15, (void (*)(void, void, void, void, unint64_t))sub_1001F385C);
  sub_1001F3814((uint64_t)v14, (void (*)(void, void, void, void, unint64_t))sub_1001F385C);
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = a2 + 72;
  uint64_t v7 = a1 + 72;
  do
  {
    BOOL v8 = --v2 == 0;
    if (!v2) {
      break;
    }
    uint64_t v9 = v7 + 40;
    sub_1001F3740(v7, (uint64_t)v12);
    sub_1001F3740(v6, (uint64_t)v13);
    sub_1001F3814((uint64_t)v12, (void (*)(void, void, void, void, unint64_t))sub_1001F379C);
    sub_1001F3814((uint64_t)v13, (void (*)(void, void, void, void, unint64_t))sub_1001F379C);
    char v10 = static FetchAttribute.__derived_enum_equals(_:_:)((uint64_t)v12, (uint64_t)v13);
    sub_1001F3814((uint64_t)v13, (void (*)(void, void, void, void, unint64_t))sub_1001F385C);
    sub_1001F3814((uint64_t)v12, (void (*)(void, void, void, void, unint64_t))sub_1001F385C);
    uint64_t v7 = v9;
    v6 += 40;
  }
  while ((v10 & 1) != 0);
  return v8;
}

uint64_t sub_10035D478(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageData.BodyData();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v39 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_1007131E8);
  __chkstk_darwin();
  BOOL v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_10000566C(&qword_1007131F0);
  __chkstk_darwin();
  uint64_t v38 = (uint64_t)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for MessageData.BodySection();
  __chkstk_darwin();
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  int v14 = (char *)&v33 - v13;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v15 && v42 != v43)
  {
    uint64_t v37 = v4;
    uint64_t v33 = 0;
    uint64_t v34 = v8;
    unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v35 = *(void *)(v12 + 72);
    uint64_t v36 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v17 = v38;
    while (1)
    {
      sub_100360D98(v42 + v16, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      sub_100360D98(v43 + v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      if (!static SectionSpecifier.__derived_struct_equals(_:_:)(*(void **)v14, *((void *)v14 + 1), v14[16], *(void **)v11, *((void *)v11 + 1), v11[16]))
      {
LABEL_28:
        sub_100363110((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
        sub_100363110((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
        return 0;
      }
      char v18 = v11[24];
      if (v14[24])
      {
        if (!v11[24]) {
          goto LABEL_28;
        }
      }
      else
      {
        if (*((_DWORD *)v14 + 5) != *((_DWORD *)v11 + 5)) {
          char v18 = 1;
        }
        if (v18) {
          goto LABEL_28;
        }
      }
      uint64_t v19 = *(int *)(v40 + 24);
      uint64_t v20 = (uint64_t)&v11[v19];
      uint64_t v21 = v17 + *(int *)(v41 + 48);
      sub_1000079E4((uint64_t)&v14[v19], v17, &qword_1007131E8);
      sub_1000079E4(v20, v21, &qword_1007131E8);
      uint64_t v22 = v37;
      uint64_t v23 = *v36;
      if ((*v36)(v17, 1, v37) == 1) {
        break;
      }
      uint64_t v24 = v17;
      uint64_t v25 = (uint64_t)v34;
      sub_1000079E4(v24, (uint64_t)v34, &qword_1007131E8);
      if (v23(v21, 1, v22) == 1)
      {
        uint64_t v32 = &qword_1007131F0;
        goto LABEL_26;
      }
      sub_100368440(v21, v39, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
      uint64_t v26 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      if (v26 != _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0())
      {
        sub_100363110(v39, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
        uint64_t v32 = &qword_1007131E8;
LABEL_26:
        sub_100363110((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
        uint64_t v17 = v38;
LABEL_27:
        sub_100007A48(v17, v32);
        goto LABEL_28;
      }
      sub_1005E17E0();
      sub_100363728((unint64_t *)&qword_1007131F8, (void (*)(uint64_t))&type metadata accessor for DispatchData);
      sub_1005E2390();
      sub_1005E23E0();
      uint64_t v27 = v25;
      if (v45 == v44)
      {
        sub_100363110(v39, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
        sub_100363110(v25, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
        uint64_t v17 = v38;
LABEL_6:
        sub_100007A48(v17, &qword_1007131E8);
        goto LABEL_7;
      }
      __chkstk_darwin();
      uint64_t v28 = v39;
      *(&v33 - 2) = v39;
      *(&v33 - 1) = v27;
      uint64_t v29 = v33;
      sub_1005E1760();
      uint64_t v33 = v29;
      char v30 = v45;
      sub_100363110(v28, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
      sub_100363110(v27, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
      uint64_t v17 = v38;
      sub_100007A48(v38, &qword_1007131E8);
      if ((v30 & 1) == 0) {
        goto LABEL_28;
      }
LABEL_7:
      sub_100363110((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      sub_100363110((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      v16 += v35;
      if (!--v15) {
        return 1;
      }
    }
    if (v23(v21, 1, v22) != 1)
    {
      uint64_t v32 = &qword_1007131F0;
      goto LABEL_27;
    }
    goto LABEL_6;
  }
  return 1;
}

uint64_t sub_10035DA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v6 = 1;
    }
    else
    {
      uint64_t v3 = a1 + 32;
      uint64_t v4 = a2 + 32;
      uint64_t v5 = v2 - 1;
      do
      {
        sub_100360EB8(v3, (uint64_t)v10);
        sub_100360EB8(v4, (uint64_t)v11);
        sub_100360F14(v10, (void (*)(void, void, void, void, void, void, void, void))sub_1001F3560);
        sub_100360F14(v11, (void (*)(void, void, void, void, void, void, void, void))sub_1001F3560);
        char v6 = static ReturnOption.__derived_enum_equals(_:_:)(v10, v11);
        sub_100360F14(v11, (void (*)(void, void, void, void, void, void, void, void))sub_1001F34E8);
        sub_100360F14(v10, (void (*)(void, void, void, void, void, void, void, void))sub_1001F34E8);
        BOOL v8 = v5-- != 0;
        if ((v6 & 1) == 0) {
          break;
        }
        v3 += 64;
        v4 += 64;
      }
      while (v8);
    }
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_10035DB94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    uint64_t v4 = (unsigned __int8 *)(a2 + 32);
    while (1)
    {
      unsigned int v7 = *v3++;
      uint64_t v6 = v7;
      unsigned int v9 = *v4++;
      uint64_t v8 = v9;
      unint64_t v10 = 0xE800000000000000;
      uint64_t v11 = 0x534547415353454DLL;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE600000000000000;
          uint64_t v11 = 0x544E45434552;
          break;
        case 2:
          unint64_t v10 = 0xE700000000000000;
          uint64_t v11 = 0x5458454E444955;
          break;
        case 3:
          uint64_t v11 = 0x44494C4156444955;
          uint64_t v12 = 5854281;
          goto LABEL_15;
        case 4:
          unint64_t v10 = 0xE600000000000000;
          uint64_t v11 = 0x4E4545534E55;
          break;
        case 5:
          unint64_t v10 = 0xE400000000000000;
          uint64_t v11 = 1163544915;
          break;
        case 6:
          uint64_t v11 = 0x4D54534548474948;
          unint64_t v10 = 0xED0000514553444FLL;
          break;
        case 7:
          uint64_t v11 = 0x494C444E45505041;
          uint64_t v12 = 5523789;
LABEL_15:
          unint64_t v10 = v12 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        default:
          break;
      }
      unint64_t v13 = 0xE800000000000000;
      uint64_t v14 = 0x534547415353454DLL;
      switch(v8)
      {
        case 1:
          unint64_t v13 = 0xE600000000000000;
          if (v11 == 0x544E45434552) {
            goto LABEL_28;
          }
          goto LABEL_5;
        case 2:
          unint64_t v13 = 0xE700000000000000;
          if (v11 != 0x5458454E444955) {
            goto LABEL_5;
          }
          goto LABEL_28;
        case 3:
          uint64_t v15 = 0x44494C4156444955;
          uint64_t v16 = 5854281;
          goto LABEL_32;
        case 4:
          unint64_t v13 = 0xE600000000000000;
          if (v11 != 0x4E4545534E55) {
            goto LABEL_5;
          }
          goto LABEL_28;
        case 5:
          unint64_t v13 = 0xE400000000000000;
          if (v11 != 1163544915) {
            goto LABEL_5;
          }
          goto LABEL_28;
        case 6:
          uint64_t v14 = 0x4D54534548474948;
          unint64_t v13 = 0xED0000514553444FLL;
          goto LABEL_27;
        case 7:
          uint64_t v15 = 0x494C444E45505041;
          uint64_t v16 = 5523789;
LABEL_32:
          unint64_t v13 = v16 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          if (v11 != v15) {
            goto LABEL_5;
          }
          goto LABEL_28;
        default:
LABEL_27:
          if (v11 != v14) {
            goto LABEL_5;
          }
LABEL_28:
          if (v10 == v13)
          {
            swift_bridgeObjectRelease_n();
            if (!--v2) {
              return 1;
            }
          }
          else
          {
LABEL_5:
            char v5 = sub_1005E3290();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v5 & 1) == 0) {
              return 0;
            }
            if (!--v2) {
              return 1;
            }
          }
          break;
      }
    }
  }
  return 1;
}

BOOL sub_10035DE80(uint64_t a1, uint64_t a2)
{
  type metadata accessor for SearchReturnOption();
  __chkstk_darwin();
  char v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9 == *(void *)(a2 + 16))
  {
    if (!v9 || a1 == a2)
    {
      return 1;
    }
    else
    {
      unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v11 = *(void *)(v6 + 72);
      uint64_t v12 = v9 - 1;
      do
      {
        sub_100360D98(a1 + v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SearchReturnOption);
        sub_100360D98(a2 + v10, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SearchReturnOption);
        BOOL v13 = static SearchReturnOption.__derived_enum_equals(_:_:)((uint64_t)v8, (uint64_t)v5);
        sub_100363110((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SearchReturnOption);
        sub_100363110((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SearchReturnOption);
        BOOL v15 = v12-- != 0;
        if (!v13) {
          break;
        }
        v10 += v11;
      }
      while (v15);
    }
  }
  else
  {
    return 0;
  }
  return v13;
}

uint64_t static ClientCommand.FetchData.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result = sub_10035D2E0(a1, a4);
  if ((result & 1) == 0) {
    return 0;
  }
  if (a3) {
    return (a6 & 1) != 0;
  }
  if (a6) {
    return 0;
  }
  if (((a5 | a2) & 0x8000000000000000) == 0) {
    return a5 == a2;
  }
  __break(1u);
  return result;
}

Swift::Int ClientCommand.hashValue.getter()
{
  sub_1005E33F0();
  ClientCommand.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_10035E0D0()
{
  sub_1005E33F0();
  ClientCommand.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

void ClientCommand.FetchData.hash(into:)(uint64_t a1, uint64_t a2, Swift::UInt64 a3, char a4)
{
  Swift::UInt v8 = *(void *)(a2 + 16);
  sub_1005E3410(v8);
  if (v8)
  {
    uint64_t v9 = a2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1001F3740(v9, (uint64_t)v10);
      sub_1001F3814((uint64_t)v10, (void (*)(void, void, void, void, unint64_t))sub_1001F379C);
      FetchAttribute.hash(into:)(a1);
      sub_1001F3814((uint64_t)v10, (void (*)(void, void, void, void, unint64_t))sub_1001F385C);
      v9 += 40;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  if (a4)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3450(a3);
  }
}

Swift::Int ClientCommand.FetchData.hashValue.getter(uint64_t a1, Swift::UInt64 a2, char a3)
{
  sub_1005E33F0();
  Swift::UInt v6 = *(void *)(a1 + 16);
  sub_1005E3410(v6);
  if (v6)
  {
    uint64_t v7 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1001F3740(v7, (uint64_t)v10);
      sub_1001F3814((uint64_t)v10, (void (*)(void, void, void, void, unint64_t))sub_1001F379C);
      FetchAttribute.hash(into:)((uint64_t)&v9);
      sub_1001F3814((uint64_t)v10, (void (*)(void, void, void, void, unint64_t))sub_1001F385C);
      v7 += 40;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  if (a3)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3450(a2);
  }
  return sub_1005E3470();
}

Swift::Int sub_10035E308()
{
  return ClientCommand.FetchData.hashValue.getter(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_10035E314(uint64_t a1)
{
  ClientCommand.FetchData.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

uint64_t type metadata accessor for ClientCommand(uint64_t a1)
{
  return sub_10003B314(a1, (uint64_t *)&unk_1007130C8);
}

Swift::Int sub_10035E340()
{
  uint64_t v2 = *v0;
  Swift::UInt64 v1 = v0[1];
  int v3 = *((unsigned __int8 *)v0 + 16);
  sub_1005E33F0();
  Swift::UInt v4 = *(void *)(v2 + 16);
  sub_1005E3410(v4);
  if (v4)
  {
    uint64_t v5 = v2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1001F3740(v5, (uint64_t)v8);
      sub_1001F3814((uint64_t)v8, (void (*)(void, void, void, void, unint64_t))sub_1001F379C);
      FetchAttribute.hash(into:)((uint64_t)&v7);
      sub_1001F3814((uint64_t)v8, (void (*)(void, void, void, void, unint64_t))sub_1001F385C);
      v5 += 40;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  if (v3)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3450(v1);
  }
  return sub_1005E3470();
}

uint64_t sub_10035E438(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t result = sub_10035D2E0(*(void *)a1, *(void *)a2);
  if ((result & 1) == 0) {
    return 0;
  }
  if (v3) {
    return (v5 & 1) != 0;
  }
  if (v5) {
    return 0;
  }
  if (((v4 | v2) & 0x8000000000000000) == 0) {
    return v4 == v2;
  }
  __break(1u);
  return result;
}

uint64_t static ClientCommand.uidFetch(messages:items:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = a3 + *(int *)(sub_10000566C(&qword_100713000) + 48);
  sub_1000079E4(a1, a3, &qword_100712FC8);
  *(void *)uint64_t v6 = a2;
  *(void *)(v6 + 8) = 0;
  *(unsigned char *)(v6 + 16) = 1;
  type metadata accessor for ClientCommand(0);
  swift_storeEnumTagMultiPayload();
  return swift_bridgeObjectRetain();
}

uint64_t ClientCommand.kind.getter()
{
  type metadata accessor for ClientCommand(0);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100360D98(v0, (uint64_t)v2, type metadata accessor for ClientCommand);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_100363110((uint64_t)v2, type metadata accessor for ClientCommand);
      uint64_t result = 4;
      break;
    case 2:
      sub_100363110((uint64_t)v2, type metadata accessor for ClientCommand);
      uint64_t result = 5;
      break;
    case 3:
      sub_100363110((uint64_t)v2, type metadata accessor for ClientCommand);
      uint64_t result = 6;
      break;
    case 4:
      sub_100363110((uint64_t)v2, type metadata accessor for ClientCommand);
      uint64_t result = 7;
      break;
    case 5:
      sub_100363110((uint64_t)v2, type metadata accessor for ClientCommand);
      uint64_t result = 8;
      break;
    case 6:
      sub_100363110((uint64_t)v2, type metadata accessor for ClientCommand);
      uint64_t result = 9;
      break;
    case 7:
      sub_100363110((uint64_t)v2, type metadata accessor for ClientCommand);
      uint64_t result = 10;
      break;
    case 8:
      sub_100363110((uint64_t)v2, type metadata accessor for ClientCommand);
      uint64_t result = 11;
      break;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = sub_10000566C(&qword_100713008);
      uint64_t v6 = (uint64_t)&v2[*(int *)(v5 + 64)];
      sub_1000094D4(*(void *)&v2[*(int *)(v5 + 80)], *(void *)&v2[*(int *)(v5 + 80) + 8]);
      sub_100007A48(v6, &qword_100712FD0);
      uint64_t result = 12;
      break;
    case 10:
      sub_100363110((uint64_t)v2, type metadata accessor for ClientCommand);
      uint64_t result = 17;
      break;
    case 11:
      sub_100363110((uint64_t)v2, type metadata accessor for ClientCommand);
      uint64_t result = 18;
      break;
    case 12:
      sub_100363110((uint64_t)v2, type metadata accessor for ClientCommand);
      uint64_t result = 19;
      break;
    case 13:
      sub_100363110((uint64_t)v2, type metadata accessor for ClientCommand);
      uint64_t result = 20;
      break;
    case 14:
      sub_10000566C(&qword_100713000);
      swift_bridgeObjectRelease();
      sub_100007A48((uint64_t)v2, &qword_100712FC8);
      uint64_t result = 21;
      break;
    case 15:
      sub_10000566C(&qword_100712FF8);
      swift_bridgeObjectRelease();
      sub_100007A48((uint64_t)v2, &qword_100712FC8);
      uint64_t result = 23;
      break;
    case 16:
      sub_10000566C(&qword_100712FD8);
      swift_bridgeObjectRelease();
      sub_100007A48((uint64_t)v2, &qword_100712FC8);
      uint64_t result = 24;
      break;
    case 17:
      sub_10000566C(&qword_100712FD8);
      swift_bridgeObjectRelease();
      sub_100007A48((uint64_t)v2, &qword_100712FC8);
      uint64_t result = 22;
      break;
    case 18:
      sub_100363110((uint64_t)v2, type metadata accessor for ClientCommand);
      uint64_t result = 25;
      break;
    case 19:
      sub_100363110((uint64_t)v2, type metadata accessor for ClientCommand);
      uint64_t result = 26;
      break;
    case 20:
      return result;
    case 21:
      uint64_t result = 1;
      break;
    case 22:
      uint64_t result = 2;
      break;
    case 23:
      uint64_t result = 13;
      break;
    case 24:
      uint64_t result = 14;
      break;
    case 25:
      uint64_t result = 15;
      break;
    case 26:
      uint64_t result = 16;
      break;
    case 27:
      uint64_t result = 27;
      break;
    default:
      sub_100363110((uint64_t)v2, type metadata accessor for ClientCommand);
      uint64_t result = 3;
      break;
  }
  return result;
}

unint64_t ClientCommand.logIdentifier.getter()
{
  uint64_t v1 = type metadata accessor for ClientCommand(0);
  __chkstk_darwin(v1);
  char v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100360D98(v0, (uint64_t)v3, type metadata accessor for ClientCommand);
  unint64_t v4 = 0x494C494241504143;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100363110((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x4E49474F4CLL;
      break;
    case 2u:
      sub_100363110((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x5443454C4553;
      break;
    case 3u:
      sub_100363110((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x454E494D415845;
      break;
    case 4u:
      sub_100363110((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x455441455243;
      break;
    case 5u:
      sub_100363110((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x4554454C4544;
      break;
    case 6u:
      sub_100363110((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x454D414E4552;
      break;
    case 7u:
      sub_100363110((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 1414744396;
      break;
    case 8u:
      sub_100363110((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x535554415453;
      break;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = sub_10000566C(&qword_100713008);
      uint64_t v6 = (uint64_t)&v3[*(int *)(v5 + 64)];
      sub_1000094D4(*(void *)&v3[*(int *)(v5 + 80)], *(void *)&v3[*(int *)(v5 + 80) + 8]);
      sub_100007A48(v6, &qword_100712FD0);
      unint64_t v4 = 0x444E45505041;
      break;
    case 0xAu:
      sub_100363110((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x5241455320444955;
      break;
    case 0xBu:
      sub_100363110((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0xD000000000000015;
      break;
    case 0xCu:
      sub_100363110((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x484352414553;
      break;
    case 0xDu:
    case 0x13u:
      unint64_t v4 = 0xD000000000000011;
      sub_100363110((uint64_t)v3, type metadata accessor for ClientCommand);
      break;
    case 0xEu:
      sub_10000566C(&qword_100713000);
      swift_bridgeObjectRelease();
      sub_100007A48((uint64_t)v3, &qword_100712FC8);
      unint64_t v4 = 0x4354454620444955;
      break;
    case 0xFu:
      sub_10000566C(&qword_100712FF8);
      swift_bridgeObjectRelease();
      sub_100007A48((uint64_t)v3, &qword_100712FC8);
      unint64_t v4 = 0x524F545320444955;
      break;
    case 0x10u:
      sub_10000566C(&qword_100712FD8);
      swift_bridgeObjectRelease();
      sub_100007A48((uint64_t)v3, &qword_100712FC8);
      unint64_t v4 = 0x59504F4320444955;
      break;
    case 0x11u:
      sub_10000566C(&qword_100712FD8);
      swift_bridgeObjectRelease();
      sub_100007A48((uint64_t)v3, &qword_100712FC8);
      unint64_t v4 = 0x45564F4D20444955;
      break;
    case 0x12u:
      sub_100363110((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 17481;
      break;
    case 0x14u:
      return v4;
    case 0x15u:
      unint64_t v4 = 1347374926;
      break;
    case 0x16u:
      unint64_t v4 = 0x534C545452415453;
      break;
    case 0x17u:
      unint64_t v4 = 0x43415053454D414ELL;
      break;
    case 0x18u:
      unint64_t v4 = 0x4B43454843;
      break;
    case 0x19u:
      unint64_t v4 = 0x45534F4C43;
      break;
    case 0x1Au:
      unint64_t v4 = 0x45474E55505845;
      break;
    case 0x1Bu:
      unint64_t v4 = 0x53534552504D4F43;
      break;
    default:
      sub_100363110((uint64_t)v3, type metadata accessor for ClientCommand);
      unint64_t v4 = 0x49544E4548545541;
      break;
  }
  return v4;
}

unint64_t LoggableCommand.tag.getter()
{
  return *v0 | ((unint64_t)*((unsigned int *)v0 + 1) << 32);
}

uint64_t LoggableCommand.tag.setter(uint64_t result)
{
  *(unsigned char *)uint64_t v1 = result;
  *(_DWORD *)(v1 + 4) = HIDWORD(result);
  return result;
}

uint64_t LoggableCommand.command.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for LoggableCommand(0);
  return sub_100360D98(v1 + *(int *)(v3 + 20), a1, type metadata accessor for ClientCommand);
}

uint64_t LoggableCommand.command.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LoggableCommand(0) + 20);
  return sub_100363190(a1, v3);
}

Swift::UInt32 (__swiftcall *LoggableCommand.command.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t LoggableCommand.init(tag:command:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a3 = a1;
  *(_DWORD *)(a3 + 4) = HIDWORD(a1);
  uint64_t v5 = type metadata accessor for LoggableCommand(0);
  return sub_100368440(a2, a3 + *(int *)(v5 + 20), type metadata accessor for ClientCommand);
}

Swift::String __swiftcall LoggableCommand.makeDescriptionWithoutPII()()
{
  uint64_t v1 = sub_1005E17E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v47 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v41 - v5;
  uint64_t v7 = type metadata accessor for ClientCommand.Encoded();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = &v0[*(int *)(type metadata accessor for LoggableCommand(0) + 20)];
  int v12 = *((_DWORD *)v0 + 1);
  char v48 = *v0;
  int v49 = v12;
  uint64_t v50 = v11;
  sub_100371FE8((void (*)(void))sub_1003631F4, 0x10000u, (void (*)(void))v10);
  if (*(void *)(*(void *)&v10[*(int *)(v8 + 28)] + 16))
  {
    sub_10000566C(&qword_100713018);
    unint64_t v13 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v46 = *(void *)(v2 + 72);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1005F6670;
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    uint64_t v15 = v2 + 16;
    uint64_t v43 = v1;
    uint64_t v45 = v16;
    v16((char *)(v14 + v13), v10, v1);
    uint64_t v51 = (void *)v14;
    uint64_t v17 = swift_bridgeObjectRetain();
    sub_10035FB78(v17, (uint64_t (*)(void))sub_100383060, (uint64_t (*)(void))&type metadata accessor for DispatchData);
    char v18 = v51;
    int64_t v19 = v51[2];
    if (v19)
    {
      uint64_t v44 = v6;
      uint64_t v42 = (void (*)(void))v10;
      uint64_t v51 = _swiftEmptyArrayStorage;
      sub_10035FE7C(0, v19, 0);
      v41[1] = v18;
      uint64_t v20 = (char *)v18 + v13;
      uint64_t v21 = (void (**)(char *, uint64_t))(v2 + 8);
      uint64_t v22 = v43;
      do
      {
        uint64_t v23 = v44;
        uint64_t v24 = v45;
        v45(v44, v20, v22);
        uint64_t v25 = (uint64_t)v47;
        uint64_t v26 = v15;
        v24(v47, v23, v22);
        uint64_t v27 = sub_100363208(v25);
        uint64_t v29 = v28;
        (*v21)(v23, v22);
        char v30 = v51;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10035FE7C(0, v30[2] + 1, 1);
          uint64_t v22 = v43;
          char v30 = v51;
        }
        unint64_t v32 = v30[2];
        unint64_t v31 = v30[3];
        if (v32 >= v31 >> 1)
        {
          sub_10035FE7C(v31 > 1, v32 + 1, 1);
          uint64_t v22 = v43;
          char v30 = v51;
        }
        void v30[2] = v32 + 1;
        uint64_t v33 = &v30[2 * v32];
        v33[4] = v27;
        v33[5] = v29;
        v20 += v46;
        --v19;
        uint64_t v15 = v26;
      }
      while (v19);
      swift_bridgeObjectRelease();
      unint64_t v10 = (char *)v42;
    }
    else
    {
      swift_bridgeObjectRelease();
      char v30 = _swiftEmptyArrayStorage;
    }
    uint64_t v51 = v30;
    sub_10000566C(&qword_100713020);
    sub_100363684();
    uint64_t v34 = sub_1005E1A80();
    uint64_t v36 = v37;
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v6, v10, v1);
    uint64_t v34 = sub_100363208((uint64_t)v6);
    uint64_t v36 = v35;
  }
  sub_100363110((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ClientCommand.Encoded);
  uint64_t v38 = v34;
  uint64_t v39 = v36;
  result._object = v39;
  result._countAndFlagsBits = v38;
  return result;
}

uint64_t variable initialization expression of MessageData.bodyStructure@<X0>(uint64_t a1@<X8>)
{
  sub_10013668C((uint64_t)v3);
  return sub_10001FDF0((uint64_t)v3, a1, &qword_100713030);
}

double variable initialization expression of MessageData.envelope@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 112) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t variable initialization expression of MessageData.BodySection.data@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for MessageData.BodyData();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t sub_10035F628(uint64_t a1)
{
  return a1;
}

uint64_t ServerResponseTranscoder.init()()
{
  sub_1005E0BF0();
  return swift_retain();
}

uint64_t sub_10035F6A8@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_100008D24(a2, a3);
      unint64_t v10 = (char *)sub_1005E0550();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1005E0580();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1005E0570();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x10035F90CLL);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_1000094D4(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1005E0550();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1005E0580();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1005E0570();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_10035F91C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_100008D24(a1, a2);
      char v5 = sub_1003611B0((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      sub_1000094D4(a1, a2);
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v5 = sub_1003611B0(v11, v12, v10, a3, a4);
      swift_release();
      swift_release();
LABEL_6:
      sub_1000094D4(a3, a4);
      return v5 & 1;
    case 3uLL:
      memset(__s1, 0, 14);
      goto LABEL_8;
    default:
      __s1[0] = a1;
      LOWORD(__s1[1]) = a2;
      BYTE2(__s1[1]) = BYTE2(a2);
      BYTE3(__s1[1]) = BYTE3(a2);
      BYTE4(__s1[1]) = BYTE4(a2);
      BYTE5(__s1[1]) = BYTE5(a2);
LABEL_8:
      sub_10035F6A8((uint64_t)__s1, a3, a4, &v14);
      sub_1000094D4(a3, a4);
      if (!v4) {
        char v5 = v14;
      }
      return v5 & 1;
  }
}

uint64_t sub_10035FB4C(uint64_t a1)
{
  return sub_10035FB78(a1, (uint64_t (*)(void))sub_100383190, type metadata accessor for Response);
}

uint64_t sub_10035FB78(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10035FD34(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_100383094(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = (char *)v3 + v8 + 32;
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10035FE7C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10035FFB0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10035FE9C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10036011C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10035FEBC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10036027C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10035FEDC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1003604C4(a1, a2, a3, (void *)*v3, &qword_1007131D0, type metadata accessor for SelectParameter);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10035FF18(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1003604C4(a1, a2, a3, (void *)*v3, &qword_1007131B8, (uint64_t (*)(void))type metadata accessor for CommandStreamPart);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10035FF54(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1003604C4(a1, a2, a3, (void *)*v3, &qword_1007131C0, (uint64_t (*)(void))type metadata accessor for ParameterValue);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10035FF90(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100360878(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10035FFB0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100713218);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10036011C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100713200);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10036027C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000566C(&qword_1007131D8);
  uint64_t v10 = *(void *)(sub_10000566C(&qword_1007131E0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_10000566C(&qword_1007131E0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (char *)v13 + v17;
  unint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1003604C4(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000566C(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  uint64_t v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  char v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10036070C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_1007131C8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100360878(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_1007131A8);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    void v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_10000566C(&qword_1007131B0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

void sub_100360A04(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1005E3410(v3);
  if (v3)
  {
    uint64_t v4 = a2 + 32;
    do
    {
      ++v4;
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
  }
}

void sub_100360B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Swift::UInt v6 = *(void *)(a4 + 16);
  sub_1005E3410(v6);
  if (v6)
  {
    uint64_t v7 = *(void *)(a3 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v8 = 0;
    do
    {
      if (!v7)
      {
        __break(1u);
        return;
      }
      uint64_t v9 = *(void *)(a4 + v8 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      if (v9)
      {
        sub_1005E3420(1u);
        swift_bridgeObjectRetain();
        sub_1005E1DB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        sub_1005E3420(0);
        swift_bridgeObjectRelease();
      }
      --v7;
      v8 += 16;
      --v6;
    }
    while (v6);
    swift_release();
    swift_release();
    swift_release();
  }
}

unint64_t sub_100360CD0()
{
  unint64_t result = qword_100712FE8;
  if (!qword_100712FE8)
  {
    sub_10000744C(&qword_100712FE0);
    sub_100360D44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712FE8);
  }
  return result;
}

unint64_t sub_100360D44()
{
  unint64_t result = qword_100712FF0;
  if (!qword_100712FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712FF0);
  }
  return result;
}

uint64_t sub_100360D98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100360E00(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
      unint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100360EB8(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_100360F14(void *a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

void sub_100360F58(uint64_t a1, uint64_t a2)
{
  sub_1005E3470();
  Swift::UInt v3 = 0;
  int64_t v4 = 0;
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v6 = a2 + 56;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 24);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  uint64_t v10 = v9 & v5;
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (!v10)
    {
      if (__OFADD__(v4++, 1)) {
        goto LABEL_18;
      }
      if (v4 >= v11)
      {
LABEL_16:
        sub_1005E3410(v3);
        return;
      }
      uint64_t v10 = *(void *)(v6 + 8 * v4);
      if (!v10) {
        break;
      }
    }
LABEL_5:
    v10 &= v10 - 1;
    sub_1005E33F0();
    sub_1005E3410(0);
    v3 ^= sub_1005E3470();
  }
  int64_t v13 = v4 + 1;
  if (v4 + 1 >= v11) {
    goto LABEL_16;
  }
  uint64_t v10 = *(void *)(v6 + 8 * v13);
  if (v10)
  {
    ++v4;
    goto LABEL_5;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v11) {
      goto LABEL_16;
    }
    uint64_t v10 = *(void *)(v6 + 8 * v4);
    ++v13;
    if (v10) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
}

BOOL sub_10036108C(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  unsigned int v6 = a5;
  unint64_t v7 = HIDWORD(a2);
  if (HIDWORD(a2) - a2 != HIDWORD(a5) - a5) {
    return 0;
  }
  unsigned __int8 v8 = BYTE6(a6);
  unsigned __int8 v10 = BYTE6(a3);
  unint64_t v12 = HIDWORD(a3);
  unint64_t v13 = HIDWORD(a6);
  if (a3 == a6 && WORD2(a3) == WORD2(a6) && BYTE6(a3) == BYTE6(a6) && a1 == a4) {
    return 1;
  }
  uint64_t v15 = a2;
  swift_beginAccess();
  uint64_t v16 = (const void *)(*(void *)(a1 + 24) + (v10 | ((unint64_t)(unsigned __int16)v12 << 8)) + v15);
  swift_beginAccess();
  return memcmp(v16, (const void *)(*(void *)(a4 + 24) + (v8 | ((unint64_t)(unsigned __int16)v13 << 8)) + v6), v7 - v15) == 0;
}

uint64_t sub_1003611B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1005E0550();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1005E0580();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1005E0570();
  sub_10035F6A8(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_100361268(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x1003613A4);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_20;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v15 = 1;
            }
            else
            {
              sub_100008D24(a3, a4);
              char v15 = sub_10035F91C(a1, a2, a3, a4);
            }
          }
          else
          {
            char v15 = 0;
          }
          return v15 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_21;
        case 3uLL:
          char v15 = v8 == 0;
          return v15 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_19;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t _s13IMAP2Protocol13ClientCommandO21__derived_enum_equalsySbAC_ACtFZ_0(unint64_t a1, unint64_t a2)
{
  unint64_t v260 = a1;
  unint64_t v261 = a2;
  sub_10000566C(&qword_100712FC8);
  __chkstk_darwin();
  v243 = (char *)&v233 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v242 = (char *)&v233 - v3;
  __chkstk_darwin();
  uint64_t v240 = (uint64_t)&v233 - v4;
  __chkstk_darwin();
  uint64_t v241 = (uint64_t)&v233 - v5;
  uint64_t v239 = sub_1005E0970();
  uint64_t v238 = *(void *)(v239 - 8);
  __chkstk_darwin();
  v234 = (char *)&v233 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = sub_10000566C(&qword_100713220);
  __chkstk_darwin();
  uint64_t v237 = (uint64_t)&v233 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100712FD0);
  __chkstk_darwin();
  uint64_t v235 = (uint64_t)&v233 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v244 = (uint64_t)&v233 - v9;
  __chkstk_darwin();
  uint64_t v245 = (uint64_t)&v233 - v10;
  unint64_t v259 = type metadata accessor for ClientCommand(0);
  __chkstk_darwin();
  uint64_t v255 = (uint64_t)&v233 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v253 = (uint64_t *)((char *)&v233 - v12);
  __chkstk_darwin();
  uint64_t v258 = (uint64_t)&v233 - v13;
  __chkstk_darwin();
  uint64_t v257 = (uint64_t)&v233 - v14;
  __chkstk_darwin();
  uint64_t v256 = (uint64_t)&v233 - v15;
  __chkstk_darwin();
  uint64_t v254 = (uint64_t)&v233 - v16;
  __chkstk_darwin();
  v252 = (unint64_t *)((char *)&v233 - v17);
  __chkstk_darwin();
  v250 = (unint64_t *)((char *)&v233 - v18);
  __chkstk_darwin();
  v249 = (unint64_t *)((char *)&v233 - v19);
  __chkstk_darwin();
  v248 = (unint64_t *)((char *)&v233 - v20);
  __chkstk_darwin();
  uint64_t v251 = (uint64_t)&v233 - v21;
  __chkstk_darwin();
  uint64_t v247 = (uint64_t)&v233 - v22;
  __chkstk_darwin();
  char v24 = (char *)&v233 - v23;
  __chkstk_darwin();
  uint64_t v246 = (uint64_t)&v233 - v25;
  __chkstk_darwin();
  char v27 = (char *)&v233 - v26;
  __chkstk_darwin();
  char v29 = (char *)&v233 - v28;
  __chkstk_darwin();
  unint64_t v31 = (char *)&v233 - v30;
  __chkstk_darwin();
  uint64_t v33 = (char *)&v233 - v32;
  __chkstk_darwin();
  uint64_t v35 = (uint64_t *)((char *)&v233 - v34);
  __chkstk_darwin();
  uint64_t v37 = (char *)&v233 - v36;
  sub_10000566C(&qword_100713228);
  uint64_t v38 = __chkstk_darwin();
  uint64_t v40 = (char *)&v233 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = (uint64_t)&v40[*(int *)(v38 + 56)];
  sub_100360D98(v260, (uint64_t)v40, type metadata accessor for ClientCommand);
  uint64_t v42 = v261;
  unint64_t v261 = v41;
  sub_100360D98(v42, v41, type metadata accessor for ClientCommand);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100360D98((uint64_t)v40, (uint64_t)v35, type metadata accessor for ClientCommand);
      uint64_t v53 = *v35;
      uint64_t v52 = v35[1];
      uint64_t v55 = v35[2];
      uint64_t v54 = v35[3];
      uint64_t v56 = (uint64_t *)v261;
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_125;
      }
      uint64_t v57 = *v56;
      uint64_t v58 = v56[1];
      uint64_t v60 = v56[2];
      uint64_t v59 = v56[3];
      if (v53 == v57 && v52 == v58)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v217 = sub_1005E3290();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v217 & 1) == 0) {
          goto LABEL_154;
        }
      }
      if (v55 == v60 && v54 == v59)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_183;
      }
      char v223 = sub_1005E3290();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v223) {
        goto LABEL_183;
      }
      goto LABEL_155;
    case 2u:
      sub_100360D98((uint64_t)v40, (uint64_t)v33, type metadata accessor for ClientCommand);
      uint64_t v61 = *(void *)v33;
      Swift::Int v62 = *((void *)v33 + 2);
      unint64_t v63 = v261;
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_125;
      }
      uint64_t v64 = *((unsigned int *)v33 + 2);
      uint64_t v65 = *(void *)(v63 + 16);
      if ((v64 | (v64 << 32)) != (*(unsigned int *)(v63 + 8) | ((unint64_t)*(unsigned int *)(v63 + 8) << 32))) {
        goto LABEL_137;
      }
      BOOL v66 = sub_100357CFC(v61, *(void *)v63);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v66) {
        goto LABEL_154;
      }
      char v67 = sub_1003787EC(v62, v65);
      goto LABEL_49;
    case 3u:
      sub_100360D98((uint64_t)v40, (uint64_t)v31, type metadata accessor for ClientCommand);
      uint64_t v68 = *(void *)v31;
      unint64_t v69 = v261;
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_126;
      }
      uint64_t v70 = *((unsigned int *)v31 + 2);
      goto LABEL_18;
    case 4u:
      sub_100360D98((uint64_t)v40, (uint64_t)v29, type metadata accessor for ClientCommand);
      uint64_t v68 = *(void *)v29;
      unint64_t v69 = v261;
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_126;
      }
      uint64_t v70 = *((unsigned int *)v29 + 2);
      goto LABEL_18;
    case 5u:
      sub_100360D98((uint64_t)v40, (uint64_t)v27, type metadata accessor for ClientCommand);
      uint64_t v68 = *(void *)v27;
      unint64_t v69 = v261;
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_126;
      }
      uint64_t v70 = *((unsigned int *)v27 + 2);
LABEL_18:
      if ((v70 | (v70 << 32)) != (*(unsigned int *)(v69 + 8) | ((unint64_t)*(unsigned int *)(v69 + 8) << 32))) {
        goto LABEL_154;
      }
      BOOL v71 = sub_100357CFC(v68, *(void *)v69);
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 6u:
      uint64_t v72 = v246;
      sub_100360D98((uint64_t)v40, v246, type metadata accessor for ClientCommand);
      uint64_t v73 = *(void *)v72;
      uint64_t v74 = *(void *)(v72 + 16);
      uint64_t v75 = *(unsigned int *)(v72 + 24);
      unint64_t v76 = v261;
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_125;
      }
      uint64_t v77 = *(unsigned int *)(v72 + 8);
      uint64_t v78 = *(void *)(v76 + 16);
      if ((v77 | (v77 << 32)) != (*(unsigned int *)(v76 + 8) | ((unint64_t)*(unsigned int *)(v76 + 8) << 32))) {
        goto LABEL_137;
      }
      uint64_t v79 = *(unsigned int *)(v76 + 24);
      BOOL v80 = sub_100357CFC(v73, *(void *)v76);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v80 || (v75 | (v75 << 32)) != (v79 | (v79 << 32))) {
        goto LABEL_154;
      }
      BOOL v71 = sub_100357CFC(v74, v78);
      swift_bridgeObjectRelease();
LABEL_20:
      swift_bridgeObjectRelease();
      if (v71) {
        goto LABEL_183;
      }
      goto LABEL_155;
    case 7u:
      sub_100360D98((uint64_t)v40, (uint64_t)v24, type metadata accessor for ClientCommand);
      uint64_t v81 = *(void *)v24;
      uint64_t v82 = *((unsigned int *)v24 + 2);
      uint64_t v83 = *((void *)v24 + 2);
      uint64_t v84 = *((unsigned int *)v24 + 6);
      uint64_t v85 = *((void *)v24 + 4);
      uint64_t v86 = (uint64_t *)v261;
      if (swift_getEnumCaseMultiPayload() != 7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_126;
      }
      uint64_t v87 = v86;
      uint64_t v88 = (uint64_t)v40;
      uint64_t v89 = *v86;
      uint64_t v90 = v86[2];
      uint64_t v91 = *((unsigned int *)v87 + 6);
      uint64_t v92 = v87[4];
      if (v81)
      {
        if (v89)
        {
          if ((v82 | (v82 << 32)) == (*(unsigned int *)(v261 + 8) | ((unint64_t)*(unsigned int *)(v261 + 8) << 32)))
          {
            BOOL v93 = sub_100357CFC(v81, v89);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!v93) {
              goto LABEL_172;
            }
LABEL_162:
            if (v83)
            {
              if (v90)
              {
                if ((v84 | (v84 << 32)) != (v91 | (v91 << 32))) {
                  goto LABEL_172;
                }
                BOOL v227 = sub_100357CFC(v83, v90);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (!v227) {
                  goto LABEL_173;
                }
                goto LABEL_192;
              }
            }
            else if (!v90)
            {
LABEL_192:
              char v67 = sub_10035DA8C(v85, v92);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_100363110(v88, type metadata accessor for ClientCommand);
              return v67 & 1;
            }
            swift_bridgeObjectRelease();
            goto LABEL_173;
          }
          swift_bridgeObjectRelease();
        }
      }
      else if (!v89)
      {
        goto LABEL_162;
      }
      swift_bridgeObjectRelease();
LABEL_172:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_173:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v212 = v88;
      goto LABEL_156;
    case 8u:
      uint64_t v94 = v247;
      sub_100360D98((uint64_t)v40, v247, type metadata accessor for ClientCommand);
      uint64_t v95 = *(void *)v94;
      uint64_t v96 = *(void *)(v94 + 16);
      unint64_t v97 = v261;
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_125;
      }
      uint64_t v98 = *(unsigned int *)(v94 + 8);
      uint64_t v99 = *(void *)v97;
      uint64_t v100 = *(unsigned int *)(v97 + 8);
      uint64_t v101 = *(void *)(v97 + 16);
      if ((v98 | (v98 << 32)) != (v100 | (v100 << 32)))
      {
LABEL_137:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_154;
      }
      BOOL v102 = sub_100357CFC(v95, v99);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v102) {
        goto LABEL_154;
      }
      char v67 = sub_10035DB94(v96, v101);
      swift_bridgeObjectRelease();
      goto LABEL_50;
    case 9u:
      unint64_t v260 = (unint64_t)v40;
      uint64_t v103 = v251;
      sub_100360D98((uint64_t)v40, v251, type metadata accessor for ClientCommand);
      uint64_t v104 = *(void *)v103;
      uint64_t v105 = *(void *)(v103 + 16);
      uint64_t v106 = sub_10000566C(&qword_100713008);
      uint64_t v107 = *(int *)(v106 + 64);
      uint64_t v108 = v103 + v107;
      uint64_t v109 = *(int *)(v106 + 80);
      uint64_t v111 = *(void *)(v103 + v109);
      unint64_t v110 = *(void *)(v103 + v109 + 8);
      unint64_t v112 = v261;
      if (swift_getEnumCaseMultiPayload() != 9)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000094D4(v111, v110);
        sub_100007A48(v103 + v107, &qword_100712FD0);
        uint64_t v40 = (char *)v260;
        goto LABEL_127;
      }
      uint64_t v258 = v111;
      unint64_t v259 = v110;
      uint64_t v113 = *(unsigned int *)(v103 + 8);
      uint64_t v114 = *(void *)v112;
      uint64_t v115 = *(unsigned int *)(v112 + 8);
      uint64_t v116 = *(void *)(v112 + 16);
      uint64_t v117 = v112 + v109;
      uint64_t v118 = *(void *)(v112 + v109);
      unint64_t v261 = *(void *)(v117 + 8);
      uint64_t v119 = v108;
      uint64_t v120 = v245;
      sub_10001FDF0(v119, v245, &qword_100712FD0);
      uint64_t v121 = v112 + v107;
      uint64_t v122 = v244;
      sub_10001FDF0(v121, v244, &qword_100712FD0);
      if ((v113 | (v113 << 32)) == (v115 | (v115 << 32)))
      {
        BOOL v123 = sub_100357CFC(v104, v114);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v43 = v260;
        if (v123)
        {
          char v124 = sub_100013AB4(v105, v116);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v124)
          {
            uint64_t v125 = v237;
            uint64_t v126 = v237 + *(int *)(v236 + 48);
            sub_1000079E4(v120, v237, &qword_100712FD0);
            sub_1000079E4(v122, v126, &qword_100712FD0);
            uint64_t v127 = v238;
            v128 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v238 + 48);
            uint64_t v129 = v239;
            if (v128(v125, 1, v239) == 1)
            {
              if (v128(v126, 1, v129) == 1)
              {
                sub_100007A48(v125, &qword_100712FD0);
                uint64_t v130 = v258;
LABEL_196:
                unint64_t v231 = v259;
                unint64_t v232 = v261;
                char v67 = sub_100361268(v130, v259, v118, v261);
                sub_1000094D4(v118, v232);
                sub_1000094D4(v130, v231);
                sub_100007A48(v122, &qword_100712FD0);
                sub_100007A48(v120, &qword_100712FD0);
                sub_100363110(v43, type metadata accessor for ClientCommand);
                return v67 & 1;
              }
            }
            else
            {
              sub_1000079E4(v125, v235, &qword_100712FD0);
              if (v128(v126, 1, v129) != 1)
              {
                v228 = v234;
                (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v234, v126, v129);
                sub_100363728(&qword_100713230, (void (*)(uint64_t))&type metadata accessor for Date);
                uint64_t v229 = v235;
                LODWORD(v257) = sub_1005E1BC0();
                v230 = *(void (**)(char *, uint64_t))(v127 + 8);
                v230(v228, v129);
                v230((char *)v229, v129);
                sub_100007A48(v125, &qword_100712FD0);
                uint64_t v130 = v258;
                if (v257) {
                  goto LABEL_196;
                }
                goto LABEL_197;
              }
              (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v235, v129);
            }
            sub_100007A48(v125, &qword_100713220);
            uint64_t v130 = v258;
LABEL_197:
            sub_1000094D4(v118, v261);
            uint64_t v226 = v130;
            goto LABEL_160;
          }
          sub_1000094D4(v118, v261);
          uint64_t v226 = v258;
LABEL_160:
          sub_1000094D4(v226, v259);
          sub_100007A48(v122, &qword_100712FD0);
          sub_100007A48(v120, &qword_100712FD0);
          goto LABEL_176;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v43 = v260;
      }
      uint64_t v225 = v258;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000094D4(v118, v261);
      uint64_t v226 = v225;
      goto LABEL_160;
    case 0xAu:
      v131 = v248;
      sub_100360D98((uint64_t)v40, (uint64_t)v248, type metadata accessor for ClientCommand);
      unint64_t v132 = *v131;
      v133 = (uint64_t *)v261;
      if (swift_getEnumCaseMultiPayload() != 10) {
        goto LABEL_55;
      }
      goto LABEL_52;
    case 0xBu:
      v134 = v249;
      sub_100360D98((uint64_t)v40, (uint64_t)v249, type metadata accessor for ClientCommand);
      unint64_t v132 = *v134;
      uint64_t v135 = v134[1];
      v136 = (uint64_t *)v261;
      if (swift_getEnumCaseMultiPayload() == 11) {
        goto LABEL_47;
      }
      goto LABEL_54;
    case 0xCu:
      v140 = v250;
      sub_100360D98((uint64_t)v40, (uint64_t)v250, type metadata accessor for ClientCommand);
      unint64_t v132 = *v140;
      v133 = (uint64_t *)v261;
      if (swift_getEnumCaseMultiPayload() != 12) {
        goto LABEL_55;
      }
LABEL_52:
      unint64_t v141 = *v133;
      static SearchKey.__derived_enum_equals(_:_:)(v132, *v133);
      char v67 = v142;
      sub_100360E00(v141);
      sub_100360E00(v132);
      goto LABEL_71;
    case 0xDu:
      v143 = v252;
      sub_100360D98((uint64_t)v40, (uint64_t)v252, type metadata accessor for ClientCommand);
      unint64_t v132 = *v143;
      uint64_t v135 = v143[1];
      v136 = (uint64_t *)v261;
      if (swift_getEnumCaseMultiPayload() != 13)
      {
LABEL_54:
        swift_bridgeObjectRelease();
LABEL_55:
        sub_100360E00(v132);
        goto LABEL_127;
      }
LABEL_47:
      unint64_t v138 = *v136;
      uint64_t v137 = v136[1];
      static SearchKey.__derived_enum_equals(_:_:)(v132, *v136);
      if ((v139 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100360E00(v138);
        sub_100360E00(v132);
        goto LABEL_155;
      }
      char v67 = sub_10035DE80(v135, v137);
      sub_100360E00(v138);
      sub_100360E00(v132);
LABEL_49:
      swift_bridgeObjectRelease();
LABEL_50:
      swift_bridgeObjectRelease();
      goto LABEL_71;
    case 0xEu:
      uint64_t v144 = v254;
      sub_100360D98((uint64_t)v40, v254, type metadata accessor for ClientCommand);
      uint64_t v145 = *(int *)(sub_10000566C(&qword_100713000) + 48);
      uint64_t v146 = *(void *)(v144 + v145);
      uint64_t v147 = *(void *)(v144 + v145 + 8);
      char v148 = *(unsigned char *)(v144 + v145 + 16);
      uint64_t v149 = v261;
      if (swift_getEnumCaseMultiPayload() != 14) {
        goto LABEL_121;
      }
      uint64_t v150 = v149 + v145;
      uint64_t v151 = *(void *)(v149 + v145);
      unint64_t v260 = *(void *)(v150 + 8);
      char v152 = *(unsigned char *)(v150 + 16);
      uint64_t v153 = v241;
      sub_10001FDF0(v149, v241, &qword_100712FC8);
      sub_100365CBC();
      char v154 = sub_1005E35A0();
      sub_100007A48(v144, &qword_100712FC8);
      if ((v154 & 1) == 0)
      {
        uint64_t v211 = v153;
        goto LABEL_141;
      }
      char v155 = sub_10035D2E0(v146, v151);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v155 & 1) == 0) {
        goto LABEL_185;
      }
      if (v148)
      {
        if ((v152 & 1) == 0) {
          goto LABEL_185;
        }
      }
      else
      {
        if (v152) {
          goto LABEL_185;
        }
        if (((v260 | v147) & 0x8000000000000000) != 0)
        {
          __break(1u);
          JUMPOUT(0x1003630A0);
        }
        if (v260 != v147)
        {
LABEL_185:
          uint64_t v218 = v153;
LABEL_186:
          sub_100007A48(v218, &qword_100712FC8);
LABEL_155:
          uint64_t v212 = (uint64_t)v40;
LABEL_156:
          sub_100363110(v212, type metadata accessor for ClientCommand);
          goto LABEL_157;
        }
      }
      sub_100007A48(v153, &qword_100712FC8);
      goto LABEL_183;
    case 0xFu:
      uint64_t v144 = v256;
      sub_100360D98((uint64_t)v40, v256, type metadata accessor for ClientCommand);
      uint64_t v156 = *(int *)(sub_10000566C(&qword_100712FF8) + 48);
      unsigned int v157 = *(unsigned __int8 *)(v144 + v156);
      int v158 = *(unsigned __int8 *)(v144 + v156 + 1);
      uint64_t v159 = *(void *)(v144 + v156 + 8);
      uint64_t v160 = v261;
      if (swift_getEnumCaseMultiPayload() != 15)
      {
LABEL_121:
        swift_bridgeObjectRelease();
        sub_100007A48(v144, &qword_100712FC8);
        goto LABEL_127;
      }
      LODWORD(v260) = *(unsigned __int8 *)(v160 + v156);
      int v161 = *(unsigned __int8 *)(v160 + v156 + 1);
      uint64_t v162 = *(void *)(v160 + v156 + 8);
      uint64_t v163 = v240;
      sub_10001FDF0(v160, v240, &qword_100712FC8);
      sub_100365CBC();
      char v164 = sub_1005E35A0();
      sub_100007A48(v144, &qword_100712FC8);
      if ((v164 & 1) == 0)
      {
        sub_100007A48(v163, &qword_100712FC8);
        goto LABEL_154;
      }
      if (v158) {
        int v165 = 256;
      }
      else {
        int v165 = 0;
      }
      if (v161) {
        __int16 v166 = 256;
      }
      else {
        __int16 v166 = 0;
      }
      char v67 = static StoreFlags.__derived_struct_equals(_:_:)(v165 | v157, v159, v166 | (unsigned __int16)v260, v162);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100007A48(v163, &qword_100712FC8);
LABEL_71:
      sub_100363110((uint64_t)v40, type metadata accessor for ClientCommand);
      return v67 & 1;
    case 0x10u:
      uint64_t v167 = v257;
      sub_100360D98((uint64_t)v40, v257, type metadata accessor for ClientCommand);
      uint64_t v168 = *(int *)(sub_10000566C(&qword_100712FD8) + 48);
      uint64_t v169 = *(void *)(v167 + v168);
      uint64_t v170 = *(unsigned int *)(v167 + v168 + 8);
      unint64_t v171 = v261;
      if (swift_getEnumCaseMultiPayload() != 16) {
        goto LABEL_113;
      }
      uint64_t v172 = v171 + v168;
      uint64_t v173 = *(void *)(v171 + v168);
      uint64_t v174 = *(unsigned int *)(v172 + 8);
      uint64_t v175 = v171;
      uint64_t v176 = (uint64_t)v242;
      goto LABEL_76;
    case 0x11u:
      uint64_t v167 = v258;
      sub_100360D98((uint64_t)v40, v258, type metadata accessor for ClientCommand);
      uint64_t v177 = *(int *)(sub_10000566C(&qword_100712FD8) + 48);
      uint64_t v169 = *(void *)(v167 + v177);
      uint64_t v170 = *(unsigned int *)(v167 + v177 + 8);
      unint64_t v178 = v261;
      if (swift_getEnumCaseMultiPayload() != 17)
      {
LABEL_113:
        swift_bridgeObjectRelease();
        sub_100007A48(v167, &qword_100712FC8);
        goto LABEL_127;
      }
      uint64_t v179 = v178 + v177;
      uint64_t v173 = *(void *)(v178 + v177);
      uint64_t v174 = *(unsigned int *)(v179 + 8);
      uint64_t v175 = v178;
      uint64_t v176 = (uint64_t)v243;
LABEL_76:
      sub_10001FDF0(v175, v176, &qword_100712FC8);
      sub_100365CBC();
      char v180 = sub_1005E35A0();
      sub_100007A48(v167, &qword_100712FC8);
      if ((v180 & 1) == 0)
      {
        uint64_t v211 = v176;
LABEL_141:
        sub_100007A48(v211, &qword_100712FC8);
LABEL_154:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_155;
      }
      if ((v170 | (v170 << 32)) != (v174 | (v174 << 32)))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v218 = v176;
        goto LABEL_186;
      }
      BOOL v181 = sub_100357CFC(v169, v173);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100007A48(v176, &qword_100712FC8);
      if (!v181) {
        goto LABEL_155;
      }
      goto LABEL_183;
    case 0x12u:
      v182 = v253;
      sub_100360D98((uint64_t)v40, (uint64_t)v253, type metadata accessor for ClientCommand);
      uint64_t v183 = *v182;
      uint64_t v184 = v182[1];
      uint64_t v185 = v182[2];
      v186 = (uint64_t *)v261;
      if (swift_getEnumCaseMultiPayload() != 18)
      {
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_127;
      }
      uint64_t v187 = *v186;
      uint64_t v188 = v186[1];
      uint64_t v189 = v186[2];
      if ((sub_100376C60(v187, v188, v183, v184) & 1) == 0)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_155;
      }
      char v190 = sub_10037BAD0(v185, v189);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if ((v190 & 1) == 0) {
        goto LABEL_155;
      }
LABEL_183:
      uint64_t v210 = (uint64_t)v40;
      goto LABEL_184;
    case 0x13u:
      uint64_t v191 = v255;
      sub_100360D98((uint64_t)v40, v255, type metadata accessor for ClientCommand);
      uint64_t v193 = *(void *)(v191 + 8);
      uint64_t v192 = *(void *)(v191 + 16);
      uint64_t v195 = *(void *)(v191 + 24);
      uint64_t v194 = *(void *)(v191 + 32);
      uint64_t v197 = *(void *)(v191 + 40);
      uint64_t v196 = *(void *)(v191 + 48);
      uint64_t v198 = *(void *)(v191 + 56);
      unint64_t v199 = v261;
      if (swift_getEnumCaseMultiPayload() != 19)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_125:
        swift_bridgeObjectRelease();
LABEL_126:
        swift_bridgeObjectRelease();
        goto LABEL_127;
      }
      int v200 = *(_DWORD *)v191;
      int v201 = *(_DWORD *)v199;
      unint64_t v259 = *(void *)(v199 + 16);
      unint64_t v260 = (unint64_t)v40;
      uint64_t v258 = *(void *)(v199 + 32);
      uint64_t v202 = *(void *)(v199 + 48);
      uint64_t v203 = *(void *)(v199 + 56);
      if (v200 == v201
        && ((uint64_t v204 = *(void *)(v199 + 8), v205 = *(void *)(v199 + 24), v206 = *(void *)(v199 + 40), v193 == v204)
         && v192 == v259
         || (v207 = v205, v208 = sub_1005E3290(), uint64_t v205 = v207, (v208 & 1) != 0))
        && (v195 == v205 && v194 == v258 || (sub_1005E3290() & 1) != 0)
        && (v197 == v206 && v196 == v202 || (sub_1005E3290() & 1) != 0))
      {
        char v209 = sub_10035D0E0(v198, v203);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v209)
        {
          uint64_t v210 = v260;
          goto LABEL_184;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v212 = v260;
      goto LABEL_156;
    case 0x14u:
      if (swift_getEnumCaseMultiPayload() == 20) {
        goto LABEL_183;
      }
      goto LABEL_127;
    case 0x15u:
      if (swift_getEnumCaseMultiPayload() == 21) {
        goto LABEL_183;
      }
      goto LABEL_127;
    case 0x16u:
      if (swift_getEnumCaseMultiPayload() == 22) {
        goto LABEL_183;
      }
      goto LABEL_127;
    case 0x17u:
      if (swift_getEnumCaseMultiPayload() == 23) {
        goto LABEL_183;
      }
      goto LABEL_127;
    case 0x18u:
      if (swift_getEnumCaseMultiPayload() == 24) {
        goto LABEL_183;
      }
      goto LABEL_127;
    case 0x19u:
      if (swift_getEnumCaseMultiPayload() == 25) {
        goto LABEL_183;
      }
      goto LABEL_127;
    case 0x1Au:
      if (swift_getEnumCaseMultiPayload() == 26) {
        goto LABEL_183;
      }
      goto LABEL_127;
    case 0x1Bu:
      if (swift_getEnumCaseMultiPayload() == 27) {
        goto LABEL_183;
      }
      goto LABEL_127;
    default:
      uint64_t v43 = (uint64_t)v40;
      sub_100360D98((uint64_t)v40, (uint64_t)v37, type metadata accessor for ClientCommand);
      uint64_t v45 = *(void *)v37;
      uint64_t v44 = *((void *)v37 + 1);
      uint64_t v46 = *((void *)v37 + 2);
      unint64_t v47 = *((void *)v37 + 3);
      int v48 = v37[38];
      int v49 = *((unsigned __int16 *)v37 + 18);
      uint64_t v50 = *((unsigned int *)v37 + 8);
      unint64_t v51 = v261;
      if (swift_getEnumCaseMultiPayload())
      {
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v40 = (char *)v43;
LABEL_127:
        sub_100007A48((uint64_t)v40, &qword_100713228);
LABEL_157:
        char v67 = 0;
        return v67 & 1;
      }
      unint64_t v260 = v47;
      uint64_t v213 = *(void *)v51;
      uint64_t v214 = *(void *)(v51 + 8);
      uint64_t v215 = *(void *)(v51 + 16);
      unint64_t v259 = *(void *)(v51 + 24);
      LODWORD(v258) = *(unsigned __int8 *)(v51 + 38);
      LODWORD(v257) = *(unsigned __int16 *)(v51 + 36);
      uint64_t v216 = *(unsigned int *)(v51 + 32);
      if (v45 == v213 && v44 == v214)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v219 = sub_1005E3290();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v219 & 1) == 0) {
          goto LABEL_175;
        }
      }
      if (!v46)
      {
        if (!v215) {
          goto LABEL_174;
        }
        goto LABEL_175;
      }
      if (!v215)
      {
LABEL_175:
        swift_release();
        swift_release();
        goto LABEL_176;
      }
      unint64_t v220 = (v216 | ((unint64_t)(v257 | (v258 << 16)) << 32)) & 0xFFFFFFFFFFFFFFLL;
      swift_retain();
      uint64_t v221 = swift_retain();
      BOOL v222 = sub_10036108C(v221, v260, (v50 | ((unint64_t)(v49 | (v48 << 16)) << 32)) & 0xFFFFFFFFFFFFFFLL, v215, v259, v220);
      swift_release_n();
      swift_release_n();
      if (!v222)
      {
LABEL_176:
        uint64_t v212 = v43;
        goto LABEL_156;
      }
LABEL_174:
      uint64_t v210 = v43;
LABEL_184:
      sub_100363110(v210, type metadata accessor for ClientCommand);
      char v67 = 1;
      return v67 & 1;
  }
}

uint64_t sub_100363110(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for LoggableCommand(uint64_t a1)
{
  return sub_10003B314(a1, qword_100713170);
}

uint64_t sub_100363190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientCommand(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003631F4(uint64_t a1)
{
  return sub_100371F18(a1, *(unsigned __int8 *)(v1 + 16) | ((unint64_t)*(unsigned int *)(v1 + 20) << 32), *(void *)(v1 + 24));
}

uint64_t sub_100363208(uint64_t a1)
{
  uint64_t v2 = sub_1005E1660();
  uint64_t v20 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E1740();
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  uint64_t v21 = a1;
  Swift::Int v5 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  sub_1005E1D10(v5);
  unsigned int v6 = 0;
  int v7 = 0;
  uint64_t v8 = v26;
  for (unint64_t i = v27; ; unint64_t i = v23)
  {
    unsigned int v24 = v6;
    unsigned __int8 v25 = v7;
    if (!v7) {
      break;
    }
    if ((v6 & 0x80) == 0)
    {
      sub_1003684C4();
      uint64_t v16 = UnsafeExtractedAttachment.part.modify();
      sub_10036A0BC(0);
      ((void (*)(uint64_t *, void))v16)(&v22, 0);
      goto LABEL_16;
    }
LABEL_6:
    sub_100363728(&qword_100713208, (void (*)(uint64_t))&type metadata accessor for DispatchDataIterator);
    while (1)
    {
      sub_1005E2950();
      if ((v22 & 0x100) != 0) {
        break;
      }
      unsigned int v10 = ((-255 << v25) - 1) & v24 | (v22 << v25);
      unsigned int v24 = v10;
      unsigned __int8 v11 = v25 + 8;
      v25 += 8;
      if (v25 >= 0x20u) {
        goto LABEL_12;
      }
    }
    unsigned __int8 v11 = v25;
    if (!v25) {
      goto LABEL_32;
    }
    unsigned int v10 = v24;
LABEL_12:
    if ((v10 & 0xC0E0) == 0x80C0)
    {
      if ((v10 & 0x1E) == 0) {
        goto LABEL_31;
      }
      char v12 = 16;
    }
    else if ((v10 & 0xC0C0F0) == 0x8080E0)
    {
      if ((v10 & 0x200F) == 0 || (v10 & 0x200F) == 8205) {
        goto LABEL_31;
      }
      char v12 = 24;
    }
    else
    {
      unsigned int v14 = v10 & 0x3007;
      BOOL v15 = (v10 & 0xC0C0C0F8) != 0x808080F0 || v14 == 0;
      if (v15 || __rev16(v14) > 0x400)
      {
LABEL_31:
        sub_1005E3510();
        uint64_t v26 = v8;
        unint64_t v27 = i;
        v28._object = (void *)0x80000001005E7140;
        v28._countAndFlagsBits = 0xD000000000000012;
        sub_1005E1E30(v28);
        goto LABEL_33;
      }
      char v12 = 32;
    }
    unsigned int v24 = (unint64_t)v10 >> v12;
    unsigned __int8 v25 = v11 - v12;
LABEL_16:
    unsigned int v6 = v24;
    int v7 = v25;
    uint64_t v22 = v8;
    unint64_t v23 = i;
    sub_1005E1D60();
    uint64_t v8 = v22;
  }
  sub_100363728(&qword_100713208, (void (*)(uint64_t))&type metadata accessor for DispatchDataIterator);
  sub_1005E2950();
  if ((v22 & 0x100) == 0)
  {
    if ((v22 & 0x80) == 0) {
      goto LABEL_16;
    }
    unsigned int v24 = ((-255 << v25) - 1) & v24 | (v22 << v25);
    v25 += 8;
    goto LABEL_6;
  }
LABEL_32:
  uint64_t v26 = v8;
  unint64_t v27 = i;
LABEL_33:
  uint64_t v17 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v21, v17);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v2);
  return v26;
}

unint64_t sub_100363684()
{
  unint64_t result = qword_100713028;
  if (!qword_100713028)
  {
    sub_10000744C(&qword_100713020);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713028);
  }
  return result;
}

uint64_t sub_1003636E0()
{
  return sub_100363728(&qword_100713038, (void (*)(uint64_t))type metadata accessor for ClientCommand);
}

uint64_t sub_100363728(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100363774()
{
  unint64_t result = qword_100713040;
  if (!qword_100713040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713040);
  }
  return result;
}

unint64_t sub_1003637CC()
{
  unint64_t result = qword_100713048;
  if (!qword_100713048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713048);
  }
  return result;
}

unint64_t sub_100363824()
{
  unint64_t result = qword_100713050;
  if (!qword_100713050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713050);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for ClientCommand(char *a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v8 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v7;
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((_DWORD *)a1 + 8) = *(_DWORD *)(a2 + 32);
        *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v10 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v10;
        uint64_t v11 = *(void *)(a2 + 16);
        uint64_t v12 = *(void *)(a2 + 24);
        *((void *)a1 + 2) = v11;
        *((void *)a1 + 3) = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 8u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 4u:
      case 5u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v13 = sub_10000566C(&qword_100713008);
        uint64_t v14 = *(int *)(v13 + 64);
        BOOL v15 = &a1[v14];
        uint64_t v16 = (const void *)(a2 + v14);
        uint64_t v17 = sub_1005E0970();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          uint64_t v19 = sub_10000566C(&qword_100712FD0);
          memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        uint64_t v41 = *(int *)(v13 + 80);
        uint64_t v42 = (uint64_t *)&a1[v41];
        uint64_t v43 = (uint64_t *)(a2 + v41);
        uint64_t v44 = *v43;
        unint64_t v45 = v43[1];
        sub_100008D24(*v43, v45);
        *uint64_t v42 = v44;
        v42[1] = v45;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
      case 0xCu:
        unint64_t v20 = *(void *)a2;
        sub_100364008(v20);
        *(void *)a1 = v20;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
      case 0xDu:
        unint64_t v21 = *(void *)a2;
        sub_100364008(*(void *)a2);
        uint64_t v22 = *(void *)(a2 + 8);
        *(void *)a1 = v21;
        *((void *)a1 + 1) = v22;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        uint64_t v23 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        uint64_t v24 = *(int *)(sub_10000566C(&qword_100713000) + 48);
        unsigned __int8 v25 = &a1[v24];
        uint64_t v26 = (uint64_t *)(a2 + v24);
        v25[16] = *((unsigned char *)v26 + 16);
        uint64_t v27 = *v26;
        uint64_t v28 = v26[1];
        *(void *)unsigned __int8 v25 = v27;
        *((void *)v25 + 1) = v28;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
        uint64_t v29 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
        uint64_t v30 = *(int *)(sub_10000566C(&qword_100712FF8) + 48);
        unint64_t v31 = &a1[v30];
        uint64_t v32 = a2 + v30;
        *(_WORD *)unint64_t v31 = *(_WORD *)v32;
        *((void *)v31 + 1) = *(void *)(v32 + 8);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
      case 0x11u:
        uint64_t v33 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
        uint64_t v34 = *(int *)(sub_10000566C(&qword_100712FD8) + 48);
        uint64_t v35 = &a1[v34];
        uint64_t v36 = a2 + v34;
        *(void *)uint64_t v35 = *(void *)v36;
        *((_DWORD *)v35 + 2) = *(_DWORD *)(v36 + 8);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x12u:
        uint64_t v37 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v37;
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x13u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v38 = *(void *)(a2 + 16);
        *((void *)a1 + 1) = *(void *)(a2 + 8);
        *((void *)a1 + 2) = v38;
        uint64_t v39 = *(void *)(a2 + 32);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((void *)a1 + 4) = v39;
        uint64_t v40 = *(void *)(a2 + 48);
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        *((void *)a1 + 6) = v40;
        *((void *)a1 + 7) = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

unint64_t sub_100364008(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
      unint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t destroy for ClientCommand(unint64_t *a1)
{
  unint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    case 1:
    case 2:
    case 6:
    case 8:
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 3:
    case 4:
    case 5:
      goto LABEL_23;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = sub_10000566C(&qword_100713008);
      uint64_t v7 = (char *)a1 + *(int *)(v6 + 64);
      uint64_t v8 = sub_1005E0970();
      uint64_t v9 = *(void *)(v8 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
      }
      uint64_t v10 = (uint64_t *)((char *)a1 + *(int *)(v6 + 80));
      uint64_t v11 = *v10;
      unint64_t v12 = v10[1];
      return sub_1000094D4(v11, v12);
    case 10:
    case 12:
      unint64_t v3 = *a1;
      return sub_100360E00(v3);
    case 11:
    case 13:
      sub_100360E00(*a1);
      goto LABEL_23;
    case 14:
      uint64_t v13 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(unint64_t *, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
      int v5 = &qword_100713000;
      goto LABEL_16;
    case 15:
      uint64_t v14 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(unint64_t *, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
      sub_10000566C(&qword_100712FF8);
      goto LABEL_23;
    case 16:
    case 17:
      uint64_t v4 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(unint64_t *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      int v5 = &qword_100712FD8;
LABEL_16:
      sub_10000566C(v5);
      goto LABEL_23;
    case 18:
      swift_release();
      swift_release();
LABEL_19:
      return swift_release();
    case 19:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_23:
      unint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for ClientCommand(char *a1, uint64_t a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v6;
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      *((void *)a1 + 3) = *(void *)(a2 + 24);
      *((_DWORD *)a1 + 8) = *(_DWORD *)(a2 + 32);
      *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_20;
    case 1u:
      uint64_t v7 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v7;
      uint64_t v8 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      *((void *)a1 + 2) = v8;
      *((void *)a1 + 3) = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 2u:
    case 8u:
      *(void *)a1 = *(void *)a2;
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 3u:
    case 4u:
    case 5u:
      *(void *)a1 = *(void *)a2;
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 6u:
      *(void *)a1 = *(void *)a2;
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 7u:
      *(void *)a1 = *(void *)a2;
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
      *((void *)a1 + 4) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 9u:
      *(void *)a1 = *(void *)a2;
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_10000566C(&qword_100713008);
      uint64_t v11 = *(int *)(v10 + 64);
      unint64_t v12 = &a1[v11];
      uint64_t v13 = (const void *)(a2 + v11);
      uint64_t v14 = sub_1005E0970();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = sub_10000566C(&qword_100712FD0);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      uint64_t v38 = *(int *)(v10 + 80);
      uint64_t v39 = (uint64_t *)&a1[v38];
      uint64_t v40 = (uint64_t *)(a2 + v38);
      uint64_t v41 = *v40;
      unint64_t v42 = v40[1];
      sub_100008D24(*v40, v42);
      *uint64_t v39 = v41;
      v39[1] = v42;
      goto LABEL_20;
    case 0xAu:
    case 0xCu:
      unint64_t v17 = *(void *)a2;
      sub_100364008(v17);
      *(void *)a1 = v17;
      goto LABEL_20;
    case 0xBu:
    case 0xDu:
      unint64_t v18 = *(void *)a2;
      sub_100364008(*(void *)a2);
      uint64_t v19 = *(void *)(a2 + 8);
      *(void *)a1 = v18;
      *((void *)a1 + 1) = v19;
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 0xEu:
      uint64_t v20 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
      uint64_t v21 = *(int *)(sub_10000566C(&qword_100713000) + 48);
      uint64_t v22 = &a1[v21];
      uint64_t v23 = (uint64_t *)(a2 + v21);
      unsigned char v22[16] = *((unsigned char *)v23 + 16);
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      *(void *)uint64_t v22 = v24;
      *((void *)v22 + 1) = v25;
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 0xFu:
      uint64_t v26 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
      uint64_t v27 = *(int *)(sub_10000566C(&qword_100712FF8) + 48);
      uint64_t v28 = &a1[v27];
      uint64_t v29 = a2 + v27;
      *(_WORD *)uint64_t v28 = *(_WORD *)v29;
      *((void *)v28 + 1) = *(void *)(v29 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 0x10u:
    case 0x11u:
      uint64_t v30 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
      uint64_t v31 = *(int *)(sub_10000566C(&qword_100712FD8) + 48);
      uint64_t v32 = &a1[v31];
      uint64_t v33 = a2 + v31;
      *(void *)uint64_t v32 = *(void *)v33;
      *((_DWORD *)v32 + 2) = *(_DWORD *)(v33 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 0x12u:
      uint64_t v34 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v34;
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_20;
    case 0x13u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v35 = *(void *)(a2 + 16);
      *((void *)a1 + 1) = *(void *)(a2 + 8);
      *((void *)a1 + 2) = v35;
      uint64_t v36 = *(void *)(a2 + 32);
      *((void *)a1 + 3) = *(void *)(a2 + 24);
      *((void *)a1 + 4) = v36;
      uint64_t v37 = *(void *)(a2 + 48);
      *((void *)a1 + 5) = *(void *)(a2 + 40);
      *((void *)a1 + 6) = v37;
      *((void *)a1 + 7) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_20:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for ClientCommand(char *a1, uint64_t a2, uint64_t a3)
{
  if (a1 != (char *)a2)
  {
    sub_100363110((uint64_t)a1, type metadata accessor for ClientCommand);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *(void *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        *((_DWORD *)a1 + 7) = *(_DWORD *)(a2 + 28);
        int v6 = *(_DWORD *)(a2 + 32);
        *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
        *((_DWORD *)a1 + 8) = v6;
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_21;
      case 1u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *(void *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 2u:
      case 8u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 3u:
      case 4u:
      case 5u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v7 = sub_10000566C(&qword_100713008);
        uint64_t v8 = *(int *)(v7 + 64);
        uint64_t v9 = &a1[v8];
        uint64_t v10 = (const void *)(a2 + v8);
        uint64_t v11 = sub_1005E0970();
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          uint64_t v13 = sub_10000566C(&qword_100712FD0);
          memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        uint64_t v29 = *(int *)(v7 + 80);
        uint64_t v30 = (uint64_t *)&a1[v29];
        uint64_t v31 = (uint64_t *)(a2 + v29);
        uint64_t v32 = *v31;
        unint64_t v33 = v31[1];
        sub_100008D24(*v31, v33);
        uint64_t *v30 = v32;
        v30[1] = v33;
        goto LABEL_21;
      case 0xAu:
      case 0xCu:
        unint64_t v14 = *(void *)a2;
        sub_100364008(v14);
        *(void *)a1 = v14;
        goto LABEL_21;
      case 0xBu:
      case 0xDu:
        unint64_t v15 = *(void *)a2;
        sub_100364008(*(void *)a2);
        *(void *)a1 = v15;
        *((void *)a1 + 1) = *(void *)(a2 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 0xEu:
        uint64_t v16 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        uint64_t v17 = *(int *)(sub_10000566C(&qword_100713000) + 48);
        unint64_t v18 = &a1[v17];
        uint64_t v19 = a2 + v17;
        *(void *)unint64_t v18 = *(void *)v19;
        uint64_t v20 = *(void *)(v19 + 8);
        unsigned char v18[16] = *(unsigned char *)(v19 + 16);
        *((void *)v18 + 1) = v20;
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 0xFu:
        uint64_t v21 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        uint64_t v22 = *(int *)(sub_10000566C(&qword_100712FF8) + 48);
        uint64_t v23 = &a1[v22];
        uint64_t v24 = (char *)(a2 + v22);
        *uint64_t v23 = *v24;
        v23[1] = v24[1];
        *((void *)v23 + 1) = *((void *)v24 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 0x10u:
      case 0x11u:
        uint64_t v25 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
        uint64_t v26 = *(int *)(sub_10000566C(&qword_100712FD8) + 48);
        uint64_t v27 = &a1[v26];
        uint64_t v28 = a2 + v26;
        *(void *)uint64_t v27 = *(void *)v28;
        *((_DWORD *)v27 + 2) = *(_DWORD *)(v28 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 0x12u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *(void *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_21;
      case 0x13u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((void *)a1 + 1) = *(void *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        *((void *)a1 + 6) = *(void *)(a2 + 48);
        *((void *)a1 + 7) = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_DWORD *initializeWithTake for ClientCommand(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 9u:
      *(void *)a1 = *(void *)a2;
      a1[2] = a2[2];
      *((void *)a1 + 2) = *((void *)a2 + 2);
      uint64_t v6 = sub_10000566C(&qword_100713008);
      uint64_t v7 = *(int *)(v6 + 64);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1005E0970();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_10000566C(&qword_100712FD0);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      *(_OWORD *)((char *)a1 + *(int *)(v6 + 80)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 80));
      goto LABEL_10;
    case 0xEu:
      uint64_t v13 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
      uint64_t v14 = *(int *)(sub_10000566C(&qword_100713000) + 48);
      unint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
      unsigned char v15[16] = v16[16];
      goto LABEL_10;
    case 0xFu:
      uint64_t v17 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
      uint64_t v18 = sub_10000566C(&qword_100712FF8);
      *(_OWORD *)((char *)a1 + *(int *)(v18 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v18 + 48));
      goto LABEL_10;
    case 0x10u:
    case 0x11u:
      uint64_t v19 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
      uint64_t v20 = *(int *)(sub_10000566C(&qword_100712FD8) + 48);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      *(void *)uint64_t v21 = *(void *)v22;
      *((_DWORD *)v21 + 2) = *((_DWORD *)v22 + 2);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_DWORD *assignWithTake for ClientCommand(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100363110((uint64_t)a1, type metadata accessor for ClientCommand);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 9u:
        *(void *)a1 = *(void *)a2;
        a1[2] = a2[2];
        *((void *)a1 + 2) = *((void *)a2 + 2);
        uint64_t v6 = sub_10000566C(&qword_100713008);
        uint64_t v7 = *(int *)(v6 + 64);
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_1005E0970();
        uint64_t v11 = *(void *)(v10 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
        {
          uint64_t v12 = sub_10000566C(&qword_100712FD0);
          memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
        }
        *(_OWORD *)((char *)a1 + *(int *)(v6 + 80)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 80));
        goto LABEL_11;
      case 0xEu:
        uint64_t v13 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
        uint64_t v14 = *(int *)(sub_10000566C(&qword_100713000) + 48);
        unint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
        unsigned char v15[16] = v16[16];
        goto LABEL_11;
      case 0xFu:
        uint64_t v17 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
        uint64_t v18 = sub_10000566C(&qword_100712FF8);
        *(_OWORD *)((char *)a1 + *(int *)(v18 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v18 + 48));
        goto LABEL_11;
      case 0x10u:
      case 0x11u:
        uint64_t v19 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
        uint64_t v20 = *(int *)(sub_10000566C(&qword_100712FD8) + 48);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        *(void *)uint64_t v21 = *(void *)v22;
        *((_DWORD *)v21 + 2) = *((_DWORD *)v22 + 2);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_100365A2C()
{
  uint64_t v12 = "'";
  uint64_t v13 = &unk_100602908;
  uint64_t v14 = &unk_100602920;
  unint64_t v15 = &unk_100602938;
  uint64_t v16 = &unk_100602938;
  uint64_t v17 = &unk_100602938;
  uint64_t v18 = &unk_100602950;
  uint64_t v19 = &unk_100602968;
  uint64_t v20 = &unk_100602920;
  uint64_t v7 = &unk_100602938;
  uint64_t v8 = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_100365C08();
  if (v1 <= 0x3F)
  {
    uint64_t v9 = *(void *)(v0 - 8) + 64;
    uint64_t v10 = &unk_100602980;
    swift_getTupleTypeLayout();
    uint64_t v21 = &v11;
    uint64_t v22 = &unk_100602998;
    uint64_t v23 = &unk_1006029B0;
    uint64_t v24 = &unk_100602998;
    uint64_t v25 = &unk_1006029B0;
    sub_100365C60();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v26 = &v6;
      swift_getTupleTypeLayout2();
      uint64_t v27 = &v5;
      swift_getTupleTypeLayout2();
      uint64_t v28 = &v4;
      swift_getTupleTypeLayout2();
      uint64_t v29 = &v3;
      uint64_t v30 = &unk_100602920;
      uint64_t v31 = &unk_1006029E0;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_100365C08()
{
  if (!qword_1007130D8)
  {
    sub_1005E0970();
    unint64_t v0 = sub_1005E28C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007130D8);
    }
  }
}

void sub_100365C60()
{
  if (!qword_1007130E0)
  {
    sub_100365CBC();
    unint64_t v0 = sub_1005E3690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007130E0);
    }
  }
}

unint64_t sub_100365CBC()
{
  unint64_t result = qword_1007130E8;
  if (!qword_1007130E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007130E8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ClientCommand.FetchData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClientCommand.FetchData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  return a1;
}

__n128 initializeWithTake for ClientCommand.FetchData(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ClientCommand.FetchData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientCommand.FetchData(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for ClientCommand.FetchData()
{
  return &type metadata for ClientCommand.FetchData;
}

unsigned char *storeEnumTagSinglePayload for ClientCommand.SelectOption(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100365EF8);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientCommand.SelectOption()
{
  return &type metadata for ClientCommand.SelectOption;
}

unsigned char *initializeBufferWithCopyOfBuffer for ClientCommand.Kind(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ClientCommand.Kind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE5) {
    goto LABEL_17;
  }
  if (a2 + 27 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 27) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 27;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 27;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 27;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1C;
  int v8 = v6 - 28;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ClientCommand.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 27 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 27) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE4)
  {
    unsigned int v6 = ((a2 - 229) >> 8) + 1;
    *__n128 result = a2 + 27;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100366098);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 27;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientCommand.Kind()
{
  return &type metadata for ClientCommand.Kind;
}

uint64_t *initializeBufferWithCopyOfBuffer for LoggableCommand(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    unsigned int v6 = (char *)a1 + v5;
    BOOL v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v9 = *((void *)v7 + 1);
        *(void *)unsigned int v6 = *(void *)v7;
        *((void *)v6 + 1) = v9;
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = *((void *)v7 + 3);
        *((_DWORD *)v6 + 8) = *((_DWORD *)v7 + 8);
        *(_DWORD *)(v6 + 35) = *(_DWORD *)(v7 + 35);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v12 = *((void *)v7 + 1);
        *(void *)unsigned int v6 = *(void *)v7;
        *((void *)v6 + 1) = v12;
        uint64_t v13 = *((void *)v7 + 2);
        uint64_t v14 = *((void *)v7 + 3);
        *((void *)v6 + 2) = v13;
        *((void *)v6 + 3) = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 8u:
        *(void *)unsigned int v6 = *(void *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 4u:
      case 5u:
        *(void *)unsigned int v6 = *(void *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *(void *)unsigned int v6 = *(void *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((_DWORD *)v6 + 6) = *((_DWORD *)v7 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *(void *)unsigned int v6 = *(void *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((_DWORD *)v6 + 6) = *((_DWORD *)v7 + 6);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *(void *)unsigned int v6 = *(void *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_10000566C(&qword_100713008);
        uint64_t v16 = *(int *)(v15 + 64);
        uint64_t v17 = &v6[v16];
        uint64_t v18 = &v7[v16];
        uint64_t v19 = sub_1005E0970();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          uint64_t v21 = sub_10000566C(&qword_100712FD0);
          memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        uint64_t v43 = *(int *)(v15 + 80);
        uint64_t v44 = (uint64_t *)&v6[v43];
        unint64_t v45 = (uint64_t *)&v7[v43];
        uint64_t v46 = *v45;
        unint64_t v47 = v45[1];
        sub_100008D24(*v45, v47);
        *uint64_t v44 = v46;
        v44[1] = v47;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
      case 0xCu:
        unint64_t v22 = *(void *)v7;
        sub_100364008(v22);
        *(void *)unsigned int v6 = v22;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
      case 0xDu:
        unint64_t v23 = *(void *)v7;
        sub_100364008(*(void *)v7);
        uint64_t v24 = *((void *)v7 + 1);
        *(void *)unsigned int v6 = v23;
        *((void *)v6 + 1) = v24;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        uint64_t v25 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v6, v7, v25);
        uint64_t v26 = *(int *)(sub_10000566C(&qword_100713000) + 48);
        uint64_t v27 = &v6[v26];
        uint64_t v28 = &v7[v26];
        v27[16] = v28[16];
        uint64_t v29 = *(void *)v28;
        uint64_t v30 = *((void *)v28 + 1);
        *(void *)uint64_t v27 = v29;
        *((void *)v27 + 1) = v30;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
        uint64_t v31 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v6, v7, v31);
        uint64_t v32 = *(int *)(sub_10000566C(&qword_100712FF8) + 48);
        unint64_t v33 = &v6[v32];
        uint64_t v34 = &v7[v32];
        *(_WORD *)unint64_t v33 = *(_WORD *)v34;
        *((void *)v33 + 1) = *((void *)v34 + 1);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
      case 0x11u:
        uint64_t v35 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v6, v7, v35);
        uint64_t v36 = *(int *)(sub_10000566C(&qword_100712FD8) + 48);
        uint64_t v37 = &v6[v36];
        uint64_t v38 = &v7[v36];
        *(void *)uint64_t v37 = *(void *)v38;
        *((_DWORD *)v37 + 2) = *((_DWORD *)v38 + 2);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x12u:
        uint64_t v39 = *((void *)v7 + 1);
        *(void *)unsigned int v6 = *(void *)v7;
        *((void *)v6 + 1) = v39;
        *((void *)v6 + 2) = *((void *)v7 + 2);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x13u:
        *(_DWORD *)unsigned int v6 = *(_DWORD *)v7;
        uint64_t v40 = *((void *)v7 + 2);
        *((void *)v6 + 1) = *((void *)v7 + 1);
        *((void *)v6 + 2) = v40;
        uint64_t v41 = *((void *)v7 + 4);
        *((void *)v6 + 3) = *((void *)v7 + 3);
        *((void *)v6 + 4) = v41;
        uint64_t v42 = *((void *)v7 + 6);
        *((void *)v6 + 5) = *((void *)v7 + 5);
        *((void *)v6 + 6) = v42;
        *((void *)v6 + 7) = *((void *)v7 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
        break;
    }
  }
  return v3;
}

unint64_t destroy for LoggableCommand(uint64_t a1, uint64_t a2)
{
  int v2 = (unint64_t *)(a1 + *(int *)(a2 + 20));
  type metadata accessor for ClientCommand(0);
  unint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    case 1:
    case 2:
    case 6:
    case 8:
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 3:
    case 4:
    case 5:
      goto LABEL_23;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = sub_10000566C(&qword_100713008);
      uint64_t v8 = (char *)v2 + *(int *)(v7 + 64);
      uint64_t v9 = sub_1005E0970();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
      }
      char v11 = (uint64_t *)((char *)v2 + *(int *)(v7 + 80));
      uint64_t v12 = *v11;
      unint64_t v13 = v11[1];
      return sub_1000094D4(v12, v13);
    case 10:
    case 12:
      unint64_t v4 = *v2;
      return sub_100360E00(v4);
    case 11:
    case 13:
      sub_100360E00(*v2);
      goto LABEL_23;
    case 14:
      uint64_t v14 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(unint64_t *, uint64_t))(*(void *)(v14 - 8) + 8))(v2, v14);
      unsigned int v6 = &qword_100713000;
      goto LABEL_16;
    case 15:
      uint64_t v15 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(unint64_t *, uint64_t))(*(void *)(v15 - 8) + 8))(v2, v15);
      sub_10000566C(&qword_100712FF8);
      goto LABEL_23;
    case 16:
    case 17:
      uint64_t v5 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(unint64_t *, uint64_t))(*(void *)(v5 - 8) + 8))(v2, v5);
      unsigned int v6 = &qword_100712FD8;
LABEL_16:
      sub_10000566C(v6);
      goto LABEL_23;
    case 18:
      swift_release();
      swift_release();
LABEL_19:
      return swift_release();
    case 19:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_23:
      unint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for LoggableCommand(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  unsigned int v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for ClientCommand(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v8 = *((void *)v6 + 1);
      *(void *)uint64_t v5 = *(void *)v6;
      *((void *)v5 + 1) = v8;
      *((void *)v5 + 2) = *((void *)v6 + 2);
      *((void *)v5 + 3) = *((void *)v6 + 3);
      *((_DWORD *)v5 + 8) = *((_DWORD *)v6 + 8);
      *(_DWORD *)(v5 + 35) = *(_DWORD *)(v6 + 35);
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_20;
    case 1u:
      uint64_t v9 = *((void *)v6 + 1);
      *(void *)uint64_t v5 = *(void *)v6;
      *((void *)v5 + 1) = v9;
      uint64_t v10 = *((void *)v6 + 2);
      uint64_t v11 = *((void *)v6 + 3);
      *((void *)v5 + 2) = v10;
      *((void *)v5 + 3) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 2u:
    case 8u:
      *(void *)uint64_t v5 = *(void *)v6;
      *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
      *((void *)v5 + 2) = *((void *)v6 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 3u:
    case 4u:
    case 5u:
      *(void *)uint64_t v5 = *(void *)v6;
      *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 6u:
      *(void *)uint64_t v5 = *(void *)v6;
      *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
      *((void *)v5 + 2) = *((void *)v6 + 2);
      *((_DWORD *)v5 + 6) = *((_DWORD *)v6 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 7u:
      *(void *)uint64_t v5 = *(void *)v6;
      *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
      *((void *)v5 + 2) = *((void *)v6 + 2);
      *((_DWORD *)v5 + 6) = *((_DWORD *)v6 + 6);
      *((void *)v5 + 4) = *((void *)v6 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 9u:
      *(void *)uint64_t v5 = *(void *)v6;
      *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
      *((void *)v5 + 2) = *((void *)v6 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_10000566C(&qword_100713008);
      uint64_t v13 = *(int *)(v12 + 64);
      uint64_t v14 = &v5[v13];
      uint64_t v15 = &v6[v13];
      uint64_t v16 = sub_1005E0970();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = sub_10000566C(&qword_100712FD0);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      uint64_t v40 = *(int *)(v12 + 80);
      uint64_t v41 = (uint64_t *)&v5[v40];
      uint64_t v42 = (uint64_t *)&v6[v40];
      uint64_t v43 = *v42;
      unint64_t v44 = v42[1];
      sub_100008D24(*v42, v44);
      uint64_t *v41 = v43;
      v41[1] = v44;
      goto LABEL_20;
    case 0xAu:
    case 0xCu:
      unint64_t v19 = *(void *)v6;
      sub_100364008(v19);
      *(void *)uint64_t v5 = v19;
      goto LABEL_20;
    case 0xBu:
    case 0xDu:
      unint64_t v20 = *(void *)v6;
      sub_100364008(*(void *)v6);
      uint64_t v21 = *((void *)v6 + 1);
      *(void *)uint64_t v5 = v20;
      *((void *)v5 + 1) = v21;
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 0xEu:
      uint64_t v22 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v5, v6, v22);
      uint64_t v23 = *(int *)(sub_10000566C(&qword_100713000) + 48);
      uint64_t v24 = &v5[v23];
      uint64_t v25 = &v6[v23];
      v24[16] = v25[16];
      uint64_t v26 = *(void *)v25;
      uint64_t v27 = *((void *)v25 + 1);
      *(void *)uint64_t v24 = v26;
      *((void *)v24 + 1) = v27;
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 0xFu:
      uint64_t v28 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v5, v6, v28);
      uint64_t v29 = *(int *)(sub_10000566C(&qword_100712FF8) + 48);
      uint64_t v30 = &v5[v29];
      uint64_t v31 = &v6[v29];
      *(_WORD *)uint64_t v30 = *(_WORD *)v31;
      *((void *)v30 + 1) = *((void *)v31 + 1);
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 0x10u:
    case 0x11u:
      uint64_t v32 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v5, v6, v32);
      uint64_t v33 = *(int *)(sub_10000566C(&qword_100712FD8) + 48);
      uint64_t v34 = &v5[v33];
      uint64_t v35 = &v6[v33];
      *(void *)uint64_t v34 = *(void *)v35;
      *((_DWORD *)v34 + 2) = *((_DWORD *)v35 + 2);
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 0x12u:
      uint64_t v36 = *((void *)v6 + 1);
      *(void *)uint64_t v5 = *(void *)v6;
      *((void *)v5 + 1) = v36;
      *((void *)v5 + 2) = *((void *)v6 + 2);
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_20;
    case 0x13u:
      *(_DWORD *)uint64_t v5 = *(_DWORD *)v6;
      uint64_t v37 = *((void *)v6 + 2);
      *((void *)v5 + 1) = *((void *)v6 + 1);
      *((void *)v5 + 2) = v37;
      uint64_t v38 = *((void *)v6 + 4);
      *((void *)v5 + 3) = *((void *)v6 + 3);
      *((void *)v5 + 4) = v38;
      uint64_t v39 = *((void *)v6 + 6);
      *((void *)v5 + 5) = *((void *)v6 + 5);
      *((void *)v5 + 6) = v39;
      *((void *)v5 + 7) = *((void *)v6 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_20:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t assignWithCopy for LoggableCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = (char *)(a1 + v4);
    uint64_t v6 = a2 + v4;
    sub_100363110(a1 + v4, type metadata accessor for ClientCommand);
    uint64_t v7 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)uint64_t v5 = *(void *)v6;
        *((void *)v5 + 1) = *(void *)(v6 + 8);
        *((void *)v5 + 2) = *(void *)(v6 + 16);
        *((_DWORD *)v5 + 6) = *(_DWORD *)(v6 + 24);
        *((_DWORD *)v5 + 7) = *(_DWORD *)(v6 + 28);
        int v8 = *(_DWORD *)(v6 + 32);
        *(_DWORD *)(v5 + 35) = *(_DWORD *)(v6 + 35);
        *((_DWORD *)v5 + 8) = v8;
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_21;
      case 1u:
        *(void *)uint64_t v5 = *(void *)v6;
        *((void *)v5 + 1) = *(void *)(v6 + 8);
        *((void *)v5 + 2) = *(void *)(v6 + 16);
        *((void *)v5 + 3) = *(void *)(v6 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 2u:
      case 8u:
        *(void *)uint64_t v5 = *(void *)v6;
        *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
        *((void *)v5 + 2) = *(void *)(v6 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 3u:
      case 4u:
      case 5u:
        *(void *)uint64_t v5 = *(void *)v6;
        *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 6u:
        *(void *)uint64_t v5 = *(void *)v6;
        *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
        *((void *)v5 + 2) = *(void *)(v6 + 16);
        *((_DWORD *)v5 + 6) = *(_DWORD *)(v6 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 7u:
        *(void *)uint64_t v5 = *(void *)v6;
        *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
        *((void *)v5 + 2) = *(void *)(v6 + 16);
        *((_DWORD *)v5 + 6) = *(_DWORD *)(v6 + 24);
        *((void *)v5 + 4) = *(void *)(v6 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 9u:
        *(void *)uint64_t v5 = *(void *)v6;
        *((_DWORD *)v5 + 2) = *(_DWORD *)(v6 + 8);
        *((void *)v5 + 2) = *(void *)(v6 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_10000566C(&qword_100713008);
        uint64_t v10 = *(int *)(v9 + 64);
        uint64_t v11 = &v5[v10];
        uint64_t v12 = (const void *)(v6 + v10);
        uint64_t v13 = sub_1005E0970();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        {
          uint64_t v15 = sub_10000566C(&qword_100712FD0);
          memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
        uint64_t v31 = *(int *)(v9 + 80);
        uint64_t v32 = (uint64_t *)&v5[v31];
        uint64_t v33 = (uint64_t *)(v6 + v31);
        uint64_t v34 = *v33;
        unint64_t v35 = v33[1];
        sub_100008D24(*v33, v35);
        *uint64_t v32 = v34;
        v32[1] = v35;
        goto LABEL_21;
      case 0xAu:
      case 0xCu:
        unint64_t v16 = *(void *)v6;
        sub_100364008(v16);
        *(void *)uint64_t v5 = v16;
        goto LABEL_21;
      case 0xBu:
      case 0xDu:
        unint64_t v17 = *(void *)v6;
        sub_100364008(*(void *)v6);
        *(void *)uint64_t v5 = v17;
        *((void *)v5 + 1) = *(void *)(v6 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 0xEu:
        uint64_t v18 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v5, v6, v18);
        uint64_t v19 = *(int *)(sub_10000566C(&qword_100713000) + 48);
        unint64_t v20 = &v5[v19];
        uint64_t v21 = v6 + v19;
        *(void *)unint64_t v20 = *(void *)v21;
        uint64_t v22 = *(void *)(v21 + 8);
        unsigned char v20[16] = *(unsigned char *)(v21 + 16);
        *((void *)v20 + 1) = v22;
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 0xFu:
        uint64_t v23 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v5, v6, v23);
        uint64_t v24 = *(int *)(sub_10000566C(&qword_100712FF8) + 48);
        uint64_t v25 = &v5[v24];
        uint64_t v26 = (char *)(v6 + v24);
        *uint64_t v25 = *v26;
        v25[1] = v26[1];
        *((void *)v25 + 1) = *((void *)v26 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 0x10u:
      case 0x11u:
        uint64_t v27 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v5, v6, v27);
        uint64_t v28 = *(int *)(sub_10000566C(&qword_100712FD8) + 48);
        uint64_t v29 = &v5[v28];
        uint64_t v30 = v6 + v28;
        *(void *)uint64_t v29 = *(void *)v30;
        *((_DWORD *)v29 + 2) = *(_DWORD *)(v30 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 0x12u:
        *(void *)uint64_t v5 = *(void *)v6;
        *((void *)v5 + 1) = *(void *)(v6 + 8);
        *((void *)v5 + 2) = *(void *)(v6 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_21;
      case 0x13u:
        *(_DWORD *)uint64_t v5 = *(_DWORD *)v6;
        *((void *)v5 + 1) = *(void *)(v6 + 8);
        *((void *)v5 + 2) = *(void *)(v6 + 16);
        *((void *)v5 + 3) = *(void *)(v6 + 24);
        *((void *)v5 + 4) = *(void *)(v6 + 32);
        *((void *)v5 + 5) = *(void *)(v6 + 40);
        *((void *)v5 + 6) = *(void *)(v6 + 48);
        *((void *)v5 + 7) = *(void *)(v6 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v5, (const void *)v6, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for LoggableCommand(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for ClientCommand(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 9u:
      *(void *)uint64_t v5 = *(void *)v6;
      *((_DWORD *)v5 + 2) = *((_DWORD *)v6 + 2);
      *((void *)v5 + 2) = *((void *)v6 + 2);
      uint64_t v8 = sub_10000566C(&qword_100713008);
      uint64_t v9 = *(int *)(v8 + 64);
      uint64_t v10 = &v5[v9];
      uint64_t v11 = &v6[v9];
      uint64_t v12 = sub_1005E0970();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_10000566C(&qword_100712FD0);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      *(_OWORD *)&v5[*(int *)(v8 + 80)] = *(_OWORD *)&v6[*(int *)(v8 + 80)];
      goto LABEL_10;
    case 0xEu:
      uint64_t v15 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v5, v6, v15);
      uint64_t v16 = *(int *)(sub_10000566C(&qword_100713000) + 48);
      unint64_t v17 = &v5[v16];
      uint64_t v18 = &v6[v16];
      *(_OWORD *)unint64_t v17 = *(_OWORD *)v18;
      unsigned char v17[16] = v18[16];
      goto LABEL_10;
    case 0xFu:
      uint64_t v19 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v5, v6, v19);
      uint64_t v20 = sub_10000566C(&qword_100712FF8);
      *(_OWORD *)&v5[*(int *)(v20 + 48)] = *(_OWORD *)&v6[*(int *)(v20 + 48)];
      goto LABEL_10;
    case 0x10u:
    case 0x11u:
      uint64_t v21 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v5, v6, v21);
      uint64_t v22 = *(int *)(sub_10000566C(&qword_100712FD8) + 48);
      uint64_t v23 = &v5[v22];
      uint64_t v24 = &v6[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      *((_DWORD *)v23 + 2) = *((_DWORD *)v24 + 2);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t assignWithTake for LoggableCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = (_DWORD *)(a1 + v4);
    uint64_t v6 = (_DWORD *)(a2 + v4);
    sub_100363110(a1 + v4, type metadata accessor for ClientCommand);
    uint64_t v7 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 9u:
        *(void *)uint64_t v5 = *(void *)v6;
        void v5[2] = v6[2];
        *((void *)v5 + 2) = *((void *)v6 + 2);
        uint64_t v8 = sub_10000566C(&qword_100713008);
        uint64_t v9 = *(int *)(v8 + 64);
        uint64_t v10 = (char *)v5 + v9;
        uint64_t v11 = (char *)v6 + v9;
        uint64_t v12 = sub_1005E0970();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
          uint64_t v14 = sub_10000566C(&qword_100712FD0);
          memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
        *(_OWORD *)((char *)v5 + *(int *)(v8 + 80)) = *(_OWORD *)((char *)v6 + *(int *)(v8 + 80));
        goto LABEL_11;
      case 0xEu:
        uint64_t v15 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v15 - 8) + 32))(v5, v6, v15);
        uint64_t v16 = *(int *)(sub_10000566C(&qword_100713000) + 48);
        unint64_t v17 = (char *)v5 + v16;
        uint64_t v18 = (char *)v6 + v16;
        *(_OWORD *)unint64_t v17 = *(_OWORD *)v18;
        unsigned char v17[16] = v18[16];
        goto LABEL_11;
      case 0xFu:
        uint64_t v19 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v19 - 8) + 32))(v5, v6, v19);
        uint64_t v20 = sub_10000566C(&qword_100712FF8);
        *(_OWORD *)((char *)v5 + *(int *)(v20 + 48)) = *(_OWORD *)((char *)v6 + *(int *)(v20 + 48));
        goto LABEL_11;
      case 0x10u:
      case 0x11u:
        uint64_t v21 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v21 - 8) + 32))(v5, v6, v21);
        uint64_t v22 = *(int *)(sub_10000566C(&qword_100712FD8) + 48);
        uint64_t v23 = (char *)v5 + v22;
        uint64_t v24 = (char *)v6 + v22;
        *(void *)uint64_t v23 = *(void *)v24;
        *((_DWORD *)v23 + 2) = *((_DWORD *)v24 + 2);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for LoggableCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003682B0);
}

uint64_t sub_1003682B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for ClientCommand(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for LoggableCommand(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100368334);
}

uint64_t sub_100368334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for ClientCommand(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_1003683A8()
{
  uint64_t result = type metadata accessor for ClientCommand(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100368440(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003684A8()
{
  return sub_100371200();
}

unint64_t sub_1003684C4()
{
  unint64_t result = qword_100713210;
  if (!qword_100713210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713210);
  }
  return result;
}

void *ClientCommand.EncodingOptions.logging.unsafeMutableAddressor()
{
  return &static ClientCommand.EncodingOptions.logging;
}

uint64_t ClientCommand.encode(tag:options:)@<X0>(int a1@<W1>, void (*a2)(void)@<X8>)
{
  return sub_100371FE8((void (*)(void))sub_1003631F4, a1 & 0x101FF, a2);
}

uint64_t MessageSectionData.Segment.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1005E17E0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t MessageSectionData.Segment.data.setter(uint64_t a1)
{
  uint64_t v3 = sub_1005E17E0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t ClientCommand.Encoded.continuations.getter()
{
  type metadata accessor for ClientCommand.Encoded();
  return swift_bridgeObjectRetain();
}

uint64_t ClientCommand.Encoded.continuations.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for ClientCommand.Encoded() + 20);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

Swift::UInt32 (__swiftcall *ClientCommand.Encoded.continuations.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t ClientCommand.Encoded.init(command:continuations:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for ClientCommand.Encoded();
  *(void *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t static ClientCommand.Encoded.idle(tag:options:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, unint64_t a3@<X8>)
{
  return ClientCommandEncoder.idle(tag:)(a1 & 0xFFFFFFFF000000FFLL, a2 & 0x101FF, a3);
}

uint64_t Environment.appState.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result & 1;
  return result;
}

uint64_t Environment.isLocked.getter(unsigned int a1)
{
  return HIWORD(a1) & 1;
}

uint64_t ClientCommand.EncodingOptions.mode.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result & 1;
  return result;
}

void *ClientCommand.EncodingOptions.rfc3501.unsafeMutableAddressor()
{
  return &static ClientCommand.EncodingOptions.rfc3501;
}

uint64_t static ClientCommand.EncodingOptions.logging.getter()
{
  return 0x10000;
}

uint64_t static ClientCommand.EncodingOptions.__derived_struct_equals(_:_:)(unsigned int a1, int a2)
{
  unsigned int v2 = ((a2 ^ a1) >> 8) & 1;
  if (a2 != a1) {
    unsigned int v2 = 1;
  }
  return (v2 | (((a2 ^ a1) & 0x10000) >> 16)) ^ 1;
}

BOOL sub_1003687EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 != *a2) | ((a1[1] ^ a2[1]) | (a2[2] ^ a1[2])) & 1) == 0;
}

uint64_t ClientCommand.EncodingOptions.debugDescription.getter(__int16 a1)
{
  if ((_BYTE)a1)
  {
    unint64_t v1 = 0x2B6C61726574694CLL;
    if ((a1 & 0x100) != 0) {
      unint64_t v1 = 0xD000000000000010;
    }
    unint64_t v2 = 0x2D6C61726574694CLL;
    if ((a1 & 0x100) != 0) {
      unint64_t v2 = 0xD000000000000010;
    }
    if (a1 == 1) {
      return v1;
    }
    else {
      return v2;
    }
  }
  else
  {
    uint64_t v3 = 0x7972616E6942;
    if ((a1 & 0x100) == 0) {
      return 0x647261646E617453;
    }
  }
  return v3;
}

uint64_t sub_1003688D4()
{
  if (v0[1]) {
    __int16 v1 = 256;
  }
  else {
    __int16 v1 = 0;
  }
  return ClientCommand.EncodingOptions.debugDescription.getter(v1 | *v0);
}

uint64_t CommandEncodingOptions.init(_:)(__int16 a1)
{
  uint64_t v1 = 8 * (char)a1;
  uint64_t v2 = *(void *)((char *)&unk_100602C20 + v1);
  uint64_t v3 = *(void *)((char *)&unk_100602C38 + v1);
  uint64_t v4 = *(void *)((char *)&unk_100602C50 + v1);
  uint64_t v5 = 0x100000001;
  if ((a1 & 0x100) == 0) {
    uint64_t v5 = 1;
  }
  return v5 | v2 | v3 | v4;
}

uint64_t ClientCommand.EncodingOptions.init(_:)(uint64_t a1)
{
  uint64_t v2 = Capability.literalPlus.unsafeMutableAddressor();
  if (sub_1003689F8(*(void *)v2, *((void *)v2 + 1), *((void *)v2 + 2), *((unsigned char *)v2 + 24), a1))
  {
    int v3 = 1;
  }
  else
  {
    uint64_t v4 = Capability.literalMinus.unsafeMutableAddressor();
    if (sub_1003689F8(*(void *)v4, *((void *)v4 + 1), *((void *)v4 + 2), *((unsigned char *)v4 + 24), a1)) {
      int v3 = 2;
    }
    else {
      int v3 = 0;
    }
  }
  uint64_t v5 = Capability.binary.unsafeMutableAddressor();
  char v6 = sub_1003689F8(*(void *)v5, *((void *)v5 + 1), *((void *)v5 + 2), *((unsigned char *)v5 + 24), a1);
  swift_bridgeObjectRelease();
  if (v6) {
    int v7 = 256;
  }
  else {
    int v7 = 0;
  }
  return v7 | v3;
}

uint64_t sub_1003689F8(uint64_t a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a5 + 16);
  if (v5)
  {
    uint64_t v10 = (unsigned char *)(a5 + 56);
    do
    {
      uint64_t v11 = *((void *)v10 - 1);
      char v12 = *v10;
      BOOL v13 = *((void *)v10 - 3) == a1 && *((void *)v10 - 2) == a2;
      if (v13 || (sub_1005E3290() & 1) != 0)
      {
        if (v12)
        {
          if (a4) {
            return 1;
          }
        }
        else if ((a4 & 1) == 0 && (v11 ^ a3) < 0x4000)
        {
          return 1;
        }
      }
      v10 += 32;
      --v5;
    }
    while (v5);
  }
  return 0;
}

uint64_t type metadata accessor for ClientCommand.Encoded()
{
  uint64_t result = qword_1007132A8;
  if (!qword_1007132A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_100368AF8()
{
  unint64_t result = qword_100713238;
  if (!qword_100713238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713238);
  }
  return result;
}

unint64_t sub_100368B50()
{
  unint64_t result = qword_100713240;
  if (!qword_100713240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713240);
  }
  return result;
}

unint64_t sub_100368BA8()
{
  unint64_t result = qword_100713248;
  if (!qword_100713248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713248);
  }
  return result;
}

uint64_t *_s7EncodedVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005E17E0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s7EncodedVwxx(uint64_t a1)
{
  uint64_t v2 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t _s7EncodedVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s7EncodedVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7EncodedVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s7EncodedVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7EncodedVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100368F60);
}

uint64_t sub_100368F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t _s7EncodedVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100369034);
}

uint64_t sub_100369034(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005E17E0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1003690F0()
{
  uint64_t result = sub_1005E17E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s15EncodingOptionsVwCP(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)uint64_t result = v2;
  return result;
}

uint64_t _s15EncodingOptionsVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = a1[3];
      if (a1[3]) {
        return (*(unsigned __int16 *)a1 | (a1[2] << 16) | (v2 << 24)) - 16776961;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)(a1 + 3);
      if (*(_WORD *)(a1 + 3)) {
        return (*(unsigned __int16 *)a1 | (a1[2] << 16) | (v2 << 24)) - 16776961;
      }
    }
  }
  unsigned int v4 = a1[1];
  BOOL v5 = v4 >= 2;
  int v6 = v4 - 2;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t _s15EncodingOptionsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)uint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)(result + 1) = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientCommand.EncodingOptions()
{
  return &type metadata for ClientCommand.EncodingOptions;
}

unsigned char *_s15EncodingOptionsV7LiteralOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100369374);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientCommand.EncodingOptions.Literal()
{
  return &type metadata for ClientCommand.EncodingOptions.Literal;
}

ValueMetadata *type metadata accessor for ClientCommand.EncodingOptions.MessageBodyEncoding()
{
  return &type metadata for ClientCommand.EncodingOptions.MessageBodyEncoding;
}

unsigned char *_s15EncodingOptionsV19MessageBodyEncodingOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10036948CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientCommand.EncodingOptions.Mode()
{
  return &type metadata for ClientCommand.EncodingOptions.Mode;
}

void *ConnectionID.invalid.unsafeMutableAddressor()
{
  return &static ConnectionID.invalid;
}

uint64_t static ConnectionID.invalid.getter()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_1003694E4(unsigned __int8 a1)
{
  sub_1005E1D10(10);
  __int16 v2 = a1 + 1;
  do
  {
    unsigned int v3 = (unsigned __int16)(v2 - 1);
    __int16 v2 = (unsigned __int16)(v2 - 1) / 0x1Au;
    sub_1005E1D80();
    sub_1005E1E40();
    swift_bridgeObjectRelease();
  }
  while (v3 > 0x19);
  return 0;
}

unint64_t sub_100369594()
{
  unint64_t result = qword_1007132E0;
  if (!qword_1007132E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007132E0);
  }
  return result;
}

uint64_t sub_1003695E8()
{
  return sub_1003694E4(*v0);
}

ValueMetadata *type metadata accessor for ConnectionID()
{
  return &type metadata for ConnectionID;
}

void EncodedString.hash(into:)(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1005E3410(v3);
  if (v3)
  {
    unsigned int v4 = (Swift::UInt8 *)(a2 + 32);
    do
    {
      Swift::UInt8 v5 = *v4++;
      sub_1005E3420(v5);
      --v3;
    }
    while (v3);
  }
}

uint64_t sub_100369650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1003696E8(uint64_t a1)
{
  unint64_t v2 = sub_1003698D4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100369724(uint64_t a1)
{
  unint64_t v2 = sub_1003698D4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t EncodedString.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_1007132E8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  char v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1003698D4();
  sub_1005E3500();
  v9[1] = a2;
  sub_10000566C(&qword_1007132F8);
  sub_10036A5C8(&qword_100713300);
  sub_1005E31C0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1003698D4()
{
  unint64_t result = qword_1007132F0;
  if (!qword_1007132F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007132F0);
  }
  return result;
}

Swift::Int EncodedString.hashValue.getter(uint64_t a1)
{
  sub_1005E33F0();
  Swift::UInt v2 = *(void *)(a1 + 16);
  sub_1005E3410(v2);
  if (v2)
  {
    Swift::UInt v3 = (Swift::UInt8 *)(a1 + 32);
    do
    {
      Swift::UInt8 v4 = *v3++;
      sub_1005E3420(v4);
      --v2;
    }
    while (v2);
  }
  return sub_1005E3470();
}

void *EncodedString.init(from:)(void *a1)
{
  return sub_10036A1E8(a1);
}

Swift::Int sub_1003699B0()
{
  return EncodedString.hashValue.getter(*v0);
}

void sub_1003699B8()
{
  uint64_t v1 = *v0;
  Swift::UInt v2 = *(void *)(*v0 + 16);
  sub_1005E3410(v2);
  if (v2)
  {
    Swift::UInt v3 = (Swift::UInt8 *)(v1 + 32);
    do
    {
      Swift::UInt8 v4 = *v3++;
      sub_1005E3420(v4);
      --v2;
    }
    while (v2);
  }
}

Swift::Int sub_100369A0C()
{
  uint64_t v1 = *v0;
  sub_1005E33F0();
  Swift::UInt v2 = *(void *)(v1 + 16);
  sub_1005E3410(v2);
  if (v2)
  {
    Swift::UInt v3 = (Swift::UInt8 *)(v1 + 32);
    do
    {
      Swift::UInt8 v4 = *v3++;
      sub_1005E3420(v4);
      --v2;
    }
    while (v2);
  }
  return sub_1005E3470();
}

void *sub_100369A78@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_10036A1E8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100369AA4(void *a1)
{
  return EncodedString.encode(to:)(a1, *v1);
}

BOOL sub_100369AC0(uint64_t *a1, uint64_t *a2)
{
  return _s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_100369AD4(uint64_t *a1, uint64_t *a2)
{
  return _s13IMAP2Protocol13EncodedStringV1loiySbAC_ACtFZ_0(*a1, *a2);
}

BOOL sub_100369AE0(uint64_t *a1, uint64_t *a2)
{
  return (_s13IMAP2Protocol13EncodedStringV1loiySbAC_ACtFZ_0(*a2, *a1) & 1) == 0;
}

BOOL sub_100369B0C(uint64_t *a1, uint64_t *a2)
{
  return (_s13IMAP2Protocol13EncodedStringV1loiySbAC_ACtFZ_0(*a1, *a2) & 1) == 0;
}

uint64_t sub_100369B34(uint64_t *a1, uint64_t *a2)
{
  return _s13IMAP2Protocol13EncodedStringV1loiySbAC_ACtFZ_0(*a2, *a1);
}

Swift::String_optional __swiftcall String.init(_:)(IMAP2Protocol::EncodedString a1)
{
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_1005E1D10(*((void *)a1.rawValue._rawValue + 2));
  unsigned int v4 = 0;
  unsigned __int8 v5 = 0;
  unint64_t v6 = 0;
  uint64_t v8 = 0;
  unint64_t v7 = 0xE000000000000000;
  uint64_t v9 = (char *)a1.rawValue._rawValue + 32;
  while (1)
  {
    unsigned int v22 = v4;
    unsigned __int8 v23 = v5;
    if (v5)
    {
      if ((v4 & 0x80) == 0)
      {
        sub_1003684C4();
        uint64_t v2 = (void (*)(void, void))UnsafeExtractedAttachment.part.modify();
        char v16 = v3[4];
        if (!v16) {
          goto LABEL_46;
        }
        *(_DWORD *)v3 >>= 8;
        v3[4] = v16 - 8;
        v2(&v20, 0);
        goto LABEL_10;
      }
      unint64_t v11 = *((void *)a1.rawValue._rawValue + 2);
      BOOL v14 = v6 >= v11;
      if (v6 == v11) {
        goto LABEL_12;
      }
      goto LABEL_17;
    }
    unint64_t v11 = *((void *)a1.rawValue._rawValue + 2);
    if (v6 == v11) {
      goto LABEL_42;
    }
    if (v6 >= v11) {
      break;
    }
    int v12 = v9[v6];
    int v13 = v9[v6++];
    if (v12 < 0)
    {
      unsigned int v4 = v4 & 0xFFFFFF00 | v13;
      unsigned __int8 v5 = 8;
      BOOL v14 = v6 >= v11;
      if (v6 == v11)
      {
LABEL_12:
        unsigned __int8 v15 = v5;
        goto LABEL_31;
      }
LABEL_17:
      if (v14) {
        goto LABEL_45;
      }
      unint64_t v17 = v6 + 1;
      unsigned int v4 = (v9[v6] << v5) | ((-255 << v5) - 1) & v4;
      unsigned __int8 v15 = v5 + 8;
      if ((v5 + 8) <= 0x1Fu)
      {
        if (v17 == v11) {
          goto LABEL_27;
        }
        unint64_t v18 = v6 + 2;
        unsigned int v4 = (v9[v17] << v15) | ((-255 << v15) - 1) & v4;
        unsigned __int8 v15 = v5 + 16;
        if ((v5 + 16) > 0x1Fu) {
          goto LABEL_30;
        }
        if (v18 == v11)
        {
LABEL_27:
          if (!v15)
          {
LABEL_42:
            swift_bridgeObjectRelease();
            goto LABEL_43;
          }
LABEL_31:
          if ((v4 & 0xC0E0) == 0x80C0)
          {
            if ((v4 & 0x1E) == 0) {
              goto LABEL_41;
            }
            char v10 = 16;
            goto LABEL_4;
          }
          if ((v4 & 0xC0C0F0) == 0x8080E0)
          {
            if ((v4 & 0x200F) == 0 || (v4 & 0x200F) == 0x200D) {
              goto LABEL_41;
            }
            char v10 = 24;
            goto LABEL_4;
          }
          if ((v4 & 0xC0C0C0F8) == 0x808080F0 && (v4 & 0x3007) != 0 && __rev16(v4 & 0x3007) <= 0x400)
          {
            char v10 = 32;
LABEL_4:
            unsigned int v22 = (unint64_t)v4 >> v10;
            unsigned __int8 v23 = v15 - v10;
            goto LABEL_5;
          }
LABEL_41:
          sub_1005E3510();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v8 = 0;
          unint64_t v7 = 0;
LABEL_43:
          uint64_t v2 = v8;
          Swift::UInt v3 = (unsigned char *)v7;
          goto LABEL_47;
        }
        unint64_t v17 = v6 + 3;
        unsigned int v4 = (v9[v18] << v15) | ((-255 << v15) - 1) & v4;
        unsigned __int8 v15 = v5 + 24;
        if ((v5 + 24) <= 0x1Fu)
        {
          if (v17 != v11)
          {
            unint64_t v18 = v6 + 4;
            unsigned int v4 = (v9[v17] << v15) | ((-255 << v15) - 1) & v4;
            unsigned __int8 v15 = v5 + 32;
            if (v5 >= 0xE0u)
            {
              if (v18 != v11)
              {
                unsigned int v4 = (v9[v18] << v5) | ((-255 << v5) - 1) & v4;
                unsigned __int8 v15 = v5 + 40;
                if ((v5 + 40) >= 0x20u)
                {
                  unint64_t v11 = v6 + 5;
                  goto LABEL_31;
                }
              }
              goto LABEL_27;
            }
LABEL_30:
            unint64_t v11 = v18;
            goto LABEL_31;
          }
          goto LABEL_27;
        }
      }
      unint64_t v11 = v17;
      goto LABEL_31;
    }
LABEL_10:
    unint64_t v11 = v6;
LABEL_5:
    unsigned int v4 = v22;
    unsigned __int8 v5 = v23;
    uint64_t v20 = v8;
    unint64_t v21 = v7;
    uint64_t v2 = (void (*)(void, void))sub_1005E1D60();
    uint64_t v8 = v20;
    unint64_t v7 = v21;
    unint64_t v6 = v11;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  result.value._object = v3;
  result.value._countAndFlagsBits = (uint64_t)v2;
  return result;
}

void *EncodedString.init(_:)(uint64_t a1)
{
  size_t v2 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  Swift::UInt v3 = sub_10036A000(0, v2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    Swift::UInt v3 = sub_10036A14C(v3);
  }
  sub_1005E17C0();
  uint64_t v4 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return v3;
}

void *sub_10036A000(int a1, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    Swift::String_optional result = (void *)sub_1005E2F10();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v4 = sub_1005E2150();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return (void *)v4;
  }
  return result;
}

uint64_t sub_10036A0BC(uint64_t result)
{
  char v2 = *(unsigned char *)(v1 + 4);
  if (v2)
  {
    if (result <= 0xF7u)
    {
      uint64_t v3 = (*(_DWORD *)v1 >> result);
      *(_DWORD *)uint64_t v1 = (*(_DWORD *)v1 >> (((result + 8) >> 1) & 0x1C) >> (((result + 8) >> 1) & 0x1C) << ((result + 8 - ((((((result + 8) - result) & 0xE000u) >> 13) + 8) & 0x18)) & 0x18)) | *(_DWORD *)v1 & ((1 << ((result >> 1) & 0x1C) << ((result >> 1) & 0x1C)) - 1);
      *(unsigned char *)(v1 + 4) = v2
                         - ((((((result + 8) - result) & 0xE000u) >> 13) + 8) & 0xF8);
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_10036A14C(void *a1)
{
  return sub_100383094(0, a1[2], 0, a1);
}

void *sub_10036A160(void *a1)
{
  return sub_100383568(0, a1[2], 0, a1);
}

uint64_t _s13IMAP2Protocol13EncodedStringV1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = 0;
  unint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = a1 + 32;
  unint64_t v6 = (unsigned __int8 *)(a2 + 32);
  uint64_t result = 1;
  while (v2 == v3)
  {
    unsigned int v8 = 0;
    unint64_t v9 = v3;
    if (!v4) {
      return 0;
    }
LABEL_7:
    if (v2 == v3) {
      return result;
    }
    unsigned int v10 = *v6;
    if (v8 < v10) {
      return result;
    }
    ++v6;
    --v4;
    unint64_t v2 = v9;
    if (v10 < v8) {
      return 0;
    }
  }
  if (v2 < v3)
  {
    unsigned int v8 = *(unsigned __int8 *)(v5 + v2);
    unint64_t v9 = v2 + 1;
    if (!v4) {
      return 0;
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void *sub_10036A1E8(void *a1)
{
  uint64_t v3 = sub_10000566C(&qword_100713328);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  unint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = sub_10003BCDC(a1, a1[3]);
  sub_1003698D4();
  sub_1005E34E0();
  if (v1)
  {
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
  }
  else
  {
    sub_10000566C(&qword_1007132F8);
    sub_10036A5C8(&qword_100713330);
    sub_1005E30E0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    unint64_t v7 = (void *)v9[1];
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_10036A388()
{
  unint64_t result = qword_100713308;
  if (!qword_100713308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713308);
  }
  return result;
}

ValueMetadata *type metadata accessor for EncodedString()
{
  return &type metadata for EncodedString;
}

unsigned char *storeEnumTagSinglePayload for EncodedString.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10036A488);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EncodedString.CodingKeys()
{
  return &type metadata for EncodedString.CodingKeys;
}

unint64_t sub_10036A4C4()
{
  unint64_t result = qword_100713310;
  if (!qword_100713310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713310);
  }
  return result;
}

unint64_t sub_10036A51C()
{
  unint64_t result = qword_100713318;
  if (!qword_100713318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713318);
  }
  return result;
}

unint64_t sub_10036A574()
{
  unint64_t result = qword_100713320;
  if (!qword_100713320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713320);
  }
  return result;
}

uint64_t sub_10036A5C8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000744C(&qword_1007132F8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10036A64C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10036A684()
{
  (*(void (**)(void))(v0 + 16))();
  uint64_t countAndFlagsBits = ServerResponseTranscoder.makeParsingErrorDescription()()._countAndFlagsBits;
  swift_release();
  return countAndFlagsBits;
}

uint64_t sub_10036A6F4(uint64_t a1, uint64_t a2)
{
  sub_1005E0E30();
  __chkstk_darwin();
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E0D20();
  __chkstk_darwin();
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  sub_1005E0CF0();
  sub_10018A5D4();
  sub_1005E0DB0();
  sub_10036C0B8((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for OSLogStringAlignment);
  sub_10036C0B8((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for OSLogPrivacy);
  return swift_release();
}

uint64_t sub_10036A870()
{
  __int16 v1 = (*(uint64_t (**)(void))(v0 + 16))();
  if ((_BYTE)v1)
  {
    unint64_t v2 = 0x2B6C61726574694CLL;
    if ((v1 & 0x100) != 0) {
      unint64_t v2 = 0xD000000000000010;
    }
    unint64_t v3 = 0x2D6C61726574694CLL;
    if ((v1 & 0x100) != 0) {
      unint64_t v3 = 0xD000000000000010;
    }
    if (v1 == 1) {
      return v2;
    }
    else {
      return v3;
    }
  }
  else
  {
    uint64_t v4 = 0x7972616E6942;
    if ((v1 & 0x100) == 0) {
      return 0x647261646E617453;
    }
  }
  return v4;
}

uint64_t sub_10036AD14()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10036AF9C(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1005E0E30();
  __chkstk_darwin();
  unint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E0D20();
  __chkstk_darwin();
  unint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13._uint64_t countAndFlagsBits = sub_1005E1D90(a3, 3uLL, 1);
  sub_1005E0E10(v13);
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  sub_1005E0CF0();
  sub_10018A5D4();
  sub_1005E0DB0();
  sub_10036C0B8((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for OSLogStringAlignment);
  sub_10036C0B8((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for OSLogPrivacy);
  return swift_release();
}

uint64_t sub_10036B120(uint64_t (*a1)(uint64_t), uint64_t a2, void (*a3)(void), uint64_t (*a4)(uint64_t), uint64_t (*a5)(void))
{
  a3(0);
  uint64_t v8 = __chkstk_darwin();
  uint64_t v10 = (char *)&v14 - v9;
  uint64_t v11 = a1(v8);
  uint64_t v12 = a4(v11);
  sub_10036C0B8((uint64_t)v10, a5);
  return v12;
}

unint64_t sub_10036B53C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, uint64_t *a5@<X8>)
{
  if (a4)
  {
    if (a4 == 1) {
      uint64_t v9 = 20302;
    }
    else {
      uint64_t v9 = 4473154;
    }
    if (a4 == 1) {
      unint64_t v10 = 0xE200000000000000;
    }
    else {
      unint64_t v10 = 0xE300000000000000;
    }
  }
  else
  {
    unint64_t v10 = 0xE200000000000000;
    uint64_t v9 = 19279;
  }
  unint64_t result = sub_10036C070(a1, a2, a3, a4);
  *a5 = v9;
  a5[1] = v10;
  a5[2] = a1;
  a5[3] = a2;
  a5[4] = a3;
  return result;
}

uint64_t sub_10036B9EC(uint64_t (*a1)(uint64_t))
{
  sub_1005E1C90();
  uint64_t v2 = __chkstk_darwin();
  uint64_t v3 = a1(v2);
  sub_1003925E8(v3 & 0xFFFFFFFF000000FFLL);
  sub_1005E1C70();
  sub_10000566C(&qword_1007132F8);
  sub_10036C014();
  uint64_t v4 = sub_1005E1C30();
  uint64_t v6 = v5;
  uint64_t result = swift_bridgeObjectRelease();
  if (v6) {
    return v4;
  }
  __break(1u);
  return result;
}

unint64_t sub_10036BACC()
{
  return (unint64_t)(*(uint64_t (**)(void))(v0 + 16))() >> 32;
}

uint64_t sub_10036BAF8()
{
  unsigned __int8 v1 = (*(uint64_t (**)(void))(v0 + 16))();
  return sub_1003694E4(v1);
}

uint64_t sub_10036BB30()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10036BB58()
{
  return sub_10036B120(*(uint64_t (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), (void (*)(void))type metadata accessor for LoggableCommand, (uint64_t (*)(uint64_t))LoggableCommand.makeDescriptionWithoutPII(), type metadata accessor for LoggableCommand);
}

uint64_t sub_10036BBB0()
{
  return sub_10036B120(*(uint64_t (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), (void (*)(void))type metadata accessor for UntaggedResponse, (uint64_t (*)(uint64_t))UntaggedResponse.makeDescriptionWithoutPII(), type metadata accessor for UntaggedResponse);
}

unint64_t sub_10036BC08(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    sub_10036BC50(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_10036BC50(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_10036BC64(result);
  }
  return result;
}

unint64_t sub_10036BC64(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10036BCE8(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_10036BCFC(result);
  }
  return result;
}

unint64_t sub_10036BCFC(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10036BD88()
{
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 32);
  if ((~v1 & 0xF000000000000007) != 0) {
    sub_10036BC64(v1);
  }
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 56, 7);
}

unint64_t sub_10036BDDC()
{
  unint64_t v1 = *(void *)(v0 + 32);
  sub_10036BCE8(v1);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10036BE24(uint64_t (*a1)(void))
{
  unint64_t v1 = a1();
  ResponseText.debugDescription.getter(v1);
  uint64_t v3 = v2;
  sub_10036BC50(v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_10036BE80()
{
  return sub_10036BE24(*(uint64_t (**)(void))(v0 + 16));
}

unint64_t sub_10036BE8C()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return (unint64_t)MailboxName.init(_:)((Swift::OpaquePointer)v0);
}

uint64_t sub_10036BEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  uint64_t v5 = (void (*)(void))__chkstk_darwin();
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5();
  uint64_t v8 = sub_1005E3230();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v8;
}

uint64_t sub_10036BFA8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10036BFE8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *a1 = *(void *)(v1 + 24);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10036BFF4()
{
  return sub_10036BEB8(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&type metadata for Character);
}

uint64_t sub_10036C00C()
{
  return sub_10036B9EC(*(uint64_t (**)(uint64_t))(v0 + 16));
}

unint64_t sub_10036C014()
{
  unint64_t result = qword_100713338;
  if (!qword_100713338)
  {
    sub_10000744C(&qword_1007132F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713338);
  }
  return result;
}

unint64_t sub_10036C070(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    sub_10036BCE8(result);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10036C0B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t EngineAccountMailboxLoggerID.account.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  return result;
}

IMAP2Persistence::EngineAndAccountLoggerID __swiftcall EngineAndAccountLoggerID.init(engine:account:)(IMAP2Tracing::EngineLoggerID engine, IMAP2Persistence::AccountLoggerID account)
{
  return (IMAP2Persistence::EngineAndAccountLoggerID)(engine.id.rawValue | (*(void *)&account.rawValue << 32));
}

char *sub_10036C160()
{
  unint64_t result = (char *)EngineTracingID.invalid.unsafeMutableAddressor();
  static ConnectionLoggerID.invalid = *result;
  dword_100762074 = -1;
  return result;
}

char *ConnectionLoggerID.invalid.unsafeMutableAddressor()
{
  if (qword_100712FA0 != -1) {
    swift_once();
  }
  return &static ConnectionLoggerID.invalid;
}

unint64_t static ConnectionLoggerID.invalid.getter()
{
  if (qword_100712FA0 != -1) {
    swift_once();
  }
  return static ConnectionLoggerID.invalid | ((unint64_t)dword_100762074 << 32);
}

void *initializeBufferWithCopyOfBuffer for Tag(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionLoggerID()
{
  return &type metadata for ConnectionLoggerID;
}

ValueMetadata *type metadata accessor for UnderlyingConnectionID()
{
  return &type metadata for UnderlyingConnectionID;
}

unint64_t MailboxMetadata.validity.getter()
{
  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

unint64_t MessageData.uid.getter()
{
  return *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
}

uint64_t MessageData.uid.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  *(unsigned char *)(v1 + 12) = BYTE4(result) & 1;
  return result;
}

uint64_t MessageData.body.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000079E4(v1 + 16, a1, &qword_100713030);
}

uint64_t MessageData.body.setter(uint64_t a1)
{
  return sub_10036C7E8(a1, v1 + 16, &qword_100713030);
}

uint64_t MessageData.bodySections.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MessageData.bodySections.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 200) = a1;
  return result;
}

Swift::UInt32 (__swiftcall *MessageData.bodySections.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t MessageData.bodyStructure.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000079E4(v1 + 208, a1, &qword_100713030);
}

uint64_t MessageData.bodyStructure.setter(uint64_t a1)
{
  return sub_10036C7E8(a1, v1 + 208, &qword_100713030);
}

Swift::UInt32 (__swiftcall *MessageData.bodyStructure.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t MessageData.envelope.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000079E4(v1 + 392, a1, &qword_100713358);
}

uint64_t MessageData.envelope.setter(uint64_t a1)
{
  return sub_10036C7E8(a1, v1 + 392, &qword_100713358);
}

Swift::UInt32 (__swiftcall *MessageData.envelope.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t MessageData.flags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MessageData.flags.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 512) = a1;
  return result;
}

Swift::UInt32 (__swiftcall *MessageData.flags.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t MessageData.gmailLabels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MessageData.gmailLabels.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 520) = a1;
  return result;
}

Swift::UInt32 (__swiftcall *MessageData.gmailLabels.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t MessageData.internalDate.getter()
{
  return *(void *)(v0 + 528);
}

uint64_t MessageData.internalDate.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 528) = result;
  *(unsigned char *)(v2 + 536) = a2 & 1;
  return result;
}

Swift::UInt32 (__swiftcall *MessageData.internalDate.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

unint64_t MessageData.messageSize.getter()
{
  return *(unsigned int *)(v0 + 540) | ((unint64_t)*(unsigned __int8 *)(v0 + 544) << 32);
}

uint64_t MessageData.messageSize.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 540) = result;
  *(unsigned char *)(v1 + 544) = BYTE4(result) & 1;
  return result;
}

Swift::UInt32 (__swiftcall *MessageData.messageSize.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t MessageData.modificationSequence.getter()
{
  return *(void *)(v0 + 552);
}

uint64_t MessageData.modificationSequence.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 552) = result;
  *(unsigned char *)(v2 + 560) = a2 & 1;
  return result;
}

Swift::UInt32 (__swiftcall *MessageData.modificationSequence.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t MessageData.preview.getter()
{
  uint64_t v1 = *(void *)(v0 + 568);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MessageData.preview.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 568) = a1;
  *(void *)(v2 + 576) = a2;
  return result;
}

Swift::UInt32 (__swiftcall *MessageData.preview.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t MessageData.BodySection.section.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  unsigned __int8 v3 = *((unsigned char *)v0 + 16);
  swift_bridgeObjectRetain();
  sub_10013B5CC(v2, v3);
  return v1;
}

uint64_t MessageData.BodySection.section.setter(uint64_t a1, uint64_t a2, char a3)
{
  swift_bridgeObjectRelease();
  uint64_t result = sub_10013B5E0(*(void *)(v3 + 8), *(unsigned char *)(v3 + 16));
  *(void *)uint64_t v3 = a1;
  *(void *)(v3 + 8) = a2;
  *(unsigned char *)(v3 + 16) = a3;
  return result;
}

unint64_t MessageData.BodySection.origin.getter()
{
  return *(unsigned int *)(v0 + 20) | ((unint64_t)*(unsigned __int8 *)(v0 + 24) << 32);
}

uint64_t MessageData.BodySection.origin.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 20) = result;
  *(unsigned char *)(v1 + 24) = BYTE4(result) & 1;
  return result;
}

Swift::UInt32 (__swiftcall *MessageData.BodySection.origin.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t MessageData.BodySection.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MessageData.BodySection();
  return sub_1000079E4(v1 + *(int *)(v3 + 24), a1, &qword_1007131E8);
}

uint64_t type metadata accessor for MessageData.BodySection()
{
  uint64_t result = qword_1007133D8;
  if (!qword_1007133D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t MessageData.BodySection.data.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MessageData.BodySection();
  return sub_10036C7E8(a1, v1 + *(int *)(v3 + 24), &qword_1007131E8);
}

uint64_t sub_10036C7E8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000566C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

Swift::UInt32 (__swiftcall *MessageData.BodySection.data.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t MessageData.BodySection.init(section:origin:data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = a6 + *(int *)(type metadata accessor for MessageData.BodySection() + 24);
  uint64_t v13 = type metadata accessor for MessageData.BodyData();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = a3;
  *(_DWORD *)(a6 + 20) = a4;
  *(unsigned char *)(a6 + 24) = BYTE4(a4) & 1;
  return sub_10036C7E8(a5, v12, &qword_1007131E8);
}

void *MessageData.init(sequenceNumber:uid:body:bodySections:bodyStructure:envelope:flags:gmailLabels:internalDate:messageSize:modificationSequence:preview:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, char a11, int a12, int a13, char a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18)
{
  sub_10001FDF0(a6, (uint64_t)v37, &qword_100713358);
  long long v30 = v37[1];
  long long v31 = v37[0];
  long long v28 = v37[3];
  long long v29 = v37[2];
  long long v26 = v37[5];
  long long v27 = v37[4];
  long long v25 = v37[6];
  uint64_t v23 = v38;
  sub_10001FDF0(a5, (uint64_t)v36, &qword_100713030);
  sub_10001FDF0((uint64_t)v36, (uint64_t)v39, &qword_100713030);
  sub_10001FDF0(a3, (uint64_t)v35, &qword_100713030);
  sub_10001FDF0((uint64_t)v35, (uint64_t)v40, &qword_100713030);
  LODWORD(__src[0]) = a1;
  BYTE4(__src[0]) = BYTE4(a1) & 1;
  LODWORD(__src[1]) = a2;
  BYTE4(__src[1]) = BYTE4(a2) & 1;
  sub_10001FDF0((uint64_t)v40, (uint64_t)&__src[2], &qword_100713030);
  __src[25] = a4;
  sub_10001FDF0((uint64_t)v39, (uint64_t)&__src[26], &qword_100713030);
  *(_OWORD *)&__src[49] = v31;
  *(_OWORD *)&__src[51] = v30;
  *(_OWORD *)&__src[53] = v29;
  *(_OWORD *)&__src[55] = v28;
  *(_OWORD *)&__src[57] = v27;
  *(_OWORD *)&__src[59] = v26;
  *(_OWORD *)&__src[61] = v25;
  __src[63] = v23;
  __src[64] = a7;
  __src[65] = a8;
  __src[66] = a10;
  LOBYTE(__src[67]) = a11 & 1;
  HIDWORD(__src[67]) = a13;
  LOBYTE(__src[68]) = a14 & 1;
  __src[69] = a15;
  LOBYTE(__src[70]) = a16 & 1;
  __src[71] = a17;
  __src[72] = a18;
  return memcpy(a9, __src, 0x248uLL);
}

uint64_t sub_10036CB64(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return _s13IMAP2Protocol11MessageDataV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v4, (uint64_t)__dst) & 1;
}

uint64_t sub_10036CBBC()
{
  uint64_t v0 = sub_10000566C(&qword_100713360);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1005E09E0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0A40();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10034E5B4(v9, qword_100713340);
  uint64_t v12 = sub_1003461B0(v7, (uint64_t)qword_100713340);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Calendar.Identifier.gregorian(_:), v3);
  sub_1005E09F0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1005E0AE0();
  uint64_t v13 = sub_1005E0B20();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v2, 1, v13);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1005E0A20();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v12, v11, v7);
  }
  return result;
}

uint64_t ServerMessageDate.date.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  sub_10000566C(&qword_100713360);
  __chkstk_darwin();
  uint64_t v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v6 = (char *)v27 - v5;
  sub_10000566C(&qword_100713368);
  __chkstk_darwin();
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005E0630();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v33 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005E0A40();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100712FD0);
  __chkstk_darwin();
  uint64_t v32 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100712FA8 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1003461B0(v12, (uint64_t)qword_100713340);
  unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  long long v31 = v15;
  v18(v15, v17, v12);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v8, 1, 1, v12);
  ServerMessageDate.components.getter(a1, (uint64_t)&v34);
  uint64_t result = 60 * v35;
  if ((unsigned __int128)(v35 * (__int128)60) >> 64 != (60 * v35) >> 63)
  {
    __break(1u);
    goto LABEL_8;
  }
  v27[0] = v12;
  v27[1] = v8;
  uint64_t v28 = v10;
  uint64_t v29 = v9;
  sub_1005E0B00();
  uint64_t v20 = sub_1005E0B20();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v4, 1, v20);
  if (result == 1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v6, v4, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v6, 0, 1, v20);
  ServerMessageDate.components.getter(a1, (uint64_t)&v36);
  ServerMessageDate.components.getter(a1, (uint64_t)&v37);
  ServerMessageDate.components.getter(a1, (uint64_t)&v38);
  ServerMessageDate.components.getter(a1, (uint64_t)v39);
  ServerMessageDate.components.getter(a1, (uint64_t)v40);
  ServerMessageDate.components.getter(a1, (uint64_t)v41);
  unsigned int v22 = v33;
  sub_1005E0610();
  uint64_t v23 = v31;
  uint64_t v24 = v32;
  sub_1005E0A10();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v29);
  (*(void (**)(char *, void))(v13 + 8))(v23, v27[0]);
  uint64_t v25 = sub_1005E0970();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v30, v24, v25);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t ServerMessageDate.init(_:)(char *a1)
{
  unint64_t v51 = a1;
  uint64_t v47 = sub_1005E0970();
  uint64_t v49 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v46 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10000566C(&qword_100713360);
  __chkstk_darwin(v2 - 8);
  int v48 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v4 = sub_1005E0A40();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1005E0630();
  uint64_t v44 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100712FA8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1003461B0(v4, (uint64_t)qword_100713340);
  (*(void (**)(char *, uint64_t, Swift::Int))(v5 + 16))(v7, v10, v4);
  sub_10000566C(&qword_100713370);
  Swift::Int v50 = v4;
  uint64_t v11 = sub_1005E0A30();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1005F6710;
  unint64_t v16 = v15 + v14;
  uint64_t v17 = *(void (**)(unint64_t, void, uint64_t))(v12 + 104);
  v17(v16, enum case for Calendar.Component.year(_:), v11);
  v17(v16 + v13, enum case for Calendar.Component.month(_:), v11);
  v17(v16 + 2 * v13, enum case for Calendar.Component.day(_:), v11);
  v17(v16 + 3 * v13, enum case for Calendar.Component.hour(_:), v11);
  v17(v16 + 4 * v13, enum case for Calendar.Component.minute(_:), v11);
  v17(v16 + 5 * v13, enum case for Calendar.Component.second(_:), v11);
  v17(v16 + 6 * v13, enum case for Calendar.Component.timeZone(_:), v11);
  sub_10036E79C(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1005E0A00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, Swift::Int))(v5 + 8))(v7, v50);
  uint64_t result = sub_1005E05C0();
  if (v19)
  {
    __break(1u);
    goto LABEL_13;
  }
  Swift::Int v20 = result;
  uint64_t result = sub_1005E05D0();
  if (v21)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  Swift::Int v22 = result;
  uint64_t result = sub_1005E05A0();
  uint64_t v23 = v49;
  uint64_t v24 = v48;
  if (v25)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  Swift::Int v26 = result;
  uint64_t result = sub_1005E05B0();
  if (v27)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  Swift::Int v28 = result;
  uint64_t result = sub_1005E05E0();
  if (v29)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  Swift::Int v30 = result;
  uint64_t result = sub_1005E05F0();
  if (v31)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  Swift::Int v41 = result;
  Swift::Int v42 = v30;
  Swift::Int v43 = v28;
  Swift::Int v50 = v26;
  sub_1005E0620();
  uint64_t v32 = sub_1005E0B20();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v24, 1, v32);
  if (result == 1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v34 = v46;
  sub_1005E0960();
  uint64_t v35 = sub_1005E0AF0();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v23 + 8);
  uint64_t v37 = v34;
  uint64_t v38 = v47;
  v36(v37, v47);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v32);
  ServerMessageDate.Components.init(year:month:day:hour:minute:second:timeZoneMinutes:)(&v52, v20, v22, v50, v43, v42, v41, v35 / 60);
  uint64_t result = sub_10001FDF0((uint64_t)&v52, (uint64_t)&v53, &qword_100713378);
  if ((v54 & 1) == 0)
  {
    NIOIMAPCore2::ServerMessageDate::Components v55 = v53;
    Swift::UInt64 rawValue = ServerMessageDate.init(_:)(&v55).rawValue;
    v36(v51, v38);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v45);
    return rawValue;
  }
LABEL_19:
  __break(1u);
  return result;
}

BOOL _s13IMAP2Protocol11MessageDataV11BodySectionV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageData.BodyData();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_1007131F0);
  __chkstk_darwin();
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_1007131E8);
  __chkstk_darwin();
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v14 = (char *)v27 - v13;
  __chkstk_darwin();
  unint64_t v16 = (char *)v27 - v15;
  if (!static SectionSpecifier.__derived_struct_equals(_:_:)(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void **)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16)))return 0; {
  char v17 = *(unsigned char *)(a2 + 24);
  }
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a1 + 20) != *(_DWORD *)(a2 + 20)) {
      char v17 = 1;
    }
    if (v17) {
      return 0;
    }
  }
  v27[0] = (uint64_t)v7;
  uint64_t v18 = type metadata accessor for MessageData.BodySection();
  sub_1000079E4(a1 + *(int *)(v18 + 24), (uint64_t)v16, &qword_1007131E8);
  sub_1000079E4(a2 + *(int *)(v18 + 24), (uint64_t)v14, &qword_1007131E8);
  uint64_t v19 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1000079E4((uint64_t)v16, (uint64_t)v10, &qword_1007131E8);
  sub_1000079E4((uint64_t)v14, v19, &qword_1007131E8);
  Swift::Int v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v10, 1, v4) == 1)
  {
    sub_100007A48((uint64_t)v14, &qword_1007131E8);
    sub_100007A48((uint64_t)v16, &qword_1007131E8);
    if (v20(v19, 1, v4) == 1)
    {
      uint64_t v21 = (uint64_t)v10;
      goto LABEL_17;
    }
    Swift::Int v22 = &qword_1007131F0;
  }
  else
  {
    sub_1000079E4((uint64_t)v10, (uint64_t)v12, &qword_1007131E8);
    if (v20(v19, 1, v4) == 1)
    {
      Swift::Int v22 = &qword_1007131F0;
    }
    else
    {
      uint64_t v23 = v27[0];
      sub_100370E70(v19, v27[0]);
      uint64_t v24 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      if (v24 == _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0())
      {
        sub_1005E17E0();
        sub_100370ED4((unint64_t *)&qword_1007131F8, (void (*)(uint64_t))&type metadata accessor for DispatchData);
        sub_1005E2390();
        sub_1005E23E0();
        if (v28 != v27[2])
        {
          __chkstk_darwin();
          v27[-2] = v23;
          v27[-1] = (uint64_t)v12;
          sub_1005E1760();
          char v26 = v28;
          sub_1003705EC(v23);
          sub_100007A48((uint64_t)v14, &qword_1007131E8);
          sub_100007A48((uint64_t)v16, &qword_1007131E8);
          sub_1003705EC((uint64_t)v12);
          sub_100007A48((uint64_t)v10, &qword_1007131E8);
          return (v26 & 1) != 0;
        }
        sub_1003705EC(v23);
        sub_100007A48((uint64_t)v14, &qword_1007131E8);
        sub_100007A48((uint64_t)v16, &qword_1007131E8);
        sub_1003705EC((uint64_t)v12);
        uint64_t v21 = (uint64_t)v10;
LABEL_17:
        sub_100007A48(v21, &qword_1007131E8);
        return 1;
      }
      sub_1003705EC(v23);
      Swift::Int v22 = &qword_1007131E8;
    }
    sub_100007A48((uint64_t)v14, &qword_1007131E8);
    sub_100007A48((uint64_t)v16, &qword_1007131E8);
    sub_1003705EC((uint64_t)v12);
  }
  sub_100007A48((uint64_t)v10, v22);
  return 0;
}

uint64_t _s13IMAP2Protocol11MessageDataV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 4);
  if (*(unsigned char *)(a1 + 4))
  {
    if (!*(unsigned char *)(a2 + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)a2 != *(_DWORD *)a1) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  char v5 = *(unsigned char *)(a2 + 12);
  if (*(unsigned char *)(a1 + 12))
  {
    if (!*(unsigned char *)(a2 + 12)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a2 + 8) != *(_DWORD *)(a1 + 8)) {
      char v5 = 1;
    }
    if (v5) {
      return 0;
    }
  }
  sub_10001FDF0(a1 + 16, (uint64_t)v104, &qword_100713030);
  sub_10001FDF0(a2 + 16, (uint64_t)v105, &qword_100713030);
  sub_10001FDF0((uint64_t)v104, (uint64_t)v106, &qword_100713030);
  if (sub_10006196C((uint64_t)v106) == 1)
  {
    sub_10001FDF0((uint64_t)v105, (uint64_t)&v80, &qword_100713030);
    if (sub_10006196C((uint64_t)&v80) == 1) {
      goto LABEL_20;
    }
LABEL_17:
    sub_10001FDF0((uint64_t)v104, (uint64_t)&v80, &qword_100713030);
    sub_10001FDF0((uint64_t)v105, (uint64_t)v103, &qword_100713030);
    sub_100370DFC((uint64_t)v104, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AAE4);
    uint64_t v6 = v105;
LABEL_18:
    sub_100370DFC((uint64_t)v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AAE4);
    sub_100370BF0((uint64_t)&v80);
    return 0;
  }
  sub_10001FDF0((uint64_t)v105, (uint64_t)&v80, &qword_100713030);
  if (sub_10006196C((uint64_t)&v80) == 1) {
    goto LABEL_17;
  }
  sub_10001FDF0((uint64_t)v104, (uint64_t)v107, &qword_100713030);
  sub_10013A988((uint64_t)v107, (uint64_t)v109);
  sub_10001FDF0((uint64_t)v105, (uint64_t)v108, &qword_100713030);
  sub_10013A988((uint64_t)v108, (uint64_t)v110);
  sub_100370DFC((uint64_t)v104, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AAE4);
  sub_100370DFC((uint64_t)v105, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AAE4);
  char v7 = static MessageAttribute.BodyStructure.__derived_enum_equals(_:_:)(v109, v110);
  sub_100370DFC((uint64_t)v105, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10006133C);
  sub_100370DFC((uint64_t)v104, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10006133C);
  if ((v7 & 1) == 0) {
    return 0;
  }
LABEL_20:
  if ((sub_10035D478(*(void *)(a1 + 200), *(void *)(a2 + 200)) & 1) == 0) {
    return 0;
  }
  sub_10001FDF0(a1 + 208, (uint64_t)v77, &qword_100713030);
  sub_10001FDF0(a2 + 208, (uint64_t)v78, &qword_100713030);
  sub_10001FDF0((uint64_t)v77, (uint64_t)v79, &qword_100713030);
  if (sub_10006196C((uint64_t)v79) == 1)
  {
    sub_10001FDF0((uint64_t)v78, (uint64_t)&v80, &qword_100713030);
    if (sub_10006196C((uint64_t)&v80) == 1) {
      goto LABEL_27;
    }
    goto LABEL_25;
  }
  sub_10001FDF0((uint64_t)v78, (uint64_t)&v80, &qword_100713030);
  if (sub_10006196C((uint64_t)&v80) == 1)
  {
LABEL_25:
    sub_10001FDF0((uint64_t)v77, (uint64_t)&v80, &qword_100713030);
    sub_10001FDF0((uint64_t)v78, (uint64_t)v103, &qword_100713030);
    sub_100370DFC((uint64_t)v77, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AAE4);
    uint64_t v6 = v78;
    goto LABEL_18;
  }
  sub_10001FDF0((uint64_t)v77, (uint64_t)v62, &qword_100713030);
  sub_10013A988((uint64_t)v62, (uint64_t)v107);
  sub_10001FDF0((uint64_t)v78, (uint64_t)v63, &qword_100713030);
  sub_10013A988((uint64_t)v63, (uint64_t)v108);
  sub_100370DFC((uint64_t)v77, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AAE4);
  sub_100370DFC((uint64_t)v78, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AAE4);
  char v8 = static MessageAttribute.BodyStructure.__derived_enum_equals(_:_:)(v107, v108);
  sub_100370DFC((uint64_t)v78, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10006133C);
  sub_100370DFC((uint64_t)v77, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10006133C);
  if ((v8 & 1) == 0) {
    return 0;
  }
LABEL_27:
  uint64_t result = *(void *)(a1 + 392);
  uint64_t v10 = *(void *)(a1 + 400);
  uint64_t v11 = *(void *)(a1 + 408);
  uint64_t v12 = *(void *)(a1 + 416);
  uint64_t v13 = *(void *)(a1 + 424);
  uint64_t v14 = *(void *)(a1 + 432);
  uint64_t v15 = *(void *)(a1 + 440);
  uint64_t v16 = *(void *)(a1 + 448);
  uint64_t v17 = *(void *)(a1 + 456);
  uint64_t v18 = *(void *)(a1 + 464);
  uint64_t v19 = *(void *)(a1 + 472);
  uint64_t v20 = *(void *)(a1 + 480);
  uint64_t v22 = *(void *)(a1 + 488);
  uint64_t v21 = *(void *)(a1 + 496);
  uint64_t v23 = *(void *)(a1 + 504);
  uint64_t v24 = *(void *)(a2 + 392);
  uint64_t v25 = *(void *)(a2 + 400);
  uint64_t v26 = *(void *)(a2 + 408);
  uint64_t v27 = *(void *)(a2 + 416);
  uint64_t v29 = *(void *)(a2 + 424);
  uint64_t v28 = *(void *)(a2 + 432);
  uint64_t v30 = *(void *)(a2 + 440);
  uint64_t v31 = *(void *)(a2 + 448);
  uint64_t v32 = *(void *)(a2 + 456);
  uint64_t v57 = *(void *)(a2 + 464);
  uint64_t v58 = *(void *)(a2 + 472);
  uint64_t v33 = *(void *)(a2 + 480);
  uint64_t v60 = *(void *)(a2 + 496);
  uint64_t v61 = *(void *)(a2 + 488);
  uint64_t v59 = *(void *)(a2 + 504);
  if (!v14)
  {
    if (!v28) {
      goto LABEL_34;
    }
LABEL_32:
    uint64_t v80 = *(void *)(a1 + 392);
    uint64_t v81 = v10;
    uint64_t v82 = v11;
    uint64_t v83 = v12;
    uint64_t v84 = v13;
    uint64_t v85 = v14;
    uint64_t v86 = v15;
    uint64_t v87 = v16;
    uint64_t v88 = v17;
    uint64_t v89 = v18;
    uint64_t v90 = v19;
    uint64_t v91 = v20;
    uint64_t v92 = v22;
    uint64_t v93 = v21;
    uint64_t v94 = v23;
    uint64_t v95 = v24;
    uint64_t v96 = v25;
    uint64_t v97 = v26;
    uint64_t v98 = v27;
    uint64_t v99 = v29;
    uint64_t v100 = v28;
    uint64_t v101 = v30;
    uint64_t v102 = v31;
    v103[0] = v32;
    v103[1] = v57;
    v103[2] = v58;
    v103[3] = v33;
    v103[4] = v61;
    v103[5] = v60;
    v103[6] = v59;
    uint64_t v35 = v26;
    sub_10019EC70(result, v10, v11, v12, v13, v14);
    sub_10019EC70(v24, v25, v35, v27, v29, v28);
    sub_100370D1C(&v80);
    return 0;
  }
  if (!v28) {
    goto LABEL_32;
  }
  v63[0] = *(void *)(a1 + 392);
  v63[1] = v10;
  v63[2] = v11;
  v63[3] = v12;
  int v64 = v13;
  char v66 = BYTE6(v13);
  __int16 v65 = WORD2(v13);
  uint64_t v55 = v14;
  uint64_t v67 = v14;
  uint64_t v68 = v15;
  uint64_t v69 = v16;
  uint64_t v70 = v17;
  uint64_t v71 = v18;
  uint64_t v72 = v19;
  uint64_t v73 = v20;
  uint64_t v74 = v22;
  uint64_t v75 = v21;
  uint64_t v76 = v23;
  uint64_t v56 = v24;
  uint64_t v80 = v24;
  uint64_t v81 = v25;
  uint64_t v34 = v26;
  uint64_t v82 = v26;
  uint64_t v83 = v27;
  LODWORD(v84) = v29;
  BYTE6(v84) = BYTE6(v29);
  WORD2(v84) = WORD2(v29);
  uint64_t v85 = v28;
  uint64_t v86 = v30;
  uint64_t v87 = v31;
  uint64_t v88 = v32;
  uint64_t v89 = v57;
  uint64_t v90 = v58;
  uint64_t v91 = v33;
  uint64_t v92 = v61;
  uint64_t v93 = v60;
  uint64_t v94 = v59;
  uint64_t v51 = result;
  uint64_t v52 = v10;
  uint64_t v53 = v11;
  uint64_t v54 = v12;
  uint64_t v50 = v13;
  uint64_t v48 = v26;
  sub_10019EC70(result, v10, v11, v12, v13, v14);
  sub_10019EC70(v56, v25, v34, v27, v29, v28);
  BOOL v49 = static Envelope.__derived_struct_equals(_:_:)(v63, (uint64_t)&v80);
  sub_1000618AC(v56, v25, v48, v27, v29, v28);
  uint64_t result = sub_1000618AC(v51, v52, v53, v54, v50, v55);
  if (!v49) {
    return 0;
  }
LABEL_34:
  uint64_t v36 = *(void *)(a2 + 512);
  if (*(void *)(a1 + 512))
  {
    if (!v36) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v37 = swift_bridgeObjectRetain();
    char v38 = sub_100013AB4(v37, v36);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v38 & 1) == 0) {
      return 0;
    }
  }
  else if (v36)
  {
    return 0;
  }
  uint64_t v39 = *(void *)(a2 + 520);
  if (*(void *)(a1 + 520))
  {
    if (!v39) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v40 = swift_bridgeObjectRetain();
    char v41 = sub_100013754(v40, v39);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v41 & 1) == 0) {
      return 0;
    }
  }
  else if (v39)
  {
    return 0;
  }
  char v42 = *(unsigned char *)(a2 + 536);
  if (*(unsigned char *)(a1 + 536))
  {
    if (!*(unsigned char *)(a2 + 536)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 528) != *(void *)(a2 + 528)) {
      char v42 = 1;
    }
    if (v42) {
      return 0;
    }
  }
  char v43 = *(unsigned char *)(a2 + 544);
  if (*(unsigned char *)(a1 + 544))
  {
    if (!*(unsigned char *)(a2 + 544)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a1 + 540) != *(_DWORD *)(a2 + 540)) {
      char v43 = 1;
    }
    if (v43) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 560))
  {
    if ((*(unsigned char *)(a2 + 560) & 1) == 0) {
      return 0;
    }
    goto LABEL_62;
  }
  if (*(unsigned char *)(a2 + 560)) {
    return 0;
  }
  uint64_t v44 = *(void *)(a1 + 552);
  uint64_t v45 = *(void *)(a2 + 552);
  if (((v45 | v44) & 0x8000000000000000) == 0)
  {
    if (v45 != v44) {
      return 0;
    }
LABEL_62:
    uint64_t v46 = *(void *)(a1 + 576);
    uint64_t v47 = *(void *)(a2 + 576);
    if (v46) {
      return v47 && (*(void *)(a1 + 568) == *(void *)(a2 + 568) && v46 == v47 || (sub_1005E3290() & 1) != 0);
    }
    return !v47;
  }
  __break(1u);
  return result;
}

void *sub_10036E79C(uint64_t a1)
{
  uint64_t v2 = sub_1005E0A30();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_10000566C(&qword_100713420);
    uint64_t v9 = sub_1005E2C30();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_100370ED4(&qword_100713428, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t v16 = sub_1005E19B0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_100370ED4(&qword_100713430, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
          char v23 = sub_1005E1BC0();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t initializeWithCopy for MessageData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  int v4 = *(unsigned __int8 *)(a2 + 192);
  if (v4 == 254 || v4 == 255)
  {
    long long v5 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v5;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    long long v6 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v6;
    long long v7 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v7;
    long long v8 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v8;
    long long v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
  }
  else
  {
    char v75 = v4 & 1;
    uint64_t v10 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v47 = *(void *)(a2 + 80);
    uint64_t v49 = *(void *)(a2 + 88);
    uint64_t v51 = *(void *)(a2 + 96);
    uint64_t v53 = *(void *)(a2 + 104);
    uint64_t v55 = *(void *)(a2 + 112);
    uint64_t v57 = *(void *)(a2 + 120);
    uint64_t v59 = *(void *)(a2 + 128);
    uint64_t v61 = *(void *)(a2 + 136);
    uint64_t v63 = *(void *)(a2 + 144);
    uint64_t v65 = *(void *)(a2 + 152);
    uint64_t v67 = *(void *)(a2 + 160);
    uint64_t v69 = *(void *)(a2 + 168);
    uint64_t v71 = *(void *)(a2 + 176);
    uint64_t v73 = *(void *)(a2 + 184);
    uint64_t v13 = *(void *)(a2 + 16);
    uint64_t v14 = *(void *)(a2 + 24);
    uint64_t v15 = *(void *)(a2 + 32);
    uint64_t v16 = *(void *)(a2 + 40);
    uint64_t v17 = *(void *)(a2 + 72);
    sub_100136870(v13, v14, v15, v16, v10, v11, v12, v17, v47, v49, v51, v53, v55, v57, v59, v61, v63, v65, v67,
      v69,
      v71,
      v73,
      v4 & 1);
    *(void *)(a1 + 16) = v13;
    *(void *)(a1 + 24) = v14;
    *(void *)(a1 + 32) = v15;
    *(void *)(a1 + 40) = v16;
    *(void *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    *(void *)(a1 + 72) = v17;
    *(void *)(a1 + 80) = v47;
    *(void *)(a1 + 88) = v49;
    *(void *)(a1 + 96) = v51;
    *(void *)(a1 + 104) = v53;
    *(void *)(a1 + 112) = v55;
    *(void *)(a1 + 120) = v57;
    *(void *)(a1 + 128) = v59;
    *(void *)(a1 + 136) = v61;
    *(void *)(a1 + 144) = v63;
    *(void *)(a1 + 152) = v65;
    *(void *)(a1 + 160) = v67;
    *(void *)(a1 + 168) = v69;
    *(void *)(a1 + 176) = v71;
    *(void *)(a1 + 184) = v73;
    *(unsigned char *)(a1 + 192) = v75;
  }
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  int v18 = *(unsigned __int8 *)(a2 + 384);
  swift_bridgeObjectRetain();
  if (v18 == 254 || v18 == 255)
  {
    long long v19 = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 352) = v19;
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
    long long v20 = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = v20;
    long long v21 = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 320) = v21;
    long long v22 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v22;
    long long v23 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v23;
  }
  else
  {
    char v76 = v18 & 1;
    uint64_t v24 = *(void *)(a2 + 240);
    uint64_t v25 = *(void *)(a2 + 248);
    uint64_t v26 = *(void *)(a2 + 256);
    uint64_t v48 = *(void *)(a2 + 272);
    uint64_t v50 = *(void *)(a2 + 280);
    uint64_t v52 = *(void *)(a2 + 288);
    uint64_t v54 = *(void *)(a2 + 296);
    uint64_t v56 = *(void *)(a2 + 304);
    uint64_t v58 = *(void *)(a2 + 312);
    uint64_t v60 = *(void *)(a2 + 320);
    uint64_t v62 = *(void *)(a2 + 328);
    uint64_t v64 = *(void *)(a2 + 336);
    uint64_t v66 = *(void *)(a2 + 344);
    uint64_t v68 = *(void *)(a2 + 352);
    uint64_t v70 = *(void *)(a2 + 360);
    uint64_t v72 = *(void *)(a2 + 368);
    uint64_t v74 = *(void *)(a2 + 376);
    char v46 = v18 & 1;
    uint64_t v27 = *(void *)(a2 + 208);
    uint64_t v28 = *(void *)(a2 + 216);
    uint64_t v29 = *(void *)(a2 + 224);
    uint64_t v30 = *(void *)(a2 + 232);
    uint64_t v31 = *(void *)(a2 + 264);
    sub_100136870(v27, v28, v29, v30, v24, v25, v26, v31, v48, v50, v52, v54, v56, v58, v60, v62, v64, v66, v68,
      v70,
      v72,
      v74,
      v46);
    *(void *)(a1 + 208) = v27;
    *(void *)(a1 + 216) = v28;
    *(void *)(a1 + 224) = v29;
    *(void *)(a1 + 232) = v30;
    *(void *)(a1 + 240) = v24;
    *(void *)(a1 + 248) = v25;
    *(void *)(a1 + 256) = v26;
    *(void *)(a1 + 264) = v31;
    *(void *)(a1 + 272) = v48;
    *(void *)(a1 + 280) = v50;
    *(void *)(a1 + 288) = v52;
    *(void *)(a1 + 296) = v54;
    *(void *)(a1 + 304) = v56;
    *(void *)(a1 + 312) = v58;
    *(void *)(a1 + 320) = v60;
    *(void *)(a1 + 328) = v62;
    *(void *)(a1 + 336) = v64;
    *(void *)(a1 + 344) = v66;
    *(void *)(a1 + 352) = v68;
    *(void *)(a1 + 360) = v70;
    *(void *)(a1 + 368) = v72;
    *(void *)(a1 + 376) = v74;
    *(unsigned char *)(a1 + 384) = v76;
  }
  uint64_t v32 = *(void *)(a2 + 432);
  if (v32)
  {
    uint64_t v33 = *(void *)(a2 + 400);
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    *(void *)(a1 + 400) = v33;
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    *(_DWORD *)(a1 + 424) = *(_DWORD *)(a2 + 424);
    *(_DWORD *)(a1 + 427) = *(_DWORD *)(a2 + 427);
    uint64_t v34 = *(void *)(a2 + 440);
    uint64_t v35 = *(void *)(a2 + 448);
    *(void *)(a1 + 432) = v32;
    *(void *)(a1 + 440) = v34;
    uint64_t v36 = *(void *)(a2 + 456);
    uint64_t v37 = *(void *)(a2 + 464);
    *(void *)(a1 + 448) = v35;
    *(void *)(a1 + 456) = v36;
    uint64_t v39 = *(void *)(a2 + 472);
    uint64_t v38 = *(void *)(a2 + 480);
    *(void *)(a1 + 464) = v37;
    *(void *)(a1 + 472) = v39;
    uint64_t v41 = *(void *)(a2 + 488);
    uint64_t v40 = *(void *)(a2 + 496);
    *(void *)(a1 + 480) = v38;
    *(void *)(a1 + 488) = v41;
    uint64_t v77 = *(void *)(a2 + 504);
    *(void *)(a1 + 496) = v40;
    *(void *)(a1 + 504) = v77;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v42 = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 472) = v42;
    *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
    *(void *)(a1 + 504) = *(void *)(a2 + 504);
    long long v43 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v43;
    long long v44 = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 440) = v44;
  }
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
  *(_DWORD *)(a1 + 540) = *(_DWORD *)(a2 + 540);
  *(unsigned char *)(a1 + 544) = *(unsigned char *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessageData(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v4;
  LOBYTE(v4) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = a2[2];
  *(unsigned char *)(a1 + 12) = v4;
  uint64_t v5 = a1 + 16;
  long long v6 = (long long *)(a2 + 4);
  int v7 = *(unsigned __int8 *)(a1 + 192);
  int v8 = *((unsigned __int8 *)a2 + 192);
  if (v7 == 254)
  {
    if (v8 == 254) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  if (v8 == 254)
  {
    sub_1001373B8(a1 + 16);
    goto LABEL_12;
  }
  if (v7 != 255)
  {
    if (v8 != 255)
    {
      char v192 = v8 & 1;
      uint64_t v84 = *((void *)a2 + 6);
      uint64_t v85 = *((void *)a2 + 7);
      uint64_t v86 = *((void *)a2 + 8);
      uint64_t v137 = *((void *)a2 + 10);
      uint64_t v141 = *((void *)a2 + 11);
      uint64_t v145 = *((void *)a2 + 12);
      uint64_t v149 = *((void *)a2 + 13);
      uint64_t v153 = *((void *)a2 + 14);
      uint64_t v157 = *((void *)a2 + 15);
      uint64_t v161 = *((void *)a2 + 16);
      uint64_t v165 = *((void *)a2 + 17);
      uint64_t v169 = *((void *)a2 + 18);
      uint64_t v173 = *((void *)a2 + 19);
      uint64_t v177 = *((void *)a2 + 20);
      uint64_t v181 = *((void *)a2 + 21);
      uint64_t v185 = *((void *)a2 + 22);
      uint64_t v189 = *((void *)a2 + 23);
      uint64_t v87 = *((void *)a2 + 2);
      uint64_t v88 = *((void *)a2 + 3);
      uint64_t v89 = *((void *)a2 + 4);
      uint64_t v90 = *((void *)a2 + 5);
      uint64_t v91 = *((void *)a2 + 9);
      sub_100136870(v87, v88, v89, v90, v84, v85, v86, v91, v137, v141, v145, v149, v153, v157, v161, v165, v169, v173, v177,
        v181,
        v185,
        v189,
        v8 & 1);
      uint64_t v92 = *(void *)(a1 + 16);
      uint64_t v93 = *(void *)(a1 + 24);
      *(void *)(a1 + 16) = v87;
      *(void *)(a1 + 24) = v88;
      uint64_t v94 = *(void *)(a1 + 32);
      uint64_t v95 = *(void *)(a1 + 40);
      *(void *)(a1 + 32) = v89;
      *(void *)(a1 + 40) = v90;
      uint64_t v96 = *(void *)(a1 + 48);
      uint64_t v97 = *(void *)(a1 + 56);
      *(void *)(a1 + 48) = v84;
      *(void *)(a1 + 56) = v85;
      uint64_t v98 = *(void *)(a1 + 64);
      uint64_t v99 = *(void *)(a1 + 72);
      *(void *)(a1 + 64) = v86;
      *(void *)(a1 + 72) = v91;
      long long v100 = *(_OWORD *)(a1 + 80);
      long long v101 = *(_OWORD *)(a1 + 96);
      *(void *)(a1 + 80) = v137;
      *(void *)(a1 + 88) = v141;
      *(void *)(a1 + 96) = v145;
      *(void *)(a1 + 104) = v149;
      long long v102 = *(_OWORD *)(a1 + 112);
      long long v103 = *(_OWORD *)(a1 + 128);
      *(void *)(a1 + 112) = v153;
      *(void *)(a1 + 120) = v157;
      *(void *)(a1 + 128) = v161;
      *(void *)(a1 + 136) = v165;
      long long v104 = *(_OWORD *)(a1 + 144);
      long long v105 = *(_OWORD *)(a1 + 160);
      *(void *)(a1 + 144) = v169;
      *(void *)(a1 + 152) = v173;
      *(void *)(a1 + 160) = v177;
      *(void *)(a1 + 168) = v181;
      uint64_t v106 = *(void *)(a1 + 176);
      uint64_t v107 = *(void *)(a1 + 184);
      *(void *)(a1 + 176) = v185;
      *(void *)(a1 + 184) = v189;
      char v108 = *(unsigned char *)(a1 + 192);
      *(unsigned char *)(a1 + 192) = v192;
      sub_100061440(v92, v93, v94, v95, v96, v97, v98, v99, v100, *((uint64_t *)&v100 + 1), v101, *((uint64_t *)&v101 + 1), v102, *((uint64_t *)&v102 + 1), v103, *((uint64_t *)&v103 + 1), v104, *((uint64_t *)&v104 + 1), v105,
        *((uint64_t *)&v105 + 1),
        v106,
        v107,
        v108);
      goto LABEL_13;
    }
    sub_100137364(a1 + 16);
LABEL_12:
    long long v26 = v6[3];
    long long v28 = *v6;
    long long v27 = v6[1];
    *(_OWORD *)(v5 + 32) = v6[2];
    *(_OWORD *)(v5 + 48) = v26;
    *(_OWORD *)uint64_t v5 = v28;
    *(_OWORD *)(v5 + 16) = v27;
    long long v29 = v6[7];
    long long v31 = v6[4];
    long long v30 = v6[5];
    *(_OWORD *)(v5 + 96) = v6[6];
    *(_OWORD *)(v5 + 112) = v29;
    *(_OWORD *)(v5 + 64) = v31;
    *(_OWORD *)(v5 + 80) = v30;
    long long v33 = v6[9];
    long long v32 = v6[10];
    long long v34 = v6[8];
    *(unsigned char *)(v5 + 176) = *((unsigned char *)v6 + 176);
    *(_OWORD *)(v5 + 144) = v33;
    *(_OWORD *)(v5 + 160) = v32;
    *(_OWORD *)(v5 + 128) = v34;
    goto LABEL_13;
  }
LABEL_7:
  if (v8 == 255)
  {
LABEL_8:
    long long v9 = *v6;
    long long v10 = *((_OWORD *)a2 + 2);
    long long v11 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v11;
    *(_OWORD *)uint64_t v5 = v9;
    *(_OWORD *)(a1 + 32) = v10;
    long long v12 = *((_OWORD *)a2 + 5);
    long long v13 = *((_OWORD *)a2 + 6);
    long long v14 = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 128) = v14;
    *(_OWORD *)(a1 + 80) = v12;
    *(_OWORD *)(a1 + 96) = v13;
    long long v15 = *((_OWORD *)a2 + 9);
    long long v16 = *((_OWORD *)a2 + 10);
    long long v17 = *((_OWORD *)a2 + 11);
    *(unsigned char *)(a1 + 192) = *((unsigned char *)a2 + 192);
    *(_OWORD *)(a1 + 160) = v16;
    *(_OWORD *)(a1 + 176) = v17;
    *(_OWORD *)(a1 + 144) = v15;
    goto LABEL_13;
  }
  char v191 = v8 & 1;
  uint64_t v18 = *((void *)a2 + 6);
  uint64_t v19 = *((void *)a2 + 7);
  uint64_t v20 = *((void *)a2 + 8);
  uint64_t v135 = *((void *)a2 + 10);
  uint64_t v139 = *((void *)a2 + 11);
  uint64_t v143 = *((void *)a2 + 12);
  uint64_t v147 = *((void *)a2 + 13);
  uint64_t v151 = *((void *)a2 + 14);
  uint64_t v155 = *((void *)a2 + 15);
  uint64_t v159 = *((void *)a2 + 16);
  uint64_t v163 = *((void *)a2 + 17);
  uint64_t v167 = *((void *)a2 + 18);
  uint64_t v171 = *((void *)a2 + 19);
  uint64_t v175 = *((void *)a2 + 20);
  uint64_t v179 = *((void *)a2 + 21);
  uint64_t v183 = *((void *)a2 + 22);
  uint64_t v187 = *((void *)a2 + 23);
  uint64_t v21 = *((void *)a2 + 2);
  uint64_t v22 = *((void *)a2 + 3);
  uint64_t v23 = *((void *)a2 + 4);
  uint64_t v24 = *((void *)a2 + 5);
  uint64_t v25 = *((void *)a2 + 9);
  sub_100136870(v21, v22, v23, v24, v18, v19, v20, v25, v135, v139, v143, v147, v151, v155, v159, v163, v167, v171, v175,
    v179,
    v183,
    v187,
    v8 & 1);
  *(void *)(a1 + 16) = v21;
  *(void *)(a1 + 24) = v22;
  *(void *)(a1 + 32) = v23;
  *(void *)(a1 + 40) = v24;
  *(void *)(a1 + 48) = v18;
  *(void *)(a1 + 56) = v19;
  *(void *)(a1 + 64) = v20;
  *(void *)(a1 + 72) = v25;
  *(void *)(a1 + 80) = v135;
  *(void *)(a1 + 88) = v139;
  *(void *)(a1 + 96) = v143;
  *(void *)(a1 + 104) = v147;
  *(void *)(a1 + 112) = v151;
  *(void *)(a1 + 120) = v155;
  *(void *)(a1 + 128) = v159;
  *(void *)(a1 + 136) = v163;
  *(void *)(a1 + 144) = v167;
  *(void *)(a1 + 152) = v171;
  *(void *)(a1 + 160) = v175;
  *(void *)(a1 + 168) = v179;
  *(void *)(a1 + 176) = v183;
  *(void *)(a1 + 184) = v187;
  *(unsigned char *)(a1 + 192) = v191;
LABEL_13:
  *(void *)(a1 + 200) = *((void *)a2 + 25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = (_OWORD *)(a1 + 208);
  uint64_t v36 = (long long *)(a2 + 52);
  int v37 = *(unsigned __int8 *)(a1 + 384);
  int v38 = *((unsigned __int8 *)a2 + 384);
  if (v37 == 254)
  {
    if (v38 == 254) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v38 == 254)
  {
    sub_1001373B8(a1 + 208);
    goto LABEL_24;
  }
  if (v37 != 255)
  {
    if (v38 != 255)
    {
      char v190 = v38 & 1;
      uint64_t v109 = *((void *)a2 + 31);
      uint64_t v110 = *((void *)a2 + 32);
      uint64_t v134 = *((void *)a2 + 33);
      uint64_t v138 = *((void *)a2 + 34);
      uint64_t v142 = *((void *)a2 + 35);
      uint64_t v146 = *((void *)a2 + 36);
      uint64_t v150 = *((void *)a2 + 37);
      uint64_t v154 = *((void *)a2 + 38);
      uint64_t v158 = *((void *)a2 + 39);
      uint64_t v162 = *((void *)a2 + 40);
      uint64_t v166 = *((void *)a2 + 41);
      uint64_t v170 = *((void *)a2 + 42);
      uint64_t v174 = *((void *)a2 + 43);
      uint64_t v178 = *((void *)a2 + 44);
      uint64_t v182 = *((void *)a2 + 45);
      uint64_t v186 = *((void *)a2 + 46);
      uint64_t v193 = *((void *)a2 + 47);
      uint64_t v111 = *((void *)a2 + 26);
      uint64_t v112 = *((void *)a2 + 27);
      uint64_t v113 = *((void *)a2 + 28);
      uint64_t v114 = *((void *)a2 + 29);
      uint64_t v115 = *((void *)a2 + 30);
      sub_100136870(v111, v112, v113, v114, v115, v109, v110, v134, v138, v142, v146, v150, v154, v158, v162, v166, v170, v174, v178,
        v182,
        v186,
        v193,
        v38 & 1);
      uint64_t v116 = *(void *)(a1 + 208);
      uint64_t v117 = *(void *)(a1 + 216);
      *(void *)(a1 + 208) = v111;
      *(void *)(a1 + 216) = v112;
      uint64_t v118 = *(void *)(a1 + 224);
      uint64_t v119 = *(void *)(a1 + 232);
      *(void *)(a1 + 224) = v113;
      *(void *)(a1 + 232) = v114;
      uint64_t v120 = *(void *)(a1 + 240);
      uint64_t v121 = *(void *)(a1 + 248);
      *(void *)(a1 + 240) = v115;
      *(void *)(a1 + 248) = v109;
      uint64_t v122 = *(void *)(a1 + 256);
      uint64_t v123 = *(void *)(a1 + 264);
      *(void *)(a1 + 256) = v110;
      *(void *)(a1 + 264) = v134;
      long long v124 = *(_OWORD *)(a1 + 272);
      long long v125 = *(_OWORD *)(a1 + 288);
      *(void *)(a1 + 272) = v138;
      *(void *)(a1 + 280) = v142;
      *(void *)(a1 + 288) = v146;
      *(void *)(a1 + 296) = v150;
      long long v126 = *(_OWORD *)(a1 + 304);
      long long v127 = *(_OWORD *)(a1 + 320);
      *(void *)(a1 + 304) = v154;
      *(void *)(a1 + 312) = v158;
      *(void *)(a1 + 320) = v162;
      *(void *)(a1 + 328) = v166;
      long long v128 = *(_OWORD *)(a1 + 336);
      long long v129 = *(_OWORD *)(a1 + 352);
      *(void *)(a1 + 336) = v170;
      *(void *)(a1 + 344) = v174;
      *(void *)(a1 + 352) = v178;
      *(void *)(a1 + 360) = v182;
      char v130 = *(unsigned char *)(a1 + 384);
      *(unsigned char *)(a1 + 384) = v190;
      uint64_t v131 = *(void *)(a1 + 368);
      uint64_t v132 = *(void *)(a1 + 376);
      *(void *)(a1 + 368) = v186;
      *(void *)(a1 + 376) = v193;
      sub_100061440(v116, v117, v118, v119, v120, v121, v122, v123, v124, *((uint64_t *)&v124 + 1), v125, *((uint64_t *)&v125 + 1), v126, *((uint64_t *)&v126 + 1), v127, *((uint64_t *)&v127 + 1), v128, *((uint64_t *)&v128 + 1), v129,
        *((uint64_t *)&v129 + 1),
        v131,
        v132,
        v130);
      goto LABEL_25;
    }
    sub_100137364(a1 + 208);
LABEL_24:
    long long v56 = *((_OWORD *)a2 + 16);
    long long v58 = *v36;
    long long v57 = *((_OWORD *)a2 + 14);
    *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
    *(_OWORD *)(a1 + 256) = v56;
    *uint64_t v35 = v58;
    *(_OWORD *)(a1 + 224) = v57;
    long long v59 = *((_OWORD *)a2 + 20);
    long long v61 = *((_OWORD *)a2 + 17);
    long long v60 = *((_OWORD *)a2 + 18);
    *(_OWORD *)(a1 + 304) = *((_OWORD *)a2 + 19);
    *(_OWORD *)(a1 + 320) = v59;
    *(_OWORD *)(a1 + 272) = v61;
    *(_OWORD *)(a1 + 288) = v60;
    long long v63 = *((_OWORD *)a2 + 22);
    long long v62 = *((_OWORD *)a2 + 23);
    long long v64 = *((_OWORD *)a2 + 21);
    *(unsigned char *)(a1 + 384) = *((unsigned char *)a2 + 384);
    *(_OWORD *)(a1 + 352) = v63;
    *(_OWORD *)(a1 + 368) = v62;
    *(_OWORD *)(a1 + 336) = v64;
    goto LABEL_25;
  }
LABEL_19:
  if (v38 == 255)
  {
LABEL_20:
    long long v39 = *v36;
    long long v40 = *((_OWORD *)a2 + 14);
    long long v41 = *((_OWORD *)a2 + 16);
    *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
    *(_OWORD *)(a1 + 256) = v41;
    *uint64_t v35 = v39;
    *(_OWORD *)(a1 + 224) = v40;
    long long v42 = *((_OWORD *)a2 + 17);
    long long v43 = *((_OWORD *)a2 + 18);
    long long v44 = *((_OWORD *)a2 + 20);
    *(_OWORD *)(a1 + 304) = *((_OWORD *)a2 + 19);
    *(_OWORD *)(a1 + 320) = v44;
    *(_OWORD *)(a1 + 272) = v42;
    *(_OWORD *)(a1 + 288) = v43;
    long long v45 = *((_OWORD *)a2 + 21);
    long long v46 = *((_OWORD *)a2 + 22);
    long long v47 = *((_OWORD *)a2 + 23);
    *(unsigned char *)(a1 + 384) = *((unsigned char *)a2 + 384);
    *(_OWORD *)(a1 + 352) = v46;
    *(_OWORD *)(a1 + 368) = v47;
    *(_OWORD *)(a1 + 336) = v45;
    goto LABEL_25;
  }
  char v188 = v38 & 1;
  uint64_t v48 = *((void *)a2 + 31);
  uint64_t v49 = *((void *)a2 + 32);
  uint64_t v133 = *((void *)a2 + 34);
  uint64_t v136 = *((void *)a2 + 35);
  uint64_t v140 = *((void *)a2 + 36);
  uint64_t v144 = *((void *)a2 + 37);
  uint64_t v148 = *((void *)a2 + 38);
  uint64_t v152 = *((void *)a2 + 39);
  uint64_t v156 = *((void *)a2 + 40);
  uint64_t v160 = *((void *)a2 + 41);
  uint64_t v164 = *((void *)a2 + 42);
  uint64_t v168 = *((void *)a2 + 43);
  uint64_t v172 = *((void *)a2 + 44);
  uint64_t v176 = *((void *)a2 + 45);
  uint64_t v180 = *((void *)a2 + 46);
  uint64_t v184 = *((void *)a2 + 47);
  uint64_t v50 = *((void *)a2 + 26);
  uint64_t v51 = *((void *)a2 + 27);
  uint64_t v52 = *((void *)a2 + 28);
  uint64_t v53 = *((void *)a2 + 29);
  uint64_t v54 = *((void *)a2 + 30);
  uint64_t v55 = *((void *)a2 + 33);
  sub_100136870(v50, v51, v52, v53, v54, v48, v49, v55, v133, v136, v140, v144, v148, v152, v156, v160, v164, v168, v172,
    v176,
    v180,
    v184,
    v38 & 1);
  *(void *)(a1 + 208) = v50;
  *(void *)(a1 + 216) = v51;
  *(void *)(a1 + 224) = v52;
  *(void *)(a1 + 232) = v53;
  *(void *)(a1 + 240) = v54;
  *(void *)(a1 + 248) = v48;
  *(void *)(a1 + 256) = v49;
  *(void *)(a1 + 264) = v55;
  *(void *)(a1 + 272) = v133;
  *(void *)(a1 + 280) = v136;
  *(void *)(a1 + 288) = v140;
  *(void *)(a1 + 296) = v144;
  *(void *)(a1 + 304) = v148;
  *(void *)(a1 + 312) = v152;
  *(void *)(a1 + 320) = v156;
  *(void *)(a1 + 328) = v160;
  *(void *)(a1 + 336) = v164;
  *(void *)(a1 + 344) = v168;
  *(void *)(a1 + 352) = v172;
  *(void *)(a1 + 360) = v176;
  *(void *)(a1 + 368) = v180;
  *(void *)(a1 + 376) = v184;
  *(unsigned char *)(a1 + 384) = v188;
LABEL_25:
  uint64_t v65 = (_OWORD *)(a1 + 392);
  uint64_t v66 = (long long *)(a2 + 98);
  uint64_t v67 = *((void *)a2 + 54);
  if (*(void *)(a1 + 432))
  {
    if (v67)
    {
      *(void *)(a1 + 392) = *((void *)a2 + 49);
      *(void *)(a1 + 400) = *((void *)a2 + 50);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 408) = *((void *)a2 + 51);
      swift_retain();
      swift_release();
      *(_DWORD *)(a1 + 416) = a2[104];
      *(_DWORD *)(a1 + 420) = a2[105];
      *(_DWORD *)(a1 + 424) = a2[106];
      *(_WORD *)(a1 + 428) = *((_WORD *)a2 + 214);
      *(unsigned char *)(a1 + 430) = *((unsigned char *)a2 + 430);
      *(void *)(a1 + 432) = *((void *)a2 + 54);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 440) = *((void *)a2 + 55);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 448) = *((void *)a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 456) = *((void *)a2 + 57);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 464) = *((void *)a2 + 58);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 472) = *((void *)a2 + 59);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 480) = *((void *)a2 + 60);
      *(void *)(a1 + 488) = *((void *)a2 + 61);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 496) = *((void *)a2 + 62);
      *(void *)(a1 + 504) = *((void *)a2 + 63);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10036FAA0(a1 + 392);
      long long v69 = *(_OWORD *)(a2 + 110);
      long long v71 = *v66;
      long long v70 = *(_OWORD *)(a2 + 102);
      *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 106);
      *(_OWORD *)(a1 + 440) = v69;
      *uint64_t v65 = v71;
      *(_OWORD *)(a1 + 408) = v70;
      long long v73 = *(_OWORD *)(a2 + 118);
      long long v72 = *(_OWORD *)(a2 + 122);
      long long v74 = *(_OWORD *)(a2 + 114);
      *(void *)(a1 + 504) = *((void *)a2 + 63);
      *(_OWORD *)(a1 + 472) = v73;
      *(_OWORD *)(a1 + 488) = v72;
      *(_OWORD *)(a1 + 456) = v74;
    }
  }
  else if (v67)
  {
    *(void *)(a1 + 392) = *((void *)a2 + 49);
    *(void *)(a1 + 400) = *((void *)a2 + 50);
    *(void *)(a1 + 408) = *((void *)a2 + 51);
    *(_DWORD *)(a1 + 416) = a2[104];
    *(_DWORD *)(a1 + 420) = a2[105];
    int v68 = a2[106];
    *(_DWORD *)(a1 + 427) = *(int *)((char *)a2 + 427);
    *(_DWORD *)(a1 + 424) = v68;
    *(void *)(a1 + 432) = *((void *)a2 + 54);
    *(void *)(a1 + 440) = *((void *)a2 + 55);
    *(void *)(a1 + 448) = *((void *)a2 + 56);
    *(void *)(a1 + 456) = *((void *)a2 + 57);
    *(void *)(a1 + 464) = *((void *)a2 + 58);
    *(void *)(a1 + 472) = *((void *)a2 + 59);
    *(void *)(a1 + 480) = *((void *)a2 + 60);
    *(void *)(a1 + 488) = *((void *)a2 + 61);
    *(void *)(a1 + 496) = *((void *)a2 + 62);
    *(void *)(a1 + 504) = *((void *)a2 + 63);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v75 = *v66;
    long long v76 = *(_OWORD *)(a2 + 102);
    long long v77 = *(_OWORD *)(a2 + 110);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 106);
    *(_OWORD *)(a1 + 440) = v77;
    *uint64_t v65 = v75;
    *(_OWORD *)(a1 + 408) = v76;
    long long v78 = *(_OWORD *)(a2 + 114);
    long long v79 = *(_OWORD *)(a2 + 118);
    long long v80 = *(_OWORD *)(a2 + 122);
    *(void *)(a1 + 504) = *((void *)a2 + 63);
    *(_OWORD *)(a1 + 472) = v79;
    *(_OWORD *)(a1 + 488) = v80;
    *(_OWORD *)(a1 + 456) = v78;
  }
  *(void *)(a1 + 512) = *((void *)a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 520) = *((void *)a2 + 65);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v81 = *((void *)a2 + 66);
  *(unsigned char *)(a1 + 536) = *((unsigned char *)a2 + 536);
  *(void *)(a1 + 528) = v81;
  LODWORD(v81) = a2[135];
  *(unsigned char *)(a1 + 544) = *((unsigned char *)a2 + 544);
  *(_DWORD *)(a1 + 540) = v81;
  uint64_t v82 = *((void *)a2 + 69);
  *(unsigned char *)(a1 + 560) = *((unsigned char *)a2 + 560);
  *(void *)(a1 + 552) = v82;
  *(void *)(a1 + 568) = *((void *)a2 + 71);
  *(void *)(a1 + 576) = *((void *)a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10036FAA0(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for MessageData(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x248uLL);
}

uint64_t assignWithTake for MessageData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v4 = a1 + 16;
  uint64_t v5 = a2 + 16;
  int v6 = *(unsigned __int8 *)(a1 + 192);
  int v7 = *(unsigned __int8 *)(a2 + 192);
  if (v6 == 254) {
    goto LABEL_7;
  }
  if (v7 == 254)
  {
    sub_1001373B8(a1 + 16);
LABEL_7:
    long long v8 = *(_OWORD *)(v5 + 144);
    *(_OWORD *)(v4 + 128) = *(_OWORD *)(v5 + 128);
    *(_OWORD *)(v4 + 144) = v8;
    *(_OWORD *)(v4 + 160) = *(_OWORD *)(v5 + 160);
    *(unsigned char *)(v4 + 176) = *(unsigned char *)(v5 + 176);
    long long v9 = *(_OWORD *)(v5 + 80);
    *(_OWORD *)(v4 + 64) = *(_OWORD *)(v5 + 64);
    *(_OWORD *)(v4 + 80) = v9;
    long long v10 = *(_OWORD *)(v5 + 112);
    *(_OWORD *)(v4 + 96) = *(_OWORD *)(v5 + 96);
    *(_OWORD *)(v4 + 112) = v10;
    long long v11 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
    *(_OWORD *)(v4 + 16) = v11;
    long long v12 = *(_OWORD *)(v5 + 48);
    *(_OWORD *)(v4 + 32) = *(_OWORD *)(v5 + 32);
    *(_OWORD *)(v4 + 48) = v12;
    goto LABEL_8;
  }
  if (v6 == 255) {
    goto LABEL_7;
  }
  if (v7 == 255)
  {
    sub_100137364(a1 + 16);
    goto LABEL_7;
  }
  uint64_t v27 = *(void *)(a1 + 16);
  uint64_t v28 = *(void *)(a1 + 24);
  uint64_t v29 = *(void *)(a1 + 32);
  uint64_t v30 = *(void *)(a1 + 40);
  uint64_t v31 = *(void *)(a1 + 48);
  uint64_t v32 = *(void *)(a1 + 56);
  uint64_t v33 = *(void *)(a1 + 64);
  uint64_t v34 = *(void *)(a1 + 72);
  long long v35 = *(_OWORD *)(a1 + 80);
  long long v36 = *(_OWORD *)(a1 + 96);
  long long v37 = *(_OWORD *)(a1 + 112);
  long long v38 = *(_OWORD *)(a1 + 128);
  long long v39 = *(_OWORD *)(a1 + 144);
  long long v40 = *(_OWORD *)(a1 + 160);
  uint64_t v41 = *(void *)(a1 + 176);
  uint64_t v42 = *(void *)(a1 + 184);
  long long v43 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v43;
  long long v44 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v44;
  long long v45 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v45;
  long long v46 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v46;
  long long v47 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v47;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 192) = v7 & 1;
  sub_100061440(v27, v28, v29, v30, v31, v32, v33, v34, v35, *((uint64_t *)&v35 + 1), v36, *((uint64_t *)&v36 + 1), v37, *((uint64_t *)&v37 + 1), v38, *((uint64_t *)&v38 + 1), v39, *((uint64_t *)&v39 + 1), v40,
    *((uint64_t *)&v40 + 1),
    v41,
    v42,
    v6 & 1);
LABEL_8:
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRelease();
  int v13 = *(unsigned __int8 *)(a1 + 384);
  int v14 = *(unsigned __int8 *)(a2 + 384);
  if (v13 == 254)
  {
LABEL_14:
    long long v15 = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 352) = v15;
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
    long long v16 = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = v16;
    long long v17 = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 320) = v17;
    long long v18 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v18;
    long long v19 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v19;
    goto LABEL_15;
  }
  if (v14 == 254)
  {
    sub_1001373B8(a1 + 208);
    goto LABEL_14;
  }
  if (v13 == 255) {
    goto LABEL_14;
  }
  if (v14 == 255)
  {
    sub_100137364(a1 + 208);
    goto LABEL_14;
  }
  uint64_t v48 = *(void *)(a1 + 208);
  uint64_t v49 = *(void *)(a1 + 216);
  uint64_t v50 = *(void *)(a1 + 224);
  uint64_t v51 = *(void *)(a1 + 232);
  uint64_t v52 = *(void *)(a1 + 240);
  uint64_t v53 = *(void *)(a1 + 248);
  uint64_t v54 = *(void *)(a1 + 256);
  uint64_t v55 = *(void *)(a1 + 264);
  long long v56 = *(_OWORD *)(a1 + 272);
  long long v57 = *(_OWORD *)(a1 + 288);
  long long v58 = *(_OWORD *)(a1 + 304);
  long long v59 = *(_OWORD *)(a1 + 320);
  long long v60 = *(_OWORD *)(a1 + 336);
  long long v61 = *(_OWORD *)(a1 + 352);
  uint64_t v62 = *(void *)(a1 + 368);
  uint64_t v63 = *(void *)(a1 + 376);
  long long v64 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v64;
  long long v65 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v65;
  long long v66 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v66;
  long long v67 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v67;
  long long v68 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v68;
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(unsigned char *)(a1 + 384) = v14 & 1;
  sub_100061440(v48, v49, v50, v51, v52, v53, v54, v55, v56, *((uint64_t *)&v56 + 1), v57, *((uint64_t *)&v57 + 1), v58, *((uint64_t *)&v58 + 1), v59, *((uint64_t *)&v59 + 1), v60, *((uint64_t *)&v60 + 1), v61,
    *((uint64_t *)&v61 + 1),
    v62,
    v63,
    v13 & 1);
LABEL_15:
  if (!*(void *)(a1 + 432))
  {
LABEL_19:
    long long v23 = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 472) = v23;
    *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
    *(void *)(a1 + 504) = *(void *)(a2 + 504);
    long long v24 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v24;
    long long v25 = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 440) = v25;
    goto LABEL_20;
  }
  if (!*(void *)(a2 + 432))
  {
    sub_10036FAA0(a1 + 392);
    goto LABEL_19;
  }
  uint64_t v20 = *(void *)(a2 + 400);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = v20;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  swift_release();
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(_DWORD *)(a1 + 424) = *(_DWORD *)(a2 + 424);
  *(_WORD *)(a1 + 428) = *(_WORD *)(a2 + 428);
  *(unsigned char *)(a1 + 430) = *(unsigned char *)(a2 + 430);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 488);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a2 + 504);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = v22;
  swift_bridgeObjectRelease();
LABEL_20:
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
  *(_DWORD *)(a1 + 540) = *(_DWORD *)(a2 + 540);
  *(unsigned char *)(a1 + 544) = *(unsigned char *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 584)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 200);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 584) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 200) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 584) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageData()
{
  return &type metadata for MessageData;
}

uint64_t initializeBufferWithCopyOfBuffer for MessageData.BodySection(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    unsigned __int8 v9 = *((unsigned char *)a2 + 16);
    swift_bridgeObjectRetain();
    sub_10013B5CC(v8, v9);
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v10 = *(int *)(a3 + 24);
    long long v11 = (void *)(a1 + v10);
    long long v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for MessageData.BodyData();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_10000566C(&qword_1007131E8);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v16 = sub_1005E17E0();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v11, v12, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  return a1;
}

uint64_t destroy for MessageData.BodySection(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_10013B5E0(*(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for MessageData.BodyData();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = sub_1005E17E0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v4, v7);
  }
  return result;
}

uint64_t initializeWithCopy for MessageData.BodySection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v7 = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_10013B5CC(v6, v7);
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(int *)(a3 + 24);
  unsigned __int8 v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for MessageData.BodyData();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_10000566C(&qword_1007131E8);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = sub_1005E17E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v9, v10, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for MessageData.BodySection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 8);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 16);
  sub_10013B5CC(v6, v7);
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v6;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v7;
  sub_10013B5E0(v8, v9);
  int v10 = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 20) = v10;
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for MessageData.BodyData();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      uint64_t v22 = sub_1005E17E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 24))(v12, v13, v22);
      return a1;
    }
    sub_1003705EC((uint64_t)v12);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v20 = sub_10000566C(&qword_1007131E8);
    memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  uint64_t v19 = sub_1005E17E0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v12, v13, v19);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1003705EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageData.BodyData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for MessageData.BodySection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = type metadata accessor for MessageData.BodyData();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_10000566C(&qword_1007131E8);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_1005E17E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v5, v6, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for MessageData.BodySection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_10013B5E0(v7, v8);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for MessageData.BodyData();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      uint64_t v20 = sub_1005E17E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 40))(v10, v11, v20);
      return a1;
    }
    sub_1003705EC((uint64_t)v10);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v18 = sub_10000566C(&qword_1007131E8);
    memcpy(v10, v11, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  uint64_t v17 = sub_1005E17E0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32))(v10, v11, v17);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageData.BodySection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100370984);
}

uint64_t sub_100370984(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000566C(&qword_1007131E8);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MessageData.BodySection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100370A4C);
}

void *sub_100370A4C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_1007131E8);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100370AF8()
{
  sub_100370B98();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100370B98()
{
  if (!qword_1007133E8)
  {
    type metadata accessor for MessageData.BodyData();
    unint64_t v0 = sub_1005E28C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007133E8);
    }
  }
}

uint64_t sub_100370BF0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 200);
  uint64_t v18 = *(void *)(a1 + 192);
  uint64_t v19 = *(void *)(a1 + 184);
  uint64_t v3 = *(void *)(a1 + 208);
  uint64_t v4 = *(void *)(a1 + 216);
  uint64_t v5 = *(void *)(a1 + 224);
  uint64_t v6 = *(void *)(a1 + 232);
  uint64_t v7 = *(void *)(a1 + 240);
  long long v16 = *(_OWORD *)(a1 + 264);
  long long v17 = *(_OWORD *)(a1 + 248);
  long long v15 = *(_OWORD *)(a1 + 280);
  long long v13 = *(_OWORD *)(a1 + 312);
  long long v14 = *(_OWORD *)(a1 + 296);
  long long v12 = *(_OWORD *)(a1 + 328);
  uint64_t v9 = *(void *)(a1 + 344);
  uint64_t v8 = *(void *)(a1 + 352);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 360);
  sub_10006133C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(unsigned char *)(a1 + 176));
  sub_10006133C(v19, v18, v2, v3, v4, v5, v6, v7, v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12,
    *((uint64_t *)&v12 + 1),
    v9,
    v8,
    v10);
  return a1;
}

uint64_t *sub_100370D1C(uint64_t *a1)
{
  uint64_t v2 = a1[15];
  uint64_t v3 = a1[16];
  uint64_t v4 = a1[17];
  uint64_t v5 = a1[18];
  uint64_t v6 = a1[19];
  uint64_t v7 = a1[20];
  sub_1000618AC(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  sub_1000618AC(v2, v3, v4, v5, v6, v7);
  return a1;
}

uint64_t sub_100370DFC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 176);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    v4);
  return a1;
}

uint64_t sub_100370E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageData.BodyData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100370ED4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MessageHeader.init(data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1005E17E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t sub_100370F90()
{
  uint64_t v0 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  if (v0 != _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0()) {
    return 0;
  }
  sub_1005E17E0();
  sub_100371868();
  sub_1005E2390();
  sub_1005E23E0();
  if (v3 == v2) {
    return 1;
  }
  __chkstk_darwin();
  sub_1005E1760();
  return v3;
}

uint64_t ByteBuffer.init(_:)(uint64_t a1)
{
  sub_1005E17E0();
  __chkstk_darwin();
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v4 + 16))(v3, a1);
  sub_100371258((uint64_t)v3);
  uint64_t v6 = v5;
  sub_1003705EC(a1);
  return v6;
}

uint64_t MessageData.BodyData.init(_:)()
{
  return swift_release();
}

uint64_t sub_100371200()
{
  return sub_1005E1760();
}

void sub_100371258(uint64_t a1)
{
  uint64_t v2 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    if (v2)
    {
      if (v2)
      {
        unsigned int v3 = (v2 - 1) | ((v2 - 1) >> 1) | (((v2 - 1) | ((v2 - 1) >> 1)) >> 2);
        unsigned int v4 = v3 | (v3 >> 4) | ((v3 | (v3 >> 4)) >> 8);
        int v5 = v4 | HIWORD(v4);
        BOOL v6 = __CFADD__(v5, 1);
        unsigned int v7 = v5 + 1;
        if (v6) {
          unsigned int v8 = -1;
        }
        else {
          unsigned int v8 = v7;
        }
      }
      else
      {
        unsigned int v8 = 0;
      }
      unsigned __int8 v10 = malloc(v8);
      if (!v10) {
        goto LABEL_15;
      }
      uint64_t v11 = v10;
      type metadata accessor for ByteBuffer._Storage();
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 24) = v11;
      *(_DWORD *)(v12 + 16) = v8;
      *(void *)(v12 + 32) = j__malloc_1;
      *(void *)(v12 + 40) = j__realloc_1;
      *(void *)(v12 + 48) = sub_100373958;
      *(void *)(v12 + 56) = sub_100373968;
      swift_beginAccess();
      int v9 = 0;
    }
    else
    {
      int v9 = *((_DWORD *)ByteBufferAllocator.zeroCapacityWithDefaultAllocator.unsafeMutableAddressor() + 3);
      swift_retain();
    }
    ByteBuffer.setDispatchData(_:at:)();
    if (!__CFADD__(v9, v13))
    {
      uint64_t v14 = sub_1005E17E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
      return;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
}

uint64_t type metadata accessor for MessageData.BodyData()
{
  uint64_t result = qword_100713490;
  if (!qword_100713490) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t _s8BodyDataVwCP(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  int v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t _s8BodyDataVwxx(uint64_t a1)
{
  uint64_t v2 = sub_1005E17E0();
  unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t _s8BodyDataVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s8BodyDataVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s8BodyDataVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s8BodyDataVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t _s8BodyDataVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003716EC);
}

uint64_t sub_1003716EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t _s8BodyDataVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10037176C);
}

uint64_t sub_10037176C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1003717DC()
{
  uint64_t result = sub_1005E17E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_100371868()
{
  unint64_t result = qword_1007131F8;
  if (!qword_1007131F8)
  {
    sub_1005E17E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007131F8);
  }
  return result;
}

uint64_t sub_1003718C0()
{
  return sub_1005E1760();
}

uint64_t sub_10037191C@<X0>(const void *a1@<X0>, BOOL *a2@<X8>)
{
  int v5 = *(const void **)(v2 + 16);
  size_t v6 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  uint64_t result = memcmp(v5, a1, v6);
  *a2 = result == 0;
  return result;
}

uint64_t ClientCommandEncoder.encode(tag:command:)@<X0>(int a1@<W2>, void (*a2)(void)@<X8>)
{
  return sub_100371FE8((void (*)(void))sub_1003631F4, a1 & 0x101FF, a2);
}

uint64_t ClientCommandEncoder.idle(tag:)@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, unint64_t a3@<X8>)
{
  char v3 = a2;
  unint64_t v46 = a3;
  uint64_t v47 = a1;
  unsigned int v4 = a2 & 0x100;
  int v5 = HIWORD(a2) & 1;
  uint64_t v41 = type metadata accessor for CommandStreamPart();
  __chkstk_darwin();
  uint64_t v42 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E1C90();
  __chkstk_darwin();
  type metadata accessor for TaggedCommand();
  __chkstk_darwin();
  unsigned int v8 = (Swift::String *)((char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = sub_1005E17E0();
  uint64_t v9 = *(void *)(v39 - 8);
  __chkstk_darwin();
  long long v45 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v44 = (char *)&v37 - v11;
  __chkstk_darwin();
  long long v43 = (char *)&v37 - v12;
  int v13 = ByteBufferAllocator.zeroCapacityWithDefaultAllocator.unsafeMutableAddressor();
  unint64_t v14 = v13[1];
  uint64_t v15 = qword_100603118[v3];
  unint64_t v16 = *((unsigned int *)v13 + 4) | ((unint64_t)*((unsigned __int16 *)v13 + 10) << 32) | ((unint64_t)*((unsigned __int8 *)v13 + 22) << 48);
  unint64_t v38 = (unint64_t)v4 << 24;
  uint64_t v17 = v38 | v15 | 1;
  uint64_t v18 = swift_retain();
  int v40 = v5;
  CommandEncodeBuffer.init(buffer:options:encodedAtLeastOneCatenateElement:loggingMode:)(v18, v14, v16, v17, 0, v5, (uint64_t)v49);
  uint64_t v48 = sub_1003925E8(v47 & 0xFFFFFFFF000000FFLL);
  sub_1005E1C70();
  sub_10000566C(&qword_1007132F8);
  sub_10036C014();
  uint64_t v19 = sub_1005E1C30();
  uint64_t v21 = v20;
  uint64_t result = swift_bridgeObjectRelease();
  if (v21)
  {
    char v23 = v3;
    type metadata accessor for Command();
    swift_storeEnumTagMultiPayload();
    v8->_uint64_t countAndFlagsBits = v19;
    v8->_object = v21;
    CommandEncodeBuffer.writeCommand(_:)(v8);
    sub_100375E54((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TaggedCommand);
    EncodeBuffer.nextChunk(allowEmptyChunk:)(1);
    swift_beginAccess();
    long long v24 = v43;
    sub_1005E1770();
    swift_release();
    swift_release();
    swift_release();
    unint64_t v25 = v13[1];
    unint64_t v26 = *((unsigned int *)v13 + 4) | ((unint64_t)*((unsigned __int16 *)v13 + 10) << 32) | ((unint64_t)*((unsigned __int8 *)v13 + 22) << 48);
    uint64_t v27 = v38 | qword_100603118[v23] | 1;
    uint64_t v28 = swift_retain();
    CommandEncodeBuffer.init(buffer:options:encodedAtLeastOneCatenateElement:loggingMode:)(v28, v25, v26, v27, 0, v40, (uint64_t)v49);
    uint64_t v29 = (uint64_t)v42;
    swift_storeEnumTagMultiPayload();
    CommandEncodeBuffer.writeCommandStream(_:)(v29);
    sub_100375E54(v29, (uint64_t (*)(void))type metadata accessor for CommandStreamPart);
    EncodeBuffer.nextChunk(allowEmptyChunk:)(1);
    swift_beginAccess();
    uint64_t v30 = v44;
    sub_1005E1770();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v31 = v45;
    uint64_t v32 = v39;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v45, v24, v39);
    sub_10000566C(&qword_100713018);
    unint64_t v33 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1005F6670;
    long long v35 = *(void (**)(unint64_t, char *, uint64_t))(v9 + 32);
    v35(v34 + v33, v30, v32);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v24, v32);
    unint64_t v36 = v46;
    v35(v46, v31, v32);
    uint64_t result = type metadata accessor for ClientCommand.Encoded();
    *(void *)(v36 + *(int *)(result + 20)) = v34;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100371F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_1003751F8(a2 & 0xFFFFFFFF000000FFLL, a3);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)(type metadata accessor for CommandStreamPart() - 8);
    uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v7 = *(void *)(v5 + 72);
    do
    {
      CommandEncodeBuffer.writeCommandStream(_:)(v6);
      v6 += v7;
      --v4;
    }
    while (v4);
  }
  return swift_bridgeObjectRelease();
}

uint64_t static Command.convert(tag:command:)(uint64_t a1, uint64_t a2)
{
  return sub_1003751F8(a1 & 0xFFFFFFFF000000FFLL, a2);
}

uint64_t sub_100371FE8@<X0>(void (*a1)(void)@<X0>, unsigned int a2@<W2>, void (*a3)(void)@<X8>)
{
  __int16 v3 = a2;
  unint64_t v33 = a1;
  int v5 = HIWORD(a2) & 1;
  uint64_t v6 = sub_1005E17E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = ByteBufferAllocator.zeroCapacityWithDefaultAllocator.unsafeMutableAddressor();
  unint64_t v11 = v10[1];
  uint64_t v12 = 8 * (char)v3;
  uint64_t v13 = *(void *)((char *)&unk_100603130 + v12);
  uint64_t v14 = *(void *)((char *)&unk_100603148 + v12);
  uint64_t v15 = *(void *)((char *)&unk_100603160 + v12);
  unint64_t v16 = *((unsigned int *)v10 + 4) | ((unint64_t)*((unsigned __int16 *)v10 + 10) << 32) | ((unint64_t)*((unsigned __int8 *)v10 + 22) << 48);
  uint64_t v17 = 0x100000001;
  if ((v3 & 0x100) == 0) {
    uint64_t v17 = 1;
  }
  uint64_t v18 = v17 | v13 | v14 | v15;
  uint64_t v19 = swift_retain();
  CommandEncodeBuffer.init(buffer:options:encodedAtLeastOneCatenateElement:loggingMode:)(v19, v11, v16, v18, 0, v5, (uint64_t)v34);
  v33(v34);
  EncodeBuffer.nextChunk(allowEmptyChunk:)(1);
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  swift_beginAccess();
  sub_1005E1770();
  uint64_t v24 = *(int *)(type metadata accessor for ClientCommand.Encoded() + 20);
  unint64_t v33 = a3;
  *(void *)((char *)a3 + v24) = _swiftEmptyArrayStorage;
  if ((v23 & 0x100000000000000) != 0)
  {
    uint64_t v25 = v24;
    uint64_t v32 = v21;
    unint64_t v26 = _swiftEmptyArrayStorage;
    do
    {
      EncodeBuffer.nextChunk(allowEmptyChunk:)(1);
      uint64_t v28 = v27;
      swift_beginAccess();
      sub_1005E1770();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v26 = (void *)sub_100383060(0, v26[2] + 1, 1, (unint64_t)v26);
      }
      unint64_t v30 = v26[2];
      unint64_t v29 = v26[3];
      if (v30 >= v29 >> 1) {
        unint64_t v26 = (void *)sub_100383060(v29 > 1, v30 + 1, 1, (unint64_t)v26);
      }
      _OWORD v26[2] = v30 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))((unint64_t)v26+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v30, v9, v6);
      swift_release();
    }
    while ((v28 & 0x100000000000000) != 0);
    *(void *)((char *)v33 + v25) = v26;
  }
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1003722F0()
{
  uint64_t result = Capability.init(_:)(0xD000000000000011, 0x80000001005E6370);
  static Capability.applePushService = result;
  unk_100762080 = v1;
  qword_100762088 = v2;
  byte_100762090 = v3 & 1;
  return result;
}

uint64_t *Capability.applePushService.unsafeMutableAddressor()
{
  if (qword_100712FB0 != -1) {
    swift_once();
  }
  return &static Capability.applePushService;
}

uint64_t static Capability.applePushService.getter()
{
  if (qword_100712FB0 != -1) {
    swift_once();
  }
  uint64_t v0 = static Capability.applePushService;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_100372404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000566C(&qword_100712FC8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v89 - v8;
  uint64_t v10 = type metadata accessor for SelectParameter(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ClientCommand(0);
  __chkstk_darwin(v14);
  unint64_t v16 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100375DEC(a1, (uint64_t)v16, type metadata accessor for ClientCommand);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v21 = *((void *)v16 + 2);
      uint64_t v22 = *((void *)v16 + 3);
      *(_OWORD *)a2 = *(_OWORD *)v16;
      *(void *)(a2 + 16) = v21;
      *(void *)(a2 + 24) = v22;
      uint64_t v20 = type metadata accessor for Command();
      goto LABEL_48;
    case 2u:
      uint64_t v23 = *(void *)v16;
      int v24 = *((_DWORD *)v16 + 2);
      uint64_t v25 = *((void *)v16 + 2);
      int64_t v26 = *(void *)(v25 + 16);
      if (v26)
      {
        HIDWORD(v90) = v24;
        uint64_t v91 = v23;
        uint64_t v92 = a2;
        uint64_t v93 = v11;
        *(void *)&long long v95 = _swiftEmptyArrayStorage;
        sub_10035FEDC(0, v26, 0);
        uint64_t v27 = (void *)v95;
        int64_t v28 = sub_1000D38D0(v25);
        int v30 = v29;
        char v32 = v31 & 1;
        uint64_t v94 = v25 + 56;
        do
        {
          if (v28 < 0 || v28 >= 1 << *(unsigned char *)(v25 + 32))
          {
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
            JUMPOUT(0x100373100);
          }
          if (((*(void *)(v94 + (((unint64_t)v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
            goto LABEL_52;
          }
          if (*(_DWORD *)(v25 + 36) != v30) {
            goto LABEL_53;
          }
          swift_storeEnumTagMultiPayload();
          *(void *)&long long v95 = v27;
          unint64_t v34 = v27[2];
          unint64_t v33 = v27[3];
          if (v34 >= v33 >> 1)
          {
            sub_10035FEDC(v33 > 1, v34 + 1, 1);
            uint64_t v27 = (void *)v95;
          }
          void v27[2] = v34 + 1;
          sub_100375F0C((uint64_t)v13, (uint64_t)v27+ ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80))+ *(void *)(v93 + 72) * v34, type metadata accessor for SelectParameter);
          int64_t v35 = sub_1000D3974(v28, v30, v32 & 1, v25);
          int64_t v28 = v35;
          int v30 = v36;
          char v32 = v37 & 1;
          --v26;
        }
        while (v26);
        sub_100060FF0(v35, v36, v37 & 1);
        swift_bridgeObjectRelease();
        uint64_t v23 = v91;
        a2 = v92;
        int v24 = HIDWORD(v90);
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v27 = _swiftEmptyArrayStorage;
      }
      *(void *)a2 = v23;
      *(_DWORD *)(a2 + 8) = v24;
      *(void *)(a2 + 16) = v27;
      uint64_t v20 = type metadata accessor for Command();
LABEL_48:
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 0, 1, v20);
    case 3u:
    case 4u:
      int v38 = *((_DWORD *)v16 + 2);
      *(void *)a2 = *(void *)v16;
      *(_DWORD *)(a2 + 8) = v38;
      *(void *)(a2 + 16) = _swiftEmptyArrayStorage;
      uint64_t v20 = type metadata accessor for Command();
      goto LABEL_48;
    case 5u:
      int v39 = *((_DWORD *)v16 + 2);
      *(void *)a2 = *(void *)v16;
      *(_DWORD *)(a2 + 8) = v39;
      uint64_t v20 = type metadata accessor for Command();
      goto LABEL_48;
    case 6u:
      uint64_t v40 = *(void *)v16;
      int v41 = *((_DWORD *)v16 + 2);
      uint64_t v42 = *((void *)v16 + 2);
      int v43 = *((_DWORD *)v16 + 6);
      uint64_t v44 = sub_10038444C((uint64_t)_swiftEmptyArrayStorage);
      *(void *)a2 = v40;
      *(_DWORD *)(a2 + 8) = v41;
      *(void *)(a2 + 16) = v42;
      *(_DWORD *)(a2 + 24) = v43;
      *(void *)(a2 + 32) = v44;
      *(void *)(a2 + 40) = v45;
      *(void *)(a2 + 48) = v46;
      uint64_t v20 = type metadata accessor for Command();
      goto LABEL_48;
    case 7u:
      unint64_t v47 = *(void *)v16;
      uint64_t v48 = (void *)*((void *)v16 + 2);
      uint64_t v49 = *((void *)v16 + 4);
      if (*(void *)v16)
      {
        int v50 = *((_DWORD *)v16 + 2);
      }
      else
      {
        uint64_t v79 = ByteBufferAllocator.buffer(string:)(0, 0xE000000000000000, (uint64_t)j__malloc_1, (uint64_t)j__realloc_1, (uint64_t)sub_100373958);
        unint64_t v47 = MailboxName.init(_:)(v79, v81, v80 & 0xFFFFFFFFFFFFFFLL);
        int v50 = v82;
      }
      if (!v48) {
        uint64_t v48 = _swiftEmptyArrayStorage;
      }
      sub_1003739E0((uint64_t)v48, (uint64_t (*)(void))j__malloc_1, (uint64_t)j__realloc_1, (uint64_t)sub_100373958, (uint64_t)sub_100373968);
      uint64_t v84 = v83;
      uint64_t v86 = v85;
      uint64_t v88 = v87;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a2 + 32) = 0u;
      *(_OWORD *)(a2 + 48) = 0u;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      *(void *)(a2 + 64) = 0;
      *(void *)(a2 + 72) = v47;
      *(_DWORD *)(a2 + 80) = v50;
      *(void *)(a2 + 88) = v84;
      *(void *)(a2 + 96) = v86;
      *(unsigned char *)(a2 + 110) = BYTE6(v88);
      *(_WORD *)(a2 + 108) = WORD2(v88);
      *(_DWORD *)(a2 + 104) = v88;
      *(unsigned char *)(a2 + 111) = 0;
      *(void *)(a2 + 112) = v49;
      uint64_t v20 = type metadata accessor for Command();
      goto LABEL_48;
    case 8u:
      int v51 = *((_DWORD *)v16 + 2);
      uint64_t v52 = *((void *)v16 + 2);
      *(void *)a2 = *(void *)v16;
      *(_DWORD *)(a2 + 8) = v51;
      *(void *)(a2 + 16) = v52;
      uint64_t v20 = type metadata accessor for Command();
      goto LABEL_48;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v53 = sub_10000566C(&qword_100713008);
      uint64_t v54 = (uint64_t)&v16[*(int *)(v53 + 64)];
      sub_1000094D4(*(void *)&v16[*(int *)(v53 + 80)], *(void *)&v16[*(int *)(v53 + 80) + 8]);
      uint64_t v55 = type metadata accessor for Command();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(a2, 1, 1, v55);
      return sub_100007A48(v54, &qword_100712FD0);
    case 0xAu:
      *(void *)a2 = *(void *)v16;
      *(_OWORD *)(a2 + 8) = xmmword_1006026F0;
      *(void *)(a2 + 24) = _swiftEmptyArrayStorage;
      goto LABEL_25;
    case 0xBu:
      uint64_t v58 = *(void *)v16;
      uint64_t v57 = *((void *)v16 + 1);
      if (!*(void *)(v57 + 16))
      {
        swift_bridgeObjectRelease();
        sub_10000566C(&qword_1007134F8);
        type metadata accessor for SearchReturnOption();
        uint64_t v57 = swift_allocObject();
        *(_OWORD *)(v57 + 16) = xmmword_1005F6670;
        swift_storeEnumTagMultiPayload();
      }
      *(void *)a2 = v58;
      *(_OWORD *)(a2 + 8) = xmmword_1006026F0;
      *(void *)(a2 + 24) = v57;
      goto LABEL_25;
    case 0xCu:
      *(void *)a2 = *(void *)v16;
      *(_OWORD *)(a2 + 8) = xmmword_1006026F0;
      *(void *)(a2 + 24) = _swiftEmptyArrayStorage;
      goto LABEL_25;
    case 0xDu:
      uint64_t v60 = *(void *)v16;
      uint64_t v59 = *((void *)v16 + 1);
      if (!*(void *)(v59 + 16))
      {
        swift_bridgeObjectRelease();
        sub_10000566C(&qword_1007134F8);
        type metadata accessor for SearchReturnOption();
        uint64_t v59 = swift_allocObject();
        *(_OWORD *)(v59 + 16) = xmmword_1005F6670;
        swift_storeEnumTagMultiPayload();
      }
      *(void *)a2 = v60;
      *(_OWORD *)(a2 + 8) = xmmword_1006026F0;
      *(void *)(a2 + 24) = v59;
      goto LABEL_25;
    case 0xEu:
      long long v61 = &v16[*(int *)(sub_10000566C(&qword_100713000) + 48)];
      uint64_t v62 = *(void *)v61;
      uint64_t v63 = *((void *)v61 + 1);
      char v64 = v61[16];
      sub_10001FDF0((uint64_t)v16, (uint64_t)v9, &qword_100712FC8);
      if (v64)
      {
        long long v70 = _swiftEmptyArrayStorage;
      }
      else
      {
        sub_10000566C(&qword_1007134F0);
        uint64_t v77 = *(void *)(type metadata accessor for FetchModifier() - 8);
        unint64_t v78 = (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
        long long v70 = (void *)swift_allocObject();
        *((_OWORD *)v70 + 1) = xmmword_1005F6670;
        *(void *)((char *)v70 + v78) = v63;
        swift_storeEnumTagMultiPayload();
      }
      static Command.uidFetch(messages:attributes:modifiers:)((uint64_t)v9, v62, (uint64_t)v70, v65, v66, v67, v68, v69, v89, v90, v91, v92, v93, v94, v95, *((uint64_t *)&v95 + 1), v96, *((uint64_t *)&v96 + 1), v97,
        *((uint64_t *)&v97 + 1));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_100007A48((uint64_t)v9, &qword_100712FC8);
    case 0xFu:
      sub_10000566C(&qword_100712FF8);
      sub_10001FDF0((uint64_t)v16, (uint64_t)v7, &qword_100712FC8);
      static Command.uidStore(messages:modifiers:data:)();
      swift_bridgeObjectRelease();
      return sub_100007A48((uint64_t)v7, &qword_100712FC8);
    case 0x10u:
      sub_10000566C(&qword_100712FD8);
      sub_10001FDF0((uint64_t)v16, (uint64_t)v7, &qword_100712FC8);
      static Command.uidCopy(messages:mailbox:)();
      goto LABEL_36;
    case 0x11u:
      sub_10000566C(&qword_100712FD8);
      sub_10001FDF0((uint64_t)v16, (uint64_t)v7, &qword_100712FC8);
      static Command.uidMove(messages:mailbox:)();
LABEL_36:
      swift_bridgeObjectRelease();
      return sub_100007A48((uint64_t)v7, &qword_100712FC8);
    case 0x12u:
      *(void *)a2 = *(void *)v16;
      *(_OWORD *)(a2 + 8) = *(_OWORD *)(v16 + 8);
      uint64_t v20 = type metadata accessor for Command();
      goto LABEL_48;
    case 0x13u:
      long long v71 = *((_OWORD *)v16 + 1);
      long long v95 = *(_OWORD *)v16;
      long long v96 = v71;
      long long v72 = *((_OWORD *)v16 + 3);
      long long v97 = *((_OWORD *)v16 + 2);
      long long v98 = v72;
      long long v73 = sub_100373170();
      *(void *)a2 = 0xD000000000000011;
      *(void *)(a2 + 8) = 0x80000001005E6370;
      *(void *)(a2 + 16) = v73;
      uint64_t v20 = type metadata accessor for Command();
      swift_storeEnumTagMultiPayload();
      sub_10035F628((uint64_t)&v95);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 0, 1, v20);
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
    case 0x19u:
    case 0x1Au:
LABEL_25:
      uint64_t v20 = type metadata accessor for Command();
      goto LABEL_48;
    case 0x1Bu:
      long long v74 = Capability.CompressionKind.deflate.unsafeMutableAddressor();
      uint64_t v75 = *((void *)v74 + 1);
      *(void *)a2 = *(void *)v74;
      *(void *)(a2 + 8) = v75;
      uint64_t v76 = type metadata accessor for Command();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(a2, 0, 1, v76);
      return swift_bridgeObjectRetain();
    default:
      uint64_t v17 = *((void *)v16 + 1);
      int v18 = *((_DWORD *)v16 + 8);
      __int16 v19 = *((_WORD *)v16 + 18);
      *(void *)a2 = *(void *)v16;
      *(void *)(a2 + 8) = v17;
      *(_OWORD *)(a2 + 16) = *((_OWORD *)v16 + 1);
      *(_DWORD *)(a2 + 32) = v18;
      *(_WORD *)(a2 + 36) = v19;
      *(unsigned char *)(a2 + 38) = v16[38];
      uint64_t v20 = type metadata accessor for Command();
      goto LABEL_48;
  }
}

void *sub_100373170()
{
  unint64_t v1 = (unint64_t)v0;
  sub_1005E2C80(80);
  v70._uint64_t countAndFlagsBits = 0x737265762D737061;
  v70._object = (void *)0xEC000000206E6F69;
  sub_1005E1E30(v70);
  v71._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v71);
  swift_bridgeObjectRelease();
  v72._object = (void *)0x80000001005E71D0;
  v72._uint64_t countAndFlagsBits = 0xD000000000000010;
  sub_1005E1E30(v72);
  v73._uint64_t countAndFlagsBits = sub_1003737F0(v0[1]);
  sub_1005E1E30(v73);
  swift_bridgeObjectRelease();
  v74._uint64_t countAndFlagsBits = 0xD000000000000012;
  v74._object = (void *)0x80000001005E71F0;
  sub_1005E1E30(v74);
  v75._uint64_t countAndFlagsBits = sub_1003737F0(v0[3]);
  sub_1005E1E30(v75);
  swift_bridgeObjectRelease();
  v76._uint64_t countAndFlagsBits = 0x6275732D73706120;
  v76._object = (void *)0xEE00206369706F74;
  sub_1005E1E30(v76);
  v77._uint64_t countAndFlagsBits = sub_1003737F0(v0[5]);
  sub_1005E1E30(v77);
  swift_bridgeObjectRelease();
  v78._uint64_t countAndFlagsBits = 0x786F626C69616D20;
  v78._object = (void *)0xEC00000028207365;
  sub_1005E1E30(v78);
  uint64_t v2 = ByteBufferAllocator.buffer(string:)(0, 0xE000000000000000, (uint64_t)j__malloc_1, (uint64_t)j__realloc_1, (uint64_t)sub_100373958);
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_100383444(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v9 = v7[2];
  unint64_t v8 = v7[3];
  int64_t v10 = v9 + 1;
  if (v9 >= v8 >> 1) {
LABEL_29:
  }
    uint64_t v7 = sub_100383444((void *)(v8 > 1), v10, 1, v7);
  unint64_t v11 = v2 | 0x8000000000000000;
  _OWORD v7[2] = v10;
  uint64_t v12 = v7;
  uint64_t v13 = &v7[3 * v9];
  v13[4] = v11;
  v13[5] = v4;
  *((unsigned char *)v13 + 54) = BYTE6(v6);
  *((_WORD *)v13 + 26) = WORD2(v6);
  *((_DWORD *)v13 + 12) = v6;
  uint64_t v14 = *(void *)(v1 + 56);
  uint64_t v68 = v14;
  unint64_t v9 = *(void *)(v14 + 16);
  if (!v9)
  {
LABEL_24:
    uint64_t v51 = ByteBufferAllocator.buffer(string:)(41, 0xE100000000000000, (uint64_t)j__malloc_1, (uint64_t)j__realloc_1, (uint64_t)sub_100373958);
    uint64_t v53 = v52;
    uint64_t v55 = v54;
    long long v56 = v12;
    unint64_t v58 = v12[2];
    unint64_t v57 = v12[3];
    if (v58 >= v57 >> 1) {
      long long v56 = sub_100383444((void *)(v57 > 1), v58 + 1, 1, v12);
    }
    v56[2] = v58 + 1;
    uint64_t v59 = &v56[3 * v58];
    v59[4] = v51 | 0x8000000000000000;
    v59[5] = v53;
    *((_DWORD *)v59 + 12) = v55;
    *((unsigned char *)v59 + 54) = BYTE6(v55);
    *((_WORD *)v59 + 26) = WORD2(v55);
    return v56;
  }
  uint64_t v60 = v14 + 32;
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  unint64_t v16 = v12;
  while (1)
  {
    unint64_t v61 = v9;
    uint64_t v62 = v16;
    uint64_t v4 = *(void *)(v60 + v15);
    if (!v15)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = *(void *)(v4 + 16);
      if (!v30) {
        goto LABEL_15;
      }
      goto LABEL_10;
    }
    swift_bridgeObjectRetain();
    uint64_t result = malloc(1uLL);
    if (!result) {
      break;
    }
    int v18 = result;
    type metadata accessor for ByteBuffer._Storage();
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 24) = v18;
    *(_DWORD *)(v2 + 16) = 1;
    *(void *)(v2 + 32) = j__malloc_1;
    *(void *)(v2 + 40) = j__realloc_1;
    *(void *)(v2 + 48) = sub_100373958;
    *(void *)(v2 + 56) = sub_100373968;
    swift_beginAccess();
    int v19 = *(_DWORD *)(v2 + 16);
    uint64_t v63 = v2;
    unint64_t v64 = 0;
    int v65 = v19;
    unsigned __int16 v66 = 0;
    char v67 = 0;
    long long v69 = xmmword_100602700;
    uint64_t v6 = &v63;
    ByteBuffer._setBytes(_:at:)((uint64_t)&v69, (uint64_t)&v69 + 1, 0);
    unint64_t v8 = HIDWORD(v64);
    uint64_t v21 = (HIDWORD(v64) + v20);
    if (__CFADD__(HIDWORD(v64), v20)) {
      goto LABEL_28;
    }
    uint64_t v22 = v63;
    uint64_t v23 = v64;
    int v24 = v65;
    unsigned __int16 v25 = v66;
    char v26 = v67;
    uint64_t v27 = v62;
    unint64_t v9 = v62[2];
    unint64_t v28 = v62[3];
    if (v9 >= v28 >> 1) {
      uint64_t v27 = sub_100383444((void *)(v28 > 1), v9 + 1, 1, v62);
    }
    void v27[2] = v9 + 1;
    uint64_t v62 = v27;
    int v29 = &v27[3 * v9];
    v29[4] = v22 | 0x8000000000000000;
    v29[5] = v23 | (v21 << 32);
    *((unsigned char *)v29 + 54) = v26;
    *((_WORD *)v29 + 26) = v25;
    *((_DWORD *)v29 + 12) = v24;
    uint64_t v30 = *(void *)(v4 + 16);
    if (!v30)
    {
LABEL_15:
      char v37 = ByteBufferAllocator.zeroCapacityWithDefaultAllocator.unsafeMutableAddressor();
      uint64_t v38 = *v37;
      unint64_t v1 = *((unsigned int *)v37 + 2);
      uint64_t v2 = *((unsigned int *)v37 + 3);
      int v39 = *((_DWORD *)v37 + 4);
      unsigned __int16 v40 = *((_WORD *)v37 + 10);
      char v41 = *((unsigned char *)v37 + 22);
      swift_retain();
      goto LABEL_19;
    }
LABEL_10:
    if (v30)
    {
      unsigned int v31 = (v30 - 1) | ((v30 - 1) >> 1) | (((v30 - 1) | ((v30 - 1) >> 1)) >> 2);
      unsigned int v32 = v31 | (v31 >> 4) | ((v31 | (v31 >> 4)) >> 8);
      int v33 = v32 | HIWORD(v32);
      BOOL v34 = __CFADD__(v33, 1);
      unsigned int v35 = v33 + 1;
      if (v34) {
        unsigned int v36 = -1;
      }
      else {
        unsigned int v36 = v35;
      }
    }
    else
    {
      unsigned int v36 = 0;
    }
    uint64_t result = malloc(v36);
    if (!result) {
      goto LABEL_31;
    }
    uint64_t v42 = result;
    type metadata accessor for ByteBuffer._Storage();
    uint64_t v38 = swift_allocObject();
    *(_DWORD *)(v38 + 16) = v36;
    *(void *)(v38 + 24) = v42;
    *(void *)(v38 + 32) = j__malloc_1;
    *(void *)(v38 + 40) = j__realloc_1;
    *(void *)(v38 + 48) = sub_100373958;
    *(void *)(v38 + 56) = sub_100373968;
    swift_beginAccess();
    unint64_t v1 = 0;
    uint64_t v2 = 0;
    unsigned __int16 v40 = 0;
    char v41 = 0;
    int v39 = *(_DWORD *)(v38 + 16);
LABEL_19:
    uint64_t v63 = v38;
    unint64_t v64 = __PAIR64__(v2, v1);
    int v65 = v39;
    unsigned __int16 v66 = v40;
    char v67 = v41;
    ByteBuffer._setBytes(_:at:)(v4 + 32, v4 + 32 + *(void *)(v4 + 16), v2);
    uint64_t v6 = v43;
    swift_bridgeObjectRelease();
    unint64_t v8 = HIDWORD(v64);
    int64_t v10 = (HIDWORD(v64) + v6);
    if (__CFADD__(HIDWORD(v64), v6))
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    uint64_t v44 = v63;
    uint64_t v45 = v64;
    int v46 = v65;
    unint64_t v1 = v66;
    char v47 = v67;
    unint64_t v16 = v62;
    unint64_t v49 = v62[2];
    unint64_t v48 = v62[3];
    if (v49 >= v48 >> 1) {
      unint64_t v16 = sub_100383444((void *)(v48 > 1), v49 + 1, 1, v62);
    }
    uint64_t v16[2] = v49 + 1;
    int v50 = &v16[3 * v49];
    v50[4] = v44;
    v50[5] = v45 | (v10 << 32);
    *((unsigned char *)v50 + 54) = v47;
    *((_WORD *)v50 + 26) = v1;
    *((_DWORD *)v50 + 12) = v46;
    v15 += 16;
    unint64_t v9 = v61 - 1;
    if (v61 == 1)
    {
      uint64_t v12 = v16;
      sub_10001D550((uint64_t)&v68);
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1003737F0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v2 = sub_1005E1E70();
    if (!v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      return a1;
    }
    unint64_t v4 = v2;
    unint64_t v5 = v3;
    if (v2 == 2573 && v3 == 0xE200000000000000 || (sub_1005E3290() & 1) != 0 || (sub_1005E1A00() & 1) == 0) {
      goto LABEL_15;
    }
    uint64_t result = sub_100374D14(v4, v5);
    if ((result & 0x100000000) != 0) {
      goto LABEL_20;
    }
    if ((result & 0xFFFFFF80) != 0)
    {
LABEL_15:
      swift_bridgeObjectRelease();
LABEL_16:
      swift_bridgeObjectRelease();
      return 120;
    }
    uint64_t result = sub_100374D14(v4, v5);
    if ((result & 0x100000000) != 0) {
      goto LABEL_21;
    }
    int v7 = result;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v7 & 0xFFFFFF00) != 0) {
      break;
    }
    if (v7 - 47 <= 0xFFFFFFFD
      && v7 - 58 <= 0xFFFFFFF5
      && (v7 & 0xDFu) - 91 < 0xFFFFFFE6)
    {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

void sub_100373958(void *a1)
{
}

void *sub_100373968(void *__dst, const void *__src, size_t __len)
{
  if ((__len & 0x8000000000000000) == 0) {
    return memmove(__dst, __src, __len);
  }
  __break(1u);
  return __dst;
}

Swift::Int sub_100373974(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100375144(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1003741AC(v5);
  *a1 = v2;
  return result;
}

void sub_1003739E0(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_100375158(*(void *)(a1 + 16), a2, a3, a4, a5);
    swift_beginAccess();
    Swift::UInt32 v7 = 0;
  }
  else
  {
    Swift::UInt32 v7 = *((_DWORD *)ByteBufferAllocator.zeroCapacityWithDefaultAllocator.unsafeMutableAddressor() + 3);
    swift_retain();
  }
  ByteBuffer._setBytes(_:at:)(a1 + 32, a1 + 32 + v6, v7);
  if (__CFADD__(v7, v8)) {
    __break(1u);
  }
}

uint64_t sub_100373AD8(uint64_t a1, unint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v6 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_23;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9 < 0)
      {
        __break(1u);
        goto LABEL_22;
      }
LABEL_7:
      if (v9)
      {
        uint64_t v12 = sub_100375158(v9, a3, a4, a5, a6);
        uint64_t v13 = swift_beginAccess();
        int v14 = 0;
        Swift::UInt32 v15 = 0;
        __int16 v16 = 0;
        char v17 = 0;
        int v18 = *(_DWORD *)(v12 + 16);
      }
      else
      {
LABEL_9:
        int v19 = ByteBufferAllocator.zeroCapacityWithDefaultAllocator.unsafeMutableAddressor();
        uint64_t v12 = *v19;
        int v14 = *((_DWORD *)v19 + 2);
        Swift::UInt32 v15 = *((_DWORD *)v19 + 3);
        int v18 = *((_DWORD *)v19 + 4);
        __int16 v16 = *((_WORD *)v19 + 10);
        char v17 = *((unsigned char *)v19 + 22);
        uint64_t v13 = swift_retain();
      }
      uint64_t v28 = v12;
      int v29 = v14;
      Swift::UInt32 v30 = v15;
      int v31 = v18;
      __int16 v32 = v16;
      char v33 = v17;
      __chkstk_darwin(v13);
      switch((int)v6)
      {
        case 0:
          v27[0] = a1;
          LOWORD(v27[1]) = a2;
          BYTE2(v27[1]) = BYTE2(a2);
          BYTE3(v27[1]) = BYTE3(a2);
          BYTE4(v27[1]) = BYTE4(a2);
          BYTE5(v27[1]) = BYTE5(a2);
          int v20 = (char *)v27 + BYTE6(a2);
          goto LABEL_15;
        case 1:
          if (a1 >> 32 < (int)a1) {
            goto LABEL_25;
          }
          sub_100008D24(a1, a2);
          uint64_t v25 = sub_100375088((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1001FC670);
          sub_1000094D4(a1, a2);
          LODWORD(v23) = v25;
          if ((v25 & 0x100000000) != 0) {
LABEL_18:
          }
            LODWORD(v23) = sub_100373E70(a1, a2, v15);
          break;
        case 2:
          uint64_t v21 = *(void *)(a1 + 16);
          uint64_t v22 = *(void *)(a1 + 24);
          swift_retain();
          swift_retain();
          uint64_t v23 = sub_100375088(v21, v22, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1001FC670);
          swift_release();
          swift_release();
          if ((v23 & 0x100000000) == 0) {
            break;
          }
          goto LABEL_18;
        case 3:
          memset(v27, 0, 14);
          int v20 = (char *)v27;
LABEL_15:
          ByteBuffer._setBytes(_:at:)((uint64_t)v27, (uint64_t)v20, v15);
          LODWORD(v23) = v24;
          break;
        default:
          JUMPOUT(0);
      }
      if (__CFADD__(v30, v23))
      {
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
      }
      return v28;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_24;
    case 3uLL:
      goto LABEL_9;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_7;
  }
}

unint64_t sub_100373E70(uint64_t a1, unint64_t a2, Swift::UInt32 a3)
{
  uint64_t v4 = v3;
  uint64_t v31 = sub_1005E08D0();
  uint64_t v8 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  Swift::UInt32 v30 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((_UNKNOWN *)sub_10000566C(&qword_1007134D8) == &type metadata for Data) {
    goto LABEL_27;
  }
  unint64_t v10 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_25;
      }
      unint64_t v10 = HIDWORD(a1) - (int)a1;
LABEL_7:
      unsigned int v13 = a3 + v10;
      if (__CFADD__(a3, v10)) {
        goto LABEL_24;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        unsigned int v14 = *(_DWORD *)(v4 + 16);
        BOOL v15 = v13 >= v14;
        Swift::UInt32 v16 = v13 - v14;
        if (v15) {
          Swift::UInt32 v17 = v16;
        }
        else {
          Swift::UInt32 v17 = 0;
        }
        char v18 = variable initialization expression of Engine.isProcessingUpdates();
        ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(v17, v18 & 1);
      }
      uint64_t v29 = v8;
      sub_10037412C(v10, (uint64_t *)v4, a3);
      sub_100008D24(a1, a2);
      uint64_t v19 = sub_1005E0830();
      sub_1000094D4(a1, a2);
      sub_100375EB4();
      sub_1005E2950();
      if (v33 != 1)
      {
        Swift::UInt32 v21 = a3;
        uint64_t v22 = a3;
        while (1)
        {
          unint64_t v20 = v19 + 1;
          if (__OFADD__(v19, 1)) {
            break;
          }
          if ((v20 & 0x8000000000000000) != 0) {
            goto LABEL_22;
          }
          if (HIDWORD(v20)) {
            goto LABEL_23;
          }
          char v23 = v32;
          ByteBuffer._ensureAvailableCapacity(_:at:)(v19 + 1, v21);
          uint64_t v24 = *(void *)v4;
          uint64_t v25 = *(unsigned __int16 *)(v4 + 20);
          uint64_t v26 = *(unsigned __int8 *)(v4 + 22);
          swift_beginAccess();
          *(unsigned char *)(*(void *)(v24 + 24) + (v26 | (v25 << 8)) + v22 + v19) = v23;
          sub_1005E2950();
          ++v19;
          if (v33 == 1) {
            goto LABEL_20;
          }
        }
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        JUMPOUT(0x10037411CLL);
      }
      unint64_t v20 = v19;
LABEL_20:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
      return v20;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      unint64_t v10 = v11 - v12;
      if (!__OFSUB__(v11, v12)) {
        goto LABEL_7;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_7;
    default:
      unint64_t v10 = BYTE6(a2);
      goto LABEL_7;
  }
}

unint64_t sub_10037412C(unint64_t result, uint64_t *a2, Swift::UInt32 at)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (!HIDWORD(result))
  {
    ByteBuffer._ensureAvailableCapacity(_:at:)(result, at);
    uint64_t v5 = *a2;
    uint64_t v6 = *((unsigned __int16 *)a2 + 10);
    uint64_t v7 = *((unsigned __int8 *)a2 + 22);
    swift_beginAccess();
    return *(void *)(v5 + 24) + (v7 | (v6 << 8)) + at;
  }
  __break(1u);
  return result;
}

Swift::Int sub_1003741AC(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1005E3210(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_100374898(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  Swift::Int v105 = result;
  long long v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    long long __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_118:
      uint64_t v94 = v11;
      long long v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          long long v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_100374968((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v97 = sub_100374D00((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          long long v100 = &v97[16 * v96 + 32];
          *(void *)long long v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v104[2] = 0;
      return swift_bridgeObjectRelease();
    }
    long long v104 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1005E2150();
    *(void *)(v7 + 16) = v6;
    long long v104 = (void *)v7;
    long long __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v106 = v3;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    unsigned int v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    Swift::UInt32 v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1005E3290();
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    Swift::UInt32 v21 = (void *)(v103 + 16 * v20);
    do
    {
      char v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1005E3290()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      Swift::Int v22 = v20 + 1;
      Swift::Int v9 = v20;
      Swift::Int v20 = v22;
    }
    while (v22 < v3);
    Swift::Int v20 = v22;
LABEL_36:
    Swift::Int v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_100374C04(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_100374C04((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    int v43 = &v11[16 * v41 + 32];
    *(void *)int v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      Swift::Int v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          unint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          unint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        Swift::String v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_100374968((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        Swift::Int v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    Swift::Int v32 = v3;
  }
  else {
    Swift::Int v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      char v33 = (void *)(v10 + 16 * v9);
      do
      {
        BOOL v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        Swift::Int v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1005E3290() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      Swift::Int v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_100374898(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    Swift::Int v9 = (uint64_t *)(v7 + 16 * v4);
    Swift::Int result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (Swift::Int result = sub_1005E3290(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      Swift::Int result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100374968(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  Swift::Int v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      Swift::UInt32 v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      Swift::Int v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        char v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          Swift::Int v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_1005E3290() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)char v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)char v18 = *(_OWORD *)v19;
            }
            Swift::Int v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    unsigned int v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_1005E3290() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      Swift::Int v27 = v7;
    }
LABEL_50:
    sub_1000A6AA0((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

char *sub_100374C04(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_1007134E8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  unsigned int v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_100374D00(uint64_t a1)
{
  return sub_100374C04(0, *(void *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_100374D14(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_100374DF4(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = sub_1005E2C70();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        sub_1005E2D30();
      }
      unsigned int v5 = sub_1005E2D40();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_100374DF4(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_100374E94(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_100374F04(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_100374E94(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    uint64_t result = sub_1000C6E1C(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_100374F04(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      void v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v7 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_14;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = sub_1005E2D30();
        unint64_t v5 = v12;
        if (v12 == v10) {
          goto LABEL_14;
        }
      }
      if ((*(unsigned char *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          unint64_t v7 = v5 - 1;
          int v8 = *(unsigned char *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      unint64_t v7 = v5;
      return v7 << 16;
    }
    uint64_t v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v9 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v9)
    {
      return _StringGuts.foreignScalarAlign(_:)();
    }
  }
  return result;
}

void *sub_100375028(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1)
  {
    uint64_t result = a3(&v5, a1, a2 - a1);
    if (!v3) {
      return (void *)v5;
    }
  }
  else
  {
    uint64_t result = a3((uint64_t *)((char *)&v5 + 4), 0, 0);
    if (!v3) {
      return (void *)HIDWORD(v5);
    }
  }
  return result;
}

uint64_t sub_100375088(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = sub_1005E0550();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = sub_1005E0580();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = sub_1005E0570();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  unsigned int v16 = sub_100375028(v9, v15, a4);
  if (!v4) {
    return v16;
  }
  return v17;
}

uint64_t sub_100375144(uint64_t a1)
{
  return sub_10036070C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100375158(int a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    unsigned int v9 = (a1 - 1) | ((a1 - 1) >> 1) | (((a1 - 1) | ((a1 - 1) >> 1)) >> 2);
    unsigned int v10 = v9 | (v9 >> 4) | ((v9 | (v9 >> 4)) >> 8);
    int v11 = v10 | HIWORD(v10);
    BOOL v12 = __CFADD__(v11, 1);
    unsigned int v13 = v11 + 1;
    if (v12) {
      unsigned int v14 = -1;
    }
    else {
      unsigned int v14 = v13;
    }
  }
  else
  {
    unsigned int v14 = 0;
  }
  uint64_t result = a2(v14);
  if (result)
  {
    uint64_t v16 = result;
    type metadata accessor for ByteBuffer._Storage();
    uint64_t result = swift_allocObject();
    *(_DWORD *)(result + 16) = v14;
    *(void *)(result + 24) = v16;
    *(void *)(result + 32) = a2;
    *(void *)(result + 40) = a3;
    *(void *)(result + 48) = a4;
    *(void *)(result + 56) = a5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003751F8(uint64_t a1, uint64_t a2)
{
  uint64_t v101 = a1;
  uint64_t v3 = type metadata accessor for CommandStreamPart();
  uint64_t v99 = *(void *)(v3 - 8);
  uint64_t v100 = v3;
  __chkstk_darwin(v3);
  uint64_t v98 = (uint64_t)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E0970();
  uint64_t v93 = *(void *)(v5 - 8);
  uint64_t v94 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v90 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v91 = (char *)&v87 - v8;
  uint64_t v9 = type metadata accessor for ClientCommand(0);
  __chkstk_darwin(v9);
  int v11 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000566C(&qword_100712FD0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v92 = (uint64_t *)((char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v96 = (uint64_t)&v87 - v15;
  uint64_t v16 = sub_1005E1C90();
  __chkstk_darwin(v16 - 8);
  char v18 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000566C(&qword_1007134C8);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Command();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100372404(a2, (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) != 1)
  {
    sub_100375F0C((uint64_t)v21, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for Command);
    sub_10000566C(&qword_1007131B8);
    unint64_t v42 = (*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1005F6670;
    v136[0] = sub_1003925E8(v101 & 0xFFFFFFFF000000FFLL);
    sub_1005E1C70();
    sub_10000566C(&qword_1007132F8);
    sub_10036C014();
    uint64_t v44 = sub_1005E1C30();
    uint64_t v46 = v45;
    swift_bridgeObjectRelease();
    if (v46)
    {
      uint64_t v47 = (uint64_t *)(v43 + v42);
      uint64_t v48 = type metadata accessor for TaggedCommand();
      sub_100375DEC((uint64_t)v25, v43 + v42 + *(int *)(v48 + 20), (uint64_t (*)(void))type metadata accessor for Command);
      *uint64_t v47 = v44;
      v47[1] = v46;
      swift_storeEnumTagMultiPayload();
      sub_100375E54((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for Command);
      return v43;
    }
    goto LABEL_22;
  }
  unint64_t v89 = v18;
  sub_100007A48((uint64_t)v21, &qword_1007134C8);
  sub_100375DEC(a2, (uint64_t)v11, type metadata accessor for ClientCommand);
  if (swift_getEnumCaseMultiPayload() != 9)
  {
LABEL_24:
    sub_100375E54((uint64_t)v11, type metadata accessor for ClientCommand);
    sub_1005E2F20();
    __break(1u);
    swift_release();
    __break(1u);
    JUMPOUT(0x100375C50);
  }
  uint64_t v26 = *(void *)v11;
  uint64_t v27 = *((unsigned int *)v11 + 2);
  uint64_t v28 = sub_10000566C(&qword_100713008);
  uint64_t v29 = (uint64_t)&v11[*(int *)(v28 + 64)];
  uint64_t v30 = (uint64_t *)&v11[*(int *)(v28 + 80)];
  uint64_t v32 = *v30;
  unint64_t v31 = v30[1];
  uint64_t v95 = v32;
  unint64_t v97 = v31;
  uint64_t v33 = v96;
  sub_10001FDF0(v29, v96, &qword_100712FD0);
  uint64_t v34 = swift_bridgeObjectRetain();
  uint64_t v35 = sub_1003771A8(v34);
  swift_bridgeObjectRelease();
  v136[0] = (uint64_t)v35;
  sub_100373974(v136);
  uint64_t v87 = v26;
  uint64_t v88 = v27;
  swift_bridgeObjectRelease();
  uint64_t v36 = v136[0];
  uint64_t v37 = (uint64_t)v92;
  sub_100375C70(v33, (uint64_t)v92);
  uint64_t v39 = v93;
  uint64_t v38 = v94;
  int v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v37, 1, v94);
  if (v40 == 1)
  {
    uint64_t v41 = 0;
  }
  else
  {
    unint64_t v49 = v91;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v91, v37, v38);
    uint64_t v50 = v90;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v90, v49, v38);
    uint64_t v41 = ServerMessageDate.init(_:)(v50);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v49, v38);
  }
  uint64_t v51 = sub_100384818((uint64_t)_swiftEmptyArrayStorage);
  AppendOptions.init(flagList:internalDate:extensions:)(v36, v41, v40 == 1, v51, v52, v53, (uint64_t)v136);
  int v11 = (char *)v136[0];
  uint64_t v54 = v136[1];
  uint64_t v55 = v137;
  uint64_t v56 = v138;
  uint64_t v57 = v139;
  uint64_t v58 = 0;
  switch(v97 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v95), v95))
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v58 = HIDWORD(v95) - (int)v95;
LABEL_13:
      uint64_t v93 = v58;
      uint64_t v94 = *((void *)&v138 + 1);
      long long v103 = xmmword_1005F66A0;
      *(void *)&long long v141 = sub_1003925E8(v101 & 0xFFFFFFFF000000FFLL);
      sub_1005E1C70();
      sub_10000566C(&qword_1007132F8);
      sub_10036C014();
      uint64_t v62 = sub_1005E1C30();
      uint64_t v64 = v63;
      swift_bridgeObjectRelease();
      if (!v64) {
        goto LABEL_23;
      }
      uint64_t v92 = &v104;
      uint64_t v104 = v62;
      uint64_t v105 = v64;
      uint64_t v106 = v87;
      uint64_t v107 = v88;
      uint64_t v109 = 0;
      uint64_t v110 = 0;
      uint64_t v108 = 0;
      v111[0] = 0;
      v144[0] = v11;
      long long v141 = v138;
      sub_10001FDF0((uint64_t)&v141, (uint64_t)v143, &qword_1007134D0);
      uint64_t v142 = *((void *)&v141 + 1);
      uint64_t v140 = v57;
      uint64_t v112 = v11;
      uint64_t v113 = v54;
      uint64_t v114 = v55;
      uint64_t v115 = v56;
      uint64_t v116 = v94;
      uint64_t v117 = v57;
      uint64_t v118 = v93;
      char v119 = 32;
      sub_10002292C((uint64_t)v144);
      sub_1000811BC((uint64_t)v143);
      sub_1000811BC((uint64_t)&v142);
      sub_1000811BC((uint64_t)&v140);
      uint64_t v65 = v95;
      unint64_t v66 = v97;
      sub_100008D24(v95, v97);
      uint64_t v67 = sub_100373AD8(v65, v66, (uint64_t (*)(void))j__malloc_1, (uint64_t)j__realloc_1, (uint64_t)sub_100373958, (uint64_t)sub_100373968);
      uint64_t v69 = v68;
      uint64_t v71 = v70;
      sub_1000094D4(v65, v66);
      uint64_t v120 = v67;
      uint64_t v121 = v69;
      uint64_t v122 = v71 & 0xFFFFFFFFFFFFFFLL;
      long long v123 = 0u;
      long long v124 = 0u;
      char v125 = 64;
      long long v126 = 0u;
      long long v127 = 0u;
      long long v128 = 0u;
      uint64_t v129 = 0;
      char v130 = -64;
      uint64_t v131 = 2;
      long long v132 = 0u;
      long long v133 = 0u;
      long long v134 = 0u;
      char v135 = -64;
      long long v102 = _swiftEmptyArrayStorage;
      sub_10035FF18(0, 5, 0);
      uint64_t v72 = 0;
      uint64_t v43 = (uint64_t)v102;
      uint64_t v73 = v98;
      do
      {
        uint64_t v101 = v43;
        uint64_t v74 = *(uint64_t *)((char *)&v104 + v72);
        uint64_t v75 = *(uint64_t *)((char *)&v105 + v72);
        uint64_t v76 = *(uint64_t *)((char *)&v106 + v72);
        uint64_t v77 = *(uint64_t *)((char *)&v107 + v72);
        uint64_t v78 = *(uint64_t *)((char *)&v108 + v72);
        uint64_t v79 = *(uint64_t *)((char *)&v109 + v72);
        uint64_t v80 = *(void *)&v111[v72 - 8];
        *(void *)uint64_t v73 = v74;
        *(void *)(v73 + 8) = v75;
        *(void *)(v73 + 16) = v76;
        *(void *)(v73 + 24) = v77;
        *(void *)(v73 + 32) = v78;
        *(void *)(v73 + 40) = v79;
        *(void *)(v73 + 48) = v80;
        unsigned __int8 v81 = v111[v72];
        *(unsigned char *)(v73 + 56) = v81;
        swift_storeEnumTagMultiPayload();
        uint64_t v82 = v75;
        uint64_t v43 = v101;
        sub_100375CD8(v74, v82, v76, v77, v78, v79, v80, v81);
        long long v102 = (void *)v43;
        unint64_t v84 = *(void *)(v43 + 16);
        unint64_t v83 = *(void *)(v43 + 24);
        if (v84 >= v83 >> 1)
        {
          sub_10035FF18(v83 > 1, v84 + 1, 1);
          uint64_t v43 = (uint64_t)v102;
        }
        *(void *)(v43 + 16) = v84 + 1;
        uint64_t v85 = v98;
        sub_100375F0C(v98, v43+ ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80))+ *(void *)(v99 + 72) * v84, (uint64_t (*)(void))type metadata accessor for CommandStreamPart);
        v72 += 64;
        uint64_t v73 = v85;
      }
      while (v72 != 320);
      sub_1000094D4(v95, v97);
      sub_10001D550((uint64_t)v144);
      sub_1000811E8((uint64_t)v143);
      sub_1000811E8((uint64_t)&v142);
      sub_1000811E8((uint64_t)&v140);
      sub_100007A48(v96, &qword_100712FD0);
      swift_arrayDestroy();
      return v43;
    case 2uLL:
      uint64_t v60 = *(void *)(v95 + 16);
      uint64_t v59 = *(void *)(v95 + 24);
      BOOL v61 = __OFSUB__(v59, v60);
      uint64_t v58 = v59 - v60;
      if (!v61) {
        goto LABEL_13;
      }
      goto LABEL_21;
    case 3uLL:
      goto LABEL_13;
    default:
      uint64_t v58 = BYTE6(v97);
      goto LABEL_13;
  }
}

ValueMetadata *type metadata accessor for ClientCommandEncoder()
{
  return &type metadata for ClientCommandEncoder;
}

uint64_t sub_100375C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100712FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100375CD8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  switch(a8 >> 5)
  {
    case 0:
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 1:
    case 3:
      swift_retain();
      swift_retain();
      swift_retain();
LABEL_7:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 2:
    case 4:
      uint64_t result = swift_retain();
      break;
    case 5:
      uint64_t result = sub_100258100(result, a2, a3, SHIBYTE(a3));
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100375DEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100375E54(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100375EB4()
{
  unint64_t result = qword_1007134E0;
  if (!qword_1007134E0)
  {
    sub_1005E08D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007134E0);
  }
  return result;
}

uint64_t sub_100375F0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t Namespace.hash(into:)(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1005E3410(v3);
  if (v3)
  {
    uint64_t v4 = (Swift::UInt8 *)(a2 + 32);
    do
    {
      Swift::UInt8 v5 = *v4++;
      sub_1005E3420(v5);
      --v3;
    }
    while (v3);
  }
  return sub_1005E1A10();
}

uint64_t static Mailbox.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(a1, a4)) {
    return 0;
  }
  if (a2 == a5 && a3 == a6) {
    return 1;
  }
  return sub_1005E3290();
}

Swift::Int Namespace.hashValue.getter(uint64_t a1)
{
  sub_1005E33F0();
  Swift::UInt v2 = *(void *)(a1 + 16);
  sub_1005E3410(v2);
  if (v2)
  {
    Swift::UInt v3 = (Swift::UInt8 *)(a1 + 32);
    do
    {
      Swift::UInt8 v4 = *v3++;
      sub_1005E3420(v4);
      --v2;
    }
    while (v2);
  }
  sub_1005E1A10();
  return sub_1005E3470();
}

Swift::Int sub_100376114()
{
  return Namespace.hashValue.getter(*v0);
}

uint64_t sub_100376120()
{
  uint64_t v1 = *v0;
  Swift::UInt v2 = *(void *)(*v0 + 16);
  sub_1005E3410(v2);
  if (v2)
  {
    Swift::UInt v3 = (Swift::UInt8 *)(v1 + 32);
    do
    {
      Swift::UInt8 v4 = *v3++;
      sub_1005E3420(v4);
      --v2;
    }
    while (v2);
  }
  return sub_1005E1A10();
}

Swift::Int sub_10037619C()
{
  uint64_t v1 = *v0;
  sub_1005E33F0();
  Swift::UInt v2 = *(void *)(v1 + 16);
  sub_1005E3410(v2);
  if (v2)
  {
    Swift::UInt v3 = (Swift::UInt8 *)(v1 + 32);
    do
    {
      Swift::UInt8 v4 = *v3++;
      sub_1005E3420(v4);
      --v2;
    }
    while (v2);
  }
  sub_1005E1A10();
  return sub_1005E3470();
}

uint64_t sub_100376224(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(*a1, *a2)) {
    return 0;
  }
  if (v2 == v4 && v3 == v5) {
    return 1;
  }
  return sub_1005E3290();
}

void *Namespace.init(_:)(uint64_t a1)
{
  sub_10037773C(a1 + 24, (uint64_t)v10);
  sub_10037773C((uint64_t)v10, (uint64_t)&v11);
  uint64_t v2 = v12;
  if (v12)
  {
    unint64_t v3 = *(void *)(a1 + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 16);
    uint64_t v5 = *(unsigned __int16 *)(a1 + 20);
    uint64_t v6 = *(unsigned __int8 *)(a1 + 22);
    sub_100057B18((uint64_t)v10);
    uint64_t v7 = swift_retain();
    unint64_t v8 = MailboxName.init(_:)(v7, v3, v4 | (v5 << 32) | (v6 << 48));
    uint64_t v2 = _s13IMAP2Protocol9NamespaceV6prefix9separatorACSays5UInt8VG_SJtcfC_0(v8);
  }
  sub_1001F3200(a1);
  return v2;
}

BOOL Namespace.hasPrefix.getter(uint64_t a1)
{
  return *(void *)(a1 + 16) != 0;
}

Swift::Bool __swiftcall Namespace.contains(_:)(NIOIMAPCore2::MailboxName a1)
{
  Swift::UInt32 value = a1._hashValue._value;
  Swift::UInt64 rawValue = a1.bytes._rawValue;
  if (sub_10037641C(v1, (uint64_t)a1.bytes._rawValue)) {
    return 1;
  }
  uint64_t v5 = MailboxName.inbox.unsafeMutableAddressor();
  if ((value | ((unint64_t)value << 32)) != (*((unsigned int *)v5 + 2) | ((unint64_t)*((unsigned int *)v5 + 2) << 32))) {
    return 0;
  }
  uint64_t v6 = *v5;
  return sub_100357CFC((uint64_t)rawValue, v6);
}

uint64_t sub_10037641C(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    unint64_t v3 = *(void *)(result + 16);
    if (!v3) {
      return 1;
    }
    if (*(unsigned __int8 *)(a2 + 32) != *(unsigned __int8 *)(result + 32)) {
      return 0;
    }
    uint64_t v4 = 0;
    uint64_t v5 = result + 33;
    unint64_t v6 = v3 - 1;
    while (v2 - 1 != v4)
    {
      unint64_t result = v6 == v4;
      if (v6 != v4)
      {
        int v7 = *(unsigned __int8 *)(a2 + 33 + v4);
        int v8 = *(unsigned __int8 *)(v5 + v4++);
        if (v7 == v8) {
          continue;
        }
      }
      return result;
    }
  }
  else
  {
    unint64_t v3 = *(void *)(result + 16);
  }
  if (v2 == v3) {
    return 1;
  }
  if (v2 < v3) {
    return 0;
  }
  __break(1u);
  return result;
}

NIOIMAPCore2::MailboxName __swiftcall Namespace.addPrefix(to:)(NIOIMAPCore2::MailboxName to)
{
  v3._Swift::UInt64 rawValue = v1;
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_10035FD34(v2);
  return MailboxName.init(_:)(v3);
}

NIOIMAPCore2::MailboxPath __swiftcall Namespace.addPrefix(to:)(NIOIMAPCore2::MailboxPath to)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  v6._Swift::UInt64 rawValue = v1;
  Swift::UInt32 value = to.name._hashValue._value;
  Swift::UInt64 rawValue = to.name.bytes._rawValue;
  Swift::UInt8 pathSeparator = to._pathSeparator;
  uint64_t v10 = sub_1000B2114(to._pathSeparator);
  if (!v11) {
    goto LABEL_10;
  }
  if (v10 != v5 || v11 != v4)
  {
    char v12 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_6;
    }
LABEL_10:
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRetain();
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_10035FD34(v13);
  NIOIMAPCore2::MailboxName v19 = MailboxName.init(_:)(v6);
  Swift::UInt64 rawValue = v19.bytes._rawValue;
  Swift::UInt32 value = v19._hashValue._value;
  sub_1000B2114(pathSeparator);
  if (!v14) {
    goto LABEL_11;
  }
  if ((sub_1005E19E0() & 0x100) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1003777A4();
    swift_allocError();
    *char v18 = 0xD000000000000029;
    v18[1] = 0x80000001005E62B0;
    swift_willThrow();
    uint64_t v17 = (void *)swift_unexpectedError();
    __break(1u);
    goto LABEL_14;
  }
  __int16 v15 = sub_1005E19E0();
  swift_bridgeObjectRelease();
  if ((v15 & 0x100) != 0) {
LABEL_11:
  }
    Swift::UInt8 pathSeparator = 0;
  else {
    Swift::UInt8 pathSeparator = v15;
  }
LABEL_12:
  unint64_t v16 = value | ((unint64_t)pathSeparator << 32);
  uint64_t v17 = rawValue;
LABEL_14:
  result.name._hashValue._Swift::UInt32 value = v16;
  result._Swift::UInt8 pathSeparator = BYTE4(v16);
  result.name.bytes._Swift::UInt64 rawValue = v17;
  return result;
}

NIOIMAPCore2::MailboxName __swiftcall Namespace.removePrefix(_:)(NIOIMAPCore2::MailboxName a1)
{
  uint64_t v2 = v1;
  Swift::UInt32 value = a1._hashValue._value;
  Swift::UInt64 rawValue = a1.bytes._rawValue;
  if (sub_10037641C(v1, (uint64_t)a1.bytes._rawValue))
  {
    uint64_t v5 = sub_100077A30(*(void *)(v2 + 16), (uint64_t)rawValue);
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    unint64_t v11 = v10;
    if (v10)
    {
      sub_1005E3300();
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v13 = (void *)swift_dynamicCastClass();
      if (!v13)
      {
        swift_unknownObjectRelease();
        uint64_t v13 = _swiftEmptyArrayStorage;
      }
      uint64_t v14 = v13[2];
      swift_release();
      if (__OFSUB__(v11 >> 1, v9))
      {
        __break(1u);
      }
      else if (v14 == (v11 >> 1) - v9)
      {
        char v12 = (void *)swift_dynamicCastClass();
        if (!v12)
        {
          swift_unknownObjectRelease();
          char v12 = _swiftEmptyArrayStorage;
        }
        goto LABEL_12;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    char v12 = sub_100377290(v5, v7, v9, v11);
LABEL_12:
    swift_unknownObjectRelease();
    NIOIMAPCore2::MailboxName v17 = MailboxName.init(_:)((Swift::OpaquePointer)v12);
    Swift::UInt64 rawValue = v17.bytes._rawValue;
    Swift::UInt32 value = v17._hashValue._value;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
LABEL_13:
  __int16 v15 = rawValue;
  Swift::UInt32 v16 = value;
  result.bytes._Swift::UInt64 rawValue = v15;
  result._hashValue._Swift::UInt32 value = v16;
  return result;
}

NIOIMAPCore2::MailboxPath __swiftcall Namespace.removePrefix(_:)(NIOIMAPCore2::MailboxPath a1)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v6 = v1;
  Swift::UInt32 value = a1.name._hashValue._value;
  Swift::UInt64 rawValue = a1.name.bytes._rawValue;
  Swift::UInt8 pathSeparator = a1._pathSeparator;
  uint64_t v10 = sub_1000B2114(a1._pathSeparator);
  if (!v11) {
    goto LABEL_10;
  }
  if (v10 == v5 && v11 == v4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  char v12 = sub_1005E3290();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
LABEL_10:
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
LABEL_6:
  if (sub_10037641C(v6, (uint64_t)rawValue))
  {
    uint64_t v13 = sub_100077A30(*(void *)(v6 + 16), (uint64_t)rawValue);
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    unint64_t v19 = v18;
    if (v18)
    {
      sub_1005E3300();
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v21 = (void *)swift_dynamicCastClass();
      if (!v21)
      {
        swift_unknownObjectRelease();
        uint64_t v21 = _swiftEmptyArrayStorage;
      }
      uint64_t v22 = v21[2];
      swift_release();
      if (__OFSUB__(v19 >> 1, v17))
      {
        __break(1u);
      }
      else if (v22 == (v19 >> 1) - v17)
      {
        uint64_t v20 = (void *)swift_dynamicCastClass();
        if (!v20)
        {
          swift_unknownObjectRelease();
          uint64_t v20 = _swiftEmptyArrayStorage;
        }
        goto LABEL_18;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v20 = sub_100377290(v13, v15, v17, v19);
LABEL_18:
    swift_unknownObjectRelease();
    NIOIMAPCore2::MailboxName v28 = MailboxName.init(_:)((Swift::OpaquePointer)v20);
    Swift::UInt64 rawValue = v28.bytes._rawValue;
    Swift::UInt32 value = v28._hashValue._value;
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
LABEL_19:
  sub_1000B2114(pathSeparator);
  if (!v23) {
    goto LABEL_23;
  }
  if ((sub_1005E19E0() & 0x100) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1003777A4();
    swift_allocError();
    *uint64_t v27 = 0xD000000000000029;
    v27[1] = 0x80000001005E62B0;
    swift_willThrow();
    uint64_t v26 = (void *)swift_unexpectedError();
    __break(1u);
    goto LABEL_28;
  }
  __int16 v24 = sub_1005E19E0();
  swift_bridgeObjectRelease();
  if ((v24 & 0x100) != 0) {
LABEL_23:
  }
    Swift::UInt8 pathSeparator = 0;
  else {
    Swift::UInt8 pathSeparator = v24;
  }
LABEL_24:
  unint64_t v25 = value | ((unint64_t)pathSeparator << 32);
  uint64_t v26 = rawValue;
LABEL_28:
  result.name._hashValue._Swift::UInt32 value = v25;
  result._Swift::UInt8 pathSeparator = BYTE4(v25);
  result.name.bytes._Swift::UInt64 rawValue = v26;
  return result;
}

Swift::Bool __swiftcall Namespace.isNotes(_:)(NIOIMAPCore2::MailboxName a1)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v6 = v1;
  Swift::UInt64 rawValue = a1.bytes._rawValue;
  if ((sub_10037641C(v1, (uint64_t)a1.bytes._rawValue) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    goto LABEL_13;
  }
  uint64_t v8 = sub_100077A30(*(void *)(v6 + 16), (uint64_t)rawValue);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  unint64_t v14 = v13;
  if (v13)
  {
    sub_1005E3300();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v16 = (void *)swift_dynamicCastClass();
    if (!v16)
    {
      swift_unknownObjectRelease();
      uint64_t v16 = _swiftEmptyArrayStorage;
    }
    uint64_t v17 = v16[2];
    swift_release();
    if (__OFSUB__(v14 >> 1, v12))
    {
      __break(1u);
    }
    else if (v17 == (v14 >> 1) - v12)
    {
      uint64_t v15 = (void *)swift_dynamicCastClass();
      if (!v15)
      {
        swift_unknownObjectRelease();
        uint64_t v15 = _swiftEmptyArrayStorage;
      }
      goto LABEL_12;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v15 = sub_100377290(v8, v10, v12, v14);
LABEL_12:
  swift_unknownObjectRelease();
  Swift::UInt64 rawValue = (void *)MailboxName.init(_:)((Swift::OpaquePointer)v15);
LABEL_13:
  if (sub_100376E38(0x7365746F4EuLL, 0xE500000000000000, (uint64_t)rawValue))
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v23._uint64_t countAndFlagsBits = v5;
    v23._object = v4;
    sub_1005E1E30(v23);
    sub_10037706C(5, (uint64_t)rawValue);
    char v22 = sub_1003777F8(0x7365746F4EuLL, 0xE500000000000000, v19, v20, v21);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return v22 & 1;
  }
}

uint64_t sub_100376C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(a4 + 16);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = a4 + 32;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t result = swift_retain();
  unint64_t v9 = 0;
  uint64_t v10 = (uint64_t *)(a2 + 40);
  while (v9 == v5)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    unint64_t v9 = v5;
    if (!v6) {
      goto LABEL_19;
    }
LABEL_10:
    uint64_t v16 = *(v10 - 1);
    uint64_t v14 = *v10;
    swift_bridgeObjectRetain();
    if (!v12) {
      goto LABEL_19;
    }
    if (!v14) {
      goto LABEL_16;
    }
    if (v13 == v16 && v12 == v14)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v11 = sub_1005E3290();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        return 0;
      }
    }
    --v6;
    v10 += 2;
  }
  if (v9 >= v5)
  {
    __break(1u);
    return result;
  }
  uint64_t v15 = (uint64_t *)(v7 + 16 * v9);
  uint64_t v13 = *v15;
  uint64_t v12 = v15[1];
  swift_bridgeObjectRetain();
  if (v6)
  {
    ++v9;
    goto LABEL_10;
  }
  if (v12)
  {
LABEL_16:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_20;
  }
  uint64_t v14 = 0;
LABEL_19:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (v14)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
  return 1;
}

unint64_t sub_100376E38(unint64_t result, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = result;
  unint64_t v5 = 0;
  unint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v7 = result & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v23 = a3 + 32;
  uint64_t v24 = result;
  unint64_t v25 = v7;
  uint64_t v8 = 4 * v7;
  uint64_t v9 = (result >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v9) = 1;
  }
  uint64_t v10 = 4 << v9;
  uint64_t v19 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v20 = a2 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v11 = 15;
  uint64_t v21 = 4 << v9;
  uint64_t v22 = v8;
  while (1)
  {
    if (v5 == v6)
    {
      int v12 = 0;
      unint64_t v13 = v6;
      goto LABEL_10;
    }
    if (v5 >= v6) {
      break;
    }
    int v12 = *(unsigned __int8 *)(v23 + v5);
    unint64_t v13 = v5 + 1;
LABEL_10:
    unint64_t v14 = v11 >> 14;
    BOOL v15 = v11 >> 14 == v8;
    if (v11 >> 14 == v8)
    {
      unsigned __int8 v16 = 0;
      if (v5 == v6) {
        return v15;
      }
      goto LABEL_30;
    }
    unint64_t v17 = v11 & 0xC;
    uint64_t result = v11;
    if (v17 == v10)
    {
      uint64_t result = sub_1000C6E1C(v11, v24, a2);
      uint64_t v10 = v21;
      unint64_t v4 = v24;
    }
    unint64_t v18 = result >> 16;
    if (result >> 16 >= v25) {
      goto LABEL_34;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_1005E1EC0();
      uint64_t v10 = v21;
      unint64_t v4 = v24;
      unsigned __int8 v16 = result;
      if (v17 == v21) {
        goto LABEL_27;
      }
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v26[0] = v4;
      v26[1] = v20;
      unsigned __int8 v16 = *((unsigned char *)v26 + v18);
      if (v17 == v10) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t result = v19;
      if ((v4 & 0x1000000000000000) == 0)
      {
        uint64_t result = sub_1005E2D30();
        uint64_t v10 = v21;
        unint64_t v4 = v24;
      }
      unsigned __int8 v16 = *(unsigned char *)(result + v18);
      if (v17 == v10)
      {
LABEL_27:
        uint64_t result = sub_1000C6E1C(v11, v24, a2);
        uint64_t v10 = v21;
        unint64_t v4 = v24;
        unint64_t v11 = result;
        uint64_t v8 = v22;
        if ((a2 & 0x1000000000000000) == 0)
        {
LABEL_24:
          unint64_t v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
          if (v5 == v6) {
            return v15;
          }
          goto LABEL_30;
        }
        goto LABEL_28;
      }
    }
    uint64_t v8 = v22;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_24;
    }
LABEL_28:
    if (v25 <= v11 >> 16) {
      goto LABEL_35;
    }
    uint64_t result = sub_1005E1E90();
    uint64_t v10 = v21;
    unint64_t v4 = v24;
    unint64_t v11 = result;
    if (v5 == v6) {
      return v15;
    }
LABEL_30:
    BOOL v15 = 0;
    if (v14 != v8)
    {
      unint64_t v5 = v13;
      if (v12 == v16) {
        continue;
      }
    }
    return v15;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

int64_t sub_10037706C(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

void *sub_1003770B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000566C(&qword_100713520);
  unint64_t v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  uint64_t v5 = sub_1003773EC((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_10003BC80();
  if (v5 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_1003771A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000566C(&qword_1007131C8);
  unint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_100039BA8((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_10003BC80();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_100377290(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  int64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    if (v5 <= 0)
    {
      uint64_t v8 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        uint64_t v10 = v8 + 4;
        if (a2 + a3 < (unint64_t)v8 + v5 + 32 && (unint64_t)v10 < a2 + a3 + v5) {
          goto LABEL_17;
        }
        memcpy(v10, (const void *)(a2 + a3), v5);
        return v8;
      }
    }
    else
    {
      sub_10000566C(&qword_100713518);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      void v8[2] = v5;
      v8[3] = 2 * v9 - 64;
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = (void *)sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1003773EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *int64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v25 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 48) + 24 * v16;
    int v21 = *(_DWORD *)(v20 + 16);
    __int16 v22 = *(_WORD *)(v20 + 20);
    char v23 = *(unsigned char *)(v20 + 22);
    uint64_t v24 = *(void *)(v20 + 8);
    *(void *)uint64_t v11 = *(void *)v20;
    *(void *)(v11 + 8) = v24;
    *(_DWORD *)(v11 + 16) = v21;
    *(_WORD *)(v11 + 20) = v22;
    *(unsigned char *)(v11 + 22) = v23;
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    v11 += 24;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v25;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *_s13IMAP2Protocol9NamespaceV6prefix9separatorACSays5UInt8VG_SJtcfC_0(uint64_t a1)
{
  uint64_t v1 = (void *)a1;
  if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(a1, (uint64_t)_swiftEmptyArrayStorage))
  {
    swift_bridgeObjectRetain();
    __int16 v2 = sub_1005E19E0();
    if ((v2 & 0x100) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      unsigned __int8 v3 = v2;
      uint64_t v4 = v1[2];
      if (v4)
      {
        int v5 = *((unsigned __int8 *)v1 + v4 + 31);
        swift_bridgeObjectRelease();
        if (v5 == v3) {
          return v1;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v1 = sub_100383094(0, v1[2] + 1, 1, v1);
      }
      unint64_t v6 = v1[2];
      unint64_t v7 = v1[3];
      unint64_t v8 = v6 + 1;
      if (v6 >= v7 >> 1)
      {
        unint64_t v13 = v6 + 1;
        uint64_t v10 = v1;
        unint64_t v11 = v1[2];
        int64_t v12 = sub_100383094((void *)(v7 > 1), v6 + 1, 1, v10);
        unint64_t v6 = v11;
        unint64_t v8 = v13;
        uint64_t v1 = v12;
      }
      v1[2] = v8;
      *((unsigned char *)v1 + v6 + 32) = v3;
    }
  }
  return v1;
}

uint64_t sub_10037773C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100713500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003777A4()
{
  unint64_t result = qword_100713508;
  if (!qword_100713508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713508);
  }
  return result;
}

unint64_t sub_1003777F8(unint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5 = a4;
  unint64_t v7 = result;
  int64_t v8 = a5 >> 1;
  uint64_t v9 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v9 = result & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v27 = result;
  unint64_t v28 = v9;
  uint64_t v10 = 4 * v9;
  uint64_t v11 = (result >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v11) = 1;
  }
  uint64_t v12 = 4 << v11;
  uint64_t v21 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a2 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v13 = 15;
  uint64_t v23 = 4 << v11;
  uint64_t v24 = v10;
  while (1)
  {
    if (v5 == v8)
    {
      int v14 = 0;
      uint64_t v15 = v8;
      goto LABEL_11;
    }
    if (v5 < a4 || v5 >= v8) {
      break;
    }
    int v14 = *(unsigned __int8 *)(a3 + v5);
    uint64_t v15 = v5 + 1;
LABEL_11:
    unint64_t v16 = v13 >> 14;
    BOOL v17 = v13 >> 14 == v10;
    if (v13 >> 14 == v10)
    {
      unsigned __int8 v18 = 0;
      if (v5 == v8) {
        return v17;
      }
      goto LABEL_31;
    }
    unint64_t v19 = v13 & 0xC;
    unint64_t result = v13;
    if (v19 == v12)
    {
      unint64_t result = sub_1000C6E1C(v13, v27, a2);
      uint64_t v12 = v23;
      unint64_t v7 = v27;
    }
    unint64_t v20 = result >> 16;
    if (result >> 16 >= v28) {
      goto LABEL_35;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1005E1EC0();
      uint64_t v12 = v23;
      unint64_t v7 = v27;
      unsigned __int8 v18 = result;
      if (v19 == v23) {
        goto LABEL_28;
      }
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v29[0] = v7;
      v29[1] = v22;
      unsigned __int8 v18 = *((unsigned char *)v29 + v20);
      if (v19 == v12) {
        goto LABEL_28;
      }
    }
    else
    {
      unint64_t result = v21;
      if ((v7 & 0x1000000000000000) == 0)
      {
        unint64_t result = sub_1005E2D30();
        uint64_t v12 = v23;
        unint64_t v7 = v27;
      }
      unsigned __int8 v18 = *(unsigned char *)(result + v20);
      if (v19 == v12)
      {
LABEL_28:
        unint64_t result = sub_1000C6E1C(v13, v27, a2);
        uint64_t v12 = v23;
        unint64_t v7 = v27;
        unint64_t v13 = result;
        uint64_t v10 = v24;
        if ((a2 & 0x1000000000000000) == 0)
        {
LABEL_25:
          unint64_t v13 = (v13 & 0xFFFFFFFFFFFF0000) + 65540;
          if (v5 == v8) {
            return v17;
          }
          goto LABEL_31;
        }
        goto LABEL_29;
      }
    }
    uint64_t v10 = v24;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_25;
    }
LABEL_29:
    if (v28 <= v13 >> 16) {
      goto LABEL_36;
    }
    unint64_t result = sub_1005E1E90();
    uint64_t v12 = v23;
    unint64_t v7 = v27;
    unint64_t v13 = result;
    if (v5 == v8) {
      return v17;
    }
LABEL_31:
    BOOL v17 = 0;
    if (v16 != v10)
    {
      uint64_t v5 = v15;
      if (v14 == v18) {
        continue;
      }
    }
    return v17;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_100377A40()
{
  unint64_t result = qword_100713510;
  if (!qword_100713510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713510);
  }
  return result;
}

void *sub_100377A98(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Namespace(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for Namespace(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for Namespace(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Namespace()
{
  return &type metadata for Namespace;
}

uint64_t sub_100377BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 32);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return 0;
  }
  for (unint64_t i = (void *)(v7 + 48); ; i += 3)
  {
    if (*i && *(i - 2) == a1)
    {
      BOOL v10 = *(i - 1) == a2 && *i == a3;
      if (v10 || (sub_1005E3290() & 1) != 0) {
        break;
      }
    }
    if (!--v8) {
      return 0;
    }
  }
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100377C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (uint64_t *)(v3 + 32);
  swift_beginAccess();
  Swift::UInt64 v8 = *(void *)(*(void *)(v3 + 32) + 16);
  uint64_t v9 = (void *)(v3 + 16);
  swift_beginAccess();
  if (v8)
  {
    Swift::UInt64 v3 = sub_100377F28(v8);
    swift_endAccess();
    swift_beginAccess();
    uint64_t v9 = (void *)*v7;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t *v7 = (uint64_t)v9;
    if (result)
    {
      if ((v3 & 0x8000000000000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      __break(1u);
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = (uint64_t)sub_10036A160(v9);
  uint64_t v9 = (void *)result;
  uint64_t *v7 = result;
  if ((v3 & 0x8000000000000000) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v3 < v9[2])
  {
    uint64_t v11 = &v9[3 * v3];
    long long v11[4] = a1;
    v11[5] = a2;
    v11[6] = a3;
    swift_bridgeObjectRetain();
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100377DB4()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ParsedStringCache()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for ParsedStringCache.Element(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ParsedStringCache.Element(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ParsedStringCache.Element(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ParsedStringCache.Element()
{
  return &type metadata for ParsedStringCache.Element;
}

uint64_t sub_100377EE0(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if (a1[1] == a2[1] && a1[2] == a2[2]) {
    return 1;
  }
  else {
    return sub_1005E3290();
  }
}

Swift::UInt64 sub_100377F28(Swift::UInt64 result)
{
  if (result)
  {
    Swift::UInt64 v1 = result;
    Swift::UInt64 v2 = PCG32Random.next()();
    Swift::UInt64 v3 = v2 * v1;
    uint64_t result = (v2 * (unsigned __int128)v1) >> 64;
    if (v3 < v1)
    {
      Swift::UInt64 v4 = -(uint64_t)v1 % v1;
      if (v4 > v3)
      {
        do
          Swift::UInt64 v5 = PCG32Random.next()();
        while (v4 > v5 * v1);
        return (v5 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void __swiftcall PushRegistrationInfo.init(apsVersion:accountID:deviceToken:subtopic:mailboxes:)(IMAP2Protocol::PushRegistrationInfo *__return_ptr retstr, Swift::Int32 apsVersion, Swift::String accountID, Swift::String deviceToken, Swift::String subtopic, Swift::OpaquePointer mailboxes)
{
  retstr->apsVersion = apsVersion;
  retstr->accountID = accountID;
  retstr->deviceToken = deviceToken;
  retstr->subtopic = subtopic;
  retstr->mailboxes = mailboxes;
}

void PushRegistrationInfo.hash(into:)()
{
  sub_1005E3440(*(_DWORD *)v0);
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 56);
  Swift::UInt v2 = *(void *)(v1 + 16);
  sub_1005E3410(v2);
  if (v2)
  {
    Swift::UInt64 v3 = (unsigned int *)(v1 + 40);
    do
    {
      unsigned int v4 = *v3;
      v3 += 4;
      sub_1005E3410(v4 | ((unint64_t)v4 << 32));
      --v2;
    }
    while (v2);
  }
}

Swift::Int PushRegistrationInfo.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_1003780C4()
{
  return sub_1005E3470();
}

uint64_t sub_100378100(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  _OWORD v7[2] = a1[2];
  v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  void v8[2] = a2[2];
  v8[3] = v5;
  return _s13IMAP2Protocol20PushRegistrationInfoV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t static PushRegistrationResponse.__derived_struct_equals(_:_:)(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 != a5 || (a2 != a6 || a3 != a7) && (sub_1005E3290() & 1) == 0) {
    return 0;
  }
  return sub_10035D0E0(a4, a8);
}

uint64_t sub_1003781CC(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a2 + 24);
  BOOL v4 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
  if (!v4 && (sub_1005E3290() & 1) == 0) {
    return 0;
  }
  return sub_10035D0E0(v2, v3);
}

uint64_t _s13IMAP2Protocol20PushRegistrationInfoV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    return 0;
  }
  BOOL v4 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
  if (!v4 && (sub_1005E3290() & 1) == 0) {
    return 0;
  }
  BOOL v5 = *(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32);
  if (!v5 && (sub_1005E3290() & 1) == 0
    || (*(void *)(a1 + 40) != *(void *)(a2 + 40) || *(void *)(a1 + 48) != *(void *)(a2 + 48))
    && (sub_1005E3290() & 1) == 0)
  {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a2 + 56);
  return sub_10035D0E0(v6, v7);
}

unint64_t sub_100378318()
{
  unint64_t result = qword_1007135E0;
  if (!qword_1007135E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007135E0);
  }
  return result;
}

uint64_t destroy for PushRegistrationInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PushRegistrationInfo(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PushRegistrationInfo(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for PushRegistrationInfo(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PushRegistrationInfo(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PushRegistrationInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PushRegistrationInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PushRegistrationInfo()
{
  return &type metadata for PushRegistrationInfo;
}

uint64_t destroy for PushRegistrationResponse()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PushRegistrationResponse(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PushRegistrationResponse(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for PushRegistrationResponse(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for PushRegistrationResponse(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PushRegistrationResponse(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PushRegistrationResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PushRegistrationResponse()
{
  return &type metadata for PushRegistrationResponse;
}

Swift::Int sub_1003787EC(Swift::Int result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  Swift::Int v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  uint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (!v7)
    {
      int64_t v10 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v10 >= v8) {
        return 1;
      }
      uint64_t v7 = *(void *)(v4 + 8 * v10);
      ++v3;
      if (!v7)
      {
        int64_t v3 = v10 + 1;
        if (v10 + 1 >= v8) {
          return 1;
        }
        uint64_t v7 = *(void *)(v4 + 8 * v3);
        if (!v7)
        {
          int64_t v3 = v10 + 2;
          if (v10 + 2 >= v8) {
            return 1;
          }
          uint64_t v7 = *(void *)(v4 + 8 * v3);
          if (!v7)
          {
            int64_t v3 = v10 + 3;
            if (v10 + 3 >= v8) {
              return 1;
            }
            uint64_t v7 = *(void *)(v4 + 8 * v3);
            if (!v7) {
              break;
            }
          }
        }
      }
    }
LABEL_8:
    v7 &= v7 - 1;
    sub_1005E33F0();
    sub_1005E3410(0);
    __n128 result = sub_1005E3470();
    unint64_t v9 = result & ~(-1 << *(unsigned char *)(a2 + 32));
    if (((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      return 0;
    }
  }
  int64_t v11 = v10 + 4;
  if (v11 >= v8) {
    return 1;
  }
  uint64_t v7 = *(void *)(v4 + 8 * v11);
  if (v7)
  {
    int64_t v3 = v11;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v3 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    uint64_t v7 = *(void *)(v4 + 8 * v3);
    ++v11;
    if (v7) {
      goto LABEL_8;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_100378970(unint64_t a1, unint64_t a2)
{
  unint64_t v3 = a1;
  int64_t v4 = sub_10037BB6C(a1, a2);
  uint64_t v5 = _swiftEmptyArrayStorage;
  if (!v4) {
    return (unint64_t)v5;
  }
  int64_t v6 = v4;
  uint64_t v29 = _swiftEmptyArrayStorage;
  unint64_t result = sub_10035FE9C(0, v4 & ~(v4 >> 63), 0);
  if (v6 < 0) {
    goto LABEL_61;
  }
  uint64_t v8 = (v3 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a2 & 0x2000000000000000) != 0) {
    unint64_t v10 = HIBYTE(a2) & 0xF;
  }
  else {
    unint64_t v10 = v3 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v11 = 15;
  uint64_t v25 = 4 << v8;
  uint64_t v26 = v3;
  unint64_t v24 = v10;
  while (1)
  {
    unint64_t v12 = v11 & 0xC;
    BOOL v13 = (v11 & 1) == 0 || v12 == v9;
    BOOL v14 = v13;
    if (v13) {
      break;
    }
    unint64_t result = v11;
    if (v11 >> 16 >= v10) {
      goto LABEL_58;
    }
LABEL_24:
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v15 = sub_1005E2C70();
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0)
      {
        unint64_t v27 = v3;
        uint64_t v28 = a2 & 0xFFFFFFFFFFFFFFLL;
      }
      else if ((v3 & 0x1000000000000000) == 0)
      {
        sub_1005E2D30();
      }
      unsigned int v15 = sub_1005E2D40();
    }
    if (v15 >= 0x20) {
      unsigned int v16 = v15;
    }
    else {
      unsigned int v16 = v15 + 9216;
    }
    uint64_t v5 = v29;
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = sub_10035FE9C(0, v5[2] + 1, 1);
      uint64_t v5 = v29;
    }
    unint64_t v18 = v5[2];
    unint64_t v17 = v5[3];
    if (v18 >= v17 >> 1)
    {
      unint64_t result = sub_10035FE9C(v17 > 1, v18 + 1, 1);
      uint64_t v5 = v29;
    }
    uint64_t v5[2] = v18 + 1;
    *((_DWORD *)v5 + v18 + 8) = v16;
    if (v14)
    {
      uint64_t v9 = v25;
      unint64_t v3 = v26;
      unint64_t v10 = v24;
      if (v12 == v25)
      {
        unint64_t result = sub_1000C6E1C(v11, v26, a2);
        unint64_t v11 = result;
        if (v24 <= result >> 16) {
          goto LABEL_60;
        }
      }
      else if (v24 <= v11 >> 16)
      {
        goto LABEL_60;
      }
      if ((v11 & 1) == 0) {
        unint64_t v11 = v11 & 0xC | sub_100374F04(v11, v26, a2) & 0xFFFFFFFFFFFFFFF3 | 1;
      }
    }
    else
    {
      unint64_t v10 = v24;
      uint64_t v9 = v25;
      unint64_t v3 = v26;
      if (v24 <= v11 >> 16) {
        goto LABEL_59;
      }
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      unint64_t v11 = sub_1005E1D20();
      if (!--v6) {
        return (unint64_t)v5;
      }
    }
    else
    {
      unint64_t v19 = v11 >> 16;
      if ((a2 & 0x2000000000000000) != 0)
      {
        unint64_t v27 = v3;
        uint64_t v28 = a2 & 0xFFFFFFFFFFFFFFLL;
        int v21 = *((unsigned __int8 *)&v27 + v19);
      }
      else
      {
        uint64_t v20 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((v3 & 0x1000000000000000) == 0) {
          uint64_t v20 = sub_1005E2D30();
        }
        int v21 = *(unsigned __int8 *)(v20 + v19);
      }
      int v22 = (char)v21;
      unsigned int v23 = __clz(v21 ^ 0xFF) - 24;
      if (v22 >= 0) {
        LOBYTE(v23) = 1;
      }
      unint64_t v11 = ((v19 + v23) << 16) | 5;
      if (!--v6) {
        return (unint64_t)v5;
      }
    }
  }
  unint64_t result = v11;
  if (v12 == v9) {
    unint64_t result = sub_1000C6E1C(v11, v3, a2);
  }
  if (result >> 16 < v10)
  {
    if ((result & 1) == 0) {
      sub_100374F04(result, v3, a2);
    }
    goto LABEL_24;
  }
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

Swift::String __swiftcall UntaggedResponse.makeDescriptionWithoutPII()()
{
  sub_100378DA8(&v9);
  sub_10003BCDC(&v9, v11);
  unint64_t v0 = static Response.descriptionWithoutPII<A>(_:)();
  unint64_t v2 = v1;
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v9);
  Swift::Int v3 = sub_1005E1DC0();
  uint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  sub_1005E1D40(v3);
  uint64_t v4 = v9;
  unint64_t v5 = v10;
  sub_100378970(v0, v2);
  swift_bridgeObjectRelease();
  uint64_t v9 = v4;
  unint64_t v10 = v5;
  sub_10000566C(&qword_1007135E8);
  sub_100007494(&qword_1007135F0, &qword_1007135E8);
  sub_1005E1D50();
  swift_bridgeObjectRelease();
  uint64_t v6 = v9;
  uint64_t v7 = (void *)v10;
  result._object = v7;
  result._uint64_t countAndFlagsBits = v6;
  return result;
}

uint64_t sub_100378DA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000566C(&qword_100712FC8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v67[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (unsigned int *)&v67[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1003823F8(v2, (uint64_t)v9, type metadata accessor for UntaggedResponse);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v78 = *(_OWORD *)v9;
      uint64_t v12 = *((void *)v9 + 2);
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      BOOL v13 = sub_100021E04(a1);
      *(_OWORD *)BOOL v13 = v78;
      void v13[2] = v12;
      char v14 = 1;
      goto LABEL_7;
    case 2u:
      long long v78 = *(_OWORD *)v9;
      uint64_t v15 = *((void *)v9 + 2);
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      BOOL v13 = sub_100021E04(a1);
      *(_OWORD *)BOOL v13 = v78;
      void v13[2] = v15;
      char v14 = 2;
      goto LABEL_7;
    case 3u:
      long long v78 = *(_OWORD *)v9;
      uint64_t v16 = *((void *)v9 + 2);
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      BOOL v13 = sub_100021E04(a1);
      *(_OWORD *)BOOL v13 = v78;
      void v13[2] = v16;
      char v14 = 3;
      goto LABEL_7;
    case 4u:
      long long v78 = *(_OWORD *)v9;
      uint64_t v17 = *((void *)v9 + 2);
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      BOOL v13 = sub_100021E04(a1);
      *(_OWORD *)BOOL v13 = v78;
      void v13[2] = v17;
      char v14 = 4;
LABEL_7:
      *((unsigned char *)v13 + 24) = v14;
      goto LABEL_8;
    case 5u:
    case 6u:
      uint64_t v18 = *(void *)v9;
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      *sub_100021E04(a1) = v18;
      type metadata accessor for ResponsePayload();
      goto LABEL_20;
    case 7u:
      unsigned int v19 = v9[4];
      char v20 = *((unsigned char *)v9 + 20);
      uint64_t v21 = *((void *)v9 + 3);
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      long long v22 = *((_OWORD *)v9 + 2);
      long long v77 = *(_OWORD *)v9;
      long long v78 = v22;
      unsigned int v23 = sub_100021E04(a1);
      *(_OWORD *)unint64_t v83 = v77;
      *(_DWORD *)&v83[16] = v19;
      v83[20] = v20;
      *(void *)&v83[24] = v21;
      *(_OWORD *)&v83[32] = v78;
      sub_1002F6E8C((int8x16_t *)v83);
      goto LABEL_19;
    case 8u:
      unsigned int v24 = v9[4];
      char v25 = *((unsigned char *)v9 + 20);
      uint64_t v26 = *((void *)v9 + 3);
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      long long v27 = *((_OWORD *)v9 + 2);
      long long v77 = *(_OWORD *)v9;
      long long v78 = v27;
      unsigned int v23 = sub_100021E04(a1);
      *(_OWORD *)unint64_t v83 = v77;
      *(_DWORD *)&v83[16] = v24;
      v83[20] = v25;
      *(void *)&v83[24] = v26;
      *(_OWORD *)&v83[32] = v78;
      sub_1002F6D70((int8x16_t *)v83);
      goto LABEL_19;
    case 9u:
      uint64_t v76 = *(void *)v9;
      unsigned int v75 = v9[2];
      uint64_t v28 = *((void *)v9 + 2);
      char v29 = *((unsigned char *)v9 + 24);
      uint64_t v73 = *((void *)v9 + 4);
      uint64_t v74 = v28;
      char v30 = *((unsigned char *)v9 + 40);
      LODWORD(v28) = v9[11];
      char v31 = *((unsigned char *)v9 + 48);
      unsigned int v71 = v9[13];
      int v72 = v28;
      char v32 = *((unsigned char *)v9 + 56);
      uint64_t v33 = *((void *)v9 + 8);
      char v34 = *((unsigned char *)v9 + 72);
      uint64_t v69 = *((void *)v9 + 10);
      uint64_t v70 = v33;
      int v68 = *((unsigned __int8 *)v9 + 88);
      *(void *)&long long v77 = *((void *)v9 + 12);
      char v35 = *((unsigned char *)v9 + 104);
      *(void *)&long long v78 = *((void *)v9 + 14);
      char v36 = *((unsigned char *)v9 + 120);
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      unsigned int v23 = sub_100021E04(a1);
      LOBYTE(v82[0]) = v29;
      LOBYTE(v81) = v30;
      LOBYTE(v88) = v31;
      LOBYTE(v86) = v32;
      v85[0] = v34;
      v84[0] = v68;
      char v80 = v35;
      char v79 = v36;
      *(void *)unint64_t v83 = v76;
      *(_DWORD *)&v83[8] = v75;
      *(void *)&v83[16] = v74;
      v83[24] = v29;
      *(void *)&v83[32] = v73;
      v83[40] = v30;
      *(_DWORD *)&v83[44] = v72;
      v83[48] = v31;
      *(_DWORD *)&v83[52] = v71;
      v83[56] = v32;
      *(void *)&v83[64] = v70;
      v83[72] = v34;
      *(void *)&v83[80] = v69;
      v83[88] = v68;
      *(void *)&v83[96] = v77;
      v83[104] = v35;
      *(void *)&v83[112] = v78;
      v83[120] = v36;
      sub_1002F6B4C((int8x16_t *)v83);
      goto LABEL_19;
    case 0xAu:
      uint64_t v37 = *((void *)v9 + 2);
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      long long v78 = *(_OWORD *)v9;
      unsigned int v23 = sub_100021E04(a1);
      *(_OWORD *)unint64_t v83 = v78;
      *(void *)&v83[16] = v37;
      sub_1002F69B4((int8x16_t *)v83);
      goto LABEL_19;
    case 0xBu:
      uint64_t v38 = *(void *)v9;
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      unsigned int v23 = sub_100021E04(a1);
      *(void *)unint64_t v83 = v38;
      *(void *)&v83[8] = 0;
      v83[16] = 1;
      sub_1002F6A00((int8x16_t *)v83);
      goto LABEL_19;
    case 0xCu:
      long long v78 = *(_OWORD *)v9;
      uint64_t v39 = *((void *)v9 + 2);
      uint64_t v40 = *((void *)v9 + 3);
      char v41 = *((unsigned char *)v9 + 32);
      char v42 = *((unsigned char *)v9 + 33);
      uint64_t v43 = *((void *)v9 + 5);
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      unsigned int v23 = sub_100021E04(a1);
      *(_OWORD *)unint64_t v83 = v78;
      *(void *)&v83[16] = v39;
      *(void *)&v83[24] = v40;
      v83[32] = v41;
      v83[33] = v42;
      *(void *)&v83[40] = v43;
      sub_1002F6D24((int8x16_t *)v83);
      goto LABEL_19;
    case 0xDu:
      uint64_t v44 = *(void *)v9;
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      uint64_t v45 = sub_100021E04(a1);
      uint64_t v46 = sub_1003771A8(v44);
      swift_bridgeObjectRelease();
      *(void *)unint64_t v83 = v46;
      sub_1002F6ED8((int8x16_t *)v83);
      sub_1003824BC((uint64_t)v83, (uint64_t)v45);
      type metadata accessor for ResponsePayload();
      swift_storeEnumTagMultiPayload();
      type metadata accessor for Response(0);
      return swift_storeEnumTagMultiPayload();
    case 0xEu:
      uint64_t v47 = *v9;
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      unsigned int v23 = sub_100021E04(a1);
      *(void *)unint64_t v83 = v47;
      sub_1002F6B00((int8x16_t *)v83);
      goto LABEL_19;
    case 0xFu:
      uint64_t v48 = *v9;
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      unsigned int v23 = sub_100021E04(a1);
      *(void *)unint64_t v83 = v48;
      sub_1002F6AB4((int8x16_t *)v83);
LABEL_19:
      sub_1003824BC((uint64_t)v83, (uint64_t)v23);
      type metadata accessor for ResponsePayload();
      goto LABEL_20;
    case 0x10u:
      int v50 = *v9;
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      *(_DWORD *)sub_100021E04(a1) = v50;
      type metadata accessor for MessageData();
      swift_storeEnumTagMultiPayload();
      type metadata accessor for ResponsePayload();
      goto LABEL_20;
    case 0x11u:
    case 0x12u:
      sub_10001FDF0((uint64_t)v9, (uint64_t)v6, &qword_100712FC8);
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      uint64_t v51 = sub_100021E04(a1);
      sub_1000079E4((uint64_t)v6, (uint64_t)v51, &qword_100712FC8);
      type metadata accessor for MessageData();
      swift_storeEnumTagMultiPayload();
      type metadata accessor for ResponsePayload();
      swift_storeEnumTagMultiPayload();
      type metadata accessor for Response(0);
      swift_storeEnumTagMultiPayload();
      return sub_100007A48((uint64_t)v6, &qword_100712FC8);
    case 0x13u:
      memcpy(v83, v9, sizeof(v83));
      sub_10001FDF0((uint64_t)v83, (uint64_t)v84, &qword_100713758);
      sub_10001FDF0((uint64_t)v84, (uint64_t)&v88, &qword_100713758);
      if (v89)
      {
        sub_10001FDF0((uint64_t)&v83[8], (uint64_t)v85, &qword_100713760);
        sub_10001FDF0((uint64_t)v85, (uint64_t)&v86, &qword_100713760);
        if (v87)
        {
          a1[3] = sub_10000566C(&qword_100713768);
          a1[4] = sub_100007494(&qword_100713770, &qword_100713768);
          uint64_t result = sub_100061150((uint64_t)v83);
          *a1 = (uint64_t)_swiftEmptyArrayStorage;
          return result;
        }
        int v62 = v86;
        sub_10000566C(&qword_100713778);
        uint64_t v63 = *(void *)(type metadata accessor for Response(0) - 8);
        unint64_t v64 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
        uint64_t v60 = swift_allocObject();
        *(_OWORD *)(v60 + 16) = xmmword_1005F6670;
        v82[0] = v62;
        sub_1002F17D0((uint64_t)v82);
        sub_100382460((uint64_t)v82, v60 + v64);
        swift_storeEnumTagMultiPayload();
        int v61 = 0;
      }
      else
      {
        int v57 = v88;
        sub_10000566C(&qword_100713778);
        uint64_t v58 = *(void *)(type metadata accessor for Response(0) - 8);
        unint64_t v59 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
        uint64_t v60 = swift_allocObject();
        *(_OWORD *)(v60 + 16) = xmmword_1005F6670;
        v82[0] = v57;
        sub_10029C1C4((uint64_t)v82);
        sub_100382460((uint64_t)v82, v60 + v59);
        swift_storeEnumTagMultiPayload();
        int v61 = 1;
      }
      uint64_t v65 = sub_100379CF4(v61);
      uint64_t v81 = v60;
      sub_10035FB4C((uint64_t)v65);
      uint64_t v66 = v81;
      a1[3] = sub_10000566C(&qword_100713768);
      a1[4] = sub_100007494(&qword_100713770, &qword_100713768);
      uint64_t result = sub_100061150((uint64_t)v83);
      *a1 = v66;
      return result;
    case 0x14u:
      uint64_t v52 = *(void *)v9;
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      long long v78 = *(_OWORD *)(v9 + 2);
      uint64_t v53 = sub_100021E04(a1);
      *uint64_t v53 = v52;
      *(_OWORD *)(v53 + 1) = v78;
      type metadata accessor for ResponsePayload();
      goto LABEL_20;
    case 0x15u:
      long long v78 = *(_OWORD *)v9;
      uint64_t v54 = *((void *)v9 + 2);
      char v55 = *((unsigned char *)v9 + 24);
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      uint64_t v56 = sub_100021E04(a1);
      *(_OWORD *)uint64_t v56 = v78;
      v56[2] = v54;
      *((unsigned char *)v56 + 24) = v55;
      type metadata accessor for ResponsePayload();
      goto LABEL_20;
    default:
      long long v78 = *(_OWORD *)v9;
      uint64_t v10 = *((void *)v9 + 2);
      a1[3] = sub_10000566C(&qword_100713780);
      a1[4] = sub_100007494(&qword_100713788, &qword_100713780);
      uint64_t v11 = sub_100021E04(a1);
      *(_OWORD *)uint64_t v11 = v78;
      v11[2] = v10;
      *((unsigned char *)v11 + 24) = 0;
LABEL_8:
      type metadata accessor for ResponsePayload();
LABEL_20:
      swift_storeEnumTagMultiPayload();
      type metadata accessor for Response(0);
      return swift_storeEnumTagMultiPayload();
  }
}

void *sub_100379CF4(int a1)
{
  uint64_t v2 = v1;
  LODWORD(v174) = a1;
  uint64_t v158 = sub_1005E17E0();
  uint64_t v171 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  uint64_t v157 = (char *)&v133 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000566C(&qword_1007131E8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = type metadata accessor for MessageData.BodyData();
  unint64_t v172 = *(void *)(v169 - 8);
  uint64_t v7 = __chkstk_darwin(v169);
  uint64_t v156 = (uint64_t)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v170 = (char *)&v133 - v9;
  uint64_t v168 = type metadata accessor for MessageData.BodySection();
  uint64_t v162 = *(void *)(v168 - 8);
  __chkstk_darwin(v168);
  uint64_t v160 = (char *)&v133 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Response(0);
  uint64_t v173 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v153 = (uint64_t)&v133 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v150 = (uint64_t)&v133 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v152 = (uint64_t)&v133 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v151 = (uint64_t)&v133 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v167 = (uint64_t)&v133 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v166 = (uint64_t)&v133 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v165 = (uint64_t)&v133 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v164 = (uint64_t)&v133 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v149 = (uint64_t)&v133 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v148 = (uint64_t)&v133 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v147 = (uint64_t)&v133 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v146 = (uint64_t)&v133 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v161 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)&v133 - v37);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v155 = (void (**)(char *, uint64_t, uint64_t))((char *)&v133 - v39);
  __chkstk_darwin(v38);
  char v41 = (char *)&v133 - v40;
  uint64_t v42 = v2[54];
  uint64_t v154 = v2;
  uint64_t v159 = v6;
  if (v42)
  {
    uint64_t v43 = v2[49];
    uint64_t v44 = v2[50];
    uint64_t v46 = v2[51];
    uint64_t v45 = v2[52];
    uint64_t v47 = v2[53];
    uint64_t v48 = v2[55];
    uint64_t v175 = v2[56];
    uint64_t v49 = v2[58];
    uint64_t v51 = v2[59];
    uint64_t v50 = v2[60];
    uint64_t v53 = v2[61];
    uint64_t v52 = v2[62];
    uint64_t v134 = v2[57];
    uint64_t v135 = v53;
    uint64_t v54 = v2[63];
    uint64_t v144 = v47;
    uint64_t v145 = v43;
    *(void *)&long long v194 = v43;
    *((void *)&v194 + 1) = v44;
    *(void *)&long long v195 = v46;
    uint64_t v142 = v45;
    *((void *)&v195 + 1) = v45;
    LODWORD(v196) = v47;
    BYTE6(v196) = BYTE6(v47);
    WORD2(v196) = WORD2(v47);
    *((void *)&v196 + 1) = v42;
    *(void *)&long long v197 = v48;
    *((void *)&v197 + 1) = v175;
    *(void *)&long long v198 = v134;
    *((void *)&v198 + 1) = v49;
    *(void *)&long long v199 = v51;
    uint64_t v136 = v52;
    uint64_t v137 = v50;
    *((void *)&v199 + 1) = v50;
    *(void *)&long long v200 = v53;
    *((void *)&v200 + 1) = v52;
    *(void *)&long long v201 = v54;
    sub_1002F9D9C((uint64_t)&v194);
    sub_100382518((uint64_t)&v194, (uint64_t)v206);
    sub_1002F1868((uint64_t)v206);
    sub_100382460((uint64_t)v206, (uint64_t)v41);
    swift_storeEnumTagMultiPayload();
    uint64_t v143 = v44;
    swift_bridgeObjectRetain_n();
    uint64_t v141 = v46;
    swift_retain_n();
    uint64_t v140 = v42;
    swift_bridgeObjectRetain_n();
    uint64_t v139 = v48;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v138 = v51;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    char v55 = (void *)sub_100383190(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    unint64_t v57 = v55[2];
    unint64_t v56 = v55[3];
    if (v57 >= v56 >> 1) {
      char v55 = (void *)sub_100383190(v56 > 1, v57 + 1, 1, (unint64_t)v55);
    }
    v55[2] = v57 + 1;
    sub_100382574((uint64_t)v41, (uint64_t)v55+ ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80))+ *(void *)(v173 + 72) * v57, type metadata accessor for Response);
    sub_1000618AC(v145, v143, v141, v142, v144, v140);
    uint64_t v2 = v154;
    uint64_t v6 = v159;
  }
  else
  {
    char v55 = _swiftEmptyArrayStorage;
  }
  uint64_t v58 = (uint64_t)v160;
  if (!v2[64])
  {
    uint64_t v63 = v173;
    if (!v2[65]) {
      goto LABEL_19;
    }
    goto LABEL_14;
  }
  uint64_t v59 = swift_bridgeObjectRetain();
  uint64_t v60 = sub_1003771A8(v59);
  swift_bridgeObjectRelease();
  *(void *)&long long v194 = v60;
  sub_1002F9DB0((uint64_t)&v194);
  sub_100382518((uint64_t)&v194, (uint64_t)v206);
  sub_1002F1868((uint64_t)v206);
  int v61 = v155;
  sub_100382460((uint64_t)v206, (uint64_t)v155);
  swift_storeEnumTagMultiPayload();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v63 = v173;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    char v55 = (void *)sub_100383190(0, v55[2] + 1, 1, (unint64_t)v55);
  }
  unint64_t v65 = v55[2];
  unint64_t v64 = v55[3];
  if (v65 >= v64 >> 1) {
    char v55 = (void *)sub_100383190(v64 > 1, v65 + 1, 1, (unint64_t)v55);
  }
  v55[2] = v65 + 1;
  sub_100382574((uint64_t)v61, (uint64_t)v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v65, type metadata accessor for Response);
  uint64_t v2 = v154;
  if (v154[65])
  {
LABEL_14:
    uint64_t v66 = swift_bridgeObjectRetain();
    uint64_t v67 = sub_1003770B0(v66);
    swift_bridgeObjectRelease();
    *(void *)&long long v194 = v67;
    sub_1002F9CA4((uint64_t)&v194);
    sub_100382518((uint64_t)&v194, (uint64_t)v206);
    sub_1002F1868((uint64_t)v206);
    int v68 = v161;
    sub_100382460((uint64_t)v206, (uint64_t)v161);
    swift_storeEnumTagMultiPayload();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v55 = (void *)sub_100383190(0, v55[2] + 1, 1, (unint64_t)v55);
    }
    unint64_t v70 = v55[2];
    unint64_t v69 = v55[3];
    if (v70 >= v69 >> 1) {
      char v55 = (void *)sub_100383190(v69 > 1, v70 + 1, 1, (unint64_t)v55);
    }
    v55[2] = v70 + 1;
    sub_100382574((uint64_t)v68, (uint64_t)v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v70, type metadata accessor for Response);
    uint64_t v2 = v154;
  }
LABEL_19:
  sub_10001FDF0((uint64_t)(v2 + 66), (uint64_t)v213, &qword_100713790);
  sub_10001FDF0((uint64_t)v213, (uint64_t)&v214, &qword_100713790);
  if ((v215 & 1) == 0)
  {
    *(void *)&long long v194 = v214;
    sub_1002F9D88((uint64_t)&v194);
    sub_100382518((uint64_t)&v194, (uint64_t)v206);
    sub_1002F1868((uint64_t)v206);
    uint64_t v71 = v146;
    sub_100382460((uint64_t)v206, v146);
    swift_storeEnumTagMultiPayload();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v55 = (void *)sub_100383190(0, v55[2] + 1, 1, (unint64_t)v55);
    }
    unint64_t v73 = v55[2];
    unint64_t v72 = v55[3];
    if (v73 >= v72 >> 1) {
      char v55 = (void *)sub_100383190(v72 > 1, v73 + 1, 1, (unint64_t)v55);
    }
    v55[2] = v73 + 1;
    sub_100382574(v71, (uint64_t)v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v73, type metadata accessor for Response);
    uint64_t v2 = v154;
  }
  sub_10001FDF0((uint64_t)v2 + 540, (uint64_t)v212, &qword_100713798);
  sub_10001FDF0((uint64_t)v212, (uint64_t)&v216, &qword_100713798);
  if ((v217 & 1) == 0)
  {
    *(void *)&long long v194 = v216;
    sub_1002F9D74((uint64_t)&v194);
    sub_100382518((uint64_t)&v194, (uint64_t)v206);
    sub_1002F1868((uint64_t)v206);
    uint64_t v74 = v147;
    sub_100382460((uint64_t)v206, v147);
    swift_storeEnumTagMultiPayload();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v55 = (void *)sub_100383190(0, v55[2] + 1, 1, (unint64_t)v55);
    }
    unint64_t v76 = v55[2];
    unint64_t v75 = v55[3];
    if (v76 >= v75 >> 1) {
      char v55 = (void *)sub_100383190(v75 > 1, v76 + 1, 1, (unint64_t)v55);
    }
    v55[2] = v76 + 1;
    sub_100382574(v74, (uint64_t)v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v76, type metadata accessor for Response);
    uint64_t v2 = v154;
  }
  sub_10001FDF0((uint64_t)(v2 + 1), (uint64_t)v211, &qword_100713760);
  sub_10001FDF0((uint64_t)v211, (uint64_t)&v218, &qword_100713760);
  if (v219 & 1) == 0 && (v174)
  {
    LODWORD(v194) = v218;
    sub_1002F9D10((uint64_t)&v194);
    sub_100382518((uint64_t)&v194, (uint64_t)v206);
    sub_1002F1868((uint64_t)v206);
    uint64_t v77 = v148;
    sub_100382460((uint64_t)v206, v148);
    swift_storeEnumTagMultiPayload();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v55 = (void *)sub_100383190(0, v55[2] + 1, 1, (unint64_t)v55);
    }
    unint64_t v79 = v55[2];
    unint64_t v78 = v55[3];
    if (v79 >= v78 >> 1) {
      char v55 = (void *)sub_100383190(v78 > 1, v79 + 1, 1, (unint64_t)v55);
    }
    v55[2] = v79 + 1;
    sub_100382574(v77, (uint64_t)v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v79, type metadata accessor for Response);
    uint64_t v2 = v154;
  }
  sub_10001FDF0((uint64_t)(v2 + 69), (uint64_t)v210, &qword_1007137A0);
  sub_10001FDF0((uint64_t)v210, (uint64_t)&v220, &qword_1007137A0);
  if ((v221 & 1) == 0)
  {
    *(void *)&long long v194 = v220;
    sub_1002F9C90((uint64_t)&v194);
    sub_100382518((uint64_t)&v194, (uint64_t)v206);
    sub_1002F1868((uint64_t)v206);
    uint64_t v80 = v149;
    sub_100382460((uint64_t)v206, v149);
    swift_storeEnumTagMultiPayload();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v55 = (void *)sub_100383190(0, v55[2] + 1, 1, (unint64_t)v55);
    }
    unint64_t v82 = v55[2];
    unint64_t v81 = v55[3];
    if (v82 >= v81 >> 1) {
      char v55 = (void *)sub_100383190(v81 > 1, v82 + 1, 1, (unint64_t)v55);
    }
    v55[2] = v82 + 1;
    sub_100382574(v80, (uint64_t)v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v82, type metadata accessor for Response);
    uint64_t v2 = v154;
  }
  uint64_t v83 = v2[25];
  uint64_t v209 = v83;
  uint64_t v84 = *(void *)(v83 + 16);
  if (v84)
  {
    uint64_t v85 = v83 + ((*(unsigned __int8 *)(v162 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80));
    uint64_t v86 = *(void *)(v162 + 72);
    uint64_t v161 = (unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48);
    uint64_t v162 = v86;
    uint64_t v155 = (void (**)(char *, uint64_t, uint64_t))(v171 + 16);
    swift_bridgeObjectRetain();
    uint64_t v87 = (uint64_t)v170;
    uint64_t v163 = v11;
    do
    {
      uint64_t v174 = v85;
      uint64_t v175 = v84;
      sub_1003823F8(v85, v58, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      sub_1000079E4(v58 + *(int *)(v168 + 24), (uint64_t)v6, &qword_1007131E8);
      if ((*v161)(v6, 1, v169) == 1)
      {
        int v88 = v6;
        sub_100007A48((uint64_t)v6, &qword_1007131E8);
        uint64_t v89 = *(void *)(v58 + 8);
        uint64_t v90 = *(unsigned int *)(v58 + 20);
        char v91 = *(unsigned char *)(v58 + 24);
        if (v91) {
          uint64_t v90 = 0;
        }
        unsigned __int8 v92 = *(unsigned char *)(v58 + 16);
        *(void *)&long long v194 = *(void *)v58;
        *((void *)&v194 + 1) = v89;
        *(void *)&long long v195 = v92;
        *((void *)&v195 + 1) = v90;
        LOBYTE(v196) = v91 | 0x40;
        sub_1002F9C7C((uint64_t)&v194);
        sub_100382518((uint64_t)&v194, (uint64_t)v206);
        sub_1002F1868((uint64_t)v206);
        sub_100382460((uint64_t)v206, v167);
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        sub_10013B5CC(v89, v92);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v55 = (void *)sub_100383190(0, v55[2] + 1, 1, (unint64_t)v55);
        }
        unint64_t v94 = v55[2];
        unint64_t v93 = v55[3];
        uint64_t v63 = v173;
        uint64_t v6 = v88;
        if (v94 >= v93 >> 1) {
          char v55 = (void *)sub_100383190(v93 > 1, v94 + 1, 1, (unint64_t)v55);
        }
        uint64_t v87 = (uint64_t)v170;
        v55[2] = v94 + 1;
        sub_100382574(v167, (uint64_t)v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v94, type metadata accessor for Response);
      }
      else
      {
        sub_100382574((uint64_t)v6, v87, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
        uint64_t v95 = *(void *)v58;
        uint64_t v96 = *(void *)(v58 + 8);
        char v97 = *(unsigned char *)(v58 + 24);
        if (v97) {
          uint64_t v98 = 0;
        }
        else {
          uint64_t v98 = *(unsigned int *)(v58 + 20);
        }
        unsigned __int8 v99 = *(unsigned char *)(v58 + 16);
        unint64_t v100 = (unint64_t)v55;
        char v101 = v97 | 0x40;
        swift_bridgeObjectRetain();
        sub_10013B5CC(v96, v99);
        uint64_t v102 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
        v206[0] = v95;
        v206[1] = v96;
        v206[2] = v99;
        v206[3] = v98;
        char v207 = v101;
        unint64_t v103 = v100;
        uint64_t v208 = v102;
        sub_1002F18F4((uint64_t)v206);
        sub_100382460((uint64_t)v206, v164);
        swift_storeEnumTagMultiPayload();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v103 = sub_100383190(0, *(void *)(v100 + 16) + 1, 1, v100);
        }
        uint64_t v104 = v173;
        unint64_t v106 = *(void *)(v103 + 16);
        unint64_t v105 = *(void *)(v103 + 24);
        if (v106 >= v105 >> 1) {
          unint64_t v103 = sub_100383190(v105 > 1, v106 + 1, 1, v103);
        }
        *(void *)(v103 + 16) = v106 + 1;
        unint64_t v172 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
        uint64_t v171 = *(void *)(v104 + 72);
        sub_100382574(v164, v103 + v172 + v171 * v106, type metadata accessor for Response);
        uint64_t v107 = v87;
        uint64_t v108 = v156;
        sub_1003823F8(v107, v156, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
        uint64_t v109 = (uint64_t)v157;
        (*v155)(v157, v108, v158);
        sub_100371258(v109);
        uint64_t v111 = v110;
        unsigned int v113 = v112;
        LODWORD(v109) = v114;
        unint64_t v115 = HIDWORD(v112);
        unint64_t v116 = HIDWORD(v114);
        unint64_t v117 = HIWORD(v114);
        sub_100381FF4(v108, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
        *(void *)&long long v194 = v111;
        *((void *)&v194 + 1) = __PAIR64__(v115, v113);
        char v55 = (void *)v103;
        LODWORD(v195) = v109;
        WORD2(v195) = v116;
        BYTE6(v195) = v117;
        sub_1002F187C((uint64_t)&v194);
        sub_100382460((uint64_t)&v194, v165);
        swift_storeEnumTagMultiPayload();
        unint64_t v119 = *(void *)(v103 + 16);
        unint64_t v118 = *(void *)(v103 + 24);
        if (v119 >= v118 >> 1) {
          char v55 = (void *)sub_100383190(v118 > 1, v119 + 1, 1, v103);
        }
        uint64_t v6 = v159;
        uint64_t v58 = (uint64_t)v160;
        v55[2] = v119 + 1;
        sub_100382574(v165, (uint64_t)v55 + v172 + v119 * v171, type metadata accessor for Response);
        sub_100382694((uint64_t)&v176);
        sub_100382460((uint64_t)&v176, v166);
        swift_storeEnumTagMultiPayload();
        unint64_t v121 = v55[2];
        unint64_t v120 = v55[3];
        uint64_t v63 = v173;
        uint64_t v87 = (uint64_t)v170;
        if (v121 >= v120 >> 1) {
          char v55 = (void *)sub_100383190(v120 > 1, v121 + 1, 1, (unint64_t)v55);
        }
        v55[2] = v121 + 1;
        sub_100382574(v166, (uint64_t)v55 + v172 + v121 * v171, type metadata accessor for Response);
        sub_100381FF4(v87, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
      }
      sub_100381FF4(v58, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      uint64_t v85 = v174 + v162;
      uint64_t v84 = v175 - 1;
    }
    while (v175 != 1);
    sub_10001D550((uint64_t)&v209);
    uint64_t v2 = v154;
  }
  sub_10001FDF0((uint64_t)(v2 + 2), (uint64_t)v192, &qword_100713030);
  sub_10001FDF0((uint64_t)v192, (uint64_t)v193, &qword_100713030);
  if (sub_10006196C((uint64_t)v193) != 1)
  {
    sub_10013A988((uint64_t)v193, (uint64_t)&v176);
    HIBYTE(v187) = 0;
    long long v202 = v184;
    long long v203 = v185;
    long long v204 = v186;
    long long v198 = v180;
    long long v199 = v181;
    long long v200 = v182;
    long long v201 = v183;
    long long v194 = v176;
    long long v195 = v177;
    long long v196 = v178;
    long long v197 = v179;
    __int16 v205 = v187;
    sub_1002F9D24((uint64_t)&v194);
    sub_100382518((uint64_t)&v194, (uint64_t)v206);
    sub_1002F1868((uint64_t)v206);
    sub_100382460((uint64_t)v206, v151);
    swift_storeEnumTagMultiPayload();
    sub_10001FDF0((uint64_t)v192, (uint64_t)v190, &qword_100713030);
    sub_10001FDF0((uint64_t)v192, (uint64_t)v191, &qword_100713030);
    sub_100382620((uint64_t)v191, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
    sub_100382620((uint64_t)v190, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v55 = (void *)sub_100383190(0, v55[2] + 1, 1, (unint64_t)v55);
    }
    unint64_t v123 = v55[2];
    unint64_t v122 = v55[3];
    if (v123 >= v122 >> 1) {
      char v55 = (void *)sub_100383190(v122 > 1, v123 + 1, 1, (unint64_t)v55);
    }
    v55[2] = v123 + 1;
    sub_100382574(v151, (uint64_t)v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v123, type metadata accessor for Response);
    sub_100382620((uint64_t)v192, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10006133C);
  }
  sub_10001FDF0((uint64_t)(v2 + 26), (uint64_t)v190, &qword_100713030);
  sub_10001FDF0((uint64_t)v190, (uint64_t)v191, &qword_100713030);
  if (sub_10006196C((uint64_t)v191) != 1)
  {
    sub_10013A988((uint64_t)v191, (uint64_t)&v176);
    HIBYTE(v187) = 1;
    long long v202 = v184;
    long long v203 = v185;
    long long v204 = v186;
    long long v198 = v180;
    long long v199 = v181;
    long long v200 = v182;
    long long v201 = v183;
    long long v194 = v176;
    long long v195 = v177;
    long long v196 = v178;
    long long v197 = v179;
    __int16 v205 = v187;
    sub_1002F9D24((uint64_t)&v194);
    sub_100382518((uint64_t)&v194, (uint64_t)v206);
    sub_1002F1868((uint64_t)v206);
    sub_100382460((uint64_t)v206, v152);
    swift_storeEnumTagMultiPayload();
    sub_10001FDF0((uint64_t)v190, (uint64_t)v188, &qword_100713030);
    sub_10001FDF0((uint64_t)v190, (uint64_t)v189, &qword_100713030);
    sub_100382620((uint64_t)v189, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
    sub_100382620((uint64_t)v188, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v55 = (void *)sub_100383190(0, v55[2] + 1, 1, (unint64_t)v55);
    }
    unint64_t v125 = v55[2];
    unint64_t v124 = v55[3];
    if (v125 >= v124 >> 1) {
      char v55 = (void *)sub_100383190(v124 > 1, v125 + 1, 1, (unint64_t)v55);
    }
    v55[2] = v125 + 1;
    sub_100382574(v152, (uint64_t)v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v125, type metadata accessor for Response);
    sub_100382620((uint64_t)v190, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10006133C);
  }
  uint64_t v126 = v2[72];
  if (v126)
  {
    *(void *)&long long v194 = v2[71];
    *((void *)&v194 + 1) = v126;
    sub_1002F9C68((uint64_t)&v194);
    sub_100382518((uint64_t)&v194, (uint64_t)v206);
    sub_1002F1868((uint64_t)v206);
    uint64_t v127 = v150;
    sub_100382460((uint64_t)v206, v150);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v55 = (void *)sub_100383190(0, v55[2] + 1, 1, (unint64_t)v55);
    }
    unint64_t v129 = v55[2];
    unint64_t v128 = v55[3];
    if (v129 >= v128 >> 1) {
      char v55 = (void *)sub_100383190(v128 > 1, v129 + 1, 1, (unint64_t)v55);
    }
    v55[2] = v129 + 1;
    sub_100382574(v127, (uint64_t)v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v129, type metadata accessor for Response);
  }
  sub_1003825DC((uint64_t)v206);
  sub_100382460((uint64_t)v206, v153);
  swift_storeEnumTagMultiPayload();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v55 = (void *)sub_100383190(0, v55[2] + 1, 1, (unint64_t)v55);
  }
  unint64_t v131 = v55[2];
  unint64_t v130 = v55[3];
  if (v131 >= v130 >> 1) {
    char v55 = (void *)sub_100383190(v130 > 1, v131 + 1, 1, (unint64_t)v55);
  }
  v55[2] = v131 + 1;
  sub_100382574(v153, (uint64_t)v55+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v131, type metadata accessor for Response);
  return v55;
}

uint64_t UntaggedResponse.logIdentifier.getter()
{
  return 0;
}

unint64_t UntaggedResponse.name.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003823F8(v1, (uint64_t)v4, type metadata accessor for UntaggedResponse);
  unint64_t v5 = 0x535453495845;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100381FF4((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 20302;
      break;
    case 2u:
      sub_100381FF4((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 4473154;
      break;
    case 3u:
      sub_100381FF4((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x48545541455250;
      break;
    case 4u:
      sub_100381FF4((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 4544834;
      break;
    case 5u:
      sub_100381FF4((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x494C494241504143;
      break;
    case 6u:
      sub_100381FF4((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x44454C42414E45;
      break;
    case 7u:
      sub_100381FF4((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 1414744396;
      break;
    case 8u:
      sub_100381FF4((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 1112888140;
      break;
    case 9u:
      sub_100381FF4((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x535554415453;
      break;
    case 0xAu:
      sub_100381FF4((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x43415053454D414ELL;
      break;
    case 0xBu:
      sub_100381FF4((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x484352414553;
      break;
    case 0xCu:
      sub_100381FF4((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x48435241455345;
      break;
    case 0xDu:
      sub_100381FF4((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x5347414C46;
      break;
    case 0xEu:
      return v5;
    case 0xFu:
      unint64_t v5 = 0x544E45434552;
      break;
    case 0x10u:
      unint64_t v5 = 0x45474E55505845;
      break;
    case 0x11u:
      sub_100381FF4((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x44454853494E4156;
      break;
    case 0x12u:
    case 0x15u:
      unint64_t v5 = 0xD000000000000011;
      sub_100381FF4((uint64_t)v4, type metadata accessor for UntaggedResponse);
      break;
    case 0x13u:
      sub_100381FF4((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 0x4843544546;
      break;
    case 0x14u:
      sub_100381FF4((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 17481;
      break;
    default:
      sub_100381FF4((uint64_t)v4, type metadata accessor for UntaggedResponse);
      unint64_t v5 = 19279;
      break;
  }
  return v5;
}

BOOL sub_10037BA68(uint64_t a1, uint64_t a2)
{
  return _s13IMAP2Protocol25CommandCompletionResponseO21__derived_enum_equalsySbAC_ACtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

unint64_t CommandCompletionResponse.responseText.getter(unint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  return a1;
}

uint64_t sub_10037BAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void *)(a1 + 40);
    uint64_t v4 = (uint64_t *)(a2 + 40);
    do
    {
      uint64_t v5 = *v4;
      if (*v3)
      {
        if (!v5) {
          return 0;
        }
        BOOL v6 = *(v3 - 1) == *(v4 - 1) && *v3 == v5;
        if (!v6 && (sub_1005E3290() & 1) == 0) {
          return 0;
        }
      }
      else if (v5)
      {
        return 0;
      }
      v3 += 2;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return 1;
}

unint64_t sub_10037BB6C(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v4 = a1;
  }
  uint64_t v5 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0) {
    uint64_t v5 = 11;
  }
  unint64_t v6 = v5 | (v4 << 16);
  unint64_t v7 = sub_10037BDAC(0xFuLL, a1, a2);
  unint64_t result = sub_10037BDAC(v6, a1, a2);
  unint64_t v9 = result >> 14;
  if (v7 >> 14 < result >> 14)
  {
    for (uint64_t i = 0; ; ++i)
    {
      uint64_t v11 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_1005E1D20();
        unint64_t v7 = result;
      }
      else
      {
        unint64_t v12 = v7 >> 16;
        if ((a2 & 0x2000000000000000) != 0)
        {
          unint64_t v22 = a1;
          uint64_t v23 = a2 & 0xFFFFFFFFFFFFFFLL;
          int v13 = *((unsigned __int8 *)&v22 + v12);
        }
        else
        {
          unint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0) {
            unint64_t result = sub_1005E2D30();
          }
          int v13 = *(unsigned __int8 *)(result + v12);
        }
        int v14 = (char)v13;
        unsigned int v15 = __clz(v13 ^ 0xFF) - 24;
        if (v14 >= 0) {
          LOBYTE(v15) = 1;
        }
        unint64_t v7 = ((v12 + v15) << 16) | 5;
      }
      if (v9 <= v7 >> 14) {
        return v11;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
    return result;
  }
  if (v9 < v7 >> 14)
  {
    uint64_t v11 = 0;
    while (!__OFSUB__(v11--, 1))
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_1005E1D30();
        unint64_t v7 = result;
      }
      else
      {
        if ((a2 & 0x2000000000000000) != 0)
        {
          unint64_t v22 = a1;
          uint64_t v23 = a2 & 0xFFFFFFFFFFFFFFLL;
          if ((*((unsigned char *)&v22 + (v7 >> 16) - 1) & 0xC0) == 0x80)
          {
            uint64_t v20 = 0;
            do
              int v21 = *((unsigned char *)&v22 + (v7 >> 16) + v20-- - 2) & 0xC0;
            while (v21 == 128);
            uint64_t v19 = 1 - v20;
          }
          else
          {
            uint64_t v19 = 1;
          }
        }
        else
        {
          unint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0) {
            unint64_t result = sub_1005E2D30();
          }
          uint64_t v17 = 0;
          do
            int v18 = *(unsigned char *)(result + (v7 >> 16) - 1 + v17--) & 0xC0;
          while (v18 == 128);
          uint64_t v19 = -v17;
        }
        unint64_t v7 = (v7 - (v19 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
      }
      if (v9 >= v7 >> 14) {
        return v11;
      }
    }
    goto LABEL_40;
  }
  return 0;
}

unint64_t sub_10037BDAC(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16)
  {
    __break(1u);
LABEL_9:
    unint64_t result = sub_10037BE4C(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_100374F04(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_10037BE4C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    unint64_t result = sub_1000C6E1C(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16) {
    __break(1u);
  }
  return result;
}

uint64_t _s13IMAP2Protocol16UntaggedResponseO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, unint64_t *a2)
{
  uint64_t v170 = a1;
  uint64_t v171 = a2;
  sub_10000566C(&qword_100712FC8);
  __chkstk_darwin();
  uint64_t v152 = (uint64_t)&v151 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v151 = (uint64_t)&v151 - v3;
  uint64_t v169 = type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin();
  uint64_t v166 = (uint64_t)&v151 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v165 = (uint64_t *)((char *)&v151 - v5);
  __chkstk_darwin();
  uint64_t v164 = (char *)&v151 - v6;
  __chkstk_darwin();
  uint64_t v168 = (uint64_t)&v151 - v7;
  __chkstk_darwin();
  uint64_t v167 = (uint64_t)&v151 - v8;
  __chkstk_darwin();
  uint64_t v163 = (int *)((char *)&v151 - v9);
  __chkstk_darwin();
  uint64_t v162 = (int *)((char *)&v151 - v10);
  __chkstk_darwin();
  uint64_t v161 = (int *)((char *)&v151 - v11);
  __chkstk_darwin();
  uint64_t v160 = (uint64_t *)((char *)&v151 - v12);
  __chkstk_darwin();
  uint64_t v159 = (_OWORD *)((char *)&v151 - v13);
  __chkstk_darwin();
  uint64_t v158 = (uint64_t *)((char *)&v151 - v14);
  __chkstk_darwin();
  uint64_t v156 = (uint64_t *)((char *)&v151 - v15);
  __chkstk_darwin();
  uint64_t v157 = (uint64_t)&v151 - v16;
  __chkstk_darwin();
  uint64_t v155 = (_OWORD *)((char *)&v151 - v17);
  __chkstk_darwin();
  uint64_t v154 = (_OWORD *)((char *)&v151 - v18);
  __chkstk_darwin();
  uint64_t v153 = (uint64_t *)((char *)&v151 - v19);
  __chkstk_darwin();
  int v21 = (uint64_t *)((char *)&v151 - v20);
  __chkstk_darwin();
  uint64_t v23 = (unint64_t *)((char *)&v151 - v22);
  __chkstk_darwin();
  uint64_t v25 = (unint64_t *)((char *)&v151 - v24);
  __chkstk_darwin();
  uint64_t v27 = (unint64_t *)((char *)&v151 - v26);
  __chkstk_darwin();
  uint64_t v29 = (unint64_t *)((char *)&v151 - v28);
  __chkstk_darwin();
  uint64_t v31 = (unint64_t *)((char *)&v151 - v30);
  sub_10000566C(&qword_100713750);
  uint64_t v32 = __chkstk_darwin();
  uint64_t v34 = (char *)&v151 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = (uint64_t)&v34[*(int *)(v32 + 56)];
  sub_1003823F8(v170, (uint64_t)v34, type metadata accessor for UntaggedResponse);
  uint64_t v36 = (uint64_t)v171;
  uint64_t v171 = (unint64_t *)v35;
  sub_1003823F8(v36, v35, type metadata accessor for UntaggedResponse);
  unint64_t v172 = v34;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v37 = (uint64_t)v172;
      sub_1003823F8((uint64_t)v172, (uint64_t)v29, type metadata accessor for UntaggedResponse);
      unint64_t v95 = *v29;
      unint64_t v96 = v29[1];
      unint64_t v97 = v29[2];
      uint64_t v98 = v171;
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_10036BC50(v95);
        goto LABEL_73;
      }
      unint64_t v99 = *v98;
      unint64_t v100 = v98[1];
      unint64_t v101 = v98[2];
      unint64_t v102 = v99 & 0xF000000000000007;
      if ((~v95 & 0xF000000000000007) == 0)
      {
        if (v102 != 0xF000000000000007)
        {
          unint64_t v46 = v99;
          goto LABEL_35;
        }
        goto LABEL_86;
      }
      if (v102 == 0xF000000000000007) {
        goto LABEL_104;
      }
      sub_10036BCE8(v99);
      sub_10036BCE8(v95);
      static ResponseTextCode.__derived_enum_equals(_:_:)();
      char v145 = v144;
      sub_10036BC50(v99);
      sub_10036BC50(v95);
      if ((v145 & 1) == 0)
      {
        sub_10036BC50(v99);
LABEL_104:
        swift_bridgeObjectRelease();
        unint64_t v146 = v95;
        goto LABEL_105;
      }
LABEL_86:
      if (v96 == v100 && v97 == v101)
      {
        sub_10036BC50(v99);
        swift_bridgeObjectRelease();
        unint64_t v140 = v95;
        goto LABEL_89;
      }
      char v142 = sub_1005E3290();
      sub_10036BC50(v99);
      swift_bridgeObjectRelease();
      unint64_t v143 = v95;
LABEL_98:
      sub_10036BC50(v143);
      swift_bridgeObjectRelease();
      if ((v142 & 1) == 0)
      {
LABEL_107:
        sub_100381FF4(v37, type metadata accessor for UntaggedResponse);
LABEL_75:
        char v60 = 0;
        return v60 & 1;
      }
LABEL_99:
      uint64_t v149 = v37;
LABEL_100:
      sub_100381FF4(v149, type metadata accessor for UntaggedResponse);
      char v60 = 1;
      return v60 & 1;
    case 2u:
      uint64_t v37 = (uint64_t)v172;
      sub_1003823F8((uint64_t)v172, (uint64_t)v27, type metadata accessor for UntaggedResponse);
      unint64_t v38 = *v27;
      unint64_t v39 = v27[1];
      unint64_t v40 = v27[2];
      char v41 = v171;
      if (swift_getEnumCaseMultiPayload() == 2) {
        goto LABEL_5;
      }
      goto LABEL_3;
    case 3u:
      uint64_t v37 = (uint64_t)v172;
      sub_1003823F8((uint64_t)v172, (uint64_t)v25, type metadata accessor for UntaggedResponse);
      unint64_t v38 = *v25;
      unint64_t v39 = v25[1];
      unint64_t v40 = v25[2];
      char v41 = v171;
      if (swift_getEnumCaseMultiPayload() == 3) {
        goto LABEL_5;
      }
      goto LABEL_3;
    case 4u:
      sub_1003823F8((uint64_t)v172, (uint64_t)v23, type metadata accessor for UntaggedResponse);
      unint64_t v47 = *v23;
      unint64_t v48 = v23[1];
      unint64_t v49 = v23[2];
      uint64_t v50 = v171;
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        sub_10036BC50(v47);
        swift_bridgeObjectRelease();
        uint64_t v37 = (uint64_t)v172;
        goto LABEL_74;
      }
      unint64_t v51 = *v50;
      unint64_t v52 = v50[1];
      unint64_t v53 = v50[2];
      unint64_t v54 = *v50 & 0xF000000000000007;
      if ((~v47 & 0xF000000000000007) != 0)
      {
        if (v54 == 0xF000000000000007)
        {
          swift_bridgeObjectRelease();
          sub_10036BC50(v47);
          uint64_t v55 = (uint64_t)v172;
          goto LABEL_109;
        }
        sub_10036BCE8(*v50);
        sub_10036BCE8(v47);
        static ResponseTextCode.__derived_enum_equals(_:_:)();
        char v148 = v147;
        sub_10036BC50(v51);
        sub_10036BC50(v47);
        uint64_t v55 = (uint64_t)v172;
        if ((v148 & 1) == 0)
        {
          sub_10036BC50(v51);
          swift_bridgeObjectRelease();
          sub_10036BC50(v47);
          goto LABEL_109;
        }
      }
      else
      {
        uint64_t v55 = (uint64_t)v172;
        if (v54 != 0xF000000000000007)
        {
          sub_10036BC50(v51);
          swift_bridgeObjectRelease();
LABEL_109:
          swift_bridgeObjectRelease();
          goto LABEL_110;
        }
      }
      if (v48 == v52 && v49 == v53)
      {
        sub_10036BC50(v51);
        swift_bridgeObjectRelease();
        sub_10036BC50(v47);
        swift_bridgeObjectRelease();
      }
      else
      {
        char v150 = sub_1005E3290();
        sub_10036BC50(v51);
        swift_bridgeObjectRelease();
        sub_10036BC50(v47);
        swift_bridgeObjectRelease();
        if ((v150 & 1) == 0)
        {
LABEL_110:
          sub_100381FF4(v55, type metadata accessor for UntaggedResponse);
          goto LABEL_75;
        }
      }
      uint64_t v149 = v55;
      goto LABEL_100;
    case 5u:
      uint64_t v37 = (uint64_t)v172;
      sub_1003823F8((uint64_t)v172, (uint64_t)v21, type metadata accessor for UntaggedResponse);
      uint64_t v103 = *v21;
      uint64_t v104 = (uint64_t *)v171;
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_73;
      }
      goto LABEL_39;
    case 6u:
      uint64_t v37 = (uint64_t)v172;
      unint64_t v105 = v153;
      sub_1003823F8((uint64_t)v172, (uint64_t)v153, type metadata accessor for UntaggedResponse);
      uint64_t v103 = *v105;
      uint64_t v104 = (uint64_t *)v171;
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_73;
      }
LABEL_39:
      char v77 = sub_10035D1D4(v103, *v104);
      goto LABEL_46;
    case 7u:
      uint64_t v37 = (uint64_t)v172;
      unint64_t v56 = v154;
      sub_1003823F8((uint64_t)v172, (uint64_t)v154, type metadata accessor for UntaggedResponse);
      long long v57 = v56[1];
      v173[0] = *v56;
      v173[1] = v57;
      v173[2] = v56[2];
      uint64_t v58 = v171;
      if (swift_getEnumCaseMultiPayload() == 7) {
        goto LABEL_15;
      }
      goto LABEL_41;
    case 8u:
      uint64_t v37 = (uint64_t)v172;
      unint64_t v106 = v155;
      sub_1003823F8((uint64_t)v172, (uint64_t)v155, type metadata accessor for UntaggedResponse);
      long long v107 = v106[1];
      v173[0] = *v106;
      v173[1] = v107;
      v173[2] = v106[2];
      uint64_t v58 = v171;
      if (swift_getEnumCaseMultiPayload() == 8)
      {
LABEL_15:
        long long v59 = *((_OWORD *)v58 + 1);
        v174[0] = *(_OWORD *)v58;
        v174[1] = v59;
        v174[2] = *((_OWORD *)v58 + 2);
        char v60 = static MailboxInfo.__derived_struct_equals(_:_:)((uint64_t)v173, (uint64_t)v174);
        sub_100100AFC((uint64_t)v174);
        sub_100100AFC((uint64_t)v173);
        goto LABEL_55;
      }
LABEL_41:
      sub_100100AFC((uint64_t)v173);
      goto LABEL_74;
    case 9u:
      uint64_t v37 = (uint64_t)v172;
      uint64_t v61 = v157;
      sub_1003823F8((uint64_t)v172, v157, type metadata accessor for UntaggedResponse);
      uint64_t v62 = *(void *)v61;
      uint64_t v63 = *(unsigned int *)(v61 + 8);
      long long v64 = *(_OWORD *)(v61 + 96);
      v173[4] = *(_OWORD *)(v61 + 80);
      v173[5] = v64;
      *(_OWORD *)((char *)&v173[5] + 9) = *(_OWORD *)(v61 + 105);
      long long v65 = *(_OWORD *)(v61 + 32);
      v173[0] = *(_OWORD *)(v61 + 16);
      v173[1] = v65;
      long long v66 = *(_OWORD *)(v61 + 64);
      v173[2] = *(_OWORD *)(v61 + 48);
      v173[3] = v66;
      uint64_t v67 = v171;
      if (swift_getEnumCaseMultiPayload() != 9) {
        goto LABEL_73;
      }
      uint64_t v68 = *v67;
      uint64_t v69 = *((unsigned int *)v67 + 2);
      long long v70 = *((_OWORD *)v67 + 6);
      v174[4] = *((_OWORD *)v67 + 5);
      v174[5] = v70;
      *(_OWORD *)((char *)&v174[5] + 9) = *(_OWORD *)((char *)v67 + 105);
      long long v71 = *((_OWORD *)v67 + 2);
      v174[0] = *((_OWORD *)v67 + 1);
      v174[1] = v71;
      long long v72 = *((_OWORD *)v67 + 4);
      v174[2] = *((_OWORD *)v67 + 3);
      v174[3] = v72;
      if ((v63 | (v63 << 32)) != (v69 | (v69 << 32)))
      {
        swift_bridgeObjectRelease();
        goto LABEL_106;
      }
      BOOL v73 = sub_100357CFC(v62, v68);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v73) {
        goto LABEL_107;
      }
      char v60 = static MailboxStatus.__derived_struct_equals(_:_:)((uint64_t)v173, (uint64_t)v174);
      goto LABEL_55;
    case 0xAu:
      uint64_t v37 = (uint64_t)v172;
      uint64_t v108 = v156;
      sub_1003823F8((uint64_t)v172, (uint64_t)v156, type metadata accessor for UntaggedResponse);
      uint64_t v109 = *v108;
      uint64_t v110 = v108[1];
      uint64_t v111 = v108[2];
      unint64_t v112 = (uint64_t *)v171;
      if (swift_getEnumCaseMultiPayload() != 10)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_73;
      }
      char v60 = static NamespaceResponse.__derived_struct_equals(_:_:)(v109, v110, v111, *v112, v112[1], v112[2]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_47:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_55;
    case 0xBu:
      uint64_t v37 = (uint64_t)v172;
      uint64_t v74 = v158;
      sub_1003823F8((uint64_t)v172, (uint64_t)v158, type metadata accessor for UntaggedResponse);
      uint64_t v75 = *v74;
      unint64_t v76 = (uint64_t *)v171;
      if (swift_getEnumCaseMultiPayload() != 11) {
        goto LABEL_73;
      }
      char v77 = sub_1000797C4(v75, *v76);
      goto LABEL_46;
    case 0xCu:
      uint64_t v37 = (uint64_t)v172;
      unint64_t v78 = v159;
      sub_1003823F8((uint64_t)v172, (uint64_t)v159, type metadata accessor for UntaggedResponse);
      long long v79 = v78[1];
      v173[0] = *v78;
      v173[1] = v79;
      v173[2] = v78[2];
      uint64_t v80 = v171;
      if (swift_getEnumCaseMultiPayload() == 12)
      {
        long long v87 = *((_OWORD *)v80 + 1);
        v174[0] = *(_OWORD *)v80;
        v174[1] = v87;
        v174[2] = *((_OWORD *)v80 + 2);
        static ExtendedSearchResponse.__derived_struct_equals(_:_:)((uint64_t)v173, (uint64_t)v174, v81, v82, v83, v84, v85, v86, v151, v152, (uint64_t)v153, (uint64_t)v154, (uint64_t)v155, (uint64_t)v156, v157, (uint64_t)v158, (uint64_t)v159, (uint64_t)v160, (uint64_t)v161,
          (uint64_t)v162);
        char v60 = v88;
        sub_1000FCD64((uint64_t *)v173);
        sub_1000FCD64((uint64_t *)v174);
        goto LABEL_55;
      }
      sub_1000FCD64((uint64_t *)v173);
      goto LABEL_74;
    case 0xDu:
      uint64_t v37 = (uint64_t)v172;
      unsigned int v113 = v160;
      sub_1003823F8((uint64_t)v172, (uint64_t)v160, type metadata accessor for UntaggedResponse);
      uint64_t v114 = *v113;
      unint64_t v115 = (uint64_t *)v171;
      if (swift_getEnumCaseMultiPayload() != 13) {
        goto LABEL_73;
      }
      char v77 = sub_100013AB4(v114, *v115);
LABEL_46:
      char v60 = v77;
      goto LABEL_47;
    case 0xEu:
      uint64_t v37 = (uint64_t)v172;
      uint64_t v89 = v161;
      sub_1003823F8((uint64_t)v172, (uint64_t)v161, type metadata accessor for UntaggedResponse);
      uint64_t v90 = v171;
      if (swift_getEnumCaseMultiPayload() != 14) {
        goto LABEL_74;
      }
      goto LABEL_27;
    case 0xFu:
      uint64_t v37 = (uint64_t)v172;
      uint64_t v89 = v162;
      sub_1003823F8((uint64_t)v172, (uint64_t)v162, type metadata accessor for UntaggedResponse);
      uint64_t v90 = v171;
      if (swift_getEnumCaseMultiPayload() != 15) {
        goto LABEL_74;
      }
LABEL_27:
      int v91 = *v89;
      int v92 = *(_DWORD *)v90;
      goto LABEL_30;
    case 0x10u:
      uint64_t v37 = (uint64_t)v172;
      unint64_t v93 = v163;
      sub_1003823F8((uint64_t)v172, (uint64_t)v163, type metadata accessor for UntaggedResponse);
      unint64_t v94 = v171;
      if (swift_getEnumCaseMultiPayload() != 16) {
        goto LABEL_74;
      }
      int v91 = *(_DWORD *)v94;
      int v92 = *v93;
LABEL_30:
      char v60 = v91 == v92;
      goto LABEL_55;
    case 0x11u:
      uint64_t v37 = (uint64_t)v172;
      uint64_t v116 = v167;
      sub_1003823F8((uint64_t)v172, v167, type metadata accessor for UntaggedResponse);
      uint64_t v117 = (uint64_t)v171;
      if (swift_getEnumCaseMultiPayload() != 17) {
        goto LABEL_62;
      }
      uint64_t v118 = v117;
      uint64_t v119 = v151;
      goto LABEL_52;
    case 0x12u:
      uint64_t v37 = (uint64_t)v172;
      uint64_t v116 = v168;
      sub_1003823F8((uint64_t)v172, v168, type metadata accessor for UntaggedResponse);
      uint64_t v120 = (uint64_t)v171;
      if (swift_getEnumCaseMultiPayload() != 18)
      {
LABEL_62:
        sub_100007A48(v116, &qword_100712FC8);
        goto LABEL_74;
      }
      uint64_t v118 = v120;
      uint64_t v119 = v152;
LABEL_52:
      sub_10001FDF0(v118, v119, &qword_100712FC8);
      sub_100365CBC();
      char v60 = sub_1005E35A0();
      sub_100007A48(v119, &qword_100712FC8);
      sub_100007A48(v116, &qword_100712FC8);
      goto LABEL_55;
    case 0x13u:
      uint64_t v37 = (uint64_t)v172;
      unint64_t v121 = v164;
      sub_1003823F8((uint64_t)v172, (uint64_t)v164, type metadata accessor for UntaggedResponse);
      memcpy(v173, v121, 0x248uLL);
      unint64_t v122 = v171;
      if (swift_getEnumCaseMultiPayload() != 19)
      {
        sub_100061150((uint64_t)v173);
        goto LABEL_74;
      }
      memcpy(v174, v122, 0x248uLL);
      char v60 = _s13IMAP2Protocol11MessageDataV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v173, (uint64_t)v174);
      sub_100061150((uint64_t)v174);
      sub_100061150((uint64_t)v173);
LABEL_55:
      sub_100381FF4(v37, type metadata accessor for UntaggedResponse);
      return v60 & 1;
    case 0x14u:
      uint64_t v37 = (uint64_t)v172;
      unint64_t v123 = v165;
      sub_1003823F8((uint64_t)v172, (uint64_t)v165, type metadata accessor for UntaggedResponse);
      uint64_t v124 = *v123;
      uint64_t v125 = v123[1];
      uint64_t v126 = v123[2];
      uint64_t v127 = (uint64_t *)v171;
      if (swift_getEnumCaseMultiPayload() != 20)
      {
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_74;
      }
      uint64_t v128 = *v127;
      uint64_t v129 = v127[1];
      uint64_t v130 = v127[2];
      if (sub_100376C60(v128, v129, v124, v125))
      {
        char v131 = sub_10037BAD0(v126, v130);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        if (v131) {
          goto LABEL_99;
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
      goto LABEL_107;
    case 0x15u:
      uint64_t v37 = (uint64_t)v172;
      uint64_t v132 = v166;
      sub_1003823F8((uint64_t)v172, v166, type metadata accessor for UntaggedResponse);
      uint64_t v133 = *(void *)v132;
      uint64_t v134 = *(void *)(v132 + 8);
      uint64_t v135 = *(void *)(v132 + 16);
      char v136 = *(unsigned char *)(v132 + 24);
      uint64_t v137 = v171;
      if (swift_getEnumCaseMultiPayload() == 21)
      {
        char v60 = static ApplePushService.__derived_enum_equals(_:_:)(v133, v134, v135, v136, *v137, v137[1], v137[2], *((unsigned char *)v137 + 24));
        sub_100295400();
        sub_100295400();
        sub_100381FF4((uint64_t)v172, type metadata accessor for UntaggedResponse);
        return v60 & 1;
      }
      sub_100295400();
      goto LABEL_74;
    default:
      uint64_t v37 = (uint64_t)v172;
      sub_1003823F8((uint64_t)v172, (uint64_t)v31, type metadata accessor for UntaggedResponse);
      unint64_t v38 = *v31;
      unint64_t v39 = v31[1];
      unint64_t v40 = v31[2];
      char v41 = v171;
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_3:
        sub_10036BC50(v38);
LABEL_73:
        swift_bridgeObjectRelease();
LABEL_74:
        sub_100007A48(v37, &qword_100713750);
        goto LABEL_75;
      }
LABEL_5:
      unint64_t v42 = *v41;
      unint64_t v43 = v41[1];
      unint64_t v44 = v41[2];
      unint64_t v45 = v42 & 0xF000000000000007;
      if ((~v38 & 0xF000000000000007) == 0)
      {
        if (v45 != 0xF000000000000007)
        {
          unint64_t v46 = v42;
LABEL_35:
          sub_10036BC50(v46);
          swift_bridgeObjectRelease();
LABEL_106:
          swift_bridgeObjectRelease();
          goto LABEL_107;
        }
LABEL_65:
        if (v39 != v43 || v40 != v44)
        {
          char v142 = sub_1005E3290();
          sub_10036BC50(v42);
          swift_bridgeObjectRelease();
          unint64_t v143 = v38;
          goto LABEL_98;
        }
        sub_10036BC50(v42);
        swift_bridgeObjectRelease();
        unint64_t v140 = v38;
LABEL_89:
        sub_10036BC50(v140);
        swift_bridgeObjectRelease();
        goto LABEL_99;
      }
      if (v45 != 0xF000000000000007)
      {
        sub_10036BCE8(v42);
        sub_10036BCE8(v38);
        static ResponseTextCode.__derived_enum_equals(_:_:)();
        char v139 = v138;
        sub_10036BC50(v42);
        sub_10036BC50(v38);
        if (v139) {
          goto LABEL_65;
        }
        sub_10036BC50(v42);
      }
      swift_bridgeObjectRelease();
      unint64_t v146 = v38;
LABEL_105:
      sub_10036BC50(v146);
      goto LABEL_106;
  }
}

uint64_t type metadata accessor for UntaggedResponse(uint64_t a1)
{
  return sub_10003B314(a1, qword_100713668);
}

BOOL _s13IMAP2Protocol25CommandCompletionResponseO21__derived_enum_equalsySbAC_ACtFZ_0(unint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a4)
  {
    if (a4 == 1)
    {
      if (a8 != 1) {
        return 0;
      }
    }
    else if (a8 != 2)
    {
      return 0;
    }
  }
  else if (a8)
  {
    return 0;
  }
  unint64_t v14 = a5 & 0xF000000000000007;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    if (v14 == 0xF000000000000007) {
      return 0;
    }
    swift_bridgeObjectRetain();
    sub_10036BCE8(a5);
    swift_bridgeObjectRetain();
    sub_10036BCE8(a1);
    static ResponseTextCode.__derived_enum_equals(_:_:)();
    if ((v15 & 1) == 0)
    {
      sub_10036BC50(a5);
      swift_bridgeObjectRelease();
      sub_10036BC50(a1);
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    if (v14 != 0xF000000000000007) {
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  if (a2 == a6 && a3 == a7)
  {
    sub_10036BC50(a5);
    swift_bridgeObjectRelease();
    sub_10036BC50(a1);
    swift_bridgeObjectRelease();
    return 1;
  }
  char v17 = sub_1005E3290();
  sub_10036BC50(a5);
  swift_bridgeObjectRelease();
  sub_10036BC50(a1);
  swift_bridgeObjectRelease();
  return (v17 & 1) != 0;
}

uint64_t _s13IMAP2Protocol8ResponseO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin();
  uint64_t v5 = (unint64_t *)((char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for Response(0);
  __chkstk_darwin();
  uint64_t v7 = (unsigned __int8 *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v29 - v8;
  sub_10000566C(&qword_100713748);
  uint64_t v10 = __chkstk_darwin();
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = &v12[*(int *)(v10 + 56)];
  sub_1003823F8(a1, (uint64_t)v12, type metadata accessor for Response);
  sub_1003823F8(a2, (uint64_t)v13, type metadata accessor for Response);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1003823F8((uint64_t)v12, (uint64_t)v9, type metadata accessor for Response);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_100382574((uint64_t)v13, (uint64_t)v5, type metadata accessor for UntaggedResponse);
      char v27 = _s13IMAP2Protocol16UntaggedResponseO21__derived_enum_equalsySbAC_ACtFZ_0((uint64_t)v9, v5);
      sub_100381FF4((uint64_t)v5, type metadata accessor for UntaggedResponse);
      sub_100381FF4((uint64_t)v9, type metadata accessor for UntaggedResponse);
      goto LABEL_11;
    }
    sub_100381FF4((uint64_t)v9, type metadata accessor for UntaggedResponse);
    goto LABEL_9;
  }
  sub_1003823F8((uint64_t)v12, (uint64_t)v7, type metadata accessor for Response);
  int v14 = *((_DWORD *)v7 + 1);
  unint64_t v16 = *((void *)v7 + 1);
  uint64_t v15 = *((void *)v7 + 2);
  uint64_t v17 = *((void *)v7 + 3);
  unsigned __int8 v18 = v7[32];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10036BC08(v16, v15, v17, v18);
LABEL_9:
    sub_100007A48((uint64_t)v12, &qword_100713748);
LABEL_13:
    char v27 = 0;
    return v27 & 1;
  }
  int v19 = *v7;
  unint64_t v21 = *((void *)v13 + 1);
  uint64_t v20 = *((void *)v13 + 2);
  uint64_t v22 = *((void *)v13 + 3);
  char v23 = v13[32];
  if (v19 != *v13 || v14 != *((_DWORD *)v13 + 1))
  {
    sub_10036BC08(*((void *)v13 + 1), *((void *)v13 + 2), *((void *)v13 + 3), v13[32]);
    sub_10036BC08(v16, v15, v17, v18);
    sub_100381FF4((uint64_t)v12, type metadata accessor for Response);
    goto LABEL_13;
  }
  unint64_t v24 = *((void *)v13 + 1);
  uint64_t v25 = *((void *)v13 + 2);
  unsigned __int8 v26 = v23;
  char v27 = _s13IMAP2Protocol25CommandCompletionResponseO21__derived_enum_equalsySbAC_ACtFZ_0(v16, v15, v17, v18, v24, v20, v22, v23);
  sub_10036BC08(v21, v25, v22, v26);
  sub_10036BC08(v16, v15, v17, v18);
LABEL_11:
  sub_100381FF4((uint64_t)v12, type metadata accessor for Response);
  return v27 & 1;
}

char *initializeBufferWithCopyOfBuffer for UntaggedResponse(char *a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v8 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        unint64_t v7 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_10036BCFC(*(void *)a2);
        }
        goto LABEL_19;
      case 1u:
        unint64_t v7 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_10036BCFC(*(void *)a2);
        }
        goto LABEL_19;
      case 2u:
        unint64_t v7 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_10036BCFC(*(void *)a2);
        }
        goto LABEL_19;
      case 3u:
        unint64_t v7 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_10036BCFC(*(void *)a2);
        }
        goto LABEL_19;
      case 4u:
        unint64_t v7 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_10036BCFC(*(void *)a2);
        }
LABEL_19:
        uint64_t v11 = *(void *)(a2 + 8);
        uint64_t v10 = *(void *)(a2 + 16);
        *(void *)a1 = v7;
        *((void *)a1 + 1) = v11;
        *((void *)a1 + 2) = v10;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
      case 6u:
      case 0xBu:
      case 0xDu:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
      case 8u:
        uint64_t v12 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v12;
        *((_DWORD *)a1 + 4) = *(_DWORD *)(a2 + 16);
        a1[20] = *(unsigned char *)(a2 + 20);
        uint64_t v13 = *(void *)(a2 + 32);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((void *)a1 + 4) = v13;
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        long long v14 = *(_OWORD *)(a2 + 96);
        *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
        *((_OWORD *)a1 + 6) = v14;
        *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
        long long v15 = *(_OWORD *)(a2 + 32);
        *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
        *((_OWORD *)a1 + 2) = v15;
        long long v16 = *(_OWORD *)(a2 + 64);
        *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
        *((_OWORD *)a1 + 4) = v16;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        uint64_t v17 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v17;
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        uint64_t v18 = *(void *)(a2 + 8);
        if (v18)
        {
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v18;
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          int v19 = *(_DWORD *)(a2 + 28);
          *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
          *((_DWORD *)a1 + 7) = v19;
          a1[32] = *(unsigned char *)(a2 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v32 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v32;
          a1[32] = *(unsigned char *)(a2 + 32);
        }
        a1[33] = *(unsigned char *)(a2 + 33);
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x11u:
      case 0x12u:
        uint64_t v20 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x13u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[4] = *(unsigned char *)(a2 + 4);
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        a1[12] = *(unsigned char *)(a2 + 12);
        int v21 = *(unsigned __int8 *)(a2 + 192);
        if (v21 == 254 || v21 == 255)
        {
          long long v22 = *(_OWORD *)(a2 + 160);
          *((_OWORD *)a1 + 9) = *(_OWORD *)(a2 + 144);
          *((_OWORD *)a1 + 10) = v22;
          *((_OWORD *)a1 + 11) = *(_OWORD *)(a2 + 176);
          a1[192] = *(unsigned char *)(a2 + 192);
          long long v23 = *(_OWORD *)(a2 + 96);
          *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
          *((_OWORD *)a1 + 6) = v23;
          long long v24 = *(_OWORD *)(a2 + 128);
          *((_OWORD *)a1 + 7) = *(_OWORD *)(a2 + 112);
          *((_OWORD *)a1 + 8) = v24;
          long long v25 = *(_OWORD *)(a2 + 32);
          *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
          *((_OWORD *)a1 + 2) = v25;
          long long v26 = *(_OWORD *)(a2 + 64);
          *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
          *((_OWORD *)a1 + 4) = v26;
        }
        else
        {
          char v97 = v21 & 1;
          uint64_t v33 = *(void *)(a2 + 48);
          uint64_t v34 = *(void *)(a2 + 56);
          uint64_t v67 = *(void *)(a2 + 64);
          uint64_t v69 = *(void *)(a2 + 80);
          uint64_t v71 = *(void *)(a2 + 88);
          uint64_t v73 = *(void *)(a2 + 96);
          uint64_t v75 = *(void *)(a2 + 104);
          uint64_t v77 = *(void *)(a2 + 112);
          uint64_t v79 = *(void *)(a2 + 120);
          uint64_t v81 = *(void *)(a2 + 128);
          uint64_t v83 = *(void *)(a2 + 136);
          uint64_t v85 = *(void *)(a2 + 144);
          uint64_t v87 = *(void *)(a2 + 152);
          uint64_t v89 = *(void *)(a2 + 160);
          uint64_t v91 = *(void *)(a2 + 168);
          uint64_t v93 = *(void *)(a2 + 176);
          uint64_t v95 = *(void *)(a2 + 184);
          uint64_t v35 = *(void *)(a2 + 16);
          uint64_t v36 = *(void *)(a2 + 24);
          uint64_t v37 = *(void *)(a2 + 32);
          uint64_t v38 = *(void *)(a2 + 40);
          uint64_t v39 = *(void *)(a2 + 72);
          sub_100136870(v35, v36, v37, v38, v33, v34, v67, v39, v69, v71, v73, v75, v77, v79, v81, v83, v85, v87, v89,
            v91,
            v93,
            v95,
            v21 & 1);
          *((void *)a1 + 2) = v35;
          *((void *)a1 + 3) = v36;
          *((void *)a1 + 4) = v37;
          *((void *)a1 + 5) = v38;
          *((void *)a1 + 6) = v33;
          *((void *)a1 + 7) = v34;
          *((void *)a1 + 8) = v67;
          *((void *)a1 + 9) = v39;
          *((void *)a1 + 10) = v69;
          *((void *)a1 + 11) = v71;
          *((void *)a1 + 12) = v73;
          *((void *)a1 + 13) = v75;
          *((void *)a1 + 14) = v77;
          *((void *)a1 + 15) = v79;
          *((void *)a1 + 16) = v81;
          *((void *)a1 + 17) = v83;
          *((void *)a1 + 18) = v85;
          *((void *)a1 + 19) = v87;
          *((void *)a1 + 20) = v89;
          *((void *)a1 + 21) = v91;
          *((void *)a1 + 22) = v93;
          *((void *)a1 + 23) = v95;
          a1[192] = v97;
        }
        *((void *)a1 + 25) = *(void *)(a2 + 200);
        int v40 = *(unsigned __int8 *)(a2 + 384);
        swift_bridgeObjectRetain();
        if (v40 == 254 || v40 == 255)
        {
          long long v41 = *(_OWORD *)(a2 + 352);
          *((_OWORD *)a1 + 21) = *(_OWORD *)(a2 + 336);
          *((_OWORD *)a1 + 22) = v41;
          *((_OWORD *)a1 + 23) = *(_OWORD *)(a2 + 368);
          a1[384] = *(unsigned char *)(a2 + 384);
          long long v42 = *(_OWORD *)(a2 + 288);
          *((_OWORD *)a1 + 17) = *(_OWORD *)(a2 + 272);
          *((_OWORD *)a1 + 18) = v42;
          long long v43 = *(_OWORD *)(a2 + 320);
          *((_OWORD *)a1 + 19) = *(_OWORD *)(a2 + 304);
          *((_OWORD *)a1 + 20) = v43;
          long long v44 = *(_OWORD *)(a2 + 224);
          *((_OWORD *)a1 + 13) = *(_OWORD *)(a2 + 208);
          *((_OWORD *)a1 + 14) = v44;
          long long v45 = *(_OWORD *)(a2 + 256);
          *((_OWORD *)a1 + 15) = *(_OWORD *)(a2 + 240);
          *((_OWORD *)a1 + 16) = v45;
        }
        else
        {
          char v98 = v40 & 1;
          uint64_t v46 = *(void *)(a2 + 240);
          uint64_t v47 = *(void *)(a2 + 248);
          uint64_t v68 = *(void *)(a2 + 256);
          uint64_t v70 = *(void *)(a2 + 272);
          uint64_t v72 = *(void *)(a2 + 280);
          uint64_t v74 = *(void *)(a2 + 288);
          uint64_t v76 = *(void *)(a2 + 296);
          uint64_t v78 = *(void *)(a2 + 304);
          uint64_t v80 = *(void *)(a2 + 312);
          uint64_t v82 = *(void *)(a2 + 320);
          uint64_t v84 = *(void *)(a2 + 328);
          uint64_t v86 = *(void *)(a2 + 336);
          uint64_t v88 = *(void *)(a2 + 344);
          uint64_t v90 = *(void *)(a2 + 352);
          uint64_t v92 = *(void *)(a2 + 360);
          uint64_t v94 = *(void *)(a2 + 368);
          uint64_t v96 = *(void *)(a2 + 376);
          char v66 = v40 & 1;
          uint64_t v48 = *(void *)(a2 + 208);
          uint64_t v49 = *(void *)(a2 + 216);
          uint64_t v50 = *(void *)(a2 + 224);
          uint64_t v51 = *(void *)(a2 + 232);
          uint64_t v52 = *(void *)(a2 + 264);
          sub_100136870(v48, v49, v50, v51, v46, v47, v68, v52, v70, v72, v74, v76, v78, v80, v82, v84, v86, v88, v90,
            v92,
            v94,
            v96,
            v66);
          *((void *)a1 + 26) = v48;
          *((void *)a1 + 27) = v49;
          *((void *)a1 + 28) = v50;
          *((void *)a1 + 29) = v51;
          *((void *)a1 + 30) = v46;
          *((void *)a1 + 31) = v47;
          *((void *)a1 + 32) = v68;
          *((void *)a1 + 33) = v52;
          *((void *)a1 + 34) = v70;
          *((void *)a1 + 35) = v72;
          *((void *)a1 + 36) = v74;
          *((void *)a1 + 37) = v76;
          *((void *)a1 + 38) = v78;
          *((void *)a1 + 39) = v80;
          *((void *)a1 + 40) = v82;
          *((void *)a1 + 41) = v84;
          *((void *)a1 + 42) = v86;
          *((void *)a1 + 43) = v88;
          *((void *)a1 + 44) = v90;
          *((void *)a1 + 45) = v92;
          *((void *)a1 + 46) = v94;
          *((void *)a1 + 47) = v96;
          a1[384] = v98;
        }
        uint64_t v53 = *(void *)(a2 + 432);
        if (v53)
        {
          uint64_t v54 = *(void *)(a2 + 400);
          *((void *)a1 + 49) = *(void *)(a2 + 392);
          *((void *)a1 + 50) = v54;
          *((void *)a1 + 51) = *(void *)(a2 + 408);
          *((void *)a1 + 52) = *(void *)(a2 + 416);
          *((_DWORD *)a1 + 106) = *(_DWORD *)(a2 + 424);
          *(_DWORD *)(a1 + 427) = *(_DWORD *)(a2 + 427);
          uint64_t v55 = *(void *)(a2 + 440);
          uint64_t v56 = *(void *)(a2 + 448);
          *((void *)a1 + 54) = v53;
          *((void *)a1 + 55) = v55;
          uint64_t v57 = *(void *)(a2 + 456);
          uint64_t v58 = *(void *)(a2 + 464);
          *((void *)a1 + 56) = v56;
          *((void *)a1 + 57) = v57;
          uint64_t v60 = *(void *)(a2 + 472);
          uint64_t v59 = *(void *)(a2 + 480);
          *((void *)a1 + 58) = v58;
          *((void *)a1 + 59) = v60;
          uint64_t v62 = *(void *)(a2 + 488);
          uint64_t v61 = *(void *)(a2 + 496);
          *((void *)a1 + 60) = v59;
          *((void *)a1 + 61) = v62;
          uint64_t v99 = *(void *)(a2 + 504);
          *((void *)a1 + 62) = v61;
          *((void *)a1 + 63) = v99;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v63 = *(_OWORD *)(a2 + 472);
          *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
          *(_OWORD *)(a1 + 472) = v63;
          *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
          *((void *)a1 + 63) = *(void *)(a2 + 504);
          long long v64 = *(_OWORD *)(a2 + 408);
          *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
          *(_OWORD *)(a1 + 408) = v64;
          long long v65 = *(_OWORD *)(a2 + 440);
          *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
          *(_OWORD *)(a1 + 440) = v65;
        }
        *((void *)a1 + 64) = *(void *)(a2 + 512);
        *((void *)a1 + 65) = *(void *)(a2 + 520);
        *((void *)a1 + 66) = *(void *)(a2 + 528);
        a1[536] = *(unsigned char *)(a2 + 536);
        *((_DWORD *)a1 + 135) = *(_DWORD *)(a2 + 540);
        a1[544] = *(unsigned char *)(a2 + 544);
        *((void *)a1 + 69) = *(void *)(a2 + 552);
        a1[560] = *(unsigned char *)(a2 + 560);
        *((void *)a1 + 71) = *(void *)(a2 + 568);
        *((void *)a1 + 72) = *(void *)(a2 + 576);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x14u:
        uint64_t v27 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v27;
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x15u:
        unint64_t v28 = *(void *)a2;
        uint64_t v29 = *(void *)(a2 + 8);
        uint64_t v30 = *(void *)(a2 + 16);
        char v31 = *(unsigned char *)(a2 + 24);
        sub_1002953E0();
        *(void *)a1 = v28;
        *((void *)a1 + 1) = v29;
        *((void *)a1 + 2) = v30;
        a1[24] = v31;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for UntaggedResponse(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      if ((~*(void *)a1 & 0xF000000000000007) != 0) {
        sub_10036BC64(*(void *)a1);
      }
      goto LABEL_9;
    case 5:
    case 6:
    case 9:
    case 11:
    case 13:
      goto LABEL_9;
    case 7:
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_16;
    case 10:
      goto LABEL_8;
    case 12:
      if (*(void *)(a1 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_9;
    case 17:
    case 18:
      uint64_t v3 = sub_10000566C(&qword_100712FE0);
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
    case 19:
      unsigned int v5 = *(unsigned __int8 *)(a1 + 192);
      if (v5 <= 0xFD) {
        sub_100061440(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160),
      }
          *(void *)(a1 + 168),
          *(void *)(a1 + 176),
          *(void *)(a1 + 184),
          v5 & 1);
      swift_bridgeObjectRelease();
      unsigned int v6 = *(unsigned __int8 *)(a1 + 384);
      if (v6 <= 0xFD) {
        sub_100061440(*(void *)(a1 + 208), *(void *)(a1 + 216), *(void *)(a1 + 224), *(void *)(a1 + 232), *(void *)(a1 + 240), *(void *)(a1 + 248), *(void *)(a1 + 256), *(void *)(a1 + 264), *(void *)(a1 + 272), *(void *)(a1 + 280), *(void *)(a1 + 288), *(void *)(a1 + 296), *(void *)(a1 + 304), *(void *)(a1 + 312), *(void *)(a1 + 320), *(void *)(a1 + 328), *(void *)(a1 + 336), *(void *)(a1 + 344), *(void *)(a1 + 352),
      }
          *(void *)(a1 + 360),
          *(void *)(a1 + 368),
          *(void *)(a1 + 376),
          v6 & 1);
      if (*(void *)(a1 + 432))
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_9:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 20:
      swift_release();
      swift_release();
LABEL_16:
      uint64_t result = swift_release();
      break;
    case 21:
      uint64_t result = sub_100295400();
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for UntaggedResponse(char *a1, uint64_t a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      unint64_t v6 = *(void *)a2;
      if ((~*(void *)a2 & 0xF000000000000007) != 0) {
        sub_10036BCFC(*(void *)a2);
      }
      goto LABEL_16;
    case 1u:
      unint64_t v6 = *(void *)a2;
      if ((~*(void *)a2 & 0xF000000000000007) != 0) {
        sub_10036BCFC(*(void *)a2);
      }
      goto LABEL_16;
    case 2u:
      unint64_t v6 = *(void *)a2;
      if ((~*(void *)a2 & 0xF000000000000007) != 0) {
        sub_10036BCFC(*(void *)a2);
      }
      goto LABEL_16;
    case 3u:
      unint64_t v6 = *(void *)a2;
      if ((~*(void *)a2 & 0xF000000000000007) != 0) {
        sub_10036BCFC(*(void *)a2);
      }
      goto LABEL_16;
    case 4u:
      unint64_t v6 = *(void *)a2;
      if ((~*(void *)a2 & 0xF000000000000007) != 0) {
        sub_10036BCFC(*(void *)a2);
      }
LABEL_16:
      uint64_t v8 = *(void *)(a2 + 8);
      uint64_t v7 = *(void *)(a2 + 16);
      *(void *)a1 = v6;
      *((void *)a1 + 1) = v8;
      *((void *)a1 + 2) = v7;
      swift_bridgeObjectRetain();
      goto LABEL_41;
    case 5u:
    case 6u:
    case 0xBu:
    case 0xDu:
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_41;
    case 7u:
    case 8u:
      uint64_t v9 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v9;
      *((_DWORD *)a1 + 4) = *(_DWORD *)(a2 + 16);
      a1[20] = *(unsigned char *)(a2 + 20);
      uint64_t v10 = *(void *)(a2 + 32);
      *((void *)a1 + 3) = *(void *)(a2 + 24);
      *((void *)a1 + 4) = v10;
      *((void *)a1 + 5) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_41;
    case 9u:
      *(void *)a1 = *(void *)a2;
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      long long v11 = *(_OWORD *)(a2 + 96);
      *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
      *((_OWORD *)a1 + 6) = v11;
      *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
      long long v12 = *(_OWORD *)(a2 + 32);
      *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
      *((_OWORD *)a1 + 2) = v12;
      long long v13 = *(_OWORD *)(a2 + 64);
      *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
      *((_OWORD *)a1 + 4) = v13;
      swift_bridgeObjectRetain();
      goto LABEL_41;
    case 0xAu:
      uint64_t v14 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v14;
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_41;
    case 0xCu:
      uint64_t v15 = *(void *)(a2 + 8);
      if (v15)
      {
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v15;
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        int v16 = *(_DWORD *)(a2 + 28);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        *((_DWORD *)a1 + 7) = v16;
        a1[32] = *(unsigned char *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v29 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v29;
        a1[32] = *(unsigned char *)(a2 + 32);
      }
      a1[33] = *(unsigned char *)(a2 + 33);
      *((void *)a1 + 5) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      goto LABEL_41;
    case 0x11u:
    case 0x12u:
      uint64_t v17 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
      goto LABEL_41;
    case 0x13u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[4] = *(unsigned char *)(a2 + 4);
      *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
      a1[12] = *(unsigned char *)(a2 + 12);
      int v18 = *(unsigned __int8 *)(a2 + 192);
      if (v18 == 254 || v18 == 255)
      {
        long long v19 = *(_OWORD *)(a2 + 160);
        *((_OWORD *)a1 + 9) = *(_OWORD *)(a2 + 144);
        *((_OWORD *)a1 + 10) = v19;
        *((_OWORD *)a1 + 11) = *(_OWORD *)(a2 + 176);
        a1[192] = *(unsigned char *)(a2 + 192);
        long long v20 = *(_OWORD *)(a2 + 96);
        *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
        *((_OWORD *)a1 + 6) = v20;
        long long v21 = *(_OWORD *)(a2 + 128);
        *((_OWORD *)a1 + 7) = *(_OWORD *)(a2 + 112);
        *((_OWORD *)a1 + 8) = v21;
        long long v22 = *(_OWORD *)(a2 + 32);
        *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
        *((_OWORD *)a1 + 2) = v22;
        long long v23 = *(_OWORD *)(a2 + 64);
        *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
        *((_OWORD *)a1 + 4) = v23;
      }
      else
      {
        char v95 = v18 & 1;
        uint64_t v30 = *(void *)(a2 + 48);
        uint64_t v31 = *(void *)(a2 + 56);
        uint64_t v65 = *(void *)(a2 + 64);
        uint64_t v67 = *(void *)(a2 + 80);
        uint64_t v69 = *(void *)(a2 + 88);
        uint64_t v71 = *(void *)(a2 + 96);
        uint64_t v73 = *(void *)(a2 + 104);
        uint64_t v75 = *(void *)(a2 + 112);
        uint64_t v77 = *(void *)(a2 + 120);
        uint64_t v79 = *(void *)(a2 + 128);
        uint64_t v81 = *(void *)(a2 + 136);
        uint64_t v83 = *(void *)(a2 + 144);
        uint64_t v85 = *(void *)(a2 + 152);
        uint64_t v87 = *(void *)(a2 + 160);
        uint64_t v89 = *(void *)(a2 + 168);
        uint64_t v91 = *(void *)(a2 + 176);
        uint64_t v93 = *(void *)(a2 + 184);
        uint64_t v32 = *(void *)(a2 + 16);
        uint64_t v33 = *(void *)(a2 + 24);
        uint64_t v34 = *(void *)(a2 + 32);
        uint64_t v35 = *(void *)(a2 + 40);
        uint64_t v36 = *(void *)(a2 + 72);
        sub_100136870(v32, v33, v34, v35, v30, v31, v65, v36, v67, v69, v71, v73, v75, v77, v79, v81, v83, v85, v87,
          v89,
          v91,
          v93,
          v18 & 1);
        *((void *)a1 + 2) = v32;
        *((void *)a1 + 3) = v33;
        *((void *)a1 + 4) = v34;
        *((void *)a1 + 5) = v35;
        *((void *)a1 + 6) = v30;
        *((void *)a1 + 7) = v31;
        *((void *)a1 + 8) = v65;
        *((void *)a1 + 9) = v36;
        *((void *)a1 + 10) = v67;
        *((void *)a1 + 11) = v69;
        *((void *)a1 + 12) = v71;
        *((void *)a1 + 13) = v73;
        *((void *)a1 + 14) = v75;
        *((void *)a1 + 15) = v77;
        *((void *)a1 + 16) = v79;
        *((void *)a1 + 17) = v81;
        *((void *)a1 + 18) = v83;
        *((void *)a1 + 19) = v85;
        *((void *)a1 + 20) = v87;
        *((void *)a1 + 21) = v89;
        *((void *)a1 + 22) = v91;
        *((void *)a1 + 23) = v93;
        a1[192] = v95;
      }
      *((void *)a1 + 25) = *(void *)(a2 + 200);
      int v37 = *(unsigned __int8 *)(a2 + 384);
      swift_bridgeObjectRetain();
      if (v37 == 254 || v37 == 255)
      {
        long long v38 = *(_OWORD *)(a2 + 352);
        *((_OWORD *)a1 + 21) = *(_OWORD *)(a2 + 336);
        *((_OWORD *)a1 + 22) = v38;
        *((_OWORD *)a1 + 23) = *(_OWORD *)(a2 + 368);
        a1[384] = *(unsigned char *)(a2 + 384);
        long long v39 = *(_OWORD *)(a2 + 288);
        *((_OWORD *)a1 + 17) = *(_OWORD *)(a2 + 272);
        *((_OWORD *)a1 + 18) = v39;
        long long v40 = *(_OWORD *)(a2 + 320);
        *((_OWORD *)a1 + 19) = *(_OWORD *)(a2 + 304);
        *((_OWORD *)a1 + 20) = v40;
        long long v41 = *(_OWORD *)(a2 + 224);
        *((_OWORD *)a1 + 13) = *(_OWORD *)(a2 + 208);
        *((_OWORD *)a1 + 14) = v41;
        long long v42 = *(_OWORD *)(a2 + 256);
        *((_OWORD *)a1 + 15) = *(_OWORD *)(a2 + 240);
        *((_OWORD *)a1 + 16) = v42;
      }
      else
      {
        char v96 = v37 & 1;
        uint64_t v43 = *(void *)(a2 + 240);
        uint64_t v44 = *(void *)(a2 + 248);
        uint64_t v66 = *(void *)(a2 + 256);
        uint64_t v68 = *(void *)(a2 + 272);
        uint64_t v70 = *(void *)(a2 + 280);
        uint64_t v72 = *(void *)(a2 + 288);
        uint64_t v74 = *(void *)(a2 + 296);
        uint64_t v76 = *(void *)(a2 + 304);
        uint64_t v78 = *(void *)(a2 + 312);
        uint64_t v80 = *(void *)(a2 + 320);
        uint64_t v82 = *(void *)(a2 + 328);
        uint64_t v84 = *(void *)(a2 + 336);
        uint64_t v86 = *(void *)(a2 + 344);
        uint64_t v88 = *(void *)(a2 + 352);
        uint64_t v90 = *(void *)(a2 + 360);
        uint64_t v92 = *(void *)(a2 + 368);
        uint64_t v94 = *(void *)(a2 + 376);
        char v64 = v37 & 1;
        uint64_t v45 = *(void *)(a2 + 208);
        uint64_t v46 = *(void *)(a2 + 216);
        uint64_t v47 = *(void *)(a2 + 224);
        uint64_t v48 = *(void *)(a2 + 232);
        uint64_t v49 = *(void *)(a2 + 264);
        sub_100136870(v45, v46, v47, v48, v43, v44, v66, v49, v68, v70, v72, v74, v76, v78, v80, v82, v84, v86, v88,
          v90,
          v92,
          v94,
          v64);
        *((void *)a1 + 26) = v45;
        *((void *)a1 + 27) = v46;
        *((void *)a1 + 28) = v47;
        *((void *)a1 + 29) = v48;
        *((void *)a1 + 30) = v43;
        *((void *)a1 + 31) = v44;
        *((void *)a1 + 32) = v66;
        *((void *)a1 + 33) = v49;
        *((void *)a1 + 34) = v68;
        *((void *)a1 + 35) = v70;
        *((void *)a1 + 36) = v72;
        *((void *)a1 + 37) = v74;
        *((void *)a1 + 38) = v76;
        *((void *)a1 + 39) = v78;
        *((void *)a1 + 40) = v80;
        *((void *)a1 + 41) = v82;
        *((void *)a1 + 42) = v84;
        *((void *)a1 + 43) = v86;
        *((void *)a1 + 44) = v88;
        *((void *)a1 + 45) = v90;
        *((void *)a1 + 46) = v92;
        *((void *)a1 + 47) = v94;
        a1[384] = v96;
      }
      uint64_t v50 = *(void *)(a2 + 432);
      if (v50)
      {
        uint64_t v51 = *(void *)(a2 + 400);
        *((void *)a1 + 49) = *(void *)(a2 + 392);
        *((void *)a1 + 50) = v51;
        *((void *)a1 + 51) = *(void *)(a2 + 408);
        *((void *)a1 + 52) = *(void *)(a2 + 416);
        *((_DWORD *)a1 + 106) = *(_DWORD *)(a2 + 424);
        *(_DWORD *)(a1 + 427) = *(_DWORD *)(a2 + 427);
        uint64_t v52 = *(void *)(a2 + 440);
        uint64_t v53 = *(void *)(a2 + 448);
        *((void *)a1 + 54) = v50;
        *((void *)a1 + 55) = v52;
        uint64_t v54 = *(void *)(a2 + 456);
        uint64_t v55 = *(void *)(a2 + 464);
        *((void *)a1 + 56) = v53;
        *((void *)a1 + 57) = v54;
        uint64_t v57 = *(void *)(a2 + 472);
        uint64_t v56 = *(void *)(a2 + 480);
        *((void *)a1 + 58) = v55;
        *((void *)a1 + 59) = v57;
        uint64_t v59 = *(void *)(a2 + 488);
        uint64_t v58 = *(void *)(a2 + 496);
        *((void *)a1 + 60) = v56;
        *((void *)a1 + 61) = v59;
        uint64_t v97 = *(void *)(a2 + 504);
        *((void *)a1 + 62) = v58;
        *((void *)a1 + 63) = v97;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v60 = *(_OWORD *)(a2 + 472);
        *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
        *(_OWORD *)(a1 + 472) = v60;
        *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
        *((void *)a1 + 63) = *(void *)(a2 + 504);
        long long v61 = *(_OWORD *)(a2 + 408);
        *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
        *(_OWORD *)(a1 + 408) = v61;
        long long v62 = *(_OWORD *)(a2 + 440);
        *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
        *(_OWORD *)(a1 + 440) = v62;
      }
      *((void *)a1 + 64) = *(void *)(a2 + 512);
      *((void *)a1 + 65) = *(void *)(a2 + 520);
      *((void *)a1 + 66) = *(void *)(a2 + 528);
      a1[536] = *(unsigned char *)(a2 + 536);
      *((_DWORD *)a1 + 135) = *(_DWORD *)(a2 + 540);
      a1[544] = *(unsigned char *)(a2 + 544);
      *((void *)a1 + 69) = *(void *)(a2 + 552);
      a1[560] = *(unsigned char *)(a2 + 560);
      *((void *)a1 + 71) = *(void *)(a2 + 568);
      *((void *)a1 + 72) = *(void *)(a2 + 576);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_41;
    case 0x14u:
      uint64_t v24 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v24;
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_41;
    case 0x15u:
      unint64_t v25 = *(void *)a2;
      uint64_t v26 = *(void *)(a2 + 8);
      uint64_t v27 = *(void *)(a2 + 16);
      char v28 = *(unsigned char *)(a2 + 24);
      sub_1002953E0();
      *(void *)a1 = v25;
      *((void *)a1 + 1) = v26;
      *((void *)a1 + 2) = v27;
      a1[24] = v28;
LABEL_41:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for UntaggedResponse(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100381FF4((uint64_t)a1, type metadata accessor for UntaggedResponse);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        unint64_t v6 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_10036BCFC(*(void *)a2);
        }
        goto LABEL_17;
      case 1u:
        unint64_t v6 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_10036BCFC(*(void *)a2);
        }
        goto LABEL_17;
      case 2u:
        unint64_t v6 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_10036BCFC(*(void *)a2);
        }
        goto LABEL_17;
      case 3u:
        unint64_t v6 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_10036BCFC(*(void *)a2);
        }
        goto LABEL_17;
      case 4u:
        unint64_t v6 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_10036BCFC(*(void *)a2);
        }
LABEL_17:
        *(void *)a1 = v6;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        swift_bridgeObjectRetain();
        goto LABEL_42;
      case 5u:
      case 6u:
      case 0xBu:
      case 0xDu:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_42;
      case 7u:
      case 8u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
        a1[20] = a2[20];
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_42;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        long long v7 = *((_OWORD *)a2 + 1);
        long long v8 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v8;
        *((_OWORD *)a1 + 1) = v7;
        long long v9 = *((_OWORD *)a2 + 4);
        long long v10 = *((_OWORD *)a2 + 5);
        long long v11 = *((_OWORD *)a2 + 6);
        *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
        *((_OWORD *)a1 + 5) = v10;
        *((_OWORD *)a1 + 6) = v11;
        *((_OWORD *)a1 + 4) = v9;
        swift_bridgeObjectRetain();
        goto LABEL_42;
      case 0xAu:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_42;
      case 0xCu:
        if (*((void *)a2 + 1))
        {
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          *((void *)a1 + 2) = *((void *)a2 + 2);
          *((_DWORD *)a1 + 6) = *((_DWORD *)a2 + 6);
          int v12 = *((_DWORD *)a2 + 7);
          a1[32] = a2[32];
          *((_DWORD *)a1 + 7) = v12;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v29 = *(_OWORD *)a2;
          long long v30 = *((_OWORD *)a2 + 1);
          a1[32] = a2[32];
          *(_OWORD *)a1 = v29;
          *((_OWORD *)a1 + 1) = v30;
        }
        a1[33] = a2[33];
        *((void *)a1 + 5) = *((void *)a2 + 5);
        swift_bridgeObjectRetain();
        goto LABEL_42;
      case 0x11u:
      case 0x12u:
        uint64_t v13 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        goto LABEL_42;
      case 0x13u:
        int v14 = *(_DWORD *)a2;
        a1[4] = a2[4];
        *(_DWORD *)a1 = v14;
        LOBYTE(v14) = a2[12];
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        a1[12] = v14;
        int v15 = a2[192];
        if (v15 == 254 || v15 == 255)
        {
          long long v16 = *((_OWORD *)a2 + 1);
          long long v17 = *((_OWORD *)a2 + 2);
          long long v18 = *((_OWORD *)a2 + 4);
          *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
          *((_OWORD *)a1 + 4) = v18;
          *((_OWORD *)a1 + 1) = v16;
          *((_OWORD *)a1 + 2) = v17;
          long long v19 = *((_OWORD *)a2 + 5);
          long long v20 = *((_OWORD *)a2 + 6);
          long long v21 = *((_OWORD *)a2 + 8);
          *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
          *((_OWORD *)a1 + 8) = v21;
          *((_OWORD *)a1 + 5) = v19;
          *((_OWORD *)a1 + 6) = v20;
          long long v22 = *((_OWORD *)a2 + 9);
          long long v23 = *((_OWORD *)a2 + 10);
          long long v24 = *((_OWORD *)a2 + 11);
          a1[192] = a2[192];
          *((_OWORD *)a1 + 10) = v23;
          *((_OWORD *)a1 + 11) = v24;
          *((_OWORD *)a1 + 9) = v22;
        }
        else
        {
          char v96 = v15 & 1;
          uint64_t v31 = *((void *)a2 + 6);
          uint64_t v32 = *((void *)a2 + 7);
          uint64_t v66 = *((void *)a2 + 8);
          uint64_t v68 = *((void *)a2 + 10);
          uint64_t v70 = *((void *)a2 + 11);
          uint64_t v72 = *((void *)a2 + 12);
          uint64_t v74 = *((void *)a2 + 13);
          uint64_t v76 = *((void *)a2 + 14);
          uint64_t v78 = *((void *)a2 + 15);
          uint64_t v80 = *((void *)a2 + 16);
          uint64_t v82 = *((void *)a2 + 17);
          uint64_t v84 = *((void *)a2 + 18);
          uint64_t v86 = *((void *)a2 + 19);
          uint64_t v88 = *((void *)a2 + 20);
          uint64_t v90 = *((void *)a2 + 21);
          uint64_t v92 = *((void *)a2 + 22);
          uint64_t v94 = *((void *)a2 + 23);
          uint64_t v33 = *((void *)a2 + 2);
          uint64_t v34 = *((void *)a2 + 3);
          uint64_t v35 = *((void *)a2 + 4);
          uint64_t v36 = *((void *)a2 + 5);
          uint64_t v37 = *((void *)a2 + 9);
          sub_100136870(v33, v34, v35, v36, v31, v32, v66, v37, v68, v70, v72, v74, v76, v78, v80, v82, v84, v86, v88,
            v90,
            v92,
            v94,
            v15 & 1);
          *((void *)a1 + 2) = v33;
          *((void *)a1 + 3) = v34;
          *((void *)a1 + 4) = v35;
          *((void *)a1 + 5) = v36;
          *((void *)a1 + 6) = v31;
          *((void *)a1 + 7) = v32;
          *((void *)a1 + 8) = v66;
          *((void *)a1 + 9) = v37;
          *((void *)a1 + 10) = v68;
          *((void *)a1 + 11) = v70;
          *((void *)a1 + 12) = v72;
          *((void *)a1 + 13) = v74;
          *((void *)a1 + 14) = v76;
          *((void *)a1 + 15) = v78;
          *((void *)a1 + 16) = v80;
          *((void *)a1 + 17) = v82;
          *((void *)a1 + 18) = v84;
          *((void *)a1 + 19) = v86;
          *((void *)a1 + 20) = v88;
          *((void *)a1 + 21) = v90;
          *((void *)a1 + 22) = v92;
          *((void *)a1 + 23) = v94;
          a1[192] = v96;
        }
        *((void *)a1 + 25) = *((void *)a2 + 25);
        int v38 = a2[384];
        swift_bridgeObjectRetain();
        if (v38 == 254 || v38 == 255)
        {
          long long v39 = *((_OWORD *)a2 + 13);
          long long v40 = *((_OWORD *)a2 + 14);
          long long v41 = *((_OWORD *)a2 + 16);
          *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
          *((_OWORD *)a1 + 16) = v41;
          *((_OWORD *)a1 + 13) = v39;
          *((_OWORD *)a1 + 14) = v40;
          long long v42 = *((_OWORD *)a2 + 17);
          long long v43 = *((_OWORD *)a2 + 18);
          long long v44 = *((_OWORD *)a2 + 20);
          *((_OWORD *)a1 + 19) = *((_OWORD *)a2 + 19);
          *((_OWORD *)a1 + 20) = v44;
          *((_OWORD *)a1 + 17) = v42;
          *((_OWORD *)a1 + 18) = v43;
          long long v45 = *((_OWORD *)a2 + 21);
          long long v46 = *((_OWORD *)a2 + 22);
          long long v47 = *((_OWORD *)a2 + 23);
          a1[384] = a2[384];
          *((_OWORD *)a1 + 22) = v46;
          *((_OWORD *)a1 + 23) = v47;
          *((_OWORD *)a1 + 21) = v45;
        }
        else
        {
          char v97 = v38 & 1;
          uint64_t v48 = *((void *)a2 + 30);
          uint64_t v49 = *((void *)a2 + 31);
          uint64_t v67 = *((void *)a2 + 32);
          uint64_t v69 = *((void *)a2 + 34);
          uint64_t v71 = *((void *)a2 + 35);
          uint64_t v73 = *((void *)a2 + 36);
          uint64_t v75 = *((void *)a2 + 37);
          uint64_t v77 = *((void *)a2 + 38);
          uint64_t v79 = *((void *)a2 + 39);
          uint64_t v81 = *((void *)a2 + 40);
          uint64_t v83 = *((void *)a2 + 41);
          uint64_t v85 = *((void *)a2 + 42);
          uint64_t v87 = *((void *)a2 + 43);
          uint64_t v89 = *((void *)a2 + 44);
          uint64_t v91 = *((void *)a2 + 45);
          uint64_t v93 = *((void *)a2 + 46);
          uint64_t v95 = *((void *)a2 + 47);
          char v65 = v38 & 1;
          uint64_t v50 = *((void *)a2 + 26);
          uint64_t v51 = *((void *)a2 + 27);
          uint64_t v52 = *((void *)a2 + 28);
          uint64_t v53 = *((void *)a2 + 29);
          uint64_t v54 = *((void *)a2 + 33);
          sub_100136870(v50, v51, v52, v53, v48, v49, v67, v54, v69, v71, v73, v75, v77, v79, v81, v83, v85, v87, v89,
            v91,
            v93,
            v95,
            v65);
          *((void *)a1 + 26) = v50;
          *((void *)a1 + 27) = v51;
          *((void *)a1 + 28) = v52;
          *((void *)a1 + 29) = v53;
          *((void *)a1 + 30) = v48;
          *((void *)a1 + 31) = v49;
          *((void *)a1 + 32) = v67;
          *((void *)a1 + 33) = v54;
          *((void *)a1 + 34) = v69;
          *((void *)a1 + 35) = v71;
          *((void *)a1 + 36) = v73;
          *((void *)a1 + 37) = v75;
          *((void *)a1 + 38) = v77;
          *((void *)a1 + 39) = v79;
          *((void *)a1 + 40) = v81;
          *((void *)a1 + 41) = v83;
          *((void *)a1 + 42) = v85;
          *((void *)a1 + 43) = v87;
          *((void *)a1 + 44) = v89;
          *((void *)a1 + 45) = v91;
          *((void *)a1 + 46) = v93;
          *((void *)a1 + 47) = v95;
          a1[384] = v97;
        }
        if (*((void *)a2 + 54))
        {
          *((void *)a1 + 49) = *((void *)a2 + 49);
          *((void *)a1 + 50) = *((void *)a2 + 50);
          *((void *)a1 + 51) = *((void *)a2 + 51);
          *((_DWORD *)a1 + 104) = *((_DWORD *)a2 + 104);
          *((_DWORD *)a1 + 105) = *((_DWORD *)a2 + 105);
          int v55 = *((_DWORD *)a2 + 106);
          *(_DWORD *)(a1 + 427) = *(_DWORD *)(a2 + 427);
          *((_DWORD *)a1 + 106) = v55;
          *((void *)a1 + 54) = *((void *)a2 + 54);
          *((void *)a1 + 55) = *((void *)a2 + 55);
          *((void *)a1 + 56) = *((void *)a2 + 56);
          *((void *)a1 + 57) = *((void *)a2 + 57);
          *((void *)a1 + 58) = *((void *)a2 + 58);
          *((void *)a1 + 59) = *((void *)a2 + 59);
          *((void *)a1 + 60) = *((void *)a2 + 60);
          *((void *)a1 + 61) = *((void *)a2 + 61);
          *((void *)a1 + 62) = *((void *)a2 + 62);
          *((void *)a1 + 63) = *((void *)a2 + 63);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v56 = *(_OWORD *)(a2 + 392);
          long long v57 = *(_OWORD *)(a2 + 408);
          long long v58 = *(_OWORD *)(a2 + 440);
          *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
          *(_OWORD *)(a1 + 440) = v58;
          *(_OWORD *)(a1 + 392) = v56;
          *(_OWORD *)(a1 + 408) = v57;
          long long v59 = *(_OWORD *)(a2 + 456);
          long long v60 = *(_OWORD *)(a2 + 472);
          long long v61 = *(_OWORD *)(a2 + 488);
          *((void *)a1 + 63) = *((void *)a2 + 63);
          *(_OWORD *)(a1 + 472) = v60;
          *(_OWORD *)(a1 + 488) = v61;
          *(_OWORD *)(a1 + 456) = v59;
        }
        *((void *)a1 + 64) = *((void *)a2 + 64);
        *((void *)a1 + 65) = *((void *)a2 + 65);
        uint64_t v62 = *((void *)a2 + 66);
        a1[536] = a2[536];
        *((void *)a1 + 66) = v62;
        LODWORD(v62) = *((_DWORD *)a2 + 135);
        a1[544] = a2[544];
        *((_DWORD *)a1 + 135) = v62;
        uint64_t v63 = *((void *)a2 + 69);
        a1[560] = a2[560];
        *((void *)a1 + 69) = v63;
        *((void *)a1 + 71) = *((void *)a2 + 71);
        *((void *)a1 + 72) = *((void *)a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_42;
      case 0x14u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_42;
      case 0x15u:
        unint64_t v25 = *(void *)a2;
        uint64_t v26 = *((void *)a2 + 1);
        uint64_t v27 = *((void *)a2 + 2);
        char v28 = a2[24];
        sub_1002953E0();
        *(void *)a1 = v25;
        *((void *)a1 + 1) = v26;
        *((void *)a1 + 2) = v27;
        a1[24] = v28;
LABEL_42:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for UntaggedResponse(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 18 || EnumCaseMultiPayload == 17)
  {
    uint64_t v7 = sub_10000566C(&qword_100712FE0);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for UntaggedResponse(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100381FF4((uint64_t)a1, type metadata accessor for UntaggedResponse);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 18 || EnumCaseMultiPayload == 17)
    {
      uint64_t v7 = sub_10000566C(&qword_100712FE0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_10037FABC()
{
  sub_100365C60();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

unint64_t destroy for CommandCompletionResponse(uint64_t a1)
{
  return sub_10036BC08(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for CommandCompletionResponse(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_10036C070(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for CommandCompletionResponse(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_10036C070(*(void *)a2, v4, v5, v6);
  unint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_10036BC08(v7, v8, v9, v10);
  return a1;
}

__n128 initializeWithTake for CommandCompletionResponse(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CommandCompletionResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  unint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_10036BC08(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for CommandCompletionResponse()
{
  return &type metadata for CommandCompletionResponse;
}

char *initializeBufferWithCopyOfBuffer for Response(char *a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v10 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      uint64_t v7 = *(void *)(a2 + 16);
      uint64_t v8 = *(void *)(a2 + 24);
      unsigned __int8 v9 = *(unsigned char *)(a2 + 32);
      sub_10036C070(v6, v7, v8, v9);
      *((void *)a1 + 1) = v6;
      *((void *)a1 + 2) = v7;
      *((void *)a1 + 3) = v8;
      a1[32] = v9;
    }
    else
    {
      uint64_t v11 = type metadata accessor for UntaggedResponse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          unint64_t v12 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_10036BCFC(*(void *)a2);
          }
          goto LABEL_20;
        case 1u:
          unint64_t v12 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_10036BCFC(*(void *)a2);
          }
          goto LABEL_20;
        case 2u:
          unint64_t v12 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_10036BCFC(*(void *)a2);
          }
          goto LABEL_20;
        case 3u:
          unint64_t v12 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_10036BCFC(*(void *)a2);
          }
          goto LABEL_20;
        case 4u:
          unint64_t v12 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_10036BCFC(*(void *)a2);
          }
LABEL_20:
          uint64_t v14 = *(void *)(a2 + 8);
          uint64_t v13 = *(void *)(a2 + 16);
          *(void *)a1 = v12;
          *((void *)a1 + 1) = v14;
          *((void *)a1 + 2) = v13;
          swift_bridgeObjectRetain();
          goto LABEL_45;
        case 5u:
        case 6u:
        case 0xBu:
        case 0xDu:
          *(void *)a1 = *(void *)a2;
          swift_bridgeObjectRetain();
          goto LABEL_45;
        case 7u:
        case 8u:
          uint64_t v15 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v15;
          *((_DWORD *)a1 + 4) = *(_DWORD *)(a2 + 16);
          a1[20] = *(unsigned char *)(a2 + 20);
          uint64_t v16 = *(void *)(a2 + 32);
          *((void *)a1 + 3) = *(void *)(a2 + 24);
          *((void *)a1 + 4) = v16;
          *((void *)a1 + 5) = *(void *)(a2 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_45;
        case 9u:
          *(void *)a1 = *(void *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          long long v17 = *(_OWORD *)(a2 + 96);
          *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
          *((_OWORD *)a1 + 6) = v17;
          *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
          long long v18 = *(_OWORD *)(a2 + 32);
          *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
          *((_OWORD *)a1 + 2) = v18;
          long long v19 = *(_OWORD *)(a2 + 64);
          *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
          *((_OWORD *)a1 + 4) = v19;
          swift_bridgeObjectRetain();
          goto LABEL_45;
        case 0xAu:
          uint64_t v20 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v20;
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_45;
        case 0xCu:
          uint64_t v21 = *(void *)(a2 + 8);
          if (v21)
          {
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = v21;
            *((void *)a1 + 2) = *(void *)(a2 + 16);
            int v22 = *(_DWORD *)(a2 + 28);
            *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
            *((_DWORD *)a1 + 7) = v22;
            a1[32] = *(unsigned char *)(a2 + 32);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v35 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *((_OWORD *)a1 + 1) = v35;
            a1[32] = *(unsigned char *)(a2 + 32);
          }
          a1[33] = *(unsigned char *)(a2 + 33);
          *((void *)a1 + 5) = *(void *)(a2 + 40);
          swift_bridgeObjectRetain();
          goto LABEL_45;
        case 0x11u:
        case 0x12u:
          uint64_t v23 = sub_10000566C(&qword_100712FE0);
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
          goto LABEL_45;
        case 0x13u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          a1[4] = *(unsigned char *)(a2 + 4);
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          a1[12] = *(unsigned char *)(a2 + 12);
          int v24 = *(unsigned __int8 *)(a2 + 192);
          if (v24 == 254 || v24 == 255)
          {
            long long v25 = *(_OWORD *)(a2 + 160);
            *((_OWORD *)a1 + 9) = *(_OWORD *)(a2 + 144);
            *((_OWORD *)a1 + 10) = v25;
            *((_OWORD *)a1 + 11) = *(_OWORD *)(a2 + 176);
            a1[192] = *(unsigned char *)(a2 + 192);
            long long v26 = *(_OWORD *)(a2 + 96);
            *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
            *((_OWORD *)a1 + 6) = v26;
            long long v27 = *(_OWORD *)(a2 + 128);
            *((_OWORD *)a1 + 7) = *(_OWORD *)(a2 + 112);
            *((_OWORD *)a1 + 8) = v27;
            long long v28 = *(_OWORD *)(a2 + 32);
            *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
            *((_OWORD *)a1 + 2) = v28;
            long long v29 = *(_OWORD *)(a2 + 64);
            *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
            *((_OWORD *)a1 + 4) = v29;
          }
          else
          {
            char v100 = v24 & 1;
            uint64_t v36 = *(void *)(a2 + 48);
            uint64_t v67 = *(void *)(a2 + 72);
            uint64_t v69 = *(void *)(a2 + 56);
            uint64_t v71 = *(void *)(a2 + 80);
            uint64_t v73 = *(void *)(a2 + 88);
            uint64_t v75 = *(void *)(a2 + 96);
            uint64_t v77 = *(void *)(a2 + 104);
            uint64_t v79 = *(void *)(a2 + 112);
            uint64_t v81 = *(void *)(a2 + 120);
            uint64_t v83 = *(void *)(a2 + 128);
            uint64_t v85 = *(void *)(a2 + 136);
            uint64_t v87 = *(void *)(a2 + 144);
            uint64_t v89 = *(void *)(a2 + 152);
            uint64_t v91 = *(void *)(a2 + 160);
            uint64_t v93 = *(void *)(a2 + 168);
            uint64_t v95 = *(void *)(a2 + 176);
            uint64_t v98 = *(void *)(a2 + 184);
            uint64_t v37 = *(void *)(a2 + 16);
            uint64_t v38 = *(void *)(a2 + 24);
            uint64_t v39 = *(void *)(a2 + 32);
            uint64_t v40 = *(void *)(a2 + 40);
            uint64_t v41 = *(void *)(a2 + 64);
            sub_100136870(v37, v38, v39, v40, v36, v69, v41, v67, v71, v73, v75, v77, v79, v81, v83, v85, v87, v89, v91,
              v93,
              v95,
              v98,
              v24 & 1);
            *((void *)a1 + 2) = v37;
            *((void *)a1 + 3) = v38;
            *((void *)a1 + 4) = v39;
            *((void *)a1 + 5) = v40;
            *((void *)a1 + 6) = v36;
            *((void *)a1 + 7) = v69;
            *((void *)a1 + 8) = v41;
            *((void *)a1 + 9) = v67;
            *((void *)a1 + 10) = v71;
            *((void *)a1 + 11) = v73;
            *((void *)a1 + 12) = v75;
            *((void *)a1 + 13) = v77;
            *((void *)a1 + 14) = v79;
            *((void *)a1 + 15) = v81;
            *((void *)a1 + 16) = v83;
            *((void *)a1 + 17) = v85;
            *((void *)a1 + 18) = v87;
            *((void *)a1 + 19) = v89;
            *((void *)a1 + 20) = v91;
            *((void *)a1 + 21) = v93;
            *((void *)a1 + 22) = v95;
            *((void *)a1 + 23) = v98;
            a1[192] = v100;
          }
          *((void *)a1 + 25) = *(void *)(a2 + 200);
          int v42 = *(unsigned __int8 *)(a2 + 384);
          swift_bridgeObjectRetain();
          if (v42 == 254 || v42 == 255)
          {
            long long v43 = *(_OWORD *)(a2 + 352);
            *((_OWORD *)a1 + 21) = *(_OWORD *)(a2 + 336);
            *((_OWORD *)a1 + 22) = v43;
            *((_OWORD *)a1 + 23) = *(_OWORD *)(a2 + 368);
            a1[384] = *(unsigned char *)(a2 + 384);
            long long v44 = *(_OWORD *)(a2 + 288);
            *((_OWORD *)a1 + 17) = *(_OWORD *)(a2 + 272);
            *((_OWORD *)a1 + 18) = v44;
            long long v45 = *(_OWORD *)(a2 + 320);
            *((_OWORD *)a1 + 19) = *(_OWORD *)(a2 + 304);
            *((_OWORD *)a1 + 20) = v45;
            long long v46 = *(_OWORD *)(a2 + 224);
            *((_OWORD *)a1 + 13) = *(_OWORD *)(a2 + 208);
            *((_OWORD *)a1 + 14) = v46;
            long long v47 = *(_OWORD *)(a2 + 256);
            *((_OWORD *)a1 + 15) = *(_OWORD *)(a2 + 240);
            *((_OWORD *)a1 + 16) = v47;
          }
          else
          {
            char v101 = v42 & 1;
            uint64_t v48 = *(void *)(a2 + 240);
            uint64_t v68 = *(void *)(a2 + 264);
            uint64_t v70 = *(void *)(a2 + 248);
            uint64_t v72 = *(void *)(a2 + 272);
            uint64_t v74 = *(void *)(a2 + 280);
            uint64_t v76 = *(void *)(a2 + 288);
            uint64_t v78 = *(void *)(a2 + 296);
            uint64_t v80 = *(void *)(a2 + 304);
            uint64_t v82 = *(void *)(a2 + 312);
            uint64_t v84 = *(void *)(a2 + 320);
            uint64_t v86 = *(void *)(a2 + 328);
            uint64_t v88 = *(void *)(a2 + 336);
            uint64_t v90 = *(void *)(a2 + 344);
            uint64_t v92 = *(void *)(a2 + 352);
            uint64_t v94 = *(void *)(a2 + 360);
            uint64_t v96 = *(void *)(a2 + 368);
            uint64_t v99 = *(void *)(a2 + 376);
            char v66 = v42 & 1;
            uint64_t v49 = *(void *)(a2 + 208);
            uint64_t v50 = *(void *)(a2 + 216);
            uint64_t v51 = *(void *)(a2 + 224);
            uint64_t v52 = *(void *)(a2 + 232);
            uint64_t v53 = *(void *)(a2 + 256);
            sub_100136870(v49, v50, v51, v52, v48, v70, v53, v68, v72, v74, v76, v78, v80, v82, v84, v86, v88, v90, v92,
              v94,
              v96,
              v99,
              v66);
            *((void *)a1 + 26) = v49;
            *((void *)a1 + 27) = v50;
            *((void *)a1 + 28) = v51;
            *((void *)a1 + 29) = v52;
            *((void *)a1 + 30) = v48;
            *((void *)a1 + 31) = v70;
            *((void *)a1 + 32) = v53;
            *((void *)a1 + 33) = v68;
            *((void *)a1 + 34) = v72;
            *((void *)a1 + 35) = v74;
            *((void *)a1 + 36) = v76;
            *((void *)a1 + 37) = v78;
            *((void *)a1 + 38) = v80;
            *((void *)a1 + 39) = v82;
            *((void *)a1 + 40) = v84;
            *((void *)a1 + 41) = v86;
            *((void *)a1 + 42) = v88;
            *((void *)a1 + 43) = v90;
            *((void *)a1 + 44) = v92;
            *((void *)a1 + 45) = v94;
            *((void *)a1 + 46) = v96;
            *((void *)a1 + 47) = v99;
            a1[384] = v101;
          }
          uint64_t v54 = *(void *)(a2 + 432);
          if (v54)
          {
            uint64_t v55 = *(void *)(a2 + 400);
            *((void *)a1 + 49) = *(void *)(a2 + 392);
            *((void *)a1 + 50) = v55;
            *((void *)a1 + 51) = *(void *)(a2 + 408);
            *((void *)a1 + 52) = *(void *)(a2 + 416);
            *((_DWORD *)a1 + 106) = *(_DWORD *)(a2 + 424);
            *(_DWORD *)(a1 + 427) = *(_DWORD *)(a2 + 427);
            uint64_t v56 = *(void *)(a2 + 440);
            uint64_t v57 = *(void *)(a2 + 448);
            *((void *)a1 + 54) = v54;
            *((void *)a1 + 55) = v56;
            uint64_t v58 = *(void *)(a2 + 456);
            uint64_t v59 = *(void *)(a2 + 464);
            *((void *)a1 + 56) = v57;
            *((void *)a1 + 57) = v58;
            uint64_t v61 = *(void *)(a2 + 472);
            uint64_t v60 = *(void *)(a2 + 480);
            *((void *)a1 + 58) = v59;
            *((void *)a1 + 59) = v61;
            uint64_t v97 = *(void *)(a2 + 488);
            *((void *)a1 + 60) = v60;
            *((void *)a1 + 61) = v97;
            uint64_t v102 = *(void *)(a2 + 504);
            *((void *)a1 + 62) = *(void *)(a2 + 496);
            *((void *)a1 + 63) = v102;
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v62 = *(_OWORD *)(a2 + 472);
            *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
            *(_OWORD *)(a1 + 472) = v62;
            *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
            *((void *)a1 + 63) = *(void *)(a2 + 504);
            long long v63 = *(_OWORD *)(a2 + 408);
            *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
            *(_OWORD *)(a1 + 408) = v63;
            long long v64 = *(_OWORD *)(a2 + 440);
            *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
            *(_OWORD *)(a1 + 440) = v64;
          }
          *((void *)a1 + 64) = *(void *)(a2 + 512);
          *((void *)a1 + 65) = *(void *)(a2 + 520);
          *((void *)a1 + 66) = *(void *)(a2 + 528);
          a1[536] = *(unsigned char *)(a2 + 536);
          *((_DWORD *)a1 + 135) = *(_DWORD *)(a2 + 540);
          a1[544] = *(unsigned char *)(a2 + 544);
          *((void *)a1 + 69) = *(void *)(a2 + 552);
          a1[560] = *(unsigned char *)(a2 + 560);
          *((void *)a1 + 71) = *(void *)(a2 + 568);
          *((void *)a1 + 72) = *(void *)(a2 + 576);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_45;
        case 0x14u:
          uint64_t v30 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v30;
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_45;
        case 0x15u:
          unint64_t v31 = *(void *)a2;
          uint64_t v32 = *(void *)(a2 + 8);
          uint64_t v33 = *(void *)(a2 + 16);
          char v34 = *(unsigned char *)(a2 + 24);
          sub_1002953E0();
          *(void *)a1 = v31;
          *((void *)a1 + 1) = v32;
          *((void *)a1 + 2) = v33;
          a1[24] = v34;
LABEL_45:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, (const void *)a2, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unint64_t destroy for Response(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v2 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(a1 + 16);
    uint64_t v4 = *(void *)(a1 + 24);
    unsigned __int8 v5 = *(unsigned char *)(a1 + 32);
    return sub_10036BC08(v2, v3, v4, v5);
  }
  else
  {
    type metadata accessor for UntaggedResponse(0);
    unint64_t result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
        if ((~*(void *)a1 & 0xF000000000000007) != 0) {
          sub_10036BC64(*(void *)a1);
        }
        goto LABEL_13;
      case 5:
      case 6:
      case 9:
      case 11:
      case 13:
        goto LABEL_13;
      case 7:
      case 8:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_20;
      case 10:
        goto LABEL_12;
      case 12:
        if (*(void *)(a1 + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_13;
      case 17:
      case 18:
        uint64_t v7 = sub_10000566C(&qword_100712FE0);
        uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
        return v8(a1, v7);
      case 19:
        unsigned int v9 = *(unsigned __int8 *)(a1 + 192);
        if (v9 <= 0xFD) {
          sub_100061440(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160),
        }
            *(void *)(a1 + 168),
            *(void *)(a1 + 176),
            *(void *)(a1 + 184),
            v9 & 1);
        swift_bridgeObjectRelease();
        unsigned int v10 = *(unsigned __int8 *)(a1 + 384);
        if (v10 <= 0xFD) {
          sub_100061440(*(void *)(a1 + 208), *(void *)(a1 + 216), *(void *)(a1 + 224), *(void *)(a1 + 232), *(void *)(a1 + 240), *(void *)(a1 + 248), *(void *)(a1 + 256), *(void *)(a1 + 264), *(void *)(a1 + 272), *(void *)(a1 + 280), *(void *)(a1 + 288), *(void *)(a1 + 296), *(void *)(a1 + 304), *(void *)(a1 + 312), *(void *)(a1 + 320), *(void *)(a1 + 328), *(void *)(a1 + 336), *(void *)(a1 + 344), *(void *)(a1 + 352),
        }
            *(void *)(a1 + 360),
            *(void *)(a1 + 368),
            *(void *)(a1 + 376),
            v10 & 1);
        if (*(void *)(a1 + 432))
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
LABEL_12:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_13:
        unint64_t result = swift_bridgeObjectRelease();
        break;
      case 20:
        swift_release();
        swift_release();
LABEL_20:
        unint64_t result = swift_release();
        break;
      case 21:
        unint64_t result = sub_100295400();
        break;
      default:
        return result;
    }
  }
  return result;
}

char *initializeWithCopy for Response(char *a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    uint64_t v5 = *(void *)(a2 + 16);
    uint64_t v6 = *(void *)(a2 + 24);
    unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
    sub_10036C070(v4, v5, v6, v7);
    *((void *)a1 + 1) = v4;
    *((void *)a1 + 2) = v5;
    *((void *)a1 + 3) = v6;
    a1[32] = v7;
  }
  else
  {
    uint64_t v8 = type metadata accessor for UntaggedResponse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        unint64_t v9 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_10036BCFC(*(void *)a2);
        }
        goto LABEL_18;
      case 1u:
        unint64_t v9 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_10036BCFC(*(void *)a2);
        }
        goto LABEL_18;
      case 2u:
        unint64_t v9 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_10036BCFC(*(void *)a2);
        }
        goto LABEL_18;
      case 3u:
        unint64_t v9 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_10036BCFC(*(void *)a2);
        }
        goto LABEL_18;
      case 4u:
        unint64_t v9 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000007) != 0) {
          sub_10036BCFC(*(void *)a2);
        }
LABEL_18:
        uint64_t v11 = *(void *)(a2 + 8);
        uint64_t v10 = *(void *)(a2 + 16);
        *(void *)a1 = v9;
        *((void *)a1 + 1) = v11;
        *((void *)a1 + 2) = v10;
        swift_bridgeObjectRetain();
        goto LABEL_43;
      case 5u:
      case 6u:
      case 0xBu:
      case 0xDu:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_43;
      case 7u:
      case 8u:
        uint64_t v12 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v12;
        *((_DWORD *)a1 + 4) = *(_DWORD *)(a2 + 16);
        a1[20] = *(unsigned char *)(a2 + 20);
        uint64_t v13 = *(void *)(a2 + 32);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((void *)a1 + 4) = v13;
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_43;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        long long v14 = *(_OWORD *)(a2 + 96);
        *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
        *((_OWORD *)a1 + 6) = v14;
        *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
        long long v15 = *(_OWORD *)(a2 + 32);
        *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
        *((_OWORD *)a1 + 2) = v15;
        long long v16 = *(_OWORD *)(a2 + 64);
        *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
        *((_OWORD *)a1 + 4) = v16;
        swift_bridgeObjectRetain();
        goto LABEL_43;
      case 0xAu:
        uint64_t v17 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v17;
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_43;
      case 0xCu:
        uint64_t v18 = *(void *)(a2 + 8);
        if (v18)
        {
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v18;
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          int v19 = *(_DWORD *)(a2 + 28);
          *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
          *((_DWORD *)a1 + 7) = v19;
          a1[32] = *(unsigned char *)(a2 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v32 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v32;
          a1[32] = *(unsigned char *)(a2 + 32);
        }
        a1[33] = *(unsigned char *)(a2 + 33);
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        swift_bridgeObjectRetain();
        goto LABEL_43;
      case 0x11u:
      case 0x12u:
        uint64_t v20 = sub_10000566C(&qword_100712FE0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        goto LABEL_43;
      case 0x13u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[4] = *(unsigned char *)(a2 + 4);
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        a1[12] = *(unsigned char *)(a2 + 12);
        int v21 = *(unsigned __int8 *)(a2 + 192);
        if (v21 == 254 || v21 == 255)
        {
          long long v22 = *(_OWORD *)(a2 + 160);
          *((_OWORD *)a1 + 9) = *(_OWORD *)(a2 + 144);
          *((_OWORD *)a1 + 10) = v22;
          *((_OWORD *)a1 + 11) = *(_OWORD *)(a2 + 176);
          a1[192] = *(unsigned char *)(a2 + 192);
          long long v23 = *(_OWORD *)(a2 + 96);
          *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
          *((_OWORD *)a1 + 6) = v23;
          long long v24 = *(_OWORD *)(a2 + 128);
          *((_OWORD *)a1 + 7) = *(_OWORD *)(a2 + 112);
          *((_OWORD *)a1 + 8) = v24;
          long long v25 = *(_OWORD *)(a2 + 32);
          *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
          *((_OWORD *)a1 + 2) = v25;
          long long v26 = *(_OWORD *)(a2 + 64);
          *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
          *((_OWORD *)a1 + 4) = v26;
        }
        else
        {
          char v97 = v21 & 1;
          uint64_t v33 = *(void *)(a2 + 48);
          uint64_t v64 = *(void *)(a2 + 72);
          uint64_t v66 = *(void *)(a2 + 56);
          uint64_t v68 = *(void *)(a2 + 80);
          uint64_t v70 = *(void *)(a2 + 88);
          uint64_t v72 = *(void *)(a2 + 96);
          uint64_t v74 = *(void *)(a2 + 104);
          uint64_t v76 = *(void *)(a2 + 112);
          uint64_t v78 = *(void *)(a2 + 120);
          uint64_t v80 = *(void *)(a2 + 128);
          uint64_t v82 = *(void *)(a2 + 136);
          uint64_t v84 = *(void *)(a2 + 144);
          uint64_t v86 = *(void *)(a2 + 152);
          uint64_t v88 = *(void *)(a2 + 160);
          uint64_t v90 = *(void *)(a2 + 168);
          uint64_t v92 = *(void *)(a2 + 176);
          uint64_t v95 = *(void *)(a2 + 184);
          uint64_t v34 = *(void *)(a2 + 16);
          uint64_t v35 = *(void *)(a2 + 24);
          uint64_t v36 = *(void *)(a2 + 32);
          uint64_t v37 = *(void *)(a2 + 40);
          uint64_t v38 = *(void *)(a2 + 64);
          sub_100136870(v34, v35, v36, v37, v33, v66, v38, v64, v68, v70, v72, v74, v76, v78, v80, v82, v84, v86, v88,
            v90,
            v92,
            v95,
            v21 & 1);
          *((void *)a1 + 2) = v34;
          *((void *)a1 + 3) = v35;
          *((void *)a1 + 4) = v36;
          *((void *)a1 + 5) = v37;
          *((void *)a1 + 6) = v33;
          *((void *)a1 + 7) = v66;
          *((void *)a1 + 8) = v38;
          *((void *)a1 + 9) = v64;
          *((void *)a1 + 10) = v68;
          *((void *)a1 + 11) = v70;
          *((void *)a1 + 12) = v72;
          *((void *)a1 + 13) = v74;
          *((void *)a1 + 14) = v76;
          *((void *)a1 + 15) = v78;
          *((void *)a1 + 16) = v80;
          *((void *)a1 + 17) = v82;
          *((void *)a1 + 18) = v84;
          *((void *)a1 + 19) = v86;
          *((void *)a1 + 20) = v88;
          *((void *)a1 + 21) = v90;
          *((void *)a1 + 22) = v92;
          *((void *)a1 + 23) = v95;
          a1[192] = v97;
        }
        *((void *)a1 + 25) = *(void *)(a2 + 200);
        int v39 = *(unsigned __int8 *)(a2 + 384);
        swift_bridgeObjectRetain();
        if (v39 == 254 || v39 == 255)
        {
          long long v40 = *(_OWORD *)(a2 + 352);
          *((_OWORD *)a1 + 21) = *(_OWORD *)(a2 + 336);
          *((_OWORD *)a1 + 22) = v40;
          *((_OWORD *)a1 + 23) = *(_OWORD *)(a2 + 368);
          a1[384] = *(unsigned char *)(a2 + 384);
          long long v41 = *(_OWORD *)(a2 + 288);
          *((_OWORD *)a1 + 17) = *(_OWORD *)(a2 + 272);
          *((_OWORD *)a1 + 18) = v41;
          long long v42 = *(_OWORD *)(a2 + 320);
          *((_OWORD *)a1 + 19) = *(_OWORD *)(a2 + 304);
          *((_OWORD *)a1 + 20) = v42;
          long long v43 = *(_OWORD *)(a2 + 224);
          *((_OWORD *)a1 + 13) = *(_OWORD *)(a2 + 208);
          *((_OWORD *)a1 + 14) = v43;
          long long v44 = *(_OWORD *)(a2 + 256);
          *((_OWORD *)a1 + 15) = *(_OWORD *)(a2 + 240);
          *((_OWORD *)a1 + 16) = v44;
        }
        else
        {
          char v98 = v39 & 1;
          uint64_t v45 = *(void *)(a2 + 240);
          uint64_t v65 = *(void *)(a2 + 264);
          uint64_t v67 = *(void *)(a2 + 248);
          uint64_t v69 = *(void *)(a2 + 272);
          uint64_t v71 = *(void *)(a2 + 280);
          uint64_t v73 = *(void *)(a2 + 288);
          uint64_t v75 = *(void *)(a2 + 296);
          uint64_t v77 = *(void *)(a2 + 304);
          uint64_t v79 = *(void *)(a2 + 312);
          uint64_t v81 = *(void *)(a2 + 320);
          uint64_t v83 = *(void *)(a2 + 328);
          uint64_t v85 = *(void *)(a2 + 336);
          uint64_t v87 = *(void *)(a2 + 344);
          uint64_t v89 = *(void *)(a2 + 352);
          uint64_t v91 = *(void *)(a2 + 360);
          uint64_t v93 = *(void *)(a2 + 368);
          uint64_t v96 = *(void *)(a2 + 376);
          char v63 = v39 & 1;
          uint64_t v46 = *(void *)(a2 + 208);
          uint64_t v47 = *(void *)(a2 + 216);
          uint64_t v48 = *(void *)(a2 + 224);
          uint64_t v49 = *(void *)(a2 + 232);
          uint64_t v50 = *(void *)(a2 + 256);
          sub_100136870(v46, v47, v48, v49, v45, v67, v50, v65, v69, v71, v73, v75, v77, v79, v81, v83, v85, v87, v89,
            v91,
            v93,
            v96,
            v63);
          *((void *)a1 + 26) = v46;
          *((void *)a1 + 27) = v47;
          *((void *)a1 + 28) = v48;
          *((void *)a1 + 29) = v49;
          *((void *)a1 + 30) = v45;
          *((void *)a1 + 31) = v67;
          *((void *)a1 + 32) = v50;
          *((void *)a1 + 33) = v65;
          *((void *)a1 + 34) = v69;
          *((void *)a1 + 35) = v71;
          *((void *)a1 + 36) = v73;
          *((void *)a1 + 37) = v75;
          *((void *)a1 + 38) = v77;
          *((void *)a1 + 39) = v79;
          *((void *)a1 + 40) = v81;
          *((void *)a1 + 41) = v83;
          *((void *)a1 + 42) = v85;
          *((void *)a1 + 43) = v87;
          *((void *)a1 + 44) = v89;
          *((void *)a1 + 45) = v91;
          *((void *)a1 + 46) = v93;
          *((void *)a1 + 47) = v96;
          a1[384] = v98;
        }
        uint64_t v51 = *(void *)(a2 + 432);
        if (v51)
        {
          uint64_t v52 = *(void *)(a2 + 400);
          *((void *)a1 + 49) = *(void *)(a2 + 392);
          *((void *)a1 + 50) = v52;
          *((void *)a1 + 51) = *(void *)(a2 + 408);
          *((void *)a1 + 52) = *(void *)(a2 + 416);
          *((_DWORD *)a1 + 106) = *(_DWORD *)(a2 + 424);
          *(_DWORD *)(a1 + 427) = *(_DWORD *)(a2 + 427);
          uint64_t v53 = *(void *)(a2 + 440);
          uint64_t v54 = *(void *)(a2 + 448);
          *((void *)a1 + 54) = v51;
          *((void *)a1 + 55) = v53;
          uint64_t v55 = *(void *)(a2 + 456);
          uint64_t v56 = *(void *)(a2 + 464);
          *((void *)a1 + 56) = v54;
          *((void *)a1 + 57) = v55;
          uint64_t v58 = *(void *)(a2 + 472);
          uint64_t v57 = *(void *)(a2 + 480);
          *((void *)a1 + 58) = v56;
          *((void *)a1 + 59) = v58;
          uint64_t v94 = *(void *)(a2 + 488);
          *((void *)a1 + 60) = v57;
          *((void *)a1 + 61) = v94;
          uint64_t v99 = *(void *)(a2 + 504);
          *((void *)a1 + 62) = *(void *)(a2 + 496);
          *((void *)a1 + 63) = v99;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v59 = *(_OWORD *)(a2 + 472);
          *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
          *(_OWORD *)(a1 + 472) = v59;
          *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
          *((void *)a1 + 63) = *(void *)(a2 + 504);
          long long v60 = *(_OWORD *)(a2 + 408);
          *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
          *(_OWORD *)(a1 + 408) = v60;
          long long v61 = *(_OWORD *)(a2 + 440);
          *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
          *(_OWORD *)(a1 + 440) = v61;
        }
        *((void *)a1 + 64) = *(void *)(a2 + 512);
        *((void *)a1 + 65) = *(void *)(a2 + 520);
        *((void *)a1 + 66) = *(void *)(a2 + 528);
        a1[536] = *(unsigned char *)(a2 + 536);
        *((_DWORD *)a1 + 135) = *(_DWORD *)(a2 + 540);
        a1[544] = *(unsigned char *)(a2 + 544);
        *((void *)a1 + 69) = *(void *)(a2 + 552);
        a1[560] = *(unsigned char *)(a2 + 560);
        *((void *)a1 + 71) = *(void *)(a2 + 568);
        *((void *)a1 + 72) = *(void *)(a2 + 576);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_43;
      case 0x14u:
        uint64_t v27 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v27;
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_43;
      case 0x15u:
        unint64_t v28 = *(void *)a2;
        uint64_t v29 = *(void *)(a2 + 8);
        uint64_t v30 = *(void *)(a2 + 16);
        char v31 = *(unsigned char *)(a2 + 24);
        sub_1002953E0();
        *(void *)a1 = v28;
        *((void *)a1 + 1) = v29;
        *((void *)a1 + 2) = v30;
        a1[24] = v31;
LABEL_43:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(void *)(*(void *)(v8 - 8) + 64));
        break;
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithCopy for Response(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_100381FF4((uint64_t)a1, type metadata accessor for Response);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      unint64_t v4 = *((void *)a2 + 1);
      uint64_t v5 = *((void *)a2 + 2);
      uint64_t v6 = *((void *)a2 + 3);
      unsigned __int8 v7 = a2[32];
      sub_10036C070(v4, v5, v6, v7);
      *((void *)a1 + 1) = v4;
      *((void *)a1 + 2) = v5;
      *((void *)a1 + 3) = v6;
      a1[32] = v7;
    }
    else
    {
      uint64_t v8 = type metadata accessor for UntaggedResponse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          unint64_t v9 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_10036BCFC(*(void *)a2);
          }
          goto LABEL_19;
        case 1u:
          unint64_t v9 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_10036BCFC(*(void *)a2);
          }
          goto LABEL_19;
        case 2u:
          unint64_t v9 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_10036BCFC(*(void *)a2);
          }
          goto LABEL_19;
        case 3u:
          unint64_t v9 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_10036BCFC(*(void *)a2);
          }
          goto LABEL_19;
        case 4u:
          unint64_t v9 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000007) != 0) {
            sub_10036BCFC(*(void *)a2);
          }
LABEL_19:
          *(void *)a1 = v9;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          *((void *)a1 + 2) = *((void *)a2 + 2);
          swift_bridgeObjectRetain();
          goto LABEL_44;
        case 5u:
        case 6u:
        case 0xBu:
        case 0xDu:
          *(void *)a1 = *(void *)a2;
          swift_bridgeObjectRetain();
          goto LABEL_44;
        case 7u:
        case 8u:
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
          a1[20] = a2[20];
          *((void *)a1 + 3) = *((void *)a2 + 3);
          *((void *)a1 + 4) = *((void *)a2 + 4);
          *((void *)a1 + 5) = *((void *)a2 + 5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_44;
        case 9u:
          *(void *)a1 = *(void *)a2;
          *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
          long long v10 = *((_OWORD *)a2 + 1);
          long long v11 = *((_OWORD *)a2 + 3);
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 3) = v11;
          *((_OWORD *)a1 + 1) = v10;
          long long v12 = *((_OWORD *)a2 + 4);
          long long v13 = *((_OWORD *)a2 + 5);
          long long v14 = *((_OWORD *)a2 + 6);
          *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
          *((_OWORD *)a1 + 5) = v13;
          *((_OWORD *)a1 + 6) = v14;
          *((_OWORD *)a1 + 4) = v12;
          swift_bridgeObjectRetain();
          goto LABEL_44;
        case 0xAu:
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          *((void *)a1 + 2) = *((void *)a2 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_44;
        case 0xCu:
          if (*((void *)a2 + 1))
          {
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = *((void *)a2 + 1);
            *((void *)a1 + 2) = *((void *)a2 + 2);
            *((_DWORD *)a1 + 6) = *((_DWORD *)a2 + 6);
            int v15 = *((_DWORD *)a2 + 7);
            a1[32] = a2[32];
            *((_DWORD *)a1 + 7) = v15;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v32 = *(_OWORD *)a2;
            long long v33 = *((_OWORD *)a2 + 1);
            a1[32] = a2[32];
            *(_OWORD *)a1 = v32;
            *((_OWORD *)a1 + 1) = v33;
          }
          a1[33] = a2[33];
          *((void *)a1 + 5) = *((void *)a2 + 5);
          swift_bridgeObjectRetain();
          goto LABEL_44;
        case 0x11u:
        case 0x12u:
          uint64_t v16 = sub_10000566C(&qword_100712FE0);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
          goto LABEL_44;
        case 0x13u:
          int v17 = *(_DWORD *)a2;
          a1[4] = a2[4];
          *(_DWORD *)a1 = v17;
          LOBYTE(v17) = a2[12];
          *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
          a1[12] = v17;
          int v18 = a2[192];
          if (v18 == 254 || v18 == 255)
          {
            long long v19 = *((_OWORD *)a2 + 1);
            long long v20 = *((_OWORD *)a2 + 2);
            long long v21 = *((_OWORD *)a2 + 4);
            *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
            *((_OWORD *)a1 + 4) = v21;
            *((_OWORD *)a1 + 1) = v19;
            *((_OWORD *)a1 + 2) = v20;
            long long v22 = *((_OWORD *)a2 + 5);
            long long v23 = *((_OWORD *)a2 + 6);
            long long v24 = *((_OWORD *)a2 + 8);
            *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 8) = v24;
            *((_OWORD *)a1 + 5) = v22;
            *((_OWORD *)a1 + 6) = v23;
            long long v25 = *((_OWORD *)a2 + 9);
            long long v26 = *((_OWORD *)a2 + 10);
            long long v27 = *((_OWORD *)a2 + 11);
            a1[192] = a2[192];
            *((_OWORD *)a1 + 10) = v26;
            *((_OWORD *)a1 + 11) = v27;
            *((_OWORD *)a1 + 9) = v25;
          }
          else
          {
            char v99 = v18 & 1;
            uint64_t v34 = *((void *)a2 + 6);
            uint64_t v67 = *((void *)a2 + 9);
            uint64_t v69 = *((void *)a2 + 7);
            uint64_t v71 = *((void *)a2 + 10);
            uint64_t v73 = *((void *)a2 + 11);
            uint64_t v75 = *((void *)a2 + 12);
            uint64_t v77 = *((void *)a2 + 13);
            uint64_t v79 = *((void *)a2 + 14);
            uint64_t v81 = *((void *)a2 + 15);
            uint64_t v83 = *((void *)a2 + 16);
            uint64_t v85 = *((void *)a2 + 17);
            uint64_t v87 = *((void *)a2 + 18);
            uint64_t v89 = *((void *)a2 + 19);
            uint64_t v91 = *((void *)a2 + 20);
            uint64_t v93 = *((void *)a2 + 21);
            uint64_t v95 = *((void *)a2 + 22);
            uint64_t v97 = *((void *)a2 + 23);
            uint64_t v35 = *((void *)a2 + 2);
            uint64_t v36 = *((void *)a2 + 3);
            uint64_t v37 = *((void *)a2 + 4);
            uint64_t v38 = *((void *)a2 + 5);
            uint64_t v39 = *((void *)a2 + 8);
            sub_100136870(v35, v36, v37, v38, v34, v69, v39, v67, v71, v73, v75, v77, v79, v81, v83, v85, v87, v89, v91,
              v93,
              v95,
              v97,
              v18 & 1);
            *((void *)a1 + 2) = v35;
            *((void *)a1 + 3) = v36;
            *((void *)a1 + 4) = v37;
            *((void *)a1 + 5) = v38;
            *((void *)a1 + 6) = v34;
            *((void *)a1 + 7) = v69;
            *((void *)a1 + 8) = v39;
            *((void *)a1 + 9) = v67;
            *((void *)a1 + 10) = v71;
            *((void *)a1 + 11) = v73;
            *((void *)a1 + 12) = v75;
            *((void *)a1 + 13) = v77;
            *((void *)a1 + 14) = v79;
            *((void *)a1 + 15) = v81;
            *((void *)a1 + 16) = v83;
            *((void *)a1 + 17) = v85;
            *((void *)a1 + 18) = v87;
            *((void *)a1 + 19) = v89;
            *((void *)a1 + 20) = v91;
            *((void *)a1 + 21) = v93;
            *((void *)a1 + 22) = v95;
            *((void *)a1 + 23) = v97;
            a1[192] = v99;
          }
          *((void *)a1 + 25) = *((void *)a2 + 25);
          int v40 = a2[384];
          swift_bridgeObjectRetain();
          if (v40 == 254 || v40 == 255)
          {
            long long v41 = *((_OWORD *)a2 + 13);
            long long v42 = *((_OWORD *)a2 + 14);
            long long v43 = *((_OWORD *)a2 + 16);
            *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
            *((_OWORD *)a1 + 16) = v43;
            *((_OWORD *)a1 + 13) = v41;
            *((_OWORD *)a1 + 14) = v42;
            long long v44 = *((_OWORD *)a2 + 17);
            long long v45 = *((_OWORD *)a2 + 18);
            long long v46 = *((_OWORD *)a2 + 20);
            *((_OWORD *)a1 + 19) = *((_OWORD *)a2 + 19);
            *((_OWORD *)a1 + 20) = v46;
            *((_OWORD *)a1 + 17) = v44;
            *((_OWORD *)a1 + 18) = v45;
            long long v47 = *((_OWORD *)a2 + 21);
            long long v48 = *((_OWORD *)a2 + 22);
            long long v49 = *((_OWORD *)a2 + 23);
            a1[384] = a2[384];
            *((_OWORD *)a1 + 22) = v48;
            *((_OWORD *)a1 + 23) = v49;
            *((_OWORD *)a1 + 21) = v47;
          }
          else
          {
            char v100 = v40 & 1;
            uint64_t v50 = *((void *)a2 + 30);
            uint64_t v68 = *((void *)a2 + 33);
            uint64_t v70 = *((void *)a2 + 31);
            uint64_t v72 = *((void *)a2 + 34);
            uint64_t v74 = *((void *)a2 + 35);
            uint64_t v76 = *((void *)a2 + 36);
            uint64_t v78 = *((void *)a2 + 37);
            uint64_t v80 = *((void *)a2 + 38);
            uint64_t v82 = *((void *)a2 + 39);
            uint64_t v84 = *((void *)a2 + 40);
            uint64_t v86 = *((void *)a2 + 41);
            uint64_t v88 = *((void *)a2 + 42);
            uint64_t v90 = *((void *)a2 + 43);
            uint64_t v92 = *((void *)a2 + 44);
            uint64_t v94 = *((void *)a2 + 45);
            uint64_t v96 = *((void *)a2 + 46);
            uint64_t v98 = *((void *)a2 + 47);
            char v66 = v40 & 1;
            uint64_t v51 = *((void *)a2 + 26);
            uint64_t v52 = *((void *)a2 + 27);
            uint64_t v53 = *((void *)a2 + 28);
            uint64_t v54 = *((void *)a2 + 29);
            uint64_t v55 = *((void *)a2 + 32);
            sub_100136870(v51, v52, v53, v54, v50, v70, v55, v68, v72, v74, v76, v78, v80, v82, v84, v86, v88, v90, v92,
              v94,
              v96,
              v98,
              v66);
            *((void *)a1 + 26) = v51;
            *((void *)a1 + 27) = v52;
            *((void *)a1 + 28) = v53;
            *((void *)a1 + 29) = v54;
            *((void *)a1 + 30) = v50;
            *((void *)a1 + 31) = v70;
            *((void *)a1 + 32) = v55;
            *((void *)a1 + 33) = v68;
            *((void *)a1 + 34) = v72;
            *((void *)a1 + 35) = v74;
            *((void *)a1 + 36) = v76;
            *((void *)a1 + 37) = v78;
            *((void *)a1 + 38) = v80;
            *((void *)a1 + 39) = v82;
            *((void *)a1 + 40) = v84;
            *((void *)a1 + 41) = v86;
            *((void *)a1 + 42) = v88;
            *((void *)a1 + 43) = v90;
            *((void *)a1 + 44) = v92;
            *((void *)a1 + 45) = v94;
            *((void *)a1 + 46) = v96;
            *((void *)a1 + 47) = v98;
            a1[384] = v100;
          }
          if (*((void *)a2 + 54))
          {
            *((void *)a1 + 49) = *((void *)a2 + 49);
            *((void *)a1 + 50) = *((void *)a2 + 50);
            *((void *)a1 + 51) = *((void *)a2 + 51);
            *((_DWORD *)a1 + 104) = *((_DWORD *)a2 + 104);
            *((_DWORD *)a1 + 105) = *((_DWORD *)a2 + 105);
            int v56 = *((_DWORD *)a2 + 106);
            *(_DWORD *)(a1 + 427) = *(_DWORD *)(a2 + 427);
            *((_DWORD *)a1 + 106) = v56;
            *((void *)a1 + 54) = *((void *)a2 + 54);
            *((void *)a1 + 55) = *((void *)a2 + 55);
            *((void *)a1 + 56) = *((void *)a2 + 56);
            *((void *)a1 + 57) = *((void *)a2 + 57);
            *((void *)a1 + 58) = *((void *)a2 + 58);
            *((void *)a1 + 59) = *((void *)a2 + 59);
            *((void *)a1 + 60) = *((void *)a2 + 60);
            *((void *)a1 + 61) = *((void *)a2 + 61);
            *((void *)a1 + 62) = *((void *)a2 + 62);
            *((void *)a1 + 63) = *((void *)a2 + 63);
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v57 = *(_OWORD *)(a2 + 392);
            long long v58 = *(_OWORD *)(a2 + 408);
            long long v59 = *(_OWORD *)(a2 + 440);
            *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
            *(_OWORD *)(a1 + 440) = v59;
            *(_OWORD *)(a1 + 392) = v57;
            *(_OWORD *)(a1 + 408) = v58;
            long long v60 = *(_OWORD *)(a2 + 456);
            long long v61 = *(_OWORD *)(a2 + 472);
            long long v62 = *(_OWORD *)(a2 + 488);
            *((void *)a1 + 63) = *((void *)a2 + 63);
            *(_OWORD *)(a1 + 472) = v61;
            *(_OWORD *)(a1 + 488) = v62;
            *(_OWORD *)(a1 + 456) = v60;
          }
          *((void *)a1 + 64) = *((void *)a2 + 64);
          *((void *)a1 + 65) = *((void *)a2 + 65);
          uint64_t v63 = *((void *)a2 + 66);
          a1[536] = a2[536];
          *((void *)a1 + 66) = v63;
          LODWORD(v63) = *((_DWORD *)a2 + 135);
          a1[544] = a2[544];
          *((_DWORD *)a1 + 135) = v63;
          uint64_t v64 = *((void *)a2 + 69);
          a1[560] = a2[560];
          *((void *)a1 + 69) = v64;
          *((void *)a1 + 71) = *((void *)a2 + 71);
          *((void *)a1 + 72) = *((void *)a2 + 72);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_44;
        case 0x14u:
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          *((void *)a1 + 2) = *((void *)a2 + 2);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_44;
        case 0x15u:
          unint64_t v28 = *(void *)a2;
          uint64_t v29 = *((void *)a2 + 1);
          uint64_t v30 = *((void *)a2 + 2);
          char v31 = a2[24];
          sub_1002953E0();
          *(void *)a1 = v28;
          *((void *)a1 + 1) = v29;
          *((void *)a1 + 2) = v30;
          a1[24] = v31;
LABEL_44:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100381FF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100382368()
{
  uint64_t result = type metadata accessor for UntaggedResponse(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}