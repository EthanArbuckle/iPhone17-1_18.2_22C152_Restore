ValueMetadata *type metadata accessor for UnauthenticatedState.Update()
{
  return &type metadata for UnauthenticatedState.Update;
}

uint64_t destroy for UnauthenticatedState.ConnectionTLS(uint64_t *a1)
{
  return sub_100451F2C(*a1);
}

uint64_t *_s15IMAP2Connection20UnauthenticatedStateO13ConnectionTLSOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  sub_1004A03E8(*a2);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for UnauthenticatedState.ConnectionTLS(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  sub_1004A03E8(*a2);
  uint64_t v6 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_100451F2C(v6);
  return a1;
}

uint64_t *assignWithTake for UnauthenticatedState.ConnectionTLS(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_100451F2C(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnauthenticatedState.ConnectionTLS(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  HIDWORD(v3) = *(_DWORD *)(a1 + 4);
  LODWORD(v3) = HIDWORD(v3);
  unsigned int v2 = v3 >> 30;
  if (v2 > 0x80000000) {
    int v4 = ~v2;
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UnauthenticatedState.ConnectionTLS(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      HIDWORD(v3) = -a2;
      LODWORD(v3) = -a2;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)result = (unint64_t)(v3 >> 2) << 32;
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unint64_t *sub_1004FF2F0(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    *result = *(unsigned int *)result | (unint64_t)(a2 << 62);
  }
  else
  {
    result[1] = 0;
    result[2] = 0;
    *result = (a2 - 2) | 0x8000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for UnauthenticatedState.ConnectionTLS()
{
  return &type metadata for UnauthenticatedState.ConnectionTLS;
}

uint64_t destroy for UnauthenticatedState.Error(uint64_t a1)
{
  return sub_10046564C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s15IMAP2Connection20UnauthenticatedStateO5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1004A9860(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for UnauthenticatedState.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1004A9860(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_10046564C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for UnauthenticatedState.Error(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_10046564C(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for UnauthenticatedState.Error()
{
  return &type metadata for UnauthenticatedState.Error;
}

uint64_t *sub_1004FF438(uint64_t *a1)
{
  uint64_t v2 = a1[8];
  uint64_t v3 = a1[9];
  uint64_t v4 = a1[10];
  sub_1004FEC14(*a1, a1[1], a1[2]);
  sub_1004FEC14(v2, v3, v4);
  return a1;
}

uint64_t sub_1004FF4C8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 176);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    v4);
  return a1;
}

unint64_t sub_1004FF540(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t, uint64_t, uint64_t, uint64_t), uint64_t a5, unint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v13 = type metadata accessor for UntaggedResponse(0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  v16 = &v55[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v18 = &v55[-v17];
  uint64_t v61 = a2;
  uint64_t v62 = a3;
  unint64_t result = type metadata accessor for UnauthenticatedStateWithTasks();
  uint64_t v20 = *(int *)(result + 24);
  uint64_t v21 = v7 + v20;
  switch(a1 >> 60)
  {
    case 1uLL:
      sub_100504C04(v7 + v20, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      *(_OWORD *)uint64_t v21 = xmmword_1006258C0;
      *(unsigned char *)(v21 + 16) = 2;
      type metadata accessor for UnauthenticatedState();
      unint64_t result = swift_storeEnumTagMultiPayload();
      break;
    case 3uLL:
      unint64_t v22 = result;
      uint64_t v59 = a1 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v23 = swift_projectBox();
      sub_100504B9C(v23, (uint64_t)v18, type metadata accessor for UntaggedResponse);
      unint64_t v24 = sub_1004FBA60(v18, a6, (uint64_t *)v21, (void (*)(char **__return_ptr, uint64_t))sub_1004AE9A4, (uint64_t)v60);
      uint64_t v26 = v25;
      uint64_t v28 = v27;
      uint64_t v30 = v29;
      sub_100504C04((uint64_t)v18, type metadata accessor for UntaggedResponse);
      if (v24 <= 0xFFFFFFFEFFFFFFFFLL)
      {
        a4(v24, v26, v28, v30);
        sub_100504C64(v24);
      }
      uint64_t v31 = swift_projectBox();
      sub_100504B9C(v31, (uint64_t)v16, type metadata accessor for UntaggedResponse);
      uint64_t v32 = *(int *)(v22 + 28);
      v33 = *(void **)(v7 + v32);
      uint64_t v34 = v33[2];
      if (v34)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_23:
        }
          v33 = sub_1004D32A8(v33);
        unint64_t v35 = 0;
        *(void *)(v7 + v32) = v33;
        uint64_t v36 = (uint64_t)(v33 + 5);
        do
        {
          if (v35 >= v33[2])
          {
            __break(1u);
            goto LABEL_23;
          }
          ++v35;
          uint64_t v37 = *(void *)(v36 + 24);
          uint64_t v38 = *(void *)(v36 + 32);
          sub_100057374(v36, v37);
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(v38 + 24))(v16, v37, v38);
          v36 += 48;
        }
        while (v34 != v35);
        *(void *)(v7 + v32) = v33;
      }
      unint64_t result = sub_100504C04((uint64_t)v16, type metadata accessor for UntaggedResponse);
      break;
    case 4uLL:
      uint64_t v40 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v39 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v41 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v42 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      unsigned int v43 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      sub_100483498(v39, v41, v42, *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x30));
      v44 = sub_10050196C(v39, v41, v42, v43, v40, a6);
      uint64_t v45 = v44[2];
      if (v45)
      {
        unsigned int v56 = v43;
        uint64_t v57 = v42;
        uint64_t v58 = v41;
        uint64_t v59 = v39;
        v46 = v44 + 7;
        do
        {
          unint64_t v47 = *(v46 - 3);
          uint64_t v48 = *(v46 - 2);
          uint64_t v49 = *(v46 - 1);
          uint64_t v50 = *v46;
          sub_100484BD4(v47);
          a4(v47, v48, v49, v50);
          sub_100484C20(v47);
          v46 += 4;
          --v45;
        }
        while (v45);
        swift_bridgeObjectRelease();
        uint64_t v52 = v58;
        unint64_t v51 = v59;
        uint64_t v53 = v57;
        unsigned __int8 v54 = v56;
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v51 = v39;
        uint64_t v52 = v41;
        uint64_t v53 = v42;
        unsigned __int8 v54 = v43;
      }
      unint64_t result = sub_1004832E0(v51, v52, v53, v54);
      break;
    default:
      return result;
  }
  return result;
}

long long *sub_1004FF980(uint64_t a1, unint64_t a2, char a3, void (*a4)(unint64_t, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v8 = v6;
  char v13 = a3 & 1;
  sub_10044B198(a1, a2, a3 & 1);
  uint64_t v14 = &v25;
  sub_100501B58(v8, a1, a2, v13, &v25);
  if (!v7)
  {
    uint64_t v14 = (long long *)v25;
    sub_10001FDF0((uint64_t)&v26, (uint64_t)v23, &qword_100715828);
    sub_10001FDF0((uint64_t)v23, (uint64_t)v24, &qword_100715828);
    if (sub_100504868((uint64_t)v24) != 1)
    {
      sub_10044AF04((uint64_t)v24, (uint64_t)v27);
      type metadata accessor for UnauthenticatedStateWithTasks();
      sub_10001FDF0((uint64_t)v23, (uint64_t)v22, &qword_100715828);
      sub_10050487C((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1004FA508);
      uint64_t v28 = sub_1004F5C5C((uint64_t)v27, a6);
      uint64_t v15 = (char *)v28[2];
      if (v15)
      {
        v16 = (uint64_t *)(v28 + 7);
        do
        {
          unint64_t v18 = *(v16 - 3);
          uint64_t v17 = *(v16 - 2);
          uint64_t v19 = *(v16 - 1);
          uint64_t v20 = *v16;
          sub_100484BD4(v18);
          a4(v18, v17, v19, v20);
          sub_100484C20(v18);
          v16 += 4;
          --v15;
        }
        while (v15);
      }
      swift_bridgeObjectRelease();
      sub_10050487C((uint64_t)v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1005048F0);
      sub_10050487C((uint64_t)v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1005048F0);
    }
  }
  return v14;
}

uint64_t sub_1004FFB80(unint64_t *a1, uint64_t a2)
{
  uint64_t v128 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v5 = __chkstk_darwin(v128);
  uint64_t v127 = (uint64_t)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v116 = (unint64_t)&v113 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v120 = (uint64_t)&v113 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  v121 = (void (*)(char *, uint64_t, uint64_t))((char *)&v113 - v12);
  uint64_t v13 = __chkstk_darwin(v11);
  v119 = (char *)&v113 - v14;
  __chkstk_darwin(v13);
  v118 = (char *)&v113 - v15;
  uint64_t v16 = sub_1005E0ED0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  v117 = (char *)&v113 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v124 = (char *)&v113 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v122 = (char *)&v113 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  v123 = (char *)&v113 - v28;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v113 - v29;
  uint64_t v31 = type metadata accessor for UnauthenticatedState();
  __chkstk_darwin(v31);
  v33 = (char *)&v113 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = v2 + *(int *)(type metadata accessor for UnauthenticatedStateWithTasks() + 24);
  sub_100504B9C(v125, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
  uint64_t v126 = v31;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_100504C04((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
  if (EnumCaseMultiPayload == 13)
  {
    uint64_t v129 = v16;
    unint64_t v36 = *a1;
    unint64_t v35 = a1[1];
    unint64_t v37 = a1[2];
    unint64_t v38 = *a1 >> 62;
    if (v38)
    {
      if (v38 != 1)
      {
        uint64_t v74 = (uint64_t)v30;
        uint64_t v75 = v129;
        (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v30, a2, v129);
        v76 = v118;
        sub_100504B9C(a2, (uint64_t)v118, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        v77 = sub_1005E0EB0();
        os_log_type_t v78 = sub_1005E25B0();
        if (os_log_type_enabled(v77, v78))
        {
          uint64_t v79 = swift_slowAlloc();
          uint64_t v80 = swift_slowAlloc();
          uint64_t v127 = v74;
          v138 = (char *)v80;
          *(_DWORD *)uint64_t v79 = 68158210;
          LODWORD(v130) = 2;
          uint64_t v81 = v17;
          sub_1005E2960();
          *(_WORD *)(v79 + 8) = 256;
          v82 = &v76[*(int *)(v128 + 20)];
          LOBYTE(v130) = *v82;
          sub_1005E2960();
          *(_WORD *)(v79 + 11) = 2082;
          uint64_t v83 = ConnectionID.debugDescription.getter(*((unsigned int *)v82 + 1));
          uint64_t v130 = sub_100481E54(v83, v84, (uint64_t *)&v138);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_100504C04((uint64_t)v76, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          _os_log_impl((void *)&_mh_execute_header, v77, v78, "[%.*hhx-%{public}s] We ran STARTTLS, but the connection is not using TLS.", (uint8_t *)v79, 0x15u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v127, v129);
        }
        else
        {
          sub_100504C04((uint64_t)v76, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

          (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v74, v75);
        }
        uint64_t v88 = v125;
        sub_100504C04(v125, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        long long v89 = xmmword_1006258D0;
        goto LABEL_47;
      }
      uint64_t v127 = (uint64_t)a1;
      LODWORD(v123) = (unsigned __int16)v36;
      uint64_t v115 = v17;
      uint64_t v39 = v129;
      v121 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
      v122 = (char *)(v17 + 16);
      v121(v124, a2, v129);
      uint64_t v40 = v120;
      sub_100504B9C(a2, v120, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      sub_1004A03E8(v36);
      sub_1004A03E8(v36);
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_1005E0EB0();
      os_log_type_t v42 = sub_1005E25C0();
      int v43 = v42;
      if (os_log_type_enabled(v41, v42))
      {
        unint64_t v114 = v36 >> 16;
        uint64_t v44 = swift_slowAlloc();
        LODWORD(v118) = v43;
        uint64_t v45 = v44;
        v119 = (char *)swift_slowAlloc();
        v138 = v119;
        *(_DWORD *)uint64_t v45 = 68158722;
        LODWORD(v130) = 2;
        sub_1005E2960();
        *(_WORD *)(v45 + 8) = 256;
        uint64_t v46 = v40 + *(int *)(v128 + 20);
        LOBYTE(v130) = *(unsigned char *)v46;
        sub_1005E2960();
        *(_WORD *)(v45 + 11) = 2082;
        uint64_t v47 = ConnectionID.debugDescription.getter(*(unsigned int *)(v46 + 4));
        uint64_t v130 = sub_100481E54(v47, v48, (uint64_t *)&v138);
        sub_1005E2960();
        uint64_t v49 = v129;
        swift_bridgeObjectRelease();
        sub_100504C04(v40, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        *(_WORD *)(v45 + 21) = 512;
        sub_100451F2C(v36);
        LOWORD(v130) = (_WORD)v123;
        sub_1005E2960();
        sub_100451F2C(v36);
        *(_WORD *)(v45 + 25) = 512;
        sub_100451F2C(v36);
        LOWORD(v130) = v114;
        sub_1005E2960();
        sub_100451F2C(v36);
        _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v118, "[%.*hhx-%{public}s] STARTTLS completed: %hu / %hu", (uint8_t *)v45, 0x1Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v50 = *(void (**)(char *, uint64_t))(v115 + 8);
        v50(v124, v49);
      }
      else
      {
        sub_100451F2C(v36);
        sub_100451F2C(v36);
        sub_100504C04(v40, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        sub_100451F2C(v36);
        sub_100451F2C(v36);

        uint64_t v50 = *(void (**)(char *, uint64_t))(v115 + 8);
        v50(v124, v39);
        uint64_t v49 = v39;
      }
      sub_100452B0C(v127 + 24, (uint64_t)v132);
      sub_100452B0C((uint64_t)v132, (uint64_t)v133);
      if (v135 != 1)
      {
        if (v135)
        {
          if (v133[0] == 1)
          {
            if (v123 != 772) {
              goto LABEL_43;
            }
            goto LABEL_32;
          }
          if ((v123 - 773) >= 0xFFFFFFFE)
          {
LABEL_32:
            if (!v37 || (v134 != v35 || v135 != v37) && (sub_1005E3290() & 1) == 0) {
              goto LABEL_43;
            }
            goto LABEL_23;
          }
LABEL_43:
          v102 = v117;
          v121(v117, a2, v49);
          uint64_t v103 = a2;
          uint64_t v104 = v116;
          sub_100504B9C(v103, v116, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          v105 = sub_1005E0EB0();
          os_log_type_t v106 = sub_1005E25A0();
          if (os_log_type_enabled(v105, v106))
          {
            uint64_t v107 = swift_slowAlloc();
            v138 = (char *)swift_slowAlloc();
            *(_DWORD *)uint64_t v107 = 68158210;
            LODWORD(v130) = 2;
            sub_1005E2960();
            *(_WORD *)(v107 + 8) = 256;
            uint64_t v108 = v104 + *(int *)(v128 + 20);
            LOBYTE(v130) = *(unsigned char *)v108;
            sub_1005E2960();
            *(_WORD *)(v107 + 11) = 2082;
            uint64_t v109 = ConnectionID.debugDescription.getter(*(unsigned int *)(v108 + 4));
            uint64_t v130 = sub_100481E54(v109, v110, (uint64_t *)&v138);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_100504C04(v104, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
            _os_log_impl((void *)&_mh_execute_header, v105, v106, "[%.*hhx-%{public}s] We ran STARTTLS, but the connection is not secure.", (uint8_t *)v107, 0x15u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            v111 = v117;
            uint64_t v112 = v129;
          }
          else
          {
            sub_100504C04(v104, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

            v111 = v102;
            uint64_t v112 = v49;
          }
          v50(v111, v112);
          uint64_t v88 = v125;
          sub_100504C04(v125, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
          long long v89 = xmmword_1006258E0;
LABEL_47:
          *(_OWORD *)uint64_t v88 = v89;
          *(unsigned char *)(v88 + 16) = 2;
          return swift_storeEnumTagMultiPayload();
        }
        if (v133[0])
        {
          int v101 = (int)v123;
          if (v133[0] == 1)
          {
            if (v123 != 772) {
              goto LABEL_43;
            }
            goto LABEL_23;
          }
        }
        else
        {
          int v101 = (int)v123;
        }
        if ((v101 - 771) >= 2) {
          goto LABEL_43;
        }
      }
    }
    else
    {
      uint64_t v127 = (uint64_t)a1;
      uint64_t v61 = *(char **)(v17 + 16);
      uint64_t v62 = v123;
      uint64_t v120 = v17 + 16;
      v118 = v61;
      ((void (*)(char *, uint64_t, uint64_t))v61)(v123, a2, v129);
      v124 = (char *)a2;
      uint64_t v63 = (uint64_t)v119;
      sub_100504B9C(a2, (uint64_t)v119, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      sub_1004A03E8(v36);
      sub_1004A03E8(v36);
      swift_bridgeObjectRetain();
      v64 = sub_1005E0EB0();
      os_log_type_t v65 = sub_1005E25C0();
      int v66 = v65;
      if (os_log_type_enabled(v64, v65))
      {
        unint64_t v116 = v36 >> 16;
        uint64_t v67 = swift_slowAlloc();
        v117 = (char *)swift_slowAlloc();
        v138 = v117;
        *(_DWORD *)uint64_t v67 = 68158722;
        LODWORD(v130) = 2;
        sub_1005E2960();
        *(_WORD *)(v67 + 8) = 256;
        uint64_t v68 = *(int *)(v128 + 20);
        LODWORD(v114) = v66;
        uint64_t v69 = v63 + v68;
        LOBYTE(v130) = *(unsigned char *)(v63 + v68);
        sub_1005E2960();
        *(_WORD *)(v67 + 11) = 2082;
        uint64_t v70 = ConnectionID.debugDescription.getter(*(unsigned int *)(v69 + 4));
        uint64_t v130 = sub_100481E54(v70, v71, (uint64_t *)&v138);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100504C04(v63, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        *(_WORD *)(v67 + 21) = 512;
        sub_100451F2C(v36);
        LOWORD(v130) = v36;
        sub_1005E2960();
        sub_100451F2C(v36);
        *(_WORD *)(v67 + 25) = 512;
        sub_100451F2C(v36);
        LOWORD(v130) = v116;
        sub_1005E2960();
        sub_100451F2C(v36);
        _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v114, "[%.*hhx-%{public}s] Opportunistic STARTTLS completed: %hu / %hu", (uint8_t *)v67, 0x1Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v72 = *(void (**)(char *, uint64_t))(v17 + 8);
        v73 = v123;
      }
      else
      {
        sub_100451F2C(v36);
        sub_100451F2C(v36);
        sub_100504C04(v63, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        sub_100451F2C(v36);
        sub_100451F2C(v36);

        v72 = *(void (**)(char *, uint64_t))(v17 + 8);
        v73 = v62;
      }
      uint64_t v85 = v129;
      v72(v73, v129);
      sub_100452B0C(v127 + 24, (uint64_t)v131);
      sub_100452B0C((uint64_t)v131, (uint64_t)v136);
      uint64_t v86 = (uint64_t)v121;
      v87 = v122;
      if (v137 != 1)
      {
        uint64_t v90 = (uint64_t)v124;
        ((void (*)(char *, char *, uint64_t))v118)(v122, v124, v85);
        sub_100504B9C(v90, v86, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        v91 = sub_1005E0EB0();
        os_log_type_t v92 = sub_1005E25A0();
        if (os_log_type_enabled(v91, v92))
        {
          uint64_t v94 = swift_slowAlloc();
          v138 = (char *)swift_slowAlloc();
          *(_DWORD *)uint64_t v94 = 68158210;
          LODWORD(v130) = 2;
          uint64_t v115 = v17;
          sub_1005E2960();
          *(_WORD *)(v94 + 8) = 256;
          uint64_t v95 = v86 + *(int *)(v128 + 20);
          LOBYTE(v130) = *(unsigned char *)v95;
          sub_1005E2960();
          *(_WORD *)(v94 + 11) = 2082;
          uint64_t v96 = ConnectionID.debugDescription.getter(*(unsigned int *)(v95 + 4));
          uint64_t v130 = sub_100481E54(v96, v97, (uint64_t *)&v138);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_100504C04(v86, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          _os_log_impl((void *)&_mh_execute_header, v91, v92, "[%.*hhx-%{public}s] We ran STARTTLS, but the connection is not secure.", (uint8_t *)v94, 0x15u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v98 = v122;
          uint64_t v99 = v129;
        }
        else
        {
          sub_100504C04(v86, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

          v98 = v87;
          uint64_t v99 = v85;
        }
        v72(v98, v99);
        uint64_t v100 = v125;
        sub_100504C04(v125, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        *(_OWORD *)uint64_t v100 = xmmword_1006258E0;
        *(unsigned char *)(v100 + 16) = 2;
        return swift_storeEnumTagMultiPayload();
      }
    }
LABEL_23:
    sub_100504C04(v125, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
    return swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, a2, v16);
  uint64_t v51 = v127;
  sub_100504B9C(a2, v127, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v52 = sub_1005E0EB0();
  os_log_type_t v53 = sub_1005E25B0();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = swift_slowAlloc();
    v138 = (char *)swift_slowAlloc();
    *(_DWORD *)uint64_t v54 = 68158210;
    LODWORD(v130) = 2;
    uint64_t v55 = v17;
    sub_1005E2960();
    *(_WORD *)(v54 + 8) = 256;
    uint64_t v56 = *(int *)(v128 + 20);
    uint64_t v129 = v16;
    uint64_t v57 = v51 + v56;
    LOBYTE(v130) = *(unsigned char *)(v51 + v56);
    sub_1005E2960();
    *(_WORD *)(v54 + 11) = 2082;
    uint64_t v58 = ConnectionID.debugDescription.getter(*(unsigned int *)(v57 + 4));
    uint64_t v130 = sub_100481E54(v58, v59, (uint64_t *)&v138);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100504C04(v51, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    _os_log_impl((void *)&_mh_execute_header, v52, v53, "[%.*hhx-%{public}s] Received did-start-TLS from network, but we’re in the wrong state.", (uint8_t *)v54, 0x15u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v55 + 8))(v20, v129);
  }
  else
  {
    sub_100504C04(v51, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  }
  sub_100504B48();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_100501030(uint64_t a1, uint64_t (*a2)(void *), uint64_t a3)
{
  uint64_t v79 = a2;
  uint64_t v80 = a3;
  uint64_t v4 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v68 - v8;
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v68 - v15;
  v72 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v73 = v11 + 16;
  v72((char *)&v68 - v15, a1, v10);
  uint64_t v74 = a1;
  sub_100504B9C(a1, (uint64_t)v9, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v17 = sub_1005E0EB0();
  os_log_type_t v18 = sub_1005E2590();
  BOOL v19 = os_log_type_enabled(v17, v18);
  v76 = v14;
  uint64_t v77 = v10;
  uint64_t v75 = v7;
  uint64_t v69 = v4;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    *(void *)&v84[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 68158210;
    LODWORD(v94[0]) = 2;
    sub_1005E2960();
    *(_WORD *)(v20 + 8) = 256;
    uint64_t v21 = &v9[*(int *)(v4 + 20)];
    LOBYTE(v94[0]) = *v21;
    sub_1005E2960();
    *(_WORD *)(v20 + 11) = 2082;
    uint64_t v22 = ConnectionID.debugDescription.getter(*((unsigned int *)v21 + 1));
    v94[0] = sub_100481E54(v22, v23, (uint64_t *)v84);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100504C04((uint64_t)v9, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "[%.*hhx-%{public}s] Checking for new actions.", (uint8_t *)v20, 0x15u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v10 = v77;
    swift_slowDealloc();
  }
  else
  {
    sub_100504C04((uint64_t)v9, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  }

  uint64_t v70 = *(void (**)(char *, uint64_t))(v11 + 8);
  v70(v16, v10);
  uint64_t v24 = v82;
  uint64_t v71 = v11;
  uint64_t v25 = type metadata accessor for UnauthenticatedStateWithTasks();
  uint64_t v26 = *(int *)(v25 + 28);
  uint64_t v81 = &v24[*(int *)(v25 + 24)];
  uint64_t v83 = (void *)v84 + 1;
  uint64_t v78 = v26;
  while (1)
  {
    uint64_t v27 = *(void *)&v24[v26];
    int64_t v28 = *(void *)(v27 + 16);
    if (v28)
    {
      uint64_t v86 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1004B88BC(0, v28, 0);
      uint64_t v29 = v27 + 32;
      uint64_t v30 = v86;
      do
      {
        sub_100504970(v29, (uint64_t)v84);
        long long v31 = v85;
        sub_10003BCDC(v83, v85);
        char v32 = (*(uint64_t (**)(void, void))(*((void *)&v31 + 1) + 8))(v31, *((void *)&v31 + 1));
        sub_100007A48((uint64_t)v84, &qword_100717378);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1004B88BC(0, v30[2] + 1, 1);
          uint64_t v30 = v86;
        }
        unint64_t v34 = v30[2];
        unint64_t v33 = v30[3];
        if (v34 >= v33 >> 1)
        {
          sub_1004B88BC(v33 > 1, v34 + 1, 1);
          uint64_t v30 = v86;
        }
        v30[2] = v34 + 1;
        *((unsigned char *)v30 + v34 + 32) = v32;
        v29 += 48;
        --v28;
      }
      while (v28);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = _swiftEmptyArrayStorage;
    }
    sub_100504A90();
    uint64_t v35 = sub_1005E2280();
    uint64_t v36 = v30[2];
    if (v36)
    {
      uint64_t v37 = 0;
      do
      {
        uint64_t v39 = v35 + 56;
        while (1)
        {
          Swift::UInt v40 = *((unsigned __int8 *)v30 + v37++ + 32);
          sub_1005E33F0();
          sub_1005E3410(v40);
          Swift::Int v41 = sub_1005E3470();
          uint64_t v42 = -1 << *(unsigned char *)(v35 + 32);
          unint64_t v43 = v41 & ~v42;
          if (((*(void *)(v39 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0) {
            break;
          }
          uint64_t v44 = *(void *)(v35 + 48);
          if (*(unsigned __int8 *)(v44 + v43) != v40)
          {
            uint64_t v45 = ~v42;
            do
            {
              unint64_t v43 = (v43 + 1) & v45;
              if (((*(void *)(v39 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0) {
                goto LABEL_16;
              }
            }
            while (*(unsigned __int8 *)(v44 + v43) != v40);
          }
          if (v37 == v36) {
            goto LABEL_25;
          }
        }
LABEL_16:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v84[0] = v35;
        sub_1004DAE6C(v40, v43, isUniquelyReferenced_nonNull_native);
        uint64_t v35 = *(void *)&v84[0];
        swift_bridgeObjectRelease();
      }
      while (v37 != v36);
LABEL_25:
      swift_bridgeObjectRelease();
      uint64_t v10 = v77;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v24 = v82;
    sub_1004F55A4(v35, *v82, (uint64_t)&v87);
    swift_bridgeObjectRelease();
    if (!v88) {
      return sub_100007A48((uint64_t)&v87, &qword_100717BA8);
    }
    sub_100021BFC(&v87, (uint64_t)v89);
    uint64_t v46 = v90;
    uint64_t v47 = v91;
    sub_100057374((uint64_t)v89, v90);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v47 + 16))(v92, v46, v47);
    sub_10001FDF0((uint64_t)v92, (uint64_t)v93, &qword_100715770);
    if (v93[64] == 255) {
      return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v89);
    }
    sub_1004546E0((uint64_t)v93, (uint64_t)v94);
    uint64_t v48 = v79(v94);
    if (v49) {
      break;
    }
    *(void *)&v84[0] = v48;
    sub_100021C34((uint64_t)v89, (uint64_t)v83);
    uint64_t v26 = v78;
    uint64_t v50 = *(void **)&v24[v78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v50 = sub_1004D1064(0, v50[2] + 1, 1, v50);
    }
    unint64_t v52 = v50[2];
    unint64_t v51 = v50[3];
    if (v52 >= v51 >> 1) {
      uint64_t v50 = sub_1004D1064((void *)(v51 > 1), v52 + 1, 1, v50);
    }
    v50[2] = v52 + 1;
    os_log_type_t v53 = &v50[6 * v52];
    long long v54 = v84[0];
    long long v55 = v85;
    v53[3] = v84[1];
    v53[4] = v55;
    v53[2] = v54;
    *(void *)&v24[v26] = v50;
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v89);
    sub_100504AE4((uint64_t)v92);
  }
  sub_100504AE4((uint64_t)v92);
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v89);
  uint64_t v57 = v76;
  uint64_t v58 = v74;
  v72(v76, v74, v10);
  uint64_t v59 = (uint64_t)v75;
  sub_100504B9C(v58, (uint64_t)v75, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  v60 = sub_1005E0EB0();
  os_log_type_t v61 = sub_1005E2580();
  if (os_log_type_enabled(v60, v61))
  {
    uint64_t v62 = swift_slowAlloc();
    *(void *)&v84[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v62 = 68158210;
    LODWORD(v89[0]) = 2;
    sub_1005E2960();
    *(_WORD *)(v62 + 8) = 256;
    uint64_t v63 = v59 + *(int *)(v69 + 20);
    LOBYTE(v89[0]) = *(unsigned char *)v63;
    sub_1005E2960();
    *(_WORD *)(v62 + 11) = 2082;
    uint64_t v64 = ConnectionID.debugDescription.getter(*(unsigned int *)(v63 + 4));
    v89[0] = sub_100481E54(v64, v65, (uint64_t *)v84);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100504C04(v59, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    _os_log_impl((void *)&_mh_execute_header, v60, v61, "[%.*hhx-%{public}s] No connection available to send command.", (uint8_t *)v62, 0x15u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    int v66 = v57;
    uint64_t v67 = v77;
  }
  else
  {
    sub_100504C04(v59, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

    int v66 = v57;
    uint64_t v67 = v10;
  }
  return ((uint64_t (*)(char *, uint64_t))v70)(v66, v67);
}

void *sub_10050196C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = v6 + *(int *)(type metadata accessor for UnauthenticatedStateWithTasks() + 28);
  uint64_t v14 = *(void *)(*(void *)v13 + 16);
  if (v14)
  {
    uint64_t v25 = a3;
    unsigned int v26 = a4;
    uint64_t v24 = a6;
    uint64_t v15 = *(void *)v13 + 32;
    swift_bridgeObjectRetain();
    unint64_t v16 = 0;
    while (1)
    {
      sub_100504970(v15, (uint64_t)v32);
      int v17 = v32[0];
      int v18 = DWORD1(v32[0]);
      sub_100007A48((uint64_t)v32, &qword_100717378);
      if (v17 == a5 && v18 == HIDWORD(a5)) {
        break;
      }
      ++v16;
      v15 += 48;
      if (v14 == v16)
      {
        swift_bridgeObjectRelease();
        return _swiftEmptyArrayStorage;
      }
    }
    swift_bridgeObjectRelease();
    sub_1004CF594(v16, v32);
    sub_100021BFC((long long *)((char *)v32 + 8), (uint64_t)v31);
    sub_100021BFC(v31, (uint64_t)v27);
    uint64_t v20 = v28;
    uint64_t v21 = v29;
    sub_10003BCDC(v27, v28);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(v21 + 32))(v30, a1, a2, v25, v26, v20, v21);
    sub_10001FDF0((uint64_t)v30, (uint64_t)v31, &qword_100715828);
    if (sub_100504868((uint64_t)v31) != 1)
    {
      sub_10044AF04((uint64_t)v31, (uint64_t)v32);
      uint64_t v22 = sub_1004F5C5C((uint64_t)v32, v24);
      sub_10050487C((uint64_t)v30, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1005048F0);
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v27);
      return v22;
    }
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v27);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100501B58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, char a4@<W3>, long long *a5@<X8>)
{
  int v11 = a4 & 1;
  uint64_t v12 = sub_10000566C(&qword_100715848);
  __chkstk_darwin(v12 - 8);
  uint64_t v45 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for AuthenticationTask();
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(int *)(type metadata accessor for UnauthenticatedStateWithTasks() + 28);
  uint64_t v47 = a1;
  uint64_t v50 = v16;
  uint64_t v17 = *(void *)(a1 + v16);
  uint64_t v18 = *(void *)(v17 + 16);
  if (!v18) {
    goto LABEL_13;
  }
  uint64_t v42 = v15;
  uint64_t v43 = a2;
  Swift::UInt v40 = a5;
  uint64_t v41 = v5;
  int v48 = v11;
  unint64_t v49 = a3;
  swift_bridgeObjectRetain();
  unint64_t v19 = 0;
  uint64_t v20 = 4;
  while (1)
  {
    sub_100504970(v17 + v20 * 8, (uint64_t)&v68);
    uint64_t v21 = *((void *)&v70 + 1);
    uint64_t v22 = v71;
    sub_10003BCDC((void *)&v68 + 1, *((uint64_t *)&v70 + 1));
    unint64_t v23 = (void *)(*(unsigned __int8 (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
    sub_100007A48((uint64_t)&v68, &qword_100717378);
    if (v23 == 2) {
      break;
    }
    ++v19;
    v20 += 6;
    if (v18 == v19)
    {
      swift_bridgeObjectRelease();
      a3 = v49;
      LOBYTE(v11) = v48;
      a2 = v43;
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = v47;
  uint64_t v25 = *(void *)(v47 + v50);
  a2 = v43;
  if (v19 >= *(void *)(v25 + 16))
  {
    __break(1u);
    goto LABEL_15;
  }
  sub_100504970(v25 + v20 * 8, (uint64_t)&v85);
  uint64_t v83 = v85;
  sub_100021BFC(v86, (uint64_t)v84);
  sub_100021BFC(v84, (uint64_t)v82);
  sub_10000566C(&qword_100717B98);
  uint64_t v26 = (uint64_t)v45;
  uint64_t v27 = v46;
  if ((swift_dynamicCast() & 1) == 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v26, 1, 1, v27);
    sub_100007A48(v26, &qword_100715848);
    a3 = v49;
    LOBYTE(v11) = v48;
LABEL_13:
    sub_1005049D8();
    swift_allocError();
    swift_willThrow();
    return sub_1004445F8(a2, a3, v11);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v26, 0, 1, v27);
  uint64_t v28 = (uint64_t)v42;
  sub_100504A2C(v26, (uint64_t)v42);
  sub_100449CB0(a2, v49, v48, (uint64_t)&v51);
  long long v68 = v51;
  char v69 = v52;
  long long v70 = v53;
  long long v71 = v54;
  long long v72 = v55;
  long long v73 = v56;
  long long v74 = v57;
  long long v75 = v58;
  long long v76 = v59;
  long long v77 = v60;
  long long v78 = v61;
  long long v79 = v62;
  long long v80 = v63;
  char v81 = v64;
  long long v65 = v51;
  LOBYTE(v66[0]) = v52;
  uint64_t v22 = v50;
  sub_10001FDF0((uint64_t)&v70, (uint64_t)v66 + 8, &qword_100715828);
  unint64_t v23 = *(void **)(v24 + v22);
  if (v19 < v23[2])
  {
    uint64_t v6 = v23[v20];
    *(void *)&long long v53 = v27;
    *((void *)&v53 + 1) = &off_1006F3218;
    uint64_t v29 = sub_100021E04((uint64_t *)&v51);
    sub_100504B9C(v28, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v24 + v22) = v23;
    if (result) {
      goto LABEL_10;
    }
    goto LABEL_16;
  }
LABEL_15:
  __break(1u);
LABEL_16:
  uint64_t result = (uint64_t)sub_1004D32A8(v23);
  unint64_t v23 = (void *)result;
  *(void *)(v24 + v22) = result;
LABEL_10:
  if (v19 >= v23[2])
  {
    __break(1u);
  }
  else
  {
    long long v31 = &v23[v20];
    *v31++ = v6;
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v31);
    sub_100021BFC(&v51, (uint64_t)v31);
    sub_100504C04((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
    uint64_t result = sub_1004445F8(a2, v49, v48);
    long long v32 = v67[0];
    unint64_t v33 = v40;
    v40[10] = v66[9];
    v33[11] = v32;
    *(long long *)((char *)v33 + 185) = *(_OWORD *)((char *)v67 + 9);
    long long v34 = v66[6];
    v33[6] = v66[5];
    v33[7] = v34;
    long long v35 = v66[8];
    v33[8] = v66[7];
    v33[9] = v35;
    long long v36 = v66[2];
    v33[2] = v66[1];
    v33[3] = v36;
    long long v37 = v66[4];
    v33[4] = v66[3];
    v33[5] = v37;
    long long v38 = v66[0];
    long long *v33 = v65;
    v33[1] = v38;
  }
  return result;
}

BOOL _s15IMAP2Connection29UnauthenticatedStateWithTasksV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnauthenticatedStateWithTasks();
  if ((sub_1004F9970(a1 + *(int *)(v4 + 24), (uint64_t *)(a2 + *(int *)(v4 + 24))) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 28);
  uint64_t v6 = *(void *)(a1 + v5);
  int64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = (int32x2_t *)_swiftEmptyArrayStorage;
  if (v7)
  {
    uint64_t v26 = (int32x2_t *)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1004B883C(0, v7, 0);
    uint64_t v9 = v6 + 32;
    uint64_t v8 = (int32x2_t *)_swiftEmptyArrayStorage;
    do
    {
      sub_100504970(v9, (uint64_t)&v24);
      int32x2_t v10 = v24;
      sub_100021C34((uint64_t)v25, (uint64_t)v23);
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v23);
      sub_100007A48((uint64_t)&v24, &qword_100717378);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004B883C(0, *(void *)&v8[2] + 1, 1);
        uint64_t v8 = v26;
      }
      unint64_t v12 = (unint64_t)v8[2];
      unint64_t v11 = (unint64_t)v8[3];
      if (v12 >= v11 >> 1)
      {
        sub_1004B883C(v11 > 1, v12 + 1, 1);
        uint64_t v8 = v26;
      }
      v8[2] = (int32x2_t)(v12 + 1);
      v8[v12 + 4] = v10;
      v9 += 48;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    uint64_t v5 = *(int *)(v4 + 28);
  }
  uint64_t v13 = *(void *)(a2 + v5);
  int64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = (int32x2_t *)_swiftEmptyArrayStorage;
  if (v14)
  {
    uint64_t v26 = (int32x2_t *)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1004B883C(0, v14, 0);
    uint64_t v16 = v13 + 32;
    uint64_t v15 = v26;
    do
    {
      sub_100504970(v16, (uint64_t)&v24);
      int32x2_t v17 = v24;
      sub_100021C34((uint64_t)v25, (uint64_t)v23);
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v23);
      sub_100007A48((uint64_t)&v24, &qword_100717378);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004B883C(0, *(void *)&v15[2] + 1, 1);
        uint64_t v15 = v26;
      }
      unint64_t v19 = (unint64_t)v15[2];
      unint64_t v18 = (unint64_t)v15[3];
      if (v19 >= v18 >> 1)
      {
        sub_1004B883C(v18 > 1, v19 + 1, 1);
        uint64_t v15 = v26;
      }
      v15[2] = (int32x2_t)(v19 + 1);
      v15[v19 + 4] = v17;
      v16 += 48;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  sub_100079B2C(v8, v15);
  char v21 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v21 & 1) != 0;
}

uint64_t *initializeBufferWithCopyOfBuffer for UnauthenticatedStateWithTasks(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UnauthenticatedState();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
        *(void *)uint64_t v8 = *(void *)v9;
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 2u:
        *(void *)uint64_t v8 = *(void *)v9;
        v8[8] = v9[8];
        uint64_t v12 = *((void *)v9 + 3);
        *((void *)v8 + 2) = *((void *)v9 + 2);
        *((void *)v8 + 3) = v12;
        uint64_t v13 = *(int *)(type metadata accessor for Authenticator() + 32);
        __dst = &v8[v13];
        long long v58 = &v9[v13];
        int64_t v14 = (int *)type metadata accessor for AuthenticationTask();
        uint64_t v57 = *((void *)v14 - 1);
        uint64_t v15 = *(unsigned int (**)(char *, uint64_t, int *))(v57 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v15(v58, 1, v14))
        {
          uint64_t v16 = sub_10000566C(&qword_100715848);
          memcpy(__dst, v58, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          long long v47 = *(_OWORD *)(v58 + 24);
          *(_OWORD *)(__dst + 24) = v47;
          (**(void (***)(void *, char *))(v47 - 8))(__dst, v58);
          uint64_t v48 = *((void *)v58 + 5);
          unint64_t v49 = *((void *)v58 + 6);
          sub_10044461C(v48, v49);
          *((void *)__dst + 5) = v48;
          *((void *)__dst + 6) = v49;
          uint64_t v50 = v14[5];
          long long v51 = &__dst[v50];
          char v52 = &v58[v50];
          uint64_t v53 = sub_1005E0ED0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
          uint64_t v54 = _s14descr1006B94C1C6LoggerVMa();
          *(void *)&v51[*(int *)(v54 + 20)] = *(void *)&v52[*(int *)(v54 + 20)];
          __dst[v14[6]] = v58[v14[6]];
          *(void *)&__dst[v14[7]] = *(void *)&v58[v14[7]];
          __dst[v14[8]] = v58[v14[8]];
          long long v55 = *(void (**)(char *, void, uint64_t, int *))(v57 + 56);
          swift_bridgeObjectRetain();
          v55(__dst, 0, 1, v14);
        }
        goto LABEL_12;
      case 4u:
      case 5u:
      case 6u:
      case 8u:
        uint64_t v33 = *((void *)v9 + 1);
        *(void *)uint64_t v8 = *(void *)v9;
        *((void *)v8 + 1) = v33;
        uint64_t v34 = *((void *)v9 + 3);
        *((void *)v8 + 2) = *((void *)v9 + 2);
        *((void *)v8 + 3) = v34;
        uint64_t v35 = *((void *)v9 + 5);
        *((void *)v8 + 4) = *((void *)v9 + 4);
        *((void *)v8 + 5) = v35;
        uint64_t v36 = *((void *)v9 + 7);
        *((void *)v8 + 6) = *((void *)v9 + 6);
        *((void *)v8 + 7) = v36;
        uint64_t v37 = *((void *)v9 + 9);
        *((void *)v8 + 8) = *((void *)v9 + 8);
        *((void *)v8 + 9) = v37;
        uint64_t v38 = *((void *)v9 + 11);
        *((void *)v8 + 10) = *((void *)v9 + 10);
        *((void *)v8 + 11) = v38;
        uint64_t v39 = *((void *)v9 + 13);
        *((void *)v8 + 12) = *((void *)v9 + 12);
        *((void *)v8 + 13) = v39;
        uint64_t v40 = *((void *)v9 + 15);
        *((void *)v8 + 14) = *((void *)v9 + 14);
        *((void *)v8 + 15) = v40;
        uint64_t v41 = *((void *)v9 + 17);
        *((void *)v8 + 16) = *((void *)v9 + 16);
        *((void *)v8 + 17) = v41;
        uint64_t v42 = *((void *)v9 + 19);
        *((void *)v8 + 18) = *((void *)v9 + 18);
        *((void *)v8 + 19) = v42;
        uint64_t v43 = *((void *)v9 + 21);
        *((void *)v8 + 20) = *((void *)v9 + 20);
        *((void *)v8 + 21) = v43;
        *((void *)v8 + 22) = *((void *)v9 + 22);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 7u:
        *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
        uint64_t v17 = *((void *)v9 + 2);
        *((void *)v8 + 1) = *((void *)v9 + 1);
        *((void *)v8 + 2) = v17;
        uint64_t v18 = *((void *)v9 + 4);
        *((void *)v8 + 3) = *((void *)v9 + 3);
        *((void *)v8 + 4) = v18;
        uint64_t v19 = *((void *)v9 + 6);
        *((void *)v8 + 5) = *((void *)v9 + 5);
        *((void *)v8 + 6) = v19;
        uint64_t v20 = *((void *)v9 + 8);
        *((void *)v8 + 7) = *((void *)v9 + 7);
        *((void *)v8 + 8) = v20;
        uint64_t v21 = *((void *)v9 + 10);
        *((void *)v8 + 9) = *((void *)v9 + 9);
        *((void *)v8 + 10) = v21;
        uint64_t v22 = *((void *)v9 + 12);
        *((void *)v8 + 11) = *((void *)v9 + 11);
        *((void *)v8 + 12) = v22;
        uint64_t v23 = *((void *)v9 + 14);
        *((void *)v8 + 13) = *((void *)v9 + 13);
        *((void *)v8 + 14) = v23;
        uint64_t v24 = *((void *)v9 + 16);
        *((void *)v8 + 15) = *((void *)v9 + 15);
        *((void *)v8 + 16) = v24;
        uint64_t v25 = *((void *)v9 + 18);
        *((void *)v8 + 17) = *((void *)v9 + 17);
        *((void *)v8 + 18) = v25;
        uint64_t v26 = *((void *)v9 + 20);
        *((void *)v8 + 19) = *((void *)v9 + 19);
        *((void *)v8 + 20) = v26;
        uint64_t v27 = *((void *)v9 + 22);
        *((void *)v8 + 21) = *((void *)v9 + 21);
        *((void *)v8 + 22) = v27;
        uint64_t v28 = *((void *)v9 + 24);
        *((void *)v8 + 23) = *((void *)v9 + 23);
        *((void *)v8 + 24) = v28;
        uint64_t v29 = *((void *)v9 + 26);
        *((void *)v8 + 25) = *((void *)v9 + 25);
        *((void *)v8 + 26) = v29;
        uint64_t v30 = *((void *)v9 + 28);
        *((void *)v8 + 27) = *((void *)v9 + 27);
        *((void *)v8 + 28) = v30;
        uint64_t v31 = *((void *)v9 + 29);
        uint64_t v32 = *((void *)v9 + 30);
        *((void *)v8 + 29) = v31;
        *((void *)v8 + 30) = v32;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 9u:
        uint64_t v44 = *(void *)v9;
        uint64_t v45 = *((void *)v9 + 1);
        char v46 = v9[16];
        sub_1004A9860(v44, v45, v46);
        *(void *)uint64_t v8 = v44;
        *((void *)v8 + 1) = v45;
        v8[16] = v46;
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        break;
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for UnauthenticatedStateWithTasks(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  type metadata accessor for UnauthenticatedState();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 3u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = v2 + *(int *)(type metadata accessor for Authenticator() + 32);
      uint64_t v4 = type metadata accessor for AuthenticationTask();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
      {
        _s13IMAP2Behavior4TaskOwxx_0(v3);
        sub_100444674(*(void *)(v3 + 40), *(void *)(v3 + 48));
        uint64_t v5 = v3 + *(int *)(v4 + 20);
        uint64_t v6 = sub_1005E0ED0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
        swift_bridgeObjectRelease();
      }
      break;
    case 4u:
    case 5u:
    case 6u:
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 9u:
      sub_10046564C(*(void *)v2, *(void *)(v2 + 8), *(unsigned char *)(v2 + 16));
      break;
    default:
      break;
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UnauthenticatedStateWithTasks(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for UnauthenticatedState();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 3u:
      *(void *)uint64_t v7 = *(void *)v8;
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 2u:
      uint64_t v59 = v3;
      *(void *)uint64_t v7 = *(void *)v8;
      v7[8] = v8[8];
      uint64_t v10 = *((void *)v8 + 3);
      *((void *)v7 + 2) = *((void *)v8 + 2);
      *((void *)v7 + 3) = v10;
      uint64_t v11 = *(int *)(type metadata accessor for Authenticator() + 32);
      __dst = &v7[v11];
      uint64_t v12 = &v8[v11];
      uint64_t v13 = (int *)type metadata accessor for AuthenticationTask();
      uint64_t v57 = *((void *)v13 - 1);
      int64_t v14 = *(unsigned int (**)(char *, uint64_t, int *))(v57 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14(v12, 1, v13))
      {
        uint64_t v15 = sub_10000566C(&qword_100715848);
        memcpy(__dst, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        long long v47 = *(_OWORD *)(v12 + 24);
        *(_OWORD *)(__dst + 24) = v47;
        (**(void (***)(void *, char *))(v47 - 8))(__dst, v12);
        uint64_t v48 = *((void *)v12 + 5);
        unint64_t v49 = *((void *)v12 + 6);
        sub_10044461C(v48, v49);
        *((void *)__dst + 5) = v48;
        *((void *)__dst + 6) = v49;
        uint64_t v50 = v13[5];
        long long v51 = &__dst[v50];
        char v52 = &v12[v50];
        uint64_t v53 = sub_1005E0ED0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
        uint64_t v54 = _s14descr1006B94C1C6LoggerVMa();
        *(void *)&v51[*(int *)(v54 + 20)] = *(void *)&v52[*(int *)(v54 + 20)];
        __dst[v13[6]] = v12[v13[6]];
        *(void *)&__dst[v13[7]] = *(void *)&v12[v13[7]];
        __dst[v13[8]] = v12[v13[8]];
        long long v55 = *(void (**)(char *, void, uint64_t, int *))(v57 + 56);
        swift_bridgeObjectRetain();
        v55(__dst, 0, 1, v13);
      }
      uint64_t v3 = v59;
      goto LABEL_11;
    case 4u:
    case 5u:
    case 6u:
    case 8u:
      uint64_t v16 = *((void *)v8 + 1);
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = v16;
      uint64_t v17 = *((void *)v8 + 3);
      *((void *)v7 + 2) = *((void *)v8 + 2);
      *((void *)v7 + 3) = v17;
      uint64_t v18 = *((void *)v8 + 5);
      *((void *)v7 + 4) = *((void *)v8 + 4);
      *((void *)v7 + 5) = v18;
      uint64_t v19 = *((void *)v8 + 7);
      *((void *)v7 + 6) = *((void *)v8 + 6);
      *((void *)v7 + 7) = v19;
      uint64_t v20 = *((void *)v8 + 9);
      *((void *)v7 + 8) = *((void *)v8 + 8);
      *((void *)v7 + 9) = v20;
      uint64_t v21 = *((void *)v8 + 11);
      *((void *)v7 + 10) = *((void *)v8 + 10);
      *((void *)v7 + 11) = v21;
      uint64_t v22 = *((void *)v8 + 13);
      *((void *)v7 + 12) = *((void *)v8 + 12);
      *((void *)v7 + 13) = v22;
      uint64_t v23 = *((void *)v8 + 15);
      *((void *)v7 + 14) = *((void *)v8 + 14);
      *((void *)v7 + 15) = v23;
      uint64_t v24 = *((void *)v8 + 17);
      *((void *)v7 + 16) = *((void *)v8 + 16);
      *((void *)v7 + 17) = v24;
      uint64_t v25 = *((void *)v8 + 19);
      *((void *)v7 + 18) = *((void *)v8 + 18);
      *((void *)v7 + 19) = v25;
      uint64_t v26 = *((void *)v8 + 21);
      *((void *)v7 + 20) = *((void *)v8 + 20);
      *((void *)v7 + 21) = v26;
      *((void *)v7 + 22) = *((void *)v8 + 22);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 7u:
      *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
      uint64_t v27 = *((void *)v8 + 2);
      *((void *)v7 + 1) = *((void *)v8 + 1);
      *((void *)v7 + 2) = v27;
      uint64_t v28 = *((void *)v8 + 4);
      *((void *)v7 + 3) = *((void *)v8 + 3);
      *((void *)v7 + 4) = v28;
      uint64_t v29 = *((void *)v8 + 6);
      *((void *)v7 + 5) = *((void *)v8 + 5);
      *((void *)v7 + 6) = v29;
      uint64_t v30 = *((void *)v8 + 8);
      *((void *)v7 + 7) = *((void *)v8 + 7);
      *((void *)v7 + 8) = v30;
      uint64_t v31 = *((void *)v8 + 10);
      *((void *)v7 + 9) = *((void *)v8 + 9);
      *((void *)v7 + 10) = v31;
      uint64_t v32 = *((void *)v8 + 12);
      *((void *)v7 + 11) = *((void *)v8 + 11);
      *((void *)v7 + 12) = v32;
      uint64_t v33 = *((void *)v8 + 14);
      *((void *)v7 + 13) = *((void *)v8 + 13);
      *((void *)v7 + 14) = v33;
      uint64_t v34 = *((void *)v8 + 16);
      *((void *)v7 + 15) = *((void *)v8 + 15);
      *((void *)v7 + 16) = v34;
      uint64_t v35 = *((void *)v8 + 18);
      *((void *)v7 + 17) = *((void *)v8 + 17);
      *((void *)v7 + 18) = v35;
      uint64_t v36 = *((void *)v8 + 20);
      *((void *)v7 + 19) = *((void *)v8 + 19);
      *((void *)v7 + 20) = v36;
      uint64_t v37 = *((void *)v8 + 22);
      *((void *)v7 + 21) = *((void *)v8 + 21);
      *((void *)v7 + 22) = v37;
      uint64_t v38 = *((void *)v8 + 24);
      *((void *)v7 + 23) = *((void *)v8 + 23);
      *((void *)v7 + 24) = v38;
      uint64_t v39 = *((void *)v8 + 26);
      *((void *)v7 + 25) = *((void *)v8 + 25);
      *((void *)v7 + 26) = v39;
      uint64_t v40 = *((void *)v8 + 28);
      *((void *)v7 + 27) = *((void *)v8 + 27);
      *((void *)v7 + 28) = v40;
      uint64_t v41 = *((void *)v8 + 29);
      uint64_t v42 = *((void *)v8 + 30);
      *((void *)v7 + 29) = v41;
      *((void *)v7 + 30) = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 9u:
      uint64_t v43 = v3;
      uint64_t v44 = *(void *)v8;
      uint64_t v45 = *((void *)v8 + 1);
      char v46 = v8[16];
      sub_1004A9860(v44, v45, v46);
      *(void *)uint64_t v7 = v44;
      *((void *)v7 + 1) = v45;
      uint64_t v3 = v43;
      v7[16] = v46;
LABEL_11:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
      break;
  }
  *(void *)(a1 + *(int *)(v3 + 28)) = *(void *)(a2 + *(int *)(v3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UnauthenticatedStateWithTasks(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)(a1 + v6);
    uint64_t v8 = (char *)(a2 + v6);
    sub_100504C04(a1 + v6, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
    uint64_t v9 = type metadata accessor for UnauthenticatedState();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
        *(void *)uint64_t v7 = *(void *)v8;
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 2u:
        *(void *)uint64_t v7 = *(void *)v8;
        v7[8] = v8[8];
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        uint64_t v10 = *(int *)(type metadata accessor for Authenticator() + 32);
        __dst = &v7[v10];
        uint64_t v28 = &v8[v10];
        uint64_t v11 = (int *)type metadata accessor for AuthenticationTask();
        uint64_t v27 = *((void *)v11 - 1);
        uint64_t v12 = *(unsigned int (**)(char *, uint64_t, int *))(v27 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v12(v28, 1, v11))
        {
          uint64_t v13 = sub_10000566C(&qword_100715848);
          memcpy(__dst, v28, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          uint64_t v17 = *((void *)v28 + 3);
          *((void *)__dst + 3) = v17;
          *((void *)__dst + 4) = *((void *)v28 + 4);
          (**(void (***)(char *, char *))(v17 - 8))(__dst, v28);
          uint64_t v18 = *((void *)v28 + 5);
          unint64_t v19 = *((void *)v28 + 6);
          sub_10044461C(v18, v19);
          *((void *)__dst + 5) = v18;
          *((void *)__dst + 6) = v19;
          uint64_t v20 = v11[5];
          uint64_t v21 = &__dst[v20];
          uint64_t v22 = &v28[v20];
          uint64_t v23 = sub_1005E0ED0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
          uint64_t v24 = _s14descr1006B94C1C6LoggerVMa();
          *(void *)&v21[*(int *)(v24 + 20)] = *(void *)&v22[*(int *)(v24 + 20)];
          __dst[v11[6]] = v28[v11[6]];
          *(void *)&__dst[v11[7]] = *(void *)&v28[v11[7]];
          __dst[v11[8]] = v28[v11[8]];
          uint64_t v25 = *(void (**)(char *, void, uint64_t, int *))(v27 + 56);
          swift_bridgeObjectRetain();
          v25(__dst, 0, 1, v11);
        }
        goto LABEL_11;
      case 4u:
      case 5u:
      case 6u:
      case 8u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *((void *)v7 + 5) = *((void *)v8 + 5);
        *((void *)v7 + 6) = *((void *)v8 + 6);
        *((void *)v7 + 7) = *((void *)v8 + 7);
        *((void *)v7 + 8) = *((void *)v8 + 8);
        *((void *)v7 + 9) = *((void *)v8 + 9);
        *((void *)v7 + 10) = *((void *)v8 + 10);
        *((void *)v7 + 11) = *((void *)v8 + 11);
        *((void *)v7 + 12) = *((void *)v8 + 12);
        *((void *)v7 + 13) = *((void *)v8 + 13);
        *((void *)v7 + 14) = *((void *)v8 + 14);
        *((void *)v7 + 15) = *((void *)v8 + 15);
        *((void *)v7 + 16) = *((void *)v8 + 16);
        *((void *)v7 + 17) = *((void *)v8 + 17);
        *((void *)v7 + 18) = *((void *)v8 + 18);
        *((void *)v7 + 19) = *((void *)v8 + 19);
        *((void *)v7 + 20) = *((void *)v8 + 20);
        *((void *)v7 + 21) = *((void *)v8 + 21);
        *((void *)v7 + 22) = *((void *)v8 + 22);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 7u:
        *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *((void *)v7 + 5) = *((void *)v8 + 5);
        *((void *)v7 + 6) = *((void *)v8 + 6);
        *((void *)v7 + 7) = *((void *)v8 + 7);
        *((void *)v7 + 8) = *((void *)v8 + 8);
        *((void *)v7 + 9) = *((void *)v8 + 9);
        *((void *)v7 + 10) = *((void *)v8 + 10);
        *((void *)v7 + 11) = *((void *)v8 + 11);
        *((void *)v7 + 12) = *((void *)v8 + 12);
        *((void *)v7 + 13) = *((void *)v8 + 13);
        *((void *)v7 + 14) = *((void *)v8 + 14);
        *((void *)v7 + 15) = *((void *)v8 + 15);
        *((void *)v7 + 16) = *((void *)v8 + 16);
        *((void *)v7 + 17) = *((void *)v8 + 17);
        *((void *)v7 + 18) = *((void *)v8 + 18);
        *((void *)v7 + 19) = *((void *)v8 + 19);
        *((void *)v7 + 20) = *((void *)v8 + 20);
        *((void *)v7 + 21) = *((void *)v8 + 21);
        *((void *)v7 + 22) = *((void *)v8 + 22);
        *((void *)v7 + 23) = *((void *)v8 + 23);
        *((void *)v7 + 24) = *((void *)v8 + 24);
        *((void *)v7 + 25) = *((void *)v8 + 25);
        *((void *)v7 + 26) = *((void *)v8 + 26);
        *((void *)v7 + 27) = *((void *)v8 + 27);
        *((void *)v7 + 28) = *((void *)v8 + 28);
        *((void *)v7 + 29) = *((void *)v8 + 29);
        *((void *)v7 + 30) = *((void *)v8 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 9u:
        uint64_t v14 = *(void *)v8;
        uint64_t v15 = *((void *)v8 + 1);
        char v16 = v8[16];
        sub_1004A9860(v14, v15, v16);
        *(void *)uint64_t v7 = v14;
        *((void *)v7 + 1) = v15;
        v7[16] = v16;
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for UnauthenticatedStateWithTasks(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for UnauthenticatedState();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *(void *)uint64_t v7 = *(void *)v8;
    v7[8] = v8[8];
    *((_OWORD *)v7 + 1) = *((_OWORD *)v8 + 1);
    uint64_t v10 = *(int *)(type metadata accessor for Authenticator() + 32);
    uint64_t v11 = &v7[v10];
    uint64_t v12 = &v8[v10];
    uint64_t v13 = (int *)type metadata accessor for AuthenticationTask();
    uint64_t v14 = *((void *)v13 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_10000566C(&qword_100715848);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      long long v16 = *((_OWORD *)v12 + 1);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v16;
      *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
      *((void *)v11 + 6) = *((void *)v12 + 6);
      uint64_t v17 = v13[5];
      uint64_t v18 = &v11[v17];
      uint64_t v22 = &v11[v17];
      uint64_t v23 = &v12[v17];
      uint64_t v19 = sub_1005E0ED0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18, v23, v19);
      uint64_t v20 = _s14descr1006B94C1C6LoggerVMa();
      *(void *)&v22[*(int *)(v20 + 20)] = *(void *)&v23[*(int *)(v20 + 20)];
      v11[v13[6]] = v12[v13[6]];
      *(void *)&v11[v13[7]] = *(void *)&v12[v13[7]];
      v11[v13[8]] = v12[v13[8]];
      (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for UnauthenticatedStateWithTasks(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)(a1 + v6);
    uint64_t v8 = (char *)(a2 + v6);
    sub_100504C04(a1 + v6, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
    uint64_t v9 = type metadata accessor for UnauthenticatedState();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      v7[8] = v8[8];
      *((_OWORD *)v7 + 1) = *((_OWORD *)v8 + 1);
      uint64_t v10 = *(int *)(type metadata accessor for Authenticator() + 32);
      uint64_t v11 = &v7[v10];
      uint64_t v12 = &v8[v10];
      uint64_t v13 = (int *)type metadata accessor for AuthenticationTask();
      uint64_t v14 = *((void *)v13 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
      {
        uint64_t v15 = sub_10000566C(&qword_100715848);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        long long v16 = *((_OWORD *)v12 + 1);
        *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
        *((_OWORD *)v11 + 1) = v16;
        *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
        *((void *)v11 + 6) = *((void *)v12 + 6);
        uint64_t v17 = v13[5];
        uint64_t v18 = &v11[v17];
        uint64_t v22 = &v11[v17];
        uint64_t v23 = &v12[v17];
        uint64_t v19 = sub_1005E0ED0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18, v23, v19);
        uint64_t v20 = _s14descr1006B94C1C6LoggerVMa();
        *(void *)&v22[*(int *)(v20 + 20)] = *(void *)&v23[*(int *)(v20 + 20)];
        v11[v13[6]] = v12[v13[6]];
        *(void *)&v11[v13[7]] = *(void *)&v12[v13[7]];
        v11[v13[8]] = v12[v13[8]];
        (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UnauthenticatedStateWithTasks(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005045D4);
}

uint64_t sub_1005045D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnauthenticatedState();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for UnauthenticatedStateWithTasks(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005046AC);
}

uint64_t sub_1005046AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnauthenticatedState();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for UnauthenticatedStateWithTasks()
{
  uint64_t result = qword_100717B50;
  if (!qword_100717B50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005047B8()
{
  uint64_t result = type metadata accessor for UnauthenticatedState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100504868(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 176);
  if (v1 > 7) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_10050487C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 176);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    v4);
  return a1;
}

uint64_t sub_1005048F0(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 a23)
{
  if (a23 != 255)
  {
    return sub_1004FE970(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23);
  }
  return result;
}

uint64_t sub_100504970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100717378);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1005049D8()
{
  unint64_t result = qword_100717B90;
  if (!qword_100717B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717B90);
  }
  return result;
}

uint64_t sub_100504A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthenticationTask();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100504A90()
{
  unint64_t result = qword_100717BA0;
  if (!qword_100717BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717BA0);
  }
  return result;
}

uint64_t sub_100504AE4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100504B30(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  if (a9 != 255) {
    return sub_10044C910(result, a2, a3, a4, a5, a6, a7, a8, a9);
  }
  return result;
}

unint64_t sub_100504B48()
{
  unint64_t result = qword_100717BB0;
  if (!qword_100717BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717BB0);
  }
  return result;
}

uint64_t sub_100504B9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100504C04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100504C64(unint64_t result)
{
  if (result <= 0xFFFFFFFEFFFFFFFFLL) {
    return sub_100484C20(result);
  }
  return result;
}

ValueMetadata *type metadata accessor for UnauthenticatedStateWithTasks.UnexpectedDidStartTLS()
{
  return &type metadata for UnauthenticatedStateWithTasks.UnexpectedDidStartTLS;
}

ValueMetadata *type metadata accessor for UnauthenticatedStateWithTasks.NoAuthenticationTaskRunning()
{
  return &type metadata for UnauthenticatedStateWithTasks.NoAuthenticationTaskRunning;
}

unsigned char *_s14descr1006B9599C10WorkaroundOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100504D34);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s14descr1006B9599C10WorkaroundOMa()
{
  return &_s14descr1006B9599C10WorkaroundON;
}

unint64_t sub_100504D70()
{
  unint64_t result = qword_100717BB8;
  if (!qword_100717BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717BB8);
  }
  return result;
}

uint64_t sub_100504DC4(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  char v2 = *(unsigned char *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (!*(unsigned char *)(a2 + 16)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 8) != *(void *)(a2 + 8)) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  return *(unsigned __int8 *)(a1 + 17) ^ *(unsigned __int8 *)(a2 + 17) ^ 1u;
}

uint64_t sub_100504E1C(char a1, uint64_t a2, int64_t a3, char a4)
{
  int64_t v8 = static MonotonicTime.now()();
  if ((a4 & 1) == 0 && v8 <= a3) {
    return a2;
  }
  if (!a1)
  {
    BOOL v9 = __OFADD__(a2++, 1);
    if (!v9) {
      goto LABEL_5;
    }
LABEL_12:
    __break(1u);
    return a2;
  }
  BOOL v9 = __OFADD__(a2, 4);
  a2 += 4;
  if (v9) {
    goto LABEL_12;
  }
LABEL_5:
  if (a2 <= 1000)
  {
    if (a2 < 1) {
      return a2;
    }
  }
  else
  {
    a2 = 1000;
  }
  unint64_t v10 = sub_1005050F0(0x20000000000001uLL);
  double v11 = sub_10050517C(a2, (double)v10 * 1.11022302e-16 + 0.0);
  MonotonicTime.init(secondsSinceNow:)(v11);
  return a2;
}

uint64_t variable initialization expression of Engine.externalState@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Activity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  uint64_t result = type metadata accessor for ExternalState();
  *(void *)(a1 + *(int *)(result + 20)) = &_swiftEmptySetSingleton;
  return result;
}

unint64_t variable initialization expression of Engine.pendingCredentialsRequests()
{
  return sub_10050522C((uint64_t)_swiftEmptyArrayStorage);
}

unint64_t sub_100504FAC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000566C(&qword_100717BC8);
  uint64_t v2 = sub_1005E2FF0();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000079E4(v6, (uint64_t)&v15, &qword_100717BD0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_100024668(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    double v11 = (uint64_t *)(v3[6] + 16 * result);
    *double v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_100021BFC(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1005050F0(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    swift_stdlib_random();
    unint64_t result = (0 * (unsigned __int128)v1) >> 64;
    if (-(uint64_t)v1 % v1)
    {
      while (1)
        swift_stdlib_random();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_10050517C(uint64_t a1, double a2)
{
  if (a1 < 1) {
    return 0.0;
  }
  double v3 = exp2((double)(a1 - 1)) * 4.0;
  if (v3 >= 80.0)
  {
    double v5 = 1.0;
    if (a2 < 1.0)
    {
      if (a2 < 0.0) {
        double v5 = 0.0;
      }
      else {
        double v5 = a2;
      }
    }
    double v4 = 40.0;
    double v3 = 80.0;
  }
  else
  {
    double v4 = v3 * 0.5;
    double v5 = 1.0;
    if (a2 < 1.0)
    {
      double v5 = 0.0;
      if (a2 >= 0.0) {
        double v5 = a2;
      }
    }
  }
  return v4 + v5 * 0.5 * v3;
}

unint64_t sub_10050522C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_10000566C(&qword_100717BF8);
  double v3 = (void *)sub_1005E2FF0();
  Swift::UInt32 v4 = *(_DWORD *)(a1 + 32);
  int v5 = *(_DWORD *)(a1 + 40);
  long long v15 = *(_OWORD *)(a1 + 48);
  unint64_t result = sub_1000243F4(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  uint64_t v8 = (_OWORD *)(a1 + 80);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    uint64_t v9 = v3[7] + 24 * result;
    *(_DWORD *)uint64_t v9 = v5;
    *(_OWORD *)(v9 + 8) = v15;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    BOOL v13 = v8 + 2;
    Swift::UInt32 v4 = *((_DWORD *)v8 - 4);
    int v5 = *((_DWORD *)v8 - 2);
    long long v15 = *v8;
    swift_retain();
    unint64_t result = sub_1000243F4(v4);
    uint64_t v8 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

__n128 initializeBufferWithCopyOfBuffer for Backoff(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Backoff(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 17);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for Backoff()
{
  return &type metadata for Backoff;
}

unint64_t sub_1005053CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000566C(&qword_100717BF0);
    unsigned int v3 = (void *)sub_1005E2FF0();
    for (i = (void *)(a1 + 40); ; i += 2)
    {
      Swift::UInt32 v5 = *((_DWORD *)i - 2);
      uint64_t v6 = *i;
      unint64_t result = sub_1000243F4(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v3[6] + 4 * result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_1005054A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_10000566C(&qword_100717BD8);
  unsigned int v3 = (void *)sub_1005E2FF0();
  uint64_t v4 = *(void *)(a1 + 32);
  Swift::UInt v5 = *(void *)(a1 + 40);
  int v6 = *(_DWORD *)(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 52);
  uint64_t v8 = *(void *)(a1 + 56);
  char v9 = *(unsigned char *)(a1 + 64);
  unint64_t result = sub_1003F643C(v4, v5);
  if (v11)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v12 = (unsigned char *)(a1 + 104);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v13 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v13 = v4;
    v13[1] = v5;
    uint64_t v14 = v3[7] + 24 * result;
    *(_DWORD *)uint64_t v14 = v6;
    *(unsigned char *)(v14 + 4) = v7 & 1;
    *(void *)(v14 + 8) = v8;
    *(unsigned char *)(v14 + 16) = v9 & 1;
    uint64_t v15 = v3[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      break;
    }
    v3[2] = v17;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v18 = v12 + 40;
    uint64_t v19 = *((void *)v12 - 4);
    Swift::UInt v5 = *((void *)v12 - 3);
    int v6 = *((_DWORD *)v12 - 4);
    char v7 = *(v12 - 12);
    uint64_t v8 = *((void *)v12 - 1);
    char v9 = *v12;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1003F643C(v19, v5);
    uint64_t v12 = v18;
    uint64_t v4 = v19;
    if (v20) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100505600(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100717BE0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::UInt v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_10000566C(&qword_100717BE8);
    char v7 = (void *)sub_1005E2FF0();
    uint64_t v8 = (uint64_t)&v5[*(int *)(v2 + 48)];
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_1000079E4(v9, (uint64_t)v5, &qword_100717BE0);
      uint64_t v11 = *(void *)v5;
      unsigned int v12 = *((_DWORD *)v5 + 2);
      unint64_t result = sub_1003F6540(*(void *)v5, v12);
      if (v14) {
        break;
      }
      unint64_t v15 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v16 = v7[6] + 16 * result;
      *(void *)uint64_t v16 = v11;
      *(_DWORD *)(v16 + 8) = v12;
      uint64_t v17 = v7[7];
      uint64_t v18 = type metadata accessor for ConnectionStatus(0);
      unint64_t result = sub_1005057C0(v8, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v15);
      uint64_t v19 = v7[2];
      BOOL v20 = __OFADD__(v19, 1);
      uint64_t v21 = v19 + 1;
      if (v20) {
        goto LABEL_10;
      }
      v7[2] = v21;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_1005057C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100505828()
{
  uint64_t v0 = sub_1005E0ED0();
  sub_10034E5B4(v0, qword_100717CC0);
  sub_1003461B0(v0, (uint64_t)qword_100717CC0);
  return sub_1005E0EC0();
}

uint64_t sub_1005058AC()
{
  if (*(void *)(v0 + 72))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1005E26A0();
    swift_unknownObjectRelease();
  }

  sub_1004836A4(v0 + 32);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BetterPathEvaluator()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for BetterPathEvaluator.Connection(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for BetterPathEvaluator.Connection(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

__n128 initializeWithTake for BetterPathEvaluator.Connection(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for BetterPathEvaluator.Connection(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for BetterPathEvaluator.Connection()
{
  return &type metadata for BetterPathEvaluator.Connection;
}

void sub_100505A44()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E1850();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::UInt v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = *(void **)(v0 + 16);
  *Swift::UInt v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  char v8 = sub_1005E1860();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)(v1 + 72);
  if (*(unsigned char *)(v1 + 64) && *(unsigned char *)(v1 + 64) == 1)
  {
    if (v9) {
      return;
    }
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    uint64_t v11 = sub_100506590((uint64_t)v7, (uint64_t)sub_100507FB0, v10);
    swift_release_n();
    *(void *)(v1 + 72) = v11;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    swift_getObjectType();
    sub_1005E26B0();
    if (qword_100717BC0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1005E0ED0();
    sub_1003461B0(v12, (uint64_t)qword_100717CC0);
    swift_retain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    BOOL v13 = sub_1005E0EB0();
    os_log_type_t v14 = sub_1005E25C0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 68157952;
      int v20 = 2;
      sub_1005E2960();
      *(_WORD *)(v15 + 8) = 256;
      v19[3] = *(unsigned char *)(v1 + 24);
      sub_1005E2960();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%.*hhx] Did create timer.", (uint8_t *)v15, 0xBu);
      swift_slowDealloc();
      swift_unknownObjectRelease();

      return;
    }
    swift_unknownObjectRelease();
    goto LABEL_14;
  }
  if (!v9) {
    return;
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_1005E26A0();
  swift_unknownObjectRelease();
  *(void *)(v1 + 72) = 0;
  swift_unknownObjectRelease();
  if (qword_100717BC0 != -1) {
    goto LABEL_17;
  }
LABEL_11:
  uint64_t v16 = sub_1005E0ED0();
  sub_1003461B0(v16, (uint64_t)qword_100717CC0);
  swift_retain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  BOOL v13 = sub_1005E0EB0();
  os_log_type_t v17 = sub_1005E25C0();
  if (os_log_type_enabled(v13, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 68157952;
    int v22 = 2;
    sub_1005E2960();
    *(_WORD *)(v18 + 8) = 256;
    char v21 = *(unsigned char *)(v1 + 24);
    sub_1005E2960();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v13, v17, "[%.*hhx] Did cancel timer.", (uint8_t *)v18, 0xBu);
    swift_slowDealloc();

    return;
  }
LABEL_14:

  swift_release();
}

void sub_100505E90()
{
  uint64_t v1 = *(void *)(v0 + 80);
  if (*(unsigned char *)(v0 + 64) && *(unsigned char *)(v0 + 64) != 1)
  {
    uint64_t v10 = *(void *)(v0 + 48);
    if (v1)
    {
      if (v10 == *(void *)(v0 + 88)) {
        return;
      }
      uint64_t v11 = *(void (**)(uint64_t))(*(void *)v1 + 512);
      uint64_t v12 = swift_retain_n();
      v11(v12);
    }
    uint64_t v13 = (*(uint64_t (**)(uint64_t, _UNKNOWN **))(v0 + 96))(v0, &off_1006FB820);
    *(void *)(v0 + 80) = v13;
    *(void *)(v0 + 88) = v10;
    swift_retain();
    swift_release();
    os_log_type_t v14 = *(void (**)(uint64_t))(*(void *)v13 + 496);
    uint64_t v15 = swift_retain();
    v14(v15);
    swift_release();
    if (qword_100717BC0 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1005E0ED0();
    sub_1003461B0(v16, (uint64_t)qword_100717CC0);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_retain_n();
    os_log_type_t v17 = sub_1005E0EB0();
    os_log_type_t v18 = sub_1005E25C0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 68158722;
      sub_1005E2960();
      *(_WORD *)(v19 + 8) = 256;
      swift_release();
      sub_1005E2960();
      swift_release();
      *(_WORD *)(v19 + 11) = 2082;
      uint64_t v20 = ConnectionID.debugDescription.getter(*(unsigned int *)(v13
                                                                 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id));
      sub_100507920(v20, v21, &v23);
      sub_1005E2960();
      swift_release_n();
      uint64_t v22 = swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 21) = 2048;
      (*(void (**)(uint64_t))(*(void *)v13 + 400))(v22);
      swift_release();
      sub_1005E2960();
      swift_release();
      *(_WORD *)(v19 + 31) = 2048;
      swift_release();
      sub_1005E2960();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "[%.*hhx] Did create connection %{public}s [C%llu], generation %ld", (uint8_t *)v19, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
  }
  else
  {
    if (!v1) {
      return;
    }
    uint64_t v2 = *(void (**)(uint64_t))(*(void *)v1 + 512);
    uint64_t v3 = swift_retain();
    v2(v3);
    *(void *)(v0 + 80) = 0;
    *(void *)(v0 + 88) = 0;
    swift_release();
    if (qword_100717BC0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1005E0ED0();
    sub_1003461B0(v4, (uint64_t)qword_100717CC0);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_retain_n();
    Swift::UInt v5 = sub_1005E0EB0();
    os_log_type_t v6 = sub_1005E25C0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 68158466;
      sub_1005E2960();
      *(_WORD *)(v7 + 8) = 256;
      swift_release();
      sub_1005E2960();
      swift_release();
      *(_WORD *)(v7 + 11) = 2082;
      uint64_t v8 = ConnectionID.debugDescription.getter(*(unsigned int *)(v1
                                                                + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id));
      sub_100507920(v8, v9, &v23);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 21) = 2048;
      swift_release();
      sub_1005E2960();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%.*hhx] Did cancel connection %{public}s, generation %ld", (uint8_t *)v7, 0x1Fu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }

    swift_release_n();
  }
  swift_release_n();
}

uint64_t sub_1005064CC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t result = static MonotonicTime.now()();
    if (*(unsigned char *)(v1 + 64) != 1)
    {
LABEL_11:
      sub_100505A44();
      sub_100505E90();
      return swift_release();
    }
    uint64_t v2 = *(void *)(v1 + 56);
    BOOL v3 = __OFSUB__(result, v2);
    uint64_t v4 = result - v2;
    if (result < v2)
    {
      if (__OFSUB__(v2, result))
      {
        __break(1u);
        goto LABEL_14;
      }
      BOOL v3 = __OFSUB__(0, v2 - result);
      uint64_t v4 = result - v2;
      if (!v3)
      {
LABEL_9:
        if ((double)v4 / 1000000000.0 > 2.0)
        {
          *(void *)(v1 + 56) = 0;
          *(unsigned char *)(v1 + 64) = 2;
        }
        goto LABEL_11;
      }
      __break(1u);
    }
    if (!v3) {
      goto LABEL_9;
    }
LABEL_14:
    __break(1u);
  }
  return result;
}

uint64_t sub_100506590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v32 = a1;
  uint64_t v3 = sub_1005E1810();
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v40 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v39 = (char *)&v30 - v6;
  uint64_t v7 = sub_1005E1670();
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  __chkstk_darwin(v7);
  unint64_t v9 = (uint64_t *)((char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1005E1680();
  uint64_t v33 = *(void *)(v10 - 8);
  uint64_t v34 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005E16C0();
  uint64_t v30 = *(void *)(v13 - 8);
  uint64_t v31 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005E2640();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100507FB8();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100508010(&qword_100717E28, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
  sub_10000566C(&qword_100717E30);
  sub_100057E98(&qword_100717E38, &qword_100717E30);
  sub_1005E2AD0();
  uint64_t v20 = sub_1005E2650();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  swift_getObjectType();
  aBlock[4] = v35;
  aBlock[5] = v36;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046A1E4;
  aBlock[3] = &unk_1006FB858;
  unint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  sub_1005E16A0();
  sub_100506AA8();
  sub_1005E2660();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v31);
  swift_release();
  *unint64_t v9 = 250;
  uint64_t v23 = v37;
  uint64_t v22 = v38;
  (*(void (**)(void *, void, uint64_t))(v37 + 104))(v9, enum case for DispatchTimeInterval.milliseconds(_:), v38);
  uint64_t v24 = v40;
  sub_1005E17F0();
  uint64_t v25 = v39;
  sub_1005E1800();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v41 + 8);
  uint64_t v27 = v24;
  uint64_t v28 = v42;
  v26(v27, v42);
  sub_1005E27C0();
  v26(v25, v28);
  (*(void (**)(void *, uint64_t))(v23 + 8))(v9, v22);
  return v20;
}

uint64_t sub_100506AA8()
{
  return sub_1005E2AD0();
}

uint64_t sub_100506B70(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for ConnectionState();
  uint64_t result = __chkstk_darwin();
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v2 + 80);
  if (v7)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8)
    {
      if (*(_DWORD *)(v7 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) == *(_DWORD *)(a1 + 32))
      {
        uint64_t v9 = *(void *)(v2 + 88);
        uint64_t v10 = (uint64_t *)(a1 + 40);
        while (1)
        {
          uint64_t v11 = *v10;
          v10 += 5;
          if (v11 == 0x8000000000000010) {
            break;
          }
          if (!--v8) {
            return result;
          }
        }
        uint64_t v12 = *(void (**)(uint64_t))(*(void *)v7 + 296);
        uint64_t v13 = swift_retain();
        v12(v13);
        sub_100506CB8(v9, (uint64_t)v6);
        swift_release();
        return sub_100507790((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      }
    }
  }
  return result;
}

uint64_t sub_100506CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v61 = a2;
  uint64_t v5 = sub_1005E1650();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v54 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v62 = (char *)&v53 - v8;
  __chkstk_darwin();
  uint64_t v57 = (char *)&v53 - v9;
  long long v60 = (void (*)(char *, char *, uint64_t))sub_10000566C(&qword_100717E10);
  uint64_t v10 = *((void *)v60 - 1);
  __chkstk_darwin();
  uint64_t v58 = (uint64_t)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v53 - v12;
  _s5StateO6ActionOMa();
  __chkstk_darwin();
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v53 - v16;
  if (qword_100717BC0 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1005E0ED0();
  uint64_t v19 = sub_1003461B0(v18, (uint64_t)qword_100717CC0);
  swift_retain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v59 = v19;
  uint64_t v20 = sub_1005E0EB0();
  os_log_type_t v21 = sub_1005E2580();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (_DWORD *)swift_slowAlloc();
    long long v55 = v13;
    long long v56 = v17;
    uint64_t v23 = v22;
    *uint64_t v22 = 68158208;
    LODWORD(v64) = 2;
    sub_1005E2960();
    *((_WORD *)v23 + 4) = 256;
    LOBYTE(v64) = *(unsigned char *)(v3 + 24);
    sub_1005E2960();
    swift_release();
    *(_WORD *)((char *)v23 + 11) = 2048;
    uint64_t v64 = a1;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%.*hhx] Connection generation %ld state did change.", (uint8_t *)v23, 0x15u);
    uint64_t v13 = v55;
    uint64_t v17 = v56;
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  sub_100508080(a1, v61, (uint64_t)v17);
  sub_10050772C((uint64_t)v17, (uint64_t)v15);
  int v24 = (*(uint64_t (**)(char *, uint64_t, void *))(v10 + 48))(v15, 2, v60);
  uint64_t v25 = v62;
  if (!v24)
  {
    sub_1005077F0((uint64_t)v15, (uint64_t)v13);
    uint64_t v31 = v58;
    sub_100507858((uint64_t)v13, v58);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v31, 1, v5) == 1)
    {
      sub_1005078C0(v31);
      swift_retain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v32 = sub_1005E0EB0();
      os_log_type_t v33 = sub_1005E25C0();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = v3;
        uint64_t v35 = v17;
        uint64_t v36 = swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 68158208;
        LODWORD(v64) = 2;
        sub_1005E2960();
        *(_WORD *)(v36 + 8) = 256;
        LOBYTE(v64) = *(unsigned char *)(v34 + 24);
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v36 + 11) = 2048;
        uint64_t v64 = a1;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "[%.*hhx] Cancelling connection generation %ld", (uint8_t *)v36, 0x15u);
        uint64_t v17 = v35;
        swift_slowDealloc();
      }
      else
      {
        swift_release();
      }
    }
    else
    {
      uint64_t v37 = v57;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v57, v31, v5);
      swift_retain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      long long v60 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      v60(v25, v37, v5);
      uint64_t v38 = sub_1005E0EB0();
      os_log_type_t v39 = sub_1005E25C0();
      LODWORD(v61) = v39;
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = swift_slowAlloc();
        long long v55 = v13;
        uint64_t v41 = v40;
        uint64_t v59 = swift_slowAlloc();
        uint64_t v64 = v59;
        *(_DWORD *)uint64_t v41 = 68158466;
        LODWORD(v63) = 2;
        long long v56 = v17;
        sub_1005E2960();
        *(_WORD *)(v41 + 8) = 256;
        LOBYTE(v63) = *(unsigned char *)(v3 + 24);
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v41 + 11) = 2048;
        uint64_t v63 = a1;
        sub_1005E2960();
        *(_WORD *)(v41 + 21) = 2082;
        v60(v54, v25, v5);
        uint64_t v42 = sub_1005E1CA0();
        uint64_t v63 = sub_100507920(v42, v43, &v64);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        uint64_t v44 = *(void (**)(char *, uint64_t))(v6 + 8);
        v44(v25, v5);
        _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v61, "[%.*hhx] Cancelling connection generation %ld: %{public}s", (uint8_t *)v41, 0x1Fu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v44(v57, v5);
        uint64_t v17 = v56;
        sub_1005078C0((uint64_t)v55);
        goto LABEL_30;
      }

      long long v51 = *(void (**)(char *, uint64_t))(v6 + 8);
      v51(v25, v5);
      swift_release();
      v51(v37, v5);
    }
    sub_1005078C0((uint64_t)v13);
    goto LABEL_30;
  }
  if (v24 != 1)
  {
    uint64_t v26 = *(void *)(v3 + 80);
    if (v26)
    {
      uint64_t v27 = v17;
      *(void *)(v3 + 80) = 0;
      *(void *)(v3 + 88) = 0;
      swift_retain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v28 = sub_1005E0EB0();
      os_log_type_t v29 = sub_1005E25C0();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 68158208;
        LODWORD(v64) = 2;
        sub_1005E2960();
        *(_WORD *)(v30 + 8) = 256;
        LOBYTE(v64) = *(unsigned char *)(v3 + 24);
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v30 + 11) = 2048;
        uint64_t v64 = a1;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "[%.*hhx] Promoting connection generation %ld.", (uint8_t *)v30, 0x15u);
        swift_slowDealloc();
      }
      else
      {

        swift_release();
      }
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        if (!*(void *)(Strong + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_connections))
        {
          swift_release();
          swift_unknownObjectRelease();
          goto LABEL_29;
        }
        swift_retain();
        swift_retain();
        sub_100522728(v26);
        swift_unknownObjectRelease();
        swift_release_n();
      }
      swift_release();
LABEL_29:
      uint64_t v17 = v27;
      goto LABEL_30;
    }
    swift_retain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v45 = sub_1005E0EB0();
    uint64_t v46 = sub_1005E25C0();
    if (os_log_type_enabled(v45, (os_log_type_t)v46))
    {
      uint64_t v47 = v3;
      uint64_t v48 = v17;
      uint64_t v49 = swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 68158208;
      LODWORD(v64) = 2;
      sub_1005E2960();
      *(_WORD *)(v49 + 8) = 256;
      LOBYTE(v64) = *(unsigned char *)(v47 + 24);
      sub_1005E2960();
      swift_release();
      *(_WORD *)(v49 + 11) = 2048;
      uint64_t v64 = a1;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v46, "[%.*hhx] Trying to promote connection generation %ld, but there’s no connection.", (uint8_t *)v49, 0x15u);
      uint64_t v17 = v48;
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
  }
LABEL_30:
  sub_100505A44();
  sub_100505E90();
  return sub_100507790((uint64_t)v17, (uint64_t (*)(void))_s5StateO6ActionOMa);
}

uint64_t sub_10050772C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s5StateO6ActionOMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100507790(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005077F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100717E10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100507858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100717E10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005078C0(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100717E10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100507920(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1005079F4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1000D65AC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000D65AC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1005079F4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1005E2970();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_100507BB0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1005E2D30();
  if (!v8)
  {
    sub_1005E2F10();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1005E3000();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_100507BB0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_100507C48(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100507E28(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100507E28(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_100507C48(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_100507DC0(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1005E2C90();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1005E2F10();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1005E1E80();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    sub_1005E3000();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1005E2F10();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_100507DC0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000566C(&qword_100717E18);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_100507E28(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100717E18);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100507F78()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100507FB0()
{
  return sub_1005064CC();
}

unint64_t sub_100507FB8()
{
  unint64_t result = qword_100717E20;
  if (!qword_100717E20)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100717E20);
  }
  return result;
}

uint64_t sub_100507FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100508008()
{
  return swift_release();
}

uint64_t sub_100508010(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 _s5StateOwCP(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

ValueMetadata *_s5StateOMa()
{
  return &_s5StateON;
}

uint64_t sub_100508080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for ConnectionState();
  __chkstk_darwin();
  int64_t v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v10 = &v26[-v9];
  __chkstk_darwin();
  uint64_t v12 = &v26[-v11];
  if (*(unsigned char *)(v3 + 16) == 2 && *(void *)v3 == a1)
  {
    sub_1004EB2E8(a2, (uint64_t)&v26[-v11]);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        goto LABEL_14;
      case 2u:
        sub_1004EB2E8((uint64_t)v12, (uint64_t)v8);
        memcpy(v26, v8, 0x15AuLL);
        sub_100508504((uint64_t)v26);
        *(void *)uint64_t v3 = a1 + 1;
        *(void *)(v3 + 8) = 0;
        *(unsigned char *)(v3 + 16) = 0;
        uint64_t v24 = sub_10000566C(&qword_100717E10);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a3, 2, 2, v24);
        goto LABEL_15;
      case 3u:
      case 4u:
      case 5u:
        sub_1004EB34C((uint64_t)v12);
        *(void *)uint64_t v3 = a1 + 1;
        *(void *)(v3 + 8) = 0;
        *(unsigned char *)(v3 + 16) = 0;
        uint64_t v17 = sub_1005E1650();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a3, 1, 1, v17);
        uint64_t v18 = sub_10000566C(&qword_100717E10);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a3, 0, 2, v18);
      default:
        sub_1004EB2E8((uint64_t)v12, (uint64_t)v10);
        uint64_t v19 = sub_1005E12C0();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t))(v20 + 88))(v10, v19) == enum case for NWConnection.State.waiting(_:))
        {
          (*(void (**)(unsigned char *, uint64_t))(v20 + 96))(v10, v19);
          uint64_t v21 = sub_1005E1650();
          uint64_t v22 = *(void *)(v21 - 8);
          (*(void (**)(uint64_t, unsigned char *, uint64_t))(v22 + 32))(a3, v10, v21);
          *(void *)uint64_t v3 = a1 + 1;
          *(void *)(v3 + 8) = 0;
          *(unsigned char *)(v3 + 16) = 0;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(a3, 0, 1, v21);
          uint64_t v23 = sub_10000566C(&qword_100717E10);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a3, 0, 2, v23);
        }
        else
        {
          (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v10, v19);
LABEL_14:
          uint64_t v25 = sub_10000566C(&qword_100717E10);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a3, 1, 2, v25);
        }
LABEL_15:
        uint64_t result = sub_1004EB34C((uint64_t)v12);
        break;
    }
  }
  else
  {
    uint64_t v14 = sub_10000566C(&qword_100717E10);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    return v15(a3, 1, 2, v14);
  }
  return result;
}

BOOL sub_1005084E8(uint64_t a1, uint64_t a2)
{
  return sub_1005089F0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_100508504(uint64_t a1)
{
  uint64_t v17 = *(void *)(a1 + 192);
  uint64_t v18 = *(void *)(a1 + 184);
  uint64_t v15 = *(void *)(a1 + 208);
  unint64_t v16 = *(void *)(a1 + 200);
  uint64_t v13 = *(void *)(a1 + 224);
  uint64_t v14 = *(void *)(a1 + 216);
  uint64_t v11 = *(void *)(a1 + 240);
  uint64_t v12 = *(void *)(a1 + 232);
  long long v10 = *(_OWORD *)(a1 + 248);
  long long v8 = *(_OWORD *)(a1 + 280);
  long long v9 = *(_OWORD *)(a1 + 264);
  long long v7 = *(_OWORD *)(a1 + 296);
  long long v6 = *(_OWORD *)(a1 + 312);
  uint64_t v2 = *(void *)(a1 + 336);
  uint64_t v5 = *(void *)(a1 + 328);
  unsigned __int16 v3 = *(_WORD *)(a1 + 344);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100508690(v18, v17, v16, v15, v14, v13, v12, v11, v10, *((uint64_t *)&v10 + 1), v9, DWORD2(v9), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5,
    v2,
    v3);
  return a1;
}

uint64_t sub_100508690(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int16 a21)
{
  int v23 = a21 >> 14;
  switch(v23)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 1:
      swift_bridgeObjectRelease();
      sub_10050890C(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
      swift_bridgeObjectRelease();
      break;
    case 0:
      return sub_1005087DC(result, a2, a3, a4, a5);
    default:
      return result;
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_1005087DC(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_100508834(a3, a4, a5);
  }
  return result;
}

unint64_t sub_100508834(unint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_100508874(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_100508874(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_100508888(result);
  }
  return result;
}

unint64_t sub_100508888(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10050890C(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10)
{
  int v10 = (a10 >> 21) & 7;
  if (v10 == 3)
  {
    return sub_100508994(result, a2, a3, a4);
  }
  else if (v10 == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_100508994(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 0xFF) {
    return sub_1005089A8(result, a2, a3, a4);
  }
  return result;
}

unint64_t sub_1005089A8(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    sub_100508874(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

BOOL sub_1005089F0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    BOOL v8 = a6 == 1 && a1 == a4 && a2 == a5;
    BOOL v10 = a6 == 2 && a1 == a4;
    if (a3 == 1) {
      return v8;
    }
    else {
      return v10;
    }
  }
  else
  {
    return !a6 && a1 == a4;
  }
}

uint64_t *sub_100508A34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_10000566C(&qword_100717E10);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_1005E1650();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        memcpy(a1, a2, *(void *)(v8 + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_100508C28(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100717E10);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = sub_1005E1650();
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v4);
    if (!result)
    {
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      return v5(a1, v4);
    }
  }
  return result;
}

void *sub_100508D3C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100717E10);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1005E1650();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_100508EF4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100717E10);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v14 = sub_1005E1650();
      uint64_t v15 = *(void *)(v14 - 8);
      unint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
      int v17 = v16(a1, 1, v14);
      int v18 = v16(a2, 1, v14);
      if (v17)
      {
        if (!v18)
        {
          (*(void (**)(void *, void *, uint64_t))(v15 + 16))(a1, a2, v14);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
          return a1;
        }
      }
      else
      {
        if (!v18)
        {
          (*(void (**)(void *, void *, uint64_t))(v15 + 24))(a1, a2, v14);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v15 + 8))(a1, v14);
      }
      size_t v13 = *(void *)(v7 + 64);
      goto LABEL_8;
    }
    sub_1005078C0((uint64_t)a1);
LABEL_7:
    size_t v13 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    return a1;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = sub_1005E1650();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_1005091F8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100717E10);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1005E1650();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_1005093B0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100717E10);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v14 = sub_1005E1650();
      uint64_t v15 = *(void *)(v14 - 8);
      unint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
      int v17 = v16(a1, 1, v14);
      int v18 = v16(a2, 1, v14);
      if (v17)
      {
        if (!v18)
        {
          (*(void (**)(void *, void *, uint64_t))(v15 + 32))(a1, a2, v14);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
          return a1;
        }
      }
      else
      {
        if (!v18)
        {
          (*(void (**)(void *, void *, uint64_t))(v15 + 40))(a1, a2, v14);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v15 + 8))(a1, v14);
      }
      size_t v13 = *(void *)(v7 + 64);
      goto LABEL_8;
    }
    sub_1005078C0((uint64_t)a1);
LABEL_7:
    size_t v13 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    return a1;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = sub_1005E1650();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_1005096B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005096C8);
}

uint64_t sub_1005096C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100717E10);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_100509738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10050974C);
}

uint64_t sub_10050974C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_10000566C(&qword_100717E10);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1005097D4(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100717E10);
  unsigned __int16 v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 2, v2);
}

uint64_t sub_100509840(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100717E10);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 2, v4);
}

uint64_t _s5StateO6ActionOMa()
{
  uint64_t result = qword_100717ED0;
  if (!qword_100717ED0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100509900()
{
  sub_100509978();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

void sub_100509978()
{
  if (!qword_100717EE0)
  {
    sub_1005E1650();
    unint64_t v0 = sub_1005E28C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100717EE0);
    }
  }
}

ValueMetadata *_s10GenerationVMa()
{
  return &_s10GenerationVN;
}

uint64_t sub_1005099E0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v293 = a2;
  uint64_t v316 = sub_1005E1650();
  uint64_t v298 = *(void *)(v316 - 8);
  __chkstk_darwin();
  v269 = (char *)&v259 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v272 = (char *)&v259 - v4;
  __chkstk_darwin();
  v274 = (char *)&v259 - v5;
  __chkstk_darwin();
  v288 = (char *)&v259 - v6;
  __chkstk_darwin();
  v281 = (char *)&v259 - v7;
  __chkstk_darwin();
  v296 = (char *)&v259 - v8;
  __chkstk_darwin();
  v289 = (char *)&v259 - v9;
  sub_10000566C(&qword_100717E10);
  __chkstk_darwin();
  uint64_t v270 = (uint64_t)&v259 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v271 = (uint64_t)&v259 - v11;
  __chkstk_darwin();
  uint64_t v273 = (uint64_t)&v259 - v12;
  __chkstk_darwin();
  v290 = (char *)&v259 - v13;
  __chkstk_darwin();
  v282 = (char *)&v259 - v14;
  __chkstk_darwin();
  uint64_t v275 = (uint64_t)&v259 - v15;
  __chkstk_darwin();
  v292 = (char *)&v259 - v16;
  __chkstk_darwin();
  int v18 = (char *)&v259 - v17;
  sub_10000566C(&qword_100717EE8);
  __chkstk_darwin();
  v305 = (char *)&v259 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100717EF0);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v259 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  int v23 = (char *)&v259 - v22;
  __chkstk_darwin();
  uint64_t v304 = (uint64_t)&v259 - v24;
  __chkstk_darwin();
  v312 = (uint64_t *)((char *)&v259 - v25);
  uint64_t v26 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin();
  uint64_t v276 = (uint64_t)&v259 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v311 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v259 - v29);
  __chkstk_darwin();
  uint64_t v303 = (uint64_t)&v259 - v30;
  sub_10000566C(&qword_100717EF8);
  __chkstk_darwin();
  v277 = (char *)&v259 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v310 = (char *)&v259 - v32;
  __chkstk_darwin();
  uint64_t v34 = (char *)&v259 - v33;
  uint64_t v315 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  __chkstk_darwin();
  v309 = (uint64_t *)((char *)&v259 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v37 = (_DWORD *)((char *)&v259 - v36);
  __chkstk_darwin();
  os_log_type_t v39 = (char *)&v259 - v38;
  __chkstk_darwin();
  v314 = (_DWORD *)((char *)&v259 - v40);
  __chkstk_darwin();
  v319 = (uint64_t *)((char *)&v259 - v41);
  *(void *)&long long v323 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  __chkstk_darwin();
  __chkstk_darwin();
  __chkstk_darwin();
  __chkstk_darwin();
  uint64_t v279 = (uint64_t)&v259 - v42;
  __chkstk_darwin();
  v280 = (char *)&v259 - v43;
  __chkstk_darwin();
  uint64_t v278 = (uint64_t)&v259 - v44;
  __chkstk_darwin();
  uint64_t v287 = (uint64_t)&v259 - v45;
  __chkstk_darwin();
  v291 = (char *)&v259 - v46;
  __chkstk_darwin();
  uint64_t v286 = (uint64_t)&v259 - v47;
  __chkstk_darwin();
  uint64_t v295 = (uint64_t)&v259 - v48;
  __chkstk_darwin();
  v297 = (char *)&v259 - v49;
  __chkstk_darwin();
  uint64_t v294 = (uint64_t)&v259 - v50;
  __chkstk_darwin();
  uint64_t v300 = (uint64_t)&v259 - v51;
  __chkstk_darwin();
  v301 = (char *)&v259 - v52;
  __chkstk_darwin();
  uint64_t v299 = (uint64_t)&v259 - v53;
  __chkstk_darwin();
  uint64_t v321 = (uint64_t)&v259 - v54;
  __chkstk_darwin();
  long long v56 = (char *)&v259 - v55;
  __chkstk_darwin();
  uint64_t v308 = (uint64_t)&v259 - v57;
  __chkstk_darwin();
  uint64_t v63 = v293;
  uint64_t v64 = *(void *)(a1 + 16);
  if (!v64) {
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v63, 1, 1, v26);
  }
  uint64_t v306 = v27;
  uint64_t v320 = v26;
  uint64_t v260 = v58;
  uint64_t v264 = v62;
  uint64_t v261 = v61;
  v266 = v23;
  v265 = v21;
  v268 = v34;
  v267 = v18;
  long long v65 = (uint64_t (**)(_DWORD *, uint64_t))(v298 + 88);
  LODWORD(v318) = enum case for NWError.posix(_:);
  int v66 = (void (**)(_DWORD *, uint64_t))(v298 + 96);
  unint64_t v67 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  uint64_t v68 = *(void *)(v59 + 72);
  char v69 = (char *)&v259 - v60;
  uint64_t v70 = swift_bridgeObjectRetain();
  uint64_t v324 = v64;
  uint64_t v263 = v64 - 1;
  unint64_t v283 = v67;
  uint64_t v285 = v70;
  unint64_t v262 = v67 + v68 * (v64 - 1);
  uint64_t v71 = v70 + v262;
  uint64_t v317 = v68;
  uint64_t v307 = -v68;
  uint64_t v284 = v64;
  uint64_t v72 = v64;
  uint64_t v73 = v316;
  long long v74 = v319;
  v313 = v69;
  while (1)
  {
    uint64_t v322 = v71;
    sub_10050CDFC(v71, (uint64_t)v69, type metadata accessor for CommandConnection.RecentErrors.Error);
    sub_10050CDFC((uint64_t)&v69[*(int *)(v323 + 20)], (uint64_t)v74, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    if (swift_getEnumCaseMultiPayload() != 4) {
      goto LABEL_10;
    }
    long long v75 = v314;
    sub_10050CDFC((uint64_t)v74, (uint64_t)v314, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    int v76 = (*v65)(v75, v73);
    if (v76 != v318) {
      break;
    }
    (*v66)(v75, v73);
    long long v74 = v319;
    if ((*v75 - 52) >= 3 && *v75 != 60) {
      goto LABEL_10;
    }
    --v72;
    sub_10050C430((uint64_t)v319, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    char v69 = v313;
    sub_10050C430((uint64_t)v313, type metadata accessor for CommandConnection.RecentErrors.Error);
    uint64_t v71 = v322 + v307;
    if (!v72)
    {
      swift_bridgeObjectRelease();
      uint64_t v63 = v293;
      uint64_t v26 = v320;
      uint64_t v27 = v306;
      return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v63, 1, 1, v26);
    }
  }
  (*(void (**)(_DWORD *, uint64_t))(v298 + 8))(v75, v73);
  long long v74 = v319;
LABEL_10:
  sub_10050C430((uint64_t)v74, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  sub_10050C430((uint64_t)v313, type metadata accessor for CommandConnection.RecentErrors.Error);
  uint64_t v77 = v285;
  swift_bridgeObjectRelease();
  v302 = (void (**)(_DWORD *, uint64_t))(v298 + 8);
  v313 = (char *)(v306 + 56);
  uint64_t v307 = v306 + 48;
  swift_bridgeObjectRetain();
  v314 = (_DWORD *)(v77 + v283);
  v319 = _swiftEmptyArrayStorage;
  uint64_t v322 = -v317;
  uint64_t v78 = v284;
  int v79 = v318;
  do
  {
    while (1)
    {
      --v78;
      uint64_t v80 = (uint64_t)v314 + v317 * v78;
      while (1)
      {
        if (v78 >= v324)
        {
          __break(1u);
LABEL_35:
          uint64_t v89 = v320;
          goto LABEL_36;
        }
        sub_10050CDFC(v80, (uint64_t)v56, type metadata accessor for CommandConnection.RecentErrors.Error);
        sub_10050CDFC((uint64_t)&v56[*(int *)(v323 + 20)], (uint64_t)v39, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
        if (swift_getEnumCaseMultiPayload() != 4) {
          break;
        }
        sub_10050CDFC((uint64_t)v39, (uint64_t)v37, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
        if ((*v65)(v37, v73) != v79)
        {
          (*v302)(v37, v73);
          break;
        }
        (*v66)(v37, v73);
        if ((*v37 - 52) >= 3 && *v37 != 60) {
          break;
        }
        sub_10050C430((uint64_t)v39, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
        sub_10050C430((uint64_t)v56, type metadata accessor for CommandConnection.RecentErrors.Error);
        --v78;
        v80 += v322;
        if (v78 == -1) {
          goto LABEL_35;
        }
      }
      sub_10050C430((uint64_t)v39, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      uint64_t v81 = v308;
      sub_10050CF90((uint64_t)v56, v308, type metadata accessor for CommandConnection.RecentErrors.Error);
      uint64_t v82 = v81;
      uint64_t v83 = v321;
      sub_10050CF90(v82, v321, type metadata accessor for CommandConnection.RecentErrors.Error);
      unint64_t v84 = v309;
      sub_10050CDFC(v83 + *(int *)(v323 + 20), (uint64_t)v309, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v85 = v84[1];
        if (v85)
        {
          uint64_t v86 = v312;
          void *v312 = *v84;
          v86[1] = v85;
          uint64_t v87 = type metadata accessor for ConnectionStatus.Error.Details(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v86, 0, 1, v87);
        }
        else
        {
          uint64_t v91 = type metadata accessor for ConnectionStatus.Error.Details(0);
          uint64_t v86 = v312;
          (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v312, 1, 1, v91);
        }
        int v79 = v318;
        uint64_t v92 = v304;
        sub_1000079E4((uint64_t)v86, v304, &qword_100717EF0);
        uint64_t v93 = sub_1005E0970();
        uint64_t v94 = (uint64_t)v305;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v305, 1, 1, v93);
        uint64_t v90 = v310;
        ConnectionStatus.Error.init(kind:details:backedOffUntil:)(2, v92, v94, v310);
        sub_100007A48((uint64_t)v312, &qword_100717EF0);
        uint64_t v88 = 0;
        uint64_t v73 = v316;
        uint64_t v89 = v320;
      }
      else
      {
        sub_10050C430((uint64_t)v84, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
        uint64_t v88 = 1;
        uint64_t v89 = v320;
        uint64_t v90 = v310;
        int v79 = v318;
      }
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))v313)(v90, v88, 1, v89);
      sub_10050C430(v321, type metadata accessor for CommandConnection.RecentErrors.Error);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))v307)(v90, 1, v89) != 1) {
        break;
      }
      sub_100007A48((uint64_t)v90, &qword_100717EF8);
      if (!v78) {
        goto LABEL_36;
      }
    }
    uint64_t v95 = v303;
    sub_10050CF90((uint64_t)v90, v303, type metadata accessor for ConnectionStatus.Error);
    sub_10050CF90(v95, (uint64_t)v311, type metadata accessor for ConnectionStatus.Error);
    uint64_t v96 = v319;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v96 = (void *)sub_100532A44(0, v96[2] + 1, 1, (unint64_t)v96);
    }
    unint64_t v98 = v96[2];
    unint64_t v97 = v96[3];
    v319 = v96;
    uint64_t v99 = v306;
    if (v98 >= v97 >> 1)
    {
      int v101 = (void *)sub_100532A44(v97 > 1, v98 + 1, 1, (unint64_t)v319);
      uint64_t v99 = v306;
      v319 = v101;
    }
    uint64_t v100 = v319;
    v319[2] = v98 + 1;
    sub_10050CF90((uint64_t)v311, (uint64_t)v100+ ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80))+ *(void *)(v99 + 72) * v98, type metadata accessor for ConnectionStatus.Error);
    uint64_t v89 = v320;
    uint64_t v73 = v316;
  }
  while (v78);
LABEL_36:
  uint64_t v102 = v285;
  swift_bridgeObjectRelease();
  if (v319[2])
  {
    uint64_t v103 = v306;
    uint64_t v104 = (uint64_t)v268;
    sub_10050CDFC((uint64_t)v319 + ((*(unsigned __int8 *)(v306 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v306 + 80)), (uint64_t)v268, type metadata accessor for ConnectionStatus.Error);
    v105 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v103 + 56);
    v105(v104, 0, 1, v89);
  }
  else
  {
    v105 = *(void (**)(uint64_t, void, uint64_t, uint64_t))v313;
    uint64_t v104 = (uint64_t)v268;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v313)(v268, 1, 1, v89);
  }
  os_log_type_t v106 = v293;
  uint64_t v107 = v324;
  uint64_t v108 = v284;
  uint64_t v109 = (uint64_t)v277;
  swift_bridgeObjectRelease();
  sub_1000079E4(v104, v109, &qword_100717EF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v307)(v109, 1, v89) != 1)
  {
    sub_100007A48(v104, &qword_100717EF8);
    uint64_t v123 = v276;
    sub_10050CF90(v109, v276, type metadata accessor for ConnectionStatus.Error);
    sub_10050CF90(v123, (uint64_t)v106, type metadata accessor for ConnectionStatus.Error);
    return ((uint64_t (*)(unsigned char *, void, uint64_t, uint64_t))v105)(v106, 0, 1, v89);
  }
  uint64_t v322 = (uint64_t)v105;
  sub_100007A48(v109, &qword_100717EF8);
  swift_bridgeObjectRetain();
  unint64_t v110 = v102 + v283;
  uint64_t v111 = -v317;
  uint64_t v112 = _swiftEmptyArrayStorage;
  uint64_t v113 = (uint64_t)v301;
  do
  {
    --v108;
    uint64_t v115 = v110 + v317 * v108;
    while (1)
    {
      if (v108 >= v107)
      {
        __break(1u);
        goto LABEL_55;
      }
      sub_10050CDFC(v115, v113, type metadata accessor for CommandConnection.RecentErrors.Error);
      if (sub_10050C260()) {
        break;
      }
      sub_10050C430(v113, type metadata accessor for CommandConnection.RecentErrors.Error);
      --v108;
      v115 += v111;
      if (v108 == -1) {
        goto LABEL_55;
      }
    }
    uint64_t v116 = v113;
    uint64_t v117 = v299;
    sub_10050CF90(v116, v299, type metadata accessor for CommandConnection.RecentErrors.Error);
    uint64_t v118 = v117;
    uint64_t v119 = v300;
    sub_10050CF90(v118, v300, type metadata accessor for CommandConnection.RecentErrors.Error);
    sub_10050C490(v119, (uint64_t)&v325);
    sub_10050C430(v119, type metadata accessor for CommandConnection.RecentErrors.Error);
    uint64_t v120 = v326;
    if (v326)
    {
      long long v323 = v325;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v112 = sub_10053291C(0, v112[2] + 1, 1, v112);
      }
      unint64_t v122 = v112[2];
      unint64_t v121 = v112[3];
      if (v122 >= v121 >> 1) {
        uint64_t v112 = sub_10053291C((void *)(v121 > 1), v122 + 1, 1, v112);
      }
      v112[2] = v122 + 1;
      unint64_t v114 = &v112[3 * v122];
      *((_OWORD *)v114 + 2) = v323;
      v114[6] = v120;
      uint64_t v89 = v320;
      uint64_t v107 = v324;
    }
    uint64_t v113 = (uint64_t)v301;
  }
  while (v108);
LABEL_55:
  uint64_t v125 = v285;
  swift_bridgeObjectRelease();
  uint64_t v126 = v112[2];
  if (v126)
  {
    uint64_t v127 = v112 + 6;
    uint64_t v128 = v112[2];
    uint64_t v129 = (uint64_t)v268;
    while (2)
    {
      unint64_t v130 = *(v127 - 2);
      switch((v130 >> 59) & 0x1E | (v130 >> 2) & 1)
      {
        case 0uLL:
        case 9uLL:
        case 0xDuLL:
          unint64_t v134 = *(v127 - 1);
          uint64_t v135 = *v127;
          goto LABEL_72;
        case 0x10uLL:
          uint64_t v131 = __ROR8__(v130, 3);
          uint64_t v132 = (1 << v131) & 0x5FDFF9A7;
          if ((v131 ^ 0x1000000000000000uLL) > 0x1E || v132 == 0) {
            goto LABEL_57;
          }
          unint64_t v134 = *(v127 - 1);
          uint64_t v135 = *v127;
          if (v130 == 0x8000000000000068 || v130 == 0x80000000000000D8)
          {
            swift_bridgeObjectRetain();
            sub_10050CEA4(v130);
            swift_bridgeObjectRetain();
            sub_10050CEA4(v130);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_10050CEA4(v130);
            uint64_t v136 = v304;
            sub_10050C594(v130, v134, v135, v304);
            uint64_t v137 = (uint64_t)v266;
            sub_1000079E4(v136, (uint64_t)v266, &qword_100717EF0);
            uint64_t v138 = sub_1005E0970();
            uint64_t v139 = (uint64_t)v305;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v138 - 8) + 56))(v305, 1, 1, v138);
            v140 = v293;
            ConnectionStatus.Error.init(kind:details:backedOffUntil:)(2, v137, v139, v293);
            sub_100007A48(v136, &qword_100717EF0);
            sub_100508874(v130);
            swift_bridgeObjectRelease();
            sub_100508874(v130);
            swift_bridgeObjectRelease();
            sub_100007A48(v129, &qword_100717EF8);
            v141 = v140;
            uint64_t v142 = v89;
            return ((uint64_t (*)(unsigned char *, void, uint64_t, uint64_t))v322)(v141, 0, 1, v142);
          }
LABEL_72:
          swift_bridgeObjectRetain();
          sub_10050CEA4(v130);
          swift_bridgeObjectRetain();
          sub_10050CEA4(v130);
          unint64_t v318 = v134;
          v319 = (void *)v130;
          v312 = (void *)v130;
          v314 = (_DWORD *)v134;
          uint64_t v315 = v135;
          uint64_t v321 = v135;
          goto LABEL_73;
        default:
LABEL_57:
          v127 += 3;
          if (--v128) {
            continue;
          }
          v143 = v112 + 6;
          uint64_t v144 = v298;
          break;
      }
      break;
    }
    while (1)
    {
      unint64_t v145 = *(v143 - 2);
      if ((~v145 & 0xF000000000000007) == 0) {
        break;
      }
      v143 += 3;
      if (!--v126)
      {
        unint64_t v318 = 0;
        v319 = 0;
        uint64_t v321 = 0;
        goto LABEL_117;
      }
    }
    uint64_t v199 = *v143;
    unint64_t v318 = *(v143 - 1);
    v319 = (void *)v145;
    uint64_t v321 = v199;
    swift_bridgeObjectRetain();
LABEL_117:
    v312 = 0;
    v314 = 0;
    uint64_t v315 = 0;
  }
  else
  {
    unint64_t v318 = 0;
    v319 = 0;
    uint64_t v321 = 0;
    v312 = 0;
    v314 = 0;
    uint64_t v315 = 0;
LABEL_73:
    uint64_t v144 = v298;
  }
  swift_bridgeObjectRelease();
  v146 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v144 + 48);
  v147 = (void (**)(char *, uint64_t, uint64_t))(v144 + 32);
  swift_bridgeObjectRetain();
  unint64_t v148 = v125 + v283;
  uint64_t v149 = -v317;
  v150 = (char *)_swiftEmptyArrayStorage;
  uint64_t v151 = v284;
  uint64_t v152 = (uint64_t)v292;
  uint64_t v153 = (uint64_t)v297;
  do
  {
    --v151;
    uint64_t v154 = v148 + v317 * v151;
    while (1)
    {
      if (v151 >= v324)
      {
        __break(1u);
        goto LABEL_89;
      }
      sub_10050CDFC(v154, v153, type metadata accessor for CommandConnection.RecentErrors.Error);
      if (sub_10050C260()) {
        break;
      }
      sub_10050C430(v153, type metadata accessor for CommandConnection.RecentErrors.Error);
      --v151;
      v154 += v149;
      if (v151 == -1) {
        goto LABEL_89;
      }
    }
    uint64_t v155 = v153;
    uint64_t v156 = v294;
    sub_10050CF90(v155, v294, type metadata accessor for CommandConnection.RecentErrors.Error);
    uint64_t v157 = v156;
    uint64_t v158 = v295;
    sub_10050CF90(v157, v295, type metadata accessor for CommandConnection.RecentErrors.Error);
    sub_10050C8D8(v158, v152);
    sub_10050C430(v158, type metadata accessor for CommandConnection.RecentErrors.Error);
    uint64_t v159 = v316;
    if ((*v146)(v152, 1, v316) == 1)
    {
      sub_100007A48(v152, &qword_100717E10);
    }
    else
    {
      v160 = *v147;
      uint64_t v161 = v152;
      v162 = v289;
      (*v147)(v289, v161, v159);
      v160(v296, (uint64_t)v162, v159);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v150 = (char *)sub_1005328E8(0, *((void *)v150 + 2) + 1, 1, (unint64_t)v150);
      }
      unint64_t v164 = *((void *)v150 + 2);
      unint64_t v163 = *((void *)v150 + 3);
      if (v164 >= v163 >> 1) {
        v150 = (char *)sub_1005328E8(v163 > 1, v164 + 1, 1, (unint64_t)v150);
      }
      *((void *)v150 + 2) = v164 + 1;
      v160(&v150[((*(unsigned __int8 *)(v298 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v298 + 80))+ *(void *)(v298 + 72) * v164], (uint64_t)v296, v316);
      uint64_t v152 = (uint64_t)v292;
    }
    uint64_t v153 = (uint64_t)v297;
  }
  while (v151);
LABEL_89:
  uint64_t v165 = v285;
  swift_bridgeObjectRelease();
  if (*((void *)v150 + 2))
  {
    uint64_t v166 = v298;
    uint64_t v167 = (uint64_t)v267;
    uint64_t v168 = v316;
    (*(void (**)(char *, char *, uint64_t))(v298 + 16))(v267, &v150[(*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80)], v316);
    v169 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v166 + 56);
    uint64_t v170 = v167;
    uint64_t v171 = 0;
    uint64_t v172 = v168;
  }
  else
  {
    v169 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v298 + 56);
    uint64_t v170 = (uint64_t)v267;
    uint64_t v171 = 1;
    uint64_t v172 = v316;
  }
  v311 = v169;
  v169(v170, v171, 1, v172);
  uint64_t v173 = (uint64_t)v291;
  uint64_t v174 = v284;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  *(void *)&long long v323 = v165 + v283;
  uint64_t v175 = -v317;
  v176 = (char *)_swiftEmptyArrayStorage;
  uint64_t v177 = (uint64_t)v282;
  do
  {
    --v174;
    uint64_t v179 = v323 + v317 * v174;
    while (1)
    {
      if (v174 >= v324)
      {
        __break(1u);
LABEL_107:
        uint64_t v178 = (uint64_t)v290;
        goto LABEL_108;
      }
      sub_10050CDFC(v179, v173, type metadata accessor for CommandConnection.RecentErrors.Error);
      if (sub_10050C260()) {
        break;
      }
      sub_10050C430(v173, type metadata accessor for CommandConnection.RecentErrors.Error);
      --v174;
      v179 += v175;
      if (v174 == -1) {
        goto LABEL_107;
      }
    }
    uint64_t v180 = v173;
    uint64_t v181 = v286;
    sub_10050CF90(v180, v286, type metadata accessor for CommandConnection.RecentErrors.Error);
    uint64_t v182 = v287;
    sub_10050CF90(v181, v287, type metadata accessor for CommandConnection.RecentErrors.Error);
    sub_10050CA90(v182, v177);
    sub_10050C430(v182, type metadata accessor for CommandConnection.RecentErrors.Error);
    uint64_t v183 = v316;
    if ((*v146)(v177, 1, v316) == 1)
    {
      sub_100007A48(v177, &qword_100717E10);
      uint64_t v178 = (uint64_t)v290;
    }
    else
    {
      v184 = *v147;
      uint64_t v185 = v177;
      v186 = v281;
      (*v147)(v281, v185, v183);
      v184(v288, (uint64_t)v186, v183);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v176 = (char *)sub_1005328E8(0, *((void *)v176 + 2) + 1, 1, (unint64_t)v176);
      }
      unint64_t v188 = *((void *)v176 + 2);
      unint64_t v187 = *((void *)v176 + 3);
      if (v188 >= v187 >> 1) {
        v176 = (char *)sub_1005328E8(v187 > 1, v188 + 1, 1, (unint64_t)v176);
      }
      *((void *)v176 + 2) = v188 + 1;
      v184(&v176[((*(unsigned __int8 *)(v298 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v298 + 80))+ *(void *)(v298 + 72) * v188], (uint64_t)v288, v316);
      uint64_t v178 = (uint64_t)v290;
      uint64_t v177 = (uint64_t)v282;
    }
    uint64_t v173 = (uint64_t)v291;
  }
  while (v174);
LABEL_108:
  swift_bridgeObjectRelease();
  if (*((void *)v176 + 2))
  {
    uint64_t v189 = v275;
    uint64_t v190 = v316;
    (*(void (**)(uint64_t, char *, uint64_t))(v298 + 16))(v275, &v176[(*(unsigned __int8 *)(v298 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v298 + 80)], v316);
    uint64_t v191 = 0;
    v192 = v293;
  }
  else
  {
    uint64_t v191 = 1;
    v192 = v293;
    uint64_t v189 = v275;
    uint64_t v190 = v316;
  }
  uint64_t v193 = (uint64_t)v280;
  v311(v189, v191, 1, v190);
  swift_bridgeObjectRelease();
  uint64_t v194 = v321;
  if (!v321)
  {
    sub_1000079E4((uint64_t)v267, v178, &qword_100717E10);
    v196 = *v146;
    if ((*v146)(v178, 1, v190) == 1)
    {
      sub_100007A48(v178, &qword_100717E10);
      uint64_t v197 = v273;
      sub_1000079E4(v189, v273, &qword_100717E10);
      if (v196(v197, 1, v190) == 1)
      {
        sub_100007A48(v197, &qword_100717E10);
        uint64_t v198 = type metadata accessor for ConnectionStatus.Error.Details(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v198 - 8) + 56))(v265, 1, 1, v198);
        goto LABEL_123;
      }
      uint64_t v201 = v197;
      v200 = *v147;
      v202 = &v304;
    }
    else
    {
      v200 = *v147;
      uint64_t v201 = v178;
      v202 = &v306;
    }
    v203 = (char *)*(v202 - 32);
    v200(v203, v201, v190);
    uint64_t v204 = (uint64_t)v265;
    v200(v265, (uint64_t)v203, v190);
    uint64_t v205 = type metadata accessor for ConnectionStatus.Error.Details(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v205 - 8) + 56))(v204, 0, 1, v205);
    goto LABEL_123;
  }
  v195 = v319;
  sub_10050CEA4((unint64_t)v319);
  swift_bridgeObjectRetain();
  sub_10050C594((unint64_t)v195, v318, v194, (uint64_t)v265);
LABEL_123:
  uint64_t v206 = swift_bridgeObjectRetain() + v262;
  uint64_t v207 = -v317;
  uint64_t v208 = v263;
  while (1)
  {
    if (v208 >= v324)
    {
      __break(1u);
LABEL_135:
      uint64_t v221 = v285;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v222 = v221 + v262;
      uint64_t v223 = -v317;
      uint64_t v224 = v263;
      while (v224 < v324)
      {
        uint64_t v225 = v264;
        sub_10050CDFC(v222, v264, type metadata accessor for CommandConnection.RecentErrors.Error);
        if (sub_10050C260())
        {
          uint64_t v226 = v225;
          uint64_t v227 = v260;
          sub_10050CF90(v226, v260, type metadata accessor for CommandConnection.RecentErrors.Error);
          uint64_t v228 = v227;
          uint64_t v229 = v261;
          sub_10050CF90(v228, v261, type metadata accessor for CommandConnection.RecentErrors.Error);
          BOOL v230 = sub_10050CD18(v229);
          sub_10050C430(v229, type metadata accessor for CommandConnection.RecentErrors.Error);
          if (v230)
          {
            swift_bridgeObjectRelease();
            uint64_t v214 = (uint64_t)v265;
            uint64_t v215 = v304;
            sub_1000079E4((uint64_t)v265, v304, &qword_100717EF0);
            uint64_t v216 = (uint64_t)v266;
            sub_1000079E4(v215, (uint64_t)v266, &qword_100717EF0);
            uint64_t v231 = sub_1005E0970();
            uint64_t v218 = (uint64_t)v305;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v231 - 8) + 56))(v305, 1, 1, v231);
            v219 = v192;
            char v220 = 3;
            goto LABEL_131;
          }
        }
        else
        {
          sub_10050C430(v225, type metadata accessor for CommandConnection.RecentErrors.Error);
        }
        --v224;
        v222 += v223;
        if (v224 == -1) {
          goto LABEL_143;
        }
      }
      __break(1u);
LABEL_143:
      swift_bridgeObjectRelease();
      sub_1000079E4((uint64_t)v267, v271, &qword_100717E10);
      if (v321)
      {
        sub_100007A48(v271, &qword_100717E10);
        unint64_t v233 = v318;
        v232 = v319;
        uint64_t v234 = v321;
        sub_10050CE64((unint64_t)v319, v318, v321);
        sub_10050CEA4((unint64_t)v232);
        swift_bridgeObjectRetain();
        uint64_t v235 = v304;
        sub_10050C594((unint64_t)v232, v233, v234, v304);
        uint64_t v236 = (uint64_t)v266;
        sub_1000079E4(v235, (uint64_t)v266, &qword_100717EF0);
        uint64_t v237 = sub_1005E0970();
        uint64_t v238 = (uint64_t)v305;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v237 - 8) + 56))(v305, 1, 1, v237);
        v239 = v293;
        ConnectionStatus.Error.init(kind:details:backedOffUntil:)(1, v236, v238, v293);
        sub_100007A48(v235, &qword_100717EF0);
        sub_100508874((unint64_t)v232);
        swift_bridgeObjectRelease();
        sub_100508834((unint64_t)v232, v233, v234);
        sub_100508834((unint64_t)v312, (uint64_t)v314, v315);
        sub_100007A48((uint64_t)v265, &qword_100717EF0);
        sub_100007A48(v275, &qword_100717E10);
        sub_100007A48((uint64_t)v267, &qword_100717E10);
        sub_100007A48((uint64_t)v268, &qword_100717EF8);
        v141 = v239;
        goto LABEL_132;
      }
      v240 = *v146;
      uint64_t v241 = v271;
      unsigned int v242 = (*v146)(v271, 1, v316);
      sub_100007A48(v241, &qword_100717E10);
      if (v242 == 1)
      {
        uint64_t v243 = v270;
        sub_1000079E4(v275, v270, &qword_100717E10);
        if (v240(v243, 1, v316) != 1)
        {
          uint64_t v251 = v298;
          v252 = v269;
          uint64_t v253 = v316;
          (*(void (**)(char *, uint64_t, uint64_t))(v298 + 32))(v269, v270, v316);
          uint64_t v254 = v304;
          (*(void (**)(uint64_t, char *, uint64_t))(v251 + 16))(v304, v252, v253);
          uint64_t v255 = type metadata accessor for ConnectionStatus.Error.Details(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v255 - 8) + 56))(v254, 0, 1, v255);
          uint64_t v256 = (uint64_t)v266;
          sub_1000079E4(v254, (uint64_t)v266, &qword_100717EF0);
          uint64_t v257 = sub_1005E0970();
          uint64_t v258 = (uint64_t)v305;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v257 - 8) + 56))(v305, 1, 1, v257);
          v249 = v293;
          ConnectionStatus.Error.init(kind:details:backedOffUntil:)(0, v256, v258, v293);
          sub_100007A48(v254, &qword_100717EF0);
          sub_100508834((unint64_t)v312, (uint64_t)v314, v315);
          (*(void (**)(char *, uint64_t))(v251 + 8))(v252, v253);
          uint64_t v250 = (uint64_t)v265;
          goto LABEL_150;
        }
        sub_100007A48(v270, &qword_100717E10);
      }
      uint64_t v244 = (uint64_t)v265;
      uint64_t v245 = v304;
      sub_1000079E4((uint64_t)v265, v304, &qword_100717EF0);
      uint64_t v246 = (uint64_t)v266;
      sub_1000079E4(v245, (uint64_t)v266, &qword_100717EF0);
      uint64_t v247 = sub_1005E0970();
      uint64_t v248 = (uint64_t)v305;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v247 - 8) + 56))(v305, 1, 1, v247);
      v249 = v293;
      ConnectionStatus.Error.init(kind:details:backedOffUntil:)(4, v246, v248, v293);
      sub_100007A48(v245, &qword_100717EF0);
      sub_100508834((unint64_t)v312, (uint64_t)v314, v315);
      uint64_t v250 = v244;
LABEL_150:
      sub_100007A48(v250, &qword_100717EF0);
      sub_100007A48(v275, &qword_100717E10);
      sub_100007A48((uint64_t)v267, &qword_100717E10);
      sub_100007A48((uint64_t)v268, &qword_100717EF8);
      v141 = v249;
      goto LABEL_132;
    }
    sub_10050CDFC(v206, v193, type metadata accessor for CommandConnection.RecentErrors.Error);
    if (sub_10050C260()) {
      break;
    }
    sub_10050C430(v193, type metadata accessor for CommandConnection.RecentErrors.Error);
LABEL_125:
    --v208;
    v206 += v207;
    if (v208 == -1) {
      goto LABEL_135;
    }
  }
  uint64_t v209 = v193;
  uint64_t v210 = v278;
  sub_10050CF90(v209, v278, type metadata accessor for CommandConnection.RecentErrors.Error);
  uint64_t v211 = v210;
  uint64_t v212 = v279;
  sub_10050CF90(v211, v279, type metadata accessor for CommandConnection.RecentErrors.Error);
  char v213 = sub_10050CC48(v212);
  sub_10050C430(v212, type metadata accessor for CommandConnection.RecentErrors.Error);
  if ((v213 & 1) == 0)
  {
    uint64_t v193 = (uint64_t)v280;
    goto LABEL_125;
  }
  swift_bridgeObjectRelease();
  uint64_t v214 = (uint64_t)v265;
  uint64_t v215 = v304;
  sub_1000079E4((uint64_t)v265, v304, &qword_100717EF0);
  uint64_t v216 = (uint64_t)v266;
  sub_1000079E4(v215, (uint64_t)v266, &qword_100717EF0);
  uint64_t v217 = sub_1005E0970();
  uint64_t v218 = (uint64_t)v305;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v217 - 8) + 56))(v305, 1, 1, v217);
  v219 = v192;
  char v220 = 5;
LABEL_131:
  ConnectionStatus.Error.init(kind:details:backedOffUntil:)(v220, v216, v218, v219);
  sub_100007A48(v215, &qword_100717EF0);
  sub_100508834((unint64_t)v319, v318, v321);
  sub_100508834((unint64_t)v312, (uint64_t)v314, v315);
  sub_100007A48(v214, &qword_100717EF0);
  sub_100007A48(v189, &qword_100717E10);
  sub_100007A48((uint64_t)v267, &qword_100717E10);
  sub_100007A48((uint64_t)v268, &qword_100717EF8);
  v141 = v192;
LABEL_132:
  uint64_t v142 = v320;
  return ((uint64_t (*)(unsigned char *, void, uint64_t, uint64_t))v322)(v141, 0, 1, v142);
}

unint64_t sub_10050C260()
{
  type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  __chkstk_darwin();
  uint64_t v2 = (_DWORD *)((char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v4 = (char *)&v10 - v3;
  uint64_t v5 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  sub_10050CDFC(v0 + *(int *)(v5 + 20), (uint64_t)v4, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  if (swift_getEnumCaseMultiPayload() != 4) {
    goto LABEL_7;
  }
  sub_10050CDFC((uint64_t)v4, (uint64_t)v2, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  uint64_t v6 = sub_1005E1650();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t))(v7 + 88))(v2, v6) != enum case for NWError.posix(_:))
  {
    (*(void (**)(_DWORD *, uint64_t))(v7 + 8))(v2, v6);
LABEL_7:
    unint64_t v8 = 1;
    goto LABEL_8;
  }
  (*(void (**)(_DWORD *, uint64_t))(v7 + 96))(v2, v6);
  if (*v2 >= 0x3Du) {
    unint64_t v8 = 1;
  }
  else {
    unint64_t v8 = (0xF8FFFFFFFFFFFFFuLL >> *v2) & 1;
  }
LABEL_8:
  sub_10050C430((uint64_t)v4, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  return v8;
}

uint64_t sub_10050C430(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10050C490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  sub_10050CDFC(a1 + *(int *)(v6 + 20), (uint64_t)v5, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    long long v8 = *(_OWORD *)v5;
    uint64_t v9 = *((void *)v5 + 2);
  }
  else
  {
    uint64_t result = sub_10050C430((uint64_t)v5, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    uint64_t v9 = 0;
    long long v8 = 0uLL;
  }
  *(_OWORD *)a2 = v8;
  *(void *)(a2 + 16) = v9;
  return result;
}

uint64_t sub_10050C594@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v27 = a4;
  uint64_t v7 = sub_1005E04E0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (uint64_t *)((char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v28 = a2;
  uint64_t v29 = a3;
  swift_bridgeObjectRetain();
  sub_1005E04C0();
  sub_10050CF3C();
  uint64_t v15 = sub_1005E29A0();
  unint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_bridgeObjectRelease();
  uint64_t v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0) {
    uint64_t v18 = v15 & 0xFFFFFFFFFFFFLL;
  }
  if (!v18)
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = 0;
    unint64_t v17 = 0;
  }
  if ((~a1 & 0xF000000000000007) != 0)
  {
    switch((a1 >> 59) & 0x1E | (a1 >> 2) & 1)
    {
      case 0uLL:
      case 9uLL:
      case 0xDuLL:
        goto LABEL_11;
      case 0x10uLL:
        unint64_t v19 = __ROR8__(a1, 3) ^ 0x1000000000000000;
        if (v19 > 0x1E || ((1 << v19) & 0x5FDFF9A7) == 0) {
          goto LABEL_14;
        }
LABEL_11:
        unint64_t v28 = a1;
        sub_10050CEB8(a1);
        uint64_t v20 = sub_1005E1CC0();
        uint64_t v22 = v21;
        swift_bridgeObjectRelease();
        sub_100508874(a1);
        *uint64_t v14 = v20;
        v14[1] = v22;
        if (v17)
        {
          v14[2] = v15;
          v14[3] = v17;
        }
        goto LABEL_13;
      default:
LABEL_14:
        swift_bridgeObjectRelease();
        sub_100508874(a1);
        if (!v17) {
          goto LABEL_15;
        }
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  if (v17)
  {
LABEL_7:
    *uint64_t v14 = v15;
    v14[1] = v17;
LABEL_13:
    uint64_t v23 = v27;
    swift_storeEnumTagMultiPayload();
    sub_10050CF90((uint64_t)v14, v23, type metadata accessor for ConnectionStatus.Error.Details);
    uint64_t v24 = 0;
  }
  else
  {
LABEL_15:
    uint64_t v24 = 1;
    uint64_t v23 = v27;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v23, v24, 1, v11);
}

uint64_t sub_10050C8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  sub_10050CDFC(a1 + *(int *)(v6 + 20), (uint64_t)v5, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v7 = sub_1005E1650();
    uint64_t v8 = *(void *)(v7 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v5, v7);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
  }
  else
  {
    sub_10050C430((uint64_t)v5, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    uint64_t v10 = sub_1005E1650();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a2, 1, 1, v10);
  }
}

uint64_t sub_10050CA90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  sub_10050CDFC(a1 + *(int *)(v6 + 20), (uint64_t)v5, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    uint64_t v7 = sub_1005E1650();
    uint64_t v8 = *(void *)(v7 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v5, v7);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
  }
  else
  {
    sub_10050C430((uint64_t)v5, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    uint64_t v10 = sub_1005E1650();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a2, 1, 1, v10);
  }
}

uint64_t sub_10050CC48(uint64_t a1)
{
  type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for CommandConnection.RecentErrors.Error(0) + 20);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v4) = static CommandConnection.RecentErrors.Error.Kind.__derived_enum_equals(_:_:)(v4, (uint64_t)v3);
  sub_10050C430((uint64_t)v3, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  return v4 & 1;
}

BOOL sub_10050CD18(uint64_t a1)
{
  type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  sub_10050CDFC(a1 + *(int *)(v4 + 20), (uint64_t)v3, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload) {
    sub_10050C430((uint64_t)v3, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  }
  return EnumCaseMultiPayload == 0;
}

uint64_t sub_10050CDFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_10050CE64(unint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_10050CEA4(result);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_10050CEA4(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_10050CEB8(result);
  }
  return result;
}

unint64_t sub_10050CEB8(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10050CF3C()
{
  unint64_t result = qword_100717F00;
  if (!qword_100717F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717F00);
  }
  return result;
}

uint64_t sub_10050CF90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t destroy for CredentialsRequest()
{
  return swift_release();
}

uint64_t _s22IMAP2ConnectionControl18CredentialsRequestVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CredentialsRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for CredentialsRequest(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CredentialsRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for CredentialsRequest()
{
  return &type metadata for CredentialsRequest;
}

uint64_t getEnumTagSinglePayload for CredentialsState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[16]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CredentialsState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CredentialsState()
{
  return &type metadata for CredentialsState;
}

BOOL sub_10050D174(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
}

uint64_t sub_10050D1A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(type metadata accessor for CommandConnection.RecentErrors.Error(0) - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (void *)((char *)v17 - v7);
  uint64_t v9 = _swiftEmptyArrayStorage;
  uint64_t v18 = _swiftEmptyArrayStorage;
  uint64_t v10 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v10)
  {
    unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v12 = *(void *)(v4 + 72);
    v17[1] = a1;
    uint64_t v13 = a1 + v11;
    do
    {
      sub_10050EC34(v13, (uint64_t)v8, type metadata accessor for CommandConnection.RecentErrors.Error);
      if (*(void *)(v2 + 8) >= *v8)
      {
        sub_10050EC9C((uint64_t)v8, type metadata accessor for CommandConnection.RecentErrors.Error);
      }
      else
      {
        sub_10050D73C((uint64_t)v8, (uint64_t)v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_10051947C(0, v9[2] + 1, 1);
        }
        uint64_t v9 = v18;
        unint64_t v15 = v18[2];
        unint64_t v14 = v18[3];
        if (v15 >= v14 >> 1)
        {
          sub_10051947C(v14 > 1, v15 + 1, 1);
          uint64_t v9 = v18;
        }
        v9[2] = v15 + 1;
        sub_10050D73C((uint64_t)v6, (uint64_t)v9 + v11 + v15 * v12);
      }
      v13 += v12;
      --v10;
    }
    while (v10);
    uint64_t v9 = v18;
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = v9;
  swift_retain();
  sub_10050D7A0(&v18);
  swift_release();
  sub_10050D3E0((uint64_t)v18);
  return swift_release();
}

uint64_t sub_10050D3E0(uint64_t a1)
{
  type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  __chkstk_darwin();
  uint64_t v4 = (unsigned __int8 *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  uint64_t result = __chkstk_darwin();
  uint64_t v9 = (uint64_t *)((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v12 = *(void *)(v7 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_10050EC34(v11, (uint64_t)v9, type metadata accessor for CommandConnection.RecentErrors.Error);
      uint64_t v13 = *v9;
      if (*((void *)v1 + 1) < *v9)
      {
        sub_10050EC34((uint64_t)v9 + *(int *)(v5 + 20), (uint64_t)v4, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
        if (swift_getEnumCaseMultiPayload())
        {
          sub_10050EC9C((uint64_t)v4, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
        }
        else
        {
          uint64_t v14 = *v4;
          *((void *)v1 + 1) = v13;
          if (v14 == 1)
          {
            *uint64_t v1 = 2;
          }
          else if (*v1 < 2u)
          {
            *uint64_t v1 = 1;
          }
        }
      }
      sub_10050EC9C((uint64_t)v9, type metadata accessor for CommandConnection.RecentErrors.Error);
      v11 += v12;
      --v10;
    }
    while (v10);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10050D61C()
{
  uint64_t v1 = 0x6166202E706D6574;
  if (*v0 != 1) {
    uint64_t v1 = 0x64696C61766E69;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1685024615;
  }
}

uint64_t sub_10050D67C()
{
  int v1 = *v0;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  sub_1005E1E30(v7);
  unint64_t v2 = 0xED00006572756C69;
  uint64_t v3 = 0x6166202E706D6574;
  if (v1 != 1)
  {
    uint64_t v3 = 0x64696C61766E69;
    unint64_t v2 = 0xE700000000000000;
  }
  if (v1) {
    v4._countAndFlagsBits = v3;
  }
  else {
    v4._countAndFlagsBits = 1685024615;
  }
  if (v1) {
    uint64_t v5 = (void *)v2;
  }
  else {
    uint64_t v5 = (void *)0xE400000000000000;
  }
  v4._object = v5;
  sub_1005E1E30(v4);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  sub_1005E1E30(v8);
  return 0;
}

uint64_t sub_10050D73C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Swift::Int sub_10050D7A0(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for CommandConnection.RecentErrors.Error(0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_10050ECFC(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_10050D848(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_10050D848(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v130 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  uint64_t v4 = *(void *)(v130 - 8);
  __chkstk_darwin();
  uint64_t v125 = (uint64_t)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v136 = (uint64_t)&v120 - v6;
  __chkstk_darwin();
  unint64_t v134 = (uint64_t *)((char *)&v120 - v7);
  __chkstk_darwin();
  v133 = (uint64_t *)((char *)&v120 - v8);
  Swift::Int v9 = a1[1];
  Swift::Int result = sub_1005E3210(v9);
  if (result >= v9)
  {
    if (v9 < 0) {
      goto LABEL_140;
    }
    if (v9) {
      return sub_10050E288(0, v9, 1, a1);
    }
    return result;
  }
  if (v9 >= 0) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v9 + 1;
  }
  if (v9 < -1) {
    goto LABEL_148;
  }
  Swift::Int v122 = result;
  uint64_t v129 = v4;
  if (v9 < 2)
  {
    uint64_t v15 = _swiftEmptyArrayStorage;
    unint64_t v127 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    if (v9 != 1)
    {
      unint64_t v18 = _swiftEmptyArrayStorage[2];
      unint64_t v17 = (char *)_swiftEmptyArrayStorage;
LABEL_105:
      unint64_t v121 = v15;
      if (v18 >= 2)
      {
        uint64_t v114 = *a1;
        do
        {
          unint64_t v115 = v18 - 2;
          if (v18 < 2) {
            goto LABEL_135;
          }
          if (!v114) {
            goto LABEL_147;
          }
          uint64_t v116 = *(void *)&v17[16 * v115 + 32];
          uint64_t v117 = *(void *)&v17[16 * v18 + 24];
          sub_10050E508(v114 + *(void *)(v129 + 72) * v116, v114 + *(void *)(v129 + 72) * *(void *)&v17[16 * v18 + 16], v114 + *(void *)(v129 + 72) * v117, v127);
          if (v2) {
            break;
          }
          if (v117 < v116) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v17 = sub_10050EC20((uint64_t)v17);
          }
          if (v115 >= *((void *)v17 + 2)) {
            goto LABEL_137;
          }
          uint64_t v118 = &v17[16 * v115 + 32];
          *(void *)uint64_t v118 = v116;
          *((void *)v118 + 1) = v117;
          unint64_t v119 = *((void *)v17 + 2);
          if (v18 > v119) {
            goto LABEL_138;
          }
          memmove(&v17[16 * v18 + 16], &v17[16 * v18 + 32], 16 * (v119 - v18));
          *((void *)v17 + 2) = v119 - 1;
          unint64_t v18 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      v121[2] = 0;
      return swift_bridgeObjectRelease();
    }
    unint64_t v121 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v12 = v11 >> 1;
    uint64_t v13 = sub_1005E2150();
    *(void *)(v13 + 16) = v12;
    uint64_t v14 = *(unsigned __int8 *)(v4 + 80);
    unint64_t v121 = (void *)v13;
    unint64_t v127 = v13 + ((v14 + 32) & ~v14);
  }
  Swift::Int v16 = 0;
  unint64_t v17 = (char *)_swiftEmptyArrayStorage;
  uint64_t v128 = a1;
  while (1)
  {
    Swift::Int v19 = v16;
    Swift::Int v20 = v16 + 1;
    if (v16 + 1 >= v9)
    {
      Swift::Int v28 = v16 + 1;
    }
    else
    {
      Swift::Int v21 = *a1;
      Swift::Int v22 = *(void *)(v129 + 72);
      uint64_t v23 = *a1 + v22 * v20;
      Swift::Int v126 = v16;
      uint64_t v24 = v133;
      sub_10050EC34(v23, (uint64_t)v133, type metadata accessor for CommandConnection.RecentErrors.Error);
      Swift::Int v137 = v9;
      uint64_t v25 = v134;
      sub_10050EC34(v21 + v22 * v126, (uint64_t)v134, type metadata accessor for CommandConnection.RecentErrors.Error);
      Swift::Int v135 = *v24;
      Swift::Int v132 = *v25;
      uint64_t v26 = (uint64_t)v25;
      Swift::Int v9 = v137;
      sub_10050EC9C(v26, type metadata accessor for CommandConnection.RecentErrors.Error);
      uint64_t v27 = (uint64_t)v24;
      Swift::Int v19 = v126;
      sub_10050EC9C(v27, type metadata accessor for CommandConnection.RecentErrors.Error);
      Swift::Int v28 = v19 + 2;
      Swift::Int v124 = v21;
      Swift::Int v138 = v22;
      if (v19 + 2 < v9)
      {
        uint64_t v123 = v17;
        uint64_t v131 = v22 * v20;
        Swift::Int v29 = v21;
        Swift::Int v30 = v22 * v28;
        while (1)
        {
          Swift::Int v31 = v28;
          uint64_t v32 = v133;
          int v33 = v135 < v132;
          sub_10050EC34(v29 + v30, (uint64_t)v133, type metadata accessor for CommandConnection.RecentErrors.Error);
          uint64_t v34 = v134;
          sub_10050EC34(v29 + v131, (uint64_t)v134, type metadata accessor for CommandConnection.RecentErrors.Error);
          int v35 = *v32 >= *v34;
          sub_10050EC9C((uint64_t)v34, type metadata accessor for CommandConnection.RecentErrors.Error);
          sub_10050EC9C((uint64_t)v32, type metadata accessor for CommandConnection.RecentErrors.Error);
          if (v33 == v35) {
            break;
          }
          ++v28;
          v29 += v138;
          Swift::Int v9 = v137;
          if (v137 == v31 + 1)
          {
            Swift::Int v28 = v137;
            a1 = v128;
            unint64_t v17 = v123;
            Swift::Int v19 = v126;
            goto LABEL_24;
          }
        }
        a1 = v128;
        unint64_t v17 = v123;
        Swift::Int v19 = v126;
        Swift::Int v9 = v137;
      }
LABEL_24:
      if (v135 < v132)
      {
        if (v28 < v19) {
          goto LABEL_141;
        }
        if (v19 < v28)
        {
          uint64_t v123 = v17;
          uint64_t v120 = v2;
          uint64_t v36 = 0;
          Swift::Int v37 = v138;
          uint64_t v38 = v138 * (v28 - 1);
          Swift::Int v39 = v28 * v138;
          Swift::Int v40 = v19;
          uint64_t v41 = v19 * v138;
          do
          {
            if (v40 != v28 + v36 - 1)
            {
              Swift::Int v42 = v124;
              if (!v124) {
                goto LABEL_146;
              }
              Swift::Int v43 = v28;
              unint64_t v44 = v124 + v41;
              uint64_t v45 = v124 + v38;
              sub_10050D73C(v124 + v41, v125);
              if (v41 < v38 || v44 >= v42 + v39)
              {
                swift_arrayInitWithTakeFrontToBack();
                Swift::Int v37 = v138;
              }
              else
              {
                Swift::Int v37 = v138;
                if (v41 != v38) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_10050D73C(v125, v45);
              Swift::Int v28 = v43;
            }
            ++v40;
            --v36;
            v38 -= v37;
            v39 -= v37;
            v41 += v37;
          }
          while (v40 < v28 + v36);
          uint64_t v2 = v120;
          a1 = v128;
          unint64_t v17 = v123;
          Swift::Int v19 = v126;
          Swift::Int v9 = v137;
        }
      }
    }
    if (v28 >= v9) {
      goto LABEL_56;
    }
    if (__OFSUB__(v28, v19)) {
      goto LABEL_139;
    }
    if (v28 - v19 >= v122) {
      goto LABEL_56;
    }
    if (__OFADD__(v19, v122)) {
      goto LABEL_142;
    }
    Swift::Int v46 = v19 + v122 >= v9 ? v9 : v19 + v122;
    if (v46 < v19) {
      break;
    }
    if (v28 != v46)
    {
      Swift::Int v126 = v19;
      uint64_t v123 = v17;
      Swift::Int v124 = v46;
      uint64_t v120 = v2;
      uint64_t v47 = *(void *)(v129 + 72);
      uint64_t v48 = v47 * (v28 - 1);
      uint64_t v131 = v47;
      Swift::Int v49 = v28 * v47;
      do
      {
        uint64_t v51 = 0;
        Swift::Int v52 = v126;
        Swift::Int v135 = v28;
        Swift::Int v132 = v49;
        while (1)
        {
          Swift::Int v137 = v52;
          uint64_t v53 = *a1;
          uint64_t v54 = v49 + v51 + *a1;
          uint64_t v55 = v133;
          sub_10050EC34(v54, (uint64_t)v133, type metadata accessor for CommandConnection.RecentErrors.Error);
          uint64_t v56 = v48;
          uint64_t v57 = v48 + v51 + v53;
          uint64_t v58 = v134;
          sub_10050EC34(v57, (uint64_t)v134, type metadata accessor for CommandConnection.RecentErrors.Error);
          Swift::Int v138 = *v55;
          Swift::Int v59 = *v58;
          sub_10050EC9C((uint64_t)v58, type metadata accessor for CommandConnection.RecentErrors.Error);
          sub_10050EC9C((uint64_t)v55, type metadata accessor for CommandConnection.RecentErrors.Error);
          if (v138 >= v59) {
            break;
          }
          uint64_t v60 = *a1;
          if (!*a1) {
            goto LABEL_144;
          }
          Swift::Int v49 = v132;
          uint64_t v48 = v56;
          uint64_t v61 = v60 + v56 + v51;
          sub_10050D73C(v60 + v132 + v51, v136);
          swift_arrayInitWithTakeFrontToBack();
          sub_10050D73C(v136, v61);
          v51 -= v131;
          Swift::Int v52 = v137 + 1;
          Swift::Int v50 = v135;
          if (v135 == v137 + 1) {
            goto LABEL_49;
          }
        }
        Swift::Int v50 = v135;
        uint64_t v48 = v56;
        Swift::Int v49 = v132;
LABEL_49:
        Swift::Int v28 = v50 + 1;
        v48 += v131;
        v49 += v131;
      }
      while (v28 != v124);
      Swift::Int v28 = v124;
      uint64_t v2 = v120;
      unint64_t v17 = v123;
      Swift::Int v19 = v126;
    }
LABEL_56:
    if (v28 < v19) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v135 = v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v17 = sub_10050E9E4(0, *((void *)v17 + 2) + 1, 1, v17);
    }
    unint64_t v64 = *((void *)v17 + 2);
    unint64_t v63 = *((void *)v17 + 3);
    unint64_t v18 = v64 + 1;
    if (v64 >= v63 >> 1) {
      unint64_t v17 = sub_10050E9E4((char *)(v63 > 1), v64 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v18;
    long long v65 = v17 + 32;
    int v66 = &v17[16 * v64 + 32];
    Swift::Int v67 = v135;
    *(void *)int v66 = v19;
    *((void *)v66 + 1) = v67;
    if (v64)
    {
      while (1)
      {
        unint64_t v68 = v18 - 1;
        if (v18 >= 4)
        {
          uint64_t v73 = &v65[16 * v18];
          uint64_t v74 = *((void *)v73 - 8);
          uint64_t v75 = *((void *)v73 - 7);
          BOOL v79 = __OFSUB__(v75, v74);
          uint64_t v76 = v75 - v74;
          if (v79) {
            goto LABEL_123;
          }
          uint64_t v78 = *((void *)v73 - 6);
          uint64_t v77 = *((void *)v73 - 5);
          BOOL v79 = __OFSUB__(v77, v78);
          uint64_t v71 = v77 - v78;
          char v72 = v79;
          if (v79) {
            goto LABEL_124;
          }
          unint64_t v80 = v18 - 2;
          uint64_t v81 = &v65[16 * v18 - 32];
          uint64_t v83 = *(void *)v81;
          uint64_t v82 = *((void *)v81 + 1);
          BOOL v79 = __OFSUB__(v82, v83);
          uint64_t v84 = v82 - v83;
          if (v79) {
            goto LABEL_126;
          }
          BOOL v79 = __OFADD__(v71, v84);
          uint64_t v85 = v71 + v84;
          if (v79) {
            goto LABEL_129;
          }
          if (v85 >= v76)
          {
            uint64_t v103 = &v65[16 * v68];
            uint64_t v105 = *(void *)v103;
            uint64_t v104 = *((void *)v103 + 1);
            BOOL v79 = __OFSUB__(v104, v105);
            uint64_t v106 = v104 - v105;
            if (v79) {
              goto LABEL_133;
            }
            BOOL v96 = v71 < v106;
            goto LABEL_93;
          }
        }
        else
        {
          if (v18 != 3)
          {
            uint64_t v97 = *((void *)v17 + 4);
            uint64_t v98 = *((void *)v17 + 5);
            BOOL v79 = __OFSUB__(v98, v97);
            uint64_t v90 = v98 - v97;
            char v91 = v79;
            goto LABEL_87;
          }
          uint64_t v70 = *((void *)v17 + 4);
          uint64_t v69 = *((void *)v17 + 5);
          BOOL v79 = __OFSUB__(v69, v70);
          uint64_t v71 = v69 - v70;
          char v72 = v79;
        }
        if (v72) {
          goto LABEL_125;
        }
        unint64_t v80 = v18 - 2;
        uint64_t v86 = &v65[16 * v18 - 32];
        uint64_t v88 = *(void *)v86;
        uint64_t v87 = *((void *)v86 + 1);
        BOOL v89 = __OFSUB__(v87, v88);
        uint64_t v90 = v87 - v88;
        char v91 = v89;
        if (v89) {
          goto LABEL_128;
        }
        uint64_t v92 = &v65[16 * v68];
        uint64_t v94 = *(void *)v92;
        uint64_t v93 = *((void *)v92 + 1);
        BOOL v79 = __OFSUB__(v93, v94);
        uint64_t v95 = v93 - v94;
        if (v79) {
          goto LABEL_131;
        }
        if (__OFADD__(v90, v95)) {
          goto LABEL_132;
        }
        if (v90 + v95 >= v71)
        {
          BOOL v96 = v71 < v95;
LABEL_93:
          if (v96) {
            unint64_t v68 = v80;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v91) {
          goto LABEL_127;
        }
        uint64_t v99 = &v65[16 * v68];
        uint64_t v101 = *(void *)v99;
        uint64_t v100 = *((void *)v99 + 1);
        BOOL v79 = __OFSUB__(v100, v101);
        uint64_t v102 = v100 - v101;
        if (v79) {
          goto LABEL_130;
        }
        if (v102 < v90) {
          goto LABEL_15;
        }
LABEL_95:
        unint64_t v107 = v68 - 1;
        if (v68 - 1 >= v18)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!*v128) {
          goto LABEL_145;
        }
        uint64_t v108 = v17;
        uint64_t v109 = &v65[16 * v107];
        uint64_t v110 = *(void *)v109;
        uint64_t v111 = &v65[16 * v68];
        uint64_t v112 = *((void *)v111 + 1);
        sub_10050E508(*v128 + *(void *)(v129 + 72) * *(void *)v109, *v128 + *(void *)(v129 + 72) * *(void *)v111, *v128 + *(void *)(v129 + 72) * v112, v127);
        if (v2) {
          goto LABEL_116;
        }
        if (v112 < v110) {
          goto LABEL_120;
        }
        if (v68 > *((void *)v108 + 2)) {
          goto LABEL_121;
        }
        *(void *)uint64_t v109 = v110;
        *(void *)&v65[16 * v107 + 8] = v112;
        unint64_t v113 = *((void *)v108 + 2);
        if (v68 >= v113) {
          goto LABEL_122;
        }
        unint64_t v17 = v108;
        unint64_t v18 = v113 - 1;
        memmove(&v65[16 * v68], v111 + 16, 16 * (v113 - 1 - v68));
        *((void *)v108 + 2) = v113 - 1;
        if (v113 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v18 = 1;
LABEL_15:
    a1 = v128;
    Swift::Int v9 = v128[1];
    Swift::Int v16 = v135;
    if (v135 >= v9)
    {
      uint64_t v15 = v121;
      goto LABEL_105;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  Swift::Int result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_10050E288(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v32 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  __chkstk_darwin();
  uint64_t v39 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  int v35 = (uint64_t *)((char *)&v29 - v8);
  uint64_t result = __chkstk_darwin();
  uint64_t v34 = (uint64_t *)((char *)&v29 - v11);
  uint64_t v38 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v12 = *(void *)(v10 + 72);
    uint64_t v13 = v12 * (v38 - 1);
    uint64_t v36 = v12;
    uint64_t v14 = v12 * v38;
    int v33 = a4;
LABEL_5:
    uint64_t v15 = 0;
    uint64_t v16 = v31;
    uint64_t v37 = v14;
    while (1)
    {
      uint64_t v17 = *a4;
      uint64_t v18 = v14 + v15 + *a4;
      Swift::Int v19 = v34;
      sub_10050EC34(v18, (uint64_t)v34, type metadata accessor for CommandConnection.RecentErrors.Error);
      uint64_t v20 = v13 + v15 + v17;
      uint64_t v21 = v13;
      Swift::Int v22 = v35;
      sub_10050EC34(v20, (uint64_t)v35, type metadata accessor for CommandConnection.RecentErrors.Error);
      uint64_t v40 = *v19;
      uint64_t v23 = *v22;
      uint64_t v24 = (uint64_t)v22;
      uint64_t v13 = v21;
      sub_10050EC9C(v24, type metadata accessor for CommandConnection.RecentErrors.Error);
      uint64_t v25 = (uint64_t)v19;
      uint64_t v14 = v37;
      uint64_t result = sub_10050EC9C(v25, type metadata accessor for CommandConnection.RecentErrors.Error);
      BOOL v26 = v40 < v23;
      a4 = v33;
      if (!v26)
      {
LABEL_4:
        uint64_t v13 = v21 + v36;
        v14 += v36;
        if (++v38 == v30) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v27 = *v33;
      if (!*v33) {
        break;
      }
      uint64_t v28 = v27 + v21 + v15;
      sub_10050D73C(v27 + v14 + v15, v39);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_10050D73C(v39, v28);
      v15 -= v36;
      if (v38 == ++v16) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10050E508(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v46 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  __chkstk_darwin();
  uint64_t v48 = (uint64_t *)((char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v10 = (uint64_t *)((char *)&v43 - v9);
  uint64_t v12 = *(void *)(v11 + 72);
  if (!v12)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v12 == -1) {
    goto LABEL_71;
  }
  int64_t v13 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v12 == -1) {
    goto LABEL_72;
  }
  uint64_t v14 = (uint64_t)(a2 - a1) / v12;
  unint64_t v51 = a1;
  unint64_t v50 = a4;
  uint64_t v15 = v13 / v12;
  if (v14 >= v13 / v12)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      uint64_t v17 = v15 * v12;
      if (a4 < a2 || a2 + v17 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v28 = a4 + v17;
      unint64_t v49 = a4 + v17;
      unint64_t v51 = a2;
      if (v17 >= 1 && a1 < a2)
      {
        uint64_t v30 = -v12;
        unint64_t v44 = a1;
        unint64_t v45 = a4;
        do
        {
          unint64_t v47 = a3 + v30;
          sub_10050EC34(v28 + v30, (uint64_t)v10, type metadata accessor for CommandConnection.RecentErrors.Error);
          unint64_t v31 = a2 + v30;
          uint64_t v32 = v10;
          int v33 = v48;
          sub_10050EC34(a2 + v30, (uint64_t)v48, type metadata accessor for CommandConnection.RecentErrors.Error);
          uint64_t v34 = *v32;
          uint64_t v35 = *v33;
          uint64_t v36 = (uint64_t)v33;
          uint64_t v10 = v32;
          sub_10050EC9C(v36, type metadata accessor for CommandConnection.RecentErrors.Error);
          sub_10050EC9C((uint64_t)v32, type metadata accessor for CommandConnection.RecentErrors.Error);
          if (v34 >= v35)
          {
            unint64_t v40 = v49;
            v49 += v30;
            unint64_t v37 = v47;
            if (a3 < v40 || v47 >= v40)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v31 = a2;
              unint64_t v39 = v44;
              unint64_t v38 = v45;
            }
            else
            {
              unint64_t v39 = v44;
              unint64_t v38 = v45;
              if (a3 != v40) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v31 = a2;
            }
          }
          else
          {
            unint64_t v37 = v47;
            if (a3 < a2 || v47 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v39 = v44;
              unint64_t v38 = v45;
            }
            else
            {
              unint64_t v39 = v44;
              unint64_t v38 = v45;
              if (a3 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v51 += v30;
          }
          unint64_t v28 = v49;
          if (v49 <= v38) {
            break;
          }
          a2 = v31;
          a3 = v37;
        }
        while (v31 > v39);
      }
      goto LABEL_69;
    }
  }
  else if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = v14 * v12;
    if (a4 < a1 || a1 + v16 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v47 = a4 + v16;
    unint64_t v49 = a4 + v16;
    if (v16 >= 1 && a2 < a3)
    {
      Swift::Int v19 = v48;
      do
      {
        sub_10050EC34(a2, (uint64_t)v10, type metadata accessor for CommandConnection.RecentErrors.Error);
        sub_10050EC34(a4, (uint64_t)v19, type metadata accessor for CommandConnection.RecentErrors.Error);
        unint64_t v20 = a2;
        uint64_t v21 = *v10;
        uint64_t v22 = *v19;
        sub_10050EC9C((uint64_t)v19, type metadata accessor for CommandConnection.RecentErrors.Error);
        sub_10050EC9C((uint64_t)v10, type metadata accessor for CommandConnection.RecentErrors.Error);
        unint64_t v23 = v51;
        if (v21 >= v22)
        {
          unint64_t v26 = v50 + v12;
          if (v51 < v50 || v51 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v51 != v50)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v50 = v26;
          unint64_t v24 = v20;
        }
        else
        {
          unint64_t v24 = v20 + v12;
          if (v51 < v20 || v51 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v51 == v20)
          {
            unint64_t v23 = v20;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v51 = v23 + v12;
        a4 = v50;
        if (v50 >= v47) {
          break;
        }
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_69:
    sub_10050EAE0(&v51, &v50, (uint64_t *)&v49);
    return 1;
  }
LABEL_73:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

char *sub_10050E9E4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100717F08);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10050EAE0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_1005E3000();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_10050EC20(uint64_t a1)
{
  return sub_10050E9E4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10050EC34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10050EC9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10050ECFC(void *a1)
{
  return sub_100519574(0, a1[2], 0, a1);
}

unsigned char *initializeBufferWithCopyOfBuffer for CredentialsState.State(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

unsigned char *storeEnumTagSinglePayload for CredentialsState.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10050EDE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CredentialsState.State()
{
  return &type metadata for CredentialsState.State;
}

unint64_t sub_10050EE24()
{
  unint64_t result = qword_100717F10;
  if (!qword_100717F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717F10);
  }
  return result;
}

uint64_t sub_10050EE78(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  id v32 = a1;
  uint64_t v10 = sub_1005E1670();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (uint64_t *)((char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  uint64_t v16 = (uint64_t *)((char *)&v29 - v15);
  uint64_t v17 = v6 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_state;
  *(void *)uint64_t v17 = 0;
  *(void *)(v17 + 8) = 0;
  *(unsigned char *)(v17 + 16) = 1;
  *(void *)(v6 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_timer) = 0;
  *(void *)(v6 + 16) = a1;
  *(unsigned char *)(v6 + 24) = a2;
  uint64_t v18 = v6 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_logger;
  uint64_t v19 = sub_1005E0ED0();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v18, a3, v19);
  uint64_t v21 = (void *)(v6 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_handler);
  uint64_t v22 = v31;
  *uint64_t v21 = v30;
  v21[1] = v22;
  void *v16 = 1;
  unint64_t v23 = *(void (**)(void *, void, uint64_t))(v11 + 104);
  v23(v16, enum case for DispatchTimeInterval.seconds(_:), v10);
  *uint64_t v14 = 500;
  v23(v14, enum case for DispatchTimeInterval.milliseconds(_:), v10);
  uint64_t v24 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_10050FF78;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046A1E4;
  aBlock[3] = &unk_1006FBBF0;
  uint64_t v25 = _Block_copy(aBlock);
  type metadata accessor for RestartableTimer();
  swift_allocObject();
  id v26 = v32;
  swift_retain();
  uint64_t v27 = RestartableTimer.init(queue:repeating:leeway:closure:)(v26, (uint64_t)v16, (uint64_t)v14, v25);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a3, v19);
  swift_release();
  swift_release();
  *(void *)(v6 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_timer) = v27;
  swift_release();
  return v6;
}

uint64_t sub_10050F17C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10050F1D4();
    return swift_release();
  }
  return result;
}

uint64_t sub_10050F1D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E1850();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + 16);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_state);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_state + 16)) {
    return result;
  }
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  *uint64_t v9 = 0;
  v9[1] = 0;
  *((unsigned char *)v9 + 16) = 1;
  if (!*(void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_timer))
  {
LABEL_10:
    __break(1u);
    return result;
  }
  swift_retain();
  RestartableTimer.stop()();
  swift_release();
  swift_retain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v12 = sub_1005E0EB0();
  os_log_type_t v13 = sub_1005E25C0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 68158464;
    LODWORD(v16) = 2;
    sub_1005E2960();
    *(_WORD *)(v14 + 8) = 256;
    LOBYTE(v16) = *(unsigned char *)(v1 + 24);
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v14 + 11) = 2048;
    uint64_t v16 = v10;
    sub_1005E2960();
    *(_WORD *)(v14 + 21) = 2048;
    uint64_t v16 = v11;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[%.*hhx] Account data transfer report: received %{iec-bytes}ld, sent %{iec-bytes}ld.", (uint8_t *)v14, 0x1Fu);
    swift_slowDealloc();
  }
  else
  {
    swift_release();
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1
                                                     + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_handler))(v10, v11);
}

uint64_t sub_10050F484()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E1680();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005E16C0();
  uint64_t v6 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v0 + 16);
  uint64_t v17 = OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_timer;
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_timer);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  aBlock[4] = sub_10050FE4C;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046A1E4;
  aBlock[3] = &unk_1006FBBA0;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain_n();
  sub_1005E16A0();
  uint64_t v18 = _swiftEmptyArrayStorage;
  sub_10050FE8C();
  sub_10000566C(&qword_100717E48);
  sub_10050FEE4();
  sub_1005E2AD0();
  sub_1005E2610();
  _Block_release(v11);
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v16);
  swift_release();

  uint64_t v12 = v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_logger;
  uint64_t v13 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10050F77C()
{
  sub_10050F484();
  return swift_deallocClassInstance();
}

uint64_t sub_10050F7D4()
{
  return type metadata accessor for DataTransferReportAccumulator();
}

uint64_t type metadata accessor for DataTransferReportAccumulator()
{
  uint64_t result = qword_100717F58;
  if (!qword_100717F58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10050F828()
{
  uint64_t result = sub_1005E0ED0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10050F8F4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10050F910(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 1;
  }
  else
  {
    *(unsigned char *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DataTransferReportAccumulator.State()
{
  return &type metadata for DataTransferReportAccumulator.State;
}

void sub_10050F940(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005E1850();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v2 + 16);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = sub_1005E1860();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  swift_retain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v10 = sub_1005E0EB0();
  os_log_type_t v11 = sub_1005E2590();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 68159746;
    LODWORD(v30) = 2;
    sub_1005E2960();
    *(_WORD *)(v12 + 8) = 256;
    LOBYTE(v30) = *(unsigned char *)(v2 + 24);
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v12 + 11) = 2082;
    uint64_t v13 = ConnectionID.debugDescription.getter(*(unsigned int *)a1);
    uint64_t v30 = sub_100507920(v13, v14, &v31);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 21) = 1040;
    LODWORD(v30) = 3;
    sub_1005E2960();
    *(_WORD *)(v12 + 27) = 2048;
    uint64_t v30 = a1[2];
    double v15 = *(double *)&v30;
    sub_1005E2960();
    *(_WORD *)(v12 + 37) = 2048;
    uint64_t v16 = a1[3];
    uint64_t v30 = v16;
    sub_1005E2960();
    *(_WORD *)(v12 + 47) = 2048;
    uint64_t v17 = a1[4];
    uint64_t v30 = v17;
    sub_1005E2960();
    *(_WORD *)(v12 + 57) = 2048;
    if (v15 <= 0.0)
    {
      unint64_t v22 = 0;
    }
    else
    {
      if ((unint64_t)(v16 - 0x1000000000000000) >> 61 != 7)
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      double v18 = (double)(8 * v16) / v15;
      double v19 = round(v18);
      BOOL v21 = v19 >= 9.22337204e18 || v19 <= -9.22337204e18;
      unint64_t v22 = llround(v18);
      if (v21) {
        unint64_t v22 = 0;
      }
    }
    uint64_t v30 = v22;
    sub_1005E2960();
    *(_WORD *)(v12 + 67) = 2048;
    if (v15 <= 0.0)
    {
      unint64_t v27 = 0;
    }
    else
    {
      if ((unint64_t)(v16 - 0x1000000000000000) >> 61 != 7)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      double v23 = (double)(8 * v16) / v15;
      double v24 = round(v23);
      BOOL v26 = v24 >= 9.22337204e18 || v24 <= -9.22337204e18;
      unint64_t v27 = llround(v23);
      if (v26) {
        unint64_t v27 = 0;
      }
    }
    uint64_t v30 = v27;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[%.*hhx] Connection %{public}s sent data transfer report for the past %.*g seconds: received %{iec-bytes}ld, sent %{iec-bytes}ld, received throughput %{iec-bitrate}ld, sent throughput %{iec-bitrate}ld.", (uint8_t *)v12, 0x4Du);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release();

    uint64_t v16 = a1[3];
    uint64_t v17 = a1[4];
  }
  uint64_t v28 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_state;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_state + 16)) {
    goto LABEL_32;
  }
  BOOL v21 = __OFADD__(*(void *)v28, v16);
  v16 += *(void *)v28;
  if (v21) {
    goto LABEL_35;
  }
  uint64_t v29 = *(void *)(v28 + 8);
  BOOL v21 = __OFADD__(v29, v17);
  v17 += v29;
  if (v21)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
LABEL_32:
  *(void *)uint64_t v28 = v16;
  *(void *)(v28 + 8) = v17;
  *(unsigned char *)(v28 + 16) = 0;
  if (*(void *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl29DataTransferReportAccumulator_timer))
  {
    swift_retain();
    RestartableTimer.start()();
    swift_release();
    return;
  }
LABEL_39:
  __break(1u);
}

BOOL sub_10050FDD4(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 16) == 1) {
    return (*(unsigned char *)(a2 + 16) & 1) != 0;
  }
  if (*(unsigned char *)(a2 + 16)) {
    return 0;
  }
  return *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
}

uint64_t sub_10050FE14()
{
  swift_release();
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10050FE4C()
{
  if (*(void *)(v0 + 16)) {
    RestartableTimer.stop()();
  }
}

uint64_t sub_10050FE74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10050FE84()
{
  return swift_release();
}

unint64_t sub_10050FE8C()
{
  unint64_t result = qword_100717E40;
  if (!qword_100717E40)
  {
    sub_1005E1680();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717E40);
  }
  return result;
}

unint64_t sub_10050FEE4()
{
  unint64_t result = qword_100717E50;
  if (!qword_100717E50)
  {
    sub_10000744C(&qword_100717E48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717E50);
  }
  return result;
}

uint64_t sub_10050FF40()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10050FF78()
{
  return sub_10050F17C();
}

id Engine.workQueue.getter()
{
  return *(id *)(v0 + 16);
}

id Engine.persistenceEventQueue.getter()
{
  return *(id *)(v0 + 24);
}

uint64_t Engine.tracingID.getter()
{
  return *(unsigned __int8 *)(*(void *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_tracingIDOwner) + 16);
}

uint64_t Engine.__allocating_init(configuration:windowOfInterest:environment:workloop:sendAction:)(uint64_t a1, uint64_t a2, char a3, int a4, uint64_t a5, int a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v23 = a7;
  int v22 = a6;
  uint64_t v21 = a5;
  char v14 = a3 & 1;
  type metadata accessor for Configuration();
  __chkstk_darwin();
  uint64_t v16 = (uint64_t *)((char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for EngineTracingIDOwner();
  swift_allocObject();
  uint64_t v17 = EngineTracingIDOwner.init()();
  sub_100513170(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for Configuration);
  uint64_t v18 = swift_allocObject();
  sub_10051010C(v17, v16, a2, v14, a4 & 0x101FF, v21, v22, v23, a8, a9, a10);
  sub_100518D58(a1, (uint64_t (*)(void))type metadata accessor for Configuration);
  return v18;
}

void *sub_10051010C(uint64_t a1, void *a2, uint64_t a3, char a4, int a5, uint64_t a6, int a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11)
{
  LODWORD(v153) = a7;
  v169 = (uint64_t (**)(uint64_t))a6;
  LODWORD(v152) = a5;
  uint64_t v155 = a3;
  uint64_t v172 = a2;
  uint64_t v170 = a11;
  uint64_t v156 = a10;
  id v163 = a9;
  LODWORD(v154) = a4 & 1;
  uint64_t v171 = sub_1005E1670();
  uint64_t v168 = *(void *)(v171 - 8);
  uint64_t v14 = __chkstk_darwin(v171);
  uint64_t v166 = (uint64_t *)((char *)&v145 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v165 = (uint64_t *)((char *)&v145 - v16);
  uint64_t v17 = type metadata accessor for ConnectionConfiguration();
  __chkstk_darwin(v17 - 8);
  v162 = (uint64_t *)((char *)&v145 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v164 = (void *)sub_1005E2600();
  v160 = (void *)*(v164 - 1);
  __chkstk_darwin(v164);
  uint64_t v161 = (char *)&v145 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_1005E25F0();
  __chkstk_darwin(v158);
  uint64_t v159 = (char *)&v145 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1005E16C0();
  __chkstk_darwin(v21 - 8);
  uint64_t v157 = (char *)&v145 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for Engine.Logger(0);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v147 = (uint64_t)&v145 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v145 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v145 - v29;
  *(void *)((char *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_connections) = 0;
  *(void *)((char *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_betterPathEvaluator) = 0;
  uint64_t v31 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_didStart;
  type metadata accessor for AtomicFlag.Storage();
  uint64_t v32 = swift_allocObject();
  *(_DWORD *)(v32 + 16) = 0;
  *(void *)((char *)v11 + v31) = v32;
  *((unsigned char *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_isProcessingUpdates) = 0;
  *(void *)((char *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_pendingUpdates) = _swiftEmptyArrayStorage;
  uint64_t v33 = (uint64_t)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_externalState;
  uint64_t v34 = type metadata accessor for Activity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 1, 1, v34);
  *(void *)(v33 + *(int *)(type metadata accessor for ExternalState() + 20)) = &_swiftEmptySetSingleton;
  *(void *)((char *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_activityTimer) = 0;
  *(void *)((char *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_inSyncMailboxesDidSyncTimer) = 0;
  *(void *)((char *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_checkForLongSyncsTimer) = 0;
  uint64_t v35 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_didTearDown;
  uint64_t v36 = swift_allocObject();
  *(_DWORD *)(v36 + 16) = 0;
  *(void *)((char *)v11 + v35) = v36;
  *(void *)((char *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_stateCapture) = _swiftEmptyArrayStorage;
  uint64_t v37 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_lastLoggedSyncRequestsAt;
  *(void *)((char *)v11 + v37) = static MonotonicTime.now()();
  *((unsigned char *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_shouldLogForFirstConnection) = 0;
  unint64_t v38 = (_OWORD *)((char *)v11 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_powerTelemetry);
  *unint64_t v38 = 0u;
  v38[1] = 0u;
  uint64_t v39 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_pendingCredentialsRequests;
  unint64_t v40 = sub_10050522C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v173 = a1;
  uint64_t v174 = v11;
  *(void *)((char *)v11 + v39) = v40;
  char v41 = *(unsigned char *)(a1 + 16);
  sub_1005E0EC0();
  v30[*(int *)(v23 + 20)] = v41;
  sub_100513170((uint64_t)v30, (uint64_t)v28, type metadata accessor for Engine.Logger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  Swift::Int v42 = sub_1005E0EB0();
  os_log_type_t v43 = sub_1005E25C0();
  BOOL v44 = os_log_type_enabled(v42, v43);
  uint64_t v167 = v30;
  uint64_t v146 = v23;
  if (v44)
  {
    uint64_t v45 = swift_slowAlloc();
    v181[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 68158210;
    LODWORD(v175[0]) = 2;
    sub_1005E2960();
    *(_WORD *)(v45 + 8) = 256;
    char v46 = v28[*(int *)(v23 + 20)];
    sub_100518D58((uint64_t)v28, type metadata accessor for Engine.Logger);
    LOBYTE(v175[0]) = v46;
    sub_1005E2960();
    *(_WORD *)(v45 + 11) = 2080;
    unsigned int v150 = v152 & 0x101FF;
    char v47 = v153;
    uint64_t v48 = Environment.description.getter(v152 & 0x101FF, (uint64_t)v169, v153);
    v175[0] = sub_100507920(v48, v49, v181);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "[%.*hhx] Created with environment %s", (uint8_t *)v45, 0x15u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v30 = v167;
    swift_slowDealloc();
  }
  else
  {
    sub_100518D58((uint64_t)v28, type metadata accessor for Engine.Logger);

    unsigned int v150 = v152 & 0x101FF;
    char v47 = v153;
  }
  unint64_t v50 = v174;
  sub_100513170((uint64_t)v30, (uint64_t)v174 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, type metadata accessor for Engine.Logger);
  unint64_t v51 = v172;
  uint64_t v52 = v173;
  uint64_t v53 = *v172;
  uint64_t v54 = v172[1];
  uint64_t v55 = (void *)((char *)v50 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logName);
  *uint64_t v55 = *v172;
  v55[1] = v54;
  uint64_t v56 = v53;
  uint64_t v152 = v54;
  uint64_t v153 = v53;
  *(void *)((char *)v50 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_tracingIDOwner) = v52;
  uint64_t v151 = (int *)type metadata accessor for Configuration();
  uint64_t v57 = v51;
  LOBYTE(v51) = *((unsigned char *)v51 + v151[6]);
  char v58 = *((unsigned char *)v57 + v151[7]);
  char v59 = *(unsigned char *)(v52 + 16);
  swift_bridgeObjectRetain_n();
  swift_retain();
  StateWithTasks.init(windowOfInterest:environment:mailboxFilter:fetchedMessageMetadata:tracingID:logName:)(v155, v154, v150, (uint64_t)v169, v47, a8, (char)v51, v58, (uint64_t)v181, v59, v56, v54);
  memcpy((char *)v50 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state, v181, 0x138uLL);
  uint64_t v60 = v170;
  v50[4] = v156;
  v50[5] = v60;
  v169 = (uint64_t (**)(uint64_t))sub_10051BAEC();
  swift_retain();
  sub_1005E16B0();
  v175[0] = _swiftEmptyArrayStorage;
  uint64_t v155 = sub_10051BB2C(&qword_100718268, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  uint64_t v154 = sub_10000566C(&qword_100718270);
  uint64_t v156 = sub_100007494(&qword_100718278, &qword_100718270);
  sub_1005E2AD0();
  unsigned int v150 = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  uint64_t v61 = v161;
  uint64_t v149 = (void (*)(char *))v160[13];
  uint64_t v62 = v164;
  v149(v161);
  id v148 = v163;
  v160 = (void *)sub_1005E2620();
  v50[2] = v160;
  sub_1005E16B0();
  v175[0] = _swiftEmptyArrayStorage;
  sub_1005E2AD0();
  ((void (*)(char *, void, void *))v149)(v61, v150, v62);
  unint64_t v164 = v148;
  v50[3] = sub_1005E2620();
  unint64_t v63 = (void (*)(void, void, void))v162;
  sub_100513170((uint64_t)v172 + v151[5], (uint64_t)v162, (uint64_t (*)(void))type metadata accessor for ConnectionConfiguration);
  type metadata accessor for ConnectionPool();
  uint64_t v64 = swift_allocObject();
  uint64_t v65 = v152;
  swift_bridgeObjectRetain();
  int v66 = v160;
  swift_retain();
  Swift::Int v67 = (void *)sub_10051A684(v153, v65, (uint64_t)v63, v66, (uint64_t)v50, v64);
  *(void *)((char *)v50 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_connections) = v67;
  swift_retain();
  swift_release();
  LOBYTE(v66) = *(unsigned char *)(v173 + 16);
  unint64_t v68 = (void *)v50[2];
  type metadata accessor for BetterPathEvaluator();
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(_OWORD *)(v69 + 48) = xmmword_1005F6950;
  *(unsigned char *)(v69 + 64) = 0;
  *(void *)(v69 + 80) = 0;
  *(void *)(v69 + 88) = 0;
  *(void *)(v69 + 72) = 0;
  *(void *)(v69 + 40) = &off_1006FBCE0;
  swift_unknownObjectWeakAssign();
  *(void *)(v69 + 16) = v68;
  *(unsigned char *)(v69 + 24) = (_BYTE)v66;
  *(void *)(v69 + 104) = v67;
  *(void *)(v69 + 112) = 0x4000000000000000;
  *(void *)(v69 + 96) = sub_10051BB74;
  *(void *)((char *)v50 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_betterPathEvaluator) = v69;
  id v163 = v67;
  swift_retain();
  id v70 = v68;
  swift_release();
  swift_bridgeObjectRetain();
  NSString v71 = sub_1005E1BD0();
  NSString v72 = sub_1005E1BD0();
  uint64_t v73 = PPSCreateTelemetryIdentifier();

  if (v73)
  {
    sub_10051B67C(8);
    swift_bridgeObjectRelease();
    uint64_t v74 = sub_1005E1D00();
    uint64_t v76 = v75;
    swift_bridgeObjectRelease();
    uint64_t v77 = &off_100718000;
    uint64_t v78 = v173;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v79 = v147;
    sub_100513170((uint64_t)v167, v147, type metadata accessor for Engine.Logger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    unint64_t v80 = sub_1005E0EB0();
    os_log_type_t v81 = sub_1005E25A0();
    BOOL v82 = os_log_type_enabled(v80, v81);
    uint64_t v77 = &off_100718000;
    uint64_t v78 = v173;
    if (v82)
    {
      uint64_t v83 = swift_slowAlloc();
      *(_DWORD *)uint64_t v83 = 68157952;
      LODWORD(v175[0]) = 2;
      sub_1005E2960();
      *(_WORD *)(v83 + 8) = 256;
      char v84 = *(unsigned char *)(v79 + *(int *)(v146 + 20));
      sub_100518D58(v79, type metadata accessor for Engine.Logger);
      LOBYTE(v175[0]) = v84;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "[%.*hhx] Unable to create power telemetry id.", (uint8_t *)v83, 0xBu);
      swift_slowDealloc();
    }
    else
    {
      sub_100518D58(v79, type metadata accessor for Engine.Logger);
    }

    uint64_t v73 = 0;
    uint64_t v74 = 0;
    uint64_t v76 = 0;
  }
  uint64_t v85 = (uint64_t *)((char *)v77[5] + (void)v174);
  swift_beginAccess();
  uint64_t v86 = *v85;
  uint64_t v87 = v85[1];
  uint64_t v88 = v85[2];
  *uint64_t v85 = v73;
  v85[1] = v74;
  v85[2] = v76;
  v85[3] = 0;
  sub_100518DB8(v86, v87, v88);
  sub_10000566C(&qword_100718280);
  uint64_t v89 = swift_allocObject();
  *(_OWORD *)(v89 + 16) = xmmword_10062A010;
  v175[0] = 0x2D6574617453;
  v175[1] = 0xE600000000000000;
  char v180 = *(unsigned char *)(v78 + 16);
  sub_10051BB7C();
  uint64_t v90 = sub_1005E1F20();
  uint64_t v92 = v91;
  if (sub_1005E1DC0() <= 1)
  {
    v182._countAndFlagsBits = 48;
    v182._object = (void *)0xE100000000000000;
    sub_1005E1E30(v182);
  }
  type metadata accessor for StateCapture();
  v183._countAndFlagsBits = v90;
  v183._object = v92;
  sub_1005E1E30(v183);
  swift_bridgeObjectRelease();
  uint64_t v93 = v175[0];
  uint64_t v94 = v175[1];
  uint64_t v95 = (void *)v174[2];
  uint64_t v96 = swift_allocObject();
  swift_weakInit();
  *(void *)(v89 + 32) = StateCapture.__allocating_init(title:queue:capture:)(v93, v94, v95, (uint64_t)sub_10051BC08, v96);
  v175[0] = 0;
  v175[1] = 0xE000000000000000;
  sub_1005E2C80(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v175, "LocalSelected-");
  HIBYTE(v175[1]) = -18;
  char v180 = *(unsigned char *)(v78 + 16);
  uint64_t v97 = sub_1005E1F20();
  uint64_t v99 = v98;
  if (sub_1005E1DC0() <= 1)
  {
    v184._countAndFlagsBits = 48;
    v184._object = (void *)0xE100000000000000;
    sub_1005E1E30(v184);
  }
  v185._countAndFlagsBits = v97;
  v185._object = v99;
  sub_1005E1E30(v185);
  swift_bridgeObjectRelease();
  uint64_t v100 = v175[0];
  uint64_t v101 = v175[1];
  uint64_t v102 = (void *)v174[2];
  uint64_t v103 = swift_allocObject();
  swift_weakInit();
  *(void *)(v89 + 40) = StateCapture.__allocating_init(title:queue:capture:)(v100, v101, v102, (uint64_t)sub_10051BC10, v103);
  v175[0] = 0x2D6C61636F4CLL;
  v175[1] = 0xE600000000000000;
  char v180 = *(unsigned char *)(v78 + 16);
  uint64_t v104 = sub_1005E1F20();
  uint64_t v106 = v105;
  if (sub_1005E1DC0() <= 1)
  {
    v186._countAndFlagsBits = 48;
    v186._object = (void *)0xE100000000000000;
    sub_1005E1E30(v186);
  }
  v187._countAndFlagsBits = v104;
  v187._object = v106;
  sub_1005E1E30(v187);
  swift_bridgeObjectRelease();
  uint64_t v107 = v175[0];
  uint64_t v108 = v175[1];
  uint64_t v109 = (void *)v174[2];
  uint64_t v110 = swift_allocObject();
  swift_weakInit();
  *(void *)(v89 + 48) = StateCapture.__allocating_init(title:queue:capture:)(v107, v108, v109, (uint64_t)sub_10051BC18, v110);
  strcpy((char *)v175, "Remote-");
  v175[1] = 0xE700000000000000;
  char v180 = *(unsigned char *)(v78 + 16);
  uint64_t v111 = sub_1005E1F20();
  unint64_t v113 = v112;
  if (sub_1005E1DC0() <= 1)
  {
    v188._countAndFlagsBits = 48;
    v188._object = (void *)0xE100000000000000;
    sub_1005E1E30(v188);
  }
  v189._countAndFlagsBits = v111;
  v189._object = v113;
  sub_1005E1E30(v189);
  swift_bridgeObjectRelease();
  uint64_t v114 = v175[0];
  uint64_t v115 = v175[1];
  uint64_t v116 = v174;
  uint64_t v117 = (void *)v174[2];
  uint64_t v118 = swift_allocObject();
  swift_weakInit();
  *(void *)(v89 + 56) = StateCapture.__allocating_init(title:queue:capture:)(v114, v115, v117, (uint64_t)sub_10051BC20, v118);
  v175[0] = v89;
  sub_1005E20E0();
  *(void *)((char *)v116 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_stateCapture) = v175[0];
  swift_bridgeObjectRelease();
  unint64_t v119 = (void *)v116[2];
  uint64_t v120 = v165;
  *uint64_t v165 = 500;
  uint64_t v121 = enum case for DispatchTimeInterval.milliseconds(_:);
  Swift::Int v122 = *(void **)(v168 + 104);
  uint64_t v123 = v171;
  ((void (*)(void *, void, uint64_t))v122)(v120, enum case for DispatchTimeInterval.milliseconds(_:), v171);
  Swift::Int v124 = v166;
  *uint64_t v166 = 250;
  ((void (*)(void *, uint64_t, uint64_t))v122)(v124, v121, v123);
  uint64_t v125 = swift_allocObject();
  swift_weakInit();
  uint64_t v178 = sub_10051BC28;
  uint64_t v179 = v125;
  v175[0] = _NSConcreteStackBlock;
  v175[1] = 1107296256;
  v169 = &v176;
  v176 = sub_10046A1E4;
  uint64_t v177 = &unk_1006FBDD8;
  Swift::Int v126 = _Block_copy(v175);
  uint64_t v168 = type metadata accessor for RestartableTimer();
  swift_allocObject();
  id v127 = v119;
  swift_retain();
  uint64_t v128 = RestartableTimer.init(queue:repeating:leeway:closure:)(v127, (uint64_t)v120, (uint64_t)v124, v126);
  swift_release();
  swift_release();
  *(void *)((char *)v116 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_activityTimer) = v128;
  swift_release();
  uint64_t v161 = (char *)v116[2];
  *uint64_t v120 = 53;
  uint64_t v129 = enum case for DispatchTimeInterval.seconds(_:);
  uint64_t v130 = v171;
  v162 = v122;
  ((void (*)(void *, void, uint64_t))v122)(v120, enum case for DispatchTimeInterval.seconds(_:), v171);
  void *v124 = 2;
  ((void (*)(void *, uint64_t, uint64_t))v122)(v124, v129, v130);
  uint64_t v131 = swift_allocObject();
  swift_weakInit();
  uint64_t v178 = sub_10051BC58;
  uint64_t v179 = v131;
  v175[0] = _NSConcreteStackBlock;
  v175[1] = 1107296256;
  v176 = sub_10046A1E4;
  uint64_t v177 = &unk_1006FBE00;
  Swift::Int v132 = _Block_copy(v175);
  swift_allocObject();
  v133 = v161;
  swift_retain();
  uint64_t v134 = RestartableTimer.init(queue:repeating:leeway:closure:)(v133, (uint64_t)v120, (uint64_t)v124, v132);
  swift_release();
  swift_release();
  *(void *)((char *)v116 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_inSyncMailboxesDidSyncTimer) = v134;
  swift_release();
  Swift::Int v135 = (void *)v116[2];
  uint64_t v136 = (uint64_t)v120;
  *uint64_t v120 = 300;
  Swift::Int v137 = v120;
  uint64_t v138 = v171;
  uint64_t v139 = (void (*)(void *, uint64_t, uint64_t))v162;
  ((void (*)(void *, uint64_t, uint64_t))v162)(v137, v129, v171);
  void *v124 = 10;
  v139(v124, v129, v138);
  uint64_t v140 = swift_allocObject();
  swift_weakInit();
  uint64_t v178 = sub_10051BC88;
  uint64_t v179 = v140;
  v175[0] = _NSConcreteStackBlock;
  v175[1] = 1107296256;
  v176 = sub_10046A1E4;
  uint64_t v177 = &unk_1006FBE28;
  v141 = _Block_copy(v175);
  swift_allocObject();
  id v142 = v135;
  swift_retain();
  uint64_t v143 = RestartableTimer.init(queue:repeating:leeway:closure:)(v142, v136, (uint64_t)v124, v141);
  swift_release();
  swift_release();

  swift_release();
  sub_100518D58((uint64_t)v172, (uint64_t (*)(void))type metadata accessor for Configuration);
  sub_100518D58((uint64_t)v167, type metadata accessor for Engine.Logger);
  swift_release();
  swift_release();
  *(void *)((char *)v116 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_checkForLongSyncsTimer) = v143;
  swift_release();
  return v116;
}

uint64_t Engine.Logger.init(engineID:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  sub_1005E0EC0();
  uint64_t result = type metadata accessor for Engine.Logger(0);
  *(unsigned char *)(a2 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t type metadata accessor for Engine.Logger(uint64_t a1)
{
  return sub_10003B314(a1, qword_1007181F8);
}

uint64_t sub_1005116DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a2;
  uint64_t v30 = a1;
  uint64_t v4 = type metadata accessor for ConnectionConfiguration();
  __chkstk_darwin(v4 - 8);
  uint64_t v28 = (uint64_t)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_nextConnectionID;
  unsigned int v6 = *(_DWORD *)(a3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_nextConnectionID);
  uint64_t v7 = (unint64_t *)(a3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  while (1)
  {
    unint64_t v8 = *v7;
    if (*v7 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v9 = sub_1005E2FB0();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v9) {
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (!v9) {
        goto LABEL_29;
      }
    }
    if ((v8 & 0xC000000000000001) != 0) {
      break;
    }
    if (*(_DWORD *)(*(void *)(v8 + 32) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != v6)
    {
      if (v9 == 1) {
        goto LABEL_29;
      }
      if (*(_DWORD *)(*(void *)(v8 + 40) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != v6)
      {
        if (v9 == 2) {
          goto LABEL_29;
        }
        if (*(_DWORD *)(*(void *)(v8 + 48) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != v6) {
          goto LABEL_11;
        }
      }
    }
LABEL_2:
    swift_bridgeObjectRelease_n();
    ++v6;
  }
  int v15 = *(_DWORD *)(sub_1005E2CF0() + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
  swift_unknownObjectRelease();
  if (v15 == v6) {
    goto LABEL_2;
  }
  if (v9 == 1) {
    goto LABEL_29;
  }
  int v16 = *(_DWORD *)(sub_1005E2CF0() + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
  swift_unknownObjectRelease();
  if (v16 == v6) {
    goto LABEL_2;
  }
  if (v9 == 2) {
    goto LABEL_29;
  }
  int v17 = *(_DWORD *)(sub_1005E2CF0() + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
  uint64_t result = swift_unknownObjectRelease();
  if (v17 == v6) {
    goto LABEL_2;
  }
LABEL_11:
  if (v9 == 3)
  {
LABEL_29:
    swift_bridgeObjectRelease_n();
    *(_DWORD *)(a3 + v27) = v6 + 1;
    uint64_t v18 = type metadata accessor for CommandConnection();
    unsigned int v19 = *(unsigned __int8 *)(a3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    uint64_t v20 = v28;
    sub_100513170(a3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_configuration, v28, (uint64_t (*)(void))type metadata accessor for ConnectionConfiguration);
    uint64_t v21 = *(void **)(a3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
    uint64_t v22 = *(void *)(a3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_dataTransferReportAccumulator);
    uint64_t v23 = v30;
    uint64_t ObjectType = swift_getObjectType();
    swift_retain();
    id v25 = v21;
    swift_unknownObjectRetain();
    swift_retain();
    return sub_1005342E0(v6, v19, v20, (uint64_t)sub_10051BF14, a3, (uint64_t)v25, v23, (uint64_t)sub_10051BF1C, v22, v18, ObjectType, v29);
  }
  uint64_t v11 = 3;
  while (2)
  {
    if ((v8 & 0xC000000000000001) == 0)
    {
      if (__OFADD__(v11, 1)) {
        goto LABEL_31;
      }
      int v14 = *(_DWORD *)(*(void *)(v8 + 32 + 8 * v11++) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
      if (v14 == v6) {
        goto LABEL_2;
      }
      goto LABEL_13;
    }
    uint64_t result = sub_1005E2CF0();
    if (!__OFADD__(v11++, 1))
    {
      int v13 = *(_DWORD *)(result + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
      uint64_t result = swift_unknownObjectRelease();
      if (v13 == v6) {
        goto LABEL_2;
      }
LABEL_13:
      if (v11 == v9) {
        goto LABEL_29;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_100511A54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1005E1850();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    *(void *)(a1 + 24) = sub_10000566C(&qword_1007182C8);
    *(void *)(a1 + 32) = swift_getOpaqueTypeConformance2();
    unint64_t v8 = sub_100021E04((uint64_t *)a1);
    uint64_t v9 = *(void **)(v7 + 16);
    *uint64_t v5 = v9;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
    id v10 = v9;
    LOBYTE(v9) = sub_1005E1860();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
    if (v9)
    {
      uint64_t v11 = (const void *)(v7 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
      swift_beginAccess();
      memcpy(v15, v11, sizeof(v15));
      uint64_t v12 = *(void *)(v7 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logName);
      uint64_t v13 = *(void *)(v7 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logName + 8);
      sub_1000B37E0((uint64_t)v15);
      StateWithTasks.stateCaptureValue(logName:)(v12, v13, (uint64_t)v8);
      sub_1000B38FC((uint64_t)v15);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_100511C54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1005E1850();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10000566C(&qword_1007182B8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v22[-v10];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = Strong;
    int v14 = *(void **)(Strong + 16);
    *uint64_t v5 = v14;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
    id v15 = v14;
    LOBYTE(v14) = sub_1005E1860();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
    if ((v14 & 1) == 0)
    {
      __break(1u);
      return result;
    }
    int v17 = (const void *)(v13 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
    swift_beginAccess();
    memcpy(v23, v17, sizeof(v23));
    sub_1000B37E0((uint64_t)v23);
    StateWithTasks.localSelectedMailboxesCaptureValue()(v11);
    sub_1000B38FC((uint64_t)v23);
    swift_release();
  }
  else
  {
    uint64_t v18 = sub_10000566C(&qword_1007182C0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  }
  sub_1000079E4((uint64_t)v11, (uint64_t)v9, &qword_1007182B8);
  uint64_t v19 = sub_10000566C(&qword_1007182C0);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v19) == 1)
  {
    sub_100007A48((uint64_t)v11, &qword_1007182B8);
    uint64_t result = sub_100007A48((uint64_t)v9, &qword_1007182B8);
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(void *)(a1 + 32) = 0;
  }
  else
  {
    *(void *)(a1 + 24) = v19;
    *(void *)(a1 + 32) = swift_getOpaqueTypeConformance2();
    uint64_t v21 = sub_100021E04((uint64_t *)a1);
    (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v20 + 32))(v21, v9, v19);
    return sub_100007A48((uint64_t)v11, &qword_1007182B8);
  }
  return result;
}

uint64_t sub_100511FA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1005E1850();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = *(void **)(result + 16);
    *uint64_t v5 = v8;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
    id v9 = v8;
    LOBYTE(v8) = sub_1005E1860();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
    if (v8)
    {
      uint64_t v10 = (const void *)(v7 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
      swift_beginAccess();
      memcpy(v12, v10, sizeof(v12));
      sub_1000B37E0((uint64_t)v12);
      StateWithTasks.localDeselectedMailboxesCaptureValue()((uint64_t *)a1);
      sub_1000B38FC((uint64_t)v12);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_100512150@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1005E1850();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    *(void *)(a1 + 24) = sub_10000566C(&qword_1007182B0);
    *(void *)(a1 + 32) = swift_getOpaqueTypeConformance2();
    uint64_t v8 = sub_100021E04((uint64_t *)a1);
    id v9 = *(void **)(v7 + 16);
    *uint64_t v5 = v9;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
    id v10 = v9;
    LOBYTE(v9) = sub_1005E1860();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
    if (v9)
    {
      uint64_t v11 = (const void *)(v7 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
      swift_beginAccess();
      memcpy(v13, v11, sizeof(v13));
      sub_1000B37E0((uint64_t)v13);
      StateWithTasks.remoteMailboxesCaptureValue()((uint64_t)v8);
      sub_1000B38FC((uint64_t)v13);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_100512338()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_100717EF8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for Activity(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (unint64_t *)&v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1005E1850();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = *(void **)(v1 + 16);
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = v12;
  LOBYTE(v12) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_connections);
    if (v15)
    {
      int v16 = (const void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
      swift_beginAccess();
      memcpy(v27, v16, sizeof(v27));
      swift_retain_n();
      sub_1000B37E0((uint64_t)v27);
      sub_100523698(v4);
      StateWithTasks.makeActivity(makeStatus:accountError:)((uint64_t (*)(uint64_t))sub_10051BEA8, v15, (uint64_t)v4, v7);
      sub_1000B38FC((uint64_t)v27);
      swift_release();
      sub_100007A48((uint64_t)v4, &qword_100717EF8);
      swift_release();
    }
    else
    {
      uint64_t v17 = type metadata accessor for ConnectionStatus.Error(0);
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 1, 1, v17);
      Activity.init(mailboxesWithPendingWork:accountError:)((unint64_t)&_swiftEmptySetSingleton, (uint64_t)v4, v7);
    }
    uint64_t v18 = (const void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
    swift_beginAccess();
    memcpy(v26, v18, sizeof(v26));
    sub_1000B37E0((uint64_t)v26);
    uint64_t v19 = StateWithTasks.selectedMailboxes.getter();
    sub_1000B38FC((uint64_t)v26);
    swift_beginAccess();
    uint64_t v20 = sub_10051EC3C((uint64_t)v7, (uint64_t)v19);
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_100518D58((uint64_t)v7, type metadata accessor for Activity);
    uint64_t v21 = v20[2];
    if (v21)
    {
      uint64_t v22 = *(void (**)(unint64_t))(v1 + 32);
      uint64_t v23 = v20 + 4;
      do
      {
        unint64_t v24 = *v23++;
        sub_10051BCC8(v24);
        v22(v24);
        sub_10051BDB8(v24);
        --v21;
      }
      while (v21);
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (*(void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_activityTimer))
    {
      swift_retain();
      RestartableTimer.stop()();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1005126FC(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a2();
    return swift_release();
  }
  return result;
}

uint64_t sub_10051275C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (const void *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
  swift_beginAccess();
  memcpy(__dst, v2, sizeof(__dst));
  sub_1000B37E0((uint64_t)__dst);
  StateWithTasks.inSyncMailboxes.getter(v7);
  sub_1000B38FC((uint64_t)__dst);
  sub_10003BCDC(v7, v7[3]);
  sub_1005054A4((uint64_t)_swiftEmptyArrayStorage);
  sub_10000566C(&qword_100718290);
  sub_1005E2010();
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v7);
  if (!*(void *)(v6 + 16)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v3 = *(void (**)(unint64_t))(v1 + 32);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v6;
  v3(v4 | 0x9000000000000002);
  return swift_release();
}

uint64_t sub_1005128A4()
{
  uint64_t v0 = sub_1005E1850();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = *(void **)(result + 16);
    *uint64_t v3 = v6;
    (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.onQueue(_:), v0);
    id v7 = v6;
    LOBYTE(v6) = sub_1005E1860();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v1 + 8))(v3, v0);
    if (v6)
    {
      uint64_t v8 = (const void *)(v5 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
      swift_beginAccess();
      memcpy(v11, v8, sizeof(v11));
      sub_1000B37E0((uint64_t)v11);
      __uint64_t v9 = static MonotonicTime.now()();
      StateWithTasks.logLongRunningSyncRequests(now:)((IMAP2Helpers::MonotonicTime)v9);
      sub_1000B38FC((uint64_t)v11);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

Swift::Void __swiftcall Engine.start()()
{
  uint64_t v1 = sub_1005E1680();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E16C0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_didStart) + 16;
  uint64_t v10 = (uint64_t (**)(uint64_t))atomicFlag_testAndSet.unsafeMutableAddressor();
  if (((*v10)(v9) & 1) == 0)
  {
    v12[0] = *(void *)(v0 + 16);
    aBlock[4] = sub_100512DD4;
    aBlock[5] = v0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10046A1E4;
    aBlock[3] = &unk_1006FBC18;
    uint64_t v11 = _Block_copy(aBlock);
    swift_retain();
    sub_1005E16A0();
    v12[1] = _swiftEmptyArrayStorage;
    sub_10051BB2C((unint64_t *)&qword_100717E40, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000566C(&qword_100717E48);
    sub_100007494((unint64_t *)&qword_100717E50, &qword_100717E48);
    sub_1005E2AD0();
    sub_1005E2610();
    _Block_release(v11);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
  }
}

uint64_t sub_100512D04(uint64_t a1)
{
  (*(void (**)(unint64_t))(a1 + 32))(0xA000000000000006);
  uint64_t result = sub_100513ECC((uint64_t)&off_1006FB6A0, (uint64_t)&unk_1006FB6B0, (uint64_t)&unk_1006FB6C0);
  if (!*(void *)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_activityTimer))
  {
    __break(1u);
    goto LABEL_8;
  }
  swift_retain();
  RestartableTimer.start()();
  uint64_t result = swift_release();
  if (!*(void *)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_inSyncMailboxesDidSyncTimer))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  swift_retain();
  RestartableTimer.start()();
  uint64_t result = swift_release();
  if (!*(void *)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_checkForLongSyncsTimer))
  {
LABEL_9:
    __break(1u);
    return result;
  }
  swift_retain();
  RestartableTimer.start()();
  return swift_release();
}

uint64_t sub_100512DD4()
{
  return sub_100512D04(v0);
}

uint64_t sub_100512DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100512DEC()
{
  return swift_release();
}

Swift::Void __swiftcall Engine.tearDown()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E0ED0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Engine.Logger(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_didTearDown) + 16;
  uint64_t v10 = (uint64_t (**)(uint64_t))atomicFlag_testAndSet.unsafeMutableAddressor();
  if (((*v10)(v9) & 1) == 0)
  {
    uint64_t v11 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
    sub_100513170(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, (uint64_t)v8, type metadata accessor for Engine.Logger);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    swift_retain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v12 = sub_1005E0EB0();
    os_log_type_t v13 = sub_1005E25C0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 68157952;
      LODWORD(aBlock[0]) = 2;
      sub_1005E2960();
      *(_WORD *)(v14 + 8) = 256;
      LOBYTE(aBlock[0]) = *(unsigned char *)(v11 + *(int *)(v6 + 20));
      sub_1005E2960();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "[%.*hhx] Tearing down.", (uint8_t *)v14, 0xBu);
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v15 = *(NSObject **)(v1 + 16);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_1005185E8;
    *(void *)(v16 + 24) = v1;
    aBlock[4] = sub_100518600;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100513398;
    aBlock[3] = &unk_1006FBC68;
    uint64_t v17 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v15, v17);
    _Block_release(v17);
    LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (v15) {
      __break(1u);
    }
  }
}

uint64_t sub_100513170(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005131D8(uint64_t result)
{
  if (!*(void *)(result + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_activityTimer))
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v1 = result;
  swift_retain();
  RestartableTimer.stop()();
  uint64_t result = swift_release();
  if (!*(void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_inSyncMailboxesDidSyncTimer))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  swift_retain();
  RestartableTimer.stop()();
  uint64_t result = swift_release();
  if (*(void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_checkForLongSyncsTimer))
  {
    swift_retain();
    RestartableTimer.stop()();
    swift_release();
    return sub_100513278();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100513278()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_stateCapture);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1005E2FB0();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_10;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      sub_1005E2CF0();
    }
    else {
      swift_retain();
    }
    StateCapture.tearDown()();
    swift_release();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  uint64_t v5 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_connections;
  if (*(void *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_connections))
  {
    swift_retain();
    sub_100522488();
    swift_release();
  }
  *(void *)(v0 + v5) = 0;
  return swift_release();
}

uint64_t sub_100513398(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t Engine.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Engine.Logger(0);
  __chkstk_darwin();
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
  sub_100513170(v5, (uint64_t)v4, type metadata accessor for Engine.Logger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v6 = sub_1005E0EB0();
  os_log_type_t v7 = sub_1005E25C0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 68157952;
    v13[0] = 2;
    sub_1005E2960();
    *(_WORD *)(v8 + 8) = 256;
    char v9 = v4[*(int *)(v2 + 20)];
    sub_100518D58((uint64_t)v4, type metadata accessor for Engine.Logger);
    LOBYTE(v13[0]) = v9;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%.*hhx] Deinit.", (uint8_t *)v8, 0xBu);
    swift_slowDealloc();
  }
  else
  {
    sub_100518D58((uint64_t)v4, type metadata accessor for Engine.Logger);
  }

  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_didTearDown);
  uint64_t v11 = (uint64_t (**)(uint64_t))atomicFlag_testAndSet.unsafeMutableAddressor();
  uint64_t result = (*v11)(v10 + 16);
  if (result)
  {

    swift_release();
    sub_100518D58(v5, type metadata accessor for Engine.Logger);
    swift_bridgeObjectRelease();
    swift_release();
    memcpy(v13, (const void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state), 0x138uLL);
    sub_1000B38FC((uint64_t)v13);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100518D58(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_externalState, (uint64_t (*)(void))type metadata accessor for ExternalState);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100518DB8(*(void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_powerTelemetry), *(void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_powerTelemetry + 8), *(void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_powerTelemetry + 16));
    swift_bridgeObjectRelease();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Engine.__deallocating_deinit()
{
  Engine.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_100513760(uint64_t a1)
{
  uint64_t v3 = sub_1005E1850();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  os_log_type_t v7 = *(void **)(v1 + 16);
  *uint64_t v6 = v7;
  uint64_t v8 = *(void (**)(void))(v4 + 104);
  unsigned int v49 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v50 = v4 + 104;
  uint64_t v48 = (void (*)(void *, void, uint64_t))v8;
  v8(v6);
  id v9 = v7;
  char v10 = sub_1005E1860();
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t))(v4 + 8);
  unint64_t v51 = v6;
  uint64_t v52 = v4 + 8;
  uint64_t v53 = v3;
  char v47 = v11;
  uint64_t result = v11(v6, v3);
  if (v10)
  {
    int64_t v13 = *(void *)(a1 + 16);
    if (v13)
    {
      uint64_t v46 = v1;
      uint64_t v55 = _swiftEmptyArrayStorage;
      sub_1005194F4(0, v13, 0);
      uint64_t v14 = v55;
      uint64_t v44 = a1;
      uint64_t v15 = (void *)(a1 + 64);
      int64_t v16 = v13;
      do
      {
        int v17 = *((_DWORD *)v15 - 8);
        unint64_t v18 = *(v15 - 3);
        int v19 = *((_DWORD *)v15 - 4);
        uint64_t v21 = *(v15 - 1);
        uint64_t v20 = *v15;
        uint64_t v22 = swift_allocObject();
        *(_DWORD *)(v22 + 16) = v17;
        *(void *)(v22 + 24) = v18;
        *(_DWORD *)(v22 + 32) = v19;
        *(void *)(v22 + 40) = v21;
        *(void *)(v22 + 48) = v20;
        sub_10051B4D8(v18);
        uint64_t v55 = v14;
        unint64_t v24 = v14[2];
        unint64_t v23 = v14[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v24 >= v23 >> 1)
        {
          sub_1005194F4(v23 > 1, v24 + 1, 1);
          uint64_t v14 = v55;
        }
        v14[2] = v24 + 1;
        v14[v24 + 4] = v22;
        v15 += 5;
        --v16;
      }
      while (v16);
      uint64_t v25 = v46;
      sub_100513B78(v14);
      swift_release();
      uint64_t v26 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_betterPathEvaluator;
      uint64_t v27 = (uint64_t *)(swift_bridgeObjectRetain() + 64);
      uint64_t v45 = v26;
      uint64_t v28 = v51;
      uint64_t v29 = v53;
      while (1)
      {
        unint64_t v31 = *(v27 - 3);
        uint64_t v32 = *(void *)(v25 + v26);
        if (v32) {
          BOOL v33 = v31 >> 60 == 7;
        }
        else {
          BOOL v33 = 0;
        }
        if (!v33) {
          goto LABEL_11;
        }
        uint64_t v54 = *v27;
        int v34 = *(unsigned __int8 *)((v31 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v35 = *(void **)(v32 + 16);
        *uint64_t v28 = v35;
        v48(v28, v49, v29);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v36 = v35;
        swift_retain();
        sub_10051B4D8(v31);
        LOBYTE(v35) = sub_1005E1860();
        uint64_t result = v47(v28, v29);
        if ((v35 & 1) == 0)
        {
          __break(1u);
          goto LABEL_32;
        }
        int64_t v37 = static MonotonicTime.now()();
        int v38 = *(unsigned __int8 *)(v32 + 64);
        if (v34)
        {
          uint64_t v26 = v45;
          if (*(unsigned char *)(v32 + 64))
          {
            BOOL v39 = v38 == 1 && *(void *)(v32 + 56) < v37;
            uint64_t v25 = v46;
            if (!v39) {
              goto LABEL_10;
            }
            char v30 = 1;
          }
          else
          {
            char v30 = 1;
            uint64_t v25 = v46;
          }
        }
        else
        {
          uint64_t v26 = v45;
          uint64_t v25 = v46;
          if (v38 != 1) {
            goto LABEL_10;
          }
          int64_t v37 = 0;
          char v30 = 0;
        }
        *(void *)(v32 + 56) = v37;
        *(unsigned char *)(v32 + 64) = v30;
LABEL_10:
        sub_100505A44();
        sub_100505E90();
        sub_10051B480(v31);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_11:
        v27 += 5;
        if (!--v13) {
          return swift_bridgeObjectRelease();
        }
      }
    }
    unint64_t v40 = v51;
    *unint64_t v51 = v9;
    uint64_t v41 = v53;
    v48(v40, v49, v53);
    id v42 = v9;
    char v43 = sub_1005E1860();
    uint64_t result = v47(v40, v41);
    if (v43)
    {
      sub_100513B78(&off_1006FB678);
      return swift_arrayDestroy();
    }
  }
  else
  {
LABEL_32:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100513B78()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E1850();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 88;
  uint64_t v6 = *(void **)(v0 + 16);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  swift_beginAccess();
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_100515CB0(v9);
  uint64_t result = swift_endAccess();
  uint64_t v10 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_isProcessingUpdates;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_isProcessingUpdates)) {
    return result;
  }
  *(unsigned char *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_isProcessingUpdates) = 1;
  uint64_t result = static MonotonicTime.now()();
  uint64_t v11 = result;
  uint64_t v12 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_lastLoggedSyncRequestsAt;
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_lastLoggedSyncRequestsAt);
  BOOL v14 = __OFSUB__(result, v13);
  uint64_t v15 = result - v13;
  if (result >= v13)
  {
LABEL_8:
    if (!v14) {
      goto LABEL_9;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (__OFSUB__(v13, result))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  BOOL v14 = __OFSUB__(0, v13 - result);
  uint64_t v15 = result - v13;
  if (v14)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  if ((double)v15 / 1000000000.0 > 20.0)
  {
    int64_t v16 = (const void *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
    swift_beginAccess();
    memcpy(v26, v16, sizeof(v26));
    sub_1000B37E0((uint64_t)v26);
    StateWithTasks.logSyncRequests()();
    sub_1000B38FC((uint64_t)v26);
    *(void *)(v1 + v12) = v11;
  }
  sub_100515E04();
  int v17 = (const void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
  swift_beginAccess();
  memcpy(v25, v17, sizeof(v25));
  uint64_t result = StateWithTasks.environment.getter();
  if ((result & 0x100) != 0) {
    goto LABEL_15;
  }
  if (!*(void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_activityTimer))
  {
LABEL_23:
    __break(1u);
    return result;
  }
  swift_retain();
  RestartableTimer.start()();
  swift_release();
  uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_connections);
  if (v18)
  {
    uint64_t v19 = v18 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff;
    swift_beginAccess();
    *(unsigned char *)(v19 + 17) = 0;
  }
LABEL_15:
  uint64_t v20 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_powerTelemetry;
  swift_beginAccess();
  if (*(void *)(v20 + 16))
  {
    memcpy(v24, v17, sizeof(v24));
    char v21 = StateWithTasks.appState.getter() & 1;
    uint64_t v22 = (void *)PushRegistrationInfo.mailboxes.getter();
    sub_100536804(v21, v22, v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger);
    swift_endAccess();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_endAccess();
  }
  *(unsigned char *)(v1 + v10) = 0;
  return result;
}

uint64_t sub_100513EB8()
{
  return sub_100513ECC((uint64_t)&off_1006FB6C8, (uint64_t)&unk_1006FB6D8, (uint64_t)&unk_1006FB6E8);
}

uint64_t sub_100513ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v17[2] = a2;
  void v17[3] = a3;
  v17[1] = a1;
  uint64_t v4 = sub_1005E1850();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (void *)((char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v3 + 16);
  *id v7 = v8;
  uint64_t v9 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v11 = v8;
  char v12 = sub_1005E1860();
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t))(v5 + 8);
  uint64_t result = v13(v7, v4);
  if (v12)
  {
    *id v7 = v11;
    v10(v7, v9, v4);
    id v15 = v11;
    char v16 = sub_1005E1860();
    uint64_t result = v13(v7, v4);
    if (v16)
    {
      sub_100513B78();
      return swift_arrayDestroy();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10051405C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E0ED0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for Engine.Logger(0);
  __chkstk_darwin(v38);
  id v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005E1850();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v12 = *(void **)(v0 + 16);
  *id v11 = v12;
  uint64_t v13 = *(void (**)(void))(v9 + 104);
  unsigned int v43 = enum case for DispatchPredicate.onQueue(_:);
  id v42 = (void (*)(void *, void, uint64_t))v13;
  v13(v11);
  id v40 = v12;
  LOBYTE(v12) = sub_1005E1860();
  uint64_t v41 = *(uint64_t (**)(void *, uint64_t))(v9 + 8);
  uint64_t result = v41(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v39 = v9 + 104;
  id v15 = v5;
  swift_beginAccess();
  uint64_t v16 = StateWithTasks.failOldBackgroundSyncRequests()();
  swift_endAccess();
  if (!*(void *)(v16 + 16)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v17 = v3;
  uint64_t v18 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
  sub_100513170(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, (uint64_t)v7, type metadata accessor for Engine.Logger);
  uint64_t v36 = v17;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v15, v7, v2);
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_1005E0EB0();
  os_log_type_t v20 = sub_1005E25C0();
  int v35 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v37 = v1;
    uint64_t v22 = v21;
    uint64_t v33 = swift_slowAlloc();
    v45[0] = v33;
    *(_DWORD *)uint64_t v22 = 68158466;
    LODWORD(v44) = 2;
    sub_1005E2960();
    *(_WORD *)(v22 + 8) = 256;
    uint64_t v34 = v2;
    char v23 = *(unsigned char *)(v18 + *(int *)(v38 + 20));
    swift_release();
    LOBYTE(v44) = v23;
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v22 + 11) = 2048;
    uint64_t v24 = *(void *)(v16 + 16);
    swift_bridgeObjectRelease();
    uint64_t v44 = v24;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 21) = 2082;
    uint64_t v25 = swift_bridgeObjectRetain();
    uint64_t v26 = sub_100518628(v25);
    uint64_t v38 = (uint64_t)v15;
    uint64_t v27 = v26;
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    uint64_t v44 = sub_100507920(v27, v29, v45);
    sub_1005E2960();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v35, "[%.*hhx] Connections stalled. Failed %ld background sync request(s): %{public}s.", (uint8_t *)v22, 0x1Fu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v38, v34);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v2);
  }
  char v30 = v40;
  *id v11 = v40;
  v42(v11, v43, v8);
  id v31 = v30;
  LOBYTE(v30) = sub_1005E1860();
  uint64_t result = v41(v11, v8);
  if ((v30 & 1) == 0) {
    goto LABEL_11;
  }
  sub_100513B78();
  return swift_arrayDestroy();
}

uint64_t Engine.persistenceDidSend(_:)(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005E1680();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005E16C0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(void *)(v3 + 16);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v3;
  *(void *)(v14 + 24) = a1;
  char v15 = a2 & 1;
  *(unsigned char *)(v14 + 32) = a2 & 1;
  aBlock[4] = sub_100518E40;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046A1E4;
  aBlock[3] = &unk_1006FBCB8;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  sub_1000575F0(a1, v15);
  sub_1005E16A0();
  v18[1] = _swiftEmptyArrayStorage;
  sub_10051BB2C((unint64_t *)&qword_100717E40, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000566C(&qword_100717E48);
  sub_100007494((unint64_t *)&qword_100717E50, &qword_100717E48);
  sub_1005E2AD0();
  sub_1005E2610();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_100514880(uint64_t a1, int a2)
{
  int v24 = a2;
  uint64_t v4 = sub_1005E1850();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = v2;
  uint64_t v8 = *(void **)(v2 + 16);
  *uint64_t v7 = v8;
  uint64_t v9 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v11 = v8;
  char v12 = sub_1005E1860();
  uint64_t v13 = *(void (**)(void *, uint64_t))(v5 + 8);
  v13(v7, v4);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  uint64_t v14 = swift_allocObject();
  char v15 = v10;
  uint64_t v16 = v13;
  uint64_t v17 = a1;
  *(void *)(v14 + 16) = a1;
  char v18 = v24 & 1;
  *(unsigned char *)(v14 + 24) = v24 & 1;
  *uint64_t v7 = v11;
  v15(v7, v9, v4);
  id v19 = v11;
  sub_1000575F0(v17, v18);
  char v20 = sub_1005E1860();
  v16(v7, v4);
  if ((v20 & 1) == 0) {
    goto LABEL_5;
  }
  sub_10000566C(&qword_100718240);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6670;
  *(void *)(inited + 32) = v14 | 0x4000000000000000;
  swift_retain();
  sub_100513B78();
  swift_setDeallocating();
  swift_arrayDestroy();
  return swift_release();
}

uint64_t sub_100514ACC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E0ED0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for Engine.Logger(0);
  __chkstk_darwin();
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1005E1850();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  char v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = *(void **)(v1 + 16);
  *char v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v14 = v13;
  LOBYTE(v13) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    uint64_t v16 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
    sub_100513170(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, (uint64_t)v8, type metadata accessor for Engine.Logger);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32))(v5, v8, v2);
    swift_retain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v17 = sub_1005E0EB0();
    os_log_type_t v18 = sub_1005E25A0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 68157952;
      int v21 = 2;
      sub_1005E2960();
      *(_WORD *)(v19 + 8) = 256;
      v20[11] = *(unsigned char *)(v16 + *(int *)(v6 + 20));
      sub_1005E2960();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "[%.*hhx] Credentials are invalid.", (uint8_t *)v19, 0xBu);
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(unint64_t))(v1 + 32))(0xA00000000000000ELL);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100514E14(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a2;
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for Engine.Logger(0);
  __chkstk_darwin(v27);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *(uint64_t (**)(void))(v3 + 32);
  *(_DWORD *)(swift_allocObject() + 16) = a1;
  uint64_t v13 = v12();
  swift_release();
  id v14 = (uint64_t *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_pendingCredentialsRequests);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v30 = *v14;
  *id v14 = 0x8000000000000000;
  int v28 = a1;
  int v16 = a1;
  uint64_t v17 = v7;
  sub_100519F64(v16, v29, a3, v13, isUniquelyReferenced_nonNull_native);
  *id v14 = v30;
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v18 = v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
  sub_100513170(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, (uint64_t)v11, type metadata accessor for Engine.Logger);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v29 = v6;
  v19(v9, v11, v6);
  swift_retain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  char v20 = sub_1005E0EB0();
  os_log_type_t v21 = sub_1005E2590();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    v31[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 68158466;
    LODWORD(v30) = 2;
    sub_1005E2960();
    *(_WORD *)(v22 + 8) = 256;
    LOBYTE(v30) = *(unsigned char *)(v18 + *(int *)(v27 + 20));
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v22 + 11) = 2080;
    LODWORD(v30) = v13;
    sub_10051B540();
    uint64_t v23 = sub_1005E1F20();
    uint64_t v30 = sub_100507920(v23, v24, v31);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 21) = 1024;
    LODWORD(v30) = v28;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%.*hhx] Sending action %s: request %u for credentials.", (uint8_t *)v22, 0x1Bu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v9, v29);
}

uint64_t sub_1005151F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005E0ED0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Engine.Logger(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_pendingCredentialsRequests);
  swift_beginAccess();
  uint64_t v12 = sub_100024260(a1);
  if ((v13 & 1) == 0) {
    return swift_endAccess();
  }
  unint64_t v14 = v12;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v11;
  uint64_t v27 = *v11;
  *uint64_t v11 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_100520D48();
    uint64_t v16 = v27;
  }
  int v25 = *(_DWORD *)(*(void *)(v16 + 56) + 24 * v14);
  sub_100519D94(v14, v16);
  *uint64_t v11 = v16;
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v17 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
  sub_100513170(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, (uint64_t)v10, type metadata accessor for Engine.Logger);
  uint64_t v26 = v5;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_retain_n();
  uint64_t v18 = sub_1005E0EB0();
  os_log_type_t v19 = sub_1005E25A0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 68158208;
    int v28 = 2;
    uint64_t v24 = v4;
    sub_1005E2960();
    *(_WORD *)(v20 + 8) = 256;
    char v21 = *(unsigned char *)(v17 + *(int *)(v8 + 20));
    swift_release();
    LOBYTE(v28) = v21;
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v20 + 11) = 1024;
    swift_release();
    int v28 = v25;
    uint64_t v4 = v24;
    sub_1005E2960();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "[%.*hhx] Did not receive any credentials %u.", (uint8_t *)v20, 0x11u);
    swift_slowDealloc();
    swift_release();
  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v7, v4);
}

uint64_t sub_100515574(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v42 = a1;
  uint64_t v5 = sub_1005E0ED0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t v40 = type metadata accessor for Engine.Logger(0);
  uint64_t v12 = __chkstk_darwin(v40);
  unint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v35 - v15;
  uint64_t v17 = (uint64_t *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_pendingCredentialsRequests);
  swift_beginAccess();
  uint64_t v18 = *v17;
  int v41 = a2;
  unint64_t v19 = sub_100515AB4(v18, a2);
  if (v21 == 0xFF)
  {
    uint64_t v29 = v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
    sub_100513170(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, (uint64_t)v14, type metadata accessor for Engine.Logger);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v14, v5);
    swift_retain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v30 = sub_1005E0EB0();
    os_log_type_t v31 = sub_1005E25A0();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 68158208;
      int v43 = 2;
      sub_1005E2960();
      *(_WORD *)(v32 + 8) = 256;
      LOBYTE(v43) = *(unsigned char *)(v29 + *(int *)(v40 + 20));
      sub_1005E2960();
      swift_release();
      *(_WORD *)(v32 + 11) = 1024;
      int v43 = v41;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "[%.*hhx] Did receive credentials %u for, but the request is unknown.", (uint8_t *)v32, 0x11u);
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    unint64_t v22 = v19;
    unsigned __int8 v23 = v21;
    uint64_t v39 = v20;
    unsigned int v38 = v21 & 1;
    uint64_t v24 = v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
    sub_100513170(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, (uint64_t)v16, type metadata accessor for Engine.Logger);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v16, v5);
    swift_retain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    int v25 = sub_1005E0EB0();
    os_log_type_t v26 = sub_1005E2590();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (_DWORD *)swift_slowAlloc();
      uint64_t v37 = v5;
      int v28 = v27;
      *uint64_t v27 = 68158208;
      int v43 = 2;
      unint64_t v36 = v22;
      sub_1005E2960();
      *((_WORD *)v28 + 4) = 256;
      LOBYTE(v43) = *(unsigned char *)(v24 + *(int *)(v40 + 20));
      sub_1005E2960();
      swift_release();
      *(_WORD *)((char *)v28 + 11) = 1024;
      int v43 = v41;
      unint64_t v22 = v36;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "[%.*hhx] Did receive credentials %u.", (uint8_t *)v28, 0x11u);
      uint64_t v5 = v37;
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    uint64_t v33 = v39;
    sub_100515C24((uint64_t)&v43, v22, v39, v38, *v17);
    v44(v42);
    swift_release();
    swift_beginAccess();
    sub_10051A2EC((uint64_t)&v43, v22, v33);
    swift_endAccess();
    swift_release();
    return sub_10051A3F0(v22, v33, v23);
  }
}

unint64_t sub_100515AB4(uint64_t a1, int a2)
{
  unint64_t result = sub_1000B1E48(a1);
  if (v6) {
    goto LABEL_27;
  }
  int v7 = *(_DWORD *)(a1 + 36);
  if (v7 != v5) {
    goto LABEL_26;
  }
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  if (result == v8) {
    return 0;
  }
  uint64_t v9 = a1 + 64;
  unint64_t v10 = (unint64_t)(v8 + 63) >> 6;
  while ((result & 0x8000000000000000) == 0 && (uint64_t)result < v8)
  {
    if (v7 != v5) {
      goto LABEL_25;
    }
    unint64_t v11 = result >> 6;
    uint64_t v12 = *(void *)(v9 + 8 * (result >> 6));
    if ((v12 & (1 << result)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(*(void *)(a1 + 56) + 24 * result) == a2) {
      return result;
    }
    unint64_t v13 = v12 & (-2 << (result & 0x3F));
    if (v13)
    {
      unint64_t result = __clz(__rbit64(v13)) | result & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v14 = v11 + 1;
      unint64_t result = 1 << *(unsigned char *)(a1 + 32);
      if (v11 + 1 < v10)
      {
        unint64_t v15 = *(void *)(v9 + 8 * v14);
        if (!v15)
        {
          unint64_t v14 = v11 + 2;
          unint64_t result = 1 << *(unsigned char *)(a1 + 32);
          if (v11 + 2 >= v10) {
            goto LABEL_7;
          }
          unint64_t v15 = *(void *)(v9 + 8 * v14);
          if (!v15)
          {
            while (v10 - 3 != v11)
            {
              unint64_t v15 = *(void *)(a1 + 88 + 8 * v11++);
              if (v15)
              {
                unint64_t v14 = v11 + 2;
                goto LABEL_16;
              }
            }
            unint64_t result = 1 << *(unsigned char *)(a1 + 32);
            goto LABEL_7;
          }
        }
LABEL_16:
        unint64_t result = __clz(__rbit64(v15)) + (v14 << 6);
      }
    }
LABEL_7:
    int v5 = *(_DWORD *)(a1 + 36);
    if (result == v8) {
      return 0;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100515C24(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v5 = *(unsigned int *)(*(void *)(a5 + 48) + 4 * a2);
    uint64_t v6 = *(void *)(a5 + 56) + 24 * a2;
    int v7 = *(_DWORD *)v6;
    uint64_t v9 = *(void *)(v6 + 8);
    uint64_t v8 = *(void *)(v6 + 16);
    *(_DWORD *)unint64_t result = v7;
    *(void *)(result + 8) = v9;
    *(void *)(result + 16) = v8;
    swift_retain();
    return v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_100515CB0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_100532F2C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100515E04()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_100718230);
  uint64_t result = __chkstk_darwin(v2 - 8);
  uint64_t v61 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_connections;
  uint64_t v5 = *(uint64_t *)((char *)&v0->isa + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_connections);
  if (!v5) {
    return result;
  }
  uint64_t v57 = (uint64_t)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = 0;
  int v7 = (uint64_t *)((char *)v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_pendingUpdates);
  uint64_t v8 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_externalState;
  unint64_t v63 = (char *)v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state;
  uint64_t v62 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_shouldLogForFirstConnection;
  swift_retain();
  swift_beginAccess();
  uint64_t v9 = *v7;
  uint64_t v60 = v7;
  *int v7 = (uint64_t)_swiftEmptyArrayStorage;
  sub_10051671C(v9);
  uint64_t v11 = *(void *)(v9 + 16);
  if (!v11) {
    goto LABEL_38;
  }
  uint64_t v50 = (char *)v1 + v8;
  uint64_t v52 = (char *)v69 + 1;
  uint64_t v53 = (char *)v69 + 4;
  *(void *)&long long v10 = 68157952;
  long long v51 = v10;
  uint64_t v59 = v5;
  while (2)
  {
    uint64_t v12 = 0;
    while (1)
    {
      uint64_t v13 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        goto LABEL_47;
      }
      unint64_t v14 = *(void *)(v9 + 8 * v12 + 32);
      if (v14 >> 62 == 1)
      {
        uint64_t v15 = v14 & 0x3FFFFFFFFFFFFFFFLL;
        if (*(unsigned char *)(v15 + 24) == 1
          && ((*(void *)(v15 + 16) >> 59) & 0x1E | (*(void *)(v15 + 16) >> 2) & 1) == 2)
        {
          break;
        }
      }
      ++v12;
      if (v13 == v11) {
        goto LABEL_12;
      }
    }
    uint64_t v16 = (uint64_t)v50;
    swift_beginAccess();
    sub_100007A48(v16, &qword_100718238);
    uint64_t v17 = type metadata accessor for Activity(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    swift_endAccess();
LABEL_12:
    id v18 = (id)*tracingLog.unsafeMutableAddressor();
    char v19 = sub_1005E28A0();

    if (v19)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = 0;
      do
      {
        uint64_t v21 = *(void *)(v9 + 8 * v20++ + 32);
        v69[0] = v21;
        swift_retain();
        sub_100517270(v69, (uint64_t)v1);
        swift_release();
      }
      while (v11 != v20);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    swift_retain();
    for (uint64_t i = 0; i != v11; ++i)
    {
      unint64_t v23 = *(void *)(v9 + 8 * i + 32);
      if (v23 >> 62 != 1) {
        continue;
      }
      unint64_t v24 = *(void *)((v23 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      if ((*(unsigned char *)((v23 & 0x3FFFFFFFFFFFFFFFLL) + 0x18) & 1) == 0)
      {
        swift_retain();
        sub_1005151F0(v24);
        swift_release();
        continue;
      }
      int v25 = (v24 >> 59) & 0x1E | (v24 >> 2) & 1;
      if (v25 == 1)
      {
        int v38 = *(_DWORD *)((v24 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v39 = *(void *)((v24 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
        swift_retain();
        sub_1000575F0(v24, 1);
        sub_100515574(v39, v38);
        swift_release();
        uint64_t v40 = v24;
LABEL_33:
        sub_100057604(v40, 1);
        continue;
      }
      if (v25 == 21 && v24 == 0xA000000000000004)
      {
        uint64_t v27 = *(uint64_t *)((char *)&v1->isa + v61);
        if (v27)
        {
          int v28 = (unsigned char *)(v27 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_credentialsState);
          swift_beginAccess();
          if (*v28 == 2)
          {
            uint64_t v56 = v28;
            uint64_t v29 = v27 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
            swift_beginAccess();
            uint64_t v30 = v29;
            uint64_t v31 = v57;
            sub_1000079E4(v30, v57, &qword_100718230);
            uint64_t v32 = sub_1005E0ED0();
            uint64_t v33 = *(void *)(v32 - 8);
            uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 48);
            uint64_t v55 = v32;
            uint64_t result = v34(v31, 1);
            if (result == 1) {
              goto LABEL_51;
            }
            swift_retain();
            swift_retain();
            sub_1000575F0(0xA000000000000004, 1);
            swift_retain();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            uint64_t v35 = sub_1005E0EB0();
            os_log_type_t v36 = sub_1005E25C0();
            os_log_t v58 = v35;
            int v54 = v36;
            if (os_log_type_enabled(v35, v36))
            {
              uint64_t v37 = swift_slowAlloc();
              *(_DWORD *)uint64_t v37 = v51;
              LODWORD(v69[0]) = 2;
              sub_1005E2960();
              *(_WORD *)(v37 + 8) = 256;
              LOBYTE(v69[0]) = *(unsigned char *)(v27 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
              sub_1005E2960();
              swift_release();
              _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v54, "[%.*hhx] Credentials were invalid. Credentials did change.", (uint8_t *)v37, 0xBu);
              swift_slowDealloc();
            }
            else
            {
              swift_release();
            }
            int v41 = v56;

            (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v57, v55);
            swift_beginAccess();
            *((void *)v41 + 1) = static MonotonicTime.now()();
            *int v41 = 0;
            swift_endAccess();
            uint64_t v42 = v27 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff;
            swift_beginAccess();
            *(void *)uint64_t v42 = 0;
            *(void *)(v42 + 8) = 0;
            *(_WORD *)(v42 + 16) = 1;
            sub_100529EC8();
            sub_10052A5DC();
            swift_release();
            swift_release();
            uint64_t v40 = 0xA000000000000004;
            goto LABEL_33;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v5 = v59;
    swift_retain();
    StateWithTasks.update(updates:send:persist:)(v9, (uint64_t (*)(uint64_t, uint64_t))sub_100519458, v5, (void (*)(unint64_t))sub_100519450, v1);
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
    if (*((unsigned char *)&v1->isa + v62))
    {
      int v43 = v63;
      *((unsigned char *)&v1->isa + v62) = 0;
      memcpy(v70, v43, 0x138uLL);
      sub_1000B37E0((uint64_t)v70);
      StateWithTasks.logForDidCreateFirstConnection()();
      sub_1000B38FC((uint64_t)v70);
    }
    swift_release();
    uint64_t v9 = *v60;
    uint64_t *v60 = (uint64_t)_swiftEmptyArrayStorage;
    sub_10051671C(v9);
    uint64_t v11 = *(void *)(v9 + 16);
    if (v11) {
      continue;
    }
    break;
  }
LABEL_38:
  swift_bridgeObjectRelease();
  uint64_t v44 = v63;
  swift_beginAccess();
  memcpy(v69, v44, sizeof(v69));
  sub_1000B37E0((uint64_t)v69);
  StateWithTasks.connectionLimitsAndUsage.getter((uint64_t)&v64);
  sub_1000B38FC((uint64_t)v69);
  sub_10052330C();
  long long v66 = v65;
  uint64_t v68 = v65;
  sub_10001D550((uint64_t)&v68);
  sub_1000E834C((uint64_t)&v66 + 8, (uint64_t)&v67);
  sub_1000E83D4(&v67);
  uint64_t v45 = (uint64_t *)(v5 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  uint64_t v6 = *v45;
  if ((unint64_t)*v45 >> 62)
  {
LABEL_47:
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_1005E2FB0();
    uint64_t v46 = result;
    if (!result) {
      goto LABEL_48;
    }
LABEL_40:
    if (v46 >= 1)
    {
      for (uint64_t j = 0; j != v46; ++j)
      {
        if ((v6 & 0xC000000000000001) != 0)
        {
          uint64_t v48 = sub_1005E2CF0();
        }
        else
        {
          uint64_t v48 = *(void *)(v6 + 8 * j + 32);
          swift_retain();
        }
        (*(void (**)(void))(*(void *)v48 + 560))();
        swift_release();
      }
      goto LABEL_48;
    }
    __break(1u);
LABEL_51:
    __break(1u);
  }
  else
  {
    uint64_t v46 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v46) {
      goto LABEL_40;
    }
LABEL_48:
    swift_bridgeObjectRelease_n();
    return swift_release();
  }
  return result;
}

uint64_t sub_100516660(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))(a2 + 32))();
  id v5 = (id)*tracingLog.unsafeMutableAddressor();
  char v6 = sub_1005E28A0();

  if ((v6 & 1) != 0 && ((a1 >> 58) & 0x3C | (a1 >> 1) & 3) == 1)
  {
    swift_retain();
    uint64_t v7 = swift_bridgeObjectRetain();
    sub_10051B93C(v7, a2);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v4;
}

uint64_t sub_10051671C(uint64_t a1)
{
  uint64_t v3 = sub_1005E0ED0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v59 = v3;
  uint64_t v60 = v4;
  uint64_t v5 = __chkstk_darwin(v3);
  os_log_t v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v56 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v56 - v11;
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v56 - v13;
  uint64_t v15 = type metadata accessor for Engine.Logger(0);
  uint64_t v16 = __chkstk_darwin(v15);
  id v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v56 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  unint64_t v24 = (char *)&v56 - v23;
  uint64_t result = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v56 - v26;
  uint64_t v28 = *(void *)(a1 + 16);
  if (v28)
  {
    uint64_t v29 = 0;
    int v30 = 0;
    do
    {
      uint64_t v31 = *(void *)(a1 + 8 * v29 + 32) >> 62;
      int v32 = v30 | 1;
      if (v31 == 1) {
        v30 |= 2u;
      }
      if (!v31) {
        int v30 = v32;
      }
      ++v29;
    }
    while (v28 != v29);
    uint64_t v57 = result;
    switch(v30)
    {
      case 3u:
        uint64_t v39 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
        sub_100513170(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, (uint64_t)v21, type metadata accessor for Engine.Logger);
        uint64_t v40 = v21;
        uint64_t v34 = v59;
        (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v9, v40, v59);
        swift_retain_n();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        swift_bridgeObjectRetain_n();
        int v41 = sub_1005E0EB0();
        os_log_type_t v42 = sub_1005E2580();
        if (os_log_type_enabled(v41, v42))
        {
          uint64_t v43 = swift_slowAlloc();
          *(_DWORD *)uint64_t v43 = 68158208;
          LODWORD(v61) = 2;
          sub_1005E2960();
          *(_WORD *)(v43 + 8) = 256;
          char v44 = *(unsigned char *)(v39 + *(int *)(v57 + 20));
          swift_release();
          LOBYTE(v61) = v44;
          sub_1005E2960();
          swift_release();
          *(_WORD *)(v43 + 11) = 2048;
          swift_bridgeObjectRelease();
          uint64_t v61 = v28;
          sub_1005E2960();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v41, v42, "[%.*hhx] Processing %ld update(s) from network and persistence", (uint8_t *)v43, 0x15u);
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
        }
        unint64_t v14 = v9;
        break;
      case 2u:
        uint64_t v45 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
        sub_100513170(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, (uint64_t)v24, type metadata accessor for Engine.Logger);
        uint64_t v34 = v59;
        (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v12, v24, v59);
        swift_retain_n();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        swift_bridgeObjectRetain_n();
        uint64_t v46 = sub_1005E0EB0();
        os_log_type_t v47 = sub_1005E2580();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = swift_slowAlloc();
          *(_DWORD *)uint64_t v48 = 68158208;
          LODWORD(v61) = 2;
          sub_1005E2960();
          *(_WORD *)(v48 + 8) = 256;
          char v49 = *(unsigned char *)(v45 + *(int *)(v57 + 20));
          swift_release();
          LOBYTE(v61) = v49;
          sub_1005E2960();
          swift_release();
          *(_WORD *)(v48 + 11) = 2048;
          swift_bridgeObjectRelease();
          uint64_t v61 = v28;
          sub_1005E2960();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v46, v47, "[%.*hhx] Processing %ld update(s) from persistence", (uint8_t *)v48, 0x15u);
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
        }
        unint64_t v14 = v12;
        break;
      case 1u:
        uint64_t v33 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
        sub_100513170(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, (uint64_t)v27, type metadata accessor for Engine.Logger);
        uint64_t v34 = v59;
        (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v14, v27, v59);
        swift_retain_n();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        swift_bridgeObjectRetain_n();
        uint64_t v35 = sub_1005E0EB0();
        os_log_type_t v36 = sub_1005E2580();
        if (os_log_type_enabled(v35, v36))
        {
          uint64_t v37 = swift_slowAlloc();
          *(_DWORD *)uint64_t v37 = 68158208;
          LODWORD(v61) = 2;
          sub_1005E2960();
          *(_WORD *)(v37 + 8) = 256;
          char v38 = *(unsigned char *)(v33 + *(int *)(v57 + 20));
          swift_release();
          LOBYTE(v61) = v38;
          sub_1005E2960();
          swift_release();
          *(_WORD *)(v37 + 11) = 2048;
          swift_bridgeObjectRelease();
          uint64_t v61 = v28;
          sub_1005E2960();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v35, v36, "[%.*hhx] Processing %ld update(s) from network", (uint8_t *)v37, 0x15u);
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
        }
        break;
      default:
        uint64_t v50 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger;
        sub_100513170(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_logger, (uint64_t)v18, type metadata accessor for Engine.Logger);
        uint64_t v34 = v59;
        long long v51 = v58;
        (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v58, v18, v59);
        swift_retain_n();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        swift_bridgeObjectRetain_n();
        uint64_t v52 = sub_1005E0EB0();
        os_log_type_t v53 = sub_1005E2580();
        if (os_log_type_enabled(v52, v53))
        {
          uint64_t v54 = swift_slowAlloc();
          *(_DWORD *)uint64_t v54 = 68158208;
          LODWORD(v61) = 2;
          sub_1005E2960();
          *(_WORD *)(v54 + 8) = 256;
          char v55 = *(unsigned char *)(v50 + *(int *)(v57 + 20));
          swift_release();
          LOBYTE(v61) = v55;
          sub_1005E2960();
          swift_release();
          *(_WORD *)(v54 + 11) = 2048;
          swift_bridgeObjectRelease();
          uint64_t v61 = v28;
          sub_1005E2960();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v52, v53, "[%.*hhx] Processing %ld update(s)", (uint8_t *)v54, 0x15u);
          swift_slowDealloc();

          unint64_t v14 = v58;
        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
          unint64_t v14 = v51;
        }
        break;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v14, v34);
  }
  return result;
}

uint64_t sub_100517018(uint64_t a1)
{
  uint64_t v2 = sub_1005E1850();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = *(void **)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v9 = (unint64_t *)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
    swift_beginAccess();
    v12[0] = *v9;
    v12[1] = (unint64_t)sub_10052932C;
    void v12[2] = 0;
    uint64_t v12[3] = (unint64_t)sub_10051A408;
    v12[4] = 0;
    v12[5] = (unint64_t)sub_10051A46C;
    v12[6] = 0;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_100517DBC(v12);
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005171B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  Swift::UInt v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  char v6 = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *a1;
  *a1 = 0x8000000000000000;
  sub_10051A0B0(0x100000000uLL, v5, v6, v3, v4, isUniquelyReferenced_nonNull_native);
  *a1 = v9;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100517270(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v62 = a2;
  uint64_t v5 = sub_1005E0D80();
  uint64_t v63 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v7 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005E0D40();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v51 - v11;
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v17 = (char *)v51 - v16;
  uint64_t v18 = *a1;
  if ((unint64_t)*a1 >> 62 == 1)
  {
    uint64_t v19 = v18 & 0x3FFFFFFFFFFFFFFFLL;
    unint64_t v20 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    if (*(unsigned char *)(v19 + 24) == 1 && ((v20 >> 59) & 0x1E | (v20 >> 2) & 1) == 2)
    {
      uint64_t v57 = v15;
      uint64_t v60 = result;
      uint64_t v61 = v14;
      uint64_t v22 = v20 & 0xFFFFFFFFFFFFFFBLL;
      int v23 = *(_DWORD *)(v22 + 16);
      uint64_t v54 = *(unsigned __int8 *)(v22 + 24);
      uint64_t v24 = *(void *)(v22 + 32);
      uint64_t v25 = *(unsigned __int8 *)(*(void *)(v62 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_tracingIDOwner) + 16);
      swift_bridgeObjectRetain();
      LODWORD(v56) = v23;
      int v26 = v23;
      uint64_t v27 = v7;
      OSSignpostID.init(engine:kind:idA:idB:)(v25, 0, v26, 0);
      uint64_t v28 = tracingSignposter.unsafeMutableAddressor();
      uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
      uint64_t v58 = v5;
      v29(v7, v28, v5);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      int v30 = sub_1005E0D70();
      int v55 = sub_1005E26E0();
      char v31 = sub_1005E28A0();
      uint64_t v59 = v3;
      if (v31)
      {
        int v32 = *(void (**)(uint64_t, char *, uint64_t))(v61 + 16);
        v51[1] = (v61 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        uint64_t v52 = v32;
        os_log_t v53 = v30;
        v32((uint64_t)v12, v17, v60);
        uint64_t v33 = swift_slowAlloc();
        v51[0] = swift_slowAlloc();
        uint64_t v66 = v51[0];
        *(_DWORD *)uint64_t v33 = 67109890;
        LODWORD(v65[0]) = v56;
        sub_1005E2960();
        uint64_t v56 = v33;
        *(_WORD *)(v33 + 8) = 2082;
        uint64_t v37 = v56;
        uint64_t v54 = v56 + 10;
        uint64_t v38 = sub_1005E2CB0();
        v65[0] = sub_100507920(v38, v39, &v66);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v37 + 18) = 2048;
        if (v24)
        {
          uint64_t v40 = *(void *)(v24 + 16);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v40 = 0;
        }
        uint64_t v41 = v56;
        v65[0] = v40;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v41 + 28) = 2082;
        os_log_type_t v42 = (const void *)(v62 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_state);
        swift_beginAccess();
        memcpy(v65, v42, sizeof(v65));
        uint64_t v43 = StateWithTasks.environment.getter();
        uint64_t v46 = Environment.description.getter(v43 & 0x101FF, v44, v45);
        uint64_t v64 = sub_100507920(v46, v47, &v66);
        sub_1005E2960();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_signpost_id_t v48 = sub_1005E0D30();
        os_log_t v49 = v53;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v53, (os_signpost_type_t)v55, v48, "SyncRequest", "Begin syncRequestId: #%u, kind: %{public}s, mailboxes: %ld, %{public}s", (uint8_t *)v41, 0x26u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v35 = v60;
        uint64_t v34 = v61;
        (*(void (**)(char *, uint64_t))(v61 + 8))(v12, v60);
        os_log_type_t v36 = v52;
      }
      else
      {
        swift_release_n();

        swift_bridgeObjectRelease_n();
        uint64_t v35 = v60;
        uint64_t v34 = v61;
        os_log_type_t v36 = *(void (**)(uint64_t, char *, uint64_t))(v61 + 16);
      }
      uint64_t v50 = v58;
      v36(v57, v17, v35);
      sub_1005E0E90();
      swift_allocObject();
      sub_1005E0E80();
      swift_release();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v27, v50);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v35);
    }
  }
  return result;
}

uint64_t sub_100517854(int *a1, uint64_t a2)
{
  uint64_t v55 = a2;
  uint64_t v3 = sub_1005E0DA0();
  uint64_t v50 = *(void *)(v3 - 8);
  uint64_t v51 = v3;
  __chkstk_darwin(v3);
  os_log_t v49 = &v43[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1005E0D80();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1005E0D40();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = &v43[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = &v43[-v15];
  __chkstk_darwin(v14);
  uint64_t v18 = &v43[-v17];
  uint64_t v19 = *(unsigned __int8 *)(*(void *)(v55 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_tracingIDOwner) + 16);
  int v56 = *a1;
  OSSignpostID.init(engine:kind:idA:idB:)(v19, 0, v56, 0);
  uint64_t v20 = tracingSignposter.unsafeMutableAddressor();
  uint64_t v54 = v6;
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v55 = v5;
  v21(v8, v20, v5);
  uint64_t v52 = v9;
  uint64_t v53 = v10;
  os_signpost_id_t v48 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16);
  v48(v16, v18, v9);
  sub_1005E0E90();
  swift_allocObject();
  sub_1005E0E80();
  uint64_t v22 = sub_1005E0D70();
  sub_1005E0E70();
  int v23 = sub_1005E26D0();
  if (sub_1005E28A0())
  {
    int v44 = v23;
    os_log_t v45 = v22;
    uint64_t v46 = v8;
    unint64_t v47 = v18;
    uint64_t v24 = v52;
    swift_retain();
    uint64_t v25 = v49;
    sub_1005E0EA0();
    swift_release();
    uint64_t v27 = v50;
    uint64_t v26 = v51;
    int v28 = (*(uint64_t (**)(unsigned char *, uint64_t))(v50 + 88))(v25, v51);
    uint64_t v29 = v48;
    if (v28 == enum case for OSSignpostError.doubleEnd(_:))
    {
      char v30 = 0;
      char v31 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v25, v26);
      char v31 = "End syncRequestId: #%u";
      char v30 = 1;
    }
    uint64_t v35 = v13;
    os_log_type_t v36 = v16;
    uint64_t v37 = v13;
    uint64_t v38 = v31;
    v29(v16, v35, v24);
    uint64_t v39 = swift_slowAlloc();
    *(unsigned char *)uint64_t v39 = 0;
    *(unsigned char *)(v39 + 1) = v30;
    *(_WORD *)(v39 + 2) = 1024;
    int v57 = v56;
    sub_1005E2960();
    os_signpost_id_t v40 = sub_1005E0D30();
    os_log_t v41 = v45;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v45, (os_signpost_type_t)v44, v40, "SyncRequest", v38, (uint8_t *)v39, 8u);
    swift_slowDealloc();
    swift_release();

    os_log_type_t v42 = *(void (**)(unsigned char *, uint64_t))(v53 + 8);
    v42(v37, v24);
    (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v46, v55);
    v42(v47, v24);
    return ((uint64_t (*)(unsigned char *, uint64_t))v42)(v36, v24);
  }
  else
  {
    swift_release();

    uint64_t v32 = v52;
    uint64_t v33 = *(void (**)(unsigned char *, uint64_t))(v53 + 8);
    v33(v13, v52);
    (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v8, v55);
    return ((uint64_t (*)(unsigned char *, uint64_t))v33)(v18, v32);
  }
}

uint64_t Engine.Logger.l.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1005E0ED0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t Engine.Logger.id.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Engine.Logger(0) + 20));
}

uint64_t sub_100517DBC(unint64_t *a1)
{
  uint64_t v73 = type metadata accessor for ConnectionStatus(0);
  uint64_t v66 = *(void *)(v73 - 8);
  uint64_t v2 = __chkstk_darwin(v73);
  uint64_t v4 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v60 - v5;
  uint64_t v7 = sub_10000566C(&qword_1007182A0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v76 = (uint64_t)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v74 = (uint64_t)&v60 - v10;
  uint64_t v72 = sub_10000566C(&qword_1007182A8);
  uint64_t v11 = *(void **)(v72 - 8);
  uint64_t v12 = __chkstk_darwin(v72);
  uint64_t v62 = (uint64_t)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v60 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v60 - v18;
  __chkstk_darwin(v17);
  uint64_t v75 = (char *)&v60 - v20;
  unint64_t v21 = sub_100505600((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v22 = *a1;
  uint64_t v79 = (void (*)(void **))a1[1];
  unint64_t v24 = a1[2];
  int v23 = (uint64_t (*)(char *))a1[3];
  uint64_t v77 = (void *)v21;
  uint64_t v78 = v23;
  v86[0] = v22;
  uint64_t v25 = (void *)a1[4];
  uint64_t v61 = (void (*)(uint64_t))a1[5];
  unint64_t v26 = a1[6];
  uint64_t v83 = v25;
  unint64_t v84 = v24;
  unint64_t v63 = v26;
  if (v22 >> 62) {
    goto LABEL_39;
  }
  uint64_t v80 = v22 & 0xFFFFFFFFFFFFFF8;
  uint64_t v27 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_10002292C((uint64_t)v86);
  swift_retain();
  swift_retain();
  swift_retain();
LABEL_3:
  unint64_t v28 = 0;
  unint64_t v81 = v22;
  unint64_t v82 = v22 & 0xC000000000000001;
  id v70 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 6);
  NSString v71 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 7);
  uint64_t v68 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
  uint64_t v69 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56);
  unint64_t v22 = (unint64_t)&qword_1007182A8;
  unint64_t v67 = v6;
  long long v65 = v4;
  uint64_t v64 = v27;
  while (1)
  {
    if (v28 != v27)
    {
      do
      {
        if (v82)
        {
          uint64_t v30 = sub_1005E2CF0();
          unint64_t v31 = v28 + 1;
          if (__OFADD__(v28, 1)) {
            goto LABEL_35;
          }
        }
        else
        {
          if ((v28 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
LABEL_39:
            uint64_t v80 = v22 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            sub_10002292C((uint64_t)v86);
            swift_retain();
            swift_retain();
            swift_retain();
            uint64_t v27 = sub_1005E2FB0();
            sub_10001D550((uint64_t)v86);
            goto LABEL_3;
          }
          if (v28 >= *(void *)(v80 + 16)) {
            goto LABEL_36;
          }
          uint64_t v30 = *(void *)(v81 + 8 * v28 + 32);
          swift_retain();
          unint64_t v31 = v28 + 1;
          if (__OFADD__(v28, 1)) {
            goto LABEL_35;
          }
        }
        uint64_t v85 = (void *)v30;
        v79(&v85);
        swift_release();
        sub_10001FDF0((uint64_t)v16, (uint64_t)v19, &qword_1007182A8);
        uint64_t v11 = v83;
        if (v78(v19))
        {
          sub_10001FDF0((uint64_t)v19, v74, &qword_1007182A8);
          uint64_t v29 = 0;
          unint64_t v28 = v31;
          goto LABEL_20;
        }
        sub_100007A48((uint64_t)v19, &qword_1007182A8);
        ++v28;
      }
      while (v31 != v27);
    }
    uint64_t v29 = 1;
    unint64_t v28 = v27;
LABEL_20:
    uint64_t v32 = v72;
    uint64_t v33 = 1;
    uint64_t v34 = v74;
    (*v71)(v74, v29, 1, v72);
    uint64_t v35 = v34;
    uint64_t v36 = v76;
    sub_10001FDF0(v35, v76, &qword_1007182A0);
    if ((*v70)(v36, 1, v32) != 1)
    {
      uint64_t v37 = v62;
      sub_10001FDF0(v76, v62, &qword_1007182A8);
      v61(v37);
      sub_100007A48(v37, &qword_1007182A8);
      uint64_t v33 = 0;
    }
    uint64_t v38 = (uint64_t)v75;
    uint64_t v39 = v33;
    uint64_t v40 = v73;
    (*v69)(v75, v39, 1, v73);
    if ((*v68)(v38, 1, v40) == 1)
    {
      sub_10001D550((uint64_t)v86);
      swift_release();
      swift_release();
      swift_release();
      return (uint64_t)v77;
    }
    sub_1005057C0(v38, (uint64_t)v6);
    uint64_t v11 = v6;
    uint64_t v41 = ConnectionStatus.mailbox.getter();
    if (v41) {
      break;
    }
LABEL_6:
    uint64_t v6 = v67;
    sub_100518D58((uint64_t)v67, type metadata accessor for ConnectionStatus);
  }
  uint64_t v43 = (uint64_t)v6;
  uint64_t v6 = (char *)v41;
  unsigned int v44 = v42;
  sub_100513170(v43, (uint64_t)v4, type metadata accessor for ConnectionStatus);
  uint64_t v11 = v77;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v85 = v11;
  unsigned int v46 = v44;
  unint64_t v48 = sub_1003F6540((uint64_t)v6, v44);
  uint64_t v49 = v11[2];
  BOOL v50 = (v47 & 1) == 0;
  uint64_t v51 = v49 + v50;
  if (__OFADD__(v49, v50)) {
    goto LABEL_37;
  }
  char v52 = v47;
  if (v11[3] >= v51)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v11 = &v85;
      sub_10052109C();
    }
    goto LABEL_30;
  }
  sub_1005206A8(v51, isUniquelyReferenced_nonNull_native);
  uint64_t v11 = v85;
  unint64_t v53 = sub_1003F6540((uint64_t)v6, v46);
  if ((v52 & 1) == (v54 & 1))
  {
    unint64_t v48 = v53;
LABEL_30:
    uint64_t v77 = v85;
    if (v52)
    {
      uint64_t v4 = v65;
      sub_10051BEB0((uint64_t)v65, v85[7] + *(void *)(v66 + 72) * v48);
    }
    else
    {
      v85[(v48 >> 6) + 8] |= 1 << v48;
      uint64_t v55 = v77[6] + 16 * v48;
      *(void *)uint64_t v55 = v6;
      *(_DWORD *)(v55 + 8) = v46;
      uint64_t v4 = v65;
      sub_1005057C0((uint64_t)v65, v77[7] + *(void *)(v66 + 72) * v48);
      uint64_t v56 = v77[2];
      BOOL v57 = __OFADD__(v56, 1);
      uint64_t v58 = v56 + 1;
      if (v57) {
        goto LABEL_38;
      }
      v77[2] = v58;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v27 = v64;
    goto LABEL_6;
  }
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

int64_t sub_1005184E4@<X0>(int64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  int64_t v5 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  char v6 = *(unsigned char *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  char v9 = *(unsigned char *)(v2 + 40);
  uint64_t v10 = *(void *)(v2 + 48);
  uint64_t result = sub_10051B84C(*(void *)v2, v4, v6, result, v7, v8, v9, v10);
  if (v12 == -1)
  {
    sub_10009AF40(v7, v8, v9);
    uint64_t v11 = v8;
    uint64_t result = v7;
    if (v9)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
  }
  else if (v12)
  {
    goto LABEL_18;
  }
  if (v6) {
    goto LABEL_18;
  }
  if (v11 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (result < v5)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((v9 & 1) == 0)
  {
    if (v8 == v11)
    {
      if (v7 >= result)
      {
        *(void *)a2 = v5;
        *(void *)(a2 + 8) = v4;
        *(unsigned char *)(a2 + 16) = 0;
        *(void *)(a2 + 24) = result;
        *(void *)(a2 + 32) = v11;
        *(unsigned char *)(a2 + 40) = 0;
        *(void *)(a2 + 48) = v10;
        return result;
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1005185E8()
{
  return sub_1005131D8(v0);
}

uint64_t sub_1005185F0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100518600()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100518628(uint64_t a1)
{
  sub_10051B718(6, a1, (uint64_t)&v46);
  long long v65 = v46;
  char v66 = v47;
  long long v63 = v48;
  char v64 = v49;
  uint64_t v62 = v50;
  sub_10051A54C();
  if (v1 < 6)
  {
    sub_10051A54C();
    if (v18)
    {
      uint64_t v19 = v18;
      v59[0] = _swiftEmptyArrayStorage;
      int64_t v20 = v18 & ~(v18 >> 63);
      unint64_t v22 = *((void *)&v65 + 1);
      uint64_t v21 = v65;
      char v23 = v66;
      sub_10001FDF0((uint64_t)&v63, (uint64_t)&v67, &qword_1007182D0);
      uint64_t v24 = v62;
      char v9 = (char *)v59;
      sub_100519514(0, v20, 0);
      if ((v19 & 0x8000000000000000) == 0)
      {
        uint64_t v25 = v59[0];
        uint64_t result = sub_10009AF40(v21, v22, v23);
        int v45 = v22;
        int64_t v27 = v21;
        int v28 = v22;
        char v29 = v23;
        char v43 = v23;
        uint64_t v41 = v21;
        while ((v29 & 1) == 0)
        {
          if (v23) {
            goto LABEL_65;
          }
          if (v28 != v22)
          {
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
          if (v27 < v21) {
            goto LABEL_47;
          }
          uint64_t result = sub_10001FDF0((uint64_t)&v67, (uint64_t)&v51, &qword_1007182D0);
          if (v52) {
            goto LABEL_66;
          }
          if (DWORD2(v51) != v22) {
            goto LABEL_49;
          }
          if (v27 >= (uint64_t)v51) {
            goto LABEL_51;
          }
          if (v27 < 0 || v27 >= 1 << *(unsigned char *)(v24 + 32)) {
            goto LABEL_53;
          }
          if (((*(void *)(v24 + 56 + (((unint64_t)v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
            goto LABEL_55;
          }
          if (*(_DWORD *)(v24 + 36) != v22) {
            goto LABEL_57;
          }
          v30.rawValue = *(_DWORD *)(*(void *)(v24 + 48) + 4 * v27);
          *(void *)&long long v60 = 35;
          *((void *)&v60 + 1) = 0xE100000000000000;
          Swift::String v71 = String.init(_:)(v30);
          char v9 = (char *)&v60;
          sub_1005E1E30(v71);
          swift_bridgeObjectRelease();
          long long v31 = v60;
          uint64_t v32 = v25;
          v59[0] = v25;
          unint64_t v22 = *(void *)(v25 + 16);
          unint64_t v33 = *(void *)(v25 + 24);
          if (v22 >= v33 >> 1)
          {
            char v9 = (char *)v59;
            sub_100519514(v33 > 1, v22 + 1, 1);
            uint64_t v32 = v59[0];
          }
          *(void *)(v32 + 16) = v22 + 1;
          uint64_t v25 = v32;
          *(_OWORD *)(v32 + 16 * v22 + 32) = v31;
          uint64_t result = sub_1000D3974(v27, v28, 0, v24);
          int64_t v27 = result;
          int v28 = v34;
          char v29 = v35 & 1;
          --v19;
          uint64_t v21 = v41;
          LODWORD(v22) = v45;
          char v23 = v43;
          if (!v19)
          {
            sub_100060FF0(result, v34, v29);
            goto LABEL_43;
          }
        }
        goto LABEL_64;
      }
      goto LABEL_60;
    }
LABEL_43:
    sub_10000566C(&qword_1007182D8);
    sub_100007494(&qword_1007182E0, &qword_1007182D8);
    uint64_t v40 = sub_1005E1A80();
    swift_bridgeObjectRelease();
    sub_10009AF4C((uint64_t)&v65);
    sub_10009AF4C((uint64_t)&v63);
    sub_10001D550((uint64_t)&v62);
    return v40;
  }
  sub_1005184E4(5, (uint64_t)&v51);
  long long v60 = v51;
  char v61 = v52;
  long long v57 = v53;
  char v58 = v54;
  uint64_t v56 = v55;
  sub_10009AF80((uint64_t)&v65);
  sub_10009AF80((uint64_t)&v63);
  sub_10002292C((uint64_t)&v62);
  sub_10051A54C();
  if (!v2)
  {
    sub_10009AF4C((uint64_t)&v60);
    sub_10009AF4C((uint64_t)&v57);
    sub_10001D550((uint64_t)&v56);
    char v9 = (char *)_swiftEmptyArrayStorage;
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v36 = (char *)_swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_58:
    }
      uint64_t v36 = sub_100518C54(0, *((void *)v9 + 2) + 1, 1, v9);
    unint64_t v38 = *((void *)v36 + 2);
    unint64_t v37 = *((void *)v36 + 3);
    if (v38 >= v37 >> 1) {
      uint64_t v36 = sub_100518C54((char *)(v37 > 1), v38 + 1, 1, v36);
    }
    *((void *)v36 + 2) = v38 + 1;
    uint64_t v39 = &v36[16 * v38];
    *((void *)v39 + 4) = 10911970;
    *((void *)v39 + 5) = 0xA300000000000000;
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  uint64_t v3 = v2;
  int64_t v4 = v2 & ~(v2 >> 63);
  unint64_t v5 = *((void *)&v60 + 1);
  uint64_t v6 = v60;
  char v7 = v61;
  sub_10001FDF0((uint64_t)&v57, (uint64_t)v59, &qword_1007182D0);
  uint64_t v8 = v56;
  sub_100519514(0, v4, 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    char v9 = (char *)_swiftEmptyArrayStorage;
    sub_10009AF40(v6, v5, v7);
    int64_t v10 = v6;
    int v11 = v5;
    char v12 = v7;
    char v44 = v7;
    int v42 = v5;
    while ((v12 & 1) == 0)
    {
      if (v7) {
        goto LABEL_62;
      }
      if (v11 != v5)
      {
        __break(1u);
        goto LABEL_45;
      }
      if (v10 < v6) {
        goto LABEL_46;
      }
      sub_10001FDF0((uint64_t)v59, (uint64_t)&v67, &qword_1007182D0);
      if (v69) {
        goto LABEL_63;
      }
      if (v68 != v5) {
        goto LABEL_48;
      }
      if (v10 >= v67) {
        goto LABEL_50;
      }
      if (v10 < 0 || v10 >= 1 << *(unsigned char *)(v8 + 32)) {
        goto LABEL_52;
      }
      if (((*(void *)(v8 + 56 + (((unint64_t)v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_54;
      }
      if (*(_DWORD *)(v8 + 36) != v5) {
        goto LABEL_56;
      }
      Swift::String v70 = String.init(_:)(*(IMAP2Persistence::SyncRequest::ID *)(*(void *)(v8 + 48) + 4 * v10));
      sub_1005E1E30(v70);
      swift_bridgeObjectRelease();
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      unint64_t v13 = _swiftEmptyArrayStorage[3];
      if (v5 >= v13 >> 1) {
        sub_100519514(v13 > 1, v5 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v5 + 1;
      uint64_t v14 = &_swiftEmptyArrayStorage[2 * v5];
      v14[4] = 35;
      v14[5] = 0xE100000000000000;
      int64_t v15 = sub_1000D3974(v10, v11, 0, v8);
      int64_t v10 = v15;
      int v11 = v16;
      char v12 = v17 & 1;
      --v3;
      LODWORD(v5) = v42;
      char v7 = v44;
      if (!v3)
      {
        sub_100060FF0(v15, v16, v12);
        sub_10001D550((uint64_t)&v56);
        goto LABEL_39;
      }
    }
    goto LABEL_61;
  }
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  swift_bridgeObjectRetain();
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  uint64_t result = swift_bridgeObjectRetain();
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

char *sub_100518C54(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_1007182E8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100518D58(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100518DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100518DFC()
{
  swift_release();
  sub_100057604(*(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_100518E40()
{
  return sub_100514880(*(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_100518E6C()
{
  return type metadata accessor for Engine(0);
}

uint64_t type metadata accessor for Engine(uint64_t a1)
{
  return sub_10003B314(a1, qword_100718070);
}

uint64_t sub_100518E94()
{
  uint64_t result = type metadata accessor for Engine.Logger(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ExternalState();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for Engine.Logger(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005E0ED0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t initializeWithCopy for Engine.Logger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for Engine.Logger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for Engine.Logger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for Engine.Logger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for Engine.Logger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005192C8);
}

uint64_t sub_1005192C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E0ED0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for Engine.Logger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100519348);
}

uint64_t sub_100519348(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E0ED0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1005193B8()
{
  uint64_t result = sub_1005E0ED0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100519450(unint64_t a1)
{
  return sub_100516660(a1, v1);
}

uint64_t sub_100519458(uint64_t a1, uint64_t *a2)
{
  uint64_t result = sub_100522F08(a1, a2);
  if (v2) {
    return v4;
  }
  return result;
}

uint64_t sub_10051947C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100519594(a1, a2, a3, (void *)*v3, &qword_100718258, type metadata accessor for CommandConnection.RecentErrors.Error);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005194B8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100519594(a1, a2, a3, (void *)*v3, &qword_100718298, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005194F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005197DC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100519514(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100519948(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100519534(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100519AB4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100519554(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100519C14(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100519574(char a1, int64_t a2, char a3, void *a4)
{
  return sub_100519594(a1, a2, a3, a4, &qword_100718258, type metadata accessor for CommandConnection.RecentErrors.Error);
}

uint64_t sub_100519594(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000566C(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1005197DC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100718240);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100519948(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_1007182E8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100519AB4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100718248);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100519C14(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_1007182F0);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 216);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 216 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

unint64_t sub_100519D94(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1005E2AE0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Swift::UInt32 v10 = *(_DWORD *)(*(void *)(a2 + 48) + 4 * v6);
        sub_1005E33F0();
        sub_1005E3440(v10);
        uint64_t result = sub_1005E3470();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_DWORD *)(v12 + 4 * v3);
          size_t v14 = (_DWORD *)(v12 + 4 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = v15 + 24 * v3;
          size_t v17 = (long long *)(v15 + 24 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= (unint64_t)v17 + 24))
          {
            long long v9 = *v17;
            *(void *)(v16 + 16) = *((void *)v17 + 2);
            *(_OWORD *)unint64_t v16 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  uint64_t *v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100519F64(int a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_100024260(a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 24 * v14;
      unint64_t result = swift_release();
      *(_DWORD *)uint64_t v21 = a1;
      *(void *)(v21 + 8) = a2;
      *(void *)(v21 + 16) = a3;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_100520D48();
    goto LABEL_7;
  }
  sub_1005200E4(v17, a5 & 1);
  uint64_t v23 = sub_100024260(a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    unint64_t result = sub_1005E3380();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_10051A238(v14, a4, a1, a2, a3, v20);
}

uint64_t sub_10051A0B0(unint64_t a1, uint64_t a2, char a3, uint64_t a4, Swift::UInt a5, char a6)
{
  uint64_t v7 = (void **)v6;
  unint64_t v14 = (void *)*v6;
  unint64_t v16 = sub_1003F643C(a4, a5);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= result && (a6 & 1) != 0)
  {
LABEL_7:
    BOOL v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7] + 24 * v16;
      *(_DWORD *)uint64_t v23 = a1;
      *(unsigned char *)(v23 + 4) = BYTE4(a1) & 1;
      *(void *)(v23 + 8) = a2;
      *(unsigned char *)(v23 + 16) = a3 & 1;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= result && (a6 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100521310();
    goto LABEL_7;
  }
  sub_100520A28(result, a6 & 1);
  uint64_t result = sub_1003F643C(a4, a5);
  if ((v20 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = sub_1005E3380();
    __break(1u);
    return result;
  }
  unint64_t v16 = result;
  BOOL v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  sub_10051A288(v16, a4, a5, a1 | ((HIDWORD(a1) & 1) << 32), a2, a3 & 1, v22);
  return swift_bridgeObjectRetain();
}

unint64_t sub_10051A238(unint64_t result, int a2, int a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  *(_DWORD *)(a6[6] + 4 * result) = a2;
  uint64_t v6 = a6[7] + 24 * result;
  *(_DWORD *)uint64_t v6 = a3;
  *(void *)(v6 + 8) = a4;
  *(void *)(v6 + 16) = a5;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a6[2] = v9;
  }
  return result;
}

unint64_t sub_10051A288(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7)
{
  a7[(result >> 6) + 8] |= 1 << result;
  uint64_t v7 = (void *)(a7[6] + 16 * result);
  *uint64_t v7 = a2;
  v7[1] = a3;
  uint64_t v8 = a7[7] + 24 * result;
  *(_DWORD *)uint64_t v8 = a4;
  *(unsigned char *)(v8 + 4) = BYTE4(a4) & 1;
  *(void *)(v8 + 8) = a5;
  *(unsigned char *)(v8 + 16) = a6 & 1;
  uint64_t v9 = a7[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a7[2] = v11;
  }
  return result;
}

uint64_t sub_10051A2EC(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v4 = v3;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t v12 = *v3;
    *int64_t v3 = 0x8000000000000000;
    sub_100520D48();
    *int64_t v3 = v12;
    uint64_t result = swift_bridgeObjectRelease();
  }
  if ((a2 & 0x8000000000000000) != 0 || (uint64_t v9 = *v3, 1 << *(unsigned char *)(*v4 + 32) <= (uint64_t)a2))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(v9 + 8 * (a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(v9 + 36) == a3)
  {
    *uint64_t v4 = 0x8000000000000000;
    uint64_t v10 = *(unsigned int *)(*(void *)(v9 + 48) + 4 * a2);
    uint64_t v11 = *(void *)(v9 + 56) + 24 * a2;
    *(_DWORD *)a1 = *(_DWORD *)v11;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(v11 + 8);
    sub_100519D94(a2, v9);
    *uint64_t v4 = v9;
    swift_bridgeObjectRelease();
    return v10;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_10051A3F0(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_100060FF0(result, a2, a3 & 1);
  }
  return result;
}

BOOL sub_10051A408(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConnectionStatus(0);
  return (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2) != 1;
}

uint64_t sub_10051A46C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000566C(&qword_1007182A8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000079E4(a1, (uint64_t)v6, &qword_1007182A8);
  uint64_t v7 = type metadata accessor for ConnectionStatus(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (result != 1) {
    return sub_1005057C0((uint64_t)v6, a2);
  }
  __break(1u);
  return result;
}

void sub_10051A54C()
{
  long long v12 = *(long long *)((char *)v0 + 24);
  char v13 = *((unsigned char *)v0 + 40);
  if (v13)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    goto LABEL_18;
  }
  long long v10 = *v0;
  char v11 = *((unsigned char *)v0 + 16);
  if ((v11 & 1) == 0)
  {
    int64_t v1 = v10;
    if ((uint64_t)v12 >= (uint64_t)v10)
    {
      uint64_t v2 = *((void *)&v10 + 1);
      if (DWORD2(v12) != DWORD2(v10)) {
        goto LABEL_15;
      }
      if ((void)v10 == (void)v12) {
        return;
      }
      uint64_t v3 = 0;
      uint64_t v4 = *((void *)v0 + 6);
      while (!__OFADD__(v3, 1))
      {
        int64_t v5 = sub_1000D3974(v1, v2, 0, v4);
        uint64_t v7 = v6;
        char v9 = v8;
        sub_100060FF0(v1, v2, 0);
        if (v9) {
          goto LABEL_16;
        }
        if (v7 != DWORD2(v12)) {
          goto LABEL_13;
        }
        ++v3;
        int64_t v1 = v5;
        uint64_t v2 = v7;
        if (v5 == (void)v12)
        {
          sub_10009AF4C((uint64_t)&v12);
          sub_10009AF4C((uint64_t)&v10);
          return;
        }
      }
      __break(1u);
LABEL_13:
      __break(1u);
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_10051A684(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v92 = a3;
  uint64_t v93 = a5;
  unint64_t v82 = a4;
  uint64_t v91 = a2;
  uint64_t v89 = a1;
  uint64_t v7 = sub_1005E1680();
  uint64_t v87 = *(void *)(v7 - 8);
  uint64_t v88 = v7;
  __chkstk_darwin(v7);
  uint64_t v86 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005E16C0();
  uint64_t v84 = *(void *)(v9 - 8);
  uint64_t v85 = v9;
  __chkstk_darwin(v9);
  uint64_t v83 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1005E1670();
  uint64_t v90 = *(uint64_t (***)(uint64_t))(v77 - 8);
  uint64_t v11 = __chkstk_darwin(v77);
  uint64_t v79 = (void (**)(void))((char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v78 = (void (**)(void))((char *)&v74 - v13);
  uint64_t v14 = sub_10000566C(&qword_100718230);
  __chkstk_darwin(v14 - 8);
  uint64_t v80 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005E0ED0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v76 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v74 - v20;
  uint64_t v75 = a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  uint64_t v74 = *(void (**)(void))(v17 + 56);
  v74();
  *(unsigned char *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_didTearDown) = 0;
  *(void *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections) = _swiftEmptyArrayStorage;
  uint64_t v22 = a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engine;
  *(void *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engine + 8) = 0;
  swift_unknownObjectWeakInit();
  *(_DWORD *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_nextConnectionID) = 0;
  uint64_t v23 = a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff;
  *(void *)uint64_t v23 = 0;
  *(void *)(v23 + 8) = 0;
  *(_WORD *)(v23 + 16) = 1;
  uint64_t v24 = a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoffLoggingRateLimit;
  *(void *)uint64_t v24 = 0;
  *(unsigned char *)(v24 + 8) = 1;
  *(void *)(v24 + 16) = 1000000000;
  *(void *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_checkForStallTimer) = 0;
  uint64_t v25 = a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_lastError;
  uint64_t v26 = type metadata accessor for ConnectionStatus.Error(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  *(unsigned char *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connectionStateDidChange) = 0;
  *(void *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_stateCapture) = 0;
  *(void *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_enqueuedEvents) = 0;
  int64_t v27 = (unint64_t *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_pendingCancel);
  *int64_t v27 = sub_1005053CC((uint64_t)_swiftEmptyArrayStorage);
  v27[1] = 0x4014000000000000;
  *(void *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_pendingCancelTimer) = 0;
  *(void *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_collectDataTransferTimer) = 0;
  *(_DWORD *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_nextCredentialsRequestID) = 1;
  uint64_t v28 = a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_credentialsState;
  __uint64_t v29 = static MonotonicTime.now()();
  *(unsigned char *)uint64_t v28 = 0;
  *(void *)(v28 + 8) = v29;
  IMAP2Persistence::SyncRequest::ID v30 = v82;
  *(void *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue) = v82;
  long long v31 = (uint64_t *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logName);
  uint64_t v33 = v91;
  uint64_t v32 = v92;
  *long long v31 = v89;
  v31[1] = v33;
  sub_100513170(v32, a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_configuration, (uint64_t (*)(void))type metadata accessor for ConnectionConfiguration);
  uint64_t v34 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_tracingIDOwner;
  uint64_t v35 = *(void *)(v93 + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_tracingIDOwner);
  uint64_t v91 = OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_tracingIDOwner;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID) = *(unsigned char *)(v35 + 16);
  *(void *)(v22 + 8) = &off_1006FBCF0;
  swift_unknownObjectWeakAssign();
  id v36 = v30;
  sub_1005E0EC0();
  uint64_t v81 = v17;
  unint64_t v37 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  uint64_t v38 = (uint64_t)v80;
  v37(v80, v21, v16);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v74)(v38, 0, 1, v16);
  uint64_t v39 = v75;
  swift_beginAccess();
  sub_10051BF24(v38, v39);
  swift_endAccess();
  type metadata accessor for Timer();
  swift_allocObject();
  *(void *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoffTimer) = Timer.init(queue:)((uint64_t)v36);
  uint64_t v40 = v93;
  LOBYTE(v39) = *(unsigned char *)(*(void *)(v93 + v34) + 16);
  uint64_t v41 = (uint64_t)v76;
  uint64_t v80 = v21;
  unint64_t v82 = (void *)v16;
  v37(v76, v21, v16);
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 24) = &off_1006FBCF0;
  swift_unknownObjectWeakInit();
  type metadata accessor for DataTransferReportAccumulator();
  swift_allocObject();
  id v43 = v36;
  *(void *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_dataTransferReportAccumulator) = sub_10050EE78(v43, v39, v41, (uint64_t)sub_10051BFC4, v42);
  uint64_t aBlock = 0;
  unint64_t v96 = 0xE000000000000000;
  sub_1005E2C80(17);
  swift_bridgeObjectRelease();
  uint64_t aBlock = 0x697463656E6E6F43;
  unint64_t v96 = 0xEF2D6C6F6F506E6FLL;
  LOBYTE(v94) = *(unsigned char *)(*(void *)(v40 + v91) + 16);
  sub_10051BB7C();
  uint64_t v44 = sub_1005E1F20();
  long long v46 = v45;
  if (sub_1005E1DC0() <= 1)
  {
    v101._countAndFlagsBits = 48;
    v101._object = (void *)0xE100000000000000;
    sub_1005E1E30(v101);
  }
  type metadata accessor for StateCapture();
  v102._countAndFlagsBits = v44;
  v102._object = v46;
  sub_1005E1E30(v102);
  swift_bridgeObjectRelease();
  uint64_t v47 = aBlock;
  uint64_t v48 = v96;
  uint64_t v49 = swift_allocObject();
  swift_weakInit();
  id v50 = v43;
  *(void *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_stateCapture) = StateCapture.__allocating_init(title:queue:capture:)(v47, v48, v50, (uint64_t)sub_10051BFCC, v49);
  swift_release();
  long long v51 = v78;
  *uint64_t v78 = 2;
  LODWORD(v91) = enum case for DispatchTimeInterval.seconds(_:);
  char v52 = v90[13];
  uint64_t v53 = v77;
  v52((uint64_t)v51);
  char v54 = v79;
  *uint64_t v79 = 100;
  LODWORD(v76) = enum case for DispatchTimeInterval.milliseconds(_:);
  v52((uint64_t)v54);
  uint64_t v55 = swift_allocObject();
  swift_weakInit();
  uint64_t v99 = sub_10051BFD4;
  uint64_t v100 = v55;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  unint64_t v96 = 1107296256;
  uint64_t v90 = &v97;
  uint64_t v97 = sub_10046A1E4;
  uint64_t v98 = &unk_1006FBEC8;
  uint64_t v56 = _Block_copy(&aBlock);
  uint64_t v89 = type metadata accessor for RestartableTimer();
  swift_allocObject();
  id v57 = v50;
  swift_retain();
  uint64_t v58 = RestartableTimer.init(queue:repeating:leeway:closure:)(v57, (uint64_t)v51, (uint64_t)v54, v56);
  swift_release();
  swift_release();
  *(void *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_checkForStallTimer) = v58;
  swift_release();
  *long long v51 = 2;
  ((void (*)(void *, void, uint64_t))v52)(v51, v91, v53);
  *char v54 = 100;
  ((void (*)(void *, void, uint64_t))v52)(v54, v76, v53);
  uint64_t v59 = swift_allocObject();
  swift_weakInit();
  uint64_t v99 = sub_10051BFDC;
  uint64_t v100 = v59;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  unint64_t v96 = 1107296256;
  uint64_t v97 = sub_10046A1E4;
  uint64_t v98 = &unk_1006FBEF0;
  long long v60 = _Block_copy(&aBlock);
  swift_allocObject();
  id v61 = v57;
  swift_retain();
  uint64_t v62 = RestartableTimer.init(queue:repeating:leeway:closure:)(v61, (uint64_t)v51, (uint64_t)v54, v60);
  swift_release();
  swift_release();
  *(void *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_pendingCancelTimer) = v62;
  swift_release();
  *long long v51 = 10;
  uint64_t v63 = v91;
  ((void (*)(void *, void, uint64_t))v52)(v51, v91, v53);
  *char v54 = 1;
  ((void (*)(void *, uint64_t, uint64_t))v52)(v54, v63, v53);
  uint64_t v64 = swift_allocObject();
  swift_weakInit();
  uint64_t v99 = sub_10051BFE4;
  uint64_t v100 = v64;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  unint64_t v96 = 1107296256;
  uint64_t v97 = sub_10046A1E4;
  uint64_t v98 = &unk_1006FBF18;
  long long v65 = _Block_copy(&aBlock);
  swift_allocObject();
  id v66 = v61;
  swift_retain();
  uint64_t v67 = RestartableTimer.init(queue:repeating:leeway:closure:)(v66, (uint64_t)v51, (uint64_t)v54, v65);
  swift_release();
  swift_release();
  *(void *)(a6 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_collectDataTransferTimer) = v67;
  swift_release();
  uint64_t v68 = swift_allocObject();
  swift_weakInit();
  uint64_t v99 = sub_10051BFEC;
  uint64_t v100 = v68;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  unint64_t v96 = 1107296256;
  uint64_t v97 = sub_10046A1E4;
  uint64_t v98 = &unk_1006FBF40;
  char v69 = _Block_copy(&aBlock);
  swift_retain();
  Swift::String v70 = v83;
  sub_1005E16A0();
  uint64_t v94 = _swiftEmptyArrayStorage;
  sub_10051BB2C((unint64_t *)&qword_100717E40, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000566C(&qword_100717E48);
  sub_100007494((unint64_t *)&qword_100717E50, &qword_100717E48);
  Swift::String v71 = v86;
  uint64_t v72 = v88;
  sub_1005E2AD0();
  sub_1005E2610();
  _Block_release(v69);

  swift_release();
  sub_100518D58(v92, (uint64_t (*)(void))type metadata accessor for ConnectionConfiguration);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v71, v72);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v70, v85);
  (*(void (**)(char *, void *))(v81 + 8))(v80, v82);
  swift_release();
  swift_release();
  return a6;
}

uint64_t sub_10051B438()
{
  sub_10051B480(*(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 56, 7);
}

unint64_t sub_10051B480(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10051B4D8(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10051B530()
{
  return _swift_deallocObject(v0, 20, 7);
}

unint64_t sub_10051B540()
{
  unint64_t result = qword_100718250;
  if (!qword_100718250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718250);
  }
  return result;
}

uint64_t sub_10051B594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1000D38D0(a2);
  if (v8) {
    goto LABEL_19;
  }
  int v9 = *(_DWORD *)(a2 + 36);
  if (v9 != v7)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v10 = 1 << *(unsigned char *)(a2 + 32);
  if (v10 < result)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(unsigned char *)(a1 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v9 != v11) {
    goto LABEL_15;
  }
  if (*(void *)a1 < result)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (*(unsigned char *)(a1 + 40))
  {
LABEL_21:
    __break(1u);
    return result;
  }
  uint64_t v12 = *(void *)(a1 + 32);
  if (v9 != v12) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(a1 + 24);
  if (v10 < v13)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  *(void *)a3 = *(void *)a1;
  *(void *)(a3 + 8) = v11;
  *(unsigned char *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = v13;
  *(void *)(a3 + 32) = v12;
  *(unsigned char *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10051B67C(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1005E1DF0();
    return sub_1005E1F50();
  }
  return result;
}

uint64_t sub_10051B718@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (result < 0)
  {
LABEL_16:
    __break(1u);
  }
  else
  {
    uint64_t v4 = result;
    uint64_t result = sub_1000D38D0(a2);
    int64_t v6 = result;
    uint64_t v8 = v7;
    char v10 = v9 & 1;
    if (v4)
    {
      uint64_t v11 = *(unsigned int *)(a2 + 36);
      uint64_t v12 = 1 << *(unsigned char *)(a2 + 32);
      while ((v10 & 1) == 0)
      {
        if (v11 != v8)
        {
          __break(1u);
          goto LABEL_16;
        }
        if (v6 == v12)
        {
          char v10 = 0;
          int64_t v6 = v12;
          uint64_t v8 = v11;
          goto LABEL_10;
        }
        uint64_t result = sub_1000D3974(v6, v8, 0, a2);
        int64_t v6 = result;
        uint64_t v8 = v13;
        char v10 = v14 & 1;
        if (!--v4) {
          goto LABEL_10;
        }
      }
      goto LABEL_19;
    }
LABEL_10:
    uint64_t result = sub_1000D38D0(a2);
    if (v10 & 1) != 0 || (v16) {
      goto LABEL_20;
    }
    if (v8 == v15)
    {
      if (v6 >= result)
      {
        v20[0] = result;
        v20[1] = v15;
        char v21 = 0;
        int64_t v22 = v6;
        uint64_t v23 = v8;
        char v24 = 0;
        uint64_t result = sub_10051B594((uint64_t)v20, a2, (uint64_t)v18);
        long long v17 = v18[1];
        *(_OWORD *)a3 = v18[0];
        *(_OWORD *)(a3 + 16) = v17;
        *(_OWORD *)(a3 + 32) = v18[2];
        *(void *)(a3 + 48) = v19;
        return result;
      }
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

int64_t sub_10051B84C(int64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, int a6, char a7, uint64_t a8)
{
  if (a4 < 0)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  uint64_t v8 = a4;
  uint64_t v11 = result;
  char v12 = a3 & 1;
  if (a4)
  {
    if ((a7 & 1) == 0)
    {
      int64_t v16 = result;
      int v17 = a2;
      while ((v12 & 1) == 0)
      {
        if (v17 != a6)
        {
          __break(1u);
          goto LABEL_14;
        }
        if (v16 == a5)
        {
          int64_t v16 = 0;
          goto LABEL_12;
        }
        uint64_t result = sub_1000D3974(v16, v17, 0, a8);
        int64_t v16 = result;
        int v17 = v18;
        char v12 = v19 & 1;
        if (!--v8) {
          goto LABEL_12;
        }
      }
    }
    goto LABEL_15;
  }
  int64_t v16 = result;
LABEL_12:
  sub_10009AF40(v11, a2, a3 & 1);
  return v16;
}

uint64_t sub_10051B93C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (v8)
  {
    unint64_t v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v13 = v12 | (v11 << 6);
LABEL_5:
    int v18 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v13);
    uint64_t result = sub_100517854(&v18, a2);
    if (v2) {
      return swift_release();
    }
  }
  if (__OFADD__(v11++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v11 >= v9) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v5 + 8 * v11);
  if (v15)
  {
LABEL_17:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
    goto LABEL_5;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v9) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v9) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v9) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
LABEL_16:
    int64_t v11 = v16;
    goto LABEL_17;
  }
  int64_t v17 = v11 + 4;
  if (v11 + 4 >= v9) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v5 + 8 * v17);
  v11 += 4;
  if (v15) {
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v9) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v5 + 8 * v11);
    ++v17;
    if (v15) {
      goto LABEL_17;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10051BAB0()
{
  sub_100057604(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  return _swift_deallocObject(v0, 25, 7);
}

unint64_t sub_10051BAEC()
{
  unint64_t result = qword_100718260;
  if (!qword_100718260)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100718260);
  }
  return result;
}

uint64_t sub_10051BB2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10051BB74(uint64_t a1, uint64_t a2)
{
  return sub_1005116DC(a1, a2, v2);
}

unint64_t sub_10051BB7C()
{
  unint64_t result = qword_100718288;
  if (!qword_100718288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718288);
  }
  return result;
}

uint64_t sub_10051BBD0()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10051BC08@<X0>(uint64_t a1@<X8>)
{
  return sub_100511A54(a1);
}

uint64_t sub_10051BC10@<X0>(uint64_t a1@<X8>)
{
  return sub_100511C54(a1);
}

uint64_t sub_10051BC18@<X0>(uint64_t a1@<X8>)
{
  return sub_100511FA4(a1);
}

uint64_t sub_10051BC20@<X0>(uint64_t a1@<X8>)
{
  return sub_100512150(a1);
}

uint64_t sub_10051BC28()
{
  return sub_1005126FC(v0, (void (*)(void))sub_100512338);
}

uint64_t sub_10051BC58()
{
  return sub_1005126FC(v0, (void (*)(void))sub_10051275C);
}

uint64_t sub_10051BC88()
{
  return sub_1005128A4();
}

uint64_t sub_10051BC90()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_10051BCC8(unint64_t result)
{
  switch((result >> 58) & 0x3C | (result >> 1) & 3)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x20uLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
      unint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10051BDB8(unint64_t result)
{
  switch((result >> 58) & 0x3C | (result >> 1) & 3)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x20uLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
      unint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10051BEA8()
{
  return sub_100517018(v0);
}

uint64_t sub_10051BEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10051BF14(uint64_t (*a1)(void), uint64_t a2)
{
  return sub_1005299D4(a1, a2);
}

void sub_10051BF1C(void *a1)
{
}

uint64_t sub_10051BF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100718230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10051BF8C()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10051BFC4(uint64_t a1, uint64_t a2)
{
  return sub_100523B90(a1, a2);
}

double sub_10051BFCC@<D0>(uint64_t a1@<X8>)
{
  return sub_100523C38(a1);
}

uint64_t sub_10051BFD4()
{
  return sub_1005242FC(v0);
}

uint64_t sub_10051BFDC()
{
  return sub_1005244E8(v0);
}

uint64_t sub_10051BFE4()
{
  return sub_10052472C(v0);
}

uint64_t sub_10051BFEC()
{
  return sub_10052498C();
}

uint64_t *sub_10051C040(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Activity(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_10000566C(&qword_100718238);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = *(int *)(v7 + 24);
      __dst = (char *)a1 + v12;
      uint64_t v42 = v8;
      unint64_t v13 = (char *)a2 + v12;
      uint64_t v14 = type metadata accessor for ConnectionStatus.Error(0);
      uint64_t v15 = *(void *)(v14 - 8);
      int64_t v16 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48);
      uint64_t v17 = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16(v13, 1, v17))
      {
        uint64_t v18 = sub_10000566C(&qword_100717EF8);
        memcpy(__dst, v13, *(void *)(*(void *)(v18 - 8) + 64));
        uint64_t v19 = v42;
      }
      else
      {
        uint64_t v39 = v15;
        uint64_t v40 = v17;
        unsigned char *__dst = *v13;
        uint64_t v20 = *(int *)(v17 + 20);
        char v21 = &__dst[v20];
        uint64_t v38 = v13;
        int64_t v22 = &v13[v20];
        uint64_t v23 = type metadata accessor for ConnectionStatus.Error.Details(0);
        uint64_t v24 = *(void *)(v23 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          uint64_t v25 = sub_10000566C(&qword_100717EF0);
          memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
          uint64_t v19 = v42;
        }
        else
        {
          uint64_t v19 = v42;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v28 = v22[1];
              *char v21 = *v22;
              v21[1] = v28;
              uint64_t v29 = v22[2];
              uint64_t v30 = v22[3];
              v21[2] = v29;
              v21[3] = v30;
              swift_bridgeObjectRetain();
              goto LABEL_13;
            case 2u:
            case 3u:
              uint64_t v26 = v22[1];
              *char v21 = *v22;
              v21[1] = v26;
LABEL_13:
              swift_bridgeObjectRetain();
              break;
            default:
              uint64_t v27 = sub_1005E1650();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v21, v22, v27);
              break;
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        uint64_t v31 = *(int *)(v40 + 24);
        uint64_t v32 = &__dst[v31];
        uint64_t v33 = &v38[v31];
        uint64_t v34 = sub_1005E0970();
        uint64_t v35 = *(void *)(v34 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
        {
          uint64_t v36 = sub_10000566C(&qword_100717EE8);
          memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v35 + 16))(v32, v33, v34);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v40);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10051C518(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Activity(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(v2 + 24);
    uint64_t v4 = type metadata accessor for ConnectionStatus.Error(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
    {
      uint64_t v5 = v3 + *(int *)(v4 + 20);
      uint64_t v6 = type metadata accessor for ConnectionStatus.Error.Details(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v7 = sub_1005E1650();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
            break;
          case 1u:
            swift_bridgeObjectRelease();
            goto LABEL_7;
          case 2u:
          case 3u:
LABEL_7:
            swift_bridgeObjectRelease();
            break;
          default:
            break;
        }
      }
      uint64_t v8 = v3 + *(int *)(v4 + 24);
      uint64_t v9 = sub_1005E0970();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
    }
  }
  return swift_bridgeObjectRelease();
}

void *sub_10051C77C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Activity(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10000566C(&qword_100718238);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v40 = v7;
    uint64_t v41 = a3;
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    uint64_t v10 = *(int *)(v6 + 24);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v16 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v16))
    {
      uint64_t v17 = sub_10000566C(&qword_100717EF8);
      memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
      a3 = v41;
    }
    else
    {
      *uint64_t v11 = *v12;
      uint64_t v38 = v11;
      uint64_t v39 = v16;
      uint64_t v18 = *(int *)(v16 + 20);
      uint64_t v19 = &v11[v18];
      uint64_t v20 = &v12[v18];
      uint64_t v21 = type metadata accessor for ConnectionStatus.Error.Details(0);
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        uint64_t v23 = sub_10000566C(&qword_100717EF0);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
        a3 = v41;
        uint64_t v24 = v38;
      }
      else
      {
        a3 = v41;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v27 = v20[1];
            *uint64_t v19 = *v20;
            v19[1] = v27;
            uint64_t v28 = v20[2];
            uint64_t v29 = v20[3];
            v19[2] = v28;
            v19[3] = v29;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
          case 2u:
          case 3u:
            uint64_t v25 = v20[1];
            *uint64_t v19 = *v20;
            v19[1] = v25;
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v26 = sub_1005E1650();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v19, v20, v26);
            break;
        }
        uint64_t v30 = v19;
        uint64_t v24 = v38;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v30, 0, 1, v21);
      }
      uint64_t v31 = *(int *)(v39 + 24);
      uint64_t v32 = &v24[v31];
      uint64_t v33 = &v12[v31];
      uint64_t v34 = sub_1005E0970();
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        uint64_t v36 = sub_10000566C(&qword_100717EE8);
        memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v38, 0, 1, v39);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(a1, 0, 1, v6);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10051CC14(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Activity(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v82 = v7;
      __src = a2;
      uint64_t v85 = a3;
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v11 = *(int *)(v6 + 24);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = type metadata accessor for ConnectionStatus.Error(0);
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16(v13, 1, v14))
      {
        uint64_t v17 = sub_10000566C(&qword_100717EF8);
        memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
        uint64_t v18 = v82;
      }
      else
      {
        *uint64_t v12 = *v13;
        uint64_t v36 = v14;
        uint64_t v37 = *(int *)(v14 + 20);
        uint64_t v38 = &v12[v37];
        uint64_t v80 = v13;
        uint64_t v39 = &v13[v37];
        uint64_t v40 = type metadata accessor for ConnectionStatus.Error.Details(0);
        uint64_t v41 = *(void *)(v40 - 8);
        uint64_t v42 = v12;
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
        {
          uint64_t v43 = sub_10000566C(&qword_100717EF0);
          memcpy(v38, v39, *(void *)(*(void *)(v43 - 8) + 64));
          uint64_t v44 = v36;
          int v45 = v42;
        }
        else
        {
          uint64_t v44 = v36;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *uint64_t v38 = *v39;
              v38[1] = v39[1];
              v38[2] = v39[2];
              v38[3] = v39[3];
              swift_bridgeObjectRetain();
              goto LABEL_27;
            case 2u:
            case 3u:
              *uint64_t v38 = *v39;
              v38[1] = v39[1];
LABEL_27:
              swift_bridgeObjectRetain();
              break;
            default:
              uint64_t v54 = sub_1005E1650();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(v38, v39, v54);
              break;
          }
          int v45 = v42;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
        }
        uint64_t v55 = *(int *)(v44 + 24);
        uint64_t v56 = &v45[v55];
        id v57 = &v80[v55];
        uint64_t v58 = sub_1005E0970();
        uint64_t v59 = *(void *)(v58 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
        {
          uint64_t v60 = sub_10000566C(&qword_100717EE8);
          memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v59 + 16))(v56, v57, v58);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
        }
        a3 = v85;
        uint64_t v18 = v82;
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v45, 0, 1, v44);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v6);
      a2 = __src;
      goto LABEL_34;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_10051D9A0((uint64_t)a1, type metadata accessor for Activity);
LABEL_7:
    size_t v19 = *(void *)(*(void *)(sub_10000566C(&qword_100718238) - 8) + 64);
    uint64_t v20 = a1;
    uint64_t v21 = a2;
LABEL_8:
    memcpy(v20, v21, v19);
    goto LABEL_34;
  }
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(int *)(v6 + 24);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (v29)
    {
      sub_10051D9A0((uint64_t)v23, type metadata accessor for ConnectionStatus.Error);
      goto LABEL_17;
    }
    uint64_t v87 = a3;
    *uint64_t v23 = *v24;
    uint64_t v46 = *(int *)(v25 + 20);
    uint64_t v47 = &v23[v46];
    uint64_t v48 = &v24[v46];
    uint64_t v49 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v81 = *(void *)(v49 - 8);
    uint64_t v83 = v47;
    id v50 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v81 + 48);
    LODWORD(v47) = v50(v47, 1, v49);
    int v51 = v50(v48, 1, v49);
    if (v47)
    {
      if (!v51)
      {
        uint64_t v62 = v49;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *uint64_t v83 = *v48;
            v83[1] = v48[1];
            v83[2] = v48[2];
            v83[3] = v48[3];
            swift_bridgeObjectRetain();
            uint64_t v62 = v49;
            goto LABEL_52;
          case 2u:
          case 3u:
            *uint64_t v83 = *v48;
            v83[1] = v48[1];
LABEL_52:
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v71 = sub_1005E1650();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v71 - 8) + 16))(v83, v48, v71);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v81 + 56))(v83, 0, 1, v62);
        goto LABEL_54;
      }
      size_t v52 = *(void *)(*(void *)(sub_10000566C(&qword_100717EF0) - 8) + 64);
      uint64_t v53 = v83;
    }
    else
    {
      if (!v51)
      {
        a3 = v87;
        if (a1 != a2)
        {
          sub_10051D9A0((uint64_t)v83, type metadata accessor for ConnectionStatus.Error.Details);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *uint64_t v83 = *v48;
              v83[1] = v48[1];
              v83[2] = v48[2];
              v83[3] = v48[3];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
              break;
            case 2u:
            case 3u:
              *uint64_t v83 = *v48;
              v83[1] = v48[1];
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
              break;
            default:
              uint64_t v70 = sub_1005E1650();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v70 - 8) + 16))(v83, v48, v70);
              swift_storeEnumTagMultiPayload();
              break;
          }
        }
        goto LABEL_55;
      }
      sub_10051D9A0((uint64_t)v83, type metadata accessor for ConnectionStatus.Error.Details);
      size_t v52 = *(void *)(*(void *)(sub_10000566C(&qword_100717EF0) - 8) + 64);
      uint64_t v53 = v83;
    }
    memcpy(v53, v48, v52);
LABEL_54:
    a3 = v87;
LABEL_55:
    uint64_t v72 = *(int *)(v25 + 24);
    uint64_t v73 = &v23[v72];
    uint64_t v74 = &v24[v72];
    uint64_t v75 = sub_1005E0970();
    uint64_t v76 = *(void *)(v75 - 8);
    uint64_t v77 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v76 + 48);
    int v78 = v77(v73, 1, v75);
    int v79 = v77(v74, 1, v75);
    if (v78)
    {
      if (!v79)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v76 + 16))(v73, v74, v75);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
        goto LABEL_34;
      }
    }
    else
    {
      if (!v79)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v76 + 24))(v73, v74, v75);
        goto LABEL_34;
      }
      (*(void (**)(unsigned char *, uint64_t))(v76 + 8))(v73, v75);
    }
    size_t v19 = *(void *)(*(void *)(sub_10000566C(&qword_100717EE8) - 8) + 64);
    uint64_t v20 = v73;
    uint64_t v21 = v74;
    goto LABEL_8;
  }
  if (v29)
  {
LABEL_17:
    size_t v19 = *(void *)(*(void *)(sub_10000566C(&qword_100717EF8) - 8) + 64);
    uint64_t v20 = v23;
    uint64_t v21 = v24;
    goto LABEL_8;
  }
  uint64_t v86 = a3;
  *uint64_t v23 = *v24;
  uint64_t v30 = *(int *)(v25 + 20);
  uint64_t v31 = &v23[v30];
  uint64_t v32 = &v24[v30];
  uint64_t v33 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v34 = *(void *)(v33 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    uint64_t v35 = sub_10000566C(&qword_100717EF0);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v31 = *v32;
        v31[1] = v32[1];
        v31[2] = v32[2];
        uint64_t v31[3] = v32[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
      case 3u:
        *uint64_t v31 = *v32;
        v31[1] = v32[1];
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v63 = sub_1005E1650();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(v31, v32, v63);
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  uint64_t v64 = *(int *)(v25 + 24);
  long long v65 = &v23[v64];
  id v66 = &v24[v64];
  uint64_t v67 = sub_1005E0970();
  uint64_t v68 = *(void *)(v67 - 8);
  a3 = v86;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
  {
    uint64_t v69 = sub_10000566C(&qword_100717EE8);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v68 + 16))(v65, v66, v67);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
  }
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_34:
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10051D9A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_10051DA00(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Activity(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10000566C(&qword_100718238);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v9 = *(int *)(v6 + 24);
    int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_10000566C(&qword_100717EF8);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v28 = v13;
      *int v10 = *v11;
      uint64_t v15 = *(int *)(v12 + 20);
      __dst = &v10[v15];
      uint64_t v31 = v10;
      uint64_t v16 = &v11[v15];
      uint64_t v17 = type metadata accessor for ConnectionStatus.Error.Details(0);
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_10000566C(&qword_100717EF0);
        memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
        uint64_t v20 = v28;
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(__dst, v16, *(void *)(v18 + 64));
        }
        else
        {
          uint64_t v21 = sub_1005E1650();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(__dst, v16, v21);
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v20 = v28;
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
      }
      uint64_t v22 = *(int *)(v12 + 24);
      __dsta = &v31[v22];
      uint64_t v23 = &v11[v22];
      uint64_t v24 = sub_1005E0970();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        uint64_t v26 = sub_10000566C(&qword_100717EE8);
        memcpy(__dsta, v23, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 32))(__dsta, v23, v24);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v25 + 56))(__dsta, 0, 1, v24);
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v20 + 56))(v31, 0, 1, v12);
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_10051DE1C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Activity(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10051D9A0((uint64_t)a1, type metadata accessor for Activity);
      goto LABEL_7;
    }
    *a1 = *a2;
    swift_bridgeObjectRelease();
    a1[1] = a2[1];
    swift_bridgeObjectRelease();
    uint64_t v20 = *(int *)(v6 + 24);
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v24 + 48);
    int v26 = v25(v21, 1, v23);
    int v27 = v25(v22, 1, v23);
    if (v26)
    {
      if (!v27)
      {
        uint64_t v81 = a3;
        *uint64_t v21 = *v22;
        uint64_t v28 = *(int *)(v23 + 20);
        int v29 = &v21[v28];
        uint64_t v30 = &v22[v28];
        uint64_t v31 = type metadata accessor for ConnectionStatus.Error.Details(0);
        uint64_t v32 = *(void *)(v31 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
        {
          uint64_t v33 = sub_10000566C(&qword_100717EF0);
          memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v29, v30, *(void *)(v32 + 64));
          }
          else
          {
            uint64_t v59 = sub_1005E1650();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v59 - 8) + 32))(v29, v30, v59);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
        }
        a3 = v81;
        uint64_t v60 = *(int *)(v23 + 24);
        id v61 = &v21[v60];
        uint64_t v62 = &v22[v60];
        uint64_t v63 = sub_1005E0970();
        uint64_t v64 = *(void *)(v63 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
        {
          uint64_t v65 = sub_10000566C(&qword_100717EE8);
          memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v64 + 32))(v61, v62, v63);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        }
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        goto LABEL_32;
      }
      goto LABEL_17;
    }
    if (v27)
    {
      sub_10051D9A0((uint64_t)v21, type metadata accessor for ConnectionStatus.Error);
LABEL_17:
      size_t v17 = *(void *)(*(void *)(sub_10000566C(&qword_100717EF8) - 8) + 64);
      uint64_t v18 = v21;
      uint64_t v19 = v22;
      goto LABEL_8;
    }
    uint64_t v83 = a3;
    *uint64_t v21 = *v22;
    uint64_t v41 = *(int *)(v23 + 20);
    uint64_t v42 = &v21[v41];
    uint64_t v43 = &v22[v41];
    uint64_t v44 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v76 = *(void *)(v44 - 8);
    int v45 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v76 + 48);
    uint64_t v80 = v42;
    LODWORD(v42) = v45(v42, 1, v44);
    __dsta = v43;
    int v46 = v45(v43, 1, v44);
    if (v42)
    {
      if (!v46)
      {
        if (swift_getEnumCaseMultiPayload())
        {
          uint64_t v57 = v76;
          uint64_t v58 = v80;
          memcpy(v80, __dsta, *(void *)(v76 + 64));
          a3 = v83;
        }
        else
        {
          uint64_t v66 = sub_1005E1650();
          uint64_t v58 = v80;
          (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v66 - 8) + 32))(v80, v43, v66);
          swift_storeEnumTagMultiPayload();
          a3 = v83;
          uint64_t v57 = v76;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v58, 0, 1, v44);
        goto LABEL_49;
      }
      size_t v47 = *(void *)(*(void *)(sub_10000566C(&qword_100717EF0) - 8) + 64);
      uint64_t v48 = v80;
    }
    else
    {
      if (!v46)
      {
        a3 = v83;
        if (a1 != a2)
        {
          sub_10051D9A0((uint64_t)v80, type metadata accessor for ConnectionStatus.Error.Details);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v80, v43, *(void *)(v76 + 64));
          }
          else
          {
            uint64_t v75 = sub_1005E1650();
            (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v75 - 8) + 32))(v80, v43, v75);
            swift_storeEnumTagMultiPayload();
          }
        }
        goto LABEL_49;
      }
      sub_10051D9A0((uint64_t)v80, type metadata accessor for ConnectionStatus.Error.Details);
      size_t v47 = *(void *)(*(void *)(sub_10000566C(&qword_100717EF0) - 8) + 64);
      uint64_t v48 = v80;
    }
    memcpy(v48, v43, v47);
    a3 = v83;
LABEL_49:
    uint64_t v67 = *(int *)(v23 + 24);
    uint64_t v68 = &v21[v67];
    uint64_t v69 = &v22[v67];
    uint64_t v70 = sub_1005E0970();
    uint64_t v71 = *(void *)(v70 - 8);
    uint64_t v72 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v71 + 48);
    int v73 = v72(v68, 1, v70);
    int v74 = v72(v69, 1, v70);
    if (v73)
    {
      if (!v74)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v71 + 32))(v68, v69, v70);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
        goto LABEL_32;
      }
    }
    else
    {
      if (!v74)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v71 + 40))(v68, v69, v70);
        goto LABEL_32;
      }
      (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v68, v70);
    }
    size_t v17 = *(void *)(*(void *)(sub_10000566C(&qword_100717EE8) - 8) + 64);
    uint64_t v18 = v68;
    uint64_t v19 = v69;
    goto LABEL_8;
  }
  if (v10)
  {
LABEL_7:
    size_t v17 = *(void *)(*(void *)(sub_10000566C(&qword_100718238) - 8) + 64);
    uint64_t v18 = a1;
    uint64_t v19 = a2;
LABEL_8:
    memcpy(v18, v19, v17);
    goto LABEL_32;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v11 = *(int *)(v6 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_10000566C(&qword_100717EF8);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    int v79 = v12;
    uint64_t v82 = a3;
    *uint64_t v12 = *v13;
    uint64_t v34 = *(int *)(v14 + 20);
    __dst = &v12[v34];
    uint64_t v35 = &v13[v34];
    uint64_t v36 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v37 = *(void *)(v36 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      uint64_t v38 = sub_10000566C(&qword_100717EF0);
      memcpy(__dst, v35, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v39 = v35;
        uint64_t v40 = __dst;
        memcpy(__dst, v39, *(void *)(v37 + 64));
      }
      else
      {
        uint64_t v49 = sub_1005E1650();
        uint64_t v40 = __dst;
        (*(void (**)(void))(*(void *)(v49 - 8) + 32))();
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v37 + 56))(v40, 0, 1, v36);
    }
    uint64_t v50 = *(int *)(v14 + 24);
    int v51 = &v79[v50];
    size_t v52 = &v13[v50];
    uint64_t v53 = sub_1005E0970();
    uint64_t v54 = *(void *)(v53 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      uint64_t v55 = sub_10000566C(&qword_100717EE8);
      memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, unsigned char *, uint64_t))(v54 + 32))(v51, v52, v53);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v79, 0, 1, v14);
    a3 = v82;
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_32:
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10051E954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10051E968);
}

uint64_t sub_10051E968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100718238);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10051EA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10051EA40);
}

uint64_t sub_10051EA40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10000566C(&qword_100718238);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ExternalState()
{
  uint64_t result = qword_100718350;
  if (!qword_100718350) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10051EB4C()
{
  sub_10051EBE4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10051EBE4()
{
  if (!qword_100718360)
  {
    type metadata accessor for Activity(255);
    unint64_t v0 = sub_1005E28C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100718360);
    }
  }
}

void *sub_10051EC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = a2;
  uint64_t v4 = type metadata accessor for Activity(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_100718390);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000566C(&qword_100718238);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v39 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v39 - v19;
  uint64_t v41 = a1;
  sub_10051F188(a1, (uint64_t)&v39 - v19);
  uint64_t v40 = *(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56);
  v40(v20, 0, 1, v4);
  uint64_t v43 = v2;
  sub_10051F1EC(v2, (uint64_t)v18);
  uint64_t v21 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_10051F1EC((uint64_t)v20, (uint64_t)v11);
  sub_10051F1EC((uint64_t)v18, v21);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v11, 1, v4) == 1)
  {
    sub_100007A48((uint64_t)v18, &qword_100718238);
    sub_100007A48((uint64_t)v20, &qword_100718238);
    if (v22(v21, 1, v4) == 1)
    {
      sub_100007A48((uint64_t)v11, &qword_100718238);
      uint64_t v23 = _swiftEmptyArrayStorage;
      uint64_t v25 = v42;
      uint64_t v24 = v43;
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  sub_10051F1EC((uint64_t)v11, (uint64_t)v15);
  if (v22(v21, 1, v4) == 1)
  {
    sub_100007A48((uint64_t)v18, &qword_100718238);
    sub_100007A48((uint64_t)v20, &qword_100718238);
    sub_10051D9A0((uint64_t)v15, type metadata accessor for Activity);
LABEL_6:
    sub_100007A48((uint64_t)v11, &qword_100718390);
    uint64_t v25 = v42;
    uint64_t v24 = v43;
    goto LABEL_7;
  }
  sub_10051F898(v21, (uint64_t)v7);
  char v38 = static Activity.__derived_struct_equals(_:_:)(v15, v7);
  sub_10051D9A0((uint64_t)v7, type metadata accessor for Activity);
  sub_100007A48((uint64_t)v18, &qword_100718238);
  sub_100007A48((uint64_t)v20, &qword_100718238);
  sub_10051D9A0((uint64_t)v15, type metadata accessor for Activity);
  sub_100007A48((uint64_t)v11, &qword_100718238);
  uint64_t v25 = v42;
  uint64_t v24 = v43;
  if (v38)
  {
    uint64_t v23 = _swiftEmptyArrayStorage;
    goto LABEL_10;
  }
LABEL_7:
  sub_100007A48(v24, &qword_100718238);
  uint64_t v26 = v41;
  sub_10051F188(v41, v24);
  v40((char *)v24, 0, 1, v4);
  uint64_t v27 = swift_allocBox();
  sub_10051F188(v26, v28);
  uint64_t v23 = sub_100532CF8(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v30 = v23[2];
  unint64_t v29 = v23[3];
  if (v30 >= v29 >> 1) {
    uint64_t v23 = sub_100532CF8((void *)(v29 > 1), v30 + 1, 1, v23);
  }
  v23[2] = v30 + 1;
  v23[v30 + 4] = v27 | 0x9000000000000000;
LABEL_10:
  uint64_t v31 = *(int *)(type metadata accessor for ExternalState() + 20);
  uint64_t v32 = *(void *)(v24 + v31);
  if (*(void *)(v25 + 16) <= *(void *)(v32 + 16) >> 3)
  {
    uint64_t v44 = *(void **)(v24 + v31);
    swift_bridgeObjectRetain();
    sub_10051F254(v25);
    uint64_t v33 = v44;
    if (v44[2]) {
      goto LABEL_12;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_10051F434(v25, v32);
  if (!v33[2]) {
    goto LABEL_18;
  }
LABEL_12:
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v33;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v23 = sub_100532CF8(0, v23[2] + 1, 1, v23);
  }
  unint64_t v36 = v23[2];
  unint64_t v35 = v23[3];
  if (v36 >= v35 >> 1) {
    uint64_t v23 = sub_100532CF8((void *)(v35 > 1), v36 + 1, 1, v23);
  }
  v23[2] = v36 + 1;
  v23[v36 + 4] = v34 | 0x1000000000000000;
LABEL_19:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v24 + v31) = v25;
  return v23;
}

uint64_t sub_10051F188(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Activity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10051F1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100718238);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10051F254(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v8);
        if (!v14)
        {
          int64_t v8 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v8);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_6:
    unsigned int v11 = *(_DWORD *)(*(void *)(v2 + 48) + 16 * v10 + 8);
    uint64_t v12 = swift_bridgeObjectRetain();
    sub_10051F8FC(v12, v11);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v8 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v8);
        ++v15;
        if (v14) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v15;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_10051F3FC()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

void *sub_10051F434(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    uint64_t v5 = a1 + 56;
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v43 = ~v6;
    if (-v6 < 64) {
      uint64_t v7 = ~(-1 << -(char)v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v4;
    int64_t v44 = (unint64_t)(63 - v6) >> 6;
    uint64_t v9 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v10 = 0;
    do
    {
LABEL_6:
      if (v8)
      {
        unint64_t v11 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          goto LABEL_51;
        }
        if (v13 >= v44) {
          goto LABEL_49;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v13);
        int64_t v15 = v10 + 1;
        if (!v14)
        {
          int64_t v15 = v10 + 2;
          if (v10 + 2 >= v44) {
            goto LABEL_49;
          }
          unint64_t v14 = *(void *)(v5 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v10 + 3;
            if (v10 + 3 >= v44) {
              goto LABEL_49;
            }
            unint64_t v14 = *(void *)(v5 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v10 + 4;
              if (v10 + 4 >= v44) {
                goto LABEL_49;
              }
              unint64_t v14 = *(void *)(v5 + 8 * v15);
              if (!v14)
              {
                int64_t v16 = v10 + 5;
                if (v10 + 5 >= v44)
                {
LABEL_49:
                  sub_10003BC80();
                  return (void *)v2;
                }
                unint64_t v14 = *(void *)(v5 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      break;
                    }
                    if (v15 >= v44) {
                      goto LABEL_49;
                    }
                    unint64_t v14 = *(void *)(v5 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_23;
                    }
                  }
LABEL_51:
                  __break(1u);
                }
                int64_t v15 = v10 + 5;
              }
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        int64_t v10 = v15;
      }
      uint64_t v17 = *(void *)(a1 + 48) + 16 * v12;
      uint64_t v18 = *(void *)v17;
      uint64_t v19 = *(unsigned int *)(v17 + 8);
      sub_1005E33F0();
      Swift::UInt v20 = v19 | (v19 << 32);
      sub_1005E3410(v20);
      Swift::Int isStackAllocationSafe = sub_1005E3470();
      char v22 = *(unsigned char *)(v2 + 32);
      uint64_t v23 = -1 << v22;
      unint64_t v24 = isStackAllocationSafe & ~(-1 << v22);
    }
    while (((*(void *)(v9 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0);
    unsigned int v25 = v22 & 0x3F;
    uint64_t v26 = ~v23;
    while (1)
    {
      uint64_t v27 = *(void *)(v2 + 48) + 16 * v24;
      if ((*(unsigned int *)(v27 + 8) | ((unint64_t)*(unsigned int *)(v27 + 8) << 32)) == v20)
      {
        uint64_t v28 = *(void *)v27;
        uint64_t v29 = *(void *)(v28 + 16);
        if (v29 == *(void *)(v18 + 16))
        {
          if (v29) {
            BOOL v30 = v28 == v18;
          }
          else {
            BOOL v30 = 1;
          }
          if (v30) {
            goto LABEL_42;
          }
          if (*(unsigned __int8 *)(v28 + 32) == *(unsigned __int8 *)(v18 + 32))
          {
            if (v29 == 1) {
              goto LABEL_42;
            }
            if (*(unsigned __int8 *)(v28 + 33) == *(unsigned __int8 *)(v18 + 33))
            {
              if (v29 == 2) {
                goto LABEL_42;
              }
              if (*(unsigned __int8 *)(v28 + 34) == *(unsigned __int8 *)(v18 + 34)) {
                break;
              }
            }
          }
        }
      }
LABEL_26:
      unint64_t v24 = (v24 + 1) & v26;
      if (((*(void *)(v9 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
        goto LABEL_6;
      }
    }
    uint64_t v31 = (unsigned __int8 *)(v28 + 35);
    uint64_t v32 = v29 - 3;
    uint64_t v33 = (unsigned __int8 *)(v18 + 35);
    while (v32)
    {
      int v35 = *v31++;
      int v34 = v35;
      int v36 = *v33++;
      --v32;
      if (v34 != v36) {
        goto LABEL_26;
      }
    }
LABEL_42:
    v45[0] = a1;
    v45[1] = v5;
    v45[2] = v43;
    uint64_t v45[3] = v10;
    v45[4] = v8;
    unint64_t v37 = (unint64_t)((1 << v25) + 63) >> 6;
    if (v25 <= 0xD || (Swift::Int isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      uint64_t v39 = (char *)&v43 - v38;
      memcpy((char *)&v43 - v38, (const void *)(v2 + 56), 8 * v37);
      Swift::Int v40 = sub_10051FAC8((Swift::Int)v39, v37, v2, v24, v45);
      swift_release();
      sub_10003BC80();
    }
    else
    {
      uint64_t v41 = (void *)swift_slowAlloc();
      memcpy(v41, (const void *)(v2 + 56), 8 * v37);
      Swift::Int v40 = sub_10051FAC8((Swift::Int)v41, v37, v2, v24, v45);
      swift_release();
      sub_10003BC80();
      swift_slowDealloc();
    }
    return (void *)v40;
  }
  else
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
}

uint64_t sub_10051F898(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Activity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10051F8FC(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  sub_1005E33F0();
  Swift::UInt v7 = a2 | ((unint64_t)a2 << 32);
  sub_1005E3410(v7);
  Swift::Int v8 = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
    return 0;
  }
  uint64_t v11 = ~v9;
  while (1)
  {
    uint64_t v12 = *(void *)(v6 + 48) + 16 * v10;
    if ((*(unsigned int *)(v12 + 8) | ((unint64_t)*(unsigned int *)(v12 + 8) << 32)) == v7)
    {
      uint64_t v13 = *(void *)v12;
      uint64_t v14 = *(void *)(v13 + 16);
      if (v14 == *(void *)(a1 + 16))
      {
        if (v14) {
          BOOL v15 = v13 == a1;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15) {
          goto LABEL_20;
        }
        if (*(unsigned __int8 *)(v13 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v14 == 1) {
            goto LABEL_20;
          }
          if (*(unsigned __int8 *)(v13 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v14 == 2) {
              goto LABEL_20;
            }
            if (*(unsigned __int8 *)(v13 + 34) == *(unsigned __int8 *)(a1 + 34)) {
              break;
            }
          }
        }
      }
    }
LABEL_3:
    unint64_t v10 = (v10 + 1) & v11;
    if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      return 0;
    }
  }
  int64_t v16 = (unsigned __int8 *)(v13 + 35);
  uint64_t v17 = v14 - 3;
  uint64_t v18 = (unsigned __int8 *)(a1 + 35);
  while (v17)
  {
    int v20 = *v16++;
    int v19 = v20;
    int v21 = *v18++;
    --v17;
    if (v19 != v21) {
      goto LABEL_3;
    }
  }
LABEL_20:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = *v3;
  uint64_t v26 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_10053342C();
    uint64_t v24 = v26;
  }
  uint64_t v22 = *(void *)(*(void *)(v24 + 48) + 16 * v10);
  sub_100094EDC(v10);
  *uint64_t v3 = v26;
  swift_bridgeObjectRelease();
  return v22;
}

Swift::Int sub_10051FAC8(Swift::Int result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  Swift::UInt v7 = (unint64_t *)result;
  uint64_t v8 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v9 = v8 - 1;
  uint64_t v10 = a3 + 56;
  while (2)
  {
    uint64_t v42 = v9;
    while (1)
    {
LABEL_4:
      int64_t v14 = a5[3];
      unint64_t v15 = a5[4];
      if (v15)
      {
        uint64_t v16 = (v15 - 1) & v15;
        unint64_t v17 = __clz(__rbit64(v15)) | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
          goto LABEL_45;
        }
        int64_t v19 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v20 = a5[3];
        if (v18 >= v19) {
          goto LABEL_43;
        }
        uint64_t v21 = a5[1];
        unint64_t v22 = *(void *)(v21 + 8 * v18);
        if (!v22)
        {
          int64_t v20 = v14 + 1;
          if (v14 + 2 >= v19) {
            goto LABEL_43;
          }
          unint64_t v22 = *(void *)(v21 + 8 * (v14 + 2));
          if (v22)
          {
            int64_t v18 = v14 + 2;
          }
          else
          {
            int64_t v20 = v14 + 2;
            if (v14 + 3 >= v19) {
              goto LABEL_43;
            }
            unint64_t v22 = *(void *)(v21 + 8 * (v14 + 3));
            if (v22)
            {
              int64_t v18 = v14 + 3;
            }
            else
            {
              int64_t v18 = v14 + 4;
              int64_t v20 = v14 + 3;
              if (v14 + 4 >= v19) {
                goto LABEL_43;
              }
              unint64_t v22 = *(void *)(v21 + 8 * v18);
              if (!v22)
              {
                int64_t v20 = v19 - 1;
                int64_t v23 = v14 + 5;
                while (v19 != v23)
                {
                  unint64_t v22 = *(void *)(v21 + 8 * v23++);
                  if (v22)
                  {
                    int64_t v18 = v23 - 1;
                    goto LABEL_21;
                  }
                }
LABEL_43:
                a5[3] = v20;
                a5[4] = 0;
                swift_retain();
                return sub_10051FDBC(v7, a2, v42, a3);
              }
            }
          }
        }
LABEL_21:
        uint64_t v16 = (v22 - 1) & v22;
        unint64_t v17 = __clz(__rbit64(v22)) + (v18 << 6);
        int64_t v14 = v18;
      }
      uint64_t v24 = *(void *)(*a5 + 48) + 16 * v17;
      uint64_t v25 = *(void *)v24;
      uint64_t v26 = *(unsigned int *)(v24 + 8);
      a5[3] = v14;
      a5[4] = v16;
      sub_1005E33F0();
      Swift::UInt v27 = v26 | (v26 << 32);
      sub_1005E3410(v27);
      uint64_t result = sub_1005E3470();
      uint64_t v28 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v29 = result & ~v28;
      if ((*(void *)(v10 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29))
      {
        uint64_t v30 = ~v28;
        while (1)
        {
          uint64_t v31 = *(void *)(a3 + 48) + 16 * v29;
          if ((*(unsigned int *)(v31 + 8) | ((unint64_t)*(unsigned int *)(v31 + 8) << 32)) == v27)
          {
            uint64_t v32 = *(void *)v31;
            uint64_t v33 = *(void *)(v32 + 16);
            if (v33 == *(void *)(v25 + 16))
            {
              if (v33) {
                BOOL v34 = v32 == v25;
              }
              else {
                BOOL v34 = 1;
              }
              if (v34) {
                goto LABEL_3;
              }
              if (*(unsigned __int8 *)(v32 + 32) == *(unsigned __int8 *)(v25 + 32))
              {
                if (v33 == 1) {
                  goto LABEL_3;
                }
                if (*(unsigned __int8 *)(v32 + 33) == *(unsigned __int8 *)(v25 + 33))
                {
                  if (v33 == 2) {
                    goto LABEL_3;
                  }
                  if (*(unsigned __int8 *)(v32 + 34) == *(unsigned __int8 *)(v25 + 34)) {
                    break;
                  }
                }
              }
            }
          }
LABEL_24:
          unint64_t v29 = (v29 + 1) & v30;
          if (((*(void *)(v10 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
            goto LABEL_4;
          }
        }
        int v35 = (unsigned __int8 *)(v32 + 35);
        uint64_t v36 = v33 - 3;
        unint64_t v37 = (unsigned __int8 *)(v25 + 35);
        while (v36)
        {
          int v39 = *v35++;
          int v38 = v39;
          int v40 = *v37++;
          --v36;
          if (v38 != v40) {
            goto LABEL_24;
          }
        }
LABEL_3:
        uint64_t v11 = (v29 >> 3) & 0x1FFFFFFFFFFFFFF8;
        uint64_t v12 = 1 << v29;
        uint64_t v13 = *(unint64_t *)((char *)v7 + v11);
        *(unint64_t *)((char *)v7 + v11) = v13 & ~v12;
        if ((v13 & v12) != 0) {
          break;
        }
      }
    }
    uint64_t v9 = v42 - 1;
    if (__OFSUB__(v42, 1))
    {
LABEL_45:
      __break(1u);
      return result;
    }
    if (v42 != 1) {
      continue;
    }
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
}

uint64_t sub_10051FDBC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10000566C(&qword_100718398);
  uint64_t result = sub_1005E2C30();
  uint64_t v9 = (unsigned char *)result;
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= v32) {
      goto LABEL_36;
    }
    unint64_t v16 = v31[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= v32) {
        goto LABEL_36;
      }
      unint64_t v16 = v31[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= v32) {
          goto LABEL_36;
        }
        unint64_t v16 = v31[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v4 + 48) + 16 * v14;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(unsigned int *)(v18 + 8);
    sub_1005E33F0();
    sub_1005E3410(v20 | (v20 << 32));
    uint64_t result = sub_1005E3470();
    uint64_t v21 = -1 << v9[32];
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v29 = *((void *)v9 + 6) + 16 * v24;
    *(void *)uint64_t v29 = v19;
    *(_DWORD *)(v29 + 8) = v20;
    ++*((void *)v9 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    uint64_t result = swift_bridgeObjectRetain();
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= v32) {
    goto LABEL_36;
  }
  unint64_t v16 = v31[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v32) {
      goto LABEL_36;
    }
    unint64_t v16 = v31[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

void *_s13PendingCancelVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *_s13PendingCancelVwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *_s13PendingCancelVMa()
{
  return &_s13PendingCancelVN;
}

uint64_t sub_1005200E4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_100717BF8);
  char v33 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v32 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v31 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v31) {
          goto LABEL_33;
        }
        unint64_t v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v21 = v32[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v32 = -1 << v30;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v31) {
                  goto LABEL_33;
                }
                unint64_t v21 = v32[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      Swift::UInt32 v27 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 24 * v19;
      int v29 = *(_DWORD *)v28;
      long long v34 = *(_OWORD *)(v28 + 8);
      if ((v33 & 1) == 0) {
        swift_retain();
      }
      sub_1005E33F0();
      sub_1005E3440(v27);
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 24 * v16;
      *(_DWORD *)uint64_t v17 = v29;
      *(_OWORD *)(v17 + 8) = v34;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1005203E0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_100717BF0);
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v30 = a2;
    int64_t v8 = 0;
    int64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v12) {
          goto LABEL_31;
        }
        unint64_t v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v18 = v31[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v31 = -1 << v29;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v18 = v31[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      Swift::UInt32 v20 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v16);
      uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      sub_1005E33F0();
      sub_1005E3440(v20);
      uint64_t result = sub_1005E3470();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v14) = v20;
      *(void *)(*(void *)(v7 + 56) + 8 * v14) = v21;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1005206A8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ConnectionStatus(0);
  uint64_t v40 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10000566C(&qword_100717BE8);
  int v41 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    int v39 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    unint64_t v37 = v2;
    int64_t v38 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v20 = v19 | (v11 << 6);
      }
      else
      {
        int64_t v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v39;
        if (v21 >= v38) {
          goto LABEL_34;
        }
        unint64_t v22 = v39[v21];
        ++v11;
        if (!v22)
        {
          int64_t v11 = v21 + 1;
          if (v21 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v22 = v39[v11];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v38)
            {
LABEL_34:
              if ((v41 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v37;
                goto LABEL_41;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
              if (v36 >= 64) {
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int v39 = -1 << v36;
              }
              uint64_t v3 = v37;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v39[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v11 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v22 = v39[v11];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v23;
          }
        }
LABEL_21:
        unint64_t v15 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      uint64_t v24 = *(void *)(v8 + 48) + 16 * v20;
      uint64_t v25 = *(void *)v24;
      uint64_t v26 = *(unsigned int *)(v24 + 8);
      uint64_t v27 = *(void *)(v40 + 72);
      uint64_t v28 = *(void *)(v8 + 56) + v27 * v20;
      if (v41)
      {
        sub_1005057C0(v28, (uint64_t)v7);
      }
      else
      {
        sub_100521DFC(v28, (uint64_t)v7);
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3410(v26 | (v26 << 32));
      uint64_t result = sub_1005E3470();
      uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v17 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = *(void *)(v10 + 48) + 16 * v17;
      *(void *)uint64_t v18 = v25;
      *(_DWORD *)(v18 + 8) = v26;
      uint64_t result = sub_1005057C0((uint64_t)v7, *(void *)(v10 + 56) + v27 * v17);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_100520A28(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_100717BD8);
  char v39 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v37 = (void *)(v5 + 64);
    uint64_t v38 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v19 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v37;
        if (v21 >= v36) {
          goto LABEL_33;
        }
        unint64_t v22 = v37[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v22 = v37[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_33:
              if ((v39 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
              if (v35 >= 64) {
                bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v37 = -1 << v35;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v22 = v37[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v11 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
      uint64_t v30 = *v28;
      Swift::UInt v29 = v28[1];
      uint64_t v31 = *(void *)(v5 + 56) + 24 * v20;
      int v32 = *(_DWORD *)v31;
      char v33 = *(unsigned char *)(v31 + 4);
      uint64_t v34 = *(void *)(v31 + 8);
      char v40 = *(unsigned char *)(v31 + 16);
      if ((v39 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3410(v29);
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v15 == v25;
          if (v15 == v25) {
            unint64_t v15 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v12 + 8 * v15);
        }
        while (v27 == -1);
        unint64_t v16 = __clz(__rbit64(~v27)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      unint64_t v17 = (void *)(*(void *)(v7 + 48) + 16 * v16);
      *unint64_t v17 = v30;
      v17[1] = v29;
      uint64_t v18 = *(void *)(v7 + 56) + 24 * v16;
      *(_DWORD *)uint64_t v18 = v32;
      *(unsigned char *)(v18 + 4) = v33;
      *(void *)(v18 + 8) = v34;
      *(unsigned char *)(v18 + 16) = v40;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v38;
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

void *sub_100520D48()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_100717BF8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    int v20 = *(_DWORD *)v19;
    long long v21 = *(_OWORD *)(v19 + 8);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(_DWORD *)uint64_t v22 = v20;
    *(_OWORD *)(v22 + 8) = v21;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100520F08()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_100717BF0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v23 = __clz(__rbit64(v21));
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = v23 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v18);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10052109C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ConnectionStatus(0);
  uint64_t v29 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100717BE8);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1005E2FD0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v27 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = *(void *)(v5 + 48) + 16 * v16;
    uint64_t v19 = *(void *)v18;
    int v20 = *(_DWORD *)(v18 + 8);
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_100521DFC(*(void *)(v5 + 56) + v21, (uint64_t)v4);
    uint64_t v22 = *(void *)(v7 + 48) + v17;
    *(void *)uint64_t v22 = v19;
    *(_DWORD *)(v22 + 8) = v20;
    sub_1005057C0((uint64_t)v4, *(void *)(v7 + 56) + v21);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_100521310()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_100717BD8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    int v22 = *(_DWORD *)v21;
    char v23 = *(unsigned char *)(v21 + 4);
    uint64_t v24 = *(void *)(v21 + 8);
    LOBYTE(v21) = *(unsigned char *)(v21 + 16);
    int64_t v25 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v25 = v18;
    v25[1] = v19;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(_DWORD *)uint64_t v26 = v22;
    *(unsigned char *)(v26 + 4) = v23;
    *(void *)(v26 + 8) = v24;
    *(unsigned char *)(v26 + 16) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

Swift::Int sub_1005214E4(uint64_t isStackAllocationSafe, uint64_t a2)
{
  Swift::Int v4 = isStackAllocationSafe;
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (Swift::Int isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    Swift::Int v8 = sub_1005218E8((Swift::Int)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4, a2);
    if (v2) {
      swift_willThrow();
    }
    else {
      Swift::Int v4 = v8;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    int64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    Swift::Int v4 = sub_1005218E8((Swift::Int)v9, v6, v4, a2);
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_100521668(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_10000566C(&qword_100717BF0);
  uint64_t result = sub_1005E2FF0();
  uint64_t v9 = result;
  int64_t v29 = a1;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v30) {
        return v9;
      }
      unint64_t v16 = v29[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v30) {
          return v9;
        }
        unint64_t v16 = v29[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v30) {
            return v9;
          }
          unint64_t v16 = v29[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v30) {
              return v9;
            }
            unint64_t v16 = v29[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v30) {
                  return v9;
                }
                unint64_t v16 = v29[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    Swift::UInt32 v18 = *(_DWORD *)(*(void *)(v4 + 48) + 4 * v14);
    uint64_t v19 = *(void *)(*(void *)(v4 + 56) + 8 * v14);
    sub_1005E33F0();
    sub_1005E3440(v18);
    uint64_t result = sub_1005E3470();
    uint64_t v20 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_DWORD *)(*(void *)(v9 + 48) + 4 * v23) = v18;
    *(void *)(*(void *)(v9 + 56) + 8 * v23) = v19;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

Swift::Int sub_1005218E8(Swift::Int result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v23 = (unint64_t *)result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(a3 + 64);
  int64_t v25 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = a4 + 56;
  while (1)
  {
    while (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      if (*(void *)(a4 + 16))
      {
LABEL_19:
        Swift::UInt32 v17 = *(_DWORD *)(*(void *)(a3 + 48) + 4 * v13);
        sub_1005E33F0();
        sub_1005E3440(v17);
        uint64_t result = sub_1005E3470();
        uint64_t v18 = -1 << *(unsigned char *)(a4 + 32);
        unint64_t v19 = result & ~v18;
        if ((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
        {
          uint64_t v20 = *(void *)(a4 + 48);
          if (*(_DWORD *)(v20 + 4 * v19) == v17)
          {
LABEL_24:
            *(unint64_t *)((char *)v23 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
            BOOL v14 = __OFADD__(v5++, 1);
            if (v14) {
              goto LABEL_33;
            }
          }
          else
          {
            uint64_t v21 = ~v18;
            while (1)
            {
              unint64_t v19 = (v19 + 1) & v21;
              if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
                break;
              }
              if (*(_DWORD *)(v20 + 4 * v19) == v17) {
                goto LABEL_24;
              }
            }
          }
        }
      }
    }
    BOOL v14 = __OFADD__(v6++, 1);
    if (v14)
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v6 >= v25) {
      return sub_100521668(v23, a2, v5, a3);
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    if (!v15) {
      break;
    }
LABEL_18:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
    if (*(void *)(a4 + 16)) {
      goto LABEL_19;
    }
  }
  int64_t v16 = v6 + 1;
  if (v6 + 1 >= v25) {
    return sub_100521668(v23, a2, v5, a3);
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15) {
    goto LABEL_17;
  }
  int64_t v16 = v6 + 2;
  if (v6 + 2 >= v25) {
    return sub_100521668(v23, a2, v5, a3);
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15) {
    goto LABEL_17;
  }
  int64_t v16 = v6 + 3;
  if (v6 + 3 >= v25) {
    return sub_100521668(v23, a2, v5, a3);
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
LABEL_17:
    int64_t v6 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v25) {
      return sub_100521668(v23, a2, v5, a3);
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_100521B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  Swift::Int v6 = sub_1005214E4(v5, a1);
  swift_bridgeObjectRelease();
  *uint64_t v2 = v6;
  swift_bridgeObjectRelease();
  uint64_t v34 = a1 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (v9)
  {
    unint64_t v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v13 = v12 | (v11 << 6);
LABEL_22:
    uint64_t v17 = *(unsigned int *)(*(void *)(a1 + 48) + 4 * v13);
    if (*(void *)(*v3 + 16))
    {
      sub_100024260(v17);
      if (v18) {
        continue;
      }
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v20 = *v3;
    int64_t v36 = (void *)*v3;
    *uint64_t v3 = 0x8000000000000000;
    unint64_t v22 = sub_100024260(v17);
    uint64_t v23 = *(void *)(v20 + 16);
    BOOL v24 = (v21 & 1) == 0;
    uint64_t v25 = v23 + v24;
    if (__OFADD__(v23, v24))
    {
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      uint64_t result = sub_1005E3380();
      __break(1u);
      return result;
    }
    char v26 = v21;
    if (*(void *)(v20 + 24) >= v25)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        int64_t v29 = v36;
        if (v21) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_100520F08();
        int64_t v29 = v36;
        if (v26) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1005203E0(v25, isUniquelyReferenced_nonNull_native);
      uint64_t v27 = sub_100024260(v17);
      if ((v26 & 1) != (v28 & 1)) {
        goto LABEL_42;
      }
      unint64_t v22 = v27;
      int64_t v29 = v36;
      if (v26)
      {
LABEL_4:
        *(void *)(v29[7] + 8 * v22) = a2;
        goto LABEL_5;
      }
    }
    v29[(v22 >> 6) + 8] |= 1 << v22;
    *(_DWORD *)(v29[6] + 4 * v22) = v17;
    *(void *)(v29[7] + 8 * v22) = a2;
    uint64_t v30 = v29[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31) {
      goto LABEL_40;
    }
    v29[2] = v32;
LABEL_5:
    *uint64_t v3 = (Swift::Int)v29;
    swift_bridgeObjectRelease();
  }
  int64_t v14 = v11 + 1;
  if (__OFADD__(v11, 1)) {
    goto LABEL_39;
  }
  if (v14 < v10)
  {
    unint64_t v15 = *(void *)(v34 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v10) {
        goto LABEL_35;
      }
      unint64_t v15 = *(void *)(v34 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v10) {
          goto LABEL_35;
        }
        unint64_t v15 = *(void *)(v34 + 8 * v11);
        if (!v15)
        {
          int64_t v16 = v14 + 3;
          if (v16 >= v10) {
            goto LABEL_35;
          }
          unint64_t v15 = *(void *)(v34 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_41;
              }
              if (v11 >= v10) {
                goto LABEL_35;
              }
              unint64_t v15 = *(void *)(v34 + 8 * v11);
              ++v16;
              if (v15) {
                goto LABEL_21;
              }
            }
          }
          int64_t v11 = v16;
        }
      }
    }
LABEL_21:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
    goto LABEL_22;
  }
LABEL_35:
  return swift_release();
}

uint64_t sub_100521DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *static Engine.makeEngineAndPersistence<A>(configuration:windowOfInterest:environment:makePersistence:)(Swift::String *a1, uint64_t a2, char a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t (*a8)(void, uint64_t (*)(uint64_t a1, char a2), uint64_t), uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v40 = a7;
  int v39 = a6;
  uint64_t v37 = a2;
  uint64_t v38 = a5;
  uint64_t v34 = a11;
  uint64_t v32 = a8;
  uint64_t v33 = a10;
  uint64_t v31 = a9;
  int v35 = a4;
  int v36 = a3 & 1;
  uint64_t v12 = type metadata accessor for Configuration();
  __chkstk_darwin(v12 - 8);
  uint64_t v30 = (uint64_t *)((char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1005E2700();
  __chkstk_darwin(v14);
  uint64_t v15 = sub_1005E2600();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  char v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005221EC();
  Swift::String v43 = *a1;
  int v41 = (void *)0xD00000000000001BLL;
  unint64_t v42 = 0x80000001005EBBF0;
  sub_1005E1E30(v43);
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v15);
  int v41 = _swiftEmptyArrayStorage;
  sub_10052222C();
  sub_10000566C(&qword_1007183B0);
  sub_100522284();
  sub_1005E2AD0();
  unint64_t v19 = (void *)sub_1005E2710();
  type metadata accessor for EngineBox();
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for EngineTracingIDOwner();
  swift_allocObject();
  swift_retain();
  uint64_t v21 = EngineTracingIDOwner.init()();
  uint64_t v22 = v32(*(unsigned __int8 *)(v21 + 16), sub_100522370, v20);
  uint64_t v23 = (void *)swift_allocObject();
  uint64_t v24 = v34;
  v23[2] = v33;
  v23[3] = v24;
  v23[4] = v22;
  uint64_t v25 = v30;
  sub_1005223EC((uint64_t)a1, (uint64_t)v30);
  swift_allocObject();
  int v26 = v35 & 0x101FF;
  swift_unknownObjectRetain();
  uint64_t v27 = sub_10051010C(v21, v25, v37, v36, v26, v38, v39, v40, v19, (uint64_t)sub_1005223B4, (uint64_t)v23);
  swift_release();
  swift_weakAssign();
  swift_release();
  return v27;
}

unint64_t sub_1005221EC()
{
  unint64_t result = qword_1007183A0;
  if (!qword_1007183A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007183A0);
  }
  return result;
}

unint64_t sub_10052222C()
{
  unint64_t result = qword_1007183A8;
  if (!qword_1007183A8)
  {
    sub_1005E2700();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007183A8);
  }
  return result;
}

unint64_t sub_100522284()
{
  unint64_t result = qword_1007183B8;
  if (!qword_1007183B8)
  {
    sub_10000744C(&qword_1007183B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007183B8);
  }
  return result;
}

uint64_t type metadata accessor for EngineBox()
{
  return self;
}

uint64_t sub_100522304(uint64_t a1, char a2)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    Engine.persistenceDidSend(_:)(a1, a2 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_100522370(uint64_t a1, char a2)
{
  return sub_100522304(a1, a2 & 1);
}

uint64_t sub_10052237C()
{
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005223B4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 + 24) + 8))(a1, *(void *)(v1 + 16));
}

uint64_t sub_1005223EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Configuration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100522450()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_100522488()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_1005E1850();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  Swift::Int v6 = *(void **)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_didTearDown)) {
    return result;
  }
  *(unsigned char *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_didTearDown) = 1;
  if (!*(void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_stateCapture))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  swift_retain();
  StateCapture.tearDown()();
  uint64_t result = swift_release();
  if (!*(void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_checkForStallTimer))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  swift_retain();
  RestartableTimer.stop()();
  uint64_t result = swift_release();
  if (!*(void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_pendingCancelTimer))
  {
LABEL_21:
    __break(1u);
    return result;
  }
  swift_retain();
  RestartableTimer.stop()();
  swift_release();
  unint64_t v9 = (unint64_t *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  unint64_t v1 = *v9;
  if (v1 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_1005E2FB0();
    uint64_t v10 = result;
    if (result) {
      goto LABEL_8;
    }
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v10 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain_n();
  if (v10)
  {
LABEL_8:
    if (v10 >= 1)
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if ((v1 & 0xC000000000000001) != 0)
        {
          uint64_t v12 = sub_1005E2CF0();
        }
        else
        {
          uint64_t v12 = *(void *)(v1 + 8 * i + 32);
          swift_retain();
        }
        (*(void (**)(void))(*(void *)v12 + 512))();
        swift_release();
      }
      return swift_bridgeObjectRelease_n();
    }
    __break(1u);
    goto LABEL_19;
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_100522728(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_10000566C(&qword_100718230);
  __chkstk_darwin();
  Swift::Int v6 = (uint64_t *)((char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1005E1850();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (uint64_t)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void **)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *(void *)uint64_t v10 = v11;
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v12 = v11;
  LOBYTE(v11) = sub_1005E1860();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  uint64_t v13 = v8 + 8;
  v14(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v15 = v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1000079E4(v15, (uint64_t)v6, &qword_100718230);
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v2 = *(void *)(v10 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v2 + 48))(v6, 1, v10);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_retain_n();
    swift_retain();
    uint64_t v17 = sub_1005E0EB0();
    int v18 = sub_1005E2580();
    unint64_t v19 = &off_100718000;
    if (!os_log_type_enabled((os_log_t)v17, (os_log_type_t)v18))
    {

      swift_release_n();
      swift_release_n();
      goto LABEL_8;
    }
    int v31 = v18;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v33[0] = v30;
    *(_DWORD *)uint64_t v13 = 68158722;
    LODWORD(v32) = 2;
    sub_1005E2960();
    *(_WORD *)(v13 + 8) = 256;
    LOBYTE(v32) = *(unsigned char *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v13 + 11) = 2048;
    uint64_t v20 = (unint64_t *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
    swift_beginAccess();
    unint64_t v21 = *v20;
    if (v21 >> 62) {
      goto LABEL_23;
    }
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_release();
    while (1)
    {
      uint64_t v32 = v22;
      sub_1005E2960();
      swift_release();
      *(_WORD *)(v13 + 21) = 2082;
      uint64_t v23 = ConnectionID.debugDescription.getter(*(unsigned int *)(a1
                                                                 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id));
      uint64_t v32 = sub_100507920(v23, v24, v33);
      sub_1005E2960();
      swift_release_n();
      uint64_t v25 = swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 31) = 2048;
      uint64_t v26 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 400))(v25);
      swift_release();
      uint64_t v32 = v26;
      sub_1005E2960();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v17, (os_log_type_t)v31, "[%.*hhx] Received authenticated connection with better path. Cancelling all (%ld) existing connection and switching to the new connection %{public}s [C%llu].", (uint8_t *)v13, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v19 = &off_100718000;
LABEL_8:
      uint64_t v27 = *(void (**)(uint64_t *, uint64_t))(v2 + 8);
      v2 += 8;
      v27(v6, v10);
      Swift::Int v6 = (uint64_t *)((char *)v19[141] + v3);
      swift_beginAccess();
      uint64_t v10 = *v6;
      if ((unint64_t)*v6 >> 62)
      {
LABEL_17:
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_1005E2FB0();
        if (!v17) {
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v17 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v17) {
          goto LABEL_18;
        }
      }
      if (v17 >= 1) {
        break;
      }
      __break(1u);
LABEL_23:
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1005E2FB0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    for (uint64_t i = 0; i != v17; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0)
      {
        uint64_t v29 = sub_1005E2CF0();
      }
      else
      {
        uint64_t v29 = *(void *)(v10 + 8 * i + 32);
        swift_retain();
      }
      (*(void (**)(void))(*(void *)v29 + 512))();
      swift_release();
    }
LABEL_18:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_retain();
    sub_1005E20A0();
    if (*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1005E2110();
    }
    sub_1005E2170();
    sub_1005E20E0();
    swift_endAccess();
    uint64_t result = (*(uint64_t (**)(uint64_t, _UNKNOWN **))(*(void *)a1 + 592))(v3, &off_1006FC038);
    if (*(void *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_checkForStallTimer))
    {
      swift_retain();
      RestartableTimer.start()();
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100522DE4(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_14;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v7 = 0;
  if (v6)
  {
    while (1)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = sub_1005E2CF0();
      }
      else
      {
        uint64_t v8 = *(void *)(a3 + 8 * v7 + 32);
        swift_retain();
      }
      uint64_t v12 = v8;
      char v9 = a1(&v12);
      swift_release();
      if (v3 || (v9 & 1) != 0) {
        break;
      }
      uint64_t v10 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_14:
        swift_bridgeObjectRetain();
        uint64_t v6 = sub_1005E2FB0();
        swift_bridgeObjectRelease();
        uint64_t v7 = 0;
        if (!v6) {
          return v7;
        }
      }
      else
      {
        ++v7;
        if (v10 == v6) {
          return 0;
        }
      }
    }
  }
  return v7;
}

uint64_t sub_100522F08(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = type metadata accessor for ClientCommand(0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  char v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  int64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = type metadata accessor for Command();
  __chkstk_darwin(v12);
  uint64_t v14 = (unsigned int *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100535D6C(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for Command);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v17 = (unsigned int *)((char *)v14 + *(int *)(sub_10000566C(&qword_100718670) + 48));
      uint64_t v18 = *v17;
      unsigned __int8 v19 = *((unsigned char *)v17 + 4);
      uint64_t v20 = (void *)*((void *)v17 + 1);
      Swift::UInt32 v21 = v17[4];
      sub_100535C58((uint64_t)v14, (uint64_t)v9, type metadata accessor for ClientCommand);
      uint64_t v22 = swift_bridgeObjectRetain();
      unsigned __int8 v35 = v19;
      uint64_t v23 = sub_100527700(v22, v18 | ((unint64_t)v19 << 32), v20, v21, (uint64_t)a2);
      if (v3)
      {
        swift_bridgeObjectRelease_n();
        sub_100535BF8((uint64_t)v9, type metadata accessor for ClientCommand);
        return v2;
      }
      if ((v24 & 1) == 0)
      {
        unint64_t v29 = v23;
        uint64_t v30 = (uint64_t *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
        swift_beginAccess();
        uint64_t v31 = *v30;
        if ((*v30 & 0xC000000000000001) == 0)
        {
          if ((v29 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v29 < *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            uint64_t v32 = *(void *)(v31 + 8 * v29 + 32);
            swift_retain();
LABEL_13:
            swift_endAccess();
            uint64_t v2 = (*(uint64_t (**)(char *))(*(void *)v32 + 536))(v9);
            swift_bridgeObjectRelease_n();
            swift_release();
            goto LABEL_15;
          }
          __break(1u);
          JUMPOUT(0x1005232F8);
        }
        uint64_t v32 = sub_1005E2CF0();
        goto LABEL_13;
      }
      swift_bridgeObjectRelease_n();
      uint64_t v2 = 0;
LABEL_15:
      uint64_t v16 = (uint64_t)v9;
LABEL_16:
      sub_100535BF8(v16, type metadata accessor for ClientCommand);
      return v2;
    case 2:
      uint64_t v25 = *v14;
      unsigned __int8 v26 = *((unsigned char *)v14 + 4);
      uint64_t v27 = (void *)*((void *)v14 + 1);
      Swift::UInt32 v28 = v14[4];
      swift_bridgeObjectRetain();
      unsigned __int8 v35 = v26;
      uint64_t v2 = sub_10052576C(v25 | ((unint64_t)v26 << 32), v27, v28, (uint64_t)a2);
      swift_bridgeObjectRelease_n();
      return v2;
    case 3:
      uint64_t v2 = sub_10052612C(*(void *)v14, v14[2]);
      swift_bridgeObjectRelease();
      return v2;
    case 4:
      sub_1005266E0(EnumCaseMultiPayload, a2[1]);
      return 0;
    default:
      sub_100535C58((uint64_t)v14, (uint64_t)v11, type metadata accessor for ClientCommand);
      uint64_t v2 = sub_100524E3C((uint64_t)v11, *a2, a2[1]);
      uint64_t v16 = (uint64_t)v11;
      goto LABEL_16;
  }
}

uint64_t sub_10052330C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_100718230);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1005E1850();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v9 = *(void **)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  id v10 = v9;
  LOBYTE(v9) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    uint64_t v12 = sub_10052B660();
    if ((ConnectionIDsGroupedByState.containsActivelyConnecting.getter(v12) & 1) == 0)
    {
LABEL_8:
      __uint64_t v19 = static MonotonicTime.now()();
      uint64_t v20 = ConnectionLimitsAndUsage.connectionsToBeCancelled(_:)();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_100521B1C(v20, v19);
      swift_endAccess();
      swift_bridgeObjectRelease();
      return sub_10052B954(v19);
    }
    uint64_t v13 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    sub_1000079E4(v13, (uint64_t)v4, &qword_100718230);
    uint64_t v14 = sub_1005E0ED0();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v4, 1, v14);
    if (result != 1)
    {
      swift_retain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v16 = sub_1005E0EB0();
      os_log_type_t v17 = sub_1005E2590();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 68157952;
        int v22 = 2;
        sub_1005E2960();
        *(_WORD *)(v18 + 8) = 256;
        LOBYTE(v22) = *(unsigned char *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
        sub_1005E2960();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "[%.*hhx] Some connections are actively connecting.", (uint8_t *)v18, 0xBu);
        swift_slowDealloc();
      }
      else
      {
        swift_release();
      }

      (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v4, v14);
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100523698@<X0>(unsigned char *a1@<X8>)
{
  int v41 = a1;
  uint64_t v2 = sub_10000566C(&qword_100717EF0);
  __chkstk_darwin(v2 - 8);
  uint64_t v40 = (uint64_t)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005E0970();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_100717EE8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  id v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = sub_10000566C(&qword_100717EF8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v38 - v17;
  uint64_t v19 = sub_1005E1850();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  int v22 = (uint64_t *)((char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = *(void **)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *int v22 = v23;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  id v24 = v23;
  LOBYTE(v23) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  if (v23)
  {
    uint64_t v26 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_lastError;
    swift_beginAccess();
    sub_1000079E4(v26, (uint64_t)v16, &qword_100717EF8);
    uint64_t v27 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v28 = *(void *)(v27 - 8);
    unint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    if (v29(v16, 1, v27) == 1)
    {
      sub_1005293EC(v18);
      sub_100007A48((uint64_t)v16, &qword_100717EF8);
    }
    else
    {
      sub_100535C58((uint64_t)v16, (uint64_t)v18, type metadata accessor for ConnectionStatus.Error);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v18, 0, 1, v27);
    }
    if (v29(v18, 1, v27) == 1)
    {
      sub_100007A48((uint64_t)v18, &qword_100717EF8);
      uint64_t v30 = 1;
      uint64_t v31 = v41;
    }
    else
    {
      uint64_t v32 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff;
      swift_beginAccess();
      uint64_t v31 = v41;
      if (*(unsigned char *)(v32 + 16))
      {
        uint64_t v33 = 1;
      }
      else
      {
        uint64_t v34 = *(void *)(v32 + 8);
        __uint64_t v35 = static MonotonicTime.now()();
        sub_1005E0960();
        Date.init(_:now:now:)(v34, v35, (uint64_t)v6);
        uint64_t v33 = 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v12, v33, 1, v39);
      char v36 = *v18;
      uint64_t v37 = v40;
      sub_1000079E4((uint64_t)&v18[*(int *)(v27 + 20)], v40, &qword_100717EF0);
      sub_1000079E4((uint64_t)v12, (uint64_t)v10, &qword_100717EE8);
      ConnectionStatus.Error.init(kind:details:backedOffUntil:)(v36, v37, (uint64_t)v10, v31);
      sub_100007A48((uint64_t)v12, &qword_100717EE8);
      sub_100535BF8((uint64_t)v18, type metadata accessor for ConnectionStatus.Error);
      uint64_t v30 = 0;
    }
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v31, v30, 1, v27);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100523B90(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void (**)(unint64_t))(result + 32);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    *(void *)(v6 + 24) = a2;
    v5(v6 | 0xA000000000000004);
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

double sub_100523C38@<D0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_100523CF4(v6);
    swift_release();
    *(void *)(a1 + 24) = &type metadata for ConnectionPool.CapturedValue;
    *(void *)(a1 + 32) = sub_100535CC0();
    uint64_t v2 = swift_allocObject();
    *(void *)a1 = v2;
    long long v3 = v6[3];
    *(_OWORD *)(v2 + 48) = v6[2];
    *(_OWORD *)(v2 + 64) = v3;
    *(void *)(v2 + 80) = v7;
    long long v4 = v6[1];
    *(_OWORD *)(v2 + 16) = v6[0];
    *(_OWORD *)(v2 + 32) = v4;
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(void *)&long long v4 = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return *(double *)&v4;
}

uint64_t sub_100523CF4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v58 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v59 = (uint64_t)&v57 - v8;
  uint64_t v9 = sub_10000566C(&qword_100717EF8);
  __chkstk_darwin(v9 - 8);
  uint64_t v67 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005E1850();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (void **)((char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *uint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  id v16 = v15;
  char v17 = sub_1005E1860();
  uint64_t v19 = *(void (**)(void *, uint64_t))(v12 + 8);
  uint64_t v18 = v12 + 8;
  v19(v14, v11);
  if (v17)
  {
    uint64_t v62 = v5;
    uint64_t v65 = v4;
    uint64_t v15 = *(void **)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logName);
    uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logName + 8);
    *(void *)&v73[0] = 0;
    *((void *)&v73[0] + 1) = 0xE000000000000000;
    char v72 = *(unsigned char *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    sub_10051BB7C();
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1005E1F20();
    int v22 = v21;
    if (sub_1005E1DC0() <= 1)
    {
      v75._countAndFlagsBits = 48;
      v75._object = (void *)0xE100000000000000;
      sub_1005E1E30(v75);
    }
    v76._countAndFlagsBits = v20;
    v76._object = v22;
    sub_1005E1E30(v76);
    swift_bridgeObjectRelease();
    uint64_t v4 = *((void *)&v73[0] + 1);
    uint64_t v14 = *(void **)&v73[0];
    uint64_t v66 = v2;
    uint64_t v23 = (uint64_t *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
    swift_beginAccess();
    uint64_t v5 = *v23;
    if (!((unint64_t)*v23 >> 62))
    {
      uint64_t v24 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1005E2FB0();
LABEL_6:
  uint64_t v63 = v15;
  uint64_t v64 = v18;
  uint64_t v60 = v4;
  id v61 = v14;
  if (v24)
  {
    uint64_t v71 = _swiftEmptyArrayStorage;
    uint64_t result = sub_100519554(0, v24 & ~(v24 >> 63), 0);
    if (v24 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v57 = a1;
    uint64_t v26 = 0;
    uint64_t v27 = v71;
    do
    {
      if ((v5 & 0xC000000000000001) != 0) {
        sub_1005E2CF0();
      }
      else {
        swift_retain();
      }
      CommandConnection.capturedValue.getter((uint64_t)v73);
      swift_release();
      uint64_t v71 = v27;
      unint64_t v29 = v27[2];
      unint64_t v28 = v27[3];
      if (v29 >= v28 >> 1)
      {
        sub_100519554(v28 > 1, v29 + 1, 1);
        uint64_t v27 = v71;
      }
      ++v26;
      v27[2] = v29 + 1;
      uint64_t v30 = &v27[27 * v29];
      long long v31 = v73[1];
      *((_OWORD *)v30 + 2) = v73[0];
      *((_OWORD *)v30 + 3) = v31;
      long long v32 = v73[2];
      long long v33 = v73[3];
      long long v34 = v73[5];
      *((_OWORD *)v30 + 6) = v73[4];
      *((_OWORD *)v30 + 7) = v34;
      *((_OWORD *)v30 + 4) = v32;
      *((_OWORD *)v30 + 5) = v33;
      long long v35 = v73[6];
      long long v36 = v73[7];
      long long v37 = v73[9];
      *((_OWORD *)v30 + 10) = v73[8];
      *((_OWORD *)v30 + 11) = v37;
      *((_OWORD *)v30 + 8) = v35;
      *((_OWORD *)v30 + 9) = v36;
      long long v38 = v73[10];
      long long v39 = v73[11];
      long long v40 = v73[12];
      *((unsigned char *)v30 + 240) = v74;
      *((_OWORD *)v30 + 13) = v39;
      *((_OWORD *)v30 + 14) = v40;
      *((_OWORD *)v30 + 12) = v38;
    }
    while (v24 != v26);
    swift_bridgeObjectRelease();
    a1 = v57;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = _swiftEmptyArrayStorage;
  }
  uint64_t v42 = v66;
  uint64_t v41 = (uint64_t)v67;
  uint64_t v43 = v66 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_lastError;
  swift_beginAccess();
  sub_1000079E4(v43, v41, &qword_100717EF8);
  uint64_t v44 = 0;
  uint64_t v45 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v41, 1, v65) != 1)
  {
    uint64_t v46 = v41;
    uint64_t v47 = v59;
    sub_100535C58(v46, v59, type metadata accessor for ConnectionStatus.Error);
    sub_100535D6C(v47, v58, type metadata accessor for ConnectionStatus.Error);
    uint64_t v44 = sub_1005E1CA0();
    uint64_t v45 = v48;
    sub_100535BF8(v47, type metadata accessor for ConnectionStatus.Error);
  }
  uint64_t v69 = 0;
  unint64_t v70 = 0xE000000000000000;
  uint64_t v49 = (unsigned __int8 *)(v42 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_credentialsState);
  swift_beginAccess();
  int v50 = *v49;
  v68._countAndFlagsBits = 0;
  v68._object = (void *)0xE000000000000000;
  if (v50)
  {
    if (v50 == 1)
    {
      int v51 = (void *)0xED00006572756C69;
      v52._countAndFlagsBits = 0x6166202E706D6574;
    }
    else
    {
      int v51 = (void *)0xE700000000000000;
      v52._countAndFlagsBits = 0x64696C61766E69;
    }
  }
  else
  {
    int v51 = (void *)0xE400000000000000;
    v52._countAndFlagsBits = 1685024615;
  }
  v52._object = v51;
  sub_1005E1E30(v52);
  swift_bridgeObjectRelease();
  sub_1005E1E30(v68);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v53 = v69;
  unint64_t v54 = v70;
  uint64_t v55 = v64;
  *a1 = v63;
  a1[1] = v55;
  uint64_t v56 = v60;
  a1[2] = v61;
  a1[3] = v56;
  a1[4] = v27;
  a1[5] = v44;
  a1[6] = v45;
  a1[7] = v53;
  a1[8] = v54;
  return result;
}

uint64_t sub_1005242FC(uint64_t a1)
{
  return sub_100531EA0(a1, (void (*)(void))sub_100524314);
}

uint64_t sub_100524314()
{
  uint64_t v1 = sub_1005E1850();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = sub_1005E1860();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    uint64_t v7 = (unint64_t *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
    uint64_t result = swift_beginAccess();
    unint64_t v9 = *v7;
    if (!(v9 >> 62))
    {
      if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_4;
      }
LABEL_9:
      if (*(void *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_checkForStallTimer))
      {
        swift_retain();
        RestartableTimer.stop()();
        return swift_release();
      }
      else
      {
        __break(1u);
      }
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1005E2FB0();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_9;
  }
LABEL_4:
  __uint64_t v10 = static MonotonicTime.now()();
  uint64_t result = sub_1005322B0(v10);
  if (result)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_10051405C();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1005244E8(uint64_t a1)
{
  return sub_100531EA0(a1, (void (*)(void))sub_100524500);
}

uint64_t sub_100524500()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_100718230);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1000079E4(v5, (uint64_t)v4, &qword_100718230);
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    unint64_t v9 = sub_1005E0EB0();
    os_log_type_t v10 = sub_1005E25C0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 68157952;
      HIDWORD(v13) = 2;
      sub_1005E2960();
      *(_WORD *)(v11 + 8) = 256;
      BYTE4(v13) = *(unsigned char *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      sub_1005E2960();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "[%.*hhx] Timer fired: checking for idle connections to cancel.", (uint8_t *)v11, 0xBu);
      swift_slowDealloc();
    }
    else
    {
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
    __uint64_t v12 = static MonotonicTime.now()();
    return sub_10052B954(v12);
  }
  return result;
}

uint64_t sub_10052472C(uint64_t a1)
{
  return sub_100531EA0(a1, (void (*)(void))sub_100524744);
}

uint64_t sub_100524744()
{
  uint64_t v1 = (unint64_t *)sub_1005E1850();
  uint64_t v2 = *(v1 - 1);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, unint64_t *))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = sub_1005E1860();
  (*(void (**)(void *, unint64_t *))(v2 + 8))(v4, v1);
  if (v5)
  {
    uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
    uint64_t result = swift_beginAccess();
    if (!(*v1 >> 62))
    {
      if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_4;
      }
LABEL_14:
      if (*(void *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_collectDataTransferTimer))
      {
        swift_retain();
        RestartableTimer.stop()();
        return swift_release();
      }
      goto LABEL_20;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1005E2FB0();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_14;
  }
LABEL_4:
  unint64_t v8 = *v1;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1005E2FB0();
    uint64_t v9 = result;
    if (result) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v9)
    {
LABEL_6:
      if (v9 >= 1)
      {
        for (uint64_t i = 0; i != v9; ++i)
        {
          if ((v8 & 0xC000000000000001) != 0) {
            sub_1005E2CF0();
          }
          else {
            swift_retain();
          }
          CommandConnection.collectDataTransferReport()();
          swift_release();
        }
        return swift_bridgeObjectRelease();
      }
      __break(1u);
LABEL_20:
      __break(1u);
      return result;
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_10052498C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_checkForStallTimer);
    swift_retain();
    uint64_t result = swift_release();
    if (v1)
    {
      RestartableTimer.start()();
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100524A08()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_didTearDown) == 1)
  {
    sub_100007A48(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger, &qword_100718230);

    swift_bridgeObjectRelease();
    sub_100535BF8(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_configuration, (uint64_t (*)(void))type metadata accessor for ConnectionConfiguration);
    swift_bridgeObjectRelease();
    sub_1004836A4(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engine);
    swift_release();
    swift_release();
    sub_100007A48(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_lastError, &qword_100717EF8);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100524B50()
{
  sub_100524A08();
  return swift_deallocClassInstance();
}

uint64_t sub_100524BA8()
{
  return type metadata accessor for ConnectionPool();
}

uint64_t type metadata accessor for ConnectionPool()
{
  uint64_t result = qword_100718510;
  if (!qword_100718510) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100524BFC()
{
  sub_100524DE8(319, &qword_100718520, (void (*)(uint64_t))&type metadata accessor for Logger);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ConnectionConfiguration();
    if (v1 <= 0x3F)
    {
      sub_100524DE8(319, (unint64_t *)&unk_100718528, (void (*)(uint64_t))type metadata accessor for ConnectionStatus.Error);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_100524DE8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1005E28C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100524E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v8 = type metadata accessor for ClientCommand(0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (uint64_t (**)(char *, uint64_t, uint64_t))((char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v61 - v12;
  uint64_t v14 = sub_10000566C(&qword_100718230);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  char v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v61 - v18;
  uint64_t v21 = sub_100526E54(a1, v20, a3);
  if (v22) {
    return 0;
  }
  unint64_t v23 = v21;
  uint64_t v24 = (uint64_t *)(v5 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  uint64_t v25 = *v24;
  BOOL v26 = (*v24 & 0xC000000000000001) == 0;
  uint64_t v65 = v24;
  if (!v26)
  {
    uint64_t v60 = sub_1005E2CF0();
    goto LABEL_7;
  }
  if ((v23 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v23 >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v60 = *(void *)(v25 + 8 * v23 + 32);
  swift_retain();
LABEL_7:
  swift_endAccess();
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)v60 + 536))(a1);
  char v28 = v27;
  swift_release();
  if ((v28 & 1) == 0)
  {
    uint64_t v29 = v5 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    sub_1000079E4(v29, (uint64_t)v19, &qword_100718230);
    uint64_t v30 = sub_1005E0ED0();
    uint64_t v11 = *(uint64_t (***)(char *, uint64_t, uint64_t))(v30 - 8);
    uint64_t result = v11[6](v19, 1, v30);
    if (result == 1)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_100535D6C(a1, (uint64_t)v13, type metadata accessor for ClientCommand);
    swift_retain();
    long long v32 = sub_1005E0EB0();
    int v33 = sub_1005E2580();
    if (!os_log_type_enabled(v32, (os_log_type_t)v33))
    {
      swift_release();

      sub_100535BF8((uint64_t)v13, type metadata accessor for ClientCommand);
      swift_release_n();
      goto LABEL_23;
    }
    LODWORD(v62) = v33;
    os_log_t v63 = v32;
    uint64_t v64 = v30;
    a1 = swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    uint64_t v67 = v61;
    *(_DWORD *)a1 = 68158722;
    LODWORD(v66) = 2;
    sub_1005E2960();
    *(_WORD *)(a1 + 8) = 256;
    LOBYTE(v66) = *(unsigned char *)(v5 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    sub_1005E2960();
    swift_release();
    *(_WORD *)(a1 + 11) = 2082;
    unint64_t v34 = CommandID.tag.getter(v4);
    uint64_t v35 = Tag.debugDescription.getter(v34 & 0xFFFFFFFF000000FFLL);
    uint64_t v66 = sub_100507920(v35, v36, &v67);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(a1 + 21) = 2082;
    unint64_t v37 = ClientCommand.logIdentifier.getter();
    uint64_t v66 = sub_100507920(v37, v38, &v67);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100535BF8((uint64_t)v13, type metadata accessor for ClientCommand);
    *(_WORD *)(a1 + 31) = 2082;
    long long v39 = v65;
    uint64_t result = swift_beginAccess();
    uint64_t v40 = *v39;
    if ((*v39 & 0xC000000000000001) == 0)
    {
      if ((v23 & 0x8000000000000000) == 0)
      {
        if (v23 < *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v41 = *(void *)(v40 + 8 * v23 + 32);
          swift_retain();
LABEL_14:
          swift_endAccess();
          uint64_t v42 = *(unsigned int *)(v41 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
          swift_release();
          uint64_t v43 = ConnectionID.debugDescription.getter(v42);
          uint64_t v66 = sub_100507920(v43, v44, &v67);
          sub_1005E2960();
          swift_release_n();
          swift_bridgeObjectRelease();
          os_log_t v45 = v63;
          _os_log_impl((void *)&_mh_execute_header, v63, (os_log_type_t)v62, "[%.*hhx] Sent command '%{public}s %{public}s' on connection %{public}s", (uint8_t *)a1, 0x29u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v30 = v64;
LABEL_23:
          ((void (*)(char *, uint64_t))v11[1])(v19, v30);
          return v4;
        }
        goto LABEL_34;
      }
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
LABEL_30:
    uint64_t v41 = sub_1005E2CF0();
    goto LABEL_14;
  }
  uint64_t v46 = v5 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1000079E4(v46, (uint64_t)v17, &qword_100718230);
  uint64_t v47 = sub_1005E0ED0();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48))(v17, 1, v47);
  if (result != 1)
  {
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_100535D6C(a1, (uint64_t)v11, type metadata accessor for ClientCommand);
    swift_retain();
    uint64_t v49 = sub_1005E0EB0();
    int v50 = sub_1005E2580();
    if (os_log_type_enabled(v49, (os_log_type_t)v50))
    {
      LODWORD(v63) = v50;
      uint64_t v64 = v47;
      uint64_t v51 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      uint64_t v67 = v62;
      *(_DWORD *)uint64_t v51 = 68158466;
      LODWORD(v66) = 2;
      sub_1005E2960();
      *(_WORD *)(v51 + 8) = 256;
      LOBYTE(v66) = *(unsigned char *)(v5 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      sub_1005E2960();
      swift_release();
      *(_WORD *)(v51 + 11) = 2082;
      unint64_t v52 = ClientCommand.logIdentifier.getter();
      uint64_t v66 = sub_100507920(v52, v53, &v67);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100535BF8((uint64_t)v11, type metadata accessor for ClientCommand);
      *(_WORD *)(v51 + 21) = 2082;
      unint64_t v54 = v65;
      uint64_t result = swift_beginAccess();
      uint64_t v55 = *v54;
      if ((*v54 & 0xC000000000000001) != 0)
      {
        uint64_t v56 = sub_1005E2CF0();
      }
      else
      {
        if ((v23 & 0x8000000000000000) != 0) {
          goto LABEL_33;
        }
        if (v23 >= *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v56 = *(void *)(v55 + 8 * v23 + 32);
        swift_retain();
      }
      swift_endAccess();
      uint64_t v57 = *(unsigned int *)(v56 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
      swift_release();
      uint64_t v58 = ConnectionID.debugDescription.getter(v57);
      uint64_t v66 = sub_100507920(v58, v59, &v67);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v63, "[%.*hhx] Failed to send command '%{public}s' on connection %{public}s", (uint8_t *)v51, 0x1Fu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v47 = v64;
    }
    else
    {
      swift_release();

      sub_100535BF8((uint64_t)v11, type metadata accessor for ClientCommand);
      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v17, v47);
    return 0;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10052576C(uint64_t a1, void *a2, Swift::UInt32 a3, uint64_t a4)
{
  uint64_t v10 = sub_10000566C(&qword_100718230);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v72 = (uint64_t)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v63 - v13;
  uint64_t v15 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v15 - 8);
  char v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = a1;
  if ((a1 & 0x100000000) != 0)
  {
    uint64_t v25 = sub_100527BC8(a2, a3, a4);
    if (!v25) {
      return 0;
    }
    uint64_t v26 = (*(uint64_t (**)(uint64_t))(*(void *)v25 + 552))(v25);
    swift_release();
    return v26;
  }
  uint64_t v68 = (uint64_t)a2;
  uint64_t v18 = (uint64_t *)(v4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  unint64_t v70 = (uint64_t *)(v4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  uint64_t v71 = v4;
  swift_beginAccess();
  uint64_t v19 = *v18;
  unint64_t v20 = (unint64_t)*v18 >> 62;
  uint64_t v67 = v5;
  Swift::UInt32 v69 = a3;
  uint64_t v21 = v14;
  if (v20)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1005E2FB0();
    if (!v22) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v22 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_21;
    }
  }
  unint64_t v23 = v19 & 0xC000000000000001;
  if ((v19 & 0xC000000000000001) != 0)
  {
    int v27 = *(_DWORD *)(sub_1005E2CF0() + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
    swift_unknownObjectRelease();
    if (v27 == v73) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  if (*(_DWORD *)(*(void *)(v19 + 32) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != v73)
  {
LABEL_13:
    if (v22 != 1)
    {
      uint64_t v28 = 5;
      uint64_t v29 = &OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id;
      while (1)
      {
        unint64_t v24 = v28 - 4;
        if (v23)
        {
          int v30 = *(_DWORD *)(sub_1005E2CF0() + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
          swift_unknownObjectRelease();
          if (v30 == v73) {
            goto LABEL_26;
          }
        }
        else if (*(_DWORD *)(*(void *)(v19 + 8 * v28) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) == v73)
        {
LABEL_26:
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
        uint64_t v31 = v28 - 3;
        if (__OFADD__(v24, 1)) {
          break;
        }
        ++v28;
        if (v31 == v22) {
          goto LABEL_21;
        }
      }
      __break(1u);
      goto LABEL_45;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v32 = v71;
    uint64_t v33 = v71 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    uint64_t v34 = v72;
    sub_1000079E4(v33, v72, &qword_100718230);
    uint64_t v35 = sub_1005E0ED0();
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35);
    if (result == 1)
    {
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    swift_retain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    unint64_t v38 = sub_1005E0EB0();
    os_log_type_t v39 = sub_1005E25A0();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 68158210;
      LODWORD(v76) = 2;
      sub_1005E2960();
      *(_WORD *)(v40 + 8) = 256;
      LOBYTE(v76) = *(unsigned char *)(v32 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      sub_1005E2960();
      swift_release();
      *(_WORD *)(v40 + 11) = 2082;
      uint64_t v41 = ConnectionID.debugDescription.getter(v73);
      uint64_t v76 = sub_100507920(v41, v42, &v74);
      uint64_t v34 = v72;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "[%.*hhx] Attempt to send on connection %{public}s -- but it does not exist.", (uint8_t *)v40, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release();
    }

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
    uint64_t v26 = 0;
LABEL_36:
    sub_100535A24();
    swift_allocError();
    *unint64_t v59 = v26;
    swift_willThrow();
    return v26;
  }
LABEL_6:
  swift_bridgeObjectRelease();
  unint64_t v24 = 0;
LABEL_27:
  uint64_t v29 = v70;
  swift_beginAccess();
  uint64_t v43 = *v29;
  uint64_t v28 = v71;
  unint64_t v23 = (unint64_t)v21;
  uint64_t v19 = v68;
  if ((*v29 & 0xC000000000000001) == 0)
  {
    if ((v24 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v24 < *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v44 = *(void *)(v43 + 8 * v24 + 32);
      swift_retain();
      goto LABEL_31;
    }
    __break(1u);
    goto LABEL_48;
  }
LABEL_45:
  uint64_t v44 = sub_1005E2CF0();
LABEL_31:
  uint64_t v45 = swift_endAccess();
  (*(void (**)(uint64_t))(*(void *)v44 + 296))(v45);
  swift_release();
  v77.bytes._rawValue = (void *)v19;
  v77._hashValue._value = v69;
  Swift::Bool v46 = ConnectionState.hasMailboxSelectedOrSelectionIsInProgress(_:)(v77);
  sub_100535BF8((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (!v46)
  {
    uint64_t v26 = 1;
    goto LABEL_36;
  }
  uint64_t v47 = v28 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1000079E4(v47, v23, &qword_100718230);
  uint64_t v48 = sub_1005E0ED0();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v49 + 48))(v23, 1, v48);
  if (result != 1)
  {
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_bridgeObjectRetain_n();
    int v50 = sub_1005E0EB0();
    os_log_type_t v51 = sub_1005E2580();
    LODWORD(v72) = v51;
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      uint64_t v65 = v49;
      uint64_t v53 = v52;
      uint64_t v64 = swift_slowAlloc();
      uint64_t v76 = v64;
      *(_DWORD *)uint64_t v53 = 68158723;
      LODWORD(v74) = 2;
      uint64_t v66 = v48;
      sub_1005E2960();
      *(_WORD *)(v53 + 8) = 256;
      char v54 = *(unsigned char *)(v28 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      swift_release();
      LOBYTE(v74) = v54;
      sub_1005E2960();
      swift_release();
      *(_WORD *)(v53 + 11) = 2160;
      uint64_t v74 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v53 + 21) = 2085;
      uint64_t v74 = v19;
      Swift::UInt32 v75 = v69;
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_1005E1CC0();
      uint64_t v74 = sub_100507920(v55, v56, &v76);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      uint64_t v29 = v70;
      swift_bridgeObjectRelease();
      *(_WORD *)(v53 + 31) = 2082;
      uint64_t v57 = ConnectionID.debugDescription.getter(v73);
      uint64_t v74 = sub_100507920(v57, v58, &v76);
      sub_1005E2960();
      uint64_t v48 = v66;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v72, "[%.*hhx] Created mailbox affinity for '%{sensitive,mask.mailbox}s' on connection %{public}s with mailbox already selected.", (uint8_t *)v53, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v49 = v65;
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_release_n();
    }
    (*(void (**)(unint64_t, uint64_t))(v49 + 8))(v23, v48);
    uint64_t result = swift_beginAccess();
    uint64_t v60 = *v29;
    if ((*v29 & 0xC000000000000001) == 0)
    {
      if ((v24 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v24 < *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v61 = *(void *)(v60 + 8 * v24 + 32);
        swift_retain();
LABEL_43:
        uint64_t v62 = swift_endAccess();
        uint64_t v26 = (*(uint64_t (**)(uint64_t))(*(void *)v61 + 552))(v62);
        swift_release();
        return v26;
      }
      __break(1u);
      goto LABEL_51;
    }
LABEL_48:
    uint64_t v61 = sub_1005E2CF0();
    goto LABEL_43;
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_10052612C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000566C(&qword_100718230);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v10 = swift_bridgeObjectRetain();
  unint64_t v11 = sub_100535088(v10, a1, a2);
  int v13 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = 0;
  if (v13) {
    return v14;
  }
  swift_beginAccess();
  uint64_t v15 = *v9;
  if ((*v9 & 0xC000000000000001) == 0)
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v16 = *(void *)(v15 + 8 * v11 + 32);
      swift_retain();
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v16 = sub_1005E2CF0();
LABEL_6:
  swift_endAccess();
  unsigned int v41 = *(_DWORD *)(v16 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
  swift_release();
  uint64_t v17 = v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1000079E4(v17, (uint64_t)v8, &qword_100718230);
  uint64_t v18 = sub_1005E0ED0();
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = *(uint64_t (**)(char *, uint64_t))(v19 + 48);
  uint64_t v42 = v18;
  uint64_t result = v20(v8, 1);
  if (result == 1) {
    goto LABEL_29;
  }
  uint64_t v14 = 2;
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_bridgeObjectRetain_n();
  uint64_t v22 = sub_1005E0EB0();
  os_log_type_t v23 = sub_1005E25C0();
  int v40 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    HIDWORD(v37) = a2;
    uint64_t v25 = v24;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v43 = v38;
    *(_DWORD *)uint64_t v25 = 68158723;
    LODWORD(v44) = 2;
    sub_1005E2960();
    *(_WORD *)(v25 + 8) = 256;
    int v39 = v13;
    char v26 = *(unsigned char *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    swift_release();
    LOBYTE(v44) = v26;
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v25 + 11) = 2082;
    uint64_t v27 = ConnectionID.debugDescription.getter(v41);
    uint64_t v44 = sub_100507920(v27, v28, &v43);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 21) = 2160;
    uint64_t v44 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v25 + 31) = 2085;
    uint64_t v44 = a1;
    int v45 = HIDWORD(v37);
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1005E1CC0();
    uint64_t v44 = sub_100507920(v29, v30, &v43);
    sub_1005E2960();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v40, "[%.*hhx] Closing connection %{public}s for mailbox '%{sensitive,mask.mailbox}s'.", (uint8_t *)v25, 0x29u);
    uint64_t v14 = v38;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v42);
  swift_beginAccess();
  uint64_t v31 = *v9;
  if ((*v9 & 0xC000000000000001) == 0)
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v32 = *(void *)(v31 + 8 * v11 + 32);
      swift_retain();
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_26;
  }
LABEL_23:
  uint64_t v32 = sub_1005E2CF0();
LABEL_14:
  uint64_t v33 = swift_endAccess();
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)v32 + 552))(v33);
  swift_release();
  uint64_t result = swift_beginAccess();
  uint64_t v34 = *v9;
  if ((*v9 & 0xC000000000000001) != 0)
  {
LABEL_26:
    uint64_t v35 = sub_1005E2CF0();
    goto LABEL_18;
  }
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v11 < *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v35 = *(void *)(v34 + 8 * v11 + 32);
    swift_retain();
LABEL_18:
    uint64_t v36 = swift_endAccess();
    (*(void (**)(uint64_t))(*(void *)v35 + 512))(v36);
    swift_release();
    return v14;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1005266E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_10000566C(&qword_100718230);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v41[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1005E1850();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v12 = *(void **)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *unint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = v12;
  LOBYTE(v12) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (!*(void *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_collectDataTransferTimer))
  {
    __break(1u);
    goto LABEL_39;
  }
  swift_retain();
  RestartableTimer.start()();
  swift_release();
  uint64_t v15 = v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff;
  swift_beginAccess();
  uint64_t v16 = *(void *)(v15 + 8);
  unint64_t v11 = (void *)*(unsigned __int8 *)(v15 + 16);
  LODWORD(v15) = *(unsigned __int8 *)(v15 + 17);
  BOOL v17 = (uint64_t)static MonotonicTime.now()() >= v16;
  if (v15 == 1 || ((v11 | v17) & 1) == 0)
  {
    uint64_t v32 = v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoffLoggingRateLimit;
    swift_beginAccess();
    int64_t v33 = static MonotonicTime.now()();
    if (*(unsigned char *)(v32 + 8)) {
      goto LABEL_20;
    }
    uint64_t v34 = *(void *)v32;
    BOOL v35 = __OFSUB__(v33, *(void *)v32);
    int64_t v36 = v33 - *(void *)v32;
    if (v33 < *(void *)v32)
    {
      if (__OFSUB__(v34, v33))
      {
        __break(1u);
        goto LABEL_34;
      }
      BOOL v35 = __OFSUB__(0, v34 - v33);
      int64_t v36 = v33 - v34;
      if (!v35)
      {
LABEL_19:
        if (v36 < *(void *)(v32 + 16)) {
          return swift_endAccess();
        }
LABEL_20:
        *(void *)uint64_t v32 = v33;
        *(unsigned char *)(v32 + 8) = 0;
        sub_10052972C(v3);
        return swift_endAccess();
      }
      __break(1u);
    }
    if (!v35) {
      goto LABEL_19;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v18 = (unsigned char *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_credentialsState);
  uint64_t result = swift_beginAccess();
  if (*v18 != 2)
  {
    uint64_t result = sub_100527484();
    if ((result & 1) == 0)
    {
      sub_1005271F0();
      unint64_t v11 = (void *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
      uint64_t result = swift_beginAccess();
      if (!(*v11 >> 62))
      {
        if (*(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
          return result;
        }
        goto LABEL_9;
      }
LABEL_31:
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1005E2FB0();
      uint64_t result = swift_bridgeObjectRelease();
      if (v39 >= a2) {
        return result;
      }
LABEL_9:
      a2 = sub_100533C6C(v3, v3);
      uint64_t v19 = v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
      swift_beginAccess();
      sub_1000079E4(v19, (uint64_t)v7, &qword_100718230);
      uint64_t v20 = sub_1005E0ED0();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v7, 1, v20);
      if (result != 1)
      {
        swift_retain_n();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        swift_retain_n();
        uint64_t v22 = sub_1005E0EB0();
        os_log_type_t v23 = sub_1005E25C0();
        int v24 = v23;
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v25 = swift_slowAlloc();
          uint64_t v44 = v20;
          uint64_t v26 = v25;
          uint64_t v43 = swift_slowAlloc();
          v46[0] = v43;
          *(_DWORD *)uint64_t v26 = 68158466;
          LODWORD(v45) = 2;
          sub_1005E2960();
          *(_WORD *)(v26 + 8) = 256;
          int v42 = v24;
          char v27 = *(unsigned char *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
          swift_release();
          LOBYTE(v45) = v27;
          sub_1005E2960();
          swift_release();
          *(_WORD *)(v26 + 11) = 2082;
          uint64_t v28 = ConnectionID.debugDescription.getter(*(unsigned int *)(a2
                                                                     + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id));
          uint64_t v45 = sub_100507920(v28, v29, v46);
          sub_1005E2960();
          swift_release_n();
          uint64_t v30 = swift_bridgeObjectRelease();
          *(_WORD *)(v26 + 21) = 2048;
          uint64_t v31 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 400))(v30);
          swift_release();
          uint64_t v45 = v31;
          sub_1005E2960();
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v42, "[%.*hhx] Did create connection %{public}s [C%llu]", (uint8_t *)v26, 0x1Fu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v20 = v44;
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
          swift_release_n();
        }
        (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v7, v20);
        swift_beginAccess();
        swift_retain();
        sub_1005E20A0();
        if (*(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_25:
          sub_1005E2170();
          sub_1005E20E0();
          uint64_t v37 = swift_endAccess();
          uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 496))(v37);
          if (*(void *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_checkForStallTimer))
          {
            swift_retain();
            RestartableTimer.start()();
            swift_release();
            if (*v11 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v40 = sub_1005E2FB0();
              swift_bridgeObjectRelease();
              if (v40 == 1)
              {
LABEL_28:
                uint64_t Strong = swift_unknownObjectWeakLoadStrong();
                uint64_t result = swift_release();
                if (Strong)
                {
                  *(unsigned char *)(Strong + OBJC_IVAR____TtC22IMAP2ConnectionControl6Engine_shouldLogForFirstConnection) = 1;
                  return swift_unknownObjectRelease();
                }
                return result;
              }
            }
            else if (*(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1)
            {
              goto LABEL_28;
            }
            return swift_release();
          }
LABEL_40:
          __break(1u);
          return result;
        }
LABEL_35:
        sub_1005E2110();
        goto LABEL_25;
      }
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
  }
  return result;
}

uint64_t sub_100526E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_10000566C(&qword_100718230);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005271F0();
  uint64_t v10 = v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1000079E4(v10, (uint64_t)v9, &qword_100718230);
  uint64_t v11 = sub_1005E0ED0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_retain();
    uint64_t v14 = sub_1005E0EB0();
    os_log_type_t v15 = sub_1005E2580();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v27 = a3;
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 68158208;
      LODWORD(v28) = 2;
      sub_1005E2960();
      *(_WORD *)(v16 + 8) = 256;
      LOBYTE(v28) = *(unsigned char *)(v4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      sub_1005E2960();
      swift_release();
      *(_WORD *)(v16 + 11) = 2048;
      BOOL v17 = (uint64_t *)(v4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
      swift_beginAccess();
      if ((unint64_t)*v17 >> 62)
      {
        uint64_t v26 = *v17;
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_1005E2FB0();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v18 = *(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_release();
      }
      uint64_t v28 = v18;
      sub_1005E2960();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "[%.*hhx] Pool has %ld connections.", (uint8_t *)v16, 0x15u);
      swift_slowDealloc();

      a3 = v27;
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    uint64_t v19 = (unint64_t *)(v4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
    uint64_t v20 = swift_beginAccess();
    unint64_t v21 = *v19;
    __chkstk_darwin(v20);
    *(&v26 - 2) = a1;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_100522DE4((uint64_t (*)(uint64_t *))sub_1005359C4, (uint64_t)(&v26 - 4), v21);
    char v24 = v23;
    uint64_t v25 = swift_bridgeObjectRelease();
    if (v24) {
      sub_1005266E0(v25, a3);
    }
    return v22;
  }
  return result;
}

uint64_t sub_1005271F0()
{
  uint64_t v1 = type metadata accessor for ConnectionState();
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v15 - v5;
  uint64_t v7 = (unint64_t *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  unint64_t v8 = *v7;
  BOOL v17 = _swiftEmptyArrayStorage;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1005E2FB0();
    uint64_t v9 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v14 = _swiftEmptyArrayStorage;
LABEL_17:
    *uint64_t v7 = (unint64_t)v14;
    return swift_bridgeObjectRelease();
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v9) {
    goto LABEL_16;
  }
LABEL_3:
  if (v9 >= 1)
  {
    uint64_t v16 = v7;
    uint64_t v11 = 0;
    while (1)
    {
      if ((v8 & 0xC000000000000001) != 0)
      {
        uint64_t v12 = sub_1005E2CF0();
      }
      else
      {
        uint64_t v12 = *(void *)(v8 + 8 * v11 + 32);
        swift_retain();
      }
      (*(void (**)(void))(*(void *)v12 + 296))();
      sub_100535D6C((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload < 3)
      {
        sub_100535BF8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      }
      else if (EnumCaseMultiPayload - 3 < 2)
      {
        sub_100535BF8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
        swift_release();
        goto LABEL_7;
      }
      sub_100535BF8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      sub_1005E2D60();
      sub_1005E2DD0();
      sub_1005E2DE0();
      sub_1005E2D70();
LABEL_7:
      if (v9 == ++v11)
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = v16;
        uint64_t v14 = v17;
        goto LABEL_17;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100527484()
{
  uint64_t v1 = type metadata accessor for ConnectionState();
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v17 - v5;
  uint64_t v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if ((unint64_t)*v7 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain_n();
    uint64_t v9 = sub_1005E2FB0();
    if (v9) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v9)
    {
LABEL_3:
      uint64_t v10 = 4;
      do
      {
        uint64_t v11 = v10 - 4;
        if ((v8 & 0xC000000000000001) != 0)
        {
          uint64_t v12 = sub_1005E2CF0();
          BOOL v13 = __OFADD__(v11, 1);
          uint64_t v14 = v10 - 3;
          if (v13) {
            goto LABEL_14;
          }
        }
        else
        {
          uint64_t v12 = *(void *)(v8 + 8 * v10);
          swift_retain();
          BOOL v13 = __OFADD__(v11, 1);
          uint64_t v14 = v10 - 3;
          if (v13)
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        (*(void (**)(void))(*(void *)v12 + 296))();
        sub_100535D6C((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if ((EnumCaseMultiPayload - 3) >= 3)
        {
          if (EnumCaseMultiPayload != 2)
          {
            sub_100535BF8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
            sub_100535BF8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
            swift_bridgeObjectRelease_n();
            swift_release();
            return 1;
          }
          sub_100535BF8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
        }
        sub_100535BF8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
        swift_release();
        ++v10;
      }
      while (v14 != v9);
    }
  }
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t sub_100527700(uint64_t a1, uint64_t a2, void *a3, Swift::UInt32 a4, uint64_t a5)
{
  uint64_t v7 = v5;
  uint64_t v12 = sub_10000566C(&qword_100718230);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005271F0();
  uint64_t v15 = (unint64_t *)(v5 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  if ((a2 & 0x100000000) != 0)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    unint64_t v19 = swift_bridgeObjectRetain();
    uint64_t v6 = sub_100534ED4(v19, a3, a4);
    char v21 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v21)
    {
      sub_100527BC8(a3, a4, a5);
      swift_release();
    }
    return v6;
  }
  swift_beginAccess();
  unint64_t v16 = *v15;
  BOOL v35 = v14;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1005E2FB0();
    uint64_t v17 = result;
    if (!result) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v17) {
      goto LABEL_20;
    }
  }
  if ((v16 & 0xC000000000000001) != 0)
  {
    int v22 = *(_DWORD *)(sub_1005E2CF0() + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
    uint64_t result = swift_unknownObjectRelease();
    if (v22 == a2) {
      goto LABEL_6;
    }
  }
  else if (*(_DWORD *)(*(void *)(v16 + 32) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) == a2)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v17 != 1)
  {
    uint64_t v23 = 5;
    while (1)
    {
      uint64_t v6 = v23 - 4;
      if ((v16 & 0xC000000000000001) != 0)
      {
        int v24 = *(_DWORD *)(sub_1005E2CF0() + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
        uint64_t result = swift_unknownObjectRelease();
        if (v24 == a2) {
          goto LABEL_26;
        }
      }
      else if (*(_DWORD *)(*(void *)(v16 + 8 * v23) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) == a2)
      {
LABEL_26:
        swift_bridgeObjectRelease();
        return v6;
      }
      uint64_t v25 = v23 - 3;
      if (__OFADD__(v6, 1)) {
        break;
      }
      ++v23;
      if (v25 == v17) {
        goto LABEL_20;
      }
    }
    __break(1u);
    goto LABEL_28;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  uint64_t v26 = v7 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  uint64_t v27 = (uint64_t)v35;
  sub_1000079E4(v26, (uint64_t)v35, &qword_100718230);
  uint64_t v28 = sub_1005E0ED0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28);
  if (result != 1)
  {
    swift_retain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v30 = sub_1005E0EB0();
    os_log_type_t v31 = sub_1005E25A0();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 68158210;
      LODWORD(v36) = 2;
      sub_1005E2960();
      *(_WORD *)(v6 + 8) = 256;
      LOBYTE(v36) = *(unsigned char *)(v7 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      sub_1005E2960();
      swift_release();
      *(_WORD *)(v6 + 11) = 2082;
      uint64_t v32 = ConnectionID.debugDescription.getter(a2);
      uint64_t v36 = sub_100507920(v32, v33, &v37);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "[%.*hhx] Attempt to send on connection %{public}s -- but it does not exist.", (uint8_t *)v6, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v27 = (uint64_t)v35;
      swift_slowDealloc();
    }
    else
    {
      swift_release();
    }

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    sub_100535A24();
    swift_allocError();
    *uint64_t v34 = 0;
    swift_willThrow();
    return v6;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100527BC8(void *a1, Swift::UInt32 a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v74 = a3;
  uint64_t v75 = type metadata accessor for ConnectionState();
  uint64_t v7 = __chkstk_darwin(v75);
  uint64_t v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v72 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v72 - v13;
  uint64_t v15 = sub_10000566C(&qword_100718230);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t *)(v4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v19 = swift_bridgeObjectRetain();
  Swift::UInt32 v79 = a2;
  uint64_t v20 = sub_100534924(v19, a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v21 = (uint64_t)a1;
  swift_bridgeObjectRelease();
  if (v20)
  {
    uint64_t v22 = v4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    sub_1000079E4(v22, (uint64_t)v17, &qword_100718230);
    uint64_t v23 = sub_1005E0ED0();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v17, 1, v23);
    if (result == 1) {
      goto LABEL_90;
    }
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v26 = sub_1005E0EB0();
    os_log_type_t v27 = sub_1005E2580();
    int v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v82 = (char *)v23;
      uint64_t v30 = v29;
      uint64_t v81 = swift_slowAlloc();
      uint64_t v85 = v81;
      *(_DWORD *)uint64_t v30 = 68158723;
      LODWORD(v83) = 2;
      sub_1005E2960();
      *(_WORD *)(v30 + 8) = 256;
      LODWORD(v80) = v28;
      char v31 = *(unsigned char *)(v4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      swift_release();
      LOBYTE(v83) = v31;
      sub_1005E2960();
      swift_release();
      *(_WORD *)(v30 + 11) = 2160;
      uint64_t v83 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v30 + 21) = 2085;
      uint64_t v83 = (uint64_t)a1;
      Swift::UInt32 v84 = v79;
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_1005E1CC0();
      uint64_t v83 = sub_100507920(v32, v33, &v85);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 31) = 2082;
      uint64_t v34 = ConnectionID.debugDescription.getter(*(unsigned int *)(v20
                                                                 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id));
      uint64_t v83 = sub_100507920(v34, v35, &v85);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v80, "[%.*hhx] Mailbox '%{sensitive,mask.mailbox}s' is selected (or in progress) on connection %{public}s.", (uint8_t *)v30, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v23 = (uint64_t)v82;
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v23);
    return v20;
  }
  uint64_t v82 = v14;
  uint64_t v76 = v9;
  NIOIMAPCore2::MailboxName v77 = v12;
  if ((unint64_t)*v18 >> 62) {
    goto LABEL_33;
  }
  uint64_t v36 = *(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    a1 = (void *)v21;
    if (!v36) {
      break;
    }
    unint64_t v37 = 0;
    uint64_t v21 = (uint64_t)v82;
    while (v36 != v37)
    {
      swift_beginAccess();
      uint64_t v38 = *v18;
      if ((*v18 & 0xC000000000000001) != 0)
      {
        uint64_t v39 = sub_1005E2CF0();
      }
      else
      {
        if (v37 >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_32;
        }
        uint64_t v39 = *(void *)(v38 + 8 * v37 + 32);
        swift_retain();
      }
      uint64_t v40 = swift_endAccess();
      (*(void (**)(uint64_t))(*(void *)v39 + 296))(v40);
      swift_release();
      char v41 = ConnectionState.isReadyForCommandsWithoutMailboxSelection.getter();
      sub_100535BF8(v21, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      if (v41)
      {
        uint64_t v42 = sub_10052871C(v37, v4, (uint64_t)a1, v79);
        if (v42) {
          return v42;
        }
      }
      if (v36 == ++v37) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (v36 < 0)
    {
      __break(1u);
LABEL_35:
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_1005E2FB0();
      uint64_t v72 = (uint64_t)a1;
      uint64_t v73 = v4;
      if (!v43) {
        goto LABEL_36;
      }
      goto LABEL_22;
    }
  }
LABEL_20:
  uint64_t v36 = *v18;
  if ((unint64_t)*v18 >> 62) {
    goto LABEL_35;
  }
  uint64_t v43 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v72 = (uint64_t)a1;
  uint64_t v73 = v4;
  if (!v43)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    uint64_t v45 = _swiftEmptyArrayStorage;
    goto LABEL_37;
  }
LABEL_22:
  uint64_t v86 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100519534(0, v43 & ~(v43 >> 63), 0);
  if (v43 < 0) {
    goto LABEL_89;
  }
  uint64_t v44 = 0;
  uint64_t v45 = v86;
  do
  {
    if ((v36 & 0xC000000000000001) != 0)
    {
      int v46 = *(_DWORD *)(sub_1005E2CF0() + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
      swift_unknownObjectRelease();
    }
    else
    {
      int v46 = *(_DWORD *)(*(void *)(v36 + 8 * v44 + 32) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
    }
    uint64_t v86 = v45;
    unint64_t v48 = v45[2];
    unint64_t v47 = v45[3];
    if (v48 >= v47 >> 1)
    {
      sub_100519534(v47 > 1, v48 + 1, 1);
      uint64_t v45 = v86;
    }
    ++v44;
    v45[2] = v48 + 1;
    *((_DWORD *)v45 + v48 + 8) = v46;
  }
  while (v43 != v44);
  swift_bridgeObjectRelease();
LABEL_37:
  uint64_t v49 = v74;
  uint64_t v50 = ConnectionUsage.sortedIdleConnections(_:)(v45, *(void *)(v74 + 24), *(void *)(v74 + 32));
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v81 = *(void *)(v50 + 16);
  if (!v81)
  {
    uint64_t v71 = swift_bridgeObjectRelease();
LABEL_80:
    sub_1005266E0(v71, *(void *)(v49 + 8));
    return 0;
  }
  unint64_t v51 = 0;
  uint64_t v80 = v50 + 32;
  uint64_t v78 = v50;
  while (v51 < *(void *)(v50 + 16))
  {
    int v52 = *(_DWORD *)(v80 + 4 * v51);
    uint64_t v53 = *v18;
    if ((unint64_t)*v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1005E2FB0();
      uint64_t v54 = result;
      if (!result)
      {
LABEL_39:
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t v54 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v54) {
        goto LABEL_39;
      }
    }
    if ((v53 & 0xC000000000000001) != 0)
    {
      int v56 = *(_DWORD *)(sub_1005E2CF0() + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
      uint64_t result = swift_unknownObjectRelease();
      if (v56 != v52)
      {
LABEL_50:
        if (v54 != 1)
        {
          uint64_t v57 = 5;
          while (1)
          {
            unint64_t v55 = v57 - 4;
            if ((v53 & 0xC000000000000001) != 0)
            {
              int v58 = *(_DWORD *)(sub_1005E2CF0() + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
              uint64_t result = swift_unknownObjectRelease();
              if (v58 == v52) {
                goto LABEL_60;
              }
            }
            else if (*(_DWORD *)(*(void *)(v53 + 8 * v57) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) == v52)
            {
LABEL_60:
              swift_bridgeObjectRelease();
              goto LABEL_61;
            }
            uint64_t v59 = v57 - 3;
            if (__OFADD__(v55, 1)) {
              break;
            }
            ++v57;
            if (v59 == v54) {
              goto LABEL_51;
            }
          }
          __break(1u);
LABEL_83:
          uint64_t v20 = result;
          swift_bridgeObjectRelease();
          return v20;
        }
LABEL_51:
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v50 = v78;
        goto LABEL_40;
      }
    }
    else if (*(_DWORD *)(*(void *)(v53 + 32) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != v52)
    {
      goto LABEL_50;
    }
    swift_bridgeObjectRelease();
    unint64_t v55 = 0;
LABEL_61:
    uint64_t result = swift_beginAccess();
    uint64_t v60 = *v18;
    uint64_t v61 = (uint64_t)v77;
    if ((*v18 & 0xC000000000000001) != 0)
    {
      uint64_t v62 = sub_1005E2CF0();
    }
    else
    {
      if ((v55 & 0x8000000000000000) != 0) {
        goto LABEL_85;
      }
      if (v55 >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_86;
      }
      uint64_t v62 = *(void *)(v60 + 8 * v55 + 32);
      swift_retain();
    }
    uint64_t v63 = swift_endAccess();
    (*(void (**)(uint64_t))(*(void *)v62 + 296))(v63);
    swift_release();
    uint64_t v64 = (uint64_t)v76;
    sub_100535D6C(v61, (uint64_t)v76, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload - 3 < 3) {
      goto LABEL_68;
    }
    if (EnumCaseMultiPayload < 2)
    {
      sub_100535BF8(v64, (uint64_t (*)(void))type metadata accessor for ConnectionState);
LABEL_68:
      uint64_t result = sub_100535BF8(v61, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      uint64_t v50 = v78;
      goto LABEL_40;
    }
    sub_100535BF8(v64, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    sub_100535BF8(v61, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    uint64_t result = swift_beginAccess();
    uint64_t v66 = *v18;
    if ((*v18 & 0xC000000000000001) != 0)
    {
      uint64_t v67 = sub_1005E2CF0();
    }
    else
    {
      if ((v55 & 0x8000000000000000) != 0) {
        goto LABEL_87;
      }
      if (v55 >= *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_88;
      }
      uint64_t v67 = *(void *)(v66 + 8 * v55 + 32);
      swift_retain();
    }
    uint64_t v68 = swift_endAccess();
    uint64_t v69 = (uint64_t)v82;
    (*(void (**)(uint64_t))(*(void *)v67 + 296))(v68);
    swift_release();
    char v70 = ConnectionState.anyMailboxSelectionIsInProgress.getter();
    uint64_t result = sub_100535BF8(v69, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    uint64_t v50 = v78;
    if ((v70 & 1) == 0)
    {
      uint64_t result = sub_10052871C(v55, v73, v72, v79);
      if (result) {
        goto LABEL_83;
      }
    }
LABEL_40:
    if (++v51 == v81)
    {
      uint64_t v71 = swift_bridgeObjectRelease();
      uint64_t v49 = v74;
      goto LABEL_80;
    }
  }
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
  return result;
}

uint64_t sub_10052871C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10000566C(&qword_100718230);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t *)(a2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  uint64_t v12 = *v11;
  if ((*v11 & 0xC000000000000001) == 0)
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      uint64_t v13 = *(void *)(v12 + 8 * a1 + 32);
      swift_retain();
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v13 = sub_1005E2CF0();
LABEL_5:
  swift_endAccess();
  char v14 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v13 + 584))(a3, a4);
  swift_release();
  if ((v14 & 1) == 0) {
    return 0;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v16 = *v11;
  if ((*v11 & 0xC000000000000001) == 0)
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      uint64_t v17 = *(void *)(v16 + 8 * a1 + 32);
      swift_retain();
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v17 = sub_1005E2CF0();
LABEL_10:
  swift_endAccess();
  uint64_t v18 = a2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1000079E4(v18, (uint64_t)v10, &qword_100718230);
  uint64_t v19 = sub_1005E0ED0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v10, 1, v19);
  if (result != 1)
  {
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v21 = sub_1005E0EB0();
    os_log_type_t v22 = sub_1005E2580();
    int v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v24 = swift_slowAlloc();
      int v35 = v23;
      uint64_t v25 = v24;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v39 = v34;
      *(_DWORD *)uint64_t v25 = 68158723;
      LODWORD(v37) = 2;
      uint64_t v36 = v19;
      sub_1005E2960();
      *(_WORD *)(v25 + 8) = 256;
      os_log_t v33 = v21;
      int v26 = a4;
      char v27 = *(unsigned char *)(a2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      swift_release();
      LOBYTE(v37) = v27;
      sub_1005E2960();
      swift_release();
      *(_WORD *)(v25 + 11) = 2160;
      uint64_t v37 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v25 + 21) = 2085;
      uint64_t v37 = a3;
      int v38 = v26;
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1005E1CC0();
      uint64_t v37 = sub_100507920(v28, v29, &v39);
      uint64_t v19 = v36;
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 31) = 2082;
      uint64_t v30 = ConnectionID.debugDescription.getter(*(unsigned int *)(v17
                                                                 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id));
      uint64_t v37 = sub_100507920(v30, v31, &v39);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v32 = v33;
      _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v35, "[%.*hhx] Will select mailbox '%{sensitive,mask.mailbox}s' on connection %{public}s for new mailbox affinity.", (uint8_t *)v25, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v19);
    return v17;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_100528C08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v3 = sub_10000566C(&qword_100717EE8);
  __chkstk_darwin(v3 - 8);
  unint64_t v47 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_100717EF0);
  __chkstk_darwin(v5 - 8);
  int v46 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E1650();
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v51 = v7;
  __chkstk_darwin(v7);
  uint64_t v49 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1005E12C0();
  uint64_t v48 = *(void *)(v52 - 8);
  uint64_t v9 = __chkstk_darwin(v52);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v46 - v12;
  uint64_t v14 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ConnectionStatus(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v53 = (uint64_t *)((char *)&v46 - v22);
  uint64_t v23 = a1;
  sub_100535D6C(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100535BF8(a1, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      uint64_t v40 = v53;
      uint64_t v26 = v17;
      swift_storeEnumTagMultiPayload();
      sub_100535BF8((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      goto LABEL_12;
    case 2u:
      sub_100535BF8(a1, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      memcpy(v55, v16, 0x15AuLL);
      uint64_t v41 = AuthenticatedState.mailboxSelection.getter();
      uint64_t v43 = v42;
      sub_100508504((uint64_t)v55);
      uint64_t v26 = v17;
      if (BYTE4(v43))
      {
        uint64_t v40 = v53;
        if (BYTE4(v43) == 1)
        {
          *uint64_t v53 = v41;
          *((_DWORD *)v40 + 2) = v43;
        }
      }
      else
      {
        uint64_t v40 = v53;
        *uint64_t v53 = v41;
        *((_DWORD *)v40 + 2) = v43;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_12;
    case 3u:
    case 4u:
    case 5u:
      sub_100535BF8(a1, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      uint64_t v24 = 1;
      uint64_t v25 = v54;
      uint64_t v26 = v17;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v25, v24, 1, v26);
    default:
      char v27 = v16;
      uint64_t v28 = v48;
      uint64_t v29 = v52;
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v13, v27, v52);
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v11, v13, v29);
      uint64_t v26 = v17;
      if ((*(unsigned int (**)(char *, uint64_t))(v28 + 88))(v11, v29) == enum case for NWConnection.State.waiting(_:))
      {
        (*(void (**)(char *, uint64_t))(v28 + 96))(v11, v29);
        uint64_t v30 = v50;
        unint64_t v31 = v49;
        uint64_t v32 = v51;
        (*(void (**)(void))(v50 + 32))();
        os_log_t v33 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
        uint64_t v34 = v46;
        v33(v46, v31, v32);
        uint64_t v35 = type metadata accessor for ConnectionStatus.Error.Details(0);
        swift_storeEnumTagMultiPayload();
        uint64_t v36 = (uint64_t)v34;
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
        uint64_t v37 = sub_1005E0970();
        uint64_t v38 = (uint64_t)v47;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v47, 1, 1, v37);
        ConnectionStatus.Error.init(kind:details:backedOffUntil:)(0, v36, v38, v21);
        sub_100535BF8(v23, (uint64_t (*)(void))type metadata accessor for ConnectionState);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v51);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v52);
        swift_storeEnumTagMultiPayload();
        uint64_t v39 = (uint64_t)v21;
        uint64_t v40 = v53;
        sub_100535C58(v39, (uint64_t)v53, type metadata accessor for ConnectionStatus);
      }
      else
      {
        sub_100535BF8(v23, (uint64_t (*)(void))type metadata accessor for ConnectionState);
        uint64_t v44 = *(void (**)(char *, uint64_t))(v28 + 8);
        v44(v13, v29);
        uint64_t v40 = v53;
        swift_storeEnumTagMultiPayload();
        v44(v11, v29);
      }
LABEL_12:
      uint64_t v25 = v54;
      sub_100535C58((uint64_t)v40, v54, type metadata accessor for ConnectionStatus);
      uint64_t v24 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v25, v24, 1, v26);
  }
}

uint64_t sub_10052932C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ConnectionState();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(**(void **)a1 + 296))(v5);
  return sub_100528C08((uint64_t)v7, a2);
}

uint64_t sub_1005293EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = sub_10000566C(&qword_100717EE8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_100717EF0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_100717E10);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005E1650();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10052A828(v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100007A48((uint64_t)v10, &qword_100717E10);
    uint64_t v15 = type metadata accessor for ConnectionStatus.Error(0);
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 1, 1, v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v7, v14, v11);
    uint64_t v17 = type metadata accessor for ConnectionStatus.Error.Details(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 0, 1, v17);
    uint64_t v18 = sub_1005E0970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
    ConnectionStatus.Error.init(kind:details:backedOffUntil:)(0, (uint64_t)v7, (uint64_t)v4, a1);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v19 = type metadata accessor for ConnectionStatus.Error(0);
    return (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a1, 0, 1, v19);
  }
}

uint64_t sub_10052972C(uint64_t a1)
{
  uint64_t v3 = sub_10000566C(&qword_100718230);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1000079E4(v6, (uint64_t)v5, &qword_100718230);
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_retain();
    uint64_t v10 = sub_1005E0EB0();
    os_log_type_t v11 = sub_1005E2580();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (_DWORD *)swift_slowAlloc();
      v16[1] = v1;
      uint64_t v13 = v12;
      *uint64_t v12 = 68158208;
      int v17 = 2;
      sub_1005E2960();
      *((_WORD *)v13 + 4) = 256;
      LOBYTE(v17) = *(unsigned char *)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      sub_1005E2960();
      swift_release();
      *(_WORD *)((char *)v13 + 11) = 2048;
      uint64_t v14 = (uint64_t *)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff);
      swift_beginAccess();
      uint64_t v15 = *v14;
      swift_release();
      uint64_t v18 = v15;
      sub_1005E2960();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "[%.*hhx] Backed off (failure count %ld). Not creating a new connection.", (uint8_t *)v13, 0x15u);
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  return result;
}

uint64_t sub_1005299D4(uint64_t (*a1)(void), uint64_t a2)
{
  return sub_1005299F8(a1, a2);
}

uint64_t sub_1005299F8(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v31 = a2;
  uint64_t v5 = sub_10000566C(&qword_100718230);
  __chkstk_darwin(v5 - 8);
  uint64_t v30 = (uint64_t (*)(void))((char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1005E1850();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (id *)((char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  os_log_type_t v11 = *(void **)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *uint64_t v10 = v11;
  uint64_t v12 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v13 = *(void (**)(void *, uint64_t, uint64_t))(v8 + 104);
  v13(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v29 = v11;
  char v14 = sub_1005E1860();
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t))(v8 + 8);
  uint64_t result = v15(v10, v7);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  int v17 = (unsigned char *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_credentialsState);
  swift_beginAccess();
  if (*v17 != 2)
  {
    uint64_t v30 = a1;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (!result) {
      return result;
    }
    uint64_t v25 = v29;
    *uint64_t v10 = v29;
    v13(v10, v12, v7);
    id v26 = v25;
    char v27 = sub_1005E1860();
    uint64_t result = v15(v10, v7);
    if (v27)
    {
      int v28 = *(_DWORD *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_nextCredentialsRequestID);
      *(_DWORD *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_nextCredentialsRequestID) = v28 + 1;
      sub_100514E14(v28, (uint64_t)v30, v31);
      return swift_unknownObjectRelease();
    }
    goto LABEL_13;
  }
  uint64_t v18 = v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  uint64_t v19 = (uint64_t)v30;
  sub_1000079E4(v18, (uint64_t)v30, &qword_100718230);
  uint64_t v20 = sub_1005E0ED0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20);
  if (result == 1)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  swift_retain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v22 = sub_1005E0EB0();
  os_log_type_t v23 = sub_1005E25A0();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 68157952;
    int v32 = 2;
    sub_1005E2960();
    *(_WORD *)(v24 + 8) = 256;
    LOBYTE(v32) = *(unsigned char *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    sub_1005E2960();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "[%.*hhx] Current credentials are invalid.", (uint8_t *)v24, 0xBu);
    swift_slowDealloc();
  }
  else
  {
    swift_release();
  }

  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  return a1(_swiftEmptyArrayStorage);
}

void sub_100529DF0(void *a1)
{
}

uint64_t sub_100529E14(uint64_t a1)
{
  uint64_t v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_credentialsState);
  swift_beginAccess();
  int v4 = *v3;
  swift_beginAccess();
  sub_10050D1A0(a1);
  uint64_t result = swift_endAccess();
  if (!v4 && *v3 - 1 <= 1)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_100514ACC();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

int64_t sub_100529EC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E1670();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1005E1810();
  uint64_t v38 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t (**)(char *, uint64_t, double *))((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10000566C(&qword_100718230);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v14 = ((char *)&v32 - v13);
  uint64_t v15 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff;
  swift_beginAccess();
  uint64_t v16 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  if (*(unsigned char *)(v15 + 16))
  {
    swift_beginAccess();
    sub_1000079E4(v16, (uint64_t)v12, &qword_100718230);
    int v17 = (double *)sub_1005E0ED0();
    uint64_t v8 = (uint64_t (**)(char *, uint64_t, double *))*((void *)v17 - 1);
    int64_t result = v8[6](v12, 1, v17);
    if (result != 1)
    {
      swift_retain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      char v14 = sub_1005E0EB0();
      os_log_type_t v19 = sub_1005E25C0();
      if (os_log_type_enabled(v14, v19))
      {
        uint64_t v20 = swift_slowAlloc();
        *(_DWORD *)uint64_t v20 = 68157952;
        LODWORD(v39) = 2;
        sub_1005E2960();
        *(_WORD *)(v20 + 8) = 256;
        LOBYTE(v39) = *(unsigned char *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
        sub_1005E2960();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v14, v19, "[%.*hhx] Cancelling backoff timer.", (uint8_t *)v20, 0xBu);
        swift_slowDealloc();
LABEL_13:

        ((void (*)(char *, double *))v8[1])(v12, v17);
        uint64_t v25 = *(void (**)(uint64_t))(**(void **)(v1
                                                           + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoffTimer)
                                             + 208);
        uint64_t v26 = swift_retain();
        v25(v26);
        return swift_release();
      }
LABEL_12:
      swift_release();
      goto LABEL_13;
    }
    goto LABEL_21;
  }
  uint64_t v35 = v6;
  uint64_t v36 = v3;
  uint64_t v37 = *(void *)(v15 + 8);
  swift_beginAccess();
  sub_1000079E4(v16, (uint64_t)v14, &qword_100718230);
  uint64_t v21 = sub_1005E0ED0();
  uint64_t v12 = *(char **)(v21 - 8);
  int64_t result = (*((uint64_t (**)(NSObject *, uint64_t, uint64_t))v12 + 6))(v14, 1, v21);
  if (result != 1)
  {
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_retain();
    uint64_t v22 = sub_1005E0EB0();
    int v34 = sub_1005E25C0();
    if (!os_log_type_enabled(v22, (os_log_type_t)v34))
    {

      swift_release_n();
LABEL_17:
      (*((void (**)(NSObject *, uint64_t))v12 + 1))(v14, v21);
      uint64_t v28 = *(void *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoffTimer);
      swift_retain();
      DispatchTime.init(_:)(v37);
      uint64_t v29 = swift_allocObject();
      swift_weakInit();
      *uint64_t v5 = 100;
      uint64_t v30 = v36;
      (*(void (**)(void *, void, uint64_t))(v36 + 104))(v5, enum case for DispatchTimeInterval.milliseconds(_:), v2);
      uint64_t v31 = *(void (**)(uint64_t (**)(char *, uint64_t, double *), void *, uint64_t (*)(), uint64_t))(*(void *)v28 + 200);
      swift_retain();
      v31(v8, v5, sub_100535994, v29);
      swift_release();
      swift_release();
      (*(void (**)(void *, uint64_t))(v30 + 8))(v5, v2);
      (*(void (**)(uint64_t (**)(char *, uint64_t, double *), uint64_t))(v38 + 8))(v8, v35);
      return swift_release();
    }
    uint64_t v32 = v21;
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 68158464;
    LODWORD(v39) = 2;
    int v17 = &v39;
    sub_1005E2960();
    *(_WORD *)(v23 + 8) = 256;
    LOBYTE(v39) = *(unsigned char *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v23 + 11) = 2048;
    int64_t result = static MonotonicTime.now()();
    uint64_t v24 = v37 - result;
    uint64_t v33 = v2;
    if (v37 >= result)
    {
      if (!__OFSUB__(v37, result))
      {
LABEL_16:
        double v39 = (double)v24 / 1000000000.0;
        sub_1005E2960();
        *(_WORD *)(v23 + 21) = 2048;
        double v27 = *(double *)v15;
        swift_release();
        double v39 = v27;
        sub_1005E2960();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v34, "[%.*hhx] Setting up backoff timer for %f s (count %ld) from now.", (uint8_t *)v23, 0x1Fu);
        swift_slowDealloc();

        uint64_t v21 = v32;
        uint64_t v2 = v33;
        goto LABEL_17;
      }
    }
    else
    {
      if (!__OFSUB__(result, v37))
      {
        uint64_t v24 = v37 - result;
        if (__OFSUB__(0, result - v37))
        {
          __break(1u);
          goto LABEL_12;
        }
        goto LABEL_16;
      }
      __break(1u);
    }
    __break(1u);
LABEL_21:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10052A5DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_100718230);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1000079E4(v5, (uint64_t)v4, &qword_100718230);
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v9 = sub_1005E0EB0();
    os_log_type_t v10 = sub_1005E2580();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 68157952;
      HIDWORD(v12) = 2;
      sub_1005E2960();
      *(_WORD *)(v11 + 8) = 256;
      BYTE4(v12) = *(unsigned char *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
      sub_1005E2960();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "[%.*hhx] Backoff timer has expired. Re-trying.", (uint8_t *)v11, 0xBu);
      swift_slowDealloc();
    }
    else
    {
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_100513760((uint64_t)_swiftEmptyArrayStorage);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10052A828@<X0>(char *a1@<X8>)
{
  uint64_t v117 = a1;
  uint64_t v126 = sub_1005E1650();
  uint64_t v2 = *(void *)(v126 - 8);
  uint64_t v3 = __chkstk_darwin(v126);
  uint64_t v5 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v109 - v7;
  __chkstk_darwin(v6);
  uint64_t v121 = (char *)&v109 - v9;
  uint64_t v10 = sub_10000566C(&qword_100717E10);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v114 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v112 = (char *)&v109 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v113 = (char *)&v109 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v109 - v17;
  uint64_t v19 = sub_10000566C(&qword_1007186B8);
  __chkstk_darwin(v19 - 8);
  uint64_t v129 = (char *)&v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1005E12C0();
  uint64_t v130 = *(uint64_t **)(v21 - 8);
  uint64_t v131 = v21;
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v111 = (char *)&v109 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v116 = (char *)&v109 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  Swift::Int v124 = (char *)&v109 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v128 = (char *)&v109 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  Swift::Int v135 = (char *)&v109 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v125 = (char *)&v109 - v33;
  __chkstk_darwin(v32);
  id v127 = (char *)&v109 - v34;
  uint64_t v134 = type metadata accessor for ConnectionState();
  uint64_t v35 = *(void *)(v134 - 8);
  uint64_t v36 = __chkstk_darwin(v134);
  uint64_t v136 = (uint64_t *)((char *)&v109 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = __chkstk_darwin(v36);
  Swift::Int v137 = (uint64_t *)((char *)&v109 - v39);
  __chkstk_darwin(v38);
  uint64_t v41 = (char *)&v109 - v40;
  uint64_t v42 = (unint64_t *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  uint64_t v123 = v42;
  unint64_t v43 = *v42;
  if (*v42 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1005E2FB0();
  }
  else
  {
    uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v115 = v8;
  uint64_t v110 = v5;
  uint64_t v118 = v18;
  uint64_t v122 = v2;
  if (v44)
  {
    uint64_t v138 = _swiftEmptyArrayStorage;
    uint64_t result = sub_1005194B8(0, v44 & ~(v44 >> 63), 0);
    if (v44 < 0)
    {
      __break(1u);
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    uint64_t v46 = 0;
    unint64_t v47 = v138;
    do
    {
      if ((v43 & 0xC000000000000001) != 0)
      {
        uint64_t v48 = sub_1005E2CF0();
      }
      else
      {
        uint64_t v48 = *(void *)(v43 + 8 * v46 + 32);
        swift_retain();
      }
      (*(void (**)(void))(*(void *)v48 + 296))();
      swift_release();
      uint64_t v138 = v47;
      unint64_t v50 = v47[2];
      unint64_t v49 = v47[3];
      if (v50 >= v49 >> 1)
      {
        sub_1005194B8(v49 > 1, v50 + 1, 1);
        unint64_t v47 = v138;
      }
      ++v46;
      v47[2] = v50 + 1;
      sub_100535C58((uint64_t)v41, (uint64_t)v47+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v50, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    }
    while (v44 != v46);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v47 = _swiftEmptyArrayStorage;
  }
  uint64_t v51 = v47[2];
  uint64_t v52 = v131;
  uint64_t v53 = (uint64_t)v129;
  if (v51)
  {
    uint64_t v54 = (uint64_t)v47 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
    unint64_t v55 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v35 + 72);
    Swift::Int v132 = (void (*)(char *, char *, uint64_t))(v130 + 7);
    v133 = v55;
    int v56 = (void (**)(uint64_t, char *, uint64_t))(v130 + 4);
    uint64_t v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v130 + 6);
    swift_bridgeObjectRetain();
    int v58 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v59 = (uint64_t)v137;
      sub_100535D6C(v54, (uint64_t)v137, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      uint64_t v60 = v136;
      sub_100535D6C(v59, (uint64_t)v136, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_100535BF8((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for ConnectionState);
        uint64_t v61 = 1;
      }
      else
      {
        uint64_t v62 = *v56;
        uint64_t v63 = v125;
        (*v56)((uint64_t)v125, (char *)v136, v52);
        v62(v53, v63, v52);
        uint64_t v61 = 0;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v132)(v53, v61, 1, v52);
      sub_100535BF8((uint64_t)v137, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      if ((*v57)(v53, 1, v52) == 1)
      {
        sub_100007A48(v53, &qword_1007186B8);
      }
      else
      {
        uint64_t v64 = v53;
        uint64_t v65 = (void (*)(char *, char *, uint64_t))*v56;
        uint64_t v66 = v127;
        (*v56)((uint64_t)v127, (char *)v64, v52);
        v65(v135, v66, v52);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v67 = (unint64_t)v58;
        }
        else {
          unint64_t v67 = sub_100532A78(0, v58[2] + 1, 1, (unint64_t)v58, &qword_1007186C0, (uint64_t (*)(void))&type metadata accessor for NWConnection.State, (uint64_t (*)(void))&type metadata accessor for NWConnection.State);
        }
        unint64_t v69 = *(void *)(v67 + 16);
        unint64_t v68 = *(void *)(v67 + 24);
        if (v69 >= v68 >> 1) {
          unint64_t v67 = sub_100532A78(v68 > 1, v69 + 1, 1, v67, &qword_1007186C0, (uint64_t (*)(void))&type metadata accessor for NWConnection.State, (uint64_t (*)(void))&type metadata accessor for NWConnection.State);
        }
        *(void *)(v67 + 16) = v69 + 1;
        int v58 = (void *)v67;
        unint64_t v70 = v67
            + ((*((unsigned __int8 *)v130 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v130 + 80))
            + v130[9] * v69;
        uint64_t v52 = v131;
        v65((char *)v70, v135, v131);
        uint64_t v53 = (uint64_t)v129;
      }
      v54 += (uint64_t)v133;
      --v51;
    }
    while (v51);
    swift_bridgeObjectRelease_n();
    uint64_t v71 = v58;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v71 = _swiftEmptyArrayStorage;
  }
  uint64_t v72 = v71[2];
  unint64_t v73 = *v123;
  uint64_t v74 = (uint64_t)v118;
  Swift::Int v137 = v71;
  uint64_t v75 = v130;
  if (!(v73 >> 62))
  {
    if (v72 == *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_32;
    }
LABEL_51:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v122 + 56))(v117, 1, 1, v126);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v108 = sub_1005E2FB0();
  swift_bridgeObjectRelease();
  uint64_t v71 = v137;
  if (v72 != v108) {
    goto LABEL_51;
  }
LABEL_32:
  uint64_t v76 = v126;
  Swift::Int v135 = (char *)v71[2];
  if (!v135) {
    goto LABEL_51;
  }
  NIOIMAPCore2::MailboxName v77 = 0;
  Swift::UInt32 v79 = (void (*)(void, void, void))v75[2];
  uint64_t v78 = v75 + 2;
  Swift::Int v132 = (void (*)(char *, char *, uint64_t))v79;
  uint64_t v80 = (char *)v71 + ((*((unsigned __int8 *)v78 + 64) + 32) & ~(unint64_t)*((unsigned __int8 *)v78 + 64));
  uint64_t v123 = (unint64_t *)v78[7];
  uint64_t v130 = v78 + 9;
  LODWORD(v129) = enum case for NWConnection.State.waiting(_:);
  uint64_t v136 = (void *)(v122 + 56);
  unint64_t v119 = (void (**)(char *, uint64_t))(v78 + 10);
  uint64_t v120 = (void (**)(char *, char *, uint64_t))(v122 + 32);
  id v127 = (char *)(v78 - 1);
  v133 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v122 + 48);
  uint64_t v134 = (unint64_t)(v78 - 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  while (1)
  {
    uint64_t v81 = v128;
    uint64_t v82 = v131;
    uint64_t v83 = v132;
    v132(v128, v80, v131);
    Swift::UInt32 v84 = v124;
    uint64_t v85 = v78;
    v83(v124, v81, v82);
    uint64_t v122 = *v130;
    int v86 = ((uint64_t (*)(char *, uint64_t))v122)(v84, v82);
    if (v86 == v129)
    {
      (*v119)(v84, v82);
      uint64_t v87 = *v120;
      uint64_t v88 = v121;
      (*v120)(v121, v84, v126);
      v87((char *)v74, v88, v126);
      uint64_t v89 = v126;
      uint64_t v125 = (char *)*v136;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v125)(v74, 0, 1, v126);
      uint64_t v90 = *(void (**)(char *, uint64_t))v127;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v90 = *(void (**)(char *, uint64_t))v127;
      swift_bridgeObjectRetain();
      v90(v84, v82);
      uint64_t v89 = v76;
      uint64_t v125 = (char *)*v136;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v125)(v74, 1, 1, v76);
    }
    v90(v128, v82);
    swift_bridgeObjectRelease();
    uint64_t v91 = *v133;
    uint64_t v76 = v89;
    int v92 = (*v133)(v74, 1, v89);
    uint64_t result = sub_100007A48(v74, &qword_100717E10);
    if (v92 != 1) {
      break;
    }
    ++v77;
    uint64_t v80 = (char *)v123 + (void)v80;
    uint64_t v78 = v85;
    if (v135 == v77) {
      goto LABEL_42;
    }
  }
  if (v135 == v77)
  {
LABEL_42:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v125)(v117, 1, 1, v89);
    return swift_bridgeObjectRelease();
  }
  if ((unint64_t)v77 >= v137[2]) {
    goto LABEL_54;
  }
  uint64_t v93 = v116;
  uint64_t v95 = v131;
  uint64_t v94 = v132;
  v132(v116, v80, v131);
  unint64_t v96 = v111;
  v94(v111, v93, v95);
  int v97 = ((uint64_t (*)(char *, uint64_t))v122)(v96, v95);
  if (v97 == v129)
  {
    (*v119)(v96, v95);
    uint64_t v98 = v96;
    uint64_t v99 = *v120;
    uint64_t v100 = v110;
    (*v120)(v110, v98, v89);
    uint64_t v101 = (uint64_t)v112;
    v99(v112, v100, v89);
    uint64_t v102 = (uint64_t)v114;
    uint64_t v103 = (uint64_t)v113;
    uint64_t v104 = (void (*)(uint64_t, void, uint64_t, uint64_t))v125;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v125)(v101, 0, 1, v76);
  }
  else
  {
    v90(v96, v95);
    uint64_t v102 = (uint64_t)v114;
    uint64_t v103 = (uint64_t)v113;
    uint64_t v101 = (uint64_t)v112;
    uint64_t v104 = (void (*)(uint64_t, void, uint64_t, uint64_t))v125;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v125)(v112, 1, 1, v76);
  }
  v90(v116, v95);
  sub_10001FDF0(v101, v103, &qword_100717E10);
  sub_1000079E4(v103, v102, &qword_100717E10);
  uint64_t result = v91(v102, 1, v76);
  if (result != 1)
  {
    uint64_t v105 = *v120;
    uint64_t v106 = v115;
    (*v120)(v115, (char *)v102, v76);
    sub_100007A48(v103, &qword_100717E10);
    uint64_t v107 = (uint64_t)v117;
    v105(v117, v106, v76);
    v104(v107, 0, 1, v76);
    return swift_bridgeObjectRelease();
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_10052B660()
{
  uint64_t v1 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  uint64_t v5 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v6) {
      goto LABEL_3;
    }
LABEL_17:
    uint64_t v10 = _swiftEmptyArrayStorage;
LABEL_18:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v10;
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_1005E2FB0();
  uint64_t v6 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    unint64_t v9 = v5 & 0xC000000000000001;
    uint64_t v10 = _swiftEmptyArrayStorage;
    uint64_t v25 = v6;
    unint64_t v26 = v5 & 0xC000000000000001;
    do
    {
      if (v9)
      {
        uint64_t v11 = sub_1005E2CF0();
      }
      else
      {
        uint64_t v11 = *(void *)(v5 + 8 * v8 + 32);
        swift_retain();
      }
      uint64_t v12 = (void (**)(void))(*(void *)v11 + 296);
      uint64_t v13 = *v12;
      (*v12)();
      char v14 = ConnectionState.isClosedOrCancelled.getter();
      uint64_t v15 = sub_100535BF8((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      if (v14)
      {
        swift_release();
      }
      else
      {
        uint64_t v16 = v5;
        unsigned int v17 = *(_DWORD *)(v11 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
        char v18 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 392))(v15) & 1;
        v13();
        char v19 = ConnectionState.isActivelyConnectingOrAuthenticating.getter();
        sub_100535BF8((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for ConnectionState);
        unint64_t v20 = ConnectionIDsGroupedByState.Connection.init(id:constraint:state:)(v17, v18, (v19 & 1) == 0);
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_100532D0C(0, v10[2] + 1, 1, v10);
        }
        unint64_t v22 = v10[2];
        unint64_t v21 = v10[3];
        uint64_t v5 = v16;
        unint64_t v9 = v26;
        if (v22 >= v21 >> 1) {
          uint64_t v10 = sub_100532D0C((void *)(v21 > 1), v22 + 1, 1, v10);
        }
        uint64_t v6 = v25;
        v10[2] = v22 + 1;
        uint64_t v23 = &v10[v22];
        *((_DWORD *)v23 + 8) = v20;
        *((unsigned char *)v23 + 36) = BYTE4(v20) & 1;
        *((unsigned char *)v23 + 37) = BYTE5(v20) & 1;
      }
      ++v8;
    }
    while (v6 != v8);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_10052B954(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v107 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v107);
  uint64_t v109 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_100718230);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v99 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (uint64_t)&v99 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v108 = (char *)&v99 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v111 = (char *)&v99 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v110 = (char *)&v99 - v20;
  __chkstk_darwin(v19);
  uint64_t v117 = (uint64_t)&v99 - v21;
  uint64_t v22 = sub_1005E1850();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (uint64_t)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v26 = *(void **)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *(void *)uint64_t v25 = v26;
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 104))(v25, enum case for DispatchPredicate.onQueue(_:), v22);
  id v27 = v26;
  uint64_t v28 = sub_1005E1860();
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  uint64_t v29 = v23 + 8;
  v30(v25, v22);
  if (v28)
  {
    uint64_t v31 = (double *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_pendingCancel);
    swift_beginAccess();
    uint64_t v32 = *(void *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_pendingCancelTimer);
    if (*(void *)(*(void *)v31 + 16))
    {
      uint64_t v28 = (uint64_t)v110;
      uint64_t v29 = (uint64_t)v111;
      if (!v32) {
        goto LABEL_67;
      }
      swift_retain();
      RestartableTimer.start()();
    }
    else
    {
      uint64_t v28 = (uint64_t)v110;
      uint64_t v29 = (uint64_t)v111;
      if (!v32) {
        goto LABEL_68;
      }
      swift_retain();
      RestartableTimer.stop()();
    }
    swift_release();
    double v33 = v31[1];
    uint64_t v34 = swift_bridgeObjectRetain();
    uint64_t v35 = sub_1005346D8(v34, a1, v33);
    uint64_t v36 = sub_100534E60(v35);
    swift_bridgeObjectRelease();
    a1 = v36;
    swift_bridgeObjectRelease();
    if (!*(void *)(v36 + 16)) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v37 = (uint64_t *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
    swift_beginAccess();
    uint64_t v25 = *v37;
    if (!((unint64_t)*v37 >> 62))
    {
      uint64_t v38 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v38)
      {
LABEL_10:
        uint64_t v101 = v14;
        uint64_t v102 = v11;
        uint64_t v103 = v8;
        uint64_t v106 = OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID;
        uint64_t v115 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
        unint64_t v116 = v25 & 0xC000000000000001;
        swift_beginAccess();
        uint64_t v14 = 4;
        *(void *)&long long v39 = 68158210;
        long long v105 = v39;
        uint64_t v104 = (char *)&type metadata for Any + 8;
        uint64_t v118 = v2;
        uint64_t v8 = v108;
        uint64_t v113 = v25;
        uint64_t v114 = a1;
        uint64_t v112 = v38;
        while (1)
        {
          uint64_t v41 = v14 - 4;
          if (v116)
          {
            uint64_t v25 = sub_1005E2CF0();
            uint64_t v42 = v14 - 3;
            if (__OFADD__(v41, 1)) {
              goto LABEL_56;
            }
          }
          else
          {
            uint64_t v25 = *(void *)(v25 + 8 * v14);
            swift_retain();
            uint64_t v42 = v14 - 3;
            if (__OFADD__(v41, 1))
            {
LABEL_56:
              __break(1u);
              goto LABEL_57;
            }
          }
          uint64_t v120 = v42;
          uint64_t v119 = OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id;
          if (sub_100010AAC(*(_DWORD *)(v25 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id), a1))
          {
            uint64_t v43 = v117;
            sub_1000079E4(v115, v117, &qword_100718230);
            uint64_t v11 = (char *)sub_1005E0ED0();
            uint64_t v44 = *((void *)v11 - 1);
            if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v44 + 48))(v43, 1, v11) == 1)
            {
              __break(1u);
LABEL_61:
              __break(1u);
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
LABEL_64:
              __break(1u);
LABEL_65:
              __break(1u);
LABEL_66:
              __break(1u);
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
              JUMPOUT(0x10052CD20);
            }
            swift_retain_n();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            swift_retain_n();
            uint64_t v45 = sub_1005E0EB0();
            os_log_type_t v46 = sub_1005E25C0();
            if (os_log_type_enabled(v45, v46))
            {
              uint64_t v47 = swift_slowAlloc();
              v122[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v47 = v105;
              *(_DWORD *)(v47 + 4) = 2;
              *(_WORD *)(v47 + 8) = 256;
              char v48 = *(unsigned char *)(v118 + v106);
              swift_release();
              *(unsigned char *)(v47 + 10) = v48;
              swift_release();
              *(_WORD *)(v47 + 11) = 2082;
              uint64_t v49 = ConnectionID.debugDescription.getter(*(unsigned int *)(v25 + v119));
              *(void *)(v47 + 13) = sub_100507920(v49, v50, v122);
              swift_release_n();
              uint64_t v2 = v118;
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v45, v46, "[%.*hhx] Cancelling idle connection %{public}s.", (uint8_t *)v47, 0x15u);
              swift_arrayDestroy();
              uint64_t v28 = (uint64_t)v110;
              swift_slowDealloc();
              uint64_t v8 = v108;
              swift_slowDealloc();
            }
            else
            {
              swift_release_n();

              swift_release_n();
            }
            uint64_t v40 = (*(uint64_t (**)(uint64_t, char *))(v44 + 8))(v117, v11);
            (*(void (**)(uint64_t))(*(void *)v25 + 512))(v40);
            swift_release();
            uint64_t v29 = (uint64_t)v111;
            a1 = v114;
          }
          else
          {
            (*(void (**)(void))(*(void *)v25 + 296))();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                sub_1000079E4(v115, v29, &qword_100718230);
                uint64_t v11 = (char *)sub_1005E0ED0();
                uint64_t v59 = *((void *)v11 - 1);
                if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v59 + 48))(v29, 1, v11) == 1) {
                  goto LABEL_62;
                }
                swift_retain_n();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                swift_retain_n();
                uint64_t v60 = sub_1005E0EB0();
                os_log_type_t v61 = sub_1005E25C0();
                if (os_log_type_enabled(v60, v61))
                {
                  uint64_t v62 = swift_slowAlloc();
                  uint64_t v100 = swift_slowAlloc();
                  v122[0] = v100;
                  *(_DWORD *)uint64_t v62 = v105;
                  *(_DWORD *)(v62 + 4) = 2;
                  *(_WORD *)(v62 + 8) = 256;
                  char v63 = *(unsigned char *)(v2 + v106);
                  swift_release();
                  *(unsigned char *)(v62 + 10) = v63;
                  uint64_t v29 = (uint64_t)v111;
                  swift_release();
                  *(_WORD *)(v62 + 11) = 2082;
                  uint64_t v64 = ConnectionID.debugDescription.getter(*(unsigned int *)(v25 + v119));
                  *(void *)(v62 + 13) = sub_100507920(v64, v65, v122);
                  swift_release_n();
                  uint64_t v2 = v118;
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v60, v61, "[%.*hhx] Connection %{public}s is unauthenticated.", (uint8_t *)v62, 0x15u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  uint64_t v8 = v108;
                  swift_slowDealloc();
                  swift_release();
                }
                else
                {
                  swift_release_n();

                  swift_release_n();
                }
                a1 = v114;
                (*(void (**)(uint64_t, char *))(v59 + 8))(v29, v11);
                sub_100535BF8((uint64_t)v109, (uint64_t (*)(void))type metadata accessor for ConnectionState);
                uint64_t v28 = (uint64_t)v110;
                break;
              case 2u:
                memcpy(v122, v109, 0x15AuLL);
                sub_100508504((uint64_t)v122);
                sub_1000079E4(v115, (uint64_t)v8, &qword_100718230);
                uint64_t v11 = (char *)sub_1005E0ED0();
                uint64_t v66 = *((void *)v11 - 1);
                if ((*(unsigned int (**)(char *, uint64_t, char *))(v66 + 48))(v8, 1, v11) == 1) {
                  goto LABEL_63;
                }
                swift_retain_n();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                swift_retain_n();
                unint64_t v67 = sub_1005E0EB0();
                os_log_type_t v68 = sub_1005E25C0();
                if (os_log_type_enabled(v67, v68))
                {
                  uint64_t v69 = swift_slowAlloc();
                  uint64_t v100 = swift_slowAlloc();
                  uint64_t v121 = v100;
                  *(_DWORD *)uint64_t v69 = v105;
                  *(_DWORD *)(v69 + 4) = 2;
                  *(_WORD *)(v69 + 8) = 256;
                  char v70 = *(unsigned char *)(v2 + v106);
                  swift_release();
                  *(unsigned char *)(v69 + 10) = v70;
                  uint64_t v29 = (uint64_t)v111;
                  swift_release();
                  *(_WORD *)(v69 + 11) = 2082;
                  uint64_t v71 = ConnectionID.debugDescription.getter(*(unsigned int *)(v25 + v119));
                  *(void *)(v69 + 13) = sub_100507920(v71, v72, &v121);
                  swift_release_n();
                  uint64_t v2 = v118;
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v67, v68, "[%.*hhx] Connection %{public}s is authenticated.", (uint8_t *)v69, 0x15u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  uint64_t v8 = v108;
                  swift_slowDealloc();
                  swift_release();
                }
                else
                {
                  swift_release_n();

                  swift_release_n();
                }
                a1 = v114;
                (*(void (**)(char *, char *))(v66 + 8))(v8, v11);
                goto LABEL_54;
              case 3u:
                uint64_t v73 = v101;
                sub_1000079E4(v115, v101, &qword_100718230);
                uint64_t v11 = (char *)sub_1005E0ED0();
                uint64_t v74 = *((void *)v11 - 1);
                if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v74 + 48))(v73, 1, v11) == 1) {
                  goto LABEL_64;
                }
                swift_retain_n();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                swift_retain_n();
                uint64_t v75 = sub_1005E0EB0();
                os_log_type_t v76 = sub_1005E25C0();
                if (os_log_type_enabled(v75, v76))
                {
                  uint64_t v77 = swift_slowAlloc();
                  uint64_t v100 = swift_slowAlloc();
                  v122[0] = v100;
                  *(_DWORD *)uint64_t v77 = v105;
                  *(_DWORD *)(v77 + 4) = 2;
                  *(_WORD *)(v77 + 8) = 256;
                  char v78 = *(unsigned char *)(v2 + v106);
                  swift_release();
                  *(unsigned char *)(v77 + 10) = v78;
                  uint64_t v29 = (uint64_t)v111;
                  swift_release();
                  *(_WORD *)(v77 + 11) = 2082;
                  uint64_t v79 = ConnectionID.debugDescription.getter(*(unsigned int *)(v25 + v119));
                  *(void *)(v77 + 13) = sub_100507920(v79, v80, v122);
                  swift_release_n();
                  uint64_t v2 = v118;
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v75, v76, "[%.*hhx] Connection %{public}s: authentication failed.", (uint8_t *)v77, 0x15u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  uint64_t v8 = v108;
                  swift_slowDealloc();
                  swift_release();
                }
                else
                {
                  swift_release_n();

                  swift_release_n();
                }
                a1 = v114;
                (*(void (**)(uint64_t, char *))(v74 + 8))(v101, v11);
                goto LABEL_54;
              case 4u:
                uint64_t v81 = (uint64_t)v102;
                sub_1000079E4(v115, (uint64_t)v102, &qword_100718230);
                uint64_t v11 = (char *)sub_1005E0ED0();
                uint64_t v82 = *((void *)v11 - 1);
                if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v82 + 48))(v81, 1, v11) == 1) {
                  goto LABEL_65;
                }
                swift_retain_n();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                swift_retain_n();
                uint64_t v83 = sub_1005E0EB0();
                os_log_type_t v84 = sub_1005E25C0();
                if (os_log_type_enabled(v83, v84))
                {
                  uint64_t v85 = swift_slowAlloc();
                  uint64_t v100 = swift_slowAlloc();
                  v122[0] = v100;
                  *(_DWORD *)uint64_t v85 = v105;
                  *(_DWORD *)(v85 + 4) = 2;
                  *(_WORD *)(v85 + 8) = 256;
                  char v86 = *(unsigned char *)(v2 + v106);
                  swift_release();
                  *(unsigned char *)(v85 + 10) = v86;
                  uint64_t v29 = (uint64_t)v111;
                  swift_release();
                  *(_WORD *)(v85 + 11) = 2082;
                  uint64_t v87 = ConnectionID.debugDescription.getter(*(unsigned int *)(v25 + v119));
                  *(void *)(v85 + 13) = sub_100507920(v87, v88, v122);
                  swift_release_n();
                  uint64_t v2 = v118;
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v83, v84, "[%.*hhx] Connection %{public}s failed.", (uint8_t *)v85, 0x15u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  uint64_t v8 = v108;
                  swift_slowDealloc();
                  swift_release();
                }
                else
                {
                  swift_release_n();

                  swift_release_n();
                }
                a1 = v114;
                (*(void (**)(char *, char *))(v82 + 8))(v102, v11);
                goto LABEL_54;
              case 5u:
                uint64_t v89 = (uint64_t)v103;
                sub_1000079E4(v115, (uint64_t)v103, &qword_100718230);
                uint64_t v11 = (char *)sub_1005E0ED0();
                uint64_t v90 = *((void *)v11 - 1);
                if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v90 + 48))(v89, 1, v11) == 1) {
                  goto LABEL_66;
                }
                swift_retain_n();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                swift_retain_n();
                uint64_t v91 = sub_1005E0EB0();
                os_log_type_t v92 = sub_1005E25C0();
                if (os_log_type_enabled(v91, v92))
                {
                  uint64_t v93 = swift_slowAlloc();
                  uint64_t v100 = swift_slowAlloc();
                  v122[0] = v100;
                  *(_DWORD *)uint64_t v93 = v105;
                  *(_DWORD *)(v93 + 4) = 2;
                  *(_WORD *)(v93 + 8) = 256;
                  char v94 = *(unsigned char *)(v2 + v106);
                  swift_release();
                  *(unsigned char *)(v93 + 10) = v94;
                  uint64_t v29 = (uint64_t)v111;
                  swift_release();
                  *(_WORD *)(v93 + 11) = 2082;
                  uint64_t v95 = ConnectionID.debugDescription.getter(*(unsigned int *)(v25 + v119));
                  *(void *)(v93 + 13) = sub_100507920(v95, v96, v122);
                  swift_release_n();
                  uint64_t v2 = v118;
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v91, v92, "[%.*hhx] Connection %{public}s is cancelled.", (uint8_t *)v93, 0x15u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  uint64_t v8 = v108;
                  swift_slowDealloc();
                  swift_release();
                }
                else
                {
                  swift_release_n();

                  swift_release_n();
                }
                a1 = v114;
                (*(void (**)(char *, char *))(v90 + 8))(v103, v11);
LABEL_54:
                uint64_t v28 = (uint64_t)v110;
                break;
              default:
                sub_1000079E4(v115, v28, &qword_100718230);
                uint64_t v11 = (char *)sub_1005E0ED0();
                uint64_t v51 = v28;
                uint64_t v52 = *((void *)v11 - 1);
                if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v52 + 48))(v51, 1, v11) == 1) {
                  goto LABEL_61;
                }
                swift_retain_n();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                swift_retain_n();
                uint64_t v53 = sub_1005E0EB0();
                os_log_type_t v54 = sub_1005E25C0();
                if (os_log_type_enabled(v53, v54))
                {
                  uint64_t v55 = swift_slowAlloc();
                  uint64_t v100 = swift_slowAlloc();
                  v122[0] = v100;
                  *(_DWORD *)uint64_t v55 = v105;
                  *(_DWORD *)(v55 + 4) = 2;
                  *(_WORD *)(v55 + 8) = 256;
                  char v56 = *(unsigned char *)(v2 + v106);
                  swift_release();
                  *(unsigned char *)(v55 + 10) = v56;
                  uint64_t v29 = (uint64_t)v111;
                  swift_release();
                  *(_WORD *)(v55 + 11) = 2082;
                  uint64_t v57 = ConnectionID.debugDescription.getter(*(unsigned int *)(v25 + v119));
                  *(void *)(v55 + 13) = sub_100507920(v57, v58, v122);
                  swift_release_n();
                  uint64_t v2 = v118;
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v53, v54, "[%.*hhx] Connection %{public}s is connecting.", (uint8_t *)v55, 0x15u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  uint64_t v8 = v108;
                  swift_slowDealloc();
                  swift_release();
                }
                else
                {
                  swift_release_n();

                  swift_release_n();
                }
                a1 = v114;
                int v97 = v110;
                (*(void (**)(char *, char *))(v52 + 8))(v110, v11);
                uint64_t v28 = (uint64_t)v97;
                sub_100535BF8((uint64_t)v109, (uint64_t (*)(void))type metadata accessor for ConnectionState);
                break;
            }
          }
          uint64_t v25 = v113;
          ++v14;
          if (v120 == v112) {
            goto LABEL_59;
          }
        }
      }
      goto LABEL_59;
    }
  }
  else
  {
LABEL_57:
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_1005E2FB0();
  if (v38) {
    goto LABEL_10;
  }
LABEL_59:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1005271F0();
}

uint64_t sub_10052CD38(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connectionStateDidChange;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connectionStateDidChange) = 0;
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_retain();
  sub_100535384(v5, a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (*(unsigned char *)(v2 + v4) == 1)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_100513EB8();
      uint64_t result = swift_unknownObjectRelease();
    }
    *(unsigned char *)(v2 + v4) = 0;
  }
  return result;
}

uint64_t sub_10052CDCC(unsigned int *a1)
{
  uint64_t v2 = v1;
  sub_10000566C(&qword_100718230);
  __chkstk_darwin();
  uint64_t v67 = (uint64_t)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100717EF8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ConnectionState();
  __chkstk_darwin();
  uint64_t v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v66 - v9;
  uint64_t v11 = sub_1005E1850();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (uint64_t *)((char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *uint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  id v16 = v15;
  LOBYTE(v15) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
LABEL_38:
    __break(1u);
    return result;
  }
  sub_100057594((uint64_t)(a1 + 2), (uint64_t)&v71);
  sub_100057594((uint64_t)&v71, (uint64_t)&v80);
  if (v80 >> 60 == 1)
  {
    v80 &= 0xFFFFFFFFFFFFFFFuLL;
    uint64_t v18 = swift_bridgeObjectRetain();
    sub_100529E14(v18);
    swift_bridgeObjectRelease();
    return sub_10052DB48((uint64_t)a1);
  }
  uint64_t result = sub_100057594((uint64_t)&v71, (uint64_t)&v79);
  if (v79 == 0x8000000000000010)
  {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connectionStateDidChange) = 1;
    return result;
  }
  sub_100057594((uint64_t)&v71, (uint64_t)&v78);
  if (v78 >> 60 == 1) {
    return sub_10052DB48((uint64_t)a1);
  }
  uint64_t v19 = (unint64_t *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  unint64_t v20 = *v19;
  uint64_t v21 = *((void *)a1 + 3);
  uint64_t v69 = *((void *)a1 + 4);
  uint64_t v70 = v21;
  uint64_t v22 = *a1;
  sub_10002292C((uint64_t)&v70);
  sub_10002292C((uint64_t)&v69);
  swift_bridgeObjectRetain();
  sub_100535A80(&v71);
  uint64_t v23 = sub_100534AF8(v20, v22);
  sub_100535AAC(&v71);
  sub_10001D550((uint64_t)&v70);
  sub_10001D550((uint64_t)&v69);
  uint64_t v24 = swift_bridgeObjectRelease();
  if (v23)
  {
    (*(void (**)(uint64_t))(*(void *)v23 + 296))(v24);
    sub_100535D6C((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload - 3 >= 3)
    {
      if (EnumCaseMultiPayload >= 2)
      {
        sub_100535BF8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ConnectionState);
        sub_100535BF8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConnectionState);
        sub_100057594((uint64_t)&v71, (uint64_t)&v77);
        if (v77 >> 60)
        {
          sub_100057594((uint64_t)&v71, (uint64_t)v68);
          uint64_t v42 = v68[0];
          if ((unint64_t)v68[0] >> 60 == 2)
          {
            v68[0] &= 0xFFFFFFFFFFFFFFFuLL;
            uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v44 = *(unsigned int *)((v42 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
            uint64_t v46 = *(void *)((v42 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
            uint64_t v45 = *(void *)((v42 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
            uint64_t v47 = *(unsigned int *)((v42 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
            int v48 = *(unsigned __int8 *)((v42 & 0xFFFFFFFFFFFFFFFLL) + 0x34);
            uint64_t v49 = *(void *)((v42 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
            uint64_t v50 = *(unsigned int *)((v42 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
            int v51 = *(unsigned __int8 *)((v42 & 0xFFFFFFFFFFFFFFFLL) + 0x44);
            uint64_t v52 = *(unsigned int *)((v42 & 0xFFFFFFFFFFFFFFFLL) + 0x48);
            int v53 = *(unsigned __int8 *)((v42 & 0xFFFFFFFFFFFFFFFLL) + 0x4C);
            uint64_t v54 = *(void *)((v42 & 0xFFFFFFFFFFFFFFFLL) + 0x50);
            __int16 v55 = *(unsigned __int8 *)((v42 & 0xFFFFFFFFFFFFFFFLL) + 0x58);
            int v56 = *(unsigned __int8 *)((v42 & 0xFFFFFFFFFFFFFFFLL) + 0x59);
            int v57 = *(unsigned __int8 *)((v42 & 0xFFFFFFFFFFFFFFFLL) + 0x5A);
            BOOL v58 = v48 == 0;
            uint64_t v59 = &_mh_execute_header;
            if (v58) {
              uint64_t v60 = 0;
            }
            else {
              uint64_t v60 = &_mh_execute_header;
            }
            unint64_t v61 = (unint64_t)v60 | v47;
            if (v51) {
              uint64_t v62 = &_mh_execute_header;
            }
            else {
              uint64_t v62 = 0;
            }
            unint64_t v63 = (unint64_t)v62 | v50;
            if (!v53) {
              uint64_t v59 = 0;
            }
            unint64_t v64 = (unint64_t)v59 | v52;
            if (v56) {
              __int16 v65 = 256;
            }
            else {
              __int16 v65 = 0;
            }
            *(void *)&long long v72 = v43;
            *((void *)&v72 + 1) = v44;
            *(void *)&long long v73 = v46;
            *((void *)&v73 + 1) = v45;
            *(void *)&long long v74 = v61;
            *((void *)&v74 + 1) = v49;
            *(void *)&v75[0] = v63;
            *((void *)&v75[0] + 1) = v64;
            *(void *)&v75[1] = v54;
            BYTE10(v75[1]) = v57 != 0;
            WORD4(v75[1]) = v65 | v55;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_10052E348((uint64_t)&v72, v22);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_100057594((uint64_t)&v71, (uint64_t)&v76);
            if (v76 == 0x8000000000000000)
            {
              long long v74 = 0u;
              memset(v75, 0, 27);
              long long v72 = 0u;
              long long v73 = 0u;
              sub_10052E348((uint64_t)&v72, v22);
            }
          }
        }
        else
        {
          uint64_t v36 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_credentialsState;
          swift_beginAccess();
          *(void *)(v36 + 8) = static MonotonicTime.now()();
          *(unsigned char *)uint64_t v36 = 0;
          swift_endAccess();
          uint64_t v37 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff;
          swift_beginAccess();
          *(void *)uint64_t v37 = 0;
          *(void *)(v37 + 8) = 0;
          *(_WORD *)(v37 + 16) = 1;
          uint64_t v38 = *(void (**)(uint64_t))(**(void **)(v2
                                                             + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoffTimer)
                                               + 208);
          uint64_t v39 = swift_retain();
          v38(v39);
          swift_release();
          uint64_t v40 = type metadata accessor for ConnectionStatus.Error(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v6, 1, 1, v40);
          uint64_t v41 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_lastError;
          swift_beginAccess();
          sub_100535AD8((uint64_t)v6, v41);
          swift_endAccess();
        }
        sub_10052D774((long long *)a1);
        return swift_release();
      }
      sub_100535BF8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    }
    sub_100535BF8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    return swift_release();
  }
  uint64_t v26 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  uint64_t v27 = v67;
  sub_1000079E4(v26, v67, &qword_100718230);
  uint64_t v28 = sub_1005E0ED0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28);
  if (result == 1) {
    goto LABEL_38;
  }
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_10002292C((uint64_t)&v70);
  sub_10002292C((uint64_t)&v69);
  sub_100535A80(&v71);
  sub_10002292C((uint64_t)&v70);
  sub_10002292C((uint64_t)&v69);
  sub_100535A80(&v71);
  uint64_t v30 = sub_1005E0EB0();
  os_log_type_t v31 = sub_1005E25A0();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    v68[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 68158210;
    LODWORD(v77) = 2;
    sub_1005E2960();
    *(_WORD *)(v32 + 8) = 256;
    char v33 = *(unsigned char *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    swift_release();
    LOBYTE(v77) = v33;
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v32 + 11) = 2082;
    uint64_t v34 = ConnectionID.debugDescription.getter(v22);
    unint64_t v77 = sub_100507920(v34, v35, v68);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100535AAC(&v71);
    sub_10001D550((uint64_t)&v70);
    sub_10001D550((uint64_t)&v69);
    sub_100535AAC(&v71);
    sub_10001D550((uint64_t)&v70);
    sub_10001D550((uint64_t)&v69);
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "[%.*hhx] Got callback for connection %{public}s but this connection is unknown to the pool.", (uint8_t *)v32, 0x15u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v27 = v67;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    sub_100535AAC(&v71);
    sub_10001D550((uint64_t)&v70);
    sub_10001D550((uint64_t)&v69);
    sub_100535AAC(&v71);
    sub_10001D550((uint64_t)&v70);
    sub_10001D550((uint64_t)&v69);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
}

uint64_t sub_10052D774(long long *a1)
{
  uint64_t v2 = v1;
  sub_10000566C(&qword_100718230);
  __chkstk_darwin();
  uint64_t v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = (void **)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_enqueuedEvents);
  swift_beginAccess();
  if (*v6)
  {
    swift_beginAccess();
    if (*v6)
    {
      sub_100057594((uint64_t)a1 + 8, (uint64_t)&v29);
      uint64_t v7 = *((void *)a1 + 3);
      uint64_t v27 = *((void *)a1 + 4);
      uint64_t v28 = v7;
      uint64_t v8 = *v6;
      sub_100535A80(&v29);
      sub_10002292C((uint64_t)&v28);
      sub_10002292C((uint64_t)&v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v6 = v8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v8 = sub_10053305C(0, v8[2] + 1, 1, v8);
        *uint64_t v6 = v8;
      }
      unint64_t v11 = v8[2];
      unint64_t v10 = v8[3];
      if (v11 >= v10 >> 1)
      {
        uint64_t v8 = sub_10053305C((void *)(v10 > 1), v11 + 1, 1, v8);
        *uint64_t v6 = v8;
      }
      v8[2] = v11 + 1;
      uint64_t v12 = &v8[5 * v11];
      long long v13 = *a1;
      long long v14 = a1[1];
      v12[8] = *((void *)a1 + 4);
      *((_OWORD *)v12 + 2) = v13;
      *((_OWORD *)v12 + 3) = v14;
    }
    return swift_endAccess();
  }
  else
  {
    uint64_t v16 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    sub_1000079E4(v16, (uint64_t)v5, &qword_100718230);
    uint64_t v17 = sub_1005E0ED0();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v5, 1, v17);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      swift_retain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v19 = sub_1005E0EB0();
      os_log_type_t v20 = sub_1005E25A0();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = 68157952;
        LODWORD(v29) = 2;
        sub_1005E2960();
        *(_WORD *)(v21 + 8) = 256;
        LOBYTE(v29) = *(unsigned char *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
        sub_1005E2960();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "[%.*hhx] Trying to enqueue event outside withEnqueuedSend.", (uint8_t *)v21, 0xBu);
        swift_slowDealloc();
      }
      else
      {
        swift_release();
      }

      (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v5, v17);
      uint64_t result = swift_unknownObjectWeakLoadStrong();
      if (result)
      {
        sub_10000566C(&qword_1007186B0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1005F6670;
        sub_100057594((uint64_t)a1 + 8, (uint64_t)&v29);
        uint64_t v23 = *((void *)a1 + 3);
        uint64_t v27 = *((void *)a1 + 4);
        uint64_t v24 = v27;
        uint64_t v28 = v23;
        long long v25 = a1[1];
        *(_OWORD *)(inited + 32) = *a1;
        *(_OWORD *)(inited + 48) = v25;
        *(void *)(inited + 64) = v24;
        sub_100535A80(&v29);
        sub_10002292C((uint64_t)&v28);
        sub_10002292C((uint64_t)&v27);
        sub_100513760(inited);
        swift_unknownObjectRelease();
        swift_setDeallocating();
        return swift_arrayDestroy();
      }
    }
  }
  return result;
}

int64_t sub_10052DB48(uint64_t a1)
{
  sub_10000566C(&qword_100718230);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100717EF8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v48 - v7;
  uint64_t v9 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v14 = (char *)&v48 - v13;
  sub_100057594(a1 + 8, (uint64_t)&v59);
  int64_t result = sub_100057594((uint64_t)&v59, (uint64_t)&v60);
  if (v60 >> 60 == 1)
  {
    uint64_t v52 = v10;
    int v53 = v4;
    v60 &= 0xFFFFFFFFFFFFFFFuLL;
    Swift::UInt32 v16 = *(_DWORD *)a1;
    uint64_t v54 = swift_bridgeObjectRetain();
    v17.rawValue = v16;
    sub_10052E6F0(v54, v17);
    uint64_t v18 = (unint64_t *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
    swift_beginAccess();
    unint64_t v19 = *v18;
    uint64_t v20 = *(void *)(a1 + 24);
    uint64_t v21 = *(void *)(a1 + 32);
    int v51 = (long long *)a1;
    uint64_t v57 = v21;
    uint64_t v58 = v20;
    sub_10002292C((uint64_t)&v58);
    sub_10002292C((uint64_t)&v57);
    swift_bridgeObjectRetain();
    sub_100535A80(&v59);
    Swift::UInt32 v50 = v16;
    unint64_t v22 = sub_100535280(v19, v16);
    char v24 = v23;
    sub_100535AAC(&v59);
    sub_10001D550((uint64_t)&v58);
    sub_10001D550((uint64_t)&v57);
    uint64_t v25 = v1;
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      swift_beginAccess();
      uint64_t v26 = sub_1000EF57C(v22);
      uint64_t v27 = swift_endAccess();
      uint64_t v28 = (*(uint64_t (**)(uint64_t))(*(void *)v26 + 320))(v27);
      sub_1005099E0(v28, v8);
      swift_bridgeObjectRelease();
      uint64_t v29 = v52;
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v52 + 48))(v8, 1, v9) == 1)
      {
        sub_100007A48((uint64_t)v8, &qword_100717EF8);
      }
      else
      {
        sub_100535C58((uint64_t)v8, (uint64_t)v12, type metadata accessor for ConnectionStatus.Error);
        sub_100535C58((uint64_t)v12, (uint64_t)v14, type metadata accessor for ConnectionStatus.Error);
        sub_100535C58((uint64_t)v14, (uint64_t)v6, type metadata accessor for ConnectionStatus.Error);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v6, 0, 1, v9);
        uint64_t v30 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_lastError;
        swift_beginAccess();
        sub_100535AD8((uint64_t)v6, v30);
        swift_endAccess();
      }
      uint64_t v31 = (uint64_t)v53;
      uint64_t v32 = v25 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
      swift_beginAccess();
      sub_1000079E4(v32, v31, &qword_100718230);
      uint64_t v33 = sub_1005E0ED0();
      uint64_t v34 = *(void *)(v33 - 8);
      int64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v31, 1, v33);
      if (result == 1)
      {
        __break(1u);
        return result;
      }
      swift_retain_n();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      sub_10002292C((uint64_t)&v58);
      sub_10002292C((uint64_t)&v57);
      sub_100535A80(&v59);
      sub_10002292C((uint64_t)&v58);
      sub_10002292C((uint64_t)&v57);
      sub_100535A80(&v59);
      swift_retain();
      unint64_t v35 = sub_1005E0EB0();
      os_log_type_t v36 = sub_1005E25C0();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v52 = v33;
        uint64_t v37 = swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        v56[0] = v49;
        *(_DWORD *)uint64_t v37 = 68158466;
        LODWORD(v55) = 2;
        sub_1005E2960();
        *(_WORD *)(v37 + 8) = 256;
        LOBYTE(v55) = *(unsigned char *)(v25 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v37 + 11) = 2082;
        uint64_t v38 = ConnectionID.debugDescription.getter(v50);
        uint64_t v39 = v25;
        uint64_t v55 = sub_100507920(v38, v40, v56);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100535AAC(&v59);
        sub_10001D550((uint64_t)&v58);
        sub_10001D550((uint64_t)&v57);
        sub_100535AAC(&v59);
        sub_10001D550((uint64_t)&v58);
        sub_10001D550((uint64_t)&v57);
        *(_WORD *)(v37 + 21) = 2048;
        if (*v18 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v41 = sub_1005E2FB0();
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v41 = *(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_release();
        }
        uint64_t v55 = v41;
        sub_1005E2960();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "[%.*hhx] Closing connection %{public}s. Remaining connection count: %ld.", (uint8_t *)v37, 0x1Fu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v33 = v52;
        uint64_t v31 = (uint64_t)v53;
        uint64_t v25 = v39;
      }
      else
      {

        swift_release_n();
        sub_100535AAC(&v59);
        sub_10001D550((uint64_t)&v58);
        sub_10001D550((uint64_t)&v57);
        sub_100535AAC(&v59);
        sub_10001D550((uint64_t)&v58);
        sub_10001D550((uint64_t)&v57);
        swift_release();
      }
      uint64_t v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v31, v33);
      (*(void (**)(uint64_t))(*(void *)v26 + 512))(v42);
      sub_10052D774(v51);
      swift_release();
    }
    char v43 = CommandConnection.RecentErrors.backOffBehavior.getter(v54);
    int64_t result = swift_bridgeObjectRelease();
    if (v43 != 3)
    {
      uint64_t v44 = v25 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff;
      swift_beginAccess();
      *(void *)uint64_t v44 = sub_100504E1C(v43, *(void *)v44, *(void *)(v44 + 8), *(unsigned char *)(v44 + 16));
      *(void *)(v44 + 8) = v45;
      *(unsigned char *)(v44 + 16) = v46 & 1;
      *(unsigned char *)(v44 + 17) = v47 & 1;
      swift_endAccess();
      return sub_100529EC8();
    }
  }
  return result;
}

uint64_t sub_10052E348(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_10000566C(&qword_100718230);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1000079E4(v8, (uint64_t)v7, &qword_100718230);
  uint64_t v9 = sub_1005E0ED0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9);
  if (result == 1) {
    goto LABEL_16;
  }
  swift_retain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v12 = sub_1005E0EB0();
  os_log_type_t v13 = sub_1005E2580();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v24 = v9;
    uint64_t v15 = v14;
    uint64_t v23 = swift_slowAlloc();
    v26[0] = v23;
    *(_DWORD *)uint64_t v15 = 68158210;
    LODWORD(v25) = 2;
    sub_1005E2960();
    *(_WORD *)(v15 + 8) = 256;
    LOBYTE(v25) = *(unsigned char *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v15 + 11) = 2082;
    uint64_t v16 = ConnectionID.debugDescription.getter(a2);
    uint64_t v25 = sub_100507920(v16, v17, v26);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[%.*hhx] Mailbox selection changed on %{public}s.", (uint8_t *)v15, 0x15u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v9 = v24;
    swift_slowDealloc();
  }
  else
  {
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  uint64_t v18 = (unint64_t *)(v3 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  unint64_t v19 = *v18;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_1005E2FB0();
    uint64_t v20 = result;
    if (result) {
      goto LABEL_7;
    }
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain_n();
  if (!v20) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_7:
  if (v20 >= 1)
  {
    uint64_t v21 = 0;
    do
    {
      if ((v19 & 0xC000000000000001) != 0)
      {
        uint64_t v22 = sub_1005E2CF0();
      }
      else
      {
        uint64_t v22 = *(void *)(v19 + 8 * v21 + 32);
        swift_retain();
      }
      ++v21;
      uint64_t v25 = v22;
      sub_100530CA0(&v25, a2, a1, v3);
      swift_release();
    }
    while (v20 != v21);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_10052E6F0(uint64_t a1, IMAP2Persistence::AccountLoggerID a2)
{
  sub_10000566C(&qword_100717E10);
  __chkstk_darwin();
  v232 = (uint64_t (**)(uint64_t, uint64_t))((char *)&v208 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v7 = (char *)&v208 - v6;
  uint64_t v224 = sub_1005E1650();
  uint64_t v228 = *(void *)(v224 - 8);
  __chkstk_darwin();
  os_log_t v230 = (os_log_t)((char *)&v208 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v231 = (void (*)(char *, char *, uint64_t))((char *)&v208 - v9);
  __chkstk_darwin();
  uint64_t v212 = (char *)&v208 - v10;
  __chkstk_darwin();
  uint64_t v218 = (char *)&v208 - v11;
  sub_10000566C(&qword_100718230);
  __chkstk_darwin();
  os_log_type_t v13 = (char *)&v208 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v219 = (uint64_t)&v208 - v14;
  __chkstk_darwin();
  os_log_t v229 = (os_log_t)((char *)&v208 - v15);
  __chkstk_darwin();
  uint64_t v227 = (uint64_t)&v208 - v16;
  __chkstk_darwin();
  uint64_t v223 = (uint64_t *)((char *)&v208 - v17);
  __chkstk_darwin();
  uint64_t v216 = (char *)&v208 - v18;
  __chkstk_darwin();
  uint64_t v217 = (uint64_t)&v208 - v19;
  __chkstk_darwin();
  uint64_t v226 = (uint64_t *)((char *)&v208 - v20);
  __chkstk_darwin();
  unint64_t v233 = (uint64_t (*)(uint64_t))((char *)&v208 - v21);
  os_log_t v222 = (os_log_t)type metadata accessor for CommandConnection.RecentErrors.Statistics(0);
  __chkstk_darwin();
  uint64_t v214 = (uint64_t)&v208 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v211 = (uint64_t)&v208 - v23;
  __chkstk_darwin();
  uint64_t v215 = (uint64_t)&v208 - v24;
  __chkstk_darwin();
  uint64_t v213 = (uint64_t)&v208 - v25;
  __chkstk_darwin();
  uint64_t v225 = (uint64_t)&v208 - v26;
  __chkstk_darwin();
  uint64_t v221 = (uint64_t)&v208 - v27;
  __chkstk_darwin();
  uint64_t v210 = (uint64_t)&v208 - v28;
  __chkstk_darwin();
  uint64_t v208 = (uint64_t)&v208 - v29;
  __chkstk_darwin();
  uint64_t v220 = (uint64_t)&v208 - v30;
  __chkstk_darwin();
  uint64_t v209 = (uint64_t)&v208 - v31;
  __chkstk_darwin();
  uint64_t v33 = (char *)&v208 - v32;
  __chkstk_darwin();
  unint64_t v35 = (char *)&v208 - v34;
  __chkstk_darwin();
  uint64_t v37 = (char *)&v208 - v36;
  __chkstk_darwin();
  uint64_t v39 = (char *)&v208 - v38;
  __chkstk_darwin();
  uint64_t v41 = (char *)&v208 - v40;
  IMAP2Persistence::EngineAndAccountLoggerID v234 = EngineAndAccountLoggerID.init(engine:account:)(*(IMAP2Tracing::EngineLoggerID *)(v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID), a2);
  unint64_t v42 = HIDWORD(*(unint64_t *)&v234);
  if (CommandConnection.RecentErrors.isEmpty.getter(a1))
  {
    uint64_t v43 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    sub_1000079E4(v43, (uint64_t)v13, &qword_100718230);
    uint64_t v44 = sub_1005E0ED0();
    uint64_t v45 = *(void *)(v44 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48))(v13, 1, v44);
    if (result != 1)
    {
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      char v47 = sub_1005E0EB0();
      os_log_type_t v48 = sub_1005E25C0();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = swift_slowAlloc();
        v235[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v49 = 68158210;
        LODWORD(v237) = 2;
        sub_1005E2960();
        *(_WORD *)(v49 + 8) = 256;
        LOBYTE(v237) = v234.engine.id.rawValue;
        sub_1005E2960();
        *(_WORD *)(v49 + 11) = 2082;
        uint64_t v50 = ConnectionID.debugDescription.getter(v42);
        uint64_t v237 = (uint64_t (*)(uint64_t))sub_100507920(v50, v51, v235);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v47, v48, "[%.*hhx-%{public}s] Connection did close.", (uint8_t *)v49, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v13, v44);
    }
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v52 = v42;
  uint64_t v53 = v2;
  uint64_t v54 = swift_bridgeObjectRetain();
  CommandConnection.RecentErrors.Statistics.init(_:)(v54, (uint64_t)v41);
  if (*v41 == 1)
  {
    uint64_t v55 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    uint64_t v56 = (uint64_t)v233;
    sub_1000079E4(v55, (uint64_t)v233, &qword_100718230);
    uint64_t v57 = sub_1005E0ED0();
    Class isa = v57[-1].isa;
    uint64_t result = (*((uint64_t (**)(uint64_t, uint64_t, NSObject *))isa + 6))(v56, 1, v57);
    if (result == 1)
    {
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_100535D6C((uint64_t)v41, (uint64_t)v39, type metadata accessor for CommandConnection.RecentErrors.Statistics);
    sub_100535D6C((uint64_t)v41, (uint64_t)v37, type metadata accessor for CommandConnection.RecentErrors.Statistics);
    unint64_t v59 = sub_1005E0EB0();
    os_log_type_t v60 = sub_1005E25B0();
    int v61 = v60;
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v62 = swift_slowAlloc();
      LODWORD(v231) = v61;
      uint64_t v63 = v62;
      v232 = (uint64_t (**)(uint64_t, uint64_t))swift_slowAlloc();
      v235[0] = (uint64_t)v232;
      *(_DWORD *)uint64_t v63 = 68158722;
      LODWORD(v237) = 2;
      os_log_t v230 = v57;
      sub_1005E2960();
      *(_WORD *)(v63 + 8) = 256;
      LOBYTE(v237) = v234.engine.id.rawValue;
      sub_1005E2960();
      *(_WORD *)(v63 + 11) = 2082;
      uint64_t v64 = ConnectionID.debugDescription.getter(v52);
      uint64_t v216 = v41;
      uint64_t v237 = (uint64_t (*)(uint64_t))sub_100507920(v64, v65, v235);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v63 + 21) = 2048;
      uint64_t v66 = *((void *)v39 + 1);
      sub_100535BF8((uint64_t)v39, type metadata accessor for CommandConnection.RecentErrors.Statistics);
      uint64_t v237 = (uint64_t (*)(uint64_t))v66;
      sub_1005E2960();
      *(_WORD *)(v63 + 31) = 2048;
      uint64_t v67 = *((void *)v37 + 2);
      sub_100535BF8((uint64_t)v37, type metadata accessor for CommandConnection.RecentErrors.Statistics);
      uint64_t v237 = (uint64_t (*)(uint64_t))v67;
      uint64_t v56 = (uint64_t)v233;
      uint64_t v57 = v230;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v231, "[%.*hhx-%{public}s] Connection failed to parse server response. Failed commands: %ld. Network errors: %ld.", (uint8_t *)v63, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v68 = (uint64_t)v216;
    }
    else
    {
      sub_100535BF8((uint64_t)v37, type metadata accessor for CommandConnection.RecentErrors.Statistics);
      sub_100535BF8((uint64_t)v39, type metadata accessor for CommandConnection.RecentErrors.Statistics);

      uint64_t v68 = (uint64_t)v41;
    }
    sub_100535BF8(v68, type metadata accessor for CommandConnection.RecentErrors.Statistics);
    return (*((uint64_t (**)(uint64_t, NSObject *))isa + 1))(v56, v57);
  }
  else if (v41[1] == 1)
  {
    if (*((void *)v41 + 6))
    {
      unint64_t v233 = (uint64_t (*)(uint64_t))v52;
      unint64_t v69 = *((void *)v41 + 4);
      v232 = (uint64_t (**)(uint64_t, uint64_t))*((void *)v41 + 5);
      uint64_t v70 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
      swift_beginAccess();
      unint64_t v71 = (void (*)(void, void, void))v226;
      sub_1000079E4(v70, (uint64_t)v226, &qword_100718230);
      uint64_t v72 = sub_1005E0ED0();
      uint64_t v73 = *(void *)(v72 - 8);
      uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72);
      if (result == 1)
      {
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
      sub_10050CEA4(v69);
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      sub_100535D6C((uint64_t)v41, (uint64_t)v35, type metadata accessor for CommandConnection.RecentErrors.Statistics);
      sub_100535D6C((uint64_t)v41, (uint64_t)v33, type metadata accessor for CommandConnection.RecentErrors.Statistics);
      sub_10050CEA4(v69);
      swift_bridgeObjectRetain();
      sub_10050CEA4(v69);
      swift_bridgeObjectRetain();
      long long v74 = sub_1005E0EB0();
      os_log_type_t v75 = sub_1005E25A0();
      int v76 = v75;
      if (os_log_type_enabled(v74, v75))
      {
        uint64_t v77 = swift_slowAlloc();
        uint64_t v231 = (void (*)(char *, char *, uint64_t))v72;
        uint64_t v78 = v77;
        os_log_t v230 = (os_log_t)swift_slowAlloc();
        v235[0] = (uint64_t)v230;
        *(_DWORD *)uint64_t v78 = 68158978;
        LODWORD(v237) = 2;
        uint64_t v216 = v41;
        sub_1005E2960();
        *(_WORD *)(v78 + 8) = 256;
        LOBYTE(v237) = v234.engine.id.rawValue;
        sub_1005E2960();
        *(_WORD *)(v78 + 11) = 2082;
        uint64_t v79 = ConnectionID.debugDescription.getter(v233);
        *(_DWORD *)&v234.engine.id.rawValue = v76;
        uint64_t v237 = (uint64_t (*)(uint64_t))sub_100507920(v79, v80, v235);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        os_log_t v229 = v74;
        *(_WORD *)(v78 + 21) = 2048;
        uint64_t v81 = *((void *)v35 + 1);
        unint64_t v233 = type metadata accessor for CommandConnection.RecentErrors.Statistics;
        sub_100535BF8((uint64_t)v35, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        uint64_t v237 = (uint64_t (*)(uint64_t))v81;
        unint64_t v71 = (void (*)(void, void, void))v226;
        sub_1005E2960();
        *(_WORD *)(v78 + 31) = 2048;
        uint64_t v82 = *((void *)v33 + 2);
        sub_100535BF8((uint64_t)v33, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        uint64_t v237 = (uint64_t (*)(uint64_t))v82;
        sub_1005E2960();
        *(_WORD *)(v78 + 41) = 2082;
        sub_10050CEA4(v69);
        swift_bridgeObjectRetain();
        ResponseText.debugDescription.getter(v69);
        uint64_t v84 = v83;
        unint64_t v86 = v85;
        sub_100508874(v69);
        swift_bridgeObjectRelease();
        uint64_t v237 = (uint64_t (*)(uint64_t))sub_100507920(v84, v86, v235);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100508874(v69);
        swift_bridgeObjectRelease();
        sub_100508874(v69);
        swift_bridgeObjectRelease();
        os_log_t v87 = v229;
        _os_log_impl((void *)&_mh_execute_header, v229, (os_log_type_t)v234.engine.id.rawValue, "[%.*hhx-%{public}s] Connection failed to authenticate. Failed commands: %ld. Network errors: %ld. '%{public}s'", (uint8_t *)v78, 0x33u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v72 = (uint64_t)v231;
        swift_slowDealloc();

        sub_100508874(v69);
        swift_bridgeObjectRelease();
        uint64_t v88 = (uint64_t)v216;
        uint64_t v89 = v233;
      }
      else
      {
        sub_100535BF8((uint64_t)v33, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        sub_100535BF8((uint64_t)v35, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        sub_100508874(v69);
        swift_bridgeObjectRelease();
        sub_100508874(v69);
        swift_bridgeObjectRelease();
        sub_100508874(v69);

        swift_bridgeObjectRelease();
        uint64_t v88 = (uint64_t)v41;
        uint64_t v89 = type metadata accessor for CommandConnection.RecentErrors.Statistics;
      }
      sub_100535BF8(v88, v89);
      return (*(uint64_t (**)(void (*)(void, void, void), uint64_t))(v73 + 8))(v71, v72);
    }
    else
    {
      sub_1000079E4((uint64_t)&v41[SLODWORD(v222[6].isa)], (uint64_t)v7, &qword_100717E10);
      uint64_t v125 = v228;
      uint64_t v126 = v224;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v228 + 48))(v7, 1, v224) == 1)
      {
        uint64_t v127 = (uint64_t)v41;
        sub_100007A48((uint64_t)v7, &qword_100717E10);
        uint64_t v128 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
        swift_beginAccess();
        uint64_t v129 = (uint64_t)v216;
        sub_1000079E4(v128, (uint64_t)v216, &qword_100718230);
        uint64_t v130 = sub_1005E0ED0();
        uint64_t v131 = *(void *)(v130 - 8);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v129, 1, v130);
        if (result == 1)
        {
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v132 = v127;
        uint64_t v133 = v208;
        sub_100535D6C(v127, v208, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        uint64_t v134 = v210;
        sub_100535D6C(v127, v210, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        Swift::Int v135 = sub_1005E0EB0();
        os_log_type_t v136 = sub_1005E25A0();
        int v137 = v136;
        if (os_log_type_enabled(v135, v136))
        {
          uint64_t v138 = swift_slowAlloc();
          LODWORD(v231) = v137;
          uint64_t v139 = v138;
          v232 = (uint64_t (**)(uint64_t, uint64_t))swift_slowAlloc();
          v235[0] = (uint64_t)v232;
          *(_DWORD *)uint64_t v139 = 68158722;
          LODWORD(v237) = 2;
          unint64_t v233 = (uint64_t (*)(uint64_t))v130;
          sub_1005E2960();
          *(_WORD *)(v139 + 8) = 256;
          LOBYTE(v237) = v234.engine.id.rawValue;
          sub_1005E2960();
          *(_WORD *)(v139 + 11) = 2082;
          uint64_t v140 = ConnectionID.debugDescription.getter(v52);
          uint64_t v237 = (uint64_t (*)(uint64_t))sub_100507920(v140, v141, v235);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v139 + 21) = 2048;
          uint64_t v142 = *(void *)(v133 + 8);
          sub_100535BF8(v133, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          uint64_t v237 = (uint64_t (*)(uint64_t))v142;
          sub_1005E2960();
          *(_WORD *)(v139 + 31) = 2048;
          uint64_t v129 = (uint64_t)v216;
          uint64_t v143 = *(void *)(v134 + 16);
          sub_100535BF8(v134, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          uint64_t v237 = (uint64_t (*)(uint64_t))v143;
          uint64_t v130 = (uint64_t)v233;
          sub_1005E2960();
          _os_log_impl((void *)&_mh_execute_header, v135, (os_log_type_t)v231, "[%.*hhx-%{public}s] Connection failed to authenticate. Failed commands: %ld. Network errors: %ld.", (uint8_t *)v139, 0x29u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_100535BF8(v134, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          sub_100535BF8(v133, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        }

        sub_100535BF8(v132, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v131 + 8))(v129, v130);
      }
      else
      {
        id v163 = v218;
        (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v218, v7, v126);
        uint64_t v164 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
        swift_beginAccess();
        uint64_t v165 = v217;
        sub_1000079E4(v164, v217, &qword_100718230);
        uint64_t v166 = sub_1005E0ED0();
        v232 = *(uint64_t (***)(uint64_t, uint64_t))(v166 - 8);
        unint64_t v233 = (uint64_t (*)(uint64_t))v166;
        uint64_t result = v232[6](v165, 1);
        if (result == 1)
        {
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v167 = v209;
        sub_100535D6C((uint64_t)v41, v209, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        sub_100535D6C((uint64_t)v41, v220, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        uint64_t v168 = v212;
        uint64_t v231 = *(void (**)(char *, char *, uint64_t))(v125 + 16);
        v231(v212, v163, v126);
        v169 = sub_1005E0EB0();
        os_log_type_t v170 = sub_1005E25A0();
        int v171 = v170;
        if (os_log_type_enabled(v169, v170))
        {
          uint64_t v172 = swift_slowAlloc();
          LODWORD(v229) = v171;
          uint64_t v173 = v172;
          uint64_t v227 = swift_slowAlloc();
          os_log_t v230 = (os_log_t)swift_slowAlloc();
          v235[0] = (uint64_t)v230;
          *(_DWORD *)uint64_t v173 = 68158978;
          LODWORD(v237) = 2;
          sub_1005E2960();
          *(_WORD *)(v173 + 8) = 256;
          LOBYTE(v237) = v234.engine.id.rawValue;
          sub_1005E2960();
          *(_WORD *)(v173 + 11) = 2082;
          uint64_t v174 = ConnectionID.debugDescription.getter(v52);
          IMAP2Persistence::EngineAndAccountLoggerID v234 = (IMAP2Persistence::EngineAndAccountLoggerID)v169;
          uint64_t v175 = v126;
          uint64_t v237 = (uint64_t (*)(uint64_t))sub_100507920(v174, v176, v235);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          uint64_t v216 = v41;
          *(_WORD *)(v173 + 21) = 2048;
          uint64_t v177 = *(void *)(v167 + 8);
          sub_100535BF8(v167, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          uint64_t v237 = (uint64_t (*)(uint64_t))v177;
          sub_1005E2960();
          *(_WORD *)(v173 + 31) = 2048;
          uint64_t v178 = *(void *)(v220 + 16);
          sub_100535BF8(v220, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          uint64_t v237 = (uint64_t (*)(uint64_t))v178;
          uint64_t v165 = v217;
          sub_1005E2960();
          *(_WORD *)(v173 + 41) = 2112;
          sub_100535B40();
          swift_allocError();
          v231(v179, v168, v126);
          uint64_t v180 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v237 = (uint64_t (*)(uint64_t))v180;
          sub_1005E2960();
          uint64_t v181 = v228;
          *(void *)uint64_t v227 = v180;
          Swift::String v182 = *(void (**)(char *, uint64_t))(v181 + 8);
          v182(v168, v126);
          os_log_t v183 = (os_log_t)v234;
          _os_log_impl((void *)&_mh_execute_header, *(os_log_t *)&v234, (os_log_type_t)v229, "[%.*hhx-%{public}s] Connection failed to authenticate. Failed commands: %ld. Network errors: %ld. %@", (uint8_t *)v173, 0x33u);
          sub_10000566C(&qword_1007186A0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v182(v218, v175);
          uint64_t v184 = (uint64_t)v216;
        }
        else
        {
          sub_100535BF8(v220, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          sub_100535BF8(v167, type metadata accessor for CommandConnection.RecentErrors.Statistics);

          uint64_t v206 = *(void (**)(char *, uint64_t))(v228 + 8);
          v206(v168, v126);
          v206(v163, v126);
          uint64_t v184 = (uint64_t)v41;
        }
        sub_100535BF8(v184, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        return v232[1](v165, (uint64_t)v233);
      }
    }
  }
  else
  {
    os_log_t v90 = v230;
    uint64_t v91 = (char *)v231;
    uint64_t v92 = v2;
    uint64_t v93 = (uint64_t)v232;
    if (v41[2] == 1)
    {
      unint64_t v233 = (uint64_t (*)(uint64_t))v52;
      uint64_t v94 = v2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
      swift_beginAccess();
      uint64_t v95 = v223;
      sub_1000079E4(v94, (uint64_t)v223, &qword_100718230);
      uint64_t v96 = sub_1005E0ED0();
      uint64_t v97 = *(void *)(v96 - 8);
      uint64_t result = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96);
      if (result == 1)
      {
LABEL_56:
        __break(1u);
        goto LABEL_57;
      }
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v98 = sub_1005E0EB0();
      os_log_type_t v99 = sub_1005E25A0();
      if (os_log_type_enabled(v98, v99))
      {
        uint64_t v100 = swift_slowAlloc();
        uint64_t v226 = (uint64_t *)swift_slowAlloc();
        uint64_t v238 = (void (*)(void, void, void))v226;
        *(_DWORD *)uint64_t v100 = 68158210;
        LODWORD(v237) = 2;
        uint64_t v216 = v41;
        sub_1005E2960();
        *(_WORD *)(v100 + 8) = 256;
        LOBYTE(v237) = v234.engine.id.rawValue;
        sub_1005E2960();
        *(_WORD *)(v100 + 11) = 2082;
        uint64_t v101 = ConnectionID.debugDescription.getter(v233);
        uint64_t v237 = (uint64_t (*)(uint64_t))sub_100507920(v101, v102, (uint64_t *)&v238);
        uint64_t v41 = v216;
        uint64_t v95 = v223;
        uint64_t v92 = v53;
        sub_1005E2960();
        uint64_t v91 = (char *)v231;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v98, v99, "[%.*hhx-%{public}s] Server is temporarily unavailable.", (uint8_t *)v100, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        os_log_t v90 = v230;
        swift_slowDealloc();
      }

      uint64_t v93 = (uint64_t)v232;
      (*(void (**)(void *, uint64_t))(v97 + 8))(v95, v96);
      uint64_t v52 = (uint64_t)v233;
    }
    os_log_t v103 = v229;
    if (*((void *)v41 + 6))
    {
      unint64_t v104 = *((void *)v41 + 4);
      unint64_t v233 = (uint64_t (*)(uint64_t))*((void *)v41 + 5);
      uint64_t v105 = v92 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
      swift_beginAccess();
      uint64_t v106 = v227;
      sub_1000079E4(v105, v227, &qword_100718230);
      uint64_t v107 = sub_1005E0ED0();
      Class v108 = v107[-1].isa;
      uint64_t result = (*((uint64_t (**)(uint64_t, uint64_t, NSObject *))v108 + 6))(v106, 1, v107);
      if (result == 1)
      {
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      uint64_t v109 = v52;
      sub_10050CEA4(v104);
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v110 = v221;
      sub_100535D6C((uint64_t)v41, v221, type metadata accessor for CommandConnection.RecentErrors.Statistics);
      uint64_t v111 = v225;
      sub_100535D6C((uint64_t)v41, v225, type metadata accessor for CommandConnection.RecentErrors.Statistics);
      sub_10050CEA4(v104);
      swift_bridgeObjectRetain();
      sub_10050CEA4(v104);
      swift_bridgeObjectRetain();
      uint64_t v112 = sub_1005E0EB0();
      os_log_type_t v113 = sub_1005E25A0();
      LODWORD(v232) = v113;
      if (os_log_type_enabled(v112, v113))
      {
        uint64_t v114 = swift_slowAlloc();
        uint64_t v231 = (void (*)(char *, char *, uint64_t))swift_slowAlloc();
        uint64_t v237 = (uint64_t (*)(uint64_t))v231;
        *(_DWORD *)uint64_t v114 = 68158978;
        LODWORD(v236) = 2;
        os_log_t v230 = v112;
        sub_1005E2960();
        *(_WORD *)(v114 + 8) = 256;
        LOBYTE(v236) = v234.engine.id.rawValue;
        sub_1005E2960();
        *(_WORD *)(v114 + 11) = 2082;
        IMAP2Persistence::EngineAndAccountLoggerID v234 = (IMAP2Persistence::EngineAndAccountLoggerID)v107;
        uint64_t v115 = ConnectionID.debugDescription.getter(v109);
        uint64_t v236 = sub_100507920(v115, v116, (uint64_t *)&v237);
        uint64_t v216 = v41;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v114 + 21) = 2048;
        uint64_t v117 = *(void *)(v110 + 8);
        sub_100535BF8(v110, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        uint64_t v236 = v117;
        sub_1005E2960();
        *(_WORD *)(v114 + 31) = 2048;
        uint64_t v118 = *(void *)(v225 + 16);
        sub_100535BF8(v225, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        uint64_t v236 = v118;
        sub_1005E2960();
        *(_WORD *)(v114 + 41) = 2082;
        sub_10050CEA4(v104);
        swift_bridgeObjectRetain();
        ResponseText.debugDescription.getter(v104);
        uint64_t v120 = v119;
        unint64_t v122 = v121;
        sub_100508874(v104);
        swift_bridgeObjectRelease();
        uint64_t v236 = sub_100507920(v120, v122, (uint64_t *)&v237);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100508874(v104);
        swift_bridgeObjectRelease();
        sub_100508874(v104);
        swift_bridgeObjectRelease();
        os_log_t v123 = v230;
        _os_log_impl((void *)&_mh_execute_header, v230, (os_log_type_t)v232, "[%.*hhx-%{public}s] Connection failed. Failed commands: %ld. Network errors: %ld. '%{public}s'", (uint8_t *)v114, 0x33u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_100508874(v104);
        swift_bridgeObjectRelease();
        uint64_t v124 = (uint64_t)v216;
        uint64_t v107 = v234;
        uint64_t v106 = v227;
      }
      else
      {
        sub_100535BF8(v111, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        sub_100535BF8(v110, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        sub_100508874(v104);
        swift_bridgeObjectRelease();
        sub_100508874(v104);
        swift_bridgeObjectRelease();
        sub_100508874(v104);

        swift_bridgeObjectRelease();
        uint64_t v124 = (uint64_t)v41;
      }
      sub_100535BF8(v124, type metadata accessor for CommandConnection.RecentErrors.Statistics);
      return (*((uint64_t (**)(uint64_t, NSObject *))v108 + 1))(v106, v107);
    }
    else
    {
      sub_1000079E4((uint64_t)&v41[SLODWORD(v222[6].isa)], v93, &qword_100717E10);
      uint64_t v144 = v228;
      uint64_t v145 = v224;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v228 + 48))(v93, 1, v224) == 1)
      {
        uint64_t v146 = v52;
        sub_100007A48(v93, &qword_100717E10);
        uint64_t v147 = v92 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
        swift_beginAccess();
        uint64_t v148 = v219;
        sub_1000079E4(v147, v219, &qword_100718230);
        uint64_t v149 = sub_1005E0ED0();
        Class v150 = v149[-1].isa;
        uint64_t result = (*((uint64_t (**)(uint64_t, uint64_t, NSObject *))v150 + 6))(v148, 1, v149);
        if (result == 1)
        {
LABEL_58:
          __break(1u);
          goto LABEL_59;
        }
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v151 = v211;
        sub_100535D6C((uint64_t)v41, v211, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        uint64_t v152 = v214;
        sub_100535D6C((uint64_t)v41, v214, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        uint64_t v153 = sub_1005E0EB0();
        os_log_type_t v154 = sub_1005E25A0();
        int v155 = v154;
        if (os_log_type_enabled(v153, v154))
        {
          uint64_t v156 = swift_slowAlloc();
          LODWORD(v232) = v155;
          uint64_t v157 = v156;
          unint64_t v233 = (uint64_t (*)(uint64_t))swift_slowAlloc();
          uint64_t v237 = v233;
          *(_DWORD *)uint64_t v157 = 68158722;
          LODWORD(v236) = 2;
          sub_1005E2960();
          *(_WORD *)(v157 + 8) = 256;
          LOBYTE(v236) = v234.engine.id.rawValue;
          sub_1005E2960();
          *(_WORD *)(v157 + 11) = 2082;
          IMAP2Persistence::EngineAndAccountLoggerID v234 = (IMAP2Persistence::EngineAndAccountLoggerID)v149;
          uint64_t v158 = ConnectionID.debugDescription.getter(v146);
          uint64_t v236 = sub_100507920(v158, v159, (uint64_t *)&v237);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          uint64_t v216 = v41;
          *(_WORD *)(v157 + 21) = 2048;
          uint64_t v160 = *(void *)(v151 + 8);
          sub_100535BF8(v151, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          uint64_t v236 = v160;
          sub_1005E2960();
          *(_WORD *)(v157 + 31) = 2048;
          uint64_t v161 = *(void *)(v152 + 16);
          uint64_t v149 = v234;
          sub_100535BF8(v152, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          uint64_t v236 = v161;
          uint64_t v148 = v219;
          sub_1005E2960();
          _os_log_impl((void *)&_mh_execute_header, v153, (os_log_type_t)v232, "[%.*hhx-%{public}s] Connection failed. Failed commands: %ld. Network errors: %ld.", (uint8_t *)v157, 0x29u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v162 = (uint64_t)v216;
        }
        else
        {
          sub_100535BF8(v152, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          sub_100535BF8(v151, type metadata accessor for CommandConnection.RecentErrors.Statistics);

          uint64_t v162 = (uint64_t)v41;
        }
        sub_100535BF8(v162, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        return (*((uint64_t (**)(uint64_t, NSObject *))v150 + 1))(v148, v149);
      }
      else
      {
        unint64_t v233 = (uint64_t (*)(uint64_t))v52;
        (*(void (**)(char *, uint64_t, uint64_t))(v144 + 32))(v91, v93, v145);
        uint64_t v185 = v144;
        uint64_t v186 = v92 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
        swift_beginAccess();
        sub_1000079E4(v186, (uint64_t)v103, &qword_100718230);
        uint64_t v187 = sub_1005E0ED0();
        uint64_t v227 = *(void *)(v187 - 8);
        Swift::String v188 = *(uint64_t (**)(os_log_t, uint64_t))(v227 + 48);
        v232 = (uint64_t (**)(uint64_t, uint64_t))v187;
        uint64_t result = v188(v103, 1);
        if (result == 1)
        {
LABEL_60:
          __break(1u);
          return result;
        }
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v189 = v213;
        sub_100535D6C((uint64_t)v41, v213, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        uint64_t v190 = v215;
        sub_100535D6C((uint64_t)v41, v215, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        uint64_t v226 = *(uint64_t **)(v185 + 16);
        ((void (*)(os_log_t, char *, uint64_t))v226)(v90, v91, v145);
        uint64_t v191 = sub_1005E0EB0();
        os_log_type_t v192 = sub_1005E25A0();
        int v193 = v192;
        if (os_log_type_enabled(v191, v192))
        {
          uint64_t v194 = swift_slowAlloc();
          uint64_t v223 = (void *)swift_slowAlloc();
          uint64_t v225 = swift_slowAlloc();
          uint64_t v237 = (uint64_t (*)(uint64_t))v225;
          *(_DWORD *)uint64_t v194 = 68158978;
          LODWORD(v236) = 2;
          os_log_t v222 = v191;
          uint64_t v195 = v190;
          sub_1005E2960();
          *(_WORD *)(v194 + 8) = 256;
          LOBYTE(v236) = v234.engine.id.rawValue;
          sub_1005E2960();
          *(_WORD *)(v194 + 11) = 2082;
          uint64_t v196 = ConnectionID.debugDescription.getter(v233);
          *(_DWORD *)&v234.engine.id.rawValue = v193;
          uint64_t v236 = sub_100507920(v196, v197, (uint64_t *)&v237);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          uint64_t v216 = v41;
          *(_WORD *)(v194 + 21) = 2048;
          uint64_t v198 = *(void *)(v189 + 8);
          sub_100535BF8(v189, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          uint64_t v236 = v198;
          sub_1005E2960();
          *(_WORD *)(v194 + 31) = 2048;
          uint64_t v199 = *(void *)(v195 + 16);
          sub_100535BF8(v195, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          uint64_t v236 = v199;
          sub_1005E2960();
          *(_WORD *)(v194 + 41) = 2112;
          sub_100535B40();
          swift_allocError();
          os_log_t v200 = v230;
          ((void (*)(uint64_t, os_log_t, uint64_t))v226)(v201, v230, v145);
          uint64_t v202 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v236 = v202;
          sub_1005E2960();
          *uint64_t v223 = v202;
          v203 = *(void (**)(os_log_t, uint64_t))(v228 + 8);
          v203(v200, v145);
          os_log_t v204 = v222;
          _os_log_impl((void *)&_mh_execute_header, v222, (os_log_type_t)v234.engine.id.rawValue, "[%.*hhx-%{public}s] Connection failed. Failed commands: %ld. Network errors: %ld. %@", (uint8_t *)v194, 0x33u);
          sub_10000566C(&qword_1007186A0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v203((os_log_t)v231, v145);
          uint64_t v205 = (uint64_t)v216;
        }
        else
        {
          sub_100535BF8(v190, type metadata accessor for CommandConnection.RecentErrors.Statistics);
          sub_100535BF8(v189, type metadata accessor for CommandConnection.RecentErrors.Statistics);

          uint64_t v207 = *(void (**)(os_log_t, uint64_t))(v228 + 8);
          v207(v90, v145);
          v207((os_log_t)v91, v145);
          uint64_t v205 = (uint64_t)v41;
        }
        sub_100535BF8(v205, type metadata accessor for CommandConnection.RecentErrors.Statistics);
        return (*(uint64_t (**)(os_log_t, char *))(v227 + 8))(v229, (char *)v232);
      }
    }
  }
}

uint64_t sub_100530CA0(uint64_t *a1, int a2, uint64_t a3, uint64_t a4)
{
  sub_10001FDF0(a3, (uint64_t)v100, &qword_1007186A8);
  uint64_t v109 = v100[0];
  uint64_t v89 = v100[1];
  uint64_t v90 = v100[3];
  uint64_t v94 = v100[2];
  uint64_t v95 = v100[5];
  uint64_t v91 = v100[4];
  uint64_t v92 = v100[6];
  uint64_t v93 = v100[7];
  int v87 = v101 | (v102 << 16);
  uint64_t v88 = v100[8];
  sub_10000566C(&qword_100718230);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v77 - v10;
  __chkstk_darwin();
  uint64_t v85 = (uint64_t)&v77 - v12;
  uint64_t v13 = __chkstk_darwin();
  uint64_t v15 = (char *)&v77 - v14;
  uint64_t v16 = *a1;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)*a1 + 576))(v13);
  uint64_t v18 = v17;
  LODWORD(v84) = v19;
  uint64_t v86 = OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id;
  if (*(_DWORD *)(v16 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != a2)
  {
    uint64_t v20 = v109;
    if (v17)
    {
      uint64_t v40 = v17;
      uint64_t v41 = a4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
      swift_beginAccess();
      sub_1000079E4(v41, (uint64_t)v15, &qword_100718230);
      uint64_t v42 = sub_1005E0ED0();
      uint64_t v83 = *(void *)(v42 - 8);
      uint64_t v43 = *(uint64_t (**)(char *, uint64_t))(v83 + 48);
      uint64_t v85 = v42;
      uint64_t result = v43(v15, 1);
      if (result != 1)
      {
        swift_retain_n();
        sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A898);
        uint64_t v44 = v40;
        swift_bridgeObjectRetain();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        swift_retain_n();
        swift_bridgeObjectRetain();
        uint64_t v45 = sub_1005E0EB0();
        os_log_type_t v46 = sub_1005E2580();
        int v47 = v46;
        if (os_log_type_enabled(v45, v46))
        {
          uint64_t v48 = swift_slowAlloc();
          LODWORD(v82) = v47;
          uint64_t v49 = v48;
          uint64_t v81 = swift_slowAlloc();
          v99[0] = v81;
          *(_DWORD *)uint64_t v49 = 68158723;
          LODWORD(v103[0]) = 2;
          sub_1005E2960();
          *(_WORD *)(v49 + 8) = 256;
          char v50 = *(unsigned char *)(a4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
          swift_release();
          LOBYTE(v103[0]) = v50;
          sub_1005E2960();
          swift_release();
          *(_WORD *)(v49 + 11) = 2082;
          uint64_t v51 = ConnectionID.debugDescription.getter(*(unsigned int *)(v16 + v86));
          *(void *)&v103[0] = sub_100507920(v51, v52, v99);
          sub_1005E2960();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v49 + 21) = 2160;
          *(void *)&v103[0] = 0x786F626C69616DLL;
          sub_1005E2960();
          *(_WORD *)(v49 + 31) = 2085;
          *(void *)&v103[0] = v44;
          DWORD2(v103[0]) = v84;
          swift_bridgeObjectRetain();
          uint64_t v53 = sub_1005E1CC0();
          *(void *)&v103[0] = sub_100507920(v53, v54, v99);
          sub_1005E2960();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v82, "[%.*hhx] %{public}s: '%{sensitive,mask.mailbox}s'", (uint8_t *)v49, 0x29u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          swift_bridgeObjectRelease();

          sub_10002A7F4(v109);
        }
        else
        {
          swift_bridgeObjectRelease();

          swift_release();
          sub_10002A7F4(v20);
          swift_bridgeObjectRelease_n();
          swift_release_n();
          swift_release();
        }
        return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v15, v85);
      }
      __break(1u);
      goto LABEL_32;
    }
LABEL_17:
    sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A898);
    swift_bridgeObjectRelease();
    sub_10002A7F4(v20);
    uint64_t v55 = a4;
    uint64_t v56 = a4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    sub_1000079E4(v56, (uint64_t)v9, &qword_100718230);
    uint64_t v57 = sub_1005E0ED0();
    uint64_t v58 = *(void *)(v57 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48))(v9, 1, v57);
    if (result != 1)
    {
      swift_retain_n();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_retain_n();
      unint64_t v59 = sub_1005E0EB0();
      os_log_type_t v60 = sub_1005E25C0();
      int v61 = v60;
      if (os_log_type_enabled(v59, v60))
      {
        uint64_t v62 = swift_slowAlloc();
        LODWORD(v94) = v61;
        uint64_t v63 = v62;
        uint64_t v95 = swift_slowAlloc();
        uint64_t v96 = v95;
        *(_DWORD *)uint64_t v63 = 68158210;
        LODWORD(v98) = 2;
        sub_1005E2960();
        *(_WORD *)(v63 + 8) = 256;
        uint64_t v109 = v57;
        char v64 = *(unsigned char *)(v55 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
        swift_release();
        LOBYTE(v98) = v64;
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v63 + 11) = 2082;
        uint64_t v65 = ConnectionID.debugDescription.getter(*(unsigned int *)(v16 + v86));
        uint64_t v98 = sub_100507920(v65, v66, &v96);
        uint64_t v57 = v109;
        sub_1005E2960();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v94, "[%.*hhx] %{public}s: -", (uint8_t *)v63, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();

        swift_release_n();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v9, v57);
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  sub_10001FDF0(a3, (uint64_t)v103, &qword_1007186A8);
  if (!*(void *)&v103[0])
  {
    uint64_t v83 = v18;
    uint64_t v67 = a4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    sub_1000079E4(v67, (uint64_t)v11, &qword_100718230);
    uint64_t v68 = sub_1005E0ED0();
    uint64_t v69 = *(void *)(v68 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48))(v11, 1, v68);
    if (result != 1)
    {
      swift_retain_n();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_retain_n();
      uint64_t v70 = sub_1005E0EB0();
      os_log_type_t v71 = sub_1005E25C0();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = swift_slowAlloc();
        uint64_t v84 = v69;
        uint64_t v73 = v72;
        uint64_t v82 = swift_slowAlloc();
        v99[0] = v82;
        *(_DWORD *)uint64_t v73 = 68158210;
        LODWORD(v96) = 2;
        sub_1005E2960();
        *(_WORD *)(v73 + 8) = 256;
        uint64_t v85 = v68;
        char v74 = *(unsigned char *)(a4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
        swift_release();
        LOBYTE(v96) = v74;
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v73 + 11) = 2082;
        uint64_t v75 = ConnectionID.debugDescription.getter(*(unsigned int *)(v16 + v86));
        uint64_t v96 = sub_100507920(v75, v76, v99);
        uint64_t v68 = v85;
        sub_1005E2960();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v70, v71, "[%.*hhx] %{public}s: - *", (uint8_t *)v73, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v69 = v84;
        swift_slowDealloc();

        swift_bridgeObjectRelease();
        sub_10002A7F4(v109);
      }
      else
      {

        swift_release();
        swift_bridgeObjectRelease();
        sub_10002A7F4(v109);
        swift_release_n();
        swift_release();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v11, v68);
    }
LABEL_34:
    __break(1u);
    return result;
  }
  long long v107 = v103[2];
  *(_OWORD *)Class v108 = v104[0];
  *(_OWORD *)&v108[11] = *(_OWORD *)((char *)v104 + 11);
  long long v105 = v103[0];
  long long v106 = v103[1];
  uint64_t v20 = v109;
  if (!v18) {
    goto LABEL_17;
  }
  uint64_t v21 = v109;
  uint64_t v22 = v18;
  uint64_t v23 = a4 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  uint64_t v24 = v85;
  sub_1000079E4(v23, v85, &qword_100718230);
  uint64_t v25 = sub_1005E0ED0();
  uint64_t v81 = *(void *)(v25 - 8);
  uint64_t v82 = v25;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v81 + 48))(v24, 1);
  if (result == 1)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  swift_retain();
  sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A898);
  swift_retain();
  sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A898);
  swift_bridgeObjectRetain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A898);
  sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A898);
  sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A898);
  sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A898);
  sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A898);
  sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A898);
  sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A898);
  swift_retain();
  sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A898);
  uint64_t v83 = v22;
  swift_bridgeObjectRetain();
  swift_retain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v80 = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1005E0EB0();
  os_log_type_t v28 = sub_1005E25C0();
  int v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v30 = swift_slowAlloc();
    int v79 = v29;
    uint64_t v31 = v30;
    uint64_t v78 = swift_slowAlloc();
    uint64_t v98 = v78;
    *(_DWORD *)uint64_t v31 = 68160003;
    LODWORD(v96) = 2;
    sub_1005E2960();
    *(_WORD *)(v31 + 8) = 256;
    char v32 = *(unsigned char *)(v80 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    swift_release();
    LOBYTE(v96) = v32;
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v31 + 11) = 2082;
    uint64_t v33 = ConnectionID.debugDescription.getter(*(unsigned int *)(v16 + v86));
    uint64_t v96 = sub_100507920(v33, v34, &v98);
    sub_1005E2960();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 21) = 2160;
    uint64_t v96 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v31 + 31) = 2085;
    uint64_t v96 = v83;
    int v97 = v84;
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1005E1CC0();
    uint64_t v96 = sub_100507920(v35, v36, &v98);
    sub_1005E2960();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 41) = 2048;
    sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A7F4);
    uint64_t v96 = *((void *)&v106 + 1);
    sub_1005E2960();
    sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A7F4);
    *(_WORD *)(v31 + 51) = 1024;
    sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A7F4);
    int v37 = v107;
    if (BYTE4(v107)) {
      int v37 = 0;
    }
    LODWORD(v96) = v37;
    sub_1005E2960();
    sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A7F4);
    *(_WORD *)(v31 + 57) = 1024;
    sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A7F4);
    int v38 = *(_DWORD *)v108;
    if (v108[4]) {
      int v38 = 0;
    }
    LODWORD(v96) = v38;
    sub_1005E2960();
    sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A7F4);
    *(_WORD *)(v31 + 63) = 1024;
    sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A7F4);
    int v39 = *(_DWORD *)&v108[8];
    if (v108[12]) {
      int v39 = 0;
    }
    LODWORD(v96) = v39;
    sub_1005E2960();
    sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A7F4);
    *(_WORD *)(v31 + 69) = 1024;
    sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A7F4);
    LODWORD(v96) = v108[26] & 1;
    sub_1005E2960();
    sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A7F4);
    _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v79, "[%.*hhx] %{public}s: '%{sensitive,mask.mailbox}s' * messageCount %ld, firstUnseenMessage %u, nextUID %u, uidValidity 0x%x, isReadOnly %{BOOL}d", (uint8_t *)v31, 0x4Bu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_bridgeObjectRelease();

    sub_10002A7F4(v109);
  }
  else
  {
    sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A7F4);
    sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A7F4);
    swift_bridgeObjectRelease();

    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_10002A7F4(v21);
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_release();
    sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A7F4);
    sub_100535B98(a3, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_10002A7F4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100060FFC((uint64_t)&v105);
    sub_100060FFC((uint64_t)&v105);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v81 + 8))(v85, v82);
}

uint64_t sub_100531EA0(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a2();
    return swift_release();
  }
  return result;
}

int64_t sub_100531F00()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_100718230);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E1850();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  id v10 = v9;
  LOBYTE(v9) = sub_1005E1860();
  int64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v12 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_backoff;
  swift_beginAccess();
  if (*(unsigned char *)(v12 + 16)) {
    return sub_10052A5DC();
  }
  uint64_t v13 = *(void *)(v12 + 8);
  int64_t result = static MonotonicTime.now()();
  BOOL v14 = __OFSUB__(v13, result);
  uint64_t v15 = v13 - result;
  if (v13 >= result)
  {
LABEL_8:
    if (!v14) {
      goto LABEL_9;
    }
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  if (__OFSUB__(result, v13))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  BOOL v14 = __OFSUB__(0, result - v13);
  uint64_t v15 = v13 - result;
  if (v14)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  double v16 = (double)v15 / 1000000000.0;
  if (v16 < 0.0) {
    return sub_10052A5DC();
  }
  uint64_t v17 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1000079E4(v17, (uint64_t)v4, &qword_100718230);
  uint64_t v18 = sub_1005E0ED0();
  uint64_t v19 = *(void *)(v18 - 8);
  int64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v4, 1, v18);
  if (result == 1) {
    goto LABEL_19;
  }
  swift_retain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v20 = sub_1005E0EB0();
  os_log_type_t v21 = sub_1005E25A0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 68158208;
    LODWORD(v25) = 2;
    sub_1005E2960();
    *(_WORD *)(v22 + 8) = 256;
    LOBYTE(v25) = *(unsigned char *)(v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v22 + 11) = 2048;
    double v25 = v16;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "[%.*hhx] Backoff timer expired, but we still have to wait %f seconds.", (uint8_t *)v22, 0x15u);
    swift_slowDealloc();
  }
  else
  {
    swift_release();
  }

  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v4, v18);
  return sub_100529EC8(v23);
}

uint64_t sub_1005322B0(uint64_t a1)
{
  uint64_t v17 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v17);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections;
  swift_beginAccess();
  if (*(void *)v5 >> 62) {
    goto LABEL_28;
  }
  if (*(void *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    do
    {
      uint64_t v6 = *(void *)v5;
      if (*(void *)v5 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v7 = sub_1005E2FB0();
        if (!v7)
        {
LABEL_20:
          swift_bridgeObjectRelease();
          return 1;
        }
      }
      else
      {
        uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v7) {
          goto LABEL_20;
        }
      }
      uint64_t v8 = 4;
      while (1)
      {
        uint64_t v9 = v8 - 4;
        if ((v6 & 0xC000000000000001) == 0) {
          break;
        }
        uint64_t v5 = sub_1005E2CF0();
        uint64_t v10 = v8 - 3;
        if (__OFADD__(v9, 1)) {
          goto LABEL_24;
        }
LABEL_11:
        (*(void (**)(void))(*(void *)v5 + 296))();
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          swift_release();
          swift_bridgeObjectRelease();
          memcpy(v18, v4, 0x15AuLL);
          sub_100508504((uint64_t)v18);
          return 0;
        }
        uint64_t v11 = sub_100535BF8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
        uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 408))(v11);
        swift_release();
        if (v12 <= a1)
        {
          uint64_t v13 = a1 - v12;
          if (__OFSUB__(a1, v12)) {
            goto LABEL_27;
          }
        }
        else
        {
          if (__OFSUB__(v12, a1)) {
            goto LABEL_25;
          }
          uint64_t v13 = a1 - v12;
          if (__OFSUB__(0, v12 - a1)) {
            goto LABEL_26;
          }
        }
        if ((double)v13 / 1000000000.0 < 60.0)
        {
          swift_bridgeObjectRelease();
          return 0;
        }
        ++v8;
        if (v10 == v7) {
          goto LABEL_20;
        }
      }
      uint64_t v5 = *(void *)(v6 + 8 * v8);
      swift_retain();
      uint64_t v10 = v8 - 3;
      if (!__OFADD__(v9, 1)) {
        goto LABEL_11;
      }
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1005E2FB0();
      swift_bridgeObjectRelease();
    }
    while (v15);
  }
  return 0;
}

unint64_t sub_100532578()
{
  unint64_t result = 0x656D614E676F6CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x4449656E69676E65;
      break;
    case 2:
      unint64_t result = 0x697463656E6E6F63;
      break;
    case 3:
      unint64_t result = 0x6F7272457473616CLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100532634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005364B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10053265C(uint64_t a1)
{
  unint64_t v2 = sub_100536188();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100532698(uint64_t a1)
{
  unint64_t v2 = sub_100536188();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005326D4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000566C(&qword_1007186E0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003BCDC(a1, a1[3]);
  sub_100536188();
  sub_1005E3500();
  char v13 = 0;
  sub_1005E3190();
  if (!v2)
  {
    char v12 = 1;
    sub_1005E3190();
    uint64_t v11 = *(void *)(v3 + 32);
    v10[15] = 2;
    sub_10000566C(&qword_1007186F0);
    sub_1005361DC();
    sub_1005E31C0();
    v10[14] = 3;
    sub_1005E3130();
    v10[13] = 4;
    sub_1005E3190();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1005328D0(void *a1)
{
  return sub_1005326D4(a1);
}

uint64_t sub_1005328E8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100532A78(a1, a2, a3, a4, &qword_100718680, (uint64_t (*)(void))&type metadata accessor for NWError, (uint64_t (*)(void))&type metadata accessor for NWError);
}

void *sub_10053291C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100718688);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      char v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      char v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1005345E0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100532A44(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100532A78(a1, a2, a3, a4, &qword_100718690, type metadata accessor for ConnectionStatus.Error, type metadata accessor for ConnectionStatus.Error);
}

uint64_t sub_100532A78(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000566C(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1005E2F10();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  _OWORD v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100534C14(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_100532CF8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100532F40(a1, a2, a3, a4, &qword_1007186C8);
}

void *sub_100532D0C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100718668);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001B63C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100532E1C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100718248);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= (void *)((char *)a4 + 4 * v8 + 32)) {
          memmove(v13, a4 + 4, 4 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001EE8C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100532F2C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100532F40(a1, a2, a3, a4, &qword_100718240);
}

void *sub_100532F40(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_10000566C(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v14 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4]) {
          memmove(v14, a4 + 4, 8 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100534D70(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_10053305C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_1007186B0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      int64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1004D37F4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100533180()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_100718660);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    unint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      Swift::UInt32 v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
      sub_1005E33F0();
      sub_1005E3440(v18);
      uint64_t result = sub_1005E3470();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

void *sub_10053342C()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_100718398);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    LODWORD(v17) = *(_DWORD *)(v17 + 8);
    uint64_t v19 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v19 = v18;
    *(_DWORD *)(v19 + 8) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005335E8()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_100718660);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v15) = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100533780()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_100718660);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    Swift::UInt32 v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
    sub_1005E33F0();
    sub_1005E3440(v18);
    uint64_t result = sub_1005E3470();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005339FC(_DWORD *a1, Swift::Int a2)
{
  uint64_t v5 = *v2;
  sub_1005E33F0();
  sub_1005E3440(a2);
  Swift::Int v6 = sub_1005E3470();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_100533B1C(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(_DWORD *)(v9 + 4 * v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(_DWORD *)(v9 + 4 * v8) != a2);
  }
  uint64_t result = 0;
  LODWORD(a2) = *(_DWORD *)(*(void *)(*v2 + 48) + 4 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

Swift::Int sub_100533B1C(Swift::Int result, unint64_t a2, char a3)
{
  Swift::UInt32 v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_100533180();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_1005335E8();
      goto LABEL_14;
    }
    sub_100533780();
  }
  uint64_t v8 = *v3;
  sub_1005E33F0();
  sub_1005E3440(v5);
  uint64_t result = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1005E3370();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(_DWORD *)(v10 + 4 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(void *)(v12 + 48) + 4 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_100533C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a1;
  uint64_t v3 = type metadata accessor for ConnectionConfiguration();
  __chkstk_darwin(v3 - 8);
  uint64_t v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_nextConnectionID;
  Swift::UInt32 v5 = *(_DWORD *)(a2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_nextConnectionID);
  unint64_t v6 = (unint64_t *)(a2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_connections);
  swift_beginAccess();
  while (1)
  {
    unint64_t v7 = *v6;
    if (*v6 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v8 = sub_1005E2FB0();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v8) {
        goto LABEL_33;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (!v8) {
        goto LABEL_33;
      }
    }
    if ((v7 & 0xC000000000000001) != 0) {
      break;
    }
    if (*(_DWORD *)(*(void *)(v7 + 32) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != v5)
    {
      if (v8 == 1) {
        goto LABEL_33;
      }
      if (*(_DWORD *)(*(void *)(v7 + 40) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != v5)
      {
        if (v8 == 2) {
          goto LABEL_33;
        }
        if (*(_DWORD *)(*(void *)(v7 + 48) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != v5)
        {
          if (v8 == 3) {
            goto LABEL_33;
          }
          if (*(_DWORD *)(*(void *)(v7 + 56) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) != v5) {
            goto LABEL_13;
          }
        }
      }
    }
LABEL_2:
    swift_bridgeObjectRelease_n();
    ++v5;
  }
  int v14 = *(_DWORD *)(sub_1005E2CF0() + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
  swift_unknownObjectRelease();
  if (v14 == v5) {
    goto LABEL_2;
  }
  if (v8 == 1) {
    goto LABEL_33;
  }
  int v15 = *(_DWORD *)(sub_1005E2CF0() + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
  swift_unknownObjectRelease();
  if (v15 == v5) {
    goto LABEL_2;
  }
  if (v8 == 2) {
    goto LABEL_33;
  }
  int v16 = *(_DWORD *)(sub_1005E2CF0() + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
  swift_unknownObjectRelease();
  if (v16 == v5) {
    goto LABEL_2;
  }
  if (v8 == 3) {
    goto LABEL_33;
  }
  int v17 = *(_DWORD *)(sub_1005E2CF0() + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
  uint64_t result = swift_unknownObjectRelease();
  if (v17 == v5) {
    goto LABEL_2;
  }
LABEL_13:
  if (v8 == 4)
  {
LABEL_33:
    swift_bridgeObjectRelease_n();
    uint64_t v18 = (uint64_t)v25;
    *(_DWORD *)(a2 + v24) = v5 + 1;
    int v19 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    sub_100535D6C(a2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_configuration, v18, (uint64_t (*)(void))type metadata accessor for ConnectionConfiguration);
    unint64_t v20 = *(void **)(a2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_queue);
    uint64_t v21 = *(void *)(a2 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_dataTransferReportAccumulator);
    swift_retain();
    id v22 = v20;
    uint64_t v23 = v26;
    swift_retain();
    swift_retain();
    return sub_100533FF0(v5, v19, v18, (uint64_t)sub_100535A78, a2, v22, v23, (uint64_t)sub_100535A7C, v21);
  }
  uint64_t v10 = 4;
  while (2)
  {
    if ((v7 & 0xC000000000000001) == 0)
    {
      if (__OFADD__(v10, 1)) {
        goto LABEL_35;
      }
      int v13 = *(_DWORD *)(*(void *)(v7 + 32 + 8 * v10++) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
      if (v13 == v5) {
        goto LABEL_2;
      }
      goto LABEL_15;
    }
    uint64_t result = sub_1005E2CF0();
    if (!__OFADD__(v10++, 1))
    {
      int v12 = *(_DWORD *)(result + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
      uint64_t result = swift_unknownObjectRelease();
      if (v12 == v5) {
        goto LABEL_2;
      }
LABEL_15:
      if (v10 == v8) {
        goto LABEL_33;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100533FF0(Swift::UInt32 a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v47 = a8;
  uint64_t v49 = a7;
  char v50 = a6;
  uint64_t v51 = a4;
  uint64_t v52 = a5;
  int v48 = a2;
  Swift::UInt32 v46 = a1;
  uint64_t v45 = a9;
  uint64_t v10 = sub_1005E10E0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  int v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ConnectionConfiguration(0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v44 = (uint64_t)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v43 - v17;
  int v19 = (int *)type metadata accessor for ConnectionConfiguration();
  char v20 = ConnectionConfiguration.TransportLayerSecurity.init(_:)(*(unsigned __int8 *)(a3 + v19[7]));
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  char v21 = *(unsigned char *)(a3 + v19[5]);
  uint64_t v22 = *(void *)(a3 + v19[6]);
  uint64_t v23 = (uint64_t *)(a3 + v19[8]);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  char v26 = Activity.MailboxStatus.Info.isCheckingForNewMessages.getter(*(unsigned char *)(a3 + v19[9]));
  ConnectionConfiguration.init(endpoint:prohibitConstrainedPaths:prohibitedInterfaceTypes:transportLayerSecurity:sourceApplicationBundleIdentifier:sourceApplicationKind:networkAccountIdentifier:)((uint64_t)v13, v21, v22, v20, v25, v24, v26 & 1, *(void *)(a3 + v19[10]), (uint64_t)v18, *(void *)(a3 + v19[10] + 8));
  uint64_t v27 = v44;
  sub_100535D6C((uint64_t)v18, v44, type metadata accessor for ConnectionConfiguration);
  uint64_t v28 = v19[12];
  int v29 = (uint64_t *)(a3 + v19[11]);
  uint64_t v30 = *v29;
  uint64_t v31 = v29[1];
  uint64_t v32 = *(void *)(a3 + v28 + 8);
  uint64_t v43 = *(void *)(a3 + v28);
  type metadata accessor for CommandConnection();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v41 = CommandConnection.init(id:engineID:configuration:makeCredentials:getPushInformation:finishPushRegistration:queue:delegate:reportDataTransfer:test_overrideIdleRefreshInterval:)(v46, v48, v27, v51, v52, v30, v31, v43, v33, v34, v35, v36, v37, v38, v39, v40, v32, v50, v49,
          (uint64_t)&off_1006FC038,
          v47,
          v45,
          0.0,
          1u);
  sub_100535BF8(a3, (uint64_t (*)(void))type metadata accessor for ConnectionConfiguration);
  sub_100535BF8((uint64_t)v18, type metadata accessor for ConnectionConfiguration);
  return v41;
}

uint64_t sub_1005342E0(unsigned int a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v47 = a8;
  uint64_t v49 = a7;
  uint64_t v50 = a6;
  uint64_t v51 = a4;
  uint64_t v52 = a5;
  unsigned int v48 = a2;
  unsigned int v46 = a1;
  uint64_t v44 = a9;
  uint64_t v45 = a12;
  uint64_t v43 = a10;
  uint64_t v13 = sub_1005E10E0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ConnectionConfiguration(0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v42 = (uint64_t)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  char v21 = (char *)&v39 - v20;
  uint64_t v22 = (int *)type metadata accessor for ConnectionConfiguration();
  char v23 = ConnectionConfiguration.TransportLayerSecurity.init(_:)(*(unsigned __int8 *)(a3 + v22[7]));
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a3, v13);
  char v24 = *(unsigned char *)(a3 + v22[5]);
  uint64_t v25 = *(void *)(a3 + v22[6]);
  char v26 = (uint64_t *)(a3 + v22[8]);
  uint64_t v27 = *v26;
  uint64_t v28 = v26[1];
  char v29 = Activity.MailboxStatus.Info.isCheckingForNewMessages.getter(*(unsigned char *)(a3 + v22[9]));
  ConnectionConfiguration.init(endpoint:prohibitConstrainedPaths:prohibitedInterfaceTypes:transportLayerSecurity:sourceApplicationBundleIdentifier:sourceApplicationKind:networkAccountIdentifier:)((uint64_t)v16, v24, v25, v23, v27, v28, v29 & 1, *(void *)(a3 + v22[10]), (uint64_t)v21, *(void *)(a3 + v22[10] + 8));
  uint64_t v30 = v42;
  sub_100535D6C((uint64_t)v21, v42, type metadata accessor for ConnectionConfiguration);
  uint64_t v31 = v22[12];
  uint64_t v32 = (uint64_t *)(a3 + v22[11]);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  uint64_t v35 = *(void *)(a3 + v31 + 8);
  uint64_t v40 = *(void *)(a3 + v31);
  uint64_t v41 = v43 + 488;
  double v39 = *(uint64_t (**)(void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, char))(v43 + 488);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v38 = 1;
  uint64_t v36 = v39(v46, v48, v30, v51, v52, v34, v33, v40, v35, v50, v49, v45, v47, v44, 0, v38);
  sub_100535BF8(a3, (uint64_t (*)(void))type metadata accessor for ConnectionConfiguration);
  sub_100535BF8((uint64_t)v21, type metadata accessor for ConnectionConfiguration);
  return v36;
}

uint64_t sub_1005345E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1005346D8(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  uint64_t v13 = _swiftEmptyArrayStorage;
  if (v9) {
    goto LABEL_8;
  }
LABEL_14:
  if (__OFADD__(v12++, 1)) {
    goto LABEL_40;
  }
  if (v12 >= v10) {
    goto LABEL_36;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v12);
  if (!v21)
  {
    int64_t v22 = v12 + 1;
    if (v12 + 1 < v10)
    {
      unint64_t v21 = *(void *)(v6 + 8 * v22);
      if (v21) {
        goto LABEL_25;
      }
      int64_t v22 = v12 + 2;
      if (v12 + 2 >= v10) {
        goto LABEL_36;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v22);
      if (v21) {
        goto LABEL_25;
      }
      int64_t v22 = v12 + 3;
      if (v12 + 3 >= v10) {
        goto LABEL_36;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v22);
      if (v21)
      {
LABEL_25:
        int64_t v12 = v22;
        goto LABEL_26;
      }
      int64_t v22 = v12 + 4;
      if (v12 + 4 < v10)
      {
        unint64_t v21 = *(void *)(v6 + 8 * v22);
        if (v21) {
          goto LABEL_25;
        }
        while (1)
        {
          int64_t v12 = v22 + 1;
          if (__OFADD__(v22, 1)) {
            goto LABEL_41;
          }
          if (v12 >= v10) {
            break;
          }
          unint64_t v21 = *(void *)(v6 + 8 * v12);
          ++v22;
          if (v21) {
            goto LABEL_26;
          }
        }
      }
    }
LABEL_36:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_26:
  unint64_t v9 = (v21 - 1) & v21;
  for (unint64_t i = __clz(__rbit64(v21)) + (v12 << 6); ; unint64_t i = v15 | (v12 << 6))
  {
    uint64_t v23 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    if (v23 <= a2) {
      break;
    }
    if (__OFSUB__(v23, a2)) {
      goto LABEL_38;
    }
    uint64_t v14 = a2 - v23;
    if (__OFSUB__(0, v23 - a2)) {
      goto LABEL_39;
    }
LABEL_6:
    if ((double)v14 / 1000000000.0 >= a3)
    {
      int v24 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * i);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100532E1C(0, v13[2] + 1, 1, v13);
        uint64_t v13 = (void *)result;
      }
      unint64_t v18 = v13[2];
      unint64_t v17 = v13[3];
      uint64_t v19 = v13;
      if (v18 >= v17 >> 1)
      {
        uint64_t result = (uint64_t)sub_100532E1C((void *)(v17 > 1), v18 + 1, 1, v13);
        uint64_t v19 = (void *)result;
      }
      v19[2] = v18 + 1;
      uint64_t v13 = v19;
      *((_DWORD *)v19 + v18 + 8) = v24;
      if (!v9) {
        goto LABEL_14;
      }
    }
    else if (!v9)
    {
      goto LABEL_14;
    }
LABEL_8:
    unint64_t v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
  }
  uint64_t v14 = a2 - v23;
  if (!__OFSUB__(a2, v23)) {
    goto LABEL_6;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100534924(unint64_t a1, void *a2, Swift::UInt32 a3)
{
  uint64_t v4 = v3;
  Swift::UInt32 v17 = a3;
  uint64_t v7 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1005E2FB0();
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10)
    {
LABEL_3:
      v16[1] = v4;
      uint64_t v4 = 4;
      do
      {
        uint64_t v11 = v4 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v12 = sub_1005E2CF0();
          uint64_t v13 = v4 - 3;
          if (__OFADD__(v11, 1)) {
            goto LABEL_13;
          }
        }
        else
        {
          uint64_t v12 = *(void *)(a1 + 8 * v4);
          swift_retain();
          uint64_t v13 = v4 - 3;
          if (__OFADD__(v11, 1))
          {
LABEL_13:
            __break(1u);
            goto LABEL_14;
          }
        }
        (*(void (**)(void))(*(void *)v12 + 296))();
        v18.bytes._rawValue = a2;
        v18._hashValue._value = v17;
        Swift::Bool v14 = ConnectionState.hasMailboxSelectedOrSelectionIsInProgress(_:)(v18);
        sub_100535BF8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ConnectionState);
        if (v14)
        {
          swift_bridgeObjectRelease();
          return v12;
        }
        swift_release();
        ++v4;
      }
      while (v13 != v10);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100534AF8(unint64_t a1, int a2)
{
  if (a1 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1005E2FB0();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 4;
      do
      {
        uint64_t v6 = v5 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v7 = sub_1005E2CF0();
          BOOL v8 = __OFADD__(v6, 1);
          uint64_t v9 = v5 - 3;
          if (v8) {
            goto LABEL_14;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(a1 + 8 * v5);
          swift_retain();
          BOOL v8 = __OFADD__(v6, 1);
          uint64_t v9 = v5 - 3;
          if (v8)
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        if (*(_DWORD *)(v7 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) == a2)
        {
          swift_bridgeObjectRelease();
          return v7;
        }
        swift_release();
        ++v5;
      }
      while (v9 != v4);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100534C14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100534D70(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100534E60(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_100535908();
  uint64_t result = sub_1005E2280();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned int *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1005339FC(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_100534ED4(unint64_t a1, void *a2, Swift::UInt32 a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(a1 >> 62))
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11) {
      goto LABEL_3;
    }
    return 0;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1005E2FB0();
  swift_bridgeObjectRelease();
  if (!v11) {
    return 0;
  }
LABEL_3:
  v17[1] = v4;
  uint64_t v12 = 0;
  unint64_t v4 = a1 & 0xC000000000000001;
  while (1)
  {
    if (v4)
    {
      uint64_t v13 = sub_1005E2CF0();
    }
    else
    {
      uint64_t v13 = *(void *)(a1 + 8 * v12 + 32);
      swift_retain();
    }
    (*(void (**)(void))(*(void *)v13 + 296))();
    v18.bytes._rawValue = a2;
    v18._hashValue._value = a3;
    Swift::Bool v14 = ConnectionState.hasMailboxSelected(_:)(v18);
    sub_100535BF8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    swift_release();
    if (v14) {
      return v12;
    }
    uint64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v12;
    if (v15 == v11) {
      return 0;
    }
  }
}

uint64_t sub_100535088(unint64_t a1, uint64_t a2, int a3)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
    return 0;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6) {
    return 0;
  }
LABEL_3:
  uint64_t v7 = 0;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = sub_1005E2CF0();
    }
    else
    {
      uint64_t v9 = *(void *)(a1 + 32 + 8 * v7);
      swift_retain();
    }
    uint64_t v10 = (*(uint64_t (**)(void))(*(void *)v9 + 576))();
    if (v10) {
      break;
    }
    swift_release();
    BOOL v8 = __OFADD__(v7++, 1);
    if (v8)
    {
LABEL_23:
      __break(1u);
      return 0;
    }
LABEL_5:
    if (v7 == v6) {
      return 0;
    }
  }
  if (v11 != a3) {
    goto LABEL_4;
  }
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12 != *(void *)(a2 + 16)) {
    goto LABEL_4;
  }
  if (!v12 || v10 == a2) {
    goto LABEL_25;
  }
  if (*(unsigned __int8 *)(v10 + 32) != *(unsigned __int8 *)(a2 + 32)) {
    goto LABEL_4;
  }
  if (v12 == 1) {
    goto LABEL_25;
  }
  if (*(unsigned __int8 *)(v10 + 33) != *(unsigned __int8 *)(a2 + 33))
  {
LABEL_4:
    swift_release();
    swift_bridgeObjectRelease();
    BOOL v8 = __OFADD__(v7++, 1);
    if (v8) {
      goto LABEL_23;
    }
    goto LABEL_5;
  }
  uint64_t v13 = 0;
  uint64_t v14 = v12 - 2;
  while (v14 != v13)
  {
    int v15 = *(unsigned __int8 *)(v10 + v13 + 34);
    int v16 = *(unsigned __int8 *)(a2 + 34 + v13++);
    if (v15 != v16) {
      goto LABEL_4;
    }
  }
LABEL_25:
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_100535280(unint64_t a1, int a2)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    uint64_t v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        int v6 = *(_DWORD *)(sub_1005E2CF0() + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
        swift_unknownObjectRelease();
        if (v6 == a2) {
          return v5;
        }
      }
      else if (*(_DWORD *)(*(void *)(a1 + 8 * v5 + 32) + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) == a2)
      {
        return v5;
      }
      if (__OFADD__(v5, 1)) {
        break;
      }
      if (++v5 == v4) {
        return 0;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_100535384(uint64_t a1, uint64_t a2)
{
  sub_10000566C(&qword_100718230);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v35 - v6;
  BOOL v8 = (uint64_t *)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_enqueuedEvents);
  swift_beginAccess();
  if (!*v8)
  {
    *BOOL v8 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(a2 + 16);
    if (v16)
    {
      uint64_t v36 = v5;
      swift_bridgeObjectRetain();
      Swift::UInt32 v17 = (void *)(a2 + 64);
      do
      {
        unint64_t v18 = *(v17 - 3);
        int v19 = *((_DWORD *)v17 - 4);
        uint64_t v20 = *(v17 - 1);
        uint64_t v21 = *v17;
        unsigned int v38 = *((_DWORD *)v17 - 8);
        unint64_t v39 = v18;
        int v40 = v19;
        uint64_t v41 = v20;
        uint64_t v42 = v21;
        sub_10051B4D8(v18);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10052CDCC(&v38);
        sub_10051B480(v18);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v17 += 5;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
      uint64_t v5 = v36;
    }
    uint64_t v22 = *v8;
    if (*v8)
    {
      *BOOL v8 = 0;
      if (*(void *)(v22 + 16) && swift_unknownObjectWeakLoadStrong())
      {
        sub_100513760(v22);
        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
      return swift_bridgeObjectRelease();
    }
    uint64_t v29 = a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
    swift_beginAccess();
    sub_1000079E4(v29, (uint64_t)v5, &qword_100718230);
    uint64_t v30 = sub_1005E0ED0();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v5, 1, v30);
    if (result != 1)
    {
      swift_retain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v32 = sub_1005E0EB0();
      os_log_type_t v33 = sub_1005E25A0();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = swift_slowAlloc();
        *(_DWORD *)uint64_t v34 = 68157952;
        int v37 = 2;
        sub_1005E2960();
        *(_WORD *)(v34 + 8) = 256;
        LOBYTE(v37) = *(unsigned char *)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
        sub_1005E2960();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "[%.*hhx] nil enqueued events after enqueueing.", (uint8_t *)v34, 0xBu);
        swift_slowDealloc();
      }
      else
      {
        swift_release();
      }

      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v5, v30);
    }
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_logger;
  swift_beginAccess();
  sub_1000079E4(v9, (uint64_t)v7, &qword_100718230);
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_25;
  }
  swift_retain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v13 = sub_1005E0EB0();
  os_log_type_t v14 = sub_1005E2590();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 68157952;
    unsigned int v38 = 2;
    sub_1005E2960();
    *(_WORD *)(v15 + 8) = 256;
    LOBYTE(v38) = *(unsigned char *)(a1 + OBJC_IVAR____TtC22IMAP2ConnectionControl14ConnectionPool_engineID);
    sub_1005E2960();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%.*hhx] withEnqueuedSend() called while we already have enqueued events.", (uint8_t *)v15, 0xBu);
    swift_slowDealloc();
  }
  else
  {
    swift_release();
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v7, v10);
  uint64_t v23 = *(void *)(a2 + 16);
  if (v23)
  {
    swift_bridgeObjectRetain();
    int v24 = (void *)(a2 + 64);
    do
    {
      unint64_t v25 = *(v24 - 3);
      int v26 = *((_DWORD *)v24 - 4);
      uint64_t v27 = *(v24 - 1);
      uint64_t v28 = *v24;
      unsigned int v38 = *((_DWORD *)v24 - 8);
      unint64_t v39 = v25;
      int v40 = v26;
      uint64_t v41 = v27;
      uint64_t v42 = v28;
      sub_10051B4D8(v25);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10052CDCC(&v38);
      sub_10051B480(v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 += 5;
      --v23;
    }
    while (v23);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_100535908()
{
  unint64_t result = qword_100718658;
  if (!qword_100718658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718658);
  }
  return result;
}

uint64_t sub_10053595C()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100535994()
{
  return sub_100531EA0(v0, (void (*)(void))sub_100531F00);
}

uint64_t sub_1005359C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 528))(*(void *)(v1 + 16)) & 1;
}

unint64_t sub_100535A24()
{
  unint64_t result = qword_100718678;
  if (!qword_100718678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718678);
  }
  return result;
}

unint64_t *sub_100535A80(unint64_t *a1)
{
  return a1;
}

unint64_t *sub_100535AAC(unint64_t *a1)
{
  return a1;
}

uint64_t sub_100535AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100717EF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_100535B40()
{
  unint64_t result = qword_100718698;
  if (!qword_100718698)
  {
    sub_1005E1650();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718698);
  }
  return result;
}

uint64_t sub_100535B98(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, int))
{
  return a1;
}

uint64_t sub_100535BF8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100535C58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100535CC0()
{
  unint64_t result = qword_1007186D0;
  if (!qword_1007186D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007186D0);
  }
  return result;
}

uint64_t sub_100535D14()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100535D6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100535DD4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t destroy for ConnectionPool.CapturedValue()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ConnectionPool.CapturedValue(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ConnectionPool.CapturedValue(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ConnectionPool.CapturedValue(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ConnectionPool.CapturedValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ConnectionPool.CapturedValue()
{
  return &type metadata for ConnectionPool.CapturedValue;
}

unsigned char *storeEnumTagSinglePayload for ConnectionPool.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005360F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionPool.Error()
{
  return &type metadata for ConnectionPool.Error;
}

unint64_t sub_100536134()
{
  unint64_t result = qword_1007186D8;
  if (!qword_1007186D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007186D8);
  }
  return result;
}

unint64_t sub_100536188()
{
  unint64_t result = qword_1007186E8;
  if (!qword_1007186E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007186E8);
  }
  return result;
}

unint64_t sub_1005361DC()
{
  unint64_t result = qword_1007186F8;
  if (!qword_1007186F8)
  {
    sub_10000744C(&qword_1007186F0);
    sub_100536250();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007186F8);
  }
  return result;
}

unint64_t sub_100536250()
{
  unint64_t result = qword_100718700;
  if (!qword_100718700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718700);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ConnectionPool.CapturedValue.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100536370);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionPool.CapturedValue.CodingKeys()
{
  return &type metadata for ConnectionPool.CapturedValue.CodingKeys;
}

unint64_t sub_1005363AC()
{
  unint64_t result = qword_100718708;
  if (!qword_100718708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718708);
  }
  return result;
}

unint64_t sub_100536404()
{
  unint64_t result = qword_100718710;
  if (!qword_100718710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718710);
  }
  return result;
}

unint64_t sub_10053645C()
{
  unint64_t result = qword_100718718;
  if (!qword_100718718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718718);
  }
  return result;
}

uint64_t sub_1005364B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D614E676F6CLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656E69676E65 && a2 == 0xE800000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697463656E6E6F63 && a2 == 0xEB00000000736E6FLL || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F7272457473616CLL && a2 == 0xE900000000000072 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001005EBE00)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t initializeWithCopy for PowerTelemetry(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PowerTelemetry(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for PowerTelemetry(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for PowerTelemetry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PowerTelemetry()
{
  return &type metadata for PowerTelemetry;
}

uint64_t sub_100536804(char a1, void *a2, uint64_t a3)
{
  uint64_t v65 = a3;
  char v5 = a1 & 1;
  uint64_t v63 = type metadata accessor for Engine.Logger(0);
  __chkstk_darwin(v63);
  uint64_t v68 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1005E0ED0();
  uint64_t v53 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  BOOL v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1005E0970();
  uint64_t v56 = *(void *)(v62 - 8);
  os_log_type_t v60 = *(char **)(v56 + 64);
  uint64_t v9 = __chkstk_darwin(v62);
  unint64_t v54 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v59 = (char *)&v53 - v11;
  int v61 = (char *)static MonotonicTime.now()();
  sub_1005E0960();
  uint64_t v12 = *(char **)(v3 + 16);
  uint64_t v67 = *(void *)(v3 + 8);
  char v64 = v12;
  uint64_t v66 = v3;
  swift_bridgeObjectRetain();
  sub_100537518(v5, a2, v71);
  uint64_t v13 = swift_allocObject();
  os_log_type_t v14 = (uint64_t *)(v13 + 16);
  uint64_t v15 = v13;
  uint64_t v16 = sub_10003BCDC(v71, v71[3]);
  __chkstk_darwin(v16);
  (*(void (**)(char *))(v18 + 16))((char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)&long long v57 = v15;
  *(void *)(v15 + 40) = AssociatedTypeWitness;
  *(void *)(v15 + 48) = swift_getAssociatedConformanceWitness();
  sub_100021E04(v14);
  sub_1005E1F60();
  uint64_t v20 = (uint64_t *)swift_allocObject();
  uint64_t v21 = sub_10003BCDC(v72, v72[3]);
  __chkstk_darwin(v21);
  (*(void (**)(char *))(v23 + 16))((char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20[5] = swift_getAssociatedTypeWitness();
  v20[6] = swift_getAssociatedConformanceWitness();
  int v24 = v8;
  sub_100021E04(v20 + 2);
  sub_1005E1F60();
  uint64_t v25 = v56;
  int v26 = v54;
  uint64_t v27 = v59;
  uint64_t v28 = v62;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v54, v59, v62);
  unint64_t v29 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v30 = (unint64_t)&v60[v29 + 7] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v61;
  *(void *)(v31 + 16) = v57;
  *(void *)(v31 + 24) = v32;
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v31 + v29, v26, v28);
  os_log_type_t v33 = (uint64_t *)(v31 + v30);
  uint64_t v34 = v64;
  uint64_t *v33 = v67;
  v33[1] = (uint64_t)v34;
  *(void *)(v31 + ((v30 + 23) & 0xFFFFFFFFFFFFFFF8)) = v20;
  sub_10000566C(&qword_100718720);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_100537ACC;
  *(void *)(v35 + 24) = v31;
  sub_10000566C(&qword_100718728);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v35;
  sub_100537B7C((uint64_t)v71);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v28);
  uint64_t v37 = v55;
  uint64_t v56 = inited;
  uint64_t v38 = *(void *)(inited + 16);
  sub_10000566C(&qword_100718730);
  uint64_t v39 = swift_initStackObject();
  *(void *)(v39 + 16) = v38;
  swift_retain();
  uint64_t v67 = v39;
  swift_retain();
  sub_1005E3020();
  if (v69)
  {
    uint64_t v41 = (void (**)(char *, uint64_t, uint64_t))(v53 + 16);
    int v61 = (char *)&v69 + 4;
    os_log_type_t v60 = (char *)&v69 + 1;
    unint64_t v59 = &v70;
    uint64_t v42 = (void (**)(char *, uint64_t))(v53 + 8);
    char v64 = (char *)&type metadata for Any + 8;
    *(void *)&long long v40 = 68158210;
    long long v57 = v40;
    uint64_t v62 = v53 + 16;
    uint64_t v58 = v24;
    do
    {
      uint64_t v43 = swift_bridgeObjectRetain();
      sub_100537110(v43);
      swift_bridgeObjectRelease();
      Class isa = sub_1005E1950().super.isa;
      swift_bridgeObjectRelease();
      PPSSendTelemetry();

      uint64_t v45 = v65;
      (*v41)(v24, v65, v37);
      sub_100537BD0(v45, v68);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain();
      unsigned int v46 = sub_1005E0EB0();
      os_log_type_t v47 = sub_1005E2590();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = swift_slowAlloc();
        uint64_t v49 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v48 = v57;
        LODWORD(v69) = 2;
        sub_1005E2960();
        *(_WORD *)(v48 + 8) = 256;
        char v50 = *(unsigned char *)(v68 + *(int *)(v63 + 20));
        sub_100537DB4(v68);
        LOBYTE(v69) = v50;
        sub_1005E2960();
        *(_WORD *)(v48 + 11) = 2112;
        sub_10000566C(&qword_100718738);
        Class v51 = sub_1005E1950().super.isa;
        Class v69 = v51;
        sub_1005E2960();
        *uint64_t v49 = v51;
        int v24 = v58;
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "[%.*hhx] Sending power telemetry event: %@", (uint8_t *)v48, 0x15u);
        sub_10000566C(&qword_1007186A0);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v41 = (void (**)(char *, uint64_t, uint64_t))v62;
        swift_slowDealloc();
      }
      else
      {
        sub_100537DB4(v68);

        swift_bridgeObjectRelease_n();
      }
      (*v42)(v24, v37);
      sub_1005E3020();
    }
    while (v69);
  }
  swift_release();
  swift_release();
  swift_setDeallocating();
  return swift_release();
}

uint64_t sub_100537110(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10000566C(&qword_100718740);
    BOOL v2 = (void *)sub_1005E2FF0();
  }
  else
  {
    BOOL v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 8;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_100021C34(*(void *)(a1 + 56) + 40 * v12, (uint64_t)v43);
    *(void *)&long long v42 = v19;
    *((void *)&v42 + 1) = v18;
    *(_OWORD *)&v39[5] = v42;
    v40[0] = v43[0];
    v40[1] = v43[1];
    uint64_t v41 = v44;
    uint64_t v30 = v19;
    uint64_t v31 = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_100021BFC(v40, (uint64_t)v29);
    sub_10000566C(&qword_100718738);
    swift_dynamicCast();
    long long v36 = v32;
    long long v37 = v33;
    uint64_t v38 = v34;
    sub_100353CB8(&v35, v39);
    long long v32 = v36;
    long long v33 = v37;
    uint64_t v34 = v38;
    sub_100353CB8(v39, v29);
    sub_100353CB8(v29, &v36);
    uint64_t result = sub_1005E2BC0(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~v6[v21 >> 6]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~v6[v21 >> 6])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = v6[v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)((char *)v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v32;
    *(_OWORD *)(v10 + 16) = v33;
    *(void *)(v10 + 32) = v34;
    uint64_t result = (uint64_t)sub_100353CB8(&v36, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_10003BC80();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_100537518@<X0>(char a1@<W0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  char v6 = a1 & 1;
  uint64_t v7 = *v3;
  *uint64_t v3 = (uint64_t)a2;
  swift_bridgeObjectRetain_n();
  RunningSyncRequests.Change.init(previous:current:)(v7, a2, v18);
  int64_t v8 = sub_10003BCDC(v18, v18[3]);
  __chkstk_darwin(v8);
  (*(void (**)(unsigned char *))(v10 + 16))(&v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v17[48] = v6;
  uint64_t v11 = sub_1005E2000();
  unint64_t v12 = sub_10003BCDC(v19, v19[3]);
  __chkstk_darwin(v12);
  (*(void (**)(unsigned char *))(v14 + 16))(&v17[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v17[16] = v6;
  uint64_t v15 = sub_1005E2000();
  a3[3] = sub_10000566C(&qword_100718750);
  a3[4] = sub_100057E98(&qword_100718758, &qword_100718750);
  *a3 = v11;
  a3[8] = sub_10000566C(&qword_100718760);
  a3[9] = sub_100057E98(&qword_100718768, &qword_100718760);
  a3[5] = v15;
  return sub_100537B7C((uint64_t)v18);
}

uint64_t sub_10053777C()
{
  _s13IMAP2Behavior4TaskOwxx_0(v0 + 16);
  return _swift_deallocObject(v0, 56, 7);
}

unint64_t sub_1005377B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t *a7@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v23 = a4;
  unint64_t v24 = a7;
  uint64_t v11 = sub_1005E0970();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_100057374(a1 + 16, *(void *)(a1 + 40));
  sub_1005E2950();
  swift_endAccess();
  unint64_t v15 = v25 | ((unint64_t)BYTE4(v25) << 32);
  if ((v15 & 0xFF00000000) == 0x400000000)
  {
    uint64_t v21 = a3;
    swift_beginAccess();
    sub_100057374(a6 + 16, *(void *)(a6 + 40));
    sub_1005E2950();
    swift_endAccess();
    uint64_t v17 = v24;
    uint64_t v16 = v25;
    if ((v25 & 0xFF00000000) == 0x400000000)
    {
      unint64_t result = 0;
    }
    else
    {
      uint64_t v19 = v26;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v21, v11);
      swift_bridgeObjectRetain();
      unint64_t result = sub_100537F74(v22, (uint64_t)v14, v23, a5, v16 & 0xFFFFFFFFFFLL, v19);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
    swift_bridgeObjectRetain();
    unint64_t result = sub_100537E10((uint64_t)v14, v23, a5, v15);
    uint64_t v17 = v24;
  }
  *uint64_t v17 = result;
  return result;
}

uint64_t sub_1005379D0()
{
  uint64_t v1 = sub_1005E0970();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, v6 + 8, v5);
}

unint64_t sub_100537ACC@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_1005E0970() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8));
  return sub_1005377B4(v6, v7, v1 + v4, v8, v9, v10, a1);
}

uint64_t sub_100537B7C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100537BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Engine.Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100537C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0970();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v16 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
  Date.init(_:now:now:)(a3, a1, (uint64_t)v10);
  sub_1005E0930();
  double v14 = round(v13);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v14 < 9.22337204e18) {
    return (uint64_t)v14;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100537DB4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Engine.Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100537E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10000566C(&qword_100718748);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6680;
  *(void *)(inited + 32) = 0x746E756F636361;
  *(void *)(inited + 40) = 0xE700000000000000;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = &protocol witness table for String;
  *(void *)(inited + 48) = a2;
  *(void *)(inited + 56) = a3;
  *(void *)(inited + 88) = 1684957547;
  *(void *)(inited + 96) = 0xE400000000000000;
  uint64_t v9 = qword_100629FC0[a4 << 24 >> 56];
  *(void *)(inited + 128) = &type metadata for Int64;
  *(void *)(inited + 136) = &protocol witness table for Int64;
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 144) = 1668184435;
  *(void *)(inited + 152) = 0xE400000000000000;
  *(void *)(inited + 184) = &type metadata for UInt32;
  *(void *)(inited + 192) = &protocol witness table for UInt32;
  *(_DWORD *)(inited + 160) = a4;
  *(void *)(inited + 200) = 0x746E657665;
  *(void *)(inited + 208) = 0xE500000000000000;
  *(void *)(inited + 240) = &type metadata for Int;
  *(void *)(inited + 248) = &protocol witness table for Int;
  *(void *)(inited + 216) = 1;
  unint64_t v10 = sub_100504FAC(inited);
  uint64_t v11 = sub_1005E0970();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  return v10;
}

unint64_t sub_100537F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_10000566C(&qword_100718748);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F66A0;
  *(void *)(inited + 32) = 0x7472617473;
  *(void *)(inited + 40) = 0xE500000000000000;
  uint64_t v13 = sub_100537C34(a1, a2, a6);
  *(void *)(inited + 72) = &type metadata for Int64;
  *(void *)(inited + 80) = &protocol witness table for Int64;
  *(void *)(inited + 48) = v13;
  *(void *)(inited + 88) = 0x746E756F636361;
  *(void *)(inited + 96) = 0xE700000000000000;
  *(void *)(inited + 128) = &type metadata for String;
  *(void *)(inited + 136) = &protocol witness table for String;
  *(void *)(inited + 104) = a3;
  *(void *)(inited + 112) = a4;
  *(void *)(inited + 144) = 1684957547;
  *(void *)(inited + 152) = 0xE400000000000000;
  uint64_t v14 = qword_100629FC0[a5 << 24 >> 56];
  *(void *)(inited + 184) = &type metadata for Int64;
  *(void *)(inited + 192) = &protocol witness table for Int64;
  *(void *)(inited + 160) = v14;
  *(void *)(inited + 200) = 1668184435;
  *(void *)(inited + 208) = 0xE400000000000000;
  *(void *)(inited + 240) = &type metadata for UInt32;
  *(void *)(inited + 248) = &protocol witness table for UInt32;
  *(_DWORD *)(inited + 216) = a5;
  *(void *)(inited + 256) = 0x746E657665;
  *(void *)(inited + 264) = 0xE500000000000000;
  *(void *)(inited + 296) = &type metadata for Int;
  *(void *)(inited + 304) = &protocol witness table for Int;
  *(void *)(inited + 272) = 2;
  unint64_t v15 = sub_100504FAC(inited);
  uint64_t v16 = sub_1005E0970();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  return v15;
}

uint64_t sub_100538120(uint64_t a1)
{
  return *(unsigned char *)(v1 + 16) & 1 | (*(unsigned char *)(a1 + 4) != 2);
}

ValueMetadata *type metadata accessor for PowerTelemetry.Event()
{
  return &type metadata for PowerTelemetry.Event;
}

void *assignWithCopy for PowerTelemetry.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for PowerTelemetry.State(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void *assignWithTake for PowerTelemetry.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PowerTelemetry.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PowerTelemetry.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerTelemetry.State()
{
  return &type metadata for PowerTelemetry.State;
}

ValueMetadata *type metadata accessor for PowerTelemetry.AccountID()
{
  return &type metadata for PowerTelemetry.AccountID;
}

unint64_t sub_100538298()
{
  unint64_t result = qword_100718770;
  if (!qword_100718770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718770);
  }
  return result;
}

ValueMetadata *type metadata accessor for RateLimit()
{
  return &type metadata for RateLimit;
}

uint64_t sub_100538300(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t (*)(uint64_t a1), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  swift_retain();
  a3(a5, a6, sub_100539138, v11);
  return swift_release();
}

uint64_t sub_1005383B0(uint64_t a1, void (*a2)(void *))
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    sub_100590BD4(0, v3, 0);
    uint64_t v5 = a1 + 32;
    do
    {
      sub_100539140(v5, (uint64_t)v10);
      sub_10053919C((uint64_t)v10);
      Credentials.init(_:)((uint64_t)v10, v9);
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      if (v7 >= v6 >> 1) {
        sub_100590BD4(v6 > 1, v7 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v7 + 1;
      sub_1004526AC((uint64_t)v9, (uint64_t)&_swiftEmptyArrayStorage[10 * v7 + 4]);
      v5 += 80;
      --v3;
    }
    while (v3);
  }
  a2(_swiftEmptyArrayStorage);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1005384C4(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 0;
  }
  else {
    return sub_1005E3290();
  }
}

uint64_t sub_1005384F4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v4 == v2 && v5 == v3) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1005E3290() ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_100538534(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1005E3290() ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_100538580(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v4 == v2 && v5 == v3) {
    return 0;
  }
  else {
    return sub_1005E3290();
  }
}

uint64_t sub_1005385A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000566C(&qword_100718808);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1005E10E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v28[-v12];
  uint64_t v14 = type metadata accessor for ConnectionConfiguration();
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = &v28[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = *(void *)a1;
  uint64_t v30 = *(void *)(a1 + 8);
  uint64_t v31 = v17;
  long long v32 = *(_OWORD *)(a1 + 16);
  __int16 v33 = *(_WORD *)(a1 + 32);
  int v29 = ConnectionConfiguration.TransportLayerSecurity.init(_:)(*(unsigned __int8 *)(a1 + 34));
  swift_bridgeObjectRetain_n();
  sub_1005E10B0();
  sub_1005E10C0();
  sub_10002A77C((uint64_t)&v32);
  uint64_t v18 = sub_1005E10D0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v18);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v21 = sub_10000566C(&qword_100718810);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 32))(&v11[*(int *)(v21 + 48)], v6, v18);
    (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v11, enum case for NWEndpoint.hostPort(_:), v7);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v13, v11, v7);
    sub_10000566C(&qword_100718818);
    uint64_t v22 = sub_1005E10F0();
    uint64_t v23 = *(void *)(v22 - 8);
    unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1005F6670;
    (*(void (**)(unint64_t, void, uint64_t))(v23 + 104))(v25 + v24, enum case for NWInterface.InterfaceType.cellular(_:), v22);
    uint64_t v26 = swift_bridgeObjectRetain();
    ConnectionConfiguration.init(transportLayerSecurity:transportLayerSecurityOptions:endpoint:prohibitConstrainedPaths:prohibitedInterfaceTypes:sourceApplicationBundleIdentifier:sourceApplicationKind:networkAccountIdentifier:getPushInformation:finishPushRegistration:)(v29, (uint64_t)v13, 1, v25, 0xD000000000000014, 0x80000001005EBE60, 1, (uint64_t)v16, v31, v26, (uint64_t)sub_1005389CC, 0, (uint64_t)UInt32.init(_:), 0);
    sub_1005390B4(a1);
    strcpy((char *)a2, "searchIndexer");
    *(_WORD *)(a2 + 14) = -4864;
    int64_t v27 = (int *)type metadata accessor for Configuration();
    uint64_t result = sub_1003FCEB4((uint64_t)v16, a2 + v27[5]);
    *(unsigned char *)(a2 + v27[6]) = 0;
    *(unsigned char *)(a2 + v27[7]) = 1;
  }
  return result;
}

uint64_t sub_1005389CC(uint64_t (*a1)(_OWORD *))
{
  memset(v2, 0, sizeof(v2));
  return a1(v2);
}

uint64_t destroy for Account()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for Account(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Account(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for Account(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Account(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Account(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for Account()
{
  return &type metadata for Account;
}

__n128 initializeWithTake for Account.ID(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

ValueMetadata *type metadata accessor for Account.ID()
{
  return &type metadata for Account.ID;
}

unint64_t sub_100538C50()
{
  unint64_t result = qword_100718800;
  if (!qword_100718800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718800);
  }
  return result;
}

uint64_t sub_100538CA4(uint64_t a1, uint64_t a2)
{
  return sub_100538E10(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_100538CBC(uint64_t a1, id *a2)
{
  uint64_t result = sub_1005E1BE0();
  *a2 = 0;
  return result;
}

uint64_t sub_100538D34(uint64_t a1, id *a2)
{
  char v3 = sub_1005E1BF0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_100538DB4@<X0>(void *a1@<X8>)
{
  sub_1005E1C00();
  NSString v2 = sub_1005E1BD0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100538DF8(uint64_t a1, uint64_t a2)
{
  return sub_100538E10(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100538E10(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1005E1C00();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100538E54()
{
  sub_1005E1C00();
  sub_1005E1DB0();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_100538EA8()
{
  sub_1005E1C00();
  sub_1005E33F0();
  sub_1005E1DB0();
  Swift::Int v0 = sub_1005E3470();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100538F1C()
{
  uint64_t v0 = sub_1005E1C00();
  uint64_t v2 = v1;
  if (v0 == sub_1005E1C00() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1005E3290();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_100538FA8@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_1005E1BD0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100538FF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1005E1C00();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10053901C(uint64_t a1)
{
  uint64_t v2 = sub_1005393B4(&qword_100718848);
  uint64_t v3 = sub_1005393B4(&qword_100718850);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1005390B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100539100()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100539138(uint64_t a1)
{
  return sub_1005383B0(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_100539140(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10053919C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005391E8(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
      sub_100008D24(result, a2);
      uint64_t result = a3;
      a2 = a4;
      goto LABEL_4;
    case 1uLL:
      unint64_t v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_100008D24(result, a2);
      sub_100008D24(a3, a4);
      sub_100008D24(a5, a6);
      sub_100008D24(a7, v15);
      uint64_t result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_4;
    case 2uLL:
LABEL_4:
      uint64_t result = sub_100008D24(result, a2);
      break;
    case 3uLL:
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void _s3__C16os_unfair_lock_sVMa_0(uint64_t a1)
{
}

uint64_t sub_10053934C()
{
  return sub_1005393B4(&qword_100718830);
}

uint64_t sub_100539380()
{
  return sub_1005393B4(&qword_100718838);
}

uint64_t sub_1005393B4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for URLResourceKey(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005393F8()
{
  return sub_1005393B4(&qword_100718840);
}

id sub_10053942C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100539798();
  swift_beginAccess();
  unint64_t v7 = *(void *)(v6 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRetain();
  id v8 = sub_10053A384(v7, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v8)
  {
    if (qword_1007187C8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1005E0ED0();
    sub_1003461B0(v9, (uint64_t)qword_1007623A8);
    swift_bridgeObjectRetain_n();
    uint64_t v10 = sub_1005E0EB0();
    os_log_type_t v11 = sub_1005E25C0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      v19[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      swift_bridgeObjectRetain();
      sub_1005904BC(a1, a2, v19);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Inserting new AccountInfo for %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    _s14descr1006B9AE9V11AccountInfoCMa();
    id v13 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:v3];
    swift_bridgeObjectRetain();
    NSString v14 = sub_1005E1BD0();
    [v13 willChangeValueForKey:v14];

    swift_bridgeObjectRetain();
    NSString v15 = sub_1005E1BD0();
    swift_bridgeObjectRelease();
    [v13 setPrimitiveAccount:v15];

    NSString v16 = sub_1005E1BD0();
    [v13 didChangeValueForKey:v16];
    swift_bridgeObjectRelease();

    uint64_t v17 = sub_100539798();
    swift_beginAccess();
    id v8 = v13;
    sub_1005E20A0();
    if (*(void *)((*(void *)(v17 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v17 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_1005E2110();
    sub_1005E2170();
    sub_1005E20E0();
    swift_endAccess();
    swift_release();
  }
  return v8;
}

uint64_t sub_100539798()
{
  uint64_t v1 = v0;
  id v2 = [v0 userInfo];
  *(void *)&v18[0] = 0xD000000000000010;
  *((void *)&v18[0] + 1) = 0x80000001005EBF00;
  id v3 = objc_msgSend(v2, "__swift_objectForKeyedSubscript:", sub_1005E3350());
  swift_unknownObjectRelease();

  if (v3)
  {
    sub_1005E2A70();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_10053A5B0((uint64_t)v18, (uint64_t)v19);
  if (v19[3])
  {
    _s16AccountInfoCacheCMa();
    if (swift_dynamicCast()) {
      return v17;
    }
  }
  else
  {
    sub_10053A618((uint64_t)v19);
  }
  _s16AccountInfoCacheCMa();
  uint64_t v4 = swift_allocObject();
  id v5 = v1;
  sub_100539A78(v5);
  id v6 = [v5 userInfo];
  v19[0] = (id)0xD000000000000010;
  v19[1] = (id)0x80000001005EBF00;
  swift_retain();
  objc_msgSend(v6, "__swift_setObject:forKeyedSubscript:", v4, sub_1005E3350());

  swift_release();
  swift_unknownObjectRelease();
  id v7 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v8 = sub_1005E1BD0();
  id v9 = [v7 initWithEntityName:v8];

  v19[0] = 0;
  id v10 = [v9 execute:v19];
  id v11 = v19[0];
  if (v10)
  {
    uint64_t v12 = v10;
    _s14descr1006B9AE9V11AccountInfoCMa();
    uint64_t v13 = sub_1005E20C0();
    id v14 = v11;

    swift_beginAccess();
    *(void *)(v4 + 16) = v13;
    swift_bridgeObjectRelease();
    return v4;
  }
  id v16 = v19[0];
  sub_1005E06F0();

  swift_willThrow();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_100539A78(void *a1)
{
  *(void *)(v1 + 16) = &_swiftEmptyArrayStorage;
  *(void *)(v1 + 24) = 0;
  id v3 = [self defaultCenter];
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  v9[4] = sub_10053A6B0;
  v9[5] = v4;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10053A22C;
  v9[3] = &unk_1006FC9E8;
  id v5 = _Block_copy(v9);
  id v6 = a1;
  swift_release();
  id v7 = [v3 addObserverForName:NSManagedObjectContextObjectsDidChangeNotification object:v6 queue:0 usingBlock:v5];

  _Block_release(v5);
  *(void *)(v1 + 24) = v7;
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_100539BD8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100539C30();
    return swift_release();
  }
  return result;
}

void sub_100539C30()
{
  uint64_t v1 = v0;
  id v2 = (uint64_t *)(v0 + 16);
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 16);
  if (v3 >> 62) {
    goto LABEL_30;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    if ((unint64_t)*v2 >> 62) {
      goto LABEL_34;
    }
    uint64_t v5 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
LABEL_23:
      if ((unint64_t)*v2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1005E2FB0();
        swift_bridgeObjectRelease();
        if (v19 >= v5)
        {
LABEL_25:
          sub_10057248C(v5, v19);
          swift_endAccess();
          return;
        }
      }
      else
      {
        uint64_t v19 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v19 >= v5) {
          goto LABEL_25;
        }
      }
      __break(1u);
LABEL_34:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1005E2FB0();
      swift_bridgeObjectRelease();
    }
  }
LABEL_3:
  uint64_t v5 = 0;
  while (1)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)sub_1005E2CF0();
    }
    else {
      id v6 = *(id *)(v3 + 8 * v5 + 32);
    }
    id v7 = v6;
    if ([v6 isDeleted]
      || (id v8 = [v7 managedObjectContext], v8, !v8))
    {
      swift_bridgeObjectRelease();

      uint64_t v18 = v5 + 1;
      if (!__OFADD__(v5, 1)) {
        goto LABEL_21;
      }
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1005E2FB0();
      if (!v4) {
        goto LABEL_18;
      }
      goto LABEL_3;
    }
    NSString v9 = sub_1005E1BD0();
    [v7 willAccessValueForKey:v9];

    id v10 = [v7 primitiveAccount];
    if (!v10) {
      goto LABEL_14;
    }
    id v11 = v10;
    uint64_t v12 = sub_1005E1C00();
    unint64_t v14 = v13;

    uint64_t v15 = HIBYTE(v14) & 0xF;
    if ((v14 & 0x2000000000000000) == 0) {
      uint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
    }
    if (!v15)
    {
      swift_bridgeObjectRelease();
LABEL_14:
      unint64_t v14 = 0;
    }
    NSString v16 = sub_1005E1BD0();
    [v7 didAccessValueForKey:v16];

    swift_bridgeObjectRelease();
    if (!v14) {
      break;
    }
    uint64_t v17 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_29;
    }
    ++v5;
    if (v17 == v4) {
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = v5 + 1;
  if (__OFADD__(v5, 1)) {
    goto LABEL_28;
  }
LABEL_21:
  if ((unint64_t)*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (v18 == v20) {
      goto LABEL_23;
    }
  }
  else if (v18 == *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_23;
  }
  uint64_t v21 = v5 + 5;
  while (2)
  {
    unint64_t v22 = v21 - 4;
    uint64_t v23 = *v2;
    if ((*v2 & 0xC000000000000001) != 0)
    {
      id v24 = (id)sub_1005E2CF0();
      goto LABEL_41;
    }
    if ((v22 & 0x8000000000000000) == 0)
    {
      if (v22 >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_83;
      }
      id v24 = *(id *)(v23 + 8 * v21);
LABEL_41:
      uint64_t v25 = v24;
      if (([v24 isDeleted] & 1) != 0
        || (id v26 = [v25 managedObjectContext], v26, !v26))
      {

        goto LABEL_73;
      }
      NSString v27 = sub_1005E1BD0();
      [v25 willAccessValueForKey:v27];

      id v28 = [v25 primitiveAccount];
      if (!v28) {
        goto LABEL_48;
      }
      int v29 = v28;
      uint64_t v30 = sub_1005E1C00();
      unint64_t v32 = v31;

      uint64_t v33 = HIBYTE(v32) & 0xF;
      if ((v32 & 0x2000000000000000) == 0) {
        uint64_t v33 = v30 & 0xFFFFFFFFFFFFLL;
      }
      if (!v33)
      {
        swift_bridgeObjectRelease();
LABEL_48:
        unint64_t v32 = 0;
      }
      NSString v34 = sub_1005E1BD0();
      [v25 didAccessValueForKey:v34];

      swift_bridgeObjectRelease();
      if (v32)
      {
        if (v22 == v5) {
          goto LABEL_69;
        }
        uint64_t v35 = *v2;
        if ((*v2 & 0xC000000000000001) != 0)
        {
          id v36 = (id)sub_1005E2CF0();
          uint64_t v35 = *v2;
          if ((*v2 & 0xC000000000000001) == 0) {
            goto LABEL_55;
          }
        }
        else
        {
          if (v5 < 0) {
            goto LABEL_86;
          }
          if ((unint64_t)v5 >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_87;
          }
          id v36 = *(id *)(v35 + 8 * v5 + 32);
          if ((v35 & 0xC000000000000001) == 0)
          {
LABEL_55:
            if ((v22 & 0x8000000000000000) != 0) {
              goto LABEL_88;
            }
            if (v22 >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_89;
            }
            id v37 = *(id *)(v35 + 8 * v21);
LABEL_58:
            int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
            *id v2 = v35;
            if (!isUniquelyReferenced_nonNull_bridgeObject || v35 < 0 || (v35 & 0x4000000000000000) != 0)
            {
              uint64_t v35 = sub_100572178(v35);
              *id v2 = v35;
            }
            uint64_t v39 = *(void **)((v35 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20);
            *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20) = v37;

            sub_1005E20E0();
            uint64_t v40 = *v2;
            int v41 = swift_isUniquelyReferenced_nonNull_bridgeObject();
            *id v2 = v40;
            if (!v41 || v40 < 0 || (v40 & 0x4000000000000000) != 0)
            {
              uint64_t v40 = sub_100572178(v40);
              *id v2 = v40;
            }
            if ((v22 & 0x8000000000000000) != 0) {
              goto LABEL_90;
            }
            uint64_t v42 = v40 & 0xFFFFFFFFFFFFFF8;
            if (v22 >= *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_91;
            }
            uint64_t v43 = *(void **)(v42 + 8 * v21);
            *(void *)(v42 + 8 * v21) = v36;

            sub_1005E20E0();
LABEL_69:
            if (__OFADD__(v5++, 1)) {
              goto LABEL_85;
            }
            goto LABEL_73;
          }
        }
        id v37 = (id)sub_1005E2CF0();
        uint64_t v35 = *v2;
        goto LABEL_58;
      }
LABEL_73:
      uint64_t v45 = v21 - 3;
      if (__OFADD__(v22, 1)) {
        goto LABEL_84;
      }
      if ((unint64_t)*v2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v46 = sub_1005E2FB0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v46 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      ++v21;
      if (v45 == v46) {
        goto LABEL_23;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
}

uint64_t sub_10053A22C(uint64_t a1)
{
  uint64_t v2 = sub_1005E0520();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = *(void (**)(char *))(a1 + 32);
  sub_1005E0500();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_10053A320()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t _s16AccountInfoCacheCMa()
{
  return self;
}

void *sub_10053A384(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1005E2FB0();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      uint64_t v6 = 4;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v8 = (id)sub_1005E2CF0();
        }
        else {
          id v8 = *(id *)(a1 + 8 * v6);
        }
        NSString v9 = v8;
        uint64_t v10 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
          goto LABEL_23;
        }
        NSString v11 = sub_1005E1BD0();
        [v9 willAccessValueForKey:v11];

        id v12 = [v9 primitiveAccount];
        if (!v12) {
          goto LABEL_15;
        }
        unint64_t v13 = v12;
        uint64_t v14 = sub_1005E1C00();
        unint64_t v16 = v15;

        uint64_t v17 = HIBYTE(v16) & 0xF;
        if ((v16 & 0x2000000000000000) == 0) {
          uint64_t v17 = v14 & 0xFFFFFFFFFFFFLL;
        }
        if (!v17) {
          break;
        }
LABEL_16:
        NSString v18 = sub_1005E1BD0();
        [v9 didAccessValueForKey:v18];

        if (v16)
        {
          if (v14 == a2 && v16 == a3)
          {
            swift_bridgeObjectRelease();
LABEL_21:
            swift_bridgeObjectRelease();
            return v9;
          }
          char v7 = sub_1005E3290();
          swift_bridgeObjectRelease();
          if (v7) {
            goto LABEL_21;
          }
        }

        ++v6;
        if (v10 == v5) {
          goto LABEL_24;
        }
      }
      swift_bridgeObjectRelease();
LABEL_15:
      uint64_t v14 = 0;
      unint64_t v16 = 0;
      goto LABEL_16;
    }
  }
LABEL_24:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10053A5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100718900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10053A618(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100718900);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10053A678()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10053A6B0()
{
  return sub_100539BD8();
}

uint64_t sub_10053A6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10053A6C8()
{
  return swift_release();
}

Swift::Int sub_10053A6D0()
{
  uint64_t v1 = *(unsigned int *)(v0 + 24);
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  sub_1005E3410(v1 | (v1 << 32));
  return sub_1005E3470();
}

void sub_10053A744()
{
  uint64_t v1 = *(unsigned int *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  sub_1005E3410(v1 | (v1 << 32));
}

Swift::Int sub_10053A7A0()
{
  uint64_t v1 = *(unsigned int *)(v0 + 24);
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  sub_1005E3410(v1 | (v1 << 32));
  return sub_1005E3470();
}

BOOL sub_10053A810(uint64_t a1, uint64_t a2)
{
  return sub_10053A834(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(_DWORD *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(_DWORD *)(a2 + 24));
}

BOOL sub_10053A834(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  if (a1 == a5 && a2 == a6) {
    return a4 == a8 && sub_1000255D4(a3, a7);
  }
  char v12 = sub_1005E3290();
  BOOL result = 0;
  if (v12) {
    return a4 == a8 && sub_1000255D4(a3, a7);
  }
  return result;
}

uint64_t initializeWithCopy for AccountMailbox(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccountMailbox(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

__n128 initializeWithTake for AccountMailbox(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AccountMailbox(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountMailbox(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 28)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountMailbox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 28) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 28) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountMailbox()
{
  return &type metadata for AccountMailbox;
}

unint64_t sub_10053AA74()
{
  unint64_t result = qword_100718908;
  if (!qword_100718908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718908);
  }
  return result;
}

void *sub_10053AAC8(void *a1, uint64_t a2)
{
  uint64_t v3 = (void *)v2;
  uint64_t v43 = a2;
  uint64_t v6 = sub_1005E1670();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v39 = (uint64_t *)((char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v38 = (uint64_t *)((char *)&v35 - v9);
  uint64_t v36 = sub_1005E2600();
  uint64_t v10 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  char v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005E25F0();
  __chkstk_darwin(v13);
  uint64_t v14 = sub_1005E16C0();
  __chkstk_darwin(v14 - 8);
  *(void *)(v2 + 56) = 0;
  *(unsigned char *)(v2 + 64) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 16) = a1;
  id v37 = a1;
  *(void *)(v2 + 48) = static MonotonicTime.now()();
  uint64_t v15 = v2 + OBJC_IVAR____TtC17IMAPSearchIndexer11DelayedSave_logger;
  uint64_t v42 = sub_1005E0ED0();
  uint64_t v44 = *(void *)(v42 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v15, a2, v42);
  sub_1003C8730(0, (unint64_t *)&qword_1007197C0);
  sub_1005E16A0();
  uint64_t aBlock = (void **)&_swiftEmptyArrayStorage;
  sub_10051BB2C(&qword_100718A20, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000566C(&qword_1007197D0);
  sub_100057E98(&qword_100718A28, &qword_1007197D0);
  sub_1005E2AD0();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v36);
  unint64_t v16 = (void *)sub_1005E2620();
  v3[5] = v16;
  uint64_t v17 = (uint64_t)v38;
  *uint64_t v38 = 1;
  uint64_t v18 = v41;
  uint64_t v19 = *(void (**)(uint64_t, void, uint64_t))(v40 + 104);
  v19(v17, enum case for DispatchTimeInterval.seconds(_:), v41);
  uint64_t v20 = (uint64_t)v39;
  *uint64_t v39 = 500;
  v19(v20, enum case for DispatchTimeInterval.milliseconds(_:), v18);
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v37;
  *(void *)(v22 + 16) = v37;
  *(void *)(v22 + 24) = v21;
  uint64_t v49 = sub_10053BDC0;
  uint64_t v50 = v22;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v46 = 1107296256;
  os_log_type_t v47 = sub_10046A1E4;
  uint64_t v48 = &unk_1006FCB08;
  id v24 = _Block_copy(&aBlock);
  type metadata accessor for RestartableTimer();
  swift_allocObject();
  id v25 = v16;
  id v26 = v23;
  id v27 = v25;
  swift_retain();
  uint64_t v28 = RestartableTimer.init(queue:repeating:leeway:closure:)(v27, v17, v20, v24);
  swift_release();
  swift_release();
  v3[4] = v28;
  swift_release();
  id v29 = [self defaultCenter];
  uint64_t v30 = swift_allocObject();
  swift_weakInit();
  uint64_t v49 = sub_10053BDC8;
  uint64_t v50 = v30;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v46 = 1107296256;
  os_log_type_t v47 = sub_10053A22C;
  uint64_t v48 = &unk_1006FCB30;
  unint64_t v31 = _Block_copy(&aBlock);
  id v32 = v26;
  swift_release();
  id v33 = [v29 addObserverForName:NSManagedObjectContextObjectsDidChangeNotification object:v32 queue:0 usingBlock:v31];
  _Block_release(v31);

  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v42);
  v3[3] = v33;
  swift_unknownObjectRelease();
  return v3;
}

void sub_10053B0F4(void *a1, uint64_t a2)
{
  v4[4] = sub_10053BDD0;
  v4[5] = a2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_10046A1E4;
  v4[3] = &unk_1006FCB58;
  uint64_t v3 = _Block_copy(v4);
  swift_retain();
  swift_release();
  [a1 performBlock:v3];
  _Block_release(v3);
}

uint64_t sub_10053B1BC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    int64_t v2 = static MonotonicTime.now()();
    uint64_t v3 = (void *)v1[2];
    if (![v3 hasChanges]) {
      return swift_release();
    }
    uint64_t result = sub_10053B710();
    if (result) {
      goto LABEL_11;
    }
    uint64_t v4 = v1[6];
    BOOL v5 = __OFSUB__(v2, v4);
    uint64_t v6 = v2 - v4;
    if (v2 < v4)
    {
      if (__OFSUB__(v4, v2))
      {
        __break(1u);
        goto LABEL_16;
      }
      BOOL v5 = __OFSUB__(0, v4 - v2);
      uint64_t v6 = v2 - v4;
      if (!v5)
      {
LABEL_10:
        if ((double)v6 / 1000000000.0 > 4.0)
        {
LABEL_11:
          if ([v3 hasChanges])
          {
            uint64_t v7 = swift_retain();
            sub_10053BB44(v7, (uint64_t)v1);
            swift_release();
            v1[7] = 0;
            swift_release();
            return swift_unknownObjectRelease();
          }
        }
        return swift_release();
      }
      __break(1u);
    }
    if (!v5) {
      goto LABEL_10;
    }
LABEL_16:
    __break(1u);
  }
  return result;
}

uint64_t sub_10053B2D0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(void *)(result + 48) = static MonotonicTime.now()();
    return swift_release();
  }
  return result;
}

uint64_t sub_10053B32C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E1680();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  BOOL v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005E16C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = static MonotonicTime.now()();
  uint64_t v11 = *(void **)(v0 + 16);
  if ([v11 hasChanges])
  {
    uint64_t result = sub_10053B710();
    if (result)
    {
LABEL_10:
      if ([v11 hasChanges])
      {
        uint64_t v16 = swift_retain();
        sub_10053BB44(v16, v1);
        swift_release();
        *(void *)(v1 + 56) = 0;
        swift_unknownObjectRelease();
      }
      goto LABEL_12;
    }
    uint64_t v13 = *(void *)(v1 + 48);
    BOOL v14 = __OFSUB__(v10, v13);
    uint64_t v15 = v10 - v13;
    if (v10 < v13)
    {
      if (__OFSUB__(v13, v10))
      {
        __break(1u);
        goto LABEL_20;
      }
      BOOL v14 = __OFSUB__(0, v13 - v10);
      uint64_t v15 = v10 - v13;
      if (!v14)
      {
LABEL_9:
        if ((double)v15 / 1000000000.0 <= 4.0) {
          goto LABEL_12;
        }
        goto LABEL_10;
      }
      __break(1u);
    }
    if (!v14) {
      goto LABEL_9;
    }
LABEL_20:
    __break(1u);
    return result;
  }
LABEL_12:
  uint64_t result = (uint64_t)[v11 hasChanges];
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t result = (uint64_t)[v11 processPendingChanges];
  if (*(void *)(v1 + 56))
  {
    if (*(unsigned char *)(v1 + 64)) {
      return result;
    }
    goto LABEL_15;
  }
  *(void *)(v1 + 56) = os_transaction_create();
  uint64_t result = swift_unknownObjectRelease();
  if ((*(unsigned char *)(v1 + 64) & 1) == 0)
  {
LABEL_15:
    *(unsigned char *)(v1 + 64) = 1;
    v18[0] = *(void *)(v1 + 40);
    aBlock[4] = sub_10053BB24;
    aBlock[5] = v1;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10046A1E4;
    aBlock[3] = &unk_1006FCA90;
    uint64_t v17 = _Block_copy(aBlock);
    swift_retain();
    sub_1005E16A0();
    v18[1] = _swiftEmptyArrayStorage;
    sub_10051BB2C((unint64_t *)&qword_1007189F8, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000566C((uint64_t *)&unk_100719780);
    sub_100057E98((unint64_t *)&qword_100718A00, (uint64_t *)&unk_100719780);
    sub_1005E2AD0();
    sub_1005E2610();
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_10053B6C8(uint64_t result)
{
  if (*(void *)(result + 32))
  {
    swift_retain();
    RestartableTimer.start()();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10053B710()
{
  id v1 = [v0 updatedObjects];
  sub_1003C8730(0, (unint64_t *)&qword_100718A10);
  sub_10053BCE0();
  uint64_t v2 = sub_1005E2260();

  if ((v2 & 0xC000000000000001) != 0) {
    uint64_t v3 = sub_1005E2B50();
  }
  else {
    uint64_t v3 = *(void *)(v2 + 16);
  }
  swift_bridgeObjectRelease();
  id v4 = [v0 insertedObjects];
  uint64_t v5 = sub_1005E2260();

  if ((v5 & 0xC000000000000001) != 0) {
    uint64_t v6 = sub_1005E2B50();
  }
  else {
    uint64_t v6 = *(void *)(v5 + 16);
  }
  uint64_t result = swift_bridgeObjectRelease();
  BOOL v8 = __OFADD__(v3, v6);
  uint64_t v9 = v3 + v6;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    id v10 = [v0 deletedObjects];
    uint64_t v11 = sub_1005E2260();

    if ((v11 & 0xC000000000000001) != 0) {
      uint64_t v12 = sub_1005E2B50();
    }
    else {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (!__OFADD__(v9, v12)) {
      return v9 + v12 > 1000;
    }
  }
  __break(1u);
  return result;
}

id sub_10053B898(uint64_t a1)
{
  id v1 = *(void **)(a1 + 16);
  id v4 = 0;
  if ([v1 save:&v4]) {
    return v4;
  }
  id v3 = v4;
  sub_1005E06F0();

  return (id)swift_willThrow();
}

uint64_t sub_10053B940()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC17IMAPSearchIndexer11DelayedSave_logger;
  uint64_t v2 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_10053BA08()
{
  return type metadata accessor for DelayedSave();
}

uint64_t type metadata accessor for DelayedSave()
{
  uint64_t result = qword_100718938;
  if (!qword_100718938) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10053BA5C()
{
  uint64_t result = sub_1005E0ED0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10053BB24()
{
  return sub_10053B6C8(v0);
}

uint64_t sub_10053BB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10053BB3C()
{
  return swift_release();
}

id sub_10053BB44(uint64_t a1, uint64_t a2)
{
  return sub_10053B898(a2);
}

unint64_t sub_10053BCE0()
{
  unint64_t result = qword_100718A18;
  if (!qword_100718A18)
  {
    sub_1003C8730(255, (unint64_t *)&qword_100718A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718A18);
  }
  return result;
}

uint64_t sub_10053BD48()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10053BD80()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10053BDC0()
{
  sub_10053B0F4(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10053BDC8()
{
  return sub_10053B2D0();
}

uint64_t sub_10053BDD0()
{
  return sub_10053B1BC();
}

uint64_t sub_10053BDF0()
{
  uint64_t v0 = sub_1005E0ED0();
  sub_10034E5B4(v0, qword_100718A30);
  sub_1003461B0(v0, (uint64_t)qword_100718A30);
  return sub_1005E0EC0();
}

uint64_t sub_10053BE68(uint64_t a1, uint64_t a2)
{
  uint64_t v91 = a2;
  sub_10000566C(&qword_100718A60);
  __chkstk_darwin();
  uint64_t v90 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = a1;
  unint64_t v4 = sub_100569D8C(a1);
  unint64_t v5 = v4;
  int64_t v6 = v4 >> 62;
  if (!(v4 >> 62))
  {
    uint64_t v7 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_3;
    }
LABEL_96:
    return swift_bridgeObjectRelease();
  }
  while (2)
  {
    int64_t v81 = v6;
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    int64_t v6 = v81;
    if (!v7) {
      goto LABEL_96;
    }
LABEL_3:
    int64_t v84 = v6;
    uint64_t v97 = v7;
    if (qword_100718780 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1005E0ED0();
    uint64_t v9 = sub_1003461B0(v8, (uint64_t)qword_100718A30);
    swift_bridgeObjectRetain_n();
    uint64_t v93 = v9;
    unint64_t v10 = sub_1005E0EB0();
    os_log_type_t v11 = sub_1005E25C0();
    if (os_log_type_enabled((os_log_t)v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 134217984;
      if (v84)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = sub_1005E2FB0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v13 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v99[0] = v13;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v10, v11, "Found %ld mailbox(es) to be deleted.", v12, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    unint64_t v14 = sub_10058A070((uint64_t)_swiftEmptyArrayStorage);
    unint64_t v96 = v5 & 0xC000000000000001;
    swift_bridgeObjectRetain();
    uint64_t v15 = 4;
    unint64_t v95 = v5;
    do
    {
      if (v96) {
        id v16 = (id)sub_1005E2CF0();
      }
      else {
        id v16 = *(id *)(v5 + 8 * v15);
      }
      uint64_t v17 = v16;
      uint64_t v18 = v15 - 3;
      if (__OFADD__(v15 - 4, 1))
      {
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      NSString v19 = sub_1005E1BD0();
      [v17 willAccessValueForKey:v19];

      id v20 = [v17 primitiveAccount];
      if (!v20) {
        goto LABEL_23;
      }
      uint64_t v21 = v20;
      uint64_t p_attr = sub_1005E1C00();
      unint64_t v5 = v23;

      uint64_t v24 = HIBYTE(v5) & 0xF;
      if ((v5 & 0x2000000000000000) == 0) {
        uint64_t v24 = p_attr & 0xFFFFFFFFFFFFLL;
      }
      if (!v24)
      {
        swift_bridgeObjectRelease();
LABEL_23:
        uint64_t p_attr = 0;
        unint64_t v5 = 0;
      }
      NSString v25 = sub_1005E1BD0();
      [v17 didAccessValueForKey:v25];

      if (v5)
      {
        uint64_t v26 = v14;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v99[0] = v26;
        unint64_t v29 = sub_1005A0310(p_attr, v5);
        uint64_t v30 = *(void *)(v26 + 16);
        int64_t v6 = (v28 & 1) == 0;
        uint64_t v31 = v30 + v6;
        if (__OFADD__(v30, v6)) {
          goto LABEL_90;
        }
        char v32 = v28;
        if (*(void *)(v26 + 24) >= v31)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_1005A39D0();
          }
        }
        else
        {
          sub_1005A126C(v31, isUniquelyReferenced_nonNull_native);
          unint64_t v33 = sub_1005A0310(p_attr, v5);
          if ((v32 & 1) != (v34 & 1)) {
            goto LABEL_103;
          }
          unint64_t v29 = v33;
        }
        unint64_t v14 = v99[0];
        swift_bridgeObjectRelease();
        if ((v32 & 1) == 0)
        {
          *(void *)(v14 + 8 * (v29 >> 6) + 64) |= 1 << v29;
          uint64_t v35 = (uint64_t *)(*(void *)(v14 + 48) + 16 * v29);
          *uint64_t v35 = p_attr;
          v35[1] = v5;
          *(void *)(*(void *)(v14 + 56) + 8 * v29) = 0;
          uint64_t v36 = *(void *)(v14 + 16);
          uint64_t v37 = v36 + 1;
          BOOL v38 = __OFADD__(v36, 1);
          swift_bridgeObjectRetain();
          if (v38) {
            goto LABEL_93;
          }
          *(void *)(v14 + 16) = v37;
        }
        swift_bridgeObjectRetain();
        unint64_t v10 = *(void *)(v14 + 56);
        swift_bridgeObjectRelease();
        uint64_t v39 = *(void *)(v10 + 8 * v29);
        BOOL v40 = __OFADD__(v39, 1);
        uint64_t v41 = v39 + 1;
        if (v40) {
          goto LABEL_91;
        }
        *(void *)(v10 + 8 * v29) = v41;

        swift_bridgeObjectRelease();
      }
      else
      {
      }
      ++v15;
      unint64_t v5 = v95;
      unint64_t v98 = v14;
    }
    while (v18 != v97);
    swift_bridgeObjectRelease();
    int64_t v43 = 0;
    uint64_t v44 = *(void *)(v14 + 64);
    unint64_t v88 = v14 + 64;
    int64_t v6 = 1 << *(unsigned char *)(v14 + 32);
    uint64_t v45 = -1;
    if (v6 < 64) {
      uint64_t v45 = ~(-1 << v6);
    }
    unint64_t v46 = v45 & v44;
    int64_t v89 = (unint64_t)(v6 + 63) >> 6;
    *(void *)&long long v42 = 134218242;
    long long v87 = v42;
    uint64_t v86 = (char *)&type metadata for Any + 8;
    if ((v45 & v44) != 0)
    {
      do
      {
        while (1)
        {
          unint64_t v47 = __clz(__rbit64(v46));
          v46 &= v46 - 1;
          unint64_t v48 = v47 | (v43 << 6);
LABEL_59:
          uint64_t p_attr = *(void *)(*(void *)(v14 + 48) + 16 * v48 + 8);
          uint64_t v51 = *(void *)(*(void *)(v14 + 56) + 8 * v48);
          swift_bridgeObjectRetain_n();
          unint64_t v10 = sub_1005E0EB0();
          os_log_type_t v52 = sub_1005E25C0();
          if (os_log_type_enabled((os_log_t)v10, v52)) {
            break;
          }

          swift_bridgeObjectRelease_n();
          unint64_t v14 = v98;
          if (!v46) {
            goto LABEL_45;
          }
        }
        uint64_t v53 = swift_slowAlloc();
        int64_t v92 = v43;
        uint64_t v54 = v53;
        v99[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v54 = v87;
        *(void *)(v54 + 4) = v51;
        *(_WORD *)(v54 + 12) = 2082;
        swift_bridgeObjectRetain();
        sub_1005E1DF0();
        sub_1005E1F50();
        swift_bridgeObjectRelease();
        unint64_t v5 = v95;
        uint64_t v55 = sub_1005E1D00();
        unint64_t v57 = v56;
        swift_bridgeObjectRelease();
        *(void *)(v54 + 14) = sub_1005904BC(v55, v57, (uint64_t *)v99);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v10, v52, "Deleting %ld mailbox(es) for account %{public}s", (uint8_t *)v54, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        int64_t v43 = v92;
        swift_slowDealloc();

        unint64_t v14 = v98;
      }
      while (v46);
    }
LABEL_45:
    int64_t v49 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      goto LABEL_92;
    }
    if (v49 >= v89) {
      break;
    }
    int64_t v6 = *(void *)(v88 + 8 * v49);
    ++v43;
    if (v6) {
      goto LABEL_58;
    }
    int64_t v43 = v49 + 1;
    if (v49 + 1 >= v89) {
      break;
    }
    int64_t v6 = *(void *)(v88 + 8 * v43);
    if (v6) {
      goto LABEL_58;
    }
    int64_t v43 = v49 + 2;
    if (v49 + 2 >= v89) {
      break;
    }
    int64_t v6 = *(void *)(v88 + 8 * v43);
    if (v6)
    {
LABEL_58:
      unint64_t v46 = (v6 - 1) & v6;
      unint64_t v48 = __clz(__rbit64(v6)) + (v43 << 6);
      goto LABEL_59;
    }
    int64_t v50 = v49 + 3;
    if (v50 < v89)
    {
      int64_t v6 = *(void *)(v88 + 8 * v50);
      if (v6)
      {
        int64_t v43 = v50;
        goto LABEL_58;
      }
      while (1)
      {
        int64_t v43 = v50 + 1;
        if (__OFADD__(v50, 1)) {
          break;
        }
        if (v43 >= v89) {
          goto LABEL_62;
        }
        int64_t v6 = *(void *)(v88 + 8 * v43);
        ++v50;
        if (v6) {
          goto LABEL_58;
        }
      }
LABEL_94:
      __break(1u);
      continue;
    }
    break;
  }
LABEL_62:
  swift_release();
  if (v84)
  {
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_1005E2FB0();
  }
  else
  {
    uint64_t v58 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (v97 < 1)
  {
    __break(1u);
LABEL_100:
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (!v68) {
      return swift_bridgeObjectRelease();
    }
LABEL_73:
    if (v68 < 1)
    {
      __break(1u);
LABEL_103:
      uint64_t result = sub_1005E3380();
      __break(1u);
      return result;
    }
    uint64_t v69 = 0;
    while (1)
    {
      if ((v10 & 0xC000000000000001) != 0) {
        id v70 = (id)sub_1005E2CF0();
      }
      else {
        id v70 = *(id *)(v10 + 8 * v69 + 32);
      }
      os_log_type_t v71 = v70;
      NSString v72 = sub_1005E1BD0();
      [v71 willAccessValueForKey:v72];

      id v73 = [v71 primitiveAccount];
      if (v73)
      {
        char v74 = v73;
        uint64_t v75 = sub_1005E1C00();
        unint64_t v77 = v76;

        uint64_t v78 = HIBYTE(v77) & 0xF;
        if ((v77 & 0x2000000000000000) == 0) {
          uint64_t v78 = v75 & 0xFFFFFFFFFFFFLL;
        }
        if (v78) {
          goto LABEL_86;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v75 = 0;
      unint64_t v77 = 0;
LABEL_86:
      NSString v79 = sub_1005E1BD0();
      [v71 didAccessValueForKey:v79];

      if (!v77 || (char v80 = sub_100551D78(v75, v77, v85), swift_bridgeObjectRelease(), (v80 & 1) == 0)) {
        objc_msgSend(v94, *(SEL *)(p_attr + 3632), v71);
      }
      ++v69;

      if (v68 == v69) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  unint64_t v59 = 0;
  uint64_t p_attr = (uint64_t)&stru_100707FF8.attr;
  uint64_t v61 = (uint64_t)v90;
  uint64_t v60 = v91;
  do
  {
    if (v96) {
      id v62 = (id)sub_1005E2CF0();
    }
    else {
      id v62 = *(id *)(v5 + 8 * (void)v59 + 32);
    }
    uint64_t v63 = v62;
    char v64 = (void (*)(char *, uint64_t))((char *)v59 + 1);
    sub_10053C964(v59, v58);
    uint64_t v65 = sub_10000566C(&qword_100718A58);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v61, 1, 1, v65);
    id v66 = v94;
    sub_10053D614((uint64_t)v63, v61, v60);
    sub_100007A48(v61, &qword_100718A60);
    [v66 deleteObject:v63];
    sub_10053B32C();

    unint64_t v59 = v64;
  }
  while ((void (*)(char *, uint64_t))v97 != v64);
  swift_bridgeObjectRelease_n();
  uint64_t v67 = sub_100539798();
  swift_beginAccess();
  unint64_t v10 = *(void *)(v67 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v10 >> 62) {
    goto LABEL_100;
  }
  uint64_t v68 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v68) {
    goto LABEL_73;
  }
  return swift_bridgeObjectRelease();
}

NSObject *sub_10053C964(void (*a1)(char *, uint64_t), uint64_t a2)
{
  uint64_t v70 = a2;
  os_log_type_t v71 = a1;
  uint64_t v3 = sub_1005E07F0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  int64_t v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v66 - v7;
  __chkstk_darwin();
  unint64_t v10 = (char *)&v66 - v9;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v66 - v11;
  __chkstk_darwin();
  unint64_t v14 = (char *)&v66 - v13;
  id v15 = [v2 objectID];
  id v16 = [v15 URIRepresentation];

  NSString v72 = v14;
  sub_1005E07C0();

  unint64_t v17 = sub_100578E24();
  int v19 = v18;
  uint64_t v20 = sub_100578A00(v17);
  if (v17)
  {
    if (v21)
    {
      uint64_t v69 = v20;
      uint64_t v12 = v72;
      if (qword_100718780 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_1005E0ED0();
      sub_1003461B0(v22, (uint64_t)qword_100718A30);
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v12, v3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_1005E0EB0();
      int v24 = sub_1005E25C0();
      if (os_log_type_enabled(v23, (os_log_type_t)v24))
      {
        int v67 = v24;
        os_log_t v68 = v23;
        uint64_t v25 = swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        uint64_t v75 = v66;
        *(_DWORD *)uint64_t v25 = 134219267;
        if (!__OFADD__(v71, 1))
        {
          uint64_t v73 = (uint64_t)v71 + 1;
          sub_1005E2960();
          *(_WORD *)(v25 + 12) = 2048;
          uint64_t v73 = v70;
          sub_1005E2960();
          *(_WORD *)(v25 + 22) = 2160;
          uint64_t v73 = 0x786F626C69616DLL;
          sub_1005E2960();
          *(_WORD *)(v25 + 32) = 2085;
          uint64_t v73 = v17;
          int v74 = v19;
          swift_bridgeObjectRetain();
          uint64_t v26 = sub_1005E1CC0();
          uint64_t v73 = sub_1005904BC(v26, v27, &v75);
          sub_1005E2960();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v25 + 42) = 2082;
          sub_10053E638();
          uint64_t v28 = sub_1005E3230();
          uint64_t v73 = sub_1005904BC(v28, v29, &v75);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          os_log_type_t v71 = *(void (**)(char *, uint64_t))(v4 + 8);
          v71(v6, v3);
          *(_WORD *)(v25 + 52) = 2080;
          swift_bridgeObjectRetain();
          sub_10051B67C(8);
          swift_bridgeObjectRelease();
          uint64_t v30 = sub_1005E1D00();
          unint64_t v32 = v31;
          swift_bridgeObjectRelease();
          uint64_t v73 = sub_1005904BC(v30, v32, &v75);
          sub_1005E2960();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          os_log_t v33 = v68;
          _os_log_impl((void *)&_mh_execute_header, v68, (os_log_type_t)v67, "[%ld/%ld] Marking mailbox '%{sensitive,mask.mailbox}s' %{public}s for account '%s' as deleted.", (uint8_t *)v25, 0x3Eu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          char v34 = v72;
          uint64_t v35 = v3;
          return ((uint64_t (*)(char *, uint64_t))v71)(v34, v35);
        }
        __break(1u);
        goto LABEL_31;
      }
      swift_bridgeObjectRelease_n();

      unint64_t v56 = *(void (**)(char *, uint64_t))(v4 + 8);
      v56(v6, v3);
      goto LABEL_27;
    }
    uint64_t v12 = v72;
    if (qword_100718780 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_1005E0ED0();
    sub_1003461B0(v46, (uint64_t)qword_100718A30);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v12, v3);
    swift_bridgeObjectRetain();
    unint64_t v47 = sub_1005E0EB0();
    os_log_type_t v48 = sub_1005E25C0();
    if (!os_log_type_enabled(v47, v48))
    {

      unint64_t v56 = *(void (**)(char *, uint64_t))(v4 + 8);
      v56(v8, v3);
LABEL_27:
      swift_bridgeObjectRelease_n();
      return ((uint64_t (*)(char *, uint64_t))v56)(v12, v3);
    }
    uint64_t v69 = v3;
    uint64_t v49 = swift_slowAlloc();
    uint64_t result = swift_slowAlloc();
    os_log_t v68 = result;
    uint64_t v75 = (uint64_t)result;
    *(_DWORD *)uint64_t v49 = 134219011;
    if (!__OFADD__(v71, 1))
    {
      uint64_t v73 = (uint64_t)v71 + 1;
      sub_1005E2960();
      *(_WORD *)(v49 + 12) = 2048;
      uint64_t v73 = v70;
      sub_1005E2960();
      *(_WORD *)(v49 + 22) = 2160;
      uint64_t v73 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v49 + 32) = 2085;
      uint64_t v73 = v17;
      int v74 = v19;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1005E1CC0();
      uint64_t v73 = sub_1005904BC(v50, v51, &v75);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 42) = 2082;
      sub_10053E638();
      uint64_t v52 = v69;
      uint64_t v53 = sub_1005E3230();
      uint64_t v73 = sub_1005904BC(v53, v54, &v75);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      uint64_t v55 = *(void (**)(char *, uint64_t))(v4 + 8);
      v55(v8, v52);
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "[%ld/%ld] Marking mailbox '%{sensitive,mask.mailbox}s' %{public}s as deleted.", (uint8_t *)v49, 0x34u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return ((uint64_t (*)(char *, uint64_t))v55)(v72, v52);
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v21)
  {
    if (qword_100718780 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_1005E0ED0();
    sub_1003461B0(v36, (uint64_t)qword_100718A30);
    uint64_t v12 = v72;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v10, v72, v3);
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1005E0EB0();
    int v38 = sub_1005E25C0();
    if (!os_log_type_enabled(v37, (os_log_type_t)v38))
    {
      swift_bridgeObjectRelease_n();

      unint64_t v56 = *(void (**)(char *, uint64_t))(v4 + 8);
      v56(v10, v3);
      return ((uint64_t (*)(char *, uint64_t))v56)(v12, v3);
    }
    LODWORD(v69) = v38;
    uint64_t v39 = swift_slowAlloc();
    uint64_t result = swift_slowAlloc();
    os_log_t v68 = result;
    uint64_t v73 = (uint64_t)result;
    *(_DWORD *)uint64_t v39 = 134218754;
    if (!__OFADD__(v71, 1))
    {
      uint64_t v75 = (uint64_t)v71 + 1;
      sub_1005E2960();
      *(_WORD *)(v39 + 12) = 2048;
      uint64_t v75 = v70;
      sub_1005E2960();
      *(_WORD *)(v39 + 22) = 2082;
      sub_10053E638();
      uint64_t v41 = sub_1005E3230();
      uint64_t v75 = sub_1005904BC(v41, v42, &v73);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      os_log_type_t v71 = *(void (**)(char *, uint64_t))(v4 + 8);
      v71(v10, v3);
      *(_WORD *)(v39 + 32) = 2080;
      uint64_t v70 = v39 + 34;
      swift_bridgeObjectRetain();
      sub_10051B67C(8);
      swift_bridgeObjectRelease();
      uint64_t v43 = sub_1005E1D00();
      unint64_t v45 = v44;
      swift_bridgeObjectRelease();
      uint64_t v75 = sub_1005904BC(v43, v45, &v73);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v37, (os_log_type_t)v69, "[%ld/%ld] Marking mailbox %{public}s for account '%s' as deleted.", (uint8_t *)v39, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      char v34 = v72;
      uint64_t v35 = v3;
      return ((uint64_t (*)(char *, uint64_t))v71)(v34, v35);
    }
    __break(1u);
    goto LABEL_33;
  }
  if (qword_100718780 != -1) {
LABEL_31:
  }
    swift_once();
  uint64_t v57 = sub_1005E0ED0();
  sub_1003461B0(v57, (uint64_t)qword_100718A30);
  uint64_t v58 = v72;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v12, v72, v3);
  unint64_t v59 = sub_1005E0EB0();
  os_log_type_t v60 = sub_1005E25C0();
  if (!os_log_type_enabled(v59, v60))
  {

    uint64_t v65 = *(void (**)(char *, uint64_t))(v4 + 8);
    v65(v12, v3);
    return ((uint64_t (*)(char *, uint64_t))v65)(v58, v3);
  }
  uint64_t v61 = swift_slowAlloc();
  uint64_t result = swift_slowAlloc();
  uint64_t v73 = (uint64_t)result;
  *(_DWORD *)uint64_t v61 = 134218498;
  if (!__OFADD__(v71, 1))
  {
    uint64_t v75 = (uint64_t)v71 + 1;
    sub_1005E2960();
    *(_WORD *)(v61 + 12) = 2048;
    uint64_t v75 = v70;
    sub_1005E2960();
    *(_WORD *)(v61 + 22) = 2082;
    sub_10053E638();
    uint64_t v62 = sub_1005E3230();
    uint64_t v75 = sub_1005904BC(v62, v63, &v73);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    char v64 = *(void (**)(char *, uint64_t))(v4 + 8);
    v64(v12, v3);
    _os_log_impl((void *)&_mh_execute_header, v59, v60, "[%ld/%ld] Marking mailbox %{public}s as deleted.", (uint8_t *)v61, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return ((uint64_t (*)(char *, uint64_t))v64)(v72, v3);
  }
LABEL_34:
  __break(1u);
  return result;
}

void sub_10053D614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v106 = a3;
  uint64_t v102 = a1;
  uint64_t v99 = sub_1005E0970();
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin();
  uint64_t v97 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  int64_t v6 = (char **)((char *)&v97 - v5);
  uint64_t v104 = sub_10000566C((uint64_t *)&unk_100719790);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100718A50);
  __chkstk_darwin();
  unint64_t v10 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000566C(&qword_100718A58);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  unint64_t v14 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v16 = (char *)&v97 - v15;
  sub_10000566C(&qword_100718A60);
  __chkstk_darwin();
  int v18 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v97 - v19;
  unint64_t v115 = 0;
  unint64_t v116 = 0;
  uint64_t v110 = a2;
  sub_10053E868(a2, (uint64_t)&v97 - v19);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v108 = v12 + 48;
  uint64_t v109 = v11;
  long long v107 = v21;
  id v22 = 0;
  if (v21(v20, 1, v11) == 1) {
    goto LABEL_5;
  }
  sub_10053E8D0((uint64_t)v20, (uint64_t)v16);
  unint64_t v23 = sub_10053E690();
  if ((v23 & 0x100000000) == 0)
  {
    LODWORD(v114) = v23;
    MessageIdentifierSet.ranges.getter((uint64_t)v10);
    int v24 = (unint64_t)sub_10053E79C() >> 32;
    char v26 = v25;
    sub_100007A48((uint64_t)v10, &qword_100718A50);
    if (v26) {
      goto LABEL_87;
    }
    int v112 = v24;
    sub_10053E938();
    static MessageIdentifier.... infix(_:_:)();
    Range<>.init<A>(_:)((uint64_t)v111, (uint64_t)&type metadata for UID);
    v111[0] = v27;
    sub_10053E98C();
    sub_1005E36A0();
    id v22 = sub_1005C207C();
    sub_100007A48((uint64_t)v8, (uint64_t *)&unk_100719790);
    sub_100007A48((uint64_t)v16, &qword_100718A58);
LABEL_5:
    unsigned __int16 v101 = v6;
    id v100 = v22;
    uint64_t v28 = (void *)sub_10053E490((uint64_t)v22);
    uint64_t v29 = (uint64_t)[v28 count];
    if (v29 >= 1)
    {
      uint64_t v30 = v29;
      swift_beginAccess();
      swift_beginAccess();
      unint64_t v31 = 0;
      int64_t v6 = &selRef_persistentStoreCoordinator;
      *(void *)&long long v32 = 134218240;
      long long v103 = v32;
      do
      {
        id v33 = [v28 objectAtIndexedSubscript:v31];
        sub_1005E2A70();
        swift_unknownObjectRelease();
        _s14descr1006B9AE9V7MessageCMa();
        if (!swift_dynamicCast()) {
          goto LABEL_88;
        }
        char v34 = v114;
        sub_10053E868(v110, (uint64_t)v18);
        if (v107(v18, 1, v109) == 1)
        {
          sub_100007A48((uint64_t)v18, &qword_100718A60);
        }
        else
        {
          sub_10053E8D0((uint64_t)v18, (uint64_t)v14);
          NSString v35 = sub_1005E1BD0();
          objc_msgSend(v34, v6[111], v35);

          id v36 = [v34 primitiveUid];
          if (v36)
          {
            uint64_t v37 = v36;
            int v38 = (char *)[v36 longLongValue];

            BOOL v39 = (unint64_t)(v38 - 0x100000000) < 0xFFFFFFFF00000001;
            if ((unint64_t)(v38 - 0x100000000) < 0xFFFFFFFF00000001) {
              LODWORD(v38) = 0;
            }
          }
          else
          {
            LODWORD(v38) = 0;
            BOOL v39 = 1;
          }
          NSString v40 = sub_1005E1BD0();
          [v34 didAccessValueForKey:v40];

          if (v39)
          {
            sub_100007A48((uint64_t)v14, &qword_100718A58);
            int64_t v6 = &selRef_persistentStoreCoordinator;
          }
          else
          {
            LODWORD(v111[0]) = v38;
            char v41 = MessageIdentifierSet.contains(_:)();
            sub_100007A48((uint64_t)v14, &qword_100718A58);
            int64_t v6 = &selRef_persistentStoreCoordinator;
            if ((v41 & 1) == 0) {
              goto LABEL_8;
            }
          }
        }
        [v34 setMailbox:0];
        NSString v42 = sub_1005E1BD0();
        objc_msgSend(v34, v6[111], v42);

        id v43 = [v34 primitiveIndexGeneration];
        if (v43)
        {
          unint64_t v44 = v43;
          id v45 = [v43 longLongValue];
        }
        else
        {
          id v45 = 0;
        }
        NSString v46 = sub_1005E1BD0();
        [v34 didAccessValueForKey:v46];

        if (v45)
        {
          unint64_t v47 = v115 + 1;
          if (__OFADD__(v115, 1)) {
            goto LABEL_74;
          }
          ++v115;
          BOOL v64 = __OFADD__(v116, v47);
          unint64_t v48 = v116 + v47;
          if (v64) {
            goto LABEL_73;
          }
        }
        else
        {
          [v105 deleteObject:v34];
          unint64_t v49 = v116 + 1;
          if (__OFADD__(v116, 1)) {
            goto LABEL_75;
          }
          ++v116;
          unint64_t v48 = v49 + v115;
          if (__OFADD__(v49, v115))
          {
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
            goto LABEL_76;
          }
        }
        if (0x7EB9037BC7F43BC3 * v48 + 0x9E89F287C7A4FLL <= 0x13D13E50F8F49ELL)
        {
          int64_t v50 = static MonotonicTime.now()();
          unint64_t v51 = *(void **)(v106 + 16);
          if ([v51 hasChanges])
          {
            if (sub_10053B710()) {
              goto LABEL_91;
            }
            uint64_t v52 = *(void *)(v106 + 48);
            uint64_t v53 = v50 - v52;
            if (v50 >= v52)
            {
              if (__OFSUB__(v50, v52)) {
                goto LABEL_79;
              }
            }
            else
            {
              if (__OFSUB__(v52, v50))
              {
                __break(1u);
LABEL_79:
                __break(1u);
LABEL_80:
                __break(1u);
                goto LABEL_81;
              }
              uint64_t v53 = v50 - v52;
              if (__OFSUB__(0, v52 - v50)) {
                goto LABEL_80;
              }
            }
            if ((double)v53 / 1000000000.0 > 4.0)
            {
LABEL_91:
              if ([v51 hasChanges])
              {
                uint64_t v54 = v106;
                uint64_t v55 = swift_retain();
                sub_10053BB44(v55, v54);
                swift_release();
                *(void *)(v54 + 56) = 0;
                swift_unknownObjectRelease();
              }
            }
          }
          if (qword_100718780 != -1) {
            swift_once();
          }
          uint64_t v56 = sub_1005E0ED0();
          sub_1003461B0(v56, (uint64_t)qword_100718A30);
          uint64_t v57 = sub_1005E0EB0();
          os_log_type_t v58 = sub_1005E25C0();
          if (os_log_type_enabled(v57, v58))
          {
            uint64_t v59 = swift_slowAlloc();
            *(_DWORD *)uint64_t v59 = v103;
            *(void *)(v59 + 4) = v116;
            *(_WORD *)(v59 + 12) = 2048;
            *(void *)(v59 + 14) = v115;
            _os_log_impl((void *)&_mh_execute_header, v57, v58, "  Did delete %ld message(s), did mark %ld message(s) for removal from Spotlight.", (uint8_t *)v59, 0x16u);
            int64_t v6 = &selRef_persistentStoreCoordinator;
            swift_slowDealloc();
          }
        }
LABEL_8:
        ++v31;
      }
      while (v30 != v31);
    }

    swift_beginAccess();
    unint64_t v60 = v116;
    swift_beginAccess();
    unint64_t v31 = v60 + v115;
    if (__OFADD__(v60, v115))
    {
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    if (0x7EB9037BC7F43BC3 * v31 + 0x9E89F287C7A4FLL < 0x13D13E50F8F49FLL)
    {
LABEL_63:
      int64_t v6 = v101;
      if (qword_100718780 == -1)
      {
LABEL_64:
        uint64_t v74 = sub_1005E0ED0();
        sub_1003461B0(v74, (uint64_t)qword_100718A30);
        uint64_t v75 = sub_1005E0EB0();
        os_log_type_t v76 = sub_1005E25C0();
        BOOL v77 = os_log_type_enabled(v75, v76);
        uint64_t v78 = v100;
        if (v77)
        {
          NSString v79 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)NSString v79 = 134217984;
          unint64_t v113 = v31;
          sub_1005E2960();
          _os_log_impl((void *)&_mh_execute_header, v75, v76, "Found %ld messages.", v79, 0xCu);
          swift_slowDealloc();
        }

        uint64_t v81 = sub_100578A00(v80);
        if (!v82) {
          goto LABEL_72;
        }
        id v83 = sub_10053942C(v81, v82);
        swift_bridgeObjectRelease();
        id v84 = v83;
        unint64_t v113 = sub_100578CC4();
        sub_1005E0960();
        uint64_t v85 = v98;
        uint64_t v86 = v97;
        uint64_t v87 = v99;
        (*(void (**)(char *, char **, uint64_t))(v98 + 16))(v97, v6, v99);
        sub_1005E08F0();
        double v89 = round(v88 / 21600.0);
        uint64_t v90 = *(void (**)(char *, uint64_t))(v85 + 8);
        v90(v86, v87);
        if ((~*(void *)&v89 & 0x7FF0000000000000) == 0)
        {
LABEL_71:
          v90((char *)v6, v87);
          NSString v91 = sub_1005E1BD0();
          [v84 willChangeValueForKey:v91];

          uint64_t v92 = sub_1005BA900();
          unint64_t v94 = v93;
          Class isa = sub_1005E0890().super.isa;
          sub_1000094D4(v92, v94);
          [v84 setPrimitiveDataUsage:isa];

          NSString v96 = sub_1005E1BD0();
          [v84 didChangeValueForKey:v96];

          swift_bridgeObjectRelease();
LABEL_72:

          return;
        }
        if (v89 <= -9.22337204e18)
        {
          __break(1u);
        }
        else if (v89 < 9.22337204e18)
        {
          sub_1005BB664((uint64_t)v89, &v113);
          goto LABEL_71;
        }
        __break(1u);
        goto LABEL_84;
      }
LABEL_77:
      swift_once();
      goto LABEL_64;
    }
    int64_t v61 = static MonotonicTime.now()();
    uint64_t v62 = *(void **)(v106 + 16);
    if (![v62 hasChanges]) {
      goto LABEL_59;
    }
    if (sub_10053B710()) {
      goto LABEL_57;
    }
    uint64_t v63 = *(void *)(v106 + 48);
    BOOL v64 = __OFSUB__(v61, v63);
    uint64_t v65 = v61 - v63;
    if (v61 < v63)
    {
      if (__OFSUB__(v63, v61))
      {
LABEL_84:
        __break(1u);
        goto LABEL_85;
      }
      BOOL v64 = __OFSUB__(0, v63 - v61);
      uint64_t v65 = v61 - v63;
      if (!v64)
      {
LABEL_56:
        if ((double)v65 / 1000000000.0 > 4.0)
        {
LABEL_57:
          if ([v62 hasChanges])
          {
            uint64_t v66 = v106;
            uint64_t v67 = swift_retain();
            sub_10053BB44(v67, v66);
            swift_release();
            *(void *)(v66 + 56) = 0;
            swift_unknownObjectRelease();
          }
        }
LABEL_59:
        if (qword_100718780 != -1) {
LABEL_81:
        }
          swift_once();
        uint64_t v68 = sub_1005E0ED0();
        sub_1003461B0(v68, (uint64_t)qword_100718A30);
        unint64_t v70 = v115;
        unint64_t v69 = v116;
        os_log_type_t v71 = sub_1005E0EB0();
        os_log_type_t v72 = sub_1005E25C0();
        if (os_log_type_enabled(v71, v72))
        {
          uint64_t v73 = swift_slowAlloc();
          *(_DWORD *)uint64_t v73 = 134218240;
          unint64_t v113 = v69;
          sub_1005E2960();
          *(_WORD *)(v73 + 12) = 2048;
          unint64_t v113 = v70;
          sub_1005E2960();
          _os_log_impl((void *)&_mh_execute_header, v71, v72, "  Did delete %ld message(s), did mark %ld message(s) for removal from Spotlight.", (uint8_t *)v73, 0x16u);
          swift_slowDealloc();
        }

        goto LABEL_63;
      }
      __break(1u);
    }
    if (v64)
    {
LABEL_85:
      __break(1u);
      goto LABEL_86;
    }
    goto LABEL_56;
  }
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  sub_1005E2F20();
  __break(1u);
}

uint64_t sub_10053E490(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v5 = sub_1005E1BD0();
  id v6 = [v4 initWithEntityName:v5];

  sub_100554DF8(v2);
  if (a1) {
    [v6 appendPredicate:a1];
  }
  [v6 setReturnsObjectsAsFaults:0];
  Class isa = sub_1005E20B0().super.isa;
  [v6 setRelationshipKeyPathsForPrefetching:isa];

  [v6 setFetchBatchSize:1237];
  id v14 = 0;
  id v8 = v6;
  id v9 = [v8 execute:&v14];
  if (v9)
  {
    id v10 = v9;
    id v11 = v14;

    return (uint64_t)v10;
  }
  else
  {
    id v13 = v14;
    sub_1005E06F0();

    swift_willThrow();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

unint64_t sub_10053E638()
{
  unint64_t result = qword_100718A48;
  if (!qword_100718A48)
  {
    sub_1005E07F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718A48);
  }
  return result;
}

unint64_t sub_10053E690()
{
  sub_10000566C(&qword_100718A50);
  __chkstk_darwin();
  unint64_t v1 = (char *)v6 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C((uint64_t *)&unk_100719790);
  MessageIdentifierSet.ranges.getter((uint64_t)v1);
  sub_10000566C(&qword_100718A78);
  uint64_t v2 = sub_1005E35B0();
  uint64_t v3 = sub_1005E35E0();
  if (v2 == v3)
  {
    uint64_t v4 = 0;
  }
  else
  {
    MessageIdentifierSet.RangeView.subscript.getter();
    uint64_t v4 = v6[2];
  }
  sub_100007A48((uint64_t)v1, &qword_100718A50);
  return v4 | ((unint64_t)(v2 == v3) << 32);
}

uint64_t sub_10053E79C()
{
  sub_10000566C(&qword_100718A78);
  uint64_t v0 = sub_1005E35B0();
  if (v0 == sub_1005E35E0()) {
    return 0;
  }
  uint64_t result = sub_1005E35E0();
  uint64_t v2 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v3 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v2 < v3 || v2 >= result) {
    goto LABEL_9;
  }
  sub_10000566C(&qword_100718A50);
  MessageIdentifierSet.RangeView.subscript.getter();
  return v4;
}

uint64_t sub_10053E868(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100718A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10053E8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100718A58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10053E938()
{
  unint64_t result = qword_100718A68;
  if (!qword_100718A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718A68);
  }
  return result;
}

unint64_t sub_10053E98C()
{
  unint64_t result = qword_100718A70;
  if (!qword_100718A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718A70);
  }
  return result;
}

uint64_t sub_10053E9E0(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = result;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1005E2FB0();
  unint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v5;
  }
  if (v5 < 0) {
    uint64_t v6 = v3;
  }
  if (v3) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1005E2FB0();
    unint64_t result = swift_bridgeObjectRelease();
    if (v9 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1005E2FB0();
    unint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    sub_10053EB74();
    Swift::Int v10 = 0;
    do
    {
      Swift::Int v11 = v10 + 1;
      sub_1005E2CD0(v10);
      Swift::Int v10 = v11;
    }
    while (v7 != v11);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1005E2FC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

unint64_t sub_10053EB74()
{
  unint64_t result = qword_100718A80;
  if (!qword_100718A80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100718A80);
  }
  return result;
}

uint64_t sub_10053EBB4()
{
  uint64_t v0 = sub_1005E07F0();
  sub_10034E5B4(v0, qword_100718A88);
  uint64_t v1 = sub_1003461B0(v0, (uint64_t)qword_100718A88);
  return sub_10053EC00(v1);
}

uint64_t sub_10053EC00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v1 = sub_1005E0710();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1005E07F0();
  uint64_t v5 = *(void *)(v24 - 8);
  uint64_t v6 = __chkstk_darwin(v24);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  Swift::Int v10 = (char *)&v22 - v9;
  id v11 = [objc_allocWithZone((Class)NSFileManager) init];
  v26[0] = 0;
  id v12 = [v11 URLForDirectory:5 inDomain:1 appropriateForURL:0 create:1 error:v26];

  id v13 = v26[0];
  if (v12)
  {
    sub_1005E07C0();
    id v14 = v13;

    v26[0] = (id)1818845517;
    v26[1] = (id)0xE400000000000000;
    unsigned int v23 = enum case for URL.DirectoryHint.isDirectory(_:);
    id v22 = *(void (**)(char *))(v2 + 104);
    v22(v4);
    sub_10053EF64();
    sub_1005E07E0();
    uint64_t v15 = v10;
    id v16 = *(void (**)(char *, uint64_t))(v2 + 8);
    v16(v4, v1);
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    int v18 = v8;
    uint64_t v19 = v24;
    v17(v18, v24);
    strcpy((char *)v26, "SearchIndexer");
    HIWORD(v26[1]) = -4864;
    ((void (*)(char *, void, uint64_t))v22)(v4, v23, v1);
    sub_1005E07E0();
    v16(v4, v1);
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(char *, uint64_t))v17)(v15, v19);
  }
  else
  {
    id v21 = v26[0];
    sub_1005E06F0();

    swift_willThrow();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

unint64_t sub_10053EF64()
{
  unint64_t result = qword_100718AA0;
  if (!qword_100718AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718AA0);
  }
  return result;
}

uint64_t sub_10053EFB8()
{
  uint64_t v0 = sub_1005E0ED0();
  sub_10034E5B4(v0, qword_100718AA8);
  sub_1003461B0(v0, (uint64_t)qword_100718AA8);
  return sub_1005E0EC0();
}

uint64_t sub_10053F03C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1005E1680();
  uint64_t v47 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1005E16C0();
  uint64_t v46 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  id v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t *)(v5 + OBJC_IVAR____TtC17IMAPSearchIndexer17DiskSpaceObserver_update);
  *uint64_t v15 = 0;
  v15[1] = 0;
  uint64_t v16 = v5 + OBJC_IVAR____TtC17IMAPSearchIndexer17DiskSpaceObserver_lastValue;
  *(void *)uint64_t v16 = 0;
  *(void *)(v16 + 8) = 0;
  *(unsigned char *)(v16 + 16) = 1;
  uint64_t v17 = v5 + OBJC_IVAR____TtC17IMAPSearchIndexer17DiskSpaceObserver_volume;
  uint64_t v18 = sub_1005E07F0();
  uint64_t v38 = *(void *)(v18 - 8);
  uint64_t v39 = v18;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v38 + 16);
  uint64_t v41 = a1;
  v19(v17, a1);
  *(void *)(v5 + OBJC_IVAR____TtC17IMAPSearchIndexer17DiskSpaceObserver_queue) = a2;
  uint64_t v20 = *v15;
  *uint64_t v15 = a3;
  v15[1] = a4;
  id v21 = a2;
  uint64_t v40 = a4;
  swift_retain();
  sub_10003E960(v20);
  uint64_t v22 = qword_1007187A0;
  id v23 = v21;
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v24 = (uint64_t (*)(uint64_t, void, uint64_t, id))off_100718AC8;
  if (qword_100718798 != -1) {
    swift_once();
  }
  id v25 = (id)v24(qword_100718AC0, 0, 98304, v23);
  char v26 = v23;
  id v37 = v23;
  id v27 = v25;

  *(void *)(v5 + OBJC_IVAR____TtC17IMAPSearchIndexer17DiskSpaceObserver_source) = v27;
  uint64_t v36 = OBJC_IVAR____TtC17IMAPSearchIndexer17DiskSpaceObserver_source;
  uint64_t v28 = swift_allocObject();
  swift_weakInit();
  uint64_t v55 = sub_100540048;
  uint64_t v56 = v28;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v52 = 1107296256;
  unint64_t v48 = &v53;
  uint64_t v53 = sub_10046A1E4;
  uint64_t v54 = &unk_1006FCC28;
  uint64_t v29 = _Block_copy(&aBlock);
  swift_retain();
  sub_1005E16A0();
  int64_t v50 = &_swiftEmptyArrayStorage;
  unint64_t v45 = sub_10054007C();
  uint64_t v44 = sub_10000566C((uint64_t *)&unk_100719780);
  unint64_t v43 = sub_1005400D4();
  sub_1005E2AD0();
  unint64_t v42 = sub_100540130();
  sub_1005E2690();
  _Block_release(v29);
  uint64_t v47 = *(void *)(v47 + 8);
  ((void (*)(char *, uint64_t))v47)(v12, v10);
  uint64_t v46 = *(void *)(v46 + 8);
  ((void (*)(char *, uint64_t))v46)(v14, v49);
  swift_release();
  swift_release();
  v35[1] = *(void *)(v5 + v36);
  uint64_t v30 = swift_allocObject();
  swift_weakInit();
  uint64_t v55 = sub_100540048;
  uint64_t v56 = v30;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v52 = 1107296256;
  uint64_t v53 = sub_10046A1E4;
  uint64_t v54 = &unk_1006FCC50;
  unint64_t v31 = _Block_copy(&aBlock);
  swift_retain();
  sub_1005E16A0();
  int64_t v50 = &_swiftEmptyArrayStorage;
  sub_1005E2AD0();
  sub_1005E2660();
  _Block_release(v31);
  ((void (*)(char *, uint64_t))v47)(v12, v10);
  ((void (*)(char *, uint64_t))v46)(v14, v49);
  swift_release();
  swift_release();
  uint64_t v32 = swift_allocObject();
  swift_weakInit();
  uint64_t v55 = sub_100540170;
  uint64_t v56 = v32;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v52 = 1107296256;
  uint64_t v53 = sub_10046A1E4;
  uint64_t v54 = &unk_1006FCC78;
  id v33 = _Block_copy(&aBlock);
  swift_retain();
  sub_1005E16A0();
  int64_t v50 = &_swiftEmptyArrayStorage;
  sub_1005E2AD0();
  sub_1005E2680();
  _Block_release(v33);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v41, v39);
  ((void (*)(char *, uint64_t))v47)(v12, v10);
  ((void (*)(char *, uint64_t))v46)(v14, v49);
  swift_release();
  swift_release();
  return v5;
}

uint64_t sub_10053F6FC()
{
  uint64_t v1 = sub_1005E07F0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E1850();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC17IMAPSearchIndexer17DiskSpaceObserver_queue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  id v10 = v9;
  LOBYTE(v9) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + OBJC_IVAR____TtC17IMAPSearchIndexer17DiskSpaceObserver_volume, v1);
    uint64_t result = sub_100540178(v4);
    uint64_t v13 = result;
    uint64_t v14 = v12;
    uint64_t v15 = v0 + OBJC_IVAR____TtC17IMAPSearchIndexer17DiskSpaceObserver_lastValue;
    if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC17IMAPSearchIndexer17DiskSpaceObserver_lastValue + 16) & 1) != 0
      || (result == *(void *)v15 ? (BOOL v16 = v12 == *(void *)(v15 + 8)) : (BOOL v16 = 0), !v16))
    {
      *(void *)uint64_t v15 = result;
      *(void *)(v15 + 8) = v12;
      *(unsigned char *)(v15 + 16) = 0;
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + OBJC_IVAR____TtC17IMAPSearchIndexer17DiskSpaceObserver_update);
      if (v17)
      {
        swift_retain();
        v17(v13, v14);
        return sub_10003E960((uint64_t)v17);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10053F928()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10053F6FC();
    return swift_release();
  }
  return result;
}

uint64_t sub_10053F980()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)(result + OBJC_IVAR____TtC17IMAPSearchIndexer17DiskSpaceObserver_update);
    uint64_t v2 = *(void *)(result + OBJC_IVAR____TtC17IMAPSearchIndexer17DiskSpaceObserver_update);
    *uint64_t v1 = 0;
    v1[1] = 0;
    sub_10003E960(v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_10053F9EC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17IMAPSearchIndexer17DiskSpaceObserver_volume;
  uint64_t v2 = sub_1005E07F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  sub_10003E960(*(void *)(v0 + OBJC_IVAR____TtC17IMAPSearchIndexer17DiskSpaceObserver_update));
  return swift_deallocClassInstance();
}

uint64_t sub_10053FAC0()
{
  return type metadata accessor for DiskSpaceObserver();
}

uint64_t type metadata accessor for DiskSpaceObserver()
{
  uint64_t result = qword_100718B10;
  if (!qword_100718B10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10053FB14()
{
  uint64_t result = sub_1005E07F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiskSpaceObserver.AvailableSpace()
{
  return &type metadata for DiskSpaceObserver.AvailableSpace;
}

void *sub_10053FBDC(uint64_t a1)
{
  return sub_1003508C0(a1, "_dispatch_source_type_vfs", &qword_100718AC0);
}

void *sub_10053FBF0(uint64_t a1)
{
  return sub_1003508C0(a1, "dispatch_source_create", &off_100718AC8);
}

uint64_t sub_10053FC04(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  id v25 = a2;
  uint64_t v29 = a1;
  uint64_t v4 = sub_10000566C(&qword_100718BB8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1005E0680();
  uint64_t v7 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005E07F0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v24 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  BOOL v16 = (char *)&v24 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v24 - v17;
  sub_10000566C(&qword_100718BC0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6670;
  *(void *)(inited + 32) = NSURLVolumeURLKey;
  uint64_t v20 = NSURLVolumeURLKey;
  sub_1005564E0(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1005E0740();
  swift_bridgeObjectRelease();
  sub_1005E0670();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
  {
    __break(1u);
    swift_errorRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v24, v29, v10);
    unint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    sub_1005E2C80(38);
    swift_bridgeObjectRelease();
    unint64_t v30 = 0xD000000000000023;
    unint64_t v31 = 0x80000001005EC190;
    v32._countAndFlagsBits = sub_1005E07D0();
    sub_1005E1E30(v32);
    swift_bridgeObjectRelease();
    v33._countAndFlagsBits = 39;
    v33._object = (void *)0xE100000000000000;
    sub_1005E1E30(v33);
    uint64_t result = sub_1005E2F20();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v6, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v18, v10);
    type metadata accessor for DiskSpaceObserver();
    uint64_t v21 = swift_allocObject();
    sub_10053F03C((uint64_t)v16, v25, v26, v27);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v22(v29, v10);
    v22((uint64_t)v18, v10);
    return v21;
  }
  return result;
}

uint64_t sub_100540010()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100540048()
{
  return sub_10053F928();
}

uint64_t sub_100540064(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100540074()
{
  return swift_release();
}

unint64_t sub_10054007C()
{
  unint64_t result = qword_1007189F8;
  if (!qword_1007189F8)
  {
    sub_1005E1680();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007189F8);
  }
  return result;
}

unint64_t sub_1005400D4()
{
  unint64_t result = qword_100718A00;
  if (!qword_100718A00)
  {
    sub_10000744C((uint64_t *)&unk_100719780);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718A00);
  }
  return result;
}

unint64_t sub_100540130()
{
  unint64_t result = qword_100718BC8;
  if (!qword_100718BC8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100718BC8);
  }
  return result;
}

uint64_t sub_100540170()
{
  return sub_10053F980();
}

uint64_t sub_100540178(char *a1)
{
  uint64_t v2 = sub_1005E07F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  uint64_t v57 = v3;
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v55 = (char *)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v50 - v6;
  uint64_t v8 = sub_10000566C(&qword_100718BD0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005E0680();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100718BC0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6690;
  *(void *)(inited + 32) = NSURLVolumeAvailableCapacityKey;
  *(void *)(inited + 40) = NSURLVolumeAvailableCapacityForOpportunisticUsageKey;
  BOOL v16 = NSURLVolumeAvailableCapacityKey;
  uint64_t v17 = NSURLVolumeAvailableCapacityForOpportunisticUsageKey;
  sub_1005564E0(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  uint64_t v18 = a1;
  sub_1005E0740();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100540910((uint64_t)v10);
    uint64_t v19 = a1;
LABEL_3:
    uint64_t v20 = v56;
LABEL_4:
    uint64_t v21 = v57;
    uint64_t v22 = v55;
    if (qword_100718790 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1005E0ED0();
    sub_1003461B0(v23, (uint64_t)qword_100718AA8);
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v22, v19, v20);
    uint64_t v24 = sub_1005E0EB0();
    os_log_type_t v25 = sub_1005E25A0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      v59[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136446210;
      uint64_t v54 = v19;
      uint64_t v27 = sub_1005E07D0();
      uint64_t v58 = sub_1005904BC(v27, v28, v59);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v21 + 8);
      v29(v22, v20);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Unable to get resource values for volume '%{public}s'.", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v29(v54, v20);
    }
    else
    {

      unint64_t v30 = *(void (**)(char *, uint64_t))(v21 + 8);
      v30(v22, v20);
      v30(v19, v20);
    }
    return 0;
  }
  Swift::String v33 = v14;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  uint64_t v34 = sub_1005E0650();
  uint64_t v19 = v18;
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_3;
  }
  uint64_t v31 = v34;
  uint64_t v52 = v12;
  uint64_t v53 = v11;
  uint64_t v36 = sub_1005E0660();
  uint64_t v20 = v56;
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v14, v53);
    goto LABEL_4;
  }
  uint64_t v38 = v36;
  uint64_t v39 = v57;
  if ((v31 & 0x8000000000000000) == 0 && (v36 & 0x8000000000000000) == 0)
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v19, v56);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v53);
    return v31;
  }
  if (qword_100718790 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_1005E0ED0();
  sub_1003461B0(v40, (uint64_t)qword_100718AA8);
  uint64_t v41 = v7;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v7, v19, v20);
  unint64_t v42 = sub_1005E0EB0();
  os_log_type_t v43 = sub_1005E25A0();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = swift_slowAlloc();
    uint64_t v54 = v19;
    uint64_t v55 = v33;
    uint64_t v45 = v44;
    uint64_t v51 = swift_slowAlloc();
    v59[0] = v51;
    *(_DWORD *)uint64_t v45 = 136446722;
    v50[1] = v45 + 4;
    uint64_t v46 = sub_1005E07D0();
    uint64_t v58 = sub_1005904BC(v46, v47, v59);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    unint64_t v48 = *(void (**)(char *, uint64_t))(v39 + 8);
    v48(v41, v20);
    *(_WORD *)(v45 + 12) = 2048;
    uint64_t v58 = v31;
    sub_1005E2960();
    *(_WORD *)(v45 + 22) = 2048;
    uint64_t v58 = v38;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "Resource values for volume '%{public}s'. are out of bounds: %ld %lld.", (uint8_t *)v45, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v48(v54, v20);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v55, v53);
  }
  else
  {

    uint64_t v49 = *(void (**)(char *, uint64_t))(v39 + 8);
    v49(v41, v20);
    v49(v19, v20);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v53);
  }
  return 0;
}

uint64_t sub_100540910(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100718BD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100540980(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  unint64_t result = (void *)sub_100590C34(0, v1, 0);
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v6 = *(v4 - 1);
    uint64_t v5 = *v4;
    uint64_t v7 = HIBYTE(*v4) & 0xF;
    if ((*v4 & 0x2000000000000000) == 0) {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFLL;
    }
    if (!v7) {
      break;
    }
    unint64_t v9 = _swiftEmptyArrayStorage[2];
    unint64_t v8 = _swiftEmptyArrayStorage[3];
    unint64_t result = (void *)swift_bridgeObjectRetain();
    if (v9 >= v8 >> 1) {
      unint64_t result = (void *)sub_100590C34(v8 > 1, v9 + 1, 1);
    }
    v4 += 7;
    _swiftEmptyArrayStorage[2] = v9 + 1;
    uint64_t v10 = &_swiftEmptyArrayStorage[2 * v9];
    v10[4] = v6;
    v10[5] = v5;
    if (!--v1) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100540A70@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  void *(*v24)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t *);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  unint64_t v28 = a1[1];
  uint64_t v29 = *a1;
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[2];
  os_log_type_t v25 = a1[4];
  uint64_t v3 = *(void *)(*a2 + 64);
  uint64_t v31 = *a2 + 64;
  Swift::String v32 = (uint64_t (*)(uint64_t *))a2[1];
  uint64_t v54 = *a2;
  char v35 = v54;
  uint64_t v4 = -1 << *(unsigned char *)(v54 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  char v37 = v5 & v3;
  uint64_t v24 = (void *(*)(uint64_t *__return_ptr, uint64_t *))a2[3];
  sub_10002292C((uint64_t)&v54);
  unint64_t v30 = (unint64_t)(63 - v4) >> 6;
  swift_retain();
  uint64_t result = swift_retain();
  uint64_t v36 = 0;
  while (v37)
  {
    unint64_t v7 = __clz(__rbit64(v37));
    v37 &= v37 - 1;
    unint64_t v8 = v7 | (v36 << 6);
LABEL_6:
    unint64_t v9 = (uint64_t *)(*(void *)(v35 + 56) + 72 * v8);
    uint64_t v10 = *v9;
    uint64_t v11 = v9[1];
    uint64_t v12 = v9[2];
    uint64_t v13 = v9[3];
    uint64_t v14 = v9[4];
    uint64_t v15 = v9[5];
    uint64_t v17 = v9[6];
    uint64_t v16 = v9[7];
    Swift::String v33 = v9[8];
    uint64_t v34 = *(void *)(*(void *)(v35 + 48) + 8 * v8);
    uint64_t v44 = v34;
    uint64_t v45 = v10;
    uint64_t v46 = v11;
    unint64_t v47 = v12;
    unint64_t v48 = v13;
    uint64_t v49 = v14;
    int64_t v50 = v15;
    uint64_t v51 = v17;
    uint64_t v52 = v16;
    uint64_t v53 = v33;
    uint64_t result = v32(&v44);
    if (result)
    {
      uint64_t v44 = v34;
      uint64_t v45 = v10;
      uint64_t v46 = v11;
      unint64_t v47 = v12;
      unint64_t v48 = v13;
      uint64_t v49 = v14;
      int64_t v50 = v15;
      uint64_t v51 = v17;
      uint64_t v52 = v16;
      uint64_t v53 = v33;
      uint64_t result = (uint64_t)v24(&v38, &v44);
      if (__OFADD__(v29, v39)) {
        goto LABEL_37;
      }
      if (__OFADD__(v28, v40)) {
        goto LABEL_38;
      }
      if (__OFADD__(v27, v41)) {
        goto LABEL_39;
      }
      if (__OFADD__(v26, v42)) {
        goto LABEL_40;
      }
      v26 += v42;
      v27 += v41;
      v28 += v40;
      v29 += v39;
      BOOL v22 = __OFADD__(v25, v43);
      v25 += v43;
      if (v22) {
        goto LABEL_41;
      }
    }
  }
  int64_t v18 = v36 + 1;
  if (!__OFADD__(v36, 1))
  {
    if (v18 >= v30) {
      goto LABEL_35;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v18);
    if (v19) {
      goto LABEL_17;
    }
    int64_t v20 = v36 + 2;
    if (v36 + 2 >= v30) {
      goto LABEL_35;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v20);
    if (v19) {
      goto LABEL_13;
    }
    int64_t v21 = v36 + 3;
    if (v36 + 3 >= v30) {
      goto LABEL_35;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v21);
    if (v19)
    {
LABEL_16:
      int64_t v18 = v21;
      goto LABEL_17;
    }
    int64_t v20 = v36 + 4;
    if (v36 + 4 >= v30) {
      goto LABEL_35;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v20);
    if (!v19)
    {
      int64_t v21 = v36 + 5;
      if (v36 + 5 >= v30) {
        goto LABEL_35;
      }
      unint64_t v19 = *(void *)(v31 + 8 * v21);
      if (v19) {
        goto LABEL_16;
      }
      int64_t v20 = v36 + 6;
      if (v36 + 6 >= v30)
      {
LABEL_35:
        sub_10003BC80();
        swift_release();
        uint64_t result = swift_release();
        *a3 = v29;
        a3[1] = v28;
        a3[2] = v27;
        a3[3] = v26;
        a3[4] = v25;
        return result;
      }
      unint64_t v19 = *(void *)(v31 + 8 * v20);
      if (!v19)
      {
        while (1)
        {
          int64_t v18 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            goto LABEL_42;
          }
          if (v18 >= v30) {
            goto LABEL_35;
          }
          unint64_t v19 = *(void *)(v31 + 8 * v18);
          ++v20;
          if (v19) {
            goto LABEL_17;
          }
        }
      }
    }
LABEL_13:
    int64_t v18 = v20;
LABEL_17:
    uint64_t v36 = v18;
    char v37 = (v19 - 1) & v19;
    unint64_t v8 = __clz(__rbit64(v19)) + (v18 << 6);
    goto LABEL_6;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_100540DF0()
{
  uint64_t v0 = sub_1005E0ED0();
  sub_10034E5B4(v0, qword_100718BD8);
  sub_1003461B0(v0, (uint64_t)qword_100718BD8);
  return sub_1005E0EC0();
}

double sub_100540E6C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4 = sub_10058A184((uint64_t)&_swiftEmptyArrayStorage);
  *(void *)&long long v8 = a1;
  *((void *)&v8 + 1) = 0xDA3E39CB94B95BDBLL;
  Swift::UInt64 v5 = sub_100377F28(0x20000000000001uLL);
  double v6 = (double)v5 * 1.11022302e-16 * 500.0 + 800.0;
  if (v5 == 0x20000000000000) {
    double v6 = 1300.0;
  }
  *(_OWORD *)a2 = v8;
  *(double *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = &_swiftEmptyArrayStorage;
  *(void *)(a2 + 32) = &_swiftEmptyArrayStorage;
  *(void *)(a2 + 40) = v4;
  double result = 0.0;
  *(_OWORD *)(a2 + 48) = xmmword_1005F6970;
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 64) = 0;
  *(_DWORD *)(a2 + 88) = 1;
  return result;
}

uint64_t sub_100540F54@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100551384;
  *(void *)(v5 + 24) = v4;
  *a2 = sub_1005513C0;
  a2[1] = v5;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_100551384;
  *(void *)(v6 + 24) = v4;
  *(void *)a1 = sub_1005513C0;
  *(void *)(a1 + 8) = v6;
  return swift_retain();
}

uint64_t sub_100541024(void *a1, uint64_t a2, uint64_t a3)
{
  swift_release();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  *a1 = sub_1005513C0;
  a1[1] = v6;
  return swift_retain();
}

uint64_t sub_100541098(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v42 = sub_1005E1670();
  uint64_t v10 = *(void *)(v42 - 8);
  uint64_t v11 = __chkstk_darwin(v42);
  os_log_type_t v43 = (id *)((char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v14 = (id *)((char *)v41 - v13);
  uint64_t v15 = sub_1005E07F0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  int64_t v18 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100540E6C(0x724DA56DFED9E99ALL, (uint64_t)v45);
  long long v19 = v45[3];
  *(_OWORD *)(v5 + 80) = v45[2];
  *(_OWORD *)(v5 + 96) = v19;
  *(_OWORD *)(v5 + 112) = v46[0];
  *(_OWORD *)(v5 + 124) = *(_OWORD *)((char *)v46 + 12);
  long long v20 = v45[1];
  *(_OWORD *)(v5 + 48) = v45[0];
  *(_OWORD *)(v5 + 64) = v20;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(void *)(v5 + 176) = 0;
  sub_10000566C(qword_100718D48);
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + 32) = 0;
  *(void *)(v21 + 16) = UInt32.init(_:);
  *(void *)(v21 + 24) = 0;
  *(void *)(v5 + 200) = v21;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a4;
  id v22 = a1;
  v41[0] = a2;
  v41[1] = a3;
  swift_retain();
  v41[2] = a4;
  swift_retain();
  *(void *)(v5 + 184) = static MonotonicTime.now()();
  *(void *)(v5 + 192) = static MonotonicTime.now()();
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  uint64_t v24 = qword_100718788;
  id v25 = v22;
  swift_retain();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1003461B0(v15, (uint64_t)qword_100718A88);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v26, v15);
  uint64_t v27 = sub_10053FC04((uint64_t)v18, v25, (uint64_t)sub_1005519B4, v23);
  swift_release();
  *(void *)(v5 + 144) = v27;
  swift_release();
  *uint64_t v14 = 1;
  uint64_t v28 = enum case for DispatchTimeInterval.seconds(_:);
  uint64_t v29 = *(void (**)(void *, uint64_t, uint64_t))(v10 + 104);
  uint64_t v30 = v42;
  v29(v14, enum case for DispatchTimeInterval.seconds(_:), v42);
  uint64_t v31 = (uint64_t)v43;
  *os_log_type_t v43 = 1;
  v29((void *)v31, v28, v30);
  uint64_t v32 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1005519BC;
  aBlock[5] = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046A1E4;
  aBlock[3] = &unk_1006FD1A0;
  Swift::String v33 = _Block_copy(aBlock);
  type metadata accessor for RestartableTimer();
  swift_allocObject();
  id v34 = v25;
  swift_retain();
  uint64_t v35 = RestartableTimer.init(queue:repeating:leeway:closure:)(v34, (uint64_t)v14, v31, v33);
  swift_release();
  swift_release();
  *(void *)(v5 + 176) = v35;
  swift_release();
  type metadata accessor for StateCapture();
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  id v37 = v34;
  *(void *)(v5 + 168) = StateCapture.__allocating_init(title:queue:capture:)(0x64616F6C6E776F44, 0xEA00000000007265, v37, (uint64_t)sub_1005519C4, v36);
  uint64_t result = swift_release();
  uint64_t v39 = *(void *)(v5 + 144);
  if (v39)
  {
    uint64_t v40 = *(NSObject **)(v39 + OBJC_IVAR____TtC17IMAPSearchIndexer17DiskSpaceObserver_source);
    swift_retain();
    dispatch_activate(v40);
    swift_release();

    swift_release();
    swift_release();
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005415B0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100541624(a1, a2);
    return swift_release();
  }
  return result;
}

void sub_100541624(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005E1850();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = (void *)v2[2];
  *unint64_t v9 = v10;
  uint64_t v11 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v12 = *(void (**)(void *, uint64_t, uint64_t))(v7 + 104);
  v12(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v29 = v10;
  LOBYTE(v10) = sub_1005E1860();
  uint64_t v30 = *(void (**)(void *, uint64_t))(v7 + 8);
  v30(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v13 = v3[19];
  v3[19] = a1;
  v3[20] = a2;
  swift_beginAccess();
  if ((v3[13] & 0x8000000000000000) != 0 && v13) {
    return;
  }
  uint64_t v28 = v12;
  if (qword_1007187A8 != -1) {
    goto LABEL_17;
  }
LABEL_5:
  uint64_t v27 = sub_1005E0ED0();
  sub_1003461B0(v27, (uint64_t)qword_100718BD8);
  uint64_t v14 = sub_1005E0EB0();
  os_log_type_t v15 = sub_1005E25C0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (_DWORD *)swift_slowAlloc();
    unsigned int v26 = v11;
    uint64_t v17 = v16;
    _DWORD *v16 = 134218240;
    uint64_t v31 = a1;
    sub_1005E2960();
    *((_WORD *)v17 + 6) = 2048;
    uint64_t v31 = a2;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Available disk space changed. Free space: %{iec-bytes}ld, for opportunistic use: %{iec-bytes}ld", (uint8_t *)v17, 0x16u);
    uint64_t v11 = v26;
    swift_slowDealloc();
  }

  int64_t v18 = v28;
  if ((v3[13] & 0x8000000000000000) == 0)
  {
    uint64_t v19 = v3[12];
    long long v20 = v29;
    *unint64_t v9 = v29;
    v18(v9, v11, v6);
    id v21 = v20;
    LOBYTE(v20) = sub_1005E1860();
    v30(v9, v6);
    if (v20)
    {
      if ((uint64_t)v3[19] > 0x2540BE3FFLL || (uint64_t)v3[20] > 0x9502F8FFFLL) {
        return;
      }
      if (qword_1007187A8 == -1) {
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
LABEL_12:
    sub_1003461B0(v27, (uint64_t)qword_100718BD8);
    id v22 = sub_1005E0EB0();
    os_log_type_t v23 = sub_1005E25A0();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Stopping download & index due to low disk space.", v24, 2u);
      swift_slowDealloc();
    }

    sub_1005435C8(v19);
  }
}

uint64_t sub_1005419D8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100541A30();
    return swift_release();
  }
  return result;
}

void sub_100541A30()
{
  int64_t v1 = v0;
  uint64_t v2 = (uint64_t *)sub_1005E1850();
  uint64_t v3 = *(v2 - 1);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = (void *)v1[2];
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t *))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = sub_1005E1860();
  uint64_t v8 = (*(uint64_t (**)(void *, uint64_t *))(v3 + 8))(v5, v2);
  if (v6)
  {
    __chkstk_darwin(v8);
    uint64_t v2 = &v14 - 4;
    *(&v14 - 2) = (uint64_t)sub_1005512DC;
    *(&v14 - 1) = (uint64_t)v1;
    uint64_t v9 = qword_1007187A8;
    swift_retain_n();
    if (v9 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v11 = sub_1003461B0(v10, (uint64_t)qword_100718BD8);
  swift_beginAccess();
  __uint64_t v12 = static MonotonicTime.now()();
  sub_1005437A0(v12, (uint64_t)sub_1005519D8, (uint64_t)v2, (void (*)(unint64_t))sub_1005519CC, (uint64_t)v1, v11);
  swift_endAccess();
  uint64_t v13 = v1[22];
  if ((v1[13] & 0x8000000000000000) != 0)
  {
    if (v13)
    {
      swift_retain();
      RestartableTimer.stop()();
      goto LABEL_8;
    }
  }
  else if (v13)
  {
    swift_retain();
    RestartableTimer.start()();
LABEL_8:
    swift_release();
  }
  swift_release();
  swift_release();
  sub_10054265C();
  sub_10054302C();
}

double sub_100541C8C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1005E1850();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v7 = (_OWORD *)Strong;
    uint64_t v8 = *(void **)(Strong + 16);
    *uint64_t v5 = v8;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
    id v9 = v8;
    LOBYTE(v8) = sub_1005E1860();
    (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
    if (v8)
    {
      swift_beginAccess();
      long long v10 = v7[6];
      v15[2] = v7[5];
      v15[3] = v10;
      v16[0] = v7[7];
      *(_OWORD *)((char *)v16 + 12) = *(_OWORD *)((char *)v7 + 124);
      long long v11 = v7[4];
      v15[0] = v7[3];
      v15[1] = v11;
      sub_100551880((uint64_t)v15);
      if (qword_1007187A8 == -1)
      {
LABEL_4:
        uint64_t v12 = sub_1005E0ED0();
        sub_1003461B0(v12, (uint64_t)qword_100718BD8);
        sub_100548560();
        sub_1005518FC((uint64_t)v15);
        sub_10054265C();
        swift_release();
        goto LABEL_5;
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
    goto LABEL_4;
  }
LABEL_5:
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_100541E74()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1005513FC(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_100541F28()
{
  sub_100541E74();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Downloader()
{
  return self;
}

uint64_t initializeWithTake for Downloader.Event(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)double result = v2;
  return result;
}

ValueMetadata *type metadata accessor for Downloader.Event()
{
  return &type metadata for Downloader.Event;
}

uint64_t destroy for Downloader.EngineAndPersistence()
{
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Downloader.EngineAndPersistence(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Downloader.EngineAndPersistence(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  return a1;
}

__n128 initializeWithTake for Downloader.EngineAndPersistence(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 29) = *(void *)(a2 + 29);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Downloader.EngineAndPersistence(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  return a1;
}

uint64_t getEnumTagSinglePayload for Downloader.EngineAndPersistence(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 37)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Downloader.EngineAndPersistence(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 36) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 37) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 37) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Downloader.EngineAndPersistence()
{
  return &type metadata for Downloader.EngineAndPersistence;
}

void sub_1005421EC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1005E1850();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (uint64_t *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = (void *)v5[2];
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  LOBYTE(v14) = sub_1005E1860();
  uint64_t v17 = *(void (**)(void *, uint64_t))(v11 + 8);
  uint64_t v16 = v11 + 8;
  v17(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
LABEL_4:
    uint64_t v18 = sub_1005E0ED0();
    uint64_t v19 = sub_1003461B0(v18, (uint64_t)qword_100718BD8);
    swift_bridgeObjectRetain();
    uint64_t v29 = v19;
    long long v20 = sub_1005E0EB0();
    os_log_type_t v21 = sub_1005E25C0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 134218240;
      uint64_t v30 = a1;
      sub_1005E2960();
      *(_WORD *)(v22 + 12) = 2048;
      uint64_t v30 = v16;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Start B {%ld} for %ld account(s)", (uint8_t *)v22, 0x16u);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    __chkstk_darwin();
    swift_beginAccess();
    swift_retain_n();
    __uint64_t v27 = static MonotonicTime.now()();
    sub_100542858(v27, a1, a2, (uint64_t)sub_1005512F8, (uint64_t)(&v29 - 4), (void (*)(unint64_t))sub_1005519D0, (uint64_t)v5, v29, a3, a4);
    swift_endAccess();
    uint64_t v28 = v5[22];
    if ((v5[13] & 0x8000000000000000) != 0)
    {
      if (v28)
      {
        swift_retain();
        RestartableTimer.stop()();
        goto LABEL_17;
      }
    }
    else if (v28)
    {
      swift_retain();
      RestartableTimer.start()();
LABEL_17:
      swift_release();
    }
    swift_release();
    swift_release();
    sub_10054265C();
    sub_10054302C();
    return;
  }
  uint64_t v16 = *(void *)(a2 + 16);
  if (v16)
  {
    if (qword_1007187A8 == -1) {
      goto LABEL_4;
    }
    goto LABEL_20;
  }
  if (qword_1007187A8 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1005E0ED0();
  sub_1003461B0(v23, (uint64_t)qword_100718BD8);
  uint64_t v24 = sub_1005E0EB0();
  os_log_type_t v25 = sub_1005E25C0();
  if (os_log_type_enabled(v24, v25))
  {
    unsigned int v26 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unsigned int v26 = 134217984;
    uint64_t v30 = a1;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "{%ld} No account are currently available.", v26, 0xCu);
    swift_slowDealloc();
  }

  sub_10054265C();
  a3(1);
}

void sub_10054265C()
{
  uint64_t v1 = sub_1005E1850();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (void *)((char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = (void *)v0[2];
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = sub_1005E1860();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  int64_t v7 = static MonotonicTime.now()();
  uint64_t v8 = v0[23];
  BOOL v9 = __OFSUB__(v7, v8);
  uint64_t v10 = v7 - v8;
  if (v7 >= v8) {
    goto LABEL_7;
  }
  if (__OFSUB__(v8, v7))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  BOOL v9 = __OFSUB__(0, v8 - v7);
  uint64_t v10 = v7 - v8;
  if (v9)
  {
    __break(1u);
LABEL_7:
    if (!v9) {
      goto LABEL_8;
    }
LABEL_13:
    __break(1u);
    return;
  }
LABEL_8:
  if ((double)v10 / 1000000000.0 > 60.0)
  {
    v0[23] = v7;
    uint64_t v11 = (void *)v0[3];
    aBlock[4] = sub_1005513C4;
    aBlock[5] = v0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10046A1E4;
    aBlock[3] = &unk_1006FCFE8;
    uint64_t v12 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v11 performBlock:v12];
    _Block_release(v12);
  }
}

void sub_100542858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(unint64_t), uint64_t a7, uint64_t a8, void (*a9)(void), uint64_t a10)
{
  uint64_t v11 = a8;
  uint64_t v12 = a2;
  uint64_t v13 = a9;
  if (*(void *)(v10 + 48) >= a2)
  {
    uint64_t v28 = sub_1005E0EB0();
    os_log_type_t v29 = sub_1005E25C0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 134218240;
      sub_1005E2960();
      *(_WORD *)(v30 + 12) = 2048;
      v91[0] = v12;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Current ID {%ld} or higher than new {%ld}: Ignoring request to start download. Requesting deferral.", (uint8_t *)v30, 0x16u);
      uint64_t v13 = a9;
      swift_slowDealloc();
    }

    v13(0);
  }
  else
  {
    uint64_t v14 = a3;
    unsigned int v15 = *(_DWORD *)(v10 + 88);
    uint64_t v79 = v15;
    if (v15 + 1 > 1) {
      int v16 = v15 + 1;
    }
    else {
      int v16 = 1;
    }
    *(_DWORD *)(v10 + 88) = v16;
    id v84 = (void *)v10;
    uint64_t v17 = *(void *)(v10 + 24);
    int64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = _swiftEmptyArrayStorage;
    if (v18)
    {
      v91[0] = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_100590C34(0, v18, 0);
      uint64_t v19 = _swiftEmptyArrayStorage;
      os_log_type_t v21 = (uint64_t *)(v17 + 40);
      while (1)
      {
        uint64_t v22 = *(v21 - 1);
        uint64_t v23 = *v21;
        uint64_t v24 = HIBYTE(*v21) & 0xF;
        if ((*v21 & 0x2000000000000000) == 0) {
          uint64_t v24 = v22 & 0xFFFFFFFFFFFFLL;
        }
        if (!v24) {
          break;
        }
        v91[0] = (uint64_t)v19;
        unint64_t v26 = v19[2];
        unint64_t v25 = v19[3];
        swift_bridgeObjectRetain();
        if (v26 >= v25 >> 1)
        {
          sub_100590C34(v25 > 1, v26 + 1, 1);
          uint64_t v19 = (void *)v91[0];
        }
        v21 += 8;
        v19[2] = v26 + 1;
        __uint64_t v27 = &v19[2 * v26];
        v27[4] = v22;
        v27[5] = v23;
        if (!--v18)
        {
          swift_bridgeObjectRelease();
          uint64_t v12 = a2;
          uint64_t v11 = a8;
          uint64_t v14 = a3;
          goto LABEL_17;
        }
      }
      __break(1u);
      goto LABEL_46;
    }
LABEL_17:
    swift_bridgeObjectRetain_n();
    uint64_t v31 = sub_1005E0EB0();
    os_log_type_t v32 = sub_1005E25C0();
    uint64_t v78 = v12;
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      v91[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 67109634;
      sub_1005E2960();
      *(_WORD *)(v33 + 8) = 2048;
      int64_t v34 = v19[2];
      sub_1005E2960();
      swift_bridgeObjectRelease();
      uint64_t v86 = (uint8_t *)v33;
      *(_WORD *)(v33 + 18) = 2082;
      if (v34)
      {
        uint64_t v75 = v31;
        sub_100590C74(0, v34, 0);
        uint64_t v35 = v19 + 5;
        do
        {
          swift_bridgeObjectRetain();
          sub_1005E1DF0();
          uint64_t v36 = sub_1005E1F50();
          uint64_t v38 = v37;
          uint64_t v40 = v39;
          uint64_t v42 = v41;
          swift_bridgeObjectRelease();
          unint64_t v44 = _swiftEmptyArrayStorage[2];
          unint64_t v43 = _swiftEmptyArrayStorage[3];
          if (v44 >= v43 >> 1) {
            sub_100590C74(v43 > 1, v44 + 1, 1);
          }
          v35 += 2;
          _swiftEmptyArrayStorage[2] = v44 + 1;
          uint64_t v45 = &_swiftEmptyArrayStorage[4 * v44];
          _OWORD v45[4] = v36;
          void v45[5] = v38;
          v45[6] = v40;
          v45[7] = v42;
          --v34;
        }
        while (v34);
        uint64_t v12 = v78;
        uint64_t v14 = a3;
        uint64_t v31 = v75;
      }
      sub_10000566C(&qword_100718CE8);
      sub_100057E98(&qword_100718CF0, &qword_100718CE8);
      sub_100550648();
      uint64_t v46 = sub_1005E2060();
      unint64_t v48 = v47;
      swift_bridgeObjectRelease();
      sub_1005904BC(v46, v48, v91);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Starting new download with sync #%u for %ld account(s): %{public}s", v86, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v11 = a8;
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    uint64_t v49 = v84;
    sub_100548C4C(a1, v12, (uint64_t (*)(void *))a6, a7, v11);
    int64_t v50 = *(void *)(v14 + 16);
    uint64_t v51 = _swiftEmptyArrayStorage;
    if (v50)
    {
      v91[0] = (uint64_t)_swiftEmptyArrayStorage;
      sub_100590CB4(0, v50, 0);
      uint64_t v52 = v91[0];
      uint64_t v53 = (void *)(v14 + 80);
      do
      {
        uint64_t v54 = *(v53 - 5);
        uint64_t v90 = *(v53 - 6);
        uint64_t v56 = *(v53 - 4);
        uint64_t v55 = *(v53 - 3);
        __int16 v88 = *((_WORD *)v53 - 8);
        char v87 = *((unsigned char *)v53 - 14);
        uint64_t v57 = *v53;
        uint64_t v85 = *(v53 - 1);
        unint64_t v58 = *(void *)(v52 + 16);
        unint64_t v59 = *(void *)(v52 + 24);
        v91[0] = v52;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v58 >= v59 >> 1)
        {
          sub_100590CB4(v59 > 1, v58 + 1, 1);
          uint64_t v52 = v91[0];
        }
        v53 += 7;
        *(void *)(v52 + 16) = v58 + 1;
        uint64_t v60 = v52 + (v58 << 6);
        *(void *)(v60 + 32) = v90;
        *(void *)(v60 + 40) = v54;
        *(void *)(v60 + 48) = v56;
        *(void *)(v60 + 56) = v55;
        *(_WORD *)(v60 + 64) = v88;
        *(unsigned char *)(v60 + 66) = v87;
        *(void *)(v60 + 72) = v85;
        *(void *)(v60 + 80) = v57;
        *(void *)(v60 + 88) = 0;
        --v50;
      }
      while (v50);
      uint64_t v51 = (void *)v52;
      uint64_t v11 = a8;
      uint64_t v49 = v84;
    }
    swift_bridgeObjectRelease();
    v49[3] = v51;
    int64_t v61 = v51[2];
    uint64_t v62 = _swiftEmptyArrayStorage;
    if (v61)
    {
      v91[0] = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_100590C94(0, v61, 0);
      uint64_t v62 = (void *)v91[0];
      uint64_t v63 = v51 + 5;
      while (1)
      {
        uint64_t v64 = *(v63 - 1);
        uint64_t v65 = *v63;
        uint64_t v66 = HIBYTE(*v63) & 0xF;
        if ((*v63 & 0x2000000000000000) == 0) {
          uint64_t v66 = v64 & 0xFFFFFFFFFFFFLL;
        }
        if (!v66) {
          break;
        }
        v91[0] = (uint64_t)v62;
        unint64_t v68 = v62[2];
        unint64_t v67 = v62[3];
        swift_bridgeObjectRetain();
        if (v68 >= v67 >> 1)
        {
          sub_100590C94(v67 > 1, v68 + 1, 1);
          uint64_t v62 = (void *)v91[0];
        }
        v63 += 8;
        v62[2] = v68 + 1;
        unint64_t v69 = &v62[3 * v68];
        v69[4] = v64;
        v69[5] = v65;
        *((unsigned char *)v69 + 48) = 0;
        if (!--v61)
        {
          swift_bridgeObjectRelease();
          uint64_t v11 = a8;
          goto LABEL_41;
        }
      }
LABEL_46:
      __break(1u);
      swift_bridgeObjectRelease();
      swift_release();
      __break(1u);
      return;
    }
LABEL_41:
    if (v62[2])
    {
      sub_10000566C(&qword_100718D08);
      unint64_t v70 = (void *)sub_1005E2FF0();
    }
    else
    {
      unint64_t v70 = _swiftEmptyDictionarySingleton;
    }
    v91[0] = (uint64_t)v70;
    sub_10055069C((uint64_t)v62, 1, v91);
    swift_bridgeObjectRelease();
    uint64_t v71 = v91[0];
    swift_bridgeObjectRelease();
    v84[5] = v71;
    __uint64_t v72 = static MonotonicTime.now()();
    uint64_t v74 = v84[6];
    uint64_t v73 = v84[7];
    swift_retain();
    sub_1005513FC(v74, v73);
    v84[6] = v78;
    v84[7] = v79;
    v84[8] = v72;
    v84[9] = a9;
    v84[10] = a10;
    sub_1005437A0(a1, a4, a5, a6, a7, v11);
  }
}

void sub_10054302C()
{
  uint64_t v1 = sub_1005E1850();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (void *)((char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = (void *)v0[2];
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = sub_1005E1860();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  int64_t v7 = static MonotonicTime.now()();
  uint64_t v8 = v0[24];
  BOOL v9 = __OFSUB__(v7, v8);
  uint64_t v10 = v7 - v8;
  if (v7 >= v8) {
    goto LABEL_7;
  }
  if (__OFSUB__(v8, v7))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  BOOL v9 = __OFSUB__(0, v8 - v7);
  uint64_t v10 = v7 - v8;
  if (v9)
  {
    __break(1u);
LABEL_7:
    if (!v9) {
      goto LABEL_8;
    }
LABEL_13:
    __break(1u);
    return;
  }
LABEL_8:
  if ((double)v10 / 1000000000.0 > 60.0)
  {
    v0[24] = v7;
    uint64_t v11 = (void *)v0[3];
    aBlock[4] = sub_100551344;
    aBlock[5] = v0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10046A1E4;
    aBlock[3] = &unk_1006FCF48;
    uint64_t v12 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v11 performBlock:v12];
    _Block_release(v12);
  }
}

uint64_t sub_100543228(uint64_t a1)
{
  uint64_t v3 = sub_1005E1680();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  id v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E16C0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = *(void *)(v1 + 16);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v1;
  aBlock[4] = sub_100551978;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046A1E4;
  aBlock[3] = &unk_1006FD150;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  sub_1005E16A0();
  v14[1] = _swiftEmptyArrayStorage;
  sub_10054007C();
  sub_10000566C((uint64_t *)&unk_100719780);
  sub_100057E98((unint64_t *)&qword_100718A00, (uint64_t *)&unk_100719780);
  sub_1005E2AD0();
  sub_1005E2610();
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_1005434A4(uint64_t a1)
{
  if (qword_1007187A8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1005E0ED0();
  sub_1003461B0(v2, (uint64_t)qword_100718BD8);
  uint64_t v3 = sub_1005E0EB0();
  os_log_type_t v4 = sub_1005E25C0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Stop {%ld}", v5, 0xCu);
    swift_slowDealloc();
  }

  return sub_1005435C8(a1);
}

uint64_t sub_1005435C8(uint64_t a1)
{
  uint64_t v3 = sub_1005E1850();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = (void *)v1[2];
  *id v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  id v8 = v7;
  LOBYTE(v7) = sub_1005E1860();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    uint64_t v9 = qword_1007187A8;
    swift_retain();
    if (v9 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v11 = sub_1003461B0(v10, (uint64_t)qword_100718BD8);
  swift_beginAccess();
  __uint64_t v12 = static MonotonicTime.now()();
  sub_100553530(v12, a1, v11, (uint64_t)(v1 + 6));
  swift_endAccess();
  uint64_t result = swift_release();
  uint64_t v14 = v1[13];
  uint64_t v15 = v1[22];
  if (v14 < 0)
  {
    if (!v15) {
      return result;
    }
    swift_retain();
    RestartableTimer.stop()();
  }
  else
  {
    if (!v15) {
      return result;
    }
    swift_retain();
    RestartableTimer.start()();
  }
  return swift_release();
}

void sub_1005437A0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = sub_10000566C(&qword_100718D10);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = a1;
  unint64_t v67 = a4;
  sub_100548EF4(a1, (void (*)(uint64_t))a4, a5, a6);
  uint64_t v17 = *(void *)(v7 + 64);
  uint64_t v18 = *(void *)(v7 + 56);
  if (v18 < 0)
  {
    os_log_t v69 = (os_log_t)sub_1005E0EB0();
    os_log_type_t v26 = sub_1005E2590();
    if (os_log_type_enabled(v69, v26))
    {
      __uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)__uint64_t v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v69, v26, "Checking current batch: not currently running request.", v27, 2u);
      swift_slowDealloc();
    }
    os_log_t v28 = v69;
  }
  else
  {
    uint64_t v60 = a5;
    uint64_t v61 = a2;
    uint64_t v62 = a3;
    uint64_t v19 = *(void *)(v7 + 48);
    os_log_type_t v21 = *(void (**)(void))(v7 + 72);
    long long v20 = *(NSObject **)(v7 + 80);
    uint64_t v84 = v19;
    int v85 = v18;
    uint64_t v86 = v17;
    char v87 = v21;
    __int16 v88 = v20;
    sub_10055140C(v19, v18);
    sub_10055140C(v19, v18);
    swift_retain();
    uint64_t v63 = a6;
    uint64_t v22 = sub_1005E0EB0();
    os_log_type_t v23 = sub_1005E2590();
    BOOL v24 = os_log_type_enabled(v22, v23);
    os_log_t v69 = v20;
    uint64_t v66 = v17;
    uint64_t v65 = v21;
    uint64_t v64 = v19;
    if (v24)
    {
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 134218240;
      v82[0] = v19;
      sub_1005E2960();
      *(_WORD *)(v25 + 12) = 1024;
      sub_1005513FC(v19, v18);
      LODWORD(v82[0]) = v18;
      sub_1005E2960();
      sub_1005513FC(v19, v18);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "{%ld} Checking current batch: request #%u.", (uint8_t *)v25, 0x12u);
      swift_slowDealloc();
    }
    else
    {

      sub_1005513FC(v19, v18);
      sub_1005513FC(v19, v18);
    }
    uint64_t v29 = v68;
    uint64_t v30 = sub_10054942C(v68);
    uint64_t v32 = v31;
    uint64_t v33 = sub_1005E0ED0();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v35 = v63;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v16, v63, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v16, 0, 1, v33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1005536A8(v29, v67, v60, (uint64_t)v16, v7, (uint64_t)v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10055141C((uint64_t)v16);
    swift_bridgeObjectRetain_n();
    uint64_t v36 = sub_1005A9014(v32);
    swift_bridgeObjectRelease();
    v82[0] = (uint64_t)v36;
    sub_10054C32C(v82);
    swift_bridgeObjectRelease_n();
    uint64_t v37 = swift_bridgeObjectRelease();
    uint64_t v38 = v82[0];
    __chkstk_darwin(v37);
    v58[-6] = v7;
    v58[-5] = v35;
    v58[-4] = (uint64_t)&v84;
    uint64_t v39 = v62;
    v58[-3] = v61;
    v58[-2] = v39;
    v58[-1] = v29;
    uint64_t v40 = sub_100549A78((void (*)(long long *__return_ptr, void *))sub_10055147C, (uint64_t)&v58[-8], v38);
    swift_release();
    sub_10056D7C8((uint64_t)v40);
    uint64_t v42 = *(void **)(v7 + 24);
    uint64_t v41 = *(void *)(v7 + 32);
    if (!*(void *)(v41 + 16))
    {
      swift_bridgeObjectRelease();
      uint64_t v42 = _swiftEmptyArrayStorage;
      *(void *)(v7 + 24) = _swiftEmptyArrayStorage;
    }
    uint64_t v43 = v64;
    if (!v42[2])
    {
      uint64_t v44 = *(void *)(v7 + 8);
      uint64_t v62 = *(void *)v7;
      uint64_t v61 = v44;
      uint64_t v45 = *(void *)(v7 + 16);
      uint64_t v47 = *(void *)(v7 + 40);
      uint64_t v46 = *(void *)(v7 + 48);
      uint64_t v48 = *(void *)(v7 + 64);
      v58[0] = *(void *)(v7 + 56);
      uint64_t v49 = *(void *)(v7 + 72);
      uint64_t v50 = *(void *)(v7 + 80);
      LODWORD(v67) = *(_DWORD *)(v7 + 88);
      v82[0] = v62;
      v82[1] = v44;
      v82[2] = v45;
      v82[3] = (uint64_t)v42;
      v82[4] = v41;
      v82[5] = v47;
      v82[6] = v46;
      uint64_t v51 = v46;
      uint64_t v59 = v46;
      v82[7] = v58[0];
      v82[8] = v48;
      uint64_t v68 = v18;
      v82[9] = v49;
      v82[10] = v50;
      v58[1] = v49;
      uint64_t v60 = v50;
      int v83 = (int)v67;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v52 = v51;
      uint64_t v53 = v58[0];
      sub_10055140C(v52, v58[0]);
      sub_100549C10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v54 = v59;
      sub_1005513FC(v59, v53);
      sub_1005513FC(v54, v53);
      uint64_t v55 = v64;
      *(void *)(v7 + 48) = v64;
      *(void *)(v7 + 56) = 0x8000000000000000;
      *(void *)(v7 + 72) = 0;
      *(void *)(v7 + 80) = 0;
      *(void *)(v7 + 64) = 0;
      uint64_t v70 = v62;
      uint64_t v71 = v61;
      uint64_t v72 = v45;
      uint64_t v73 = v42;
      uint64_t v74 = v41;
      uint64_t v75 = v47;
      uint64_t v76 = v55;
      unint64_t v77 = 0x8000000000000000;
      uint64_t v78 = 0;
      uint64_t v80 = 0;
      uint64_t v79 = 0;
      int v81 = (int)v67;
      uint64_t v18 = v68;
      uint64_t v56 = v65;
      sub_10055140C(v55, v68);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10055140C(v55, 0x8000000000000000);
      uint64_t v57 = sub_100549EBC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1005513FC(v55, 0x8000000000000000);
      v56(v57);
      sub_1005513FC(v55, v18);
      uint64_t v43 = v55;
    }
    sub_1005513FC(v43, v18);
  }
}

Swift::Int sub_100543FB4(uint64_t a1, uint64_t a2)
{
  Swift::Int v4 = *(void *)a1;
  int v5 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v6 = *(void *)a2;
  int v7 = *(unsigned __int8 *)(a2 + 8);
  if (!v5)
  {
    if (!v7) {
      return sub_100013570(v4, v6);
    }
    return 0;
  }
  if (v5 == 1)
  {
    if (v7 == 1) {
      return sub_10054C124(v4, v6);
    }
    return 0;
  }
  if (v4)
  {
    if (v7 != 2 || v6 != 1) {
      return 0;
    }
  }
  else if (v7 != 2 || v6 != 0)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_100544014(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1005E1680();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1005E16C0();
  uint64_t v14 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)(v5 + 16);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v5;
  *(void *)(v17 + 24) = a1;
  *(void *)(v17 + 32) = a2;
  *(void *)(v17 + 40) = a3;
  *(unsigned char *)(v17 + 48) = a4;
  aBlock[4] = sub_100551728;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046A1E4;
  aBlock[3] = &unk_1006FD100;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10013B5CC(a3, a4);
  sub_1005E16A0();
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_10054007C();
  sub_10000566C((uint64_t *)&unk_100719780);
  sub_100057E98((unint64_t *)&qword_100718A00, (uint64_t *)&unk_100719780);
  sub_1005E2AD0();
  sub_1005E2610();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v21);
  return swift_release();
}

uint64_t sub_1005442BC(uint64_t a1, uint8_t *a2, uint64_t a3, int a4)
{
  int v44 = a4;
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = _s6LoggerVMa(0);
  uint64_t v10 = __chkstk_darwin(v43);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v45 = (char *)&v41 - v13;
  uint64_t v14 = sub_1005E1850();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = *(void **)(v4 + 16);
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  id v19 = v18;
  LOBYTE(v18) = sub_1005E1860();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if (v18)
  {
    uint64_t v42 = a3;
    if (qword_1007187A8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v20 = sub_1003461B0(v6, (uint64_t)qword_100718BD8);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v21(v9, v20, v6);
  v21(v12, (uint64_t)v9, v6);
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_10051B67C(8);
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v29 = (uint64_t *)&v12[*(int *)(v43 + 20)];
  *uint64_t v29 = v22;
  v29[1] = v24;
  _OWORD v29[2] = v26;
  v29[3] = v28;
  uint64_t v30 = v45;
  uint64_t v31 = sub_100551758((uint64_t)v12, (uint64_t)v45);
  if (!(_BYTE)v44)
  {
    __chkstk_darwin(v31);
    uint64_t v40 = v4;
    uint64_t v32 = v4;
    swift_beginAccess();
    swift_retain_n();
    __uint64_t v34 = static MonotonicTime.now()();
    sub_1005450AC(v34, v46, (uint64_t)v47, v42, (uint64_t)sub_1005519D8, (uint64_t)(&v41 - 4), (void (*)(unint64_t))sub_1005519D0, v4, v30);
    goto LABEL_9;
  }
  uint64_t v32 = v4;
  if (v44 == 1)
  {
    __chkstk_darwin(v31);
    uint64_t v39 = sub_1005512DC;
    uint64_t v40 = v4;
    swift_beginAccess();
    swift_retain_n();
    __uint64_t v33 = static MonotonicTime.now()();
    sub_100545EF0(v33, v46, (unint64_t)v47, (uint64_t)sub_1005519D8, (uint64_t)(&v41 - 4), (void (*)(unint64_t))sub_1005519D0, v4, (uint64_t)v30);
    goto LABEL_9;
  }
  if (v42)
  {
    __chkstk_darwin(v31);
    uint64_t v39 = sub_1005512DC;
    uint64_t v40 = v4;
    swift_beginAccess();
    swift_retain_n();
    __uint64_t v35 = static MonotonicTime.now()();
    sub_100546980(v35, v46, (uint64_t)v47, (uint64_t)sub_1005519D8, (uint64_t)(&v41 - 4), (void (*)(unint64_t))sub_1005519D0, v4, (uint64_t)v30);
LABEL_9:
    swift_endAccess();
    uint64_t v36 = *(void *)(v32 + 176);
    if ((*(void *)(v32 + 104) & 0x8000000000000000) != 0)
    {
      if (v36)
      {
        swift_retain();
        RestartableTimer.stop()();
        goto LABEL_14;
      }
    }
    else if (v36)
    {
      swift_retain();
      RestartableTimer.start()();
LABEL_14:
      swift_release();
    }
    sub_1005517BC((uint64_t)v30, _s6LoggerVMa);
    return swift_release_n();
  }
  swift_beginAccess();
  sub_1005448C0(v46, v47, (uint64_t)v30);
  swift_endAccess();
  uint64_t v38 = *(void *)(v4 + 176);
  if ((*(void *)(v32 + 104) & 0x8000000000000000) != 0)
  {
    if (v38)
    {
      swift_retain();
      RestartableTimer.stop()();
      goto LABEL_21;
    }
  }
  else if (v38)
  {
    swift_retain();
    RestartableTimer.start()();
LABEL_21:
    swift_release();
  }
  return sub_1005517BC((uint64_t)v30, _s6LoggerVMa);
}

uint64_t sub_1005448C0(uint64_t a1, uint8_t *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v59 = (char *)a1;
  uint64_t v57 = _s6LoggerVMa(0);
  uint64_t v7 = __chkstk_darwin(v57);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  unint64_t v58 = (uint8_t *)&v52 - v11;
  __chkstk_darwin(v10);
  uint64_t v56 = (uint64_t)&v52 - v12;
  uint64_t v13 = sub_1005E0ED0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v52 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v52 - v21;
  uint64_t v23 = *(void *)(v3 + 40);
  if (*(void *)(v23 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_1005A0310((uint64_t)v59, (uint64_t)a2);
    if (v25)
    {
      int v26 = *(unsigned __int8 *)(*(void *)(v23 + 56) + v24);
      swift_bridgeObjectRelease();
      if (v26)
      {
        if (v26 == 1)
        {
          uint64_t v27 = v22;
          (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v22, a3, v13);
          uint64_t v28 = v56;
          sub_10055181C(a3, v56);
          uint64_t v29 = sub_1005E0EB0();
          os_log_type_t v30 = sub_1005E2590();
          if (os_log_type_enabled(v29, v30))
          {
            uint64_t v31 = (uint8_t *)swift_slowAlloc();
            uint64_t v59 = (char *)swift_slowAlloc();
            uint64_t v61 = v59;
            unint64_t v58 = v31;
            *(_DWORD *)uint64_t v31 = 136446210;
            uint64_t v54 = (uint64_t)(v31 + 4);
            uint64_t v55 = v13;
            swift_bridgeObjectRetain();
            uint64_t v32 = sub_1005E1D00();
            unint64_t v34 = v33;
            swift_bridgeObjectRelease();
            uint64_t v60 = sub_1005904BC(v32, v34, (uint64_t *)&v61);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_1005517BC(v28, _s6LoggerVMa);
            _os_log_impl((void *)&_mh_execute_header, v29, v30, "[%{public}s] Account did start sync but was already started.", v58, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v27, v55);
          }
          else
          {
            sub_1005517BC(v28, _s6LoggerVMa);

            return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v27, v13);
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v20, a3, v13);
          int v44 = v58;
          sub_10055181C(a3, (uint64_t)v58);
          uint64_t v45 = sub_1005E0EB0();
          os_log_type_t v46 = sub_1005E25A0();
          if (os_log_type_enabled(v45, v46))
          {
            uint64_t v55 = v13;
            uint64_t v59 = v20;
            uint64_t v47 = swift_slowAlloc();
            uint64_t v56 = v14;
            uint64_t v48 = (uint8_t *)v47;
            uint64_t v61 = (char *)swift_slowAlloc();
            *(_DWORD *)uint64_t v48 = 136446210;
            uint64_t v54 = (uint64_t)(v48 + 4);
            swift_bridgeObjectRetain();
            uint64_t v49 = sub_1005E1D00();
            unint64_t v51 = v50;
            swift_bridgeObjectRelease();
            uint64_t v60 = sub_1005904BC(v49, v51, (uint64_t *)&v61);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_1005517BC((uint64_t)v44, _s6LoggerVMa);
            _os_log_impl((void *)&_mh_execute_header, v45, v46, "[%{public}s] Account did start sync, but was already completed.", v48, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v59, v55);
          }
          else
          {
            sub_1005517BC((uint64_t)v44, _s6LoggerVMa);

            return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v20, v13);
          }
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  unint64_t v58 = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a3, v13);
  sub_10055181C(a3, (uint64_t)v9);
  uint64_t v36 = sub_1005E0EB0();
  os_log_type_t v37 = sub_1005E25C0();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    uint64_t v61 = (char *)v54;
    uint64_t v55 = v13;
    uint64_t v56 = v14;
    *(_DWORD *)uint64_t v38 = 136446210;
    uint64_t v52 = v38 + 4;
    uint64_t v53 = v38;
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1005E1D00();
    unint64_t v41 = v40;
    swift_bridgeObjectRelease();
    uint64_t v60 = sub_1005904BC(v39, v41, (uint64_t *)&v61);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_1005517BC((uint64_t)v9, _s6LoggerVMa);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "[%{public}s] Account did start sync work.", v53, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v56 + 8))(v17, v55);
  }
  else
  {
    sub_1005517BC((uint64_t)v9, _s6LoggerVMa);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
  uint64_t v42 = v58;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v61 = *(char **)(v4 + 40);
  *(void *)(v4 + 40) = 0x8000000000000000;
  sub_10059A8F0(1, (uint64_t)v59, (uint64_t)v42, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + 40) = v61;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1005450AC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(unint64_t), uint64_t a8, char *a9)
{
  uint64_t v106 = a8;
  id v105 = a7;
  uint64_t v104 = a6;
  uint64_t v103 = a5;
  uint64_t v118 = a4;
  uint64_t v117 = _s6LoggerVMa(0);
  uint64_t v13 = __chkstk_darwin(v117);
  uint64_t v98 = (uint64_t)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v97 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v108 = (uint64_t)&v97 - v19;
  __chkstk_darwin(v18);
  uint64_t v119 = (char *)&v97 - v20;
  uint64_t v21 = sub_1005E0ED0();
  uint64_t v123 = *(void *)(v21 - 8);
  uint64_t v22 = __chkstk_darwin(v21);
  unint64_t v24 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (void (**)(char *, char *, uint64_t))((char *)&v97 - v26);
  uint64_t v28 = __chkstk_darwin(v25);
  os_log_type_t v30 = (char *)&v97 - v29;
  __chkstk_darwin(v28);
  uint64_t v124 = (char *)&v97 - v31;
  long long v32 = v9[3];
  v127[2] = v9[2];
  v127[3] = v32;
  *(_OWORD *)uint64_t v128 = v9[4];
  *(_OWORD *)&v128[12] = *(_OWORD *)((char *)v9 + 76);
  long long v33 = *v9;
  long long v34 = v9[1];
  uint64_t v109 = v9;
  v127[0] = v33;
  v127[1] = v34;
  sub_100551880((uint64_t)v127);
  unint64_t v102 = a1;
  uint64_t v35 = sub_100549FF4(a1);
  sub_1005518FC((uint64_t)v127);
  uint64_t v36 = *(void *)(v35 + 16);
  uint64_t v107 = a2;
  if (v36)
  {
    swift_bridgeObjectRetain();
    unint64_t v37 = sub_1005A0310(a2, a3);
    double v38 = 0.0;
    if (v39) {
      double v38 = *(double *)(*(void *)(v35 + 56) + 8 * v37);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    double v38 = 0.0;
  }
  unint64_t v40 = v119;
  swift_bridgeObjectRelease();
  if ((~*(void *)&v38 & 0x7FF0000000000000) == 0)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if (v38 <= -9.22337204e18)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (v38 >= 9.22337204e18)
  {
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  unsigned __int16 v101 = v30;
  uint64_t v99 = v17;
  uint64_t v97 = v24;
  id v100 = v27;
  uint64_t v17 = a9;
  uint64_t v112 = (uint64_t)v38;
  uint64_t v41 = v118;
  uint64_t v42 = *(void *)(v118 + 56);
  uint64_t v120 = v118 + 56;
  uint64_t v43 = 1 << *(unsigned char *)(v118 + 32);
  uint64_t v44 = -1;
  if (v43 < 64) {
    uint64_t v44 = ~(-1 << v43);
  }
  a1 = v44 & v42;
  int64_t v121 = (unint64_t)(v43 + 63) >> 6;
  uint64_t v27 = (void (**)(char *, char *, uint64_t))(v123 + 16);
  os_log_type_t v30 = (char *)(v123 + 8);
  swift_bridgeObjectRetain();
  uint64_t v45 = 0;
  *(void *)&long long v46 = 136446722;
  long long v111 = v46;
  uint64_t v110 = (char *)&type metadata for Any + 8;
  uint64_t v47 = v124;
  unint64_t v115 = a9;
  uint64_t v116 = v21;
  uint64_t v114 = a3;
  unint64_t v113 = v27;
  while (1)
  {
    if (a1)
    {
      uint64_t v123 = (a1 - 1) & a1;
      uint64_t v124 = v45;
      unint64_t v48 = __clz(__rbit64(a1)) | ((void)v45 << 6);
      goto LABEL_32;
    }
    int64_t v49 = (int64_t)(v45 + 1);
    if (__OFADD__(v45, 1))
    {
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    if (v49 >= v121) {
      goto LABEL_34;
    }
    unint64_t v50 = *(void *)(v120 + 8 * v49);
    int64_t v51 = (int64_t)(v45 + 1);
    if (!v50)
    {
      int64_t v51 = (int64_t)(v45 + 2);
      if ((uint64_t)(v45 + 2) >= v121) {
        goto LABEL_34;
      }
      unint64_t v50 = *(void *)(v120 + 8 * v51);
      if (!v50)
      {
        int64_t v51 = (int64_t)(v45 + 3);
        if ((uint64_t)(v45 + 3) >= v121) {
          goto LABEL_34;
        }
        unint64_t v50 = *(void *)(v120 + 8 * v51);
        if (!v50)
        {
          int64_t v51 = (int64_t)(v45 + 4);
          if ((uint64_t)(v45 + 4) >= v121) {
            goto LABEL_34;
          }
          unint64_t v50 = *(void *)(v120 + 8 * v51);
          if (!v50) {
            break;
          }
        }
      }
    }
LABEL_31:
    uint64_t v123 = (v50 - 1) & v50;
    uint64_t v124 = (char *)v51;
    unint64_t v48 = __clz(__rbit64(v50)) + (v51 << 6);
LABEL_32:
    LODWORD(v122) = *(_DWORD *)(*(void *)(v41 + 48) + 4 * v48);
    (*v27)(v47, v17, v21);
    sub_10055181C((uint64_t)v17, (uint64_t)v40);
    uint64_t v53 = v47;
    uint64_t v54 = sub_1005E0EB0();
    os_log_type_t v55 = sub_1005E25C0();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = swift_slowAlloc();
      uint64_t v126 = swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = v111;
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_1005E1D00();
      unint64_t v59 = v58;
      uint64_t v41 = v118;
      swift_bridgeObjectRelease();
      uint64_t v60 = v57;
      unint64_t v40 = v119;
      *(void *)(v56 + 4) = sub_1005904BC(v60, v59, &v126);
      uint64_t v17 = v115;
      swift_bridgeObjectRelease();
      sub_1005517BC((uint64_t)v40, _s6LoggerVMa);
      *(_WORD *)(v56 + 12) = 1024;
      *(_DWORD *)(v56 + 14) = v122;
      *(_WORD *)(v56 + 18) = 2048;
      *(void *)(v56 + 20) = v112;
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "[%{public}s] Account did complete sync #%u (run time: %ld).", (uint8_t *)v56, 0x1Cu);
      swift_arrayDestroy();
      uint64_t v27 = v113;
      a3 = v114;
      swift_slowDealloc();
      uint64_t v21 = v116;
      swift_slowDealloc();
    }
    else
    {
      sub_1005517BC((uint64_t)v40, _s6LoggerVMa);
    }

    (*(void (**)(char *, uint64_t))v30)(v53, v21);
    uint64_t v47 = v53;
    a1 = v123;
    uint64_t v45 = v124;
  }
  uint64_t v52 = v45 + 5;
  if ((uint64_t)(v45 + 5) < v121)
  {
    unint64_t v50 = *(void *)(v120 + 8 * (void)v52);
    if (!v50)
    {
      while (1)
      {
        int64_t v51 = (int64_t)(v52 + 1);
        if (__OFADD__(v52, 1)) {
          goto LABEL_67;
        }
        if (v51 >= v121) {
          goto LABEL_34;
        }
        unint64_t v50 = *(void *)(v120 + 8 * v51);
        ++v52;
        if (v50) {
          goto LABEL_31;
        }
      }
    }
    int64_t v51 = (int64_t)(v45 + 5);
    goto LABEL_31;
  }
LABEL_34:
  swift_release();
  unint64_t v40 = (char *)*((void *)v109 + 4);
  unint64_t v61 = sub_100550EC8((uint64_t)v40, v107, a3);
  if (v62) {
    goto LABEL_43;
  }
  a1 = v61;
  if ((v61 & 0x8000000000000000) != 0) {
    goto LABEL_71;
  }
  unint64_t v63 = *((void *)v40 + 2);
  if (v61 >= v63) {
    goto LABEL_72;
  }
  uint64_t v64 = &v40[48 * v61];
  uint64_t v65 = v64 + 32;
  if ((v64[68] & 1) != 0 || (v66 = sub_100010AAC(*((_DWORD *)v64 + 16), v41), unint64_t v63 = *((void *)v40 + 2), !v66))
  {
    if (a1 >= v63) {
      goto LABEL_73;
    }
    if (v65[36] == 1)
    {
      uint64_t v79 = *v27;
    }
    else
    {
      uint64_t v81 = *((void *)v109 + 7);
      uint64_t v79 = *v27;
      if (v81 < 0 || *((_DWORD *)v65 + 8) != v81)
      {
        char v87 = v97;
        v79(v97, v17, v21);
        uint64_t v88 = v98;
        sub_10055181C((uint64_t)v17, v98);
        double v89 = sub_1005E0EB0();
        os_log_type_t v90 = sub_1005E25A0();
        if (os_log_type_enabled(v89, v90))
        {
          NSString v91 = (uint8_t *)swift_slowAlloc();
          uint64_t v123 = swift_slowAlloc();
          uint64_t v126 = v123;
          unint64_t v122 = v91;
          *(_DWORD *)NSString v91 = 136446210;
          int64_t v121 = (int64_t)(v91 + 4);
          uint64_t v124 = v30;
          swift_bridgeObjectRetain();
          uint64_t v92 = sub_1005E1D00();
          unint64_t v94 = v93;
          uint64_t v17 = v115;
          swift_bridgeObjectRelease();
          uint64_t v125 = sub_1005904BC(v92, v94, &v126);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1005517BC(v88, _s6LoggerVMa);
          _os_log_impl((void *)&_mh_execute_header, v89, v90, "[%{public}s] Account is running request that is not the current sync.", v122, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))v124)(v87, v116);
        }
        else
        {
          sub_1005517BC(v88, _s6LoggerVMa);

          (*(void (**)(char *, uint64_t))v30)(v87, v21);
        }
        unint64_t v40 = (char *)*((void *)v109 + 4);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v40 = sub_10057217C((uint64_t)v40);
        }
        if (a1 >= *((void *)v40 + 2))
        {
          __break(1u);
          return;
        }
LABEL_62:
        unint64_t v95 = &v40[48 * a1];
        NSString v96 = v95 + 32;
        if ((v95[68] & 1) == 0) {
          sub_10058ABE0(*((_DWORD *)v95 + 16));
        }
        *((_DWORD *)v96 + 8) = 0;
        v96[36] = 1;
        *((void *)v109 + 4) = v40;
        goto LABEL_65;
      }
    }
    os_log_t v69 = (char *)v100;
    v79((char *)v100, v17, v21);
    uint64_t v82 = (uint64_t)v99;
    sub_10055181C((uint64_t)v17, (uint64_t)v99);
    uint64_t v70 = sub_1005E0EB0();
    os_log_type_t v71 = sub_1005E25A0();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      uint64_t v123 = swift_slowAlloc();
      uint64_t v126 = v123;
      *(_DWORD *)uint64_t v72 = 136446210;
      unint64_t v122 = v72 + 4;
      uint64_t v124 = v30;
      swift_bridgeObjectRetain();
      uint64_t v83 = sub_1005E1D00();
      unint64_t v85 = v84;
      swift_bridgeObjectRelease();
      uint64_t v86 = v83;
      uint64_t v17 = v115;
      uint64_t v125 = sub_1005904BC(v86, v85, &v126);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1005517BC(v82, _s6LoggerVMa);
      uint64_t v78 = "[%{public}s] Account did complete sync that is not the current sync.";
      goto LABEL_53;
    }
    uint64_t v80 = v82;
    goto LABEL_55;
  }
  if (a1 >= v63) {
    goto LABEL_74;
  }
  uint64_t v67 = *((void *)v65 + 2);
  uint64_t v21 = *((void *)v65 + 3);
  swift_bridgeObjectRetain();
  uint64_t v68 = v109;
  sub_10054A4A0(v67, v21, (uint64_t)v17);
  swift_bridgeObjectRelease();
  unint64_t v40 = (char *)*((void *)v68 + 4);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_75:
  }
    unint64_t v40 = sub_10057217C((uint64_t)v40);
  if (a1 < *((void *)v40 + 2)) {
    goto LABEL_62;
  }
  __break(1u);
LABEL_43:
  os_log_t v69 = v101;
  (*v27)(v101, v17, v21);
  sub_10055181C((uint64_t)v17, v108);
  uint64_t v70 = sub_1005E0EB0();
  os_log_type_t v71 = sub_1005E25A0();
  if (!os_log_type_enabled(v70, v71))
  {
    uint64_t v80 = v108;
LABEL_55:
    sub_1005517BC(v80, _s6LoggerVMa);

    (*(void (**)(char *, uint64_t))v30)(v69, v21);
    goto LABEL_65;
  }
  uint64_t v72 = (uint8_t *)swift_slowAlloc();
  uint64_t v123 = swift_slowAlloc();
  uint64_t v126 = v123;
  *(_DWORD *)uint64_t v72 = 136446210;
  unint64_t v122 = v72 + 4;
  uint64_t v73 = v17;
  uint64_t v124 = v30;
  swift_bridgeObjectRetain();
  uint64_t v74 = sub_1005E1D00();
  unint64_t v76 = v75;
  swift_bridgeObjectRelease();
  uint64_t v77 = v74;
  uint64_t v17 = v73;
  uint64_t v125 = sub_1005904BC(v77, v76, &v126);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  sub_1005517BC(v108, _s6LoggerVMa);
  uint64_t v78 = "[%{public}s] Unknown account did complete sync.";
LABEL_53:
  _os_log_impl((void *)&_mh_execute_header, v70, v71, v78, v72, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  (*(void (**)(char *, uint64_t))v124)(v69, v116);
LABEL_65:
  sub_1005437A0(v102, v103, v104, v105, v106, (uint64_t)v17);
}

void sub_100545EF0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(unint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v9 = (uint64_t)v8;
  uint64_t v80 = a7;
  uint64_t v81 = a8;
  uint64_t v79 = a6;
  uint64_t v78 = a5;
  uint64_t v77 = a4;
  uint64_t v75 = _s6LoggerVMa(0);
  uint64_t v13 = __chkstk_darwin(v75);
  uint64_t v73 = (uint64_t)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v69 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v69 - v18;
  uint64_t v20 = sub_1005E0ED0();
  uint64_t v21 = *(void (***)(char *, uint64_t, uint64_t))(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v72 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v74 = (void (**)(char *, char *))((char *)&v69 - v25);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v69 - v26;
  long long v28 = v8[3];
  long long v85 = v8[2];
  long long v86 = v28;
  v87[0] = v8[4];
  *(_OWORD *)((char *)v87 + 12) = *(_OWORD *)((char *)v8 + 76);
  long long v29 = v8[1];
  v84[0] = *v8;
  v84[1] = v29;
  sub_100551880((uint64_t)v84);
  uint64_t v76 = a1;
  uint64_t v30 = sub_100549FF4(a1);
  sub_1005518FC((uint64_t)v84);
  if (*(void *)(v30 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v31 = sub_1005A0310(a2, a3);
    double v32 = 0.0;
    if (v33) {
      double v32 = *(double *)(*(void *)(v30 + 56) + 8 * v31);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    double v32 = 0.0;
  }
  long long v34 = v21;
  swift_bridgeObjectRelease();
  if ((~*(void *)&v32 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v32 <= -9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v32 >= 9.22337204e18)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v35 = v20;
  uint64_t v36 = v85;
  unint64_t v37 = sub_100550EC8(v85, a2, a3);
  if (v38)
  {
    uint64_t v50 = v81;
    v34[2](v27, v81, v20);
    sub_10055181C(v50, (uint64_t)v19);
    int64_t v51 = sub_1005E0EB0();
    os_log_type_t v52 = sub_1005E25A0();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v73 = v9;
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      v83[0] = v71;
      uint64_t v72 = (char *)v20;
      *(_DWORD *)uint64_t v53 = 136446210;
      uint64_t v70 = v53 + 4;
      uint64_t v74 = (void (**)(char *, char *))v34;
      swift_bridgeObjectRetain();
      uint64_t v54 = sub_1005E1D00();
      unint64_t v56 = v55;
      swift_bridgeObjectRelease();
      uint64_t v82 = sub_1005904BC(v54, v56, v83);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1005517BC((uint64_t)v19, _s6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "[%{public}s] Unknown account did go above data threshold.", v53, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v74[1](v27, v72);
    }
    else
    {
      sub_1005517BC((uint64_t)v19, _s6LoggerVMa);

      ((void (*)(char *, uint64_t))v34[1])(v27, v20);
    }
    goto LABEL_28;
  }
  a3 = v37;
  if ((v37 & 0x8000000000000000) != 0) {
    goto LABEL_32;
  }
  if (v37 >= *(void *)(v36 + 16))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    uint64_t v27 = sub_10057217C((uint64_t)v27);
    goto LABEL_24;
  }
  uint64_t v39 = v36 + 48 * v37;
  unint64_t v40 = v34[2];
  if (*(unsigned char *)(v39 + 68))
  {
    uint64_t v41 = v72;
    uint64_t v42 = v81;
    v40(v72, v81, v35);
    uint64_t v43 = v73;
    sub_10055181C(v42, v73);
    uint64_t v44 = sub_1005E0EB0();
    os_log_type_t v45 = sub_1005E25A0();
    if (os_log_type_enabled(v44, v45))
    {
      long long v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      v83[0] = v71;
      uint64_t v74 = (void (**)(char *, char *))v34;
      uint64_t v70 = v46;
      *(_DWORD *)long long v46 = 136446210;
      os_log_t v69 = v46 + 4;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1005E1D00();
      unint64_t v49 = v48;
      swift_bridgeObjectRelease();
      uint64_t v82 = sub_1005904BC(v47, v49, v83);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1005517BC(v73, _s6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "[%{public}s] Account did go above data threshold, but has no active sync.", v70, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v74[1](v41, (char *)v35);
    }
    else
    {
      sub_1005517BC(v43, _s6LoggerVMa);

      ((void (*)(char *, uint64_t))v34[1])(v41, v35);
    }
LABEL_28:
    sub_1005437A0(v76, v77, v78, v79, v80, v81);
    return;
  }
  uint64_t v73 = v9;
  int v57 = *(_DWORD *)(v39 + 64);
  unint64_t v58 = v74;
  uint64_t v59 = v81;
  v40((char *)v74, v81, v20);
  sub_10055181C(v59, (uint64_t)v17);
  uint64_t v60 = sub_1005E0EB0();
  os_log_type_t v61 = sub_1005E25A0();
  int v62 = v61;
  if (os_log_type_enabled(v60, v61))
  {
    uint64_t v71 = (uint64_t)v32;
    uint64_t v63 = swift_slowAlloc();
    v83[0] = swift_slowAlloc();
    LODWORD(v70) = v57;
    *(_DWORD *)uint64_t v63 = 136446722;
    os_log_t v69 = (uint8_t *)(v63 + 4);
    uint64_t v72 = (char *)v20;
    LODWORD(v75) = v62;
    swift_bridgeObjectRetain();
    uint64_t v64 = sub_1005E1D00();
    unint64_t v66 = v65;
    swift_bridgeObjectRelease();
    uint64_t v82 = sub_1005904BC(v64, v66, v83);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_1005517BC((uint64_t)v17, _s6LoggerVMa);
    *(_WORD *)(v63 + 12) = 2048;
    uint64_t v82 = v71;
    sub_1005E2960();
    *(_WORD *)(v63 + 22) = 1024;
    LODWORD(v82) = v70;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v75, "[%{public}s] Account did go above data threshold (run time: %ld). Completing its sync #%u.", (uint8_t *)v63, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    ((void (*)(char *, char *))v34[1])((char *)v74, v72);
  }
  else
  {
    sub_1005517BC((uint64_t)v17, _s6LoggerVMa);

    ((void (*)(void, uint64_t))v34[1])(v58, v20);
  }
  uint64_t v27 = *(char **)(v73 + 32);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_34;
  }
LABEL_24:
  if (a3 < *((void *)v27 + 2))
  {
    uint64_t v67 = &v27[48 * a3];
    uint64_t v68 = v67 + 32;
    if ((v67[68] & 1) == 0) {
      sub_10058ABE0(*((_DWORD *)v67 + 16));
    }
    *((_DWORD *)v68 + 8) = 0;
    v68[36] = 1;
    *(void *)(v73 + 32) = v27;
    goto LABEL_28;
  }
  __break(1u);
}

double sub_100546918@<D0>(long long *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1005515DC((uint64_t)a1);
  swift_retain();
  sub_100550BA4(a1, a2, (uint64_t)&v8);
  double result = *(double *)&v8;
  long long v7 = *(_OWORD *)v9;
  *(_OWORD *)a3 = v8;
  *(_OWORD *)(a3 + 16) = v7;
  *(void *)(a3 + 29) = *(void *)&v9[13];
  return result;
}

void sub_100546980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(unint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v72 = a6;
  uint64_t v73 = a7;
  uint64_t v70 = a4;
  uint64_t v71 = a5;
  uint64_t v69 = a1;
  os_log_t v68 = (os_log_t)_s6LoggerVMa(0);
  uint64_t v12 = __chkstk_darwin(v68);
  uint64_t v66 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v65 = (uint8_t *)&v62 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v62 - v16;
  uint64_t v18 = sub_1005E0ED0();
  uint64_t v19 = *(void (***)(char *, uint64_t, uint64_t))(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v67 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = ((char *)&v62 - v23);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v62 - v25;
  uint64_t v74 = v8;
  uint64_t v27 = *(void *)(v8 + 32);
  unint64_t v28 = sub_100550EC8(v27, a2, a3);
  if (v29)
  {
    v19[2](v26, a8, v18);
    sub_10055181C(a8, (uint64_t)v17);
    uint64_t v44 = sub_1005E0EB0();
    os_log_type_t v45 = sub_1005E25A0();
    uint64_t v27 = a8;
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v64 = v18;
      long long v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      v76[0] = v66;
      *(_DWORD *)long long v46 = 136446210;
      unint64_t v65 = v46 + 4;
      uint64_t v67 = (char *)v19;
      os_log_t v68 = v44;
      swift_bridgeObjectRetain();
      uint64_t v27 = a8;
      uint64_t v47 = sub_1005E1D00();
      unint64_t v49 = v48;
      swift_bridgeObjectRelease();
      uint64_t v75 = sub_1005904BC(v47, v49, v76);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1005517BC((uint64_t)v17, _s6LoggerVMa);
      os_log_t v50 = v68;
      _os_log_impl((void *)&_mh_execute_header, v68, v45, "[%{public}s] Received server-unavailable for unknown account.", v46, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*((void (**)(char *, uint64_t))v67 + 1))(v26, v64);
    }
    else
    {
      sub_1005517BC((uint64_t)v17, _s6LoggerVMa);

      ((void (*)(char *, uint64_t))v19[1])(v26, v18);
    }
    goto LABEL_19;
  }
  unint64_t v30 = v28;
  if ((v28 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v28 >= *(void *)(v27 + 16))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    uint64_t v17 = sub_10057217C((uint64_t)v17);
    goto LABEL_15;
  }
  uint64_t v31 = a8;
  unint64_t v32 = v27 + 48 * v28;
  char v33 = (char *)v19;
  long long v34 = v19[2];
  if (*(unsigned char *)(v32 + 68))
  {
    uint64_t v35 = v67;
    uint64_t v27 = v31;
    v34(v67, v31, v18);
    uint64_t v36 = v66;
    sub_10055181C(v31, v66);
    unint64_t v37 = sub_1005E0EB0();
    os_log_type_t v38 = sub_1005E25A0();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      unint64_t v65 = (uint8_t *)swift_slowAlloc();
      v76[0] = (uint64_t)v65;
      *(_DWORD *)uint64_t v39 = 136446210;
      int v62 = v39 + 4;
      uint64_t v63 = v39;
      uint64_t v64 = v18;
      uint64_t v40 = v36;
      swift_bridgeObjectRetain();
      uint64_t v27 = v31;
      uint64_t v41 = sub_1005E1D00();
      unint64_t v43 = v42;
      swift_bridgeObjectRelease();
      uint64_t v75 = sub_1005904BC(v41, v43, v76);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1005517BC(v40, _s6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "[%{public}s] Received server-unavailable, but the account has no active sync.", v63, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(char *, uint64_t))v19[1])(v67, v64);
    }
    else
    {
      sub_1005517BC(v36, _s6LoggerVMa);

      ((void (*)(char *, uint64_t))v19[1])(v35, v18);
    }
LABEL_19:
    sub_1005437A0(v69, v70, v71, v72, v73, v27);
    return;
  }
  LODWORD(v66) = *(_DWORD *)(v32 + 64);
  int64_t v51 = v24;
  uint64_t v27 = a8;
  uint64_t v52 = v18;
  v34((char *)v24, a8, v18);
  uint64_t v53 = (uint64_t)v65;
  sub_10055181C(a8, (uint64_t)v65);
  uint64_t v54 = sub_1005E0EB0();
  os_log_type_t v55 = sub_1005E25A0();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v56 = swift_slowAlloc();
    uint64_t v63 = (uint8_t *)swift_slowAlloc();
    v76[0] = (uint64_t)v63;
    *(_DWORD *)uint64_t v56 = 136446466;
    int v62 = (uint8_t *)(v56 + 4);
    uint64_t v67 = v33;
    os_log_t v68 = v51;
    uint64_t v64 = v52;
    swift_bridgeObjectRetain();
    uint64_t v27 = v31;
    uint64_t v57 = sub_1005E1D00();
    unint64_t v59 = v58;
    swift_bridgeObjectRelease();
    uint64_t v75 = sub_1005904BC(v57, v59, v76);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_1005517BC(v53, _s6LoggerVMa);
    *(_WORD *)(v56 + 12) = 1024;
    LODWORD(v75) = v66;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "[%{public}s] Received server-unavailable. Completing sync #%u.", (uint8_t *)v56, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*((void (**)(os_log_t, uint64_t))v67 + 1))(v68, v64);
  }
  else
  {
    sub_1005517BC(v53, _s6LoggerVMa);

    (*((void (**)(NSObject *, uint64_t))v33 + 1))(v51, v52);
  }
  a2 = v74;
  uint64_t v17 = *(char **)(v74 + 32);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_22;
  }
LABEL_15:
  if (v30 < *((void *)v17 + 2))
  {
    uint64_t v60 = &v17[48 * v30];
    os_log_type_t v61 = v60 + 32;
    if ((v60[68] & 1) == 0) {
      sub_10058ABE0(*((_DWORD *)v60 + 16));
    }
    *((_DWORD *)v61 + 8) = 0;
    v61[36] = 1;
    *(void *)(a2 + 32) = v17;
    goto LABEL_19;
  }
  __break(1u);
}

uint64_t sub_100547208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v25 = a3;
  uint64_t v7 = sub_1005E1680();
  uint64_t v30 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005E16C0();
  uint64_t v28 = *(void *)(v10 - 8);
  uint64_t v29 = v10;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)(a1 + 24);
  uint64_t v14 = sub_100540980(a2);
  id v15 = v13;
  uint64_t v16 = sub_10054EEE4((uint64_t)v14, (uint64_t)v15);

  if (v16[2])
  {
    sub_10000566C(&qword_100718D00);
    uint64_t v17 = (void *)sub_1005E2FF0();
  }
  else
  {
    uint64_t v17 = _swiftEmptyDictionarySingleton;
  }
  aBlock[0] = v17;
  sub_100550F5C(v16, 1, aBlock);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = aBlock[0];
  __chkstk_darwin();
  *(&v25 - 4) = (uint64_t)sub_1005475B4;
  *(&v25 - 3) = 0;
  uint64_t v19 = v25;
  *(&v25 - 2) = v18;
  *(&v25 - 1) = v19;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_10054B4F4((uint64_t)sub_10055120C, (uint64_t)(&v25 - 6), a2);
  swift_release();
  uint64_t v21 = (void *)swift_allocObject();
  uint64_t v22 = v27;
  v21[2] = v26;
  v21[3] = v22;
  v21[4] = v20;
  aBlock[4] = sub_100551294;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046A1E4;
  aBlock[3] = &unk_1006FCEF8;
  uint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  sub_1005E16A0();
  uint64_t v31 = _swiftEmptyArrayStorage;
  sub_10054007C();
  sub_10000566C((uint64_t *)&unk_100719780);
  sub_100057E98((unint64_t *)&qword_100718A00, (uint64_t *)&unk_100719780);
  sub_1005E2AD0();
  sub_1005E2610();
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v29);
  return swift_release();
}

uint64_t *sub_1005475B4(uint64_t *result)
{
  uint64_t v1 = *result;
  unint64_t v2 = result[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *result & 0xFFFFFFFFFFFFLL;
  }
  if (v3)
  {
    swift_bridgeObjectRetain();
    return (uint64_t *)v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005475FC(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100544014(a4, a5, a1, a2);
    return swift_release();
  }
  return result;
}

void *sub_100547688(void *result, uint64_t a2, uint64_t a3, long long *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  long long v21 = *a4;
  long long v9 = v21;
  uint64_t v10 = HIBYTE(*((void *)&v21 + 1)) & 0xFLL;
  if ((*((void *)&v21 + 1) & 0x2000000000000000) == 0) {
    uint64_t v10 = v21 & 0xFFFFFFFFFFFFLL;
  }
  if (v10)
  {
    uint64_t v15 = *((void *)a4 + 6);
    uint64_t v20 = *((void *)a4 + 5);
    int v19 = (int)result;
    type metadata accessor for SearchIndexPersistence();
    swift_allocObject();
    sub_100057B18((uint64_t)&v21);
    swift_retain();
    uint64_t v17 = a5;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return sub_10058BA38(v19, v9, *((void **)&v9 + 1), v20, v15, v17, a6, a7, a2, a3, a8, a9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100547798()
{
  uint64_t v0 = sub_100539798();
  swift_beginAccess();
  unint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1005E2FB0();
    uint64_t v2 = result;
    if (result) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v2) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    while (1)
    {
      id v7 = (v1 & 0xC000000000000001) != 0 ? (id)sub_1005E2CF0() : *(id *)(v1 + 8 * v4 + 32);
      uint64_t v8 = v7;
      if (([v7 isDeleted] & 1) == 0)
      {
        id v9 = [v8 managedObjectContext];

        if (v9) {
          break;
        }
      }
LABEL_6:

      if (v2 == ++v4) {
        return swift_bridgeObjectRelease_n();
      }
    }
    NSString v10 = sub_1005E1BD0();
    [v8 willAccessValueForKey:v10];

    id v11 = [v8 primitiveAccount];
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = sub_1005E1C00();
      unint64_t v15 = v14;

      uint64_t v16 = HIBYTE(v15) & 0xF;
      if ((v15 & 0x2000000000000000) == 0) {
        uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
      }
      if (v16) {
        goto LABEL_18;
      }
      swift_bridgeObjectRelease();
    }
    unint64_t v15 = 0;
LABEL_18:
    NSString v17 = sub_1005E1BD0();
    [v8 didAccessValueForKey:v17];

    swift_bridgeObjectRelease();
    if (v15)
    {
      if (qword_1007187A8 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_1005E0ED0();
      uint64_t v6 = sub_1003461B0(v5, (uint64_t)qword_100718BD8);
      sub_1005479E8(v6);
    }
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005479E8(uint64_t a1)
{
  uint64_t v3 = sub_1005E0970();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  id v7 = (char *)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  NSString v10 = (char *)v69 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)v69 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)v69 - v15;
  uint64_t result = sub_100578A00(v14);
  if (!v18) {
    return result;
  }
  uint64_t v78 = a1;
  uint64_t v77 = result;
  uint64_t v79 = v18;
  sub_1005E0960();
  uint64_t v83 = v1;
  unint64_t v19 = sub_100578CC4();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v81 = v16;
  v20(v13, v16, v3);
  sub_1005E08F0();
  double v22 = round(v21 / 21600.0);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
  uint64_t v82 = v4 + 8;
  uint64_t v80 = v23;
  uint64_t result = v23(v13, v3);
  if ((~*(void *)&v22 & 0x7FF0000000000000) != 0)
  {
    if (v22 <= -9.22337204e18) {
      goto LABEL_65;
    }
    if (v22 >= 9.22337204e18)
    {
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = (uint64_t)v22;
    v90[0] = v19;
    v90[1] = sub_1005519D4;
    v90[2] = v24;
    v90[3] = sub_1005BADD4;
    v90[4] = 0;
    swift_bridgeObjectRetain();
    uint64_t v75 = sub_1005BA33C(0, 0, v90);
    uint64_t v76 = v25;
    swift_release();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v75 = 0;
    uint64_t v76 = 0;
  }
  unint64_t v26 = sub_100578CC4();
  uint64_t v27 = (uint64_t)v81;
  v20(v10, v81, v3);
  sub_1005E08F0();
  double v29 = round(v28 / 21600.0);
  uint64_t v30 = v10;
  uint64_t v31 = v80;
  uint64_t result = v80(v30, v3);
  if ((~*(void *)&v29 & 0x7FF0000000000000) == 0)
  {
    uint64_t v70 = 0;
    uint64_t v71 = 0;
    uint64_t v72 = 0;
    uint64_t v73 = 0;
    uint64_t v74 = 0;
    goto LABEL_12;
  }
  if (v29 <= -9.22337204e18) {
    goto LABEL_67;
  }
  if (v29 >= 9.22337204e18)
  {
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = (uint64_t)v29;
  v89[0] = v26;
  v89[1] = sub_1005512D4;
  v89[2] = v32;
  void v89[3] = sub_1005BADD4;
  v89[4] = 0;
  memset(v87, 0, sizeof(v87));
  uint64_t v88 = 0;
  swift_bridgeObjectRetain();
  sub_100540A70((uint64_t *)v87, v89, v86);
  uint64_t v27 = (uint64_t)v81;
  uint64_t v70 = v86[0];
  uint64_t v71 = v86[1];
  uint64_t v72 = v86[2];
  uint64_t v73 = v86[3];
  uint64_t v74 = v86[4];
  swift_release();
  swift_bridgeObjectRelease();
LABEL_12:
  swift_bridgeObjectRelease();
  unint64_t v33 = sub_100578CC4();
  v20(v7, (char *)v27, v3);
  sub_1005E08F0();
  double v35 = round(v34 / 21600.0);
  uint64_t result = v31(v7, v3);
  if ((~*(void *)&v35 & 0x7FF0000000000000) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = 0;
LABEL_59:
    unint64_t v59 = sub_100578CC4();
    int v60 = sub_1005BA644(v27, v59);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    os_log_type_t v61 = sub_1005E0EB0();
    os_log_type_t v62 = sub_1005E25C0();
    int v63 = v62;
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v64 = swift_slowAlloc();
      LODWORD(v79) = v60;
      uint64_t v65 = v64;
      uint64_t v83 = swift_slowAlloc();
      uint64_t v85 = v83;
      *(_DWORD *)uint64_t v65 = 136317442;
      swift_bridgeObjectRetain();
      sub_10051B67C(8);
      LODWORD(v78) = v63;
      swift_bridgeObjectRelease();
      uint64_t v66 = sub_1005E1D00();
      unint64_t v68 = v67;
      swift_bridgeObjectRelease();
      uint64_t v84 = sub_1005904BC(v66, v68, &v85);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v65 + 12) = 2048;
      uint64_t v84 = v75;
      sub_1005E2960();
      *(_WORD *)(v65 + 22) = 2048;
      uint64_t v84 = v76;
      sub_1005E2960();
      *(_WORD *)(v65 + 32) = 2048;
      uint64_t v84 = v70;
      sub_1005E2960();
      *(_WORD *)(v65 + 42) = 2048;
      uint64_t v84 = v71;
      sub_1005E2960();
      *(_WORD *)(v65 + 52) = 2048;
      uint64_t v84 = v72;
      sub_1005E2960();
      *(_WORD *)(v65 + 62) = 2048;
      uint64_t v84 = v73;
      sub_1005E2960();
      *(_WORD *)(v65 + 72) = 2048;
      uint64_t v84 = v74;
      sub_1005E2960();
      *(_WORD *)(v65 + 82) = 2048;
      uint64_t v84 = v36;
      sub_1005E2960();
      *(_WORD *)(v65 + 92) = 1024;
      LODWORD(v84) = v79 & 1;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v61, (os_log_type_t)v78, "%s: received %{iec-bytes}ld, sent %{iec-bytes}ld, messages indexed %ld, updated flags %ld, deleted messages %ld, complete re-index %ld, message re-index requests %ld, over quota count %ld, was unavailable: %{BOOL}d", (uint8_t *)v65, 0x62u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return v80(v81, v3);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      return v31((char *)v27, v3);
    }
  }
  if (v35 <= -9.22337204e18) {
    goto LABEL_69;
  }
  if (v35 < 9.22337204e18)
  {
    v69[0] = 0;
    uint64_t v37 = (uint64_t)v35;
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = (uint64_t)v35;
    unint64_t v40 = v33 + 64;
    uint64_t v39 = *(void *)(v33 + 64);
    uint64_t v41 = -1;
    uint64_t v42 = -1 << *(unsigned char *)(v33 + 32);
    v69[2] = ~v42;
    if (-v42 < 64) {
      uint64_t v41 = ~(-1 << -(char)v42);
    }
    unint64_t v43 = v41 & v39;
    int64_t v44 = (unint64_t)(63 - v42) >> 6;
    uint64_t v45 = v37 - 4;
    BOOL v46 = __OFSUB__(v37, 4);
    BOOL v47 = __OFADD__(v37, 1);
    uint64_t v48 = v37 + 1;
    char v49 = v47;
    v69[1] = v44 - 1;
    swift_bridgeObjectRetain_n();
    v69[3] = v38;
    uint64_t result = swift_retain();
    int64_t v50 = 0;
    uint64_t v36 = 0;
    while (1)
    {
      if (v43)
      {
        unint64_t v51 = __clz(__rbit64(v43));
        v43 &= v43 - 1;
        unint64_t v52 = v51 | (v50 << 6);
        if (v46) {
          goto LABEL_55;
        }
        goto LABEL_38;
      }
      int64_t v53 = v50 + 1;
      if (__OFADD__(v50, 1))
      {
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
      if (v53 >= v44) {
        goto LABEL_58;
      }
      unint64_t v54 = *(void *)(v40 + 8 * v53);
      if (!v54)
      {
        int64_t v55 = v50 + 2;
        if (v50 + 2 >= v44) {
          goto LABEL_58;
        }
        unint64_t v54 = *(void *)(v40 + 8 * v55);
        if (v54) {
          goto LABEL_33;
        }
        int64_t v56 = v50 + 3;
        if (v50 + 3 >= v44) {
          goto LABEL_58;
        }
        unint64_t v54 = *(void *)(v40 + 8 * v56);
        if (!v54)
        {
          int64_t v55 = v50 + 4;
          if (v50 + 4 >= v44) {
            goto LABEL_58;
          }
          unint64_t v54 = *(void *)(v40 + 8 * v55);
          if (v54) {
            goto LABEL_33;
          }
          int64_t v56 = v50 + 5;
          if (v50 + 5 >= v44) {
            goto LABEL_58;
          }
          unint64_t v54 = *(void *)(v40 + 8 * v56);
          if (!v54)
          {
            int64_t v55 = v50 + 6;
            if (v50 + 6 >= v44) {
              goto LABEL_58;
            }
            unint64_t v54 = *(void *)(v40 + 8 * v55);
            if (!v54)
            {
              while (1)
              {
                int64_t v53 = v55 + 1;
                if (__OFADD__(v55, 1)) {
                  goto LABEL_71;
                }
                if (v53 >= v44) {
                  goto LABEL_58;
                }
                unint64_t v54 = *(void *)(v40 + 8 * v53);
                ++v55;
                if (v54) {
                  goto LABEL_37;
                }
              }
            }
LABEL_33:
            int64_t v53 = v55;
            goto LABEL_37;
          }
        }
        int64_t v53 = v56;
      }
LABEL_37:
      unint64_t v43 = (v54 - 1) & v54;
      unint64_t v52 = __clz(__rbit64(v54)) + (v53 << 6);
      int64_t v50 = v53;
      if (v46)
      {
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        sub_10003BC80();
        swift_bridgeObjectRelease_n();
        swift_release_n();
        uint64_t v27 = (uint64_t)v81;
        uint64_t v31 = v80;
        goto LABEL_59;
      }
LABEL_38:
      if (v49) {
        goto LABEL_56;
      }
      if (v48 <= v45) {
        goto LABEL_57;
      }
      uint64_t v57 = *(void *)(*(void *)(v33 + 48) + 8 * v52);
      if (v57 > v45 && v48 >= v57)
      {
        uint64_t v58 = *(void *)(*(void *)(v33 + 56) + 72 * v52 + 56);
        BOOL v47 = __OFADD__(v36, v58);
        v36 += v58;
        if (v47) {
          goto LABEL_64;
        }
      }
    }
  }
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
  return result;
}

uint64_t sub_1005484B0(uint64_t a1)
{
  uint64_t v1 = *(os_unfair_lock_s **)(a1 + 200);
  swift_retain();
  os_unfair_lock_lock(v1 + 8);
  sub_100540F54((uint64_t)&v1[4], v6);
  os_unfair_lock_unlock(v1 + 8);
  uint64_t v2 = (void (*)(void *))v6[0];
  swift_release();
  v6[0] = sub_100566A28();
  v6[1] = v3;
  void v6[2] = v4;
  v2(v6);
  return swift_release();
}

void sub_100548560()
{
  uint64_t v1 = v0;
  uint64_t v38 = v0[4];
  uint64_t v2 = *(void *)(v38 + 16);
  if (v2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 68);
    uint64_t v29 = v2;
    do
    {
      ++v3;
      int log = *v4;
      int v5 = *((_DWORD *)v4 - 1);
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v6 = sub_1005E0EB0();
      os_log_type_t v34 = sub_1005E25C0();
      if (os_log_type_enabled(v6, v34))
      {
        int v30 = v5;
        uint64_t v7 = swift_slowAlloc();
        uint64_t v35 = swift_slowAlloc();
        *(_DWORD *)uint64_t v7 = 134218498;
        *(void *)(v7 + 4) = v3;
        *(_WORD *)(v7 + 12) = 2082;
        swift_bridgeObjectRetain();
        sub_10051B67C(8);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        uint64_t v8 = sub_1005E1D00();
        unint64_t v10 = v9;
        swift_bridgeObjectRelease();
        *(void *)(v7 + 14) = sub_1005904BC(v8, v10, &v35);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v7 + 22) = 1024;
        if (log) {
          int v30 = *(_DWORD *)SyncRequest.ID.serverTriggered.unsafeMutableAddressor();
        }
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        *(_DWORD *)(v7 + 24) = v30;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v6, v34, "[%ld] %{public}s, req: #%u", (uint8_t *)v7, 0x1Cu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        uint64_t v2 = v29;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_release_n();
        swift_release_n();
      }
      v4 += 48;
    }
    while (v2 != v3);
    sub_10001D550((uint64_t)&v38);
    uint64_t v1 = v0;
  }
  uint64_t v11 = v1[6];
  uint64_t v12 = v1[7];
  if (v12 < 0) {
    goto LABEL_17;
  }
  uint64_t v13 = v1[8];
  sub_10055140C(v1[6], v1[7]);
  sub_10055140C(v11, v12);
  sub_10055140C(v11, v12);
  swift_retain();
  uint64_t v14 = sub_1005E0EB0();
  os_log_type_t v15 = sub_1005E25C0();
  if (!os_log_type_enabled(v14, v15))
  {

    sub_1005513FC(v11, v12);
    sub_1005513FC(v11, v12);
    swift_release_n();
    return;
  }
  uint64_t v16 = swift_slowAlloc();
  uint64_t v37 = swift_slowAlloc();
  *(_DWORD *)uint64_t v16 = 67109634;
  LODWORD(v35) = v12;
  sub_1005E2960();
  *(_WORD *)(v16 + 8) = 2048;
  uint64_t v35 = v11;
  sub_1005E2960();
  sub_1005513FC(v11, v12);
  *(_WORD *)(v16 + 18) = 2082;
  int64_t v17 = static MonotonicTime.now()();
  uint64_t v18 = v17 - v13;
  if (v17 >= v13)
  {
    if (!__OFSUB__(v17, v13))
    {
LABEL_21:
      os_log_type_t v31 = v15;
      loga = v14;
      double v22 = (double)v18 / 1000000000.0;
      id v23 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
      [v23 setUnitsStyle:1];
      [v23 setAllowedUnits:224];
      [v23 setAllowsFractionalUnits:1];
      [v23 setMaximumUnitCount:1];
      [v23 setCollapsesLargestUnit:1];
      id v24 = [v23 stringFromTimeInterval:v22];
      if (v24)
      {
        uint64_t v25 = v24;
        uint64_t v26 = sub_1005E1C00();
        unint64_t v28 = v27;
      }
      else
      {
        uint64_t v35 = 0;
        unint64_t v36 = 0xE000000000000000;
        sub_1005E2250();

        uint64_t v26 = v35;
        unint64_t v28 = v36;
      }
      uint64_t v35 = sub_1005904BC(v26, v28, &v37);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1005513FC(v11, v12);
      sub_1005513FC(v11, v12);
      unint64_t v19 = loga;
      _os_log_impl((void *)&_mh_execute_header, loga, v31, "Request #%u {%ld}, running for %{public}s", (uint8_t *)v16, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_1005513FC(v11, v12);
LABEL_25:

      return;
    }
  }
  else
  {
    if (!__OFSUB__(v13, v17))
    {
      uint64_t v18 = v17 - v13;
      if (!__OFSUB__(0, v13 - v17)) {
        goto LABEL_21;
      }
      __break(1u);
LABEL_17:
      unint64_t v19 = sub_1005E0EB0();
      os_log_type_t v20 = sub_1005E25C0();
      if (os_log_type_enabled(v19, v20))
      {
        double v21 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)double v21 = 134217984;
        uint64_t v35 = v11;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "No active request {%ld}.", v21, 0xCu);
        swift_slowDealloc();
      }
      goto LABEL_25;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100548C4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  sub_10000566C(&qword_100718D10);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005E0ED0();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a5, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  sub_1005522D8(a1, a3, a4, (uint64_t)v13, v6);
  sub_10055141C((uint64_t)v13);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v6 + 24) = _swiftEmptyArrayStorage;
  uint64_t v17 = *(void *)(v6 + 56);
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = *(void *)(v6 + 48);
    unint64_t v19 = *(void (**)(uint64_t))(v6 + 72);
    swift_retain();
    os_log_type_t v20 = sub_1005E0EB0();
    os_log_type_t v21 = sub_1005E25C0();
    if (os_log_type_enabled(v20, v21))
    {
      double v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = a2;
      id v23 = v22;
      *(_DWORD *)double v22 = 67109120;
      LODWORD(v29) = v17;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Stop and clear everything: completing sync #%u for all accounts.", v23, 8u);
      a2 = v28;
      swift_slowDealloc();
    }

    long long v24 = *(_OWORD *)(v6 + 48);
    long long v31 = *(_OWORD *)(v6 + 32);
    long long v32 = v24;
    v33[0] = *(_OWORD *)(v6 + 64);
    *(_OWORD *)((char *)v33 + 12) = *(_OWORD *)(v6 + 76);
    long long v25 = *(_OWORD *)(v6 + 16);
    long long v29 = *(_OWORD *)v6;
    long long v30 = v25;
    sub_10001FDF0((uint64_t)&v32, (uint64_t)v34, &qword_100718D38);
    swift_retain();
    uint64_t v26 = sub_100549EBC();
    v19(v26);
    sub_1005513FC(v18, v17);
    sub_1005513FC(v18, v17);
    uint64_t result = (uint64_t)sub_1005515A8(v34);
  }
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 56) = 0x8000000000000000;
  *(void *)(v6 + 72) = 0;
  *(void *)(v6 + 80) = 0;
  *(void *)(v6 + 64) = 0;
  return result;
}

void sub_100548EF4(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_10000566C(&qword_100718D10);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = v4[4];
  uint64_t v12 = *(void *)(v53 + 16);
  uint64_t v13 = v4[7];
  if (v13 < 0)
  {
    swift_bridgeObjectRelease();
    v4[3] = _swiftEmptyArrayStorage;
    uint64_t v39 = sub_1005E0ED0();
    uint64_t v40 = *(void *)(v39 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v11, a4, v39);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v11, 0, 1, v39);
    sub_1005522D8(a1, (uint64_t (*)(void *))a2, a3, (uint64_t)v11, (uint64_t)v4);
    sub_10055141C((uint64_t)v11);
LABEL_16:
    sub_10054ACB4((uint64_t)v4, v12);
    return;
  }
  uint64_t v14 = v4[6];
  uint64_t v15 = v4[9];
  uint64_t v16 = v4[10];
  uint64_t v51 = v4[8];
  uint64_t v52 = v14;
  uint64_t v49 = v16;
  uint64_t v50 = v15;
  if (!v12)
  {
    swift_retain();
LABEL_15:
    uint64_t v41 = sub_1005E0ED0();
    uint64_t v42 = *(void *)(v41 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v11, a4, v41);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v11, 0, 1, v41);
    sub_1005527D4(a1, a2, a3, (uint64_t)v11, (uint64_t)v4, v13);
    sub_10055141C((uint64_t)v11);
    sub_1005513FC(v52, v13);
    goto LABEL_16;
  }
  uint64_t v43 = a1;
  int64_t v44 = v11;
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  sub_10055140C(v14, v13);
  uint64_t v48 = v4;
  unint64_t v59 = v4 + 3;
  uint64_t v17 = 0;
  uint64_t v18 = (void *)(swift_bridgeObjectRetain() + 72);
  *(void *)&long long v19 = 136446210;
  long long v55 = v19;
  unint64_t v54 = (char *)&type metadata for Any + 8;
  uint64_t v47 = v12;
  uint64_t v20 = v12;
  uint64_t v56 = a4;
  while (1)
  {
    uint64_t v21 = *(v18 - 4);
    uint64_t v23 = *(v18 - 3);
    uint64_t v22 = *(v18 - 2);
    int v24 = *((_DWORD *)v18 - 2);
    char v25 = *((unsigned char *)v18 - 4);
    uint64_t v26 = *v18;
    v62[0] = *(v18 - 5);
    v62[1] = v21;
    v62[2] = v23;
    v62[3] = v22;
    int v63 = v24;
    char v64 = v25;
    uint64_t v65 = v26;
    if ((v25 & 1) == 0 && v24 == v13) {
      goto LABEL_4;
    }
    uint64_t v60 = v17;
    swift_bridgeObjectRetain_n();
    swift_retain();
    swift_retain();
    uint64_t v27 = sub_1005E0EB0();
    os_log_type_t v28 = sub_1005E25C0();
    if (os_log_type_enabled(v27, v28))
    {
      long long v29 = (_DWORD *)swift_slowAlloc();
      uint64_t v57 = v29;
      uint64_t v58 = swift_slowAlloc();
      uint64_t v61 = v58;
      *long long v29 = v55;
      swift_bridgeObjectRetain();
      sub_10051B67C(8);
      swift_bridgeObjectRelease();
      uint64_t v30 = sub_1005E1D00();
      unint64_t v32 = v31;
      a4 = v56;
      swift_bridgeObjectRelease();
      uint64_t v33 = sub_1005904BC(v30, v32, &v61);
      os_log_type_t v34 = (uint8_t *)v57;
      *(void *)(v57 + 1) = v33;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Account %{public}s did complete.", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v35 = v59;
    __chkstk_darwin(v36);
    *(&v43 - 2) = (uint64_t)v62;
    uint64_t v17 = v60;
    uint64_t v37 = sub_10059938C((uint64_t (*)(uint64_t *))sub_1005514F8);
    int64_t v38 = *(void *)(*v35 + 16);
    if (v38 < v37) {
      break;
    }
    sub_1005729B4(v37, v38);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_4:
    v18 += 6;
    if (!--v20)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = v48;
      uint64_t v12 = v47;
      a3 = v46;
      a2 = v45;
      uint64_t v11 = v44;
      a1 = v43;
      goto LABEL_15;
    }
  }
  __break(1u);
}

unint64_t *sub_10054942C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v5 = (Swift::Int *)(v3 + 56);
    do
    {
      Swift::Int v6 = *(v5 - 1);
      Swift::Int v7 = *v5;
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_retain();
      sub_1005A4FA0((Swift::Int *)&v18, v6, v7);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v5 += 6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n();
  }
  double v8 = *(double *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = *(void *)(v1 + 40);
  uint64_t v11 = *(void *)(v1 + 80);
  int v12 = *(_DWORD *)(v1 + 88);
  long long v18 = *(_OWORD *)v1;
  double v19 = v8;
  uint64_t v20 = v9;
  uint64_t v21 = v3;
  uint64_t v22 = v10;
  long long v13 = *(_OWORD *)(v1 + 64);
  long long v23 = *(_OWORD *)(v1 + 48);
  long long v24 = v13;
  uint64_t v25 = v11;
  int v26 = v12;
  uint64_t v14 = sub_100549FF4(a1);
  uint64_t v15 = sub_10054ADB4(v14, (uint64_t)&_swiftEmptySetSingleton, v8, v1, 3);
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + 16) <= *((void *)&_swiftEmptySetSingleton + 2) >> 3)
  {
    swift_bridgeObjectRetain();
    sub_10054CE24(v15);
    uint64_t v16 = (unint64_t *)&_swiftEmptySetSingleton;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_10054D198(v15, (uint64_t)&_swiftEmptySetSingleton);
  }
  if (*((void *)&_swiftEmptySetSingleton + 2) <= *(void *)(v15 + 16) >> 3) {
    sub_10054CE24((uint64_t)&_swiftEmptySetSingleton);
  }
  else {
    sub_10054D198((uint64_t)&_swiftEmptySetSingleton, v15);
  }
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_100549620@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, void (*a5)(uint64_t *__return_ptr, void *)@<X5>, uint64_t a6@<X7>, uint64_t *a7@<X8>)
{
  double v8 = *(void **)(a3 + 24);
  uint64_t v9 = v8[2];
  if (!v9) {
    goto LABEL_14;
  }
  uint64_t v36 = a7;
  a7 = (uint64_t *)v8[4];
  unint64_t v10 = v8[5];
  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = (unint64_t)a7 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    goto LABEL_23;
  }
  unint64_t v12 = a2;
  long long v13 = (uint64_t *)result;
  uint64_t v14 = v8 + 7;
  *(void *)type = result;
  while (1)
  {
    uint64_t v16 = *(v14 - 1);
    uint64_t v15 = *v14;
    uint64_t v17 = v14[2];
    uint64_t v38 = v14[3];
    char v18 = *((unsigned char *)v14 + 10);
    __int16 v19 = *((_WORD *)v14 + 4);
    if (a7 == v13 && v10 == v12) {
      break;
    }
    uint64_t result = sub_1005E3290();
    if (result) {
      goto LABEL_16;
    }
    if (!--v9)
    {
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      a7 = v36;
      goto LABEL_23;
    }
    a7 = (uint64_t *)v14[5];
    unint64_t v10 = v14[6];
    v14 += 8;
    uint64_t v20 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v20 = (unint64_t)a7 & 0xFFFFFFFFFFFFLL;
    }
    unint64_t v12 = a2;
    long long v13 = *(uint64_t **)type;
    if (!v20) {
      goto LABEL_13;
    }
  }
  a7 = v13;
  unint64_t v10 = v12;
LABEL_16:
  _OWORD v43[2] = v16;
  v43[3] = v15;
  __int16 v44 = v19;
  char v45 = v18;
  uint64_t v46 = v17;
  uint64_t v47 = v38;
  v43[0] = a7;
  v43[1] = v10;
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1005514A0(a4);
  swift_bridgeObjectRetain();
  sub_1005514A0(a4);
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1005E0EB0();
  os_log_type_t v28 = sub_1005E25C0();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    v40[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 134218498;
    sub_1005514CC(a4);
    uint64_t v48 = *(void *)a4;
    sub_1005E2960();
    sub_1005514CC(a4);
    *(_WORD *)(v29 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_10051B67C(8);
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_1005E1D00();
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    uint64_t v48 = sub_1005904BC(v30, v32, v40);
    sub_1005E2960();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 22) = 1024;
    sub_1005514CC(a4);
    LODWORD(v48) = *(_DWORD *)(a4 + 8);
    sub_1005E2960();
    sub_1005514CC(a4);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "{%ld} Creating instance for account %{public}s for request #%u", (uint8_t *)v29, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1005514CC(a4);
    sub_1005514CC(a4);

    sub_1005514CC(a4);
    swift_bridgeObjectRelease_n();
    sub_1005514CC(a4);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  a5(v40, v43);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = *(unsigned int *)(a4 + 8);
  a7 = v36;
  uint64_t v22 = v40[1];
  if (v42 != 1) {
    sub_10058ABE0(v41);
  }
  sub_10058AC10(v25);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v21 = v40[0];
  uint64_t v23 = v40[2];
  uint64_t v24 = v40[3];
  uint64_t v26 = a6;
LABEL_23:
  *a7 = v21;
  a7[1] = v22;
  a7[2] = v23;
  a7[3] = v24;
  a7[4] = v25;
  a7[5] = v26;
  return result;
}

char *sub_100549A78(void (*a1)(long long *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return (char *)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  Swift::Int v7 = (uint64_t *)(a3 + 40);
  double v8 = (char *)_swiftEmptyArrayStorage;
  do
  {
    uint64_t v10 = *v7;
    v26[0] = *(v7 - 1);
    v26[1] = v10;
    swift_bridgeObjectRetain();
    a1(&v21, v26);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    swift_bridgeObjectRelease();
    if ((void)v21)
    {
      long long v20 = v21;
      uint64_t v12 = v22;
      uint64_t v11 = v23;
      uint64_t v13 = v24;
      uint64_t v27 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        double v8 = sub_100571564(0, *((void *)v8 + 2) + 1, 1, v8);
      }
      unint64_t v15 = *((void *)v8 + 2);
      unint64_t v14 = *((void *)v8 + 3);
      long long v16 = v20;
      if (v15 >= v14 >> 1)
      {
        uint64_t v17 = sub_100571564((char *)(v14 > 1), v15 + 1, 1, v8);
        long long v16 = v20;
        double v8 = v17;
      }
      *((void *)v8 + 2) = v15 + 1;
      uint64_t v9 = &v8[48 * v15];
      *((_OWORD *)v9 + 2) = v16;
      *((void *)v9 + 6) = v12;
      *((void *)v9 + 7) = v11;
      *((_DWORD *)v9 + 16) = v13;
      v9[68] = BYTE4(v13) & 1;
      *((void *)v9 + 9) = v27;
    }
    v7 += 2;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  return v8;
}

void sub_100549C10()
{
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  uint64_t v8 = v5 + 64;
  unint64_t v9 = v7 & *(void *)(v5 + 64);
  int64_t v10 = (unint64_t)(v6 + 63) >> 6;
  do
  {
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          unint64_t v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          unint64_t v12 = v11 | (v4 << 6);
        }
        else
        {
          int64_t v15 = v4 + 1;
          if (__OFADD__(v4, 1)) {
            goto LABEL_37;
          }
          if (v15 >= v10) {
            goto LABEL_31;
          }
          unint64_t v16 = *(void *)(v8 + 8 * v15);
          ++v4;
          if (!v16)
          {
            int64_t v4 = v15 + 1;
            if (v15 + 1 >= v10) {
              goto LABEL_31;
            }
            unint64_t v16 = *(void *)(v8 + 8 * v4);
            if (!v16)
            {
              int64_t v4 = v15 + 2;
              if (v15 + 2 >= v10) {
                goto LABEL_31;
              }
              unint64_t v16 = *(void *)(v8 + 8 * v4);
              if (!v16)
              {
                int64_t v4 = v15 + 3;
                if (v15 + 3 >= v10) {
                  goto LABEL_31;
                }
                unint64_t v16 = *(void *)(v8 + 8 * v4);
                if (!v16)
                {
                  int64_t v17 = v15 + 4;
                  if (v17 >= v10) {
                    goto LABEL_31;
                  }
                  unint64_t v16 = *(void *)(v8 + 8 * v17);
                  if (!v16)
                  {
                    while (1)
                    {
                      int64_t v4 = v17 + 1;
                      if (__OFADD__(v17, 1)) {
                        break;
                      }
                      if (v4 >= v10) {
                        goto LABEL_31;
                      }
                      unint64_t v16 = *(void *)(v8 + 8 * v4);
                      ++v17;
                      if (v16) {
                        goto LABEL_27;
                      }
                    }
LABEL_38:
                    __break(1u);
LABEL_39:
                    __break(1u);
                    return;
                  }
                  int64_t v4 = v17;
                }
              }
            }
          }
LABEL_27:
          unint64_t v9 = (v16 - 1) & v16;
          unint64_t v12 = __clz(__rbit64(v16)) + (v4 << 6);
        }
        int v13 = *(unsigned __int8 *)(*(void *)(v5 + 56) + v12);
        if (v13) {
          break;
        }
        BOOL v14 = __OFADD__(v3++, 1);
        if (v14)
        {
          __break(1u);
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
      }
      if (v13 != 1) {
        break;
      }
      BOOL v14 = __OFADD__(v2++, 1);
      if (v14) {
        goto LABEL_39;
      }
    }
    BOOL v14 = __OFADD__(v1++, 1);
  }
  while (!v14);
  __break(1u);
LABEL_31:
  osint log = sub_1005E0EB0();
  os_log_type_t v18 = sub_1005E25C0();
  if (os_log_type_enabled(oslog, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 67109888;
    sub_1005E2960();
    *(_WORD *)(v19 + 8) = 2048;
    sub_1005E2960();
    *(_WORD *)(v19 + 18) = 2048;
    sub_1005E2960();
    *(_WORD *)(v19 + 28) = 2048;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, oslog, v18, "Completing sync #%u for all accounts. %ld account(s) did not connect, %ld account(s) did sync without completing, %ld account(s) did complete sync.", (uint8_t *)v19, 0x26u);
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_100549EBC()
{
  int64_t v1 = 0;
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t v5 = v2 + 64;
  unint64_t v6 = v4 & *(void *)(v2 + 64);
  int64_t v7 = (unint64_t)(v3 + 63) >> 6;
  while (v6)
  {
    unint64_t v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v9 = v8 | (v1 << 6);
LABEL_5:
    if (*(unsigned char *)(*(void *)(v2 + 56) + v9) != 2) {
      return 0;
    }
  }
  int64_t v10 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v10 >= v7) {
    return 3;
  }
  unint64_t v11 = *(void *)(v5 + 8 * v10);
  ++v1;
  if (v11) {
    goto LABEL_24;
  }
  int64_t v1 = v10 + 1;
  if (v10 + 1 >= v7) {
    return 3;
  }
  unint64_t v11 = *(void *)(v5 + 8 * v1);
  if (v11) {
    goto LABEL_24;
  }
  int64_t v1 = v10 + 2;
  if (v10 + 2 >= v7) {
    return 3;
  }
  unint64_t v11 = *(void *)(v5 + 8 * v1);
  if (v11) {
    goto LABEL_24;
  }
  int64_t v1 = v10 + 3;
  if (v10 + 3 >= v7) {
    return 3;
  }
  unint64_t v11 = *(void *)(v5 + 8 * v1);
  if (v11) {
    goto LABEL_24;
  }
  int64_t v1 = v10 + 4;
  if (v10 + 4 >= v7) {
    return 3;
  }
  unint64_t v11 = *(void *)(v5 + 8 * v1);
  if (v11)
  {
LABEL_24:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v1 << 6);
    goto LABEL_5;
  }
  int64_t v12 = v10 + 5;
  if (v12 >= v7) {
    return 3;
  }
  unint64_t v11 = *(void *)(v5 + 8 * v12);
  if (v11)
  {
    int64_t v1 = v12;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v1 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v1 >= v7) {
      return 3;
    }
    unint64_t v11 = *(void *)(v5 + 8 * v1);
    ++v12;
    if (v11) {
      goto LABEL_24;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100549FF4(uint64_t a1)
{
  uint64_t v2 = (void *)sub_10058A298((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v53 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v53 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (double *)(swift_bridgeObjectRetain() + 88);
    while (1)
    {
      uint64_t v8 = *((void *)v5 - 7);
      unint64_t v7 = *((void *)v5 - 6);
      uint64_t v9 = HIBYTE(v7) & 0xF;
      if ((v7 & 0x2000000000000000) == 0) {
        uint64_t v9 = v8 & 0xFFFFFFFFFFFFLL;
      }
      if (!v9) {
        break;
      }
      uint64_t v51 = v3;
      double v10 = *v5;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_10003E960((uint64_t)v4);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v52 = v2;
      unint64_t v13 = sub_1005A0310(v8, v7);
      uint64_t v14 = v2[2];
      BOOL v15 = (v12 & 1) == 0;
      uint64_t v16 = v14 + v15;
      if (__OFADD__(v14, v15)) {
        goto LABEL_49;
      }
      char v17 = v12;
      if (v2[3] >= v16)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1005A3B80();
          uint64_t v2 = v52;
        }
      }
      else
      {
        sub_1005A1588(v16, isUniquelyReferenced_nonNull_native);
        uint64_t v2 = v52;
        unint64_t v18 = sub_1005A0310(v8, v7);
        if ((v17 & 1) != (v19 & 1)) {
          goto LABEL_56;
        }
        unint64_t v13 = v18;
      }
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {
        v2[(v13 >> 6) + 8] |= 1 << v13;
        long long v20 = (uint64_t *)(v2[6] + 16 * v13);
        *long long v20 = v8;
        v20[1] = v7;
        *(void *)(v2[7] + 8 * v13) = 0;
        uint64_t v21 = v2[2];
        uint64_t v22 = v21 + 1;
        BOOL v23 = __OFADD__(v21, 1);
        swift_bridgeObjectRetain();
        if (v23) {
          goto LABEL_50;
        }
        v2[2] = v22;
      }
      swift_bridgeObjectRetain();
      uint64_t v6 = v2[7];
      swift_bridgeObjectRelease();
      *(double *)(v6 + 8 * v13) = v10 + *(double *)(v6 + 8 * v13);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v5 += 8;
      uint64_t v4 = sub_10054B4EC;
      --v3;
      if (v51 == 1)
      {
        sub_10001D550((uint64_t)&v53);
        uint64_t v24 = sub_10054B4EC;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    uint64_t result = sub_1005E3380();
    __break(1u);
  }
  else
  {
    uint64_t v24 = 0;
LABEL_21:
    uint64_t v52 = *(void **)(v1 + 32);
    uint64_t v25 = v52[2];
    if (v25)
    {
      uint64_t v49 = v24;
      uint64_t v26 = 0;
      uint64_t v27 = (void *)(swift_bridgeObjectRetain() + 40);
      uint64_t v28 = a1;
      do
      {
        uint64_t v31 = v27[1];
        uint64_t v30 = v27[2];
        uint64_t v32 = v27[4];
        if (v32 <= v28)
        {
          uint64_t v33 = v28 - v32;
          if (__OFSUB__(v28, v32)) {
            goto LABEL_52;
          }
        }
        else
        {
          if (__OFSUB__(v32, v28)) {
            goto LABEL_51;
          }
          uint64_t v33 = v28 - v32;
          if (__OFSUB__(0, v32 - v28)) {
            goto LABEL_53;
          }
        }
        double v34 = (double)v33 / 1000000000.0;
        if (v34 > 0.0)
        {
          swift_bridgeObjectRetain_n();
          swift_retain();
          swift_retain();
          sub_10003E960((uint64_t)v26);
          char v35 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v37 = sub_1005A0310(v31, v30);
          uint64_t v38 = v2[2];
          BOOL v39 = (v36 & 1) == 0;
          uint64_t v40 = v38 + v39;
          if (__OFADD__(v38, v39)) {
            goto LABEL_54;
          }
          char v41 = v36;
          if (v2[3] >= v40)
          {
            if ((v35 & 1) == 0) {
              sub_1005A3B80();
            }
          }
          else
          {
            sub_1005A1588(v40, v35);
            unint64_t v42 = sub_1005A0310(v31, v30);
            if ((v41 & 1) != (v43 & 1)) {
              goto LABEL_56;
            }
            unint64_t v37 = v42;
          }
          swift_bridgeObjectRelease();
          if ((v41 & 1) == 0)
          {
            v2[(v37 >> 6) + 8] |= 1 << v37;
            __int16 v44 = (uint64_t *)(v2[6] + 16 * v37);
            uint64_t *v44 = v31;
            v44[1] = v30;
            *(void *)(v2[7] + 8 * v37) = 0;
            uint64_t v45 = v2[2];
            uint64_t v46 = v45 + 1;
            BOOL v47 = __OFADD__(v45, 1);
            swift_bridgeObjectRetain();
            if (v47) {
              goto LABEL_55;
            }
            v2[2] = v46;
          }
          swift_bridgeObjectRetain();
          uint64_t v29 = v2[7];
          swift_bridgeObjectRelease();
          *(double *)(v29 + 8 * v37) = v34 + *(double *)(v29 + 8 * v37);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
          uint64_t v26 = sub_10054B4EC;
          uint64_t v28 = a1;
        }
        v27 += 6;
        --v25;
      }
      while (v25);
      sub_10001D550((uint64_t)&v52);
      uint64_t v24 = v49;
    }
    else
    {
      uint64_t v26 = 0;
    }
    sub_10003E960((uint64_t)v24);
    sub_10003E960((uint64_t)v26);
    return (uint64_t)v2;
  }
  return result;
}

uint64_t sub_10054A4A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v64 = _s6LoggerVMa(0);
  uint64_t v7 = __chkstk_darwin(v64);
  uint64_t v9 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v62 = (uint64_t)v56 - v11;
  __chkstk_darwin(v10);
  uint64_t v61 = (uint8_t *)v56 - v12;
  uint64_t v13 = sub_1005E0ED0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  char v17 = (char *)v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  long long v20 = (char *)v56 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v56 - v21;
  uint64_t v63 = v3;
  uint64_t v23 = *(void *)(v3 + 40);
  if (!*(void *)(v23 + 16)) {
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v59 = (uint8_t *)a1;
  unint64_t v24 = sub_1005A0310(a1, a2);
  if ((v25 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a3, v13);
    sub_10055181C(a3, (uint64_t)v9);
    char v36 = sub_1005E0EB0();
    os_log_type_t v37 = sub_1005E25A0();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      uint64_t v66 = v63;
      *(_DWORD *)uint64_t v38 = 136446210;
      uint64_t v60 = v13;
      uint64_t v61 = v38 + 4;
      uint64_t v62 = v14;
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1005E1D00();
      unint64_t v41 = v40;
      swift_bridgeObjectRelease();
      uint64_t v65 = sub_1005904BC(v39, v41, &v66);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1005517BC((uint64_t)v9, _s6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "[%{public}s] Account did complete sync, but never started.", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v17, v60);
    }
    else
    {
      sub_1005517BC((uint64_t)v9, _s6LoggerVMa);

      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    }
  }
  int v26 = *(unsigned __int8 *)(*(void *)(v23 + 56) + v24);
  swift_bridgeObjectRelease();
  if (!v26) {
    goto LABEL_8;
  }
  if (v26 == 1)
  {
    uint64_t v27 = v14;
    uint64_t v28 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v22, a3, v13);
    uint64_t v29 = v61;
    sub_10055181C(a3, (uint64_t)v61);
    uint64_t v30 = sub_1005E0EB0();
    os_log_type_t v31 = sub_1005E25C0();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      uint64_t v66 = v58;
      uint64_t v62 = v27;
      uint64_t v57 = v32;
      *(_DWORD *)uint64_t v32 = 136446210;
      v56[1] = v32 + 4;
      uint64_t v60 = v13;
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_1005E1D00();
      unint64_t v35 = v34;
      swift_bridgeObjectRelease();
      uint64_t v65 = sub_1005904BC(v33, v35, &v66);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1005517BC((uint64_t)v29, _s6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "[%{public}s] Account did complete sync.", v57, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v62 + 8))(v28, v60);
    }
    else
    {
      sub_1005517BC((uint64_t)v29, _s6LoggerVMa);

      (*(void (**)(char *, uint64_t))(v14 + 8))(v28, v13);
    }
    uint64_t v53 = (uint64_t)v59;
    swift_bridgeObjectRetain();
    uint64_t v54 = v63;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v66 = *(void *)(v54 + 40);
    *(void *)(v54 + 40) = 0x8000000000000000;
    sub_10059A8F0(2, v53, a2, isUniquelyReferenced_nonNull_native);
    *(void *)(v54 + 40) = v66;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v43 = v14;
    __int16 v44 = v20;
    uint64_t v45 = v13;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v20, a3, v13);
    uint64_t v46 = v62;
    sub_10055181C(a3, v62);
    BOOL v47 = sub_1005E0EB0();
    os_log_type_t v48 = sub_1005E25A0();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      uint64_t v66 = v63;
      uint64_t v60 = v45;
      uint64_t v61 = v49;
      *(_DWORD *)uint64_t v49 = 136446210;
      unint64_t v59 = v49 + 4;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1005E1D00();
      unint64_t v52 = v51;
      swift_bridgeObjectRelease();
      uint64_t v65 = sub_1005904BC(v50, v52, &v66);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1005517BC(v46, _s6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "[%{public}s] Account did complete sync, but was already complete.", v61, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v44, v60);
    }
    else
    {
      sub_1005517BC(v46, _s6LoggerVMa);

      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v44, v45);
    }
  }
}

void sub_10054ACB4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)(a1 + 32) + 16) != a2)
  {
    osint log = sub_1005E0EB0();
    os_log_type_t v2 = sub_1005E25C0();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 134217984;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "%ld remaining instance(s).", v3, 0xCu);
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

uint64_t sub_10054ADB4(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = (char *)&_swiftEmptySetSingleton;
  if (a5 < 1) {
    return (uint64_t)v5;
  }
  uint64_t v6 = a5;
  swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  uint64_t v11 = sub_10054EC40(a1, a2, a3);
  swift_bridgeObjectRelease();
  if (v11[2])
  {
    sub_10000566C(&qword_100718D28);
    uint64_t v12 = (void *)sub_1005E2FF0();
  }
  else
  {
    uint64_t v12 = &_swiftEmptyDictionarySingleton;
  }
  unint64_t v67 = v12;
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_10054CA84(v13, 1, &v67);
  swift_bridgeObjectRelease();
  uint64_t v14 = v67;
  unint64_t v68 = (char *)&_swiftEmptySetSingleton;
  uint64_t v59 = v6;
  while (1)
  {
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = (unint64_t *)sub_10054B2C4(v15);
    unsigned __int8 v18 = v17;
    int v19 = v17;
    swift_bridgeObjectRelease();
    if (v19 == 2) {
      goto LABEL_51;
    }
    uint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v21 = sub_10054E778(v20, v16, v18 & 1);
    swift_bridgeObjectRelease();
    int64_t v22 = v21[2];
    uint64_t v23 = (uint64_t)v14;
    if (v22) {
      break;
    }
    swift_release();
    unint64_t v24 = _swiftEmptyArrayStorage;
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)sub_10054F594(v23, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = *((void *)v5 + 2);
    uint64_t v45 = v24[2];
    BOOL v46 = __OFADD__(v44, v45);
    uint64_t v47 = v44 + v45;
    if (v46) {
      goto LABEL_60;
    }
    if (v47 <= v6)
    {
      if (v45)
      {
        unint64_t v51 = v24 + 5;
        do
        {
          Swift::Int v52 = *(v51 - 1);
          Swift::Int v53 = *v51;
          swift_bridgeObjectRetain();
          sub_1005A4FA0((Swift::Int *)&v67, v52, v53);
          swift_bridgeObjectRelease();
          v51 += 2;
          --v45;
        }
        while (v45);
      }
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    unint64_t v67 = v24;
    swift_bridgeObjectRetain();
    sub_10054C32C((uint64_t *)&v67);
    swift_bridgeObjectRelease();
    sub_10054E8F0();
    uint64_t v48 = *((void *)v5 + 2);
    unint64_t v49 = v6 - v48;
    if (v6 - v48 < 0) {
      goto LABEL_61;
    }
    uint64_t v50 = v67;
    uint64_t v5 = (char *)v67[2];
    if (v6 == v48)
    {
      if (v5) {
        goto LABEL_50;
      }
    }
    else if ((unint64_t)v5 < v49)
    {
      goto LABEL_46;
    }
    BOOL v54 = (unint64_t)v5 >= v49;
    uint64_t v5 = (char *)(v6 - v48);
    if (!v54)
    {
      __break(1u);
LABEL_51:
      swift_bridgeObjectRelease();
      return (uint64_t)v5;
    }
LABEL_46:
    if (v5)
    {
      swift_retain();
      long long v55 = v50 + 5;
      do
      {
        Swift::Int v56 = *(v55 - 1);
        Swift::Int v57 = *v55;
        swift_bridgeObjectRetain();
        sub_1005A4FA0((Swift::Int *)&v67, v56, v57);
        swift_bridgeObjectRelease();
        v55 += 2;
        --v5;
      }
      while (v5);
      swift_release_n();
      goto LABEL_7;
    }
LABEL_50:
    swift_release();
LABEL_7:
    uint64_t v5 = v68;
    if (*((void *)v68 + 2) >= v6)
    {
      swift_release();
      return (uint64_t)v5;
    }
  }
  uint64_t v60 = v10;
  uint64_t v61 = v14;
  unint64_t v67 = _swiftEmptyArrayStorage;
  sub_100590C34(0, v22, 0);
  unint64_t v24 = v67;
  uint64_t v25 = sub_100103FD8((uint64_t)v21);
  int v27 = v26;
  uint64_t v28 = 0;
  uint64_t v29 = v21 + 8;
  char v30 = *((unsigned char *)v21 + 32);
  int v62 = v26;
  int64_t v63 = v22;
  uint64_t v64 = v21 + 8;
  while ((v25 & 0x8000000000000000) == 0 && v25 < 1 << v30)
  {
    unint64_t v33 = (unint64_t)v25 >> 6;
    if ((v29[(unint64_t)v25 >> 6] & (1 << v25)) == 0) {
      goto LABEL_55;
    }
    if (*((_DWORD *)v21 + 9) != v27) {
      goto LABEL_56;
    }
    unint64_t v34 = (uint64_t *)(v21[6] + 16 * v25);
    uint64_t v35 = v34[1];
    uint64_t v65 = v28;
    uint64_t v66 = *v34;
    unint64_t v67 = v24;
    unint64_t v37 = v24[2];
    unint64_t v36 = v24[3];
    swift_bridgeObjectRetain();
    if (v37 >= v36 >> 1)
    {
      sub_100590C34(v36 > 1, v37 + 1, 1);
      unint64_t v24 = v67;
    }
    v24[2] = v37 + 1;
    uint64_t v38 = &v24[2 * v37];
    v38[4] = v66;
    v38[5] = v35;
    char v30 = *((unsigned char *)v21 + 32);
    unint64_t v31 = 1 << v30;
    if (v25 >= 1 << v30) {
      goto LABEL_57;
    }
    uint64_t v29 = v21 + 8;
    unint64_t v39 = v64[v33];
    if ((v39 & (1 << v25)) == 0) {
      goto LABEL_58;
    }
    if (*((_DWORD *)v21 + 9) != v27) {
      goto LABEL_59;
    }
    unint64_t v40 = v39 & (-2 << (v25 & 0x3F));
    if (v40)
    {
      unint64_t v31 = __clz(__rbit64(v40)) | v25 & 0xFFFFFFFFFFFFFFC0;
      int64_t v32 = v63;
    }
    else
    {
      unint64_t v41 = v33 + 1;
      unint64_t v42 = (v31 + 63) >> 6;
      int64_t v32 = v63;
      if (v33 + 1 < v42)
      {
        unint64_t v43 = v64[v41];
        if (!v43)
        {
          unint64_t v41 = v33 + 2;
          if (v33 + 2 >= v42) {
            goto LABEL_12;
          }
          unint64_t v43 = v64[v41];
          if (!v43)
          {
            while (v42 - 3 != v33)
            {
              unint64_t v43 = v21[v33++ + 11];
              if (v43)
              {
                unint64_t v41 = v33 + 2;
                goto LABEL_25;
              }
            }
            goto LABEL_12;
          }
        }
LABEL_25:
        unint64_t v31 = __clz(__rbit64(v43)) + (v41 << 6);
      }
    }
LABEL_12:
    uint64_t v28 = v65 + 1;
    int v27 = v62;
    uint64_t v25 = v31;
    if (v65 + 1 == v32)
    {
      swift_release();
      uint64_t v6 = v59;
      uint64_t v23 = (uint64_t)v61;
      uint64_t v10 = v60;
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
  swift_release();
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_10054B2C4(uint64_t result)
{
  uint64_t v1 = result + 64;
  char v2 = *(unsigned char *)(result + 32);
  uint64_t v3 = 1 << v2;
  uint64_t v4 = -1;
  if (1 << v2 < 64) {
    uint64_t v4 = ~(-1 << (1 << v2));
  }
  unint64_t v5 = v4 & *(void *)(result + 64);
  if (v5)
  {
    uint64_t v6 = 0;
    unint64_t v7 = __clz(__rbit64(v5));
    unint64_t v8 = (v5 - 1) & v5;
    int64_t v9 = (unint64_t)(v3 + 63) >> 6;
  }
  else
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 <= 6) {
      return 0;
    }
    int64_t v9 = (unint64_t)(v3 + 63) >> 6;
    unint64_t v21 = *(void *)(result + 72);
    if (v21)
    {
      uint64_t v6 = 1;
    }
    else
    {
      if (v6 < 8) {
        return 0;
      }
      unint64_t v21 = *(void *)(result + 80);
      if (v21)
      {
        uint64_t v6 = 2;
      }
      else
      {
        unint64_t v21 = *(void *)(result + 88);
        if (v21)
        {
          uint64_t v6 = 3;
        }
        else
        {
LABEL_39:
          if (v6 < 9) {
            return 0;
          }
          unint64_t v21 = *(void *)(result + 96);
          if (v21)
          {
            uint64_t v6 = 4;
          }
          else
          {
            unint64_t v21 = *(void *)(result + 104);
            if (!v21) {
              goto LABEL_45;
            }
            uint64_t v6 = 5;
          }
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v21 - 1) & v21;
    unint64_t v7 = __clz(__rbit64(v21)) + (v6 << 6);
  }
  uint64_t v10 = *(void *)(result + 56);
  uint64_t v11 = (uint64_t *)(v10 + 16 * v7);
  uint64_t v12 = *v11;
  int v13 = *((unsigned __int8 *)v11 + 8);
  while (1)
  {
    int v14 = v13;
    uint64_t result = v12;
    if (!v8) {
      break;
    }
    unint64_t v15 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v16 = v15 | (v6 << 6);
LABEL_24:
    uint64_t v20 = (uint64_t *)(v10 + 16 * v16);
    uint64_t v12 = *v20;
    int v13 = *((unsigned __int8 *)v20 + 8);
    if (v12 >= result)
    {
      if ((v12 != result || (v13 & 1) == 0) | v14 & 1)
      {
        uint64_t v12 = result;
        int v13 = v14;
      }
    }
  }
  int64_t v17 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v17 >= v9) {
    return result;
  }
  unint64_t v18 = *(void *)(v1 + 8 * v17);
  ++v6;
  if (v18) {
    goto LABEL_23;
  }
  uint64_t v6 = v17 + 1;
  if (v17 + 1 >= v9) {
    return result;
  }
  unint64_t v18 = *(void *)(v1 + 8 * v6);
  if (v18) {
    goto LABEL_23;
  }
  uint64_t v6 = v17 + 2;
  if (v17 + 2 >= v9) {
    return result;
  }
  unint64_t v18 = *(void *)(v1 + 8 * v6);
  if (v18) {
    goto LABEL_23;
  }
  uint64_t v6 = v17 + 3;
  if (v17 + 3 >= v9) {
    return result;
  }
  unint64_t v18 = *(void *)(v1 + 8 * v6);
  if (v18)
  {
LABEL_23:
    unint64_t v8 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v6 << 6);
    goto LABEL_24;
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v9) {
    return result;
  }
  unint64_t v18 = *(void *)(v1 + 8 * v19);
  if (v18)
  {
    uint64_t v6 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v6 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v6 >= v9) {
      return result;
    }
    unint64_t v18 = *(void *)(v1 + 8 * v6);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_45:
  uint64_t v22 = 0;
  uint64_t v23 = 6;
  if (v9 > 6) {
    uint64_t v23 = v9;
  }
  uint64_t v24 = v23 - 6;
  while (v24 != v22)
  {
    unint64_t v21 = *(void *)(result + 112 + 8 * v22++);
    if (v21)
    {
      uint64_t v6 = v22 + 5;
      goto LABEL_32;
    }
  }
  return 0;
}

void sub_10054B4EC(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_10054B4F4(uint64_t result, uint64_t a2, uint64_t a3)
{
  int64_t v17 = (uint64_t (*)(void *))result;
  uint64_t v16 = *(void *)(a3 + 16);
  if (v16)
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    uint64_t v6 = _swiftEmptyArrayStorage;
    uint64_t v15 = a3;
    while (v5 < *(void *)(a3 + 16))
    {
      uint64_t v7 = *(void *)(a3 + v4 + 40);
      uint64_t v8 = *(void *)(a3 + v4 + 56);
      __int16 v9 = *(_WORD *)(a3 + v4 + 64);
      char v10 = *(unsigned char *)(a3 + v4 + 66);
      long long v20 = *(_OWORD *)(a3 + v4 + 72);
      uint64_t v18 = *(void *)(a3 + v4 + 48);
      uint64_t v19 = *(void *)(a3 + v4 + 32);
      v21[0] = v19;
      v21[1] = v7;
      v21[2] = v18;
      v21[3] = v8;
      __int16 v22 = v9;
      char v23 = v10;
      long long v24 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      char v11 = v17(v21);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (v11)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v25 = v6;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_100590CF4(0, v6[2] + 1, 1);
          uint64_t v6 = v25;
        }
        unint64_t v13 = v6[2];
        unint64_t v12 = v6[3];
        uint64_t v3 = 0;
        if (v13 >= v12 >> 1)
        {
          uint64_t result = sub_100590CF4(v12 > 1, v13 + 1, 1);
          uint64_t v3 = 0;
          uint64_t v6 = v25;
        }
        void v6[2] = v13 + 1;
        int v14 = &v6[7 * v13];
        v14[4] = v19;
        v14[5] = v7;
        v14[6] = v18;
        v14[7] = v8;
        *((_WORD *)v14 + 32) = v9;
        *((unsigned char *)v14 + 66) = v10;
        *(_OWORD *)(v14 + 9) = v20;
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v3 = 0;
      }
      ++v5;
      v4 += 56;
      a3 = v15;
      if (v16 == v5) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v6 = _swiftEmptyArrayStorage;
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v6;
  }
  return result;
}

uint64_t sub_10054B6F8(uint64_t a1, uint64_t (*a2)(_OWORD *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v84 = a5;
  uint64_t v8 = sub_1005E0970();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v83 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v12 = (char *)&v80 - v11;
  __chkstk_darwin();
  int v14 = (char *)&v80 - v13;
  __chkstk_darwin();
  uint64_t v16 = (char *)&v80 - v15;
  long long v17 = *(_OWORD *)(a1 + 16);
  v88[0] = *(_OWORD *)a1;
  v88[1] = v17;
  v88[2] = *(_OWORD *)(a1 + 32);
  uint64_t v89 = *(void *)(a1 + 48);
  uint64_t v18 = a2(v88);
  uint64_t v20 = v19;
  if (!*(void *)(a4 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v21 = v18;
  swift_bridgeObjectRetain();
  unint64_t v22 = sub_1005A0310(v21, v20);
  if ((v23 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    return 0;
  }
  uint64_t v80 = v21;
  uint64_t v24 = *(void *)(*(void *)(a4 + 56) + 8 * v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1005E0960();
  uint64_t v81 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v82 = v9 + 16;
  v81(v14, v16, v8);
  sub_1005E08F0();
  double v26 = round(v25 / 21600.0);
  uint64_t v27 = v8;
  uint64_t v28 = *(uint64_t (**)(char *))(v9 + 8);
  uint64_t v29 = v14;
  uint64_t v30 = v27;
  uint64_t result = v28(v29);
  if ((~*(void *)&v26 & 0x7FF0000000000000) == 0)
  {
    int64_t v32 = v12;
LABEL_5:
    ((void (*)(char *, uint64_t))v28)(v16, v30);
    sub_1005E0960();
    unint64_t v33 = v32;
    unint64_t v34 = v83;
    uint64_t v35 = v33;
    ((void (*)(char *))v81)(v83);
    sub_1005E08F0();
    double v37 = round(v36 / 21600.0);
    uint64_t v38 = (void (*)(char *, uint64_t))v28;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v34, v30);
    if ((~*(void *)&v37 & 0x7FF0000000000000) == 0)
    {
      uint64_t v39 = 0;
LABEL_50:
      v38(v35, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v60 = sub_1005E0EB0();
      os_log_type_t v61 = sub_1005E25C0();
      BOOL v62 = os_log_type_enabled(v60, v61);
      if (v39 < 1000000000)
      {
        if (v62)
        {
          uint64_t v63 = swift_slowAlloc();
          uint64_t v84 = v39;
          uint64_t v64 = v63;
          uint64_t v87 = swift_slowAlloc();
          *(_DWORD *)uint64_t v64 = 136446466;
          uint64_t v83 = (char *)(v64 + 4);
          swift_bridgeObjectRetain();
          sub_10051B67C(8);
          swift_bridgeObjectRelease();
          uint64_t v65 = sub_1005E1D00();
          unint64_t v67 = v66;
          swift_bridgeObjectRelease();
          uint64_t v86 = sub_1005904BC(v65, v67, &v87);
          sub_1005E2960();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v64 + 12) = 2048;
          uint64_t v86 = v84;
          sub_1005E2960();
          _os_log_impl((void *)&_mh_execute_header, v60, v61, "[%{public}s] Did download %{iec-bytes}ld inside current time window.", (uint8_t *)v64, 0x16u);
          uint64_t v68 = 1;
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();

          return 1;
        }
        return v68;
      }
      if (v62)
      {
        uint64_t v69 = swift_slowAlloc();
        uint64_t v84 = v39;
        uint64_t v70 = v69;
        uint64_t v87 = swift_slowAlloc();
        *(_DWORD *)uint64_t v70 = 136446722;
        uint64_t v83 = (char *)(v70 + 4);
        swift_bridgeObjectRetain();
        sub_10051B67C(8);
        swift_bridgeObjectRelease();
        uint64_t v71 = sub_1005E1D00();
        unint64_t v73 = v72;
        swift_bridgeObjectRelease();
        uint64_t v86 = sub_1005904BC(v71, v73, &v87);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v70 + 12) = 2048;
        uint64_t v86 = v84;
        sub_1005E2960();
        *(_WORD *)(v70 + 22) = 2048;
        uint64_t v86 = 1000000000;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v60, v61, "[%{public}s] Did already download too much -- %{iec-bytes}ld inside current time window, limit is %{iec-bytes}ld", (uint8_t *)v70, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      return 0;
    }
    if (v37 > -9.22337204e18)
    {
      if (v37 < 9.22337204e18)
      {
        uint64_t v58 = swift_allocObject();
        *(void *)(v58 + 16) = (uint64_t)v37;
        v90[0] = v24;
        v90[1] = (uint64_t)sub_1005512D4;
        v90[2] = v58;
        v90[3] = (uint64_t)sub_1005BADD4;
        v90[4] = 0;
        swift_bridgeObjectRetain();
        uint64_t v59 = v85;
        uint64_t v39 = sub_1005BA33C(0, 0, v90);
        uint64_t v85 = v59;
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_50;
      }
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (v26 <= -9.22337204e18)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if (v26 >= 9.22337204e18)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  int64_t v32 = v12;
  int64_t v40 = 0;
  uint64_t v41 = (uint64_t)v26;
  uint64_t v42 = v24 + 64;
  uint64_t v43 = 1 << *(unsigned char *)(v24 + 32);
  uint64_t v44 = -1;
  if (v43 < 64) {
    uint64_t v44 = ~(-1 << v43);
  }
  unint64_t v45 = v44 & *(void *)(v24 + 64);
  int64_t v46 = (unint64_t)(v43 + 63) >> 6;
  uint64_t v47 = v41 - 3;
  BOOL v48 = __OFSUB__(v41, 3);
  BOOL v49 = __OFADD__(v41, 1);
  uint64_t v50 = v41 + 1;
  char v51 = v49;
  while (v45)
  {
    unint64_t v52 = __clz(__rbit64(v45));
    v45 &= v45 - 1;
    unint64_t v53 = v52 | (v40 << 6);
    if (v48) {
      goto LABEL_64;
    }
LABEL_37:
    if (v51) {
      goto LABEL_65;
    }
    if (v50 <= v47) {
      goto LABEL_66;
    }
    uint64_t v57 = *(void *)(*(void *)(v24 + 48) + 8 * v53);
    if (v57 > v47 && v50 >= v57 && *(uint64_t *)(*(void *)(v24 + 56) + 72 * v53 + 64) > 0)
    {
      ((void (*)(char *, uint64_t))v28)(v16, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v74 = sub_1005E0EB0();
      os_log_type_t v75 = sub_1005E25C0();
      if (os_log_type_enabled(v74, v75))
      {
        uint64_t v76 = (uint8_t *)swift_slowAlloc();
        uint64_t v84 = swift_slowAlloc();
        v90[0] = v84;
        *(_DWORD *)uint64_t v76 = 136446210;
        uint64_t v83 = (char *)(v76 + 4);
        swift_bridgeObjectRetain();
        sub_10051B67C(8);
        swift_bridgeObjectRelease();
        uint64_t v77 = sub_1005E1D00();
        unint64_t v79 = v78;
        swift_bridgeObjectRelease();
        uint64_t v87 = sub_1005904BC(v77, v79, v90);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v74, v75, "[%{public}s] Server was recently unavailable.", v76, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      return 0;
    }
  }
  BOOL v49 = __OFADD__(v40++, 1);
  if (v49) {
    goto LABEL_67;
  }
  if (v40 >= v46) {
    goto LABEL_5;
  }
  unint64_t v54 = *(void *)(v42 + 8 * v40);
  if (v54)
  {
LABEL_36:
    unint64_t v56 = __clz(__rbit64(v54));
    unint64_t v45 = (v54 - 1) & v54;
    unint64_t v53 = v56 + (v40 << 6);
    if (v48)
    {
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    goto LABEL_37;
  }
  int64_t v55 = v40 + 1;
  if (v40 + 1 >= v46) {
    goto LABEL_5;
  }
  unint64_t v54 = *(void *)(v42 + 8 * v55);
  if (v54) {
    goto LABEL_35;
  }
  int64_t v55 = v40 + 2;
  if (v40 + 2 >= v46) {
    goto LABEL_5;
  }
  unint64_t v54 = *(void *)(v42 + 8 * v55);
  if (v54) {
    goto LABEL_35;
  }
  int64_t v55 = v40 + 3;
  if (v40 + 3 >= v46) {
    goto LABEL_5;
  }
  unint64_t v54 = *(void *)(v42 + 8 * v55);
  if (v54) {
    goto LABEL_35;
  }
  int64_t v55 = v40 + 4;
  if (v40 + 4 >= v46) {
    goto LABEL_5;
  }
  unint64_t v54 = *(void *)(v42 + 8 * v55);
  if (v54) {
    goto LABEL_35;
  }
  int64_t v55 = v40 + 5;
  if (v40 + 5 >= v46) {
    goto LABEL_5;
  }
  unint64_t v54 = *(void *)(v42 + 8 * v55);
  if (v54)
  {
LABEL_35:
    int64_t v40 = v55;
    goto LABEL_36;
  }
  while (1)
  {
    int64_t v40 = v55 + 1;
    if (__OFADD__(v55, 1)) {
      break;
    }
    if (v40 >= v46) {
      goto LABEL_5;
    }
    unint64_t v54 = *(void *)(v42 + 8 * v40);
    ++v55;
    if (v54) {
      goto LABEL_36;
    }
  }
LABEL_72:
  __break(1u);
  return result;
}

uint64_t sub_10054C124(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_22:
    Swift::UInt v15 = *(void *)(*(void *)(v3 + 48) + 8 * v11);
    uint64_t v16 = *(void *)(v3 + 56) + 72 * v11;
    int64x2_t v22 = *(int64x2_t *)(v16 + 48);
    int64x2_t v23 = *(int64x2_t *)(v16 + 32);
    int64x2_t v24 = *(int64x2_t *)(v16 + 16);
    int64x2_t v25 = *(int64x2_t *)v16;
    uint64_t v17 = *(void *)(v16 + 64);
    unint64_t v18 = sub_1005A02A4(v15);
    if ((v19 & 1) == 0) {
      return 0;
    }
    unint64_t v20 = v18;
    uint64_t result = 0;
    uint64_t v21 = (int64x2_t *)(*(void *)(a2 + 56) + 72 * v20);
    if ((vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*v21, v25), (int32x4_t)vceqq_s64(v21[1], v24)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(v21[2], v23), (int32x4_t)vceqq_s64(v21[3], v22)))), 7uLL))) & 1) == 0|| v21[4].i64[0] != v17)
    {
      return result;
    }
  }
  int64_t v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v12 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v12);
  ++v4;
  if (v13) {
    goto LABEL_21;
  }
  int64_t v4 = v12 + 1;
  if (v12 + 1 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v4 = v12 + 2;
  if (v12 + 2 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_22;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

Swift::Int sub_10054C314(uint64_t *a1)
{
  return sub_10054C32C(a1);
}

Swift::Int sub_10054C32C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1005ABD68(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_10054C398(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_10054C398(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1005E3210(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_100374898(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  Swift::Int v105 = result;
  unint64_t v102 = a1;
  if (v3 < 2)
  {
    unint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_118:
      unint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_100374968((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_1005AAE8C((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          id v100 = &v97[16 * v96 + 32];
          *(void *)id v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          unint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      _OWORD v104[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1005E2150();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  unint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v106 = v3;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    int64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1005E3290();
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      int64x2_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1005E3290()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      Swift::Int v22 = v20 + 1;
      Swift::Int v9 = v20;
      Swift::Int v20 = v22;
    }
    while (v22 < v3);
    Swift::Int v20 = v22;
LABEL_36:
    Swift::Int v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = sub_1005AACC4(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      unint64_t v11 = sub_1005AACC4((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      Swift::Int v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          BOOL v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            unint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        BOOL v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        os_log_type_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        os_log_type_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_100374968((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        unint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        Swift::Int v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v106;
    if (v9 >= v106)
    {
      unint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    Swift::Int v32 = v3;
  }
  else {
    Swift::Int v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      unint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        unint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        Swift::Int v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1005E3290() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      Swift::Int v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_10054CA84(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  char v44 = *(unsigned char *)(a1 + 56);
  swift_bridgeObjectRetain();
  Swift::Int v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_1005A0310(v7, v6);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1005A3D30();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    int v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    Swift::Int v20 = (uint64_t *)(v19[6] + 16 * v11);
    *Swift::Int v20 = v7;
    v20[1] = v6;
    uint64_t v21 = v19[7] + 16 * v11;
    *(void *)uint64_t v21 = v8;
    *(unsigned char *)(v21 + 8) = v44;
    uint64_t v22 = v19[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v19[2] = v24;
    uint64_t v25 = v3 - 1;
    if (v3 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    for (unint64_t i = (unsigned char *)(a1 + 88); ; i += 32)
    {
      uint64_t v28 = *((void *)i - 3);
      uint64_t v27 = *((void *)i - 2);
      uint64_t v29 = *((void *)i - 1);
      char v30 = *i;
      uint64_t v31 = (void *)*a3;
      swift_bridgeObjectRetain();
      unint64_t v32 = sub_1005A0310(v28, v27);
      uint64_t v34 = v31[2];
      BOOL v35 = (v33 & 1) == 0;
      BOOL v23 = __OFADD__(v34, v35);
      uint64_t v36 = v34 + v35;
      if (v23) {
        break;
      }
      char v37 = v33;
      if (v31[3] < v36)
      {
        sub_1005A1890(v36, 1);
        unint64_t v32 = sub_1005A0310(v28, v27);
        if ((v37 & 1) != (v38 & 1)) {
          goto LABEL_25;
        }
      }
      if (v37) {
        goto LABEL_10;
      }
      BOOL v39 = (void *)*a3;
      *(void *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      unint64_t v40 = (uint64_t *)(v39[6] + 16 * v32);
      *unint64_t v40 = v28;
      v40[1] = v27;
      uint64_t v41 = v39[7] + 16 * v32;
      *(void *)uint64_t v41 = v29;
      *(unsigned char *)(v41 + 8) = v30;
      uint64_t v42 = v39[2];
      BOOL v23 = __OFADD__(v42, 1);
      uint64_t v43 = v42 + 1;
      if (v23) {
        goto LABEL_24;
      }
      v39[2] = v43;
      if (!--v25) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1005A1890(v14, a2 & 1);
  unint64_t v16 = sub_1005A0310(v7, v6);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    sub_10000566C(&qword_100718D30);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return swift_errorRelease();
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1005E3380();
  __break(1u);
LABEL_26:
  sub_1005E2C80(30);
  v46._object = (void *)0x80000001005E4EC0;
  v46._countAndFlagsBits = 0xD00000000000001BLL;
  sub_1005E1E30(v46);
  sub_1005E2E90();
  v47._countAndFlagsBits = 39;
  v47._object = (void *)0xE100000000000000;
  sub_1005E1E30(v47);
  uint64_t result = sub_1005E2F20();
  __break(1u);
  return result;
}

uint64_t sub_10054CE24(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    unint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1005AAEA0(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_10054CFCC(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v18 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v18 >= v7) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v3 + 8 * v18);
    ++v8;
    if (!v19)
    {
      int64_t v8 = v18 + 1;
      if (v18 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v3 + 8 * v8);
      if (!v19)
      {
        int64_t v8 = v18 + 2;
        if (v18 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v3 + 8 * v8);
        if (!v19)
        {
          int64_t v8 = v18 + 3;
          if (v18 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v19 = *(void *)(v3 + 8 * v8);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v19 - 1) & v19;
    unint64_t v10 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = *(void *)(v2 + 48) + 32 * v10;
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *(void *)(v11 + 8);
    uint64_t v14 = *(void *)(v11 + 16);
    unsigned int v15 = *(_DWORD *)(v11 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1005AB040(v12, v13, v14, v15);
    sub_1000E8770(v16, v17);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v20 = v18 + 4;
  if (v20 < v7)
  {
    unint64_t v19 = *(void *)(v3 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        int64_t v8 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v3 + 8 * v8);
        ++v20;
        if (v19) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v20;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

unint64_t *sub_10054D198(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_10003BC80();
                  return (unint64_t *)v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_1005E33F0();
      swift_bridgeObjectRetain_n();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      Swift::Int v19 = sub_1005E3470();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    BOOL v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1005E3290() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        uint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1005E3290() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      unint64_t v32 = sub_10054DB80((unint64_t *)((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0)), v30, v2, v21, &v38);
      swift_release();
      sub_10003BC80();
    }
    else
    {
      char v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      unint64_t v32 = sub_10054DB80((unint64_t *)v33, v30, v2, v21, &v38);
      swift_release();
      sub_10003BC80();
      swift_slowDealloc();
    }
    return v32;
  }
  else
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

unint64_t *sub_10054D614(uint64_t a1, unint64_t *a2)
{
  uint64_t v2 = a2;
  if (a2[2])
  {
    uint64_t v3 = *(void *)(a1 + 56);
    uint64_t v47 = a1 + 56;
    uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v44 = ~v4;
    if (-v4 < 64) {
      uint64_t v5 = ~(-1 << -(char)v4);
    }
    else {
      uint64_t v5 = -1;
    }
    unint64_t v6 = v5 & v3;
    int64_t v46 = (unint64_t)(63 - v4) >> 6;
    unint64_t v7 = (char *)(a2 + 7);
    uint64_t v8 = swift_bridgeObjectRetain();
    BOOL v49 = v2;
    int64_t v50 = 0;
    uint64_t v48 = v8;
    while (1)
    {
      if (v6)
      {
        uint64_t v51 = (v6 - 1) & v6;
        unint64_t v9 = __clz(__rbit64(v6)) | (v50 << 6);
      }
      else
      {
        int64_t v10 = v50 + 1;
        if (__OFADD__(v50, 1))
        {
          __break(1u);
          goto LABEL_56;
        }
        if (v10 >= v46) {
          goto LABEL_53;
        }
        unint64_t v11 = *(void *)(v47 + 8 * v10);
        int64_t v12 = v50 + 1;
        if (!v11)
        {
          int64_t v12 = v50 + 2;
          if (v50 + 2 >= v46) {
            goto LABEL_53;
          }
          unint64_t v11 = *(void *)(v47 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v50 + 3;
            if (v50 + 3 >= v46) {
              goto LABEL_53;
            }
            unint64_t v11 = *(void *)(v47 + 8 * v12);
            if (!v11)
            {
              int64_t v12 = v50 + 4;
              if (v50 + 4 >= v46) {
                goto LABEL_53;
              }
              unint64_t v11 = *(void *)(v47 + 8 * v12);
              if (!v11)
              {
                int64_t v13 = v50 + 5;
                if (v50 + 5 >= v46)
                {
LABEL_53:
                  sub_10003BC80();
                  return v2;
                }
                unint64_t v11 = *(void *)(v47 + 8 * v13);
                if (!v11)
                {
                  while (1)
                  {
                    int64_t v12 = v13 + 1;
                    if (__OFADD__(v13, 1)) {
                      break;
                    }
                    if (v12 >= v46) {
                      goto LABEL_53;
                    }
                    unint64_t v11 = *(void *)(v47 + 8 * v12);
                    ++v13;
                    if (v11) {
                      goto LABEL_24;
                    }
                  }
LABEL_56:
                  __break(1u);
                }
                int64_t v12 = v50 + 5;
              }
            }
          }
        }
LABEL_24:
        int64_t v50 = v12;
        uint64_t v51 = (v11 - 1) & v11;
        unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
      }
      uint64_t v14 = *(void *)(v8 + 48) + 32 * v9;
      uint64_t v16 = *(void *)v14;
      uint64_t v15 = *(void *)(v14 + 8);
      uint64_t v17 = *(void *)(v14 + 16);
      uint64_t v18 = *(unsigned int *)(v14 + 24);
      sub_1005E33F0();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      Swift::UInt v19 = v18 | (v18 << 32);
      sub_1005E3410(v19);
      Swift::Int v20 = sub_1005E3470();
      uint64_t v21 = -1 << *((unsigned char *)v2 + 32);
      unint64_t v22 = v20 & ~v21;
      if ((*(void *)&v7[(v22 >> 3) & 0xFFFFFFFFFFFFFF8] >> v22)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v48;
      uint64_t v2 = v49;
      unint64_t v6 = v51;
    }
    uint64_t v23 = ~v21;
    unint64_t v24 = v49[6];
    uint64_t v45 = (unsigned __int8 *)(v17 + 36);
    while (1)
    {
      unint64_t v25 = v24 + 32 * v22;
      uint64_t v26 = *(void *)(v25 + 16);
      uint64_t v27 = *(unsigned int *)(v25 + 24);
      BOOL v28 = *(void *)v25 == v16 && *(void *)(v25 + 8) == v15;
      if (v28 || (sub_1005E3290()) && (v27 | (v27 << 32)) == v19)
      {
        uint64_t v29 = *(void *)(v26 + 16);
        if (v29 == *(void *)(v17 + 16))
        {
          if (!v29 || v26 == v17) {
            goto LABEL_48;
          }
          if (*(unsigned __int8 *)(v26 + 32) == *(unsigned __int8 *)(v17 + 32))
          {
            if (v29 == 1) {
              goto LABEL_48;
            }
            if (*(unsigned __int8 *)(v26 + 33) == *(unsigned __int8 *)(v17 + 33))
            {
              if (v29 == 2) {
                goto LABEL_48;
              }
              if (*(unsigned __int8 *)(v26 + 34) == *(unsigned __int8 *)(v17 + 34))
              {
                if (v29 == 3) {
                  goto LABEL_48;
                }
                if (*(unsigned __int8 *)(v26 + 35) == *(unsigned __int8 *)(v17 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_27:
      unint64_t v22 = (v22 + 1) & v23;
      if (((*(void *)&v7[(v22 >> 3) & 0xFFFFFFFFFFFFFF8] >> v22) & 1) == 0) {
        goto LABEL_6;
      }
    }
    unint64_t v30 = (unsigned __int8 *)(v26 + 36);
    uint64_t v31 = v29 - 4;
    unint64_t v32 = v45;
    while (v31)
    {
      int v34 = *v30++;
      int v33 = v34;
      int v35 = *v32++;
      --v31;
      if (v33 != v35) {
        goto LABEL_27;
      }
    }
LABEL_48:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = (uint64_t)v49;
    v52[0] = v48;
    v52[1] = v47;
    v52[2] = v44;
    v52[3] = v50;
    v52[4] = v51;
    char v37 = *((unsigned char *)v49 + 32);
    unint64_t v38 = (unint64_t)((1 << v37) + 63) >> 6;
    size_t v39 = 8 * v38;
    if ((v37 & 0x3Fu) <= 0xD || swift_stdlib_isStackAllocationSafe())
    {
      __chkstk_darwin();
      memcpy((char *)&v43 - ((v39 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v39);
      uint64_t v40 = sub_10054DE60((unint64_t *)((char *)&v43 - ((v39 + 15) & 0x3FFFFFFFFFFFFFF0)), v38, v36, v22, v52);
      swift_release();
      sub_10003BC80();
      return v40;
    }
    else
    {
      int64_t v41 = (void *)swift_slowAlloc();
      memcpy(v41, v7, v39);
      uint64_t v2 = sub_10054DE60((unint64_t *)v41, v38, (uint64_t)v49, v22, v52);
      swift_release();
      sub_10003BC80();
      swift_slowDealloc();
    }
  }
  else
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
  return v2;
}

unint64_t *sub_10054DB80(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  unint64_t v38 = result;
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v39 = a3 + 56;
  while (2)
  {
    uint64_t v37 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          int64_t v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
          int64_t v15 = a5[3];
          if (v13 >= v14) {
            goto LABEL_43;
          }
          uint64_t v16 = a5[1];
          unint64_t v17 = *(void *)(v16 + 8 * v13);
          if (!v17)
          {
            int64_t v15 = v9 + 1;
            if (v9 + 2 >= v14) {
              goto LABEL_43;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              int64_t v13 = v9 + 2;
            }
            else
            {
              int64_t v15 = v9 + 2;
              if (v9 + 3 >= v14) {
                goto LABEL_43;
              }
              unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                int64_t v13 = v9 + 3;
              }
              else
              {
                int64_t v13 = v9 + 4;
                int64_t v15 = v9 + 3;
                if (v9 + 4 >= v14) {
                  goto LABEL_43;
                }
                unint64_t v17 = *(void *)(v16 + 8 * v13);
                if (!v17)
                {
                  int64_t v15 = v14 - 1;
                  int64_t v18 = v9 + 5;
                  while (v14 != v18)
                  {
                    unint64_t v17 = *(void *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      int64_t v13 = v18 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_43:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  return (unint64_t *)sub_10054E218(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_21:
          uint64_t v11 = (v17 - 1) & v17;
          unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
          int64_t v9 = v13;
        }
        Swift::UInt v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1005E33F0();
        swift_bridgeObjectRetain();
        sub_1005E1DB0();
        Swift::Int v22 = sub_1005E3470();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v39 + 8 * (v24 >> 6))) != 0) {
          break;
        }
LABEL_3:
        uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      }
      uint64_t v27 = *(void *)(a3 + 48);
      BOOL v28 = (void *)(v27 + 16 * v24);
      BOOL v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (sub_1005E3290() & 1) == 0)
      {
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          int v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1005E3290() & 1) != 0)
          {
            uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_29;
          }
        }
        goto LABEL_3;
      }
      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
LABEL_29:
      unint64_t v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_45:
      __break(1u);
      return result;
    }
    if (v37 != 1) {
      continue;
    }
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

unint64_t *sub_10054DE60(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v45 = result;
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v6 = v5 - 1;
  uint64_t v48 = a3 + 56;
  int64_t v46 = a5;
  while (2)
  {
    uint64_t v44 = v6;
    do
    {
      while (1)
      {
        int64_t v7 = a5[3];
        unint64_t v8 = a5[4];
        if (v8)
        {
          uint64_t v9 = (v8 - 1) & v8;
          unint64_t v10 = __clz(__rbit64(v8)) | (v7 << 6);
          goto LABEL_16;
        }
        int64_t v11 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
          goto LABEL_56;
        }
        int64_t v12 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v13 = a5[3];
        if (v11 >= v12) {
          goto LABEL_54;
        }
        uint64_t v14 = a5[1];
        unint64_t v15 = *(void *)(v14 + 8 * v11);
        if (!v15)
        {
          int64_t v16 = v7 + 2;
          int64_t v13 = v7 + 1;
          if (v7 + 2 >= v12) {
            goto LABEL_54;
          }
          unint64_t v15 = *(void *)(v14 + 8 * v16);
          if (!v15)
          {
            int64_t v13 = v7 + 2;
            if (v7 + 3 >= v12) {
              goto LABEL_54;
            }
            unint64_t v15 = *(void *)(v14 + 8 * (v7 + 3));
            if (v15)
            {
              int64_t v11 = v7 + 3;
              goto LABEL_15;
            }
            int64_t v16 = v7 + 4;
            int64_t v13 = v7 + 3;
            if (v7 + 4 >= v12) {
              goto LABEL_54;
            }
            unint64_t v15 = *(void *)(v14 + 8 * v16);
            if (!v15)
            {
              int64_t v11 = v7 + 5;
              int64_t v13 = v7 + 4;
              if (v7 + 5 >= v12) {
                goto LABEL_54;
              }
              unint64_t v15 = *(void *)(v14 + 8 * v11);
              if (!v15)
              {
                int64_t v13 = v12 - 1;
                int64_t v42 = v7 + 6;
                while (v12 != v42)
                {
                  unint64_t v15 = *(void *)(v14 + 8 * v42++);
                  if (v15)
                  {
                    int64_t v11 = v42 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_54:
                a5[3] = v13;
                a5[4] = 0;
                swift_retain();
                return (unint64_t *)sub_10054E4BC(v45, a2, v44, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v11 = v16;
        }
LABEL_15:
        uint64_t v9 = (v15 - 1) & v15;
        unint64_t v10 = __clz(__rbit64(v15)) + (v11 << 6);
        int64_t v7 = v11;
LABEL_16:
        uint64_t v17 = *(void *)(*a5 + 48) + 32 * v10;
        uint64_t v18 = *(void *)v17;
        uint64_t v19 = *(void *)(v17 + 8);
        uint64_t v20 = *(void *)(v17 + 16);
        uint64_t v21 = *(unsigned int *)(v17 + 24);
        a5[3] = v7;
        a5[4] = v9;
        sub_1005E33F0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1005E1DB0();
        Swift::UInt v22 = v21 | (v21 << 32);
        sub_1005E3410(v22);
        Swift::Int v23 = sub_1005E3470();
        uint64_t v24 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v25 = v23 & ~v24;
        if ((*(void *)(v48 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25)) {
          break;
        }
LABEL_3:
        swift_bridgeObjectRelease();
        uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
        a5 = v46;
      }
      uint64_t v26 = ~v24;
      uint64_t v27 = *(void *)(a3 + 48);
      while (1)
      {
        uint64_t v28 = v27 + 32 * v25;
        uint64_t v29 = *(void *)(v28 + 16);
        uint64_t v30 = *(unsigned int *)(v28 + 24);
        BOOL v31 = *(void *)v28 == v18 && *(void *)(v28 + 8) == v19;
        if (v31 || (sub_1005E3290()) && (v30 | (v30 << 32)) == v22)
        {
          uint64_t v32 = *(void *)(v29 + 16);
          if (v32 == *(void *)(v20 + 16))
          {
            if (v32) {
              BOOL v33 = v29 == v20;
            }
            else {
              BOOL v33 = 1;
            }
            if (v33) {
              goto LABEL_41;
            }
            if (*(unsigned __int8 *)(v29 + 32) == *(unsigned __int8 *)(v20 + 32))
            {
              if (v32 == 1) {
                goto LABEL_41;
              }
              if (*(unsigned __int8 *)(v29 + 33) == *(unsigned __int8 *)(v20 + 33))
              {
                if (v32 == 2) {
                  goto LABEL_41;
                }
                if (*(unsigned __int8 *)(v29 + 34) == *(unsigned __int8 *)(v20 + 34))
                {
                  if (v32 == 3) {
                    goto LABEL_41;
                  }
                  if (*(unsigned __int8 *)(v29 + 35) == *(unsigned __int8 *)(v20 + 35)) {
                    break;
                  }
                }
              }
            }
          }
        }
LABEL_18:
        unint64_t v25 = (v25 + 1) & v26;
        if (((*(void *)(v48 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
          goto LABEL_3;
        }
      }
      int v34 = (unsigned __int8 *)(v29 + 36);
      uint64_t v35 = v32 - 4;
      uint64_t v36 = (unsigned __int8 *)(v20 + 36);
      while (v35)
      {
        int v38 = *v34++;
        int v37 = v38;
        int v39 = *v36++;
        --v35;
        if (v37 != v39) {
          goto LABEL_18;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      uint64_t v40 = (v25 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v41 = *(unint64_t *)((char *)v45 + v40);
      *(unint64_t *)((char *)v45 + v40) = v41 & ~(1 << v25);
      a5 = v46;
    }
    while ((v41 & (1 << v25)) == 0);
    uint64_t v6 = v44 - 1;
    if (__OFSUB__(v44, 1))
    {
LABEL_56:
      __break(1u);
      return result;
    }
    if (v44 != 1) {
      continue;
    }
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

uint64_t sub_10054E218(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    unint64_t v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10000566C(&qword_100718D20);
  uint64_t result = sub_1005E2C30();
  unint64_t v8 = (unsigned char *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1005E33F0();
    swift_bridgeObjectRetain_n();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1005E3470();
    uint64_t v20 = -1 << v8[32];
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*((void *)v8 + 6) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10054E4BC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    unint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10000566C(&qword_100718D40);
  uint64_t result = sub_1005E2C30();
  unint64_t v9 = (unsigned char *)result;
  BOOL v33 = a1;
  uint64_t v34 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  uint64_t v35 = v4;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= v34) {
      goto LABEL_36;
    }
    unint64_t v16 = v33[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= v34) {
        goto LABEL_36;
      }
      unint64_t v16 = v33[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= v34) {
          goto LABEL_36;
        }
        unint64_t v16 = v33[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v4 + 48) + 32 * v14;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    uint64_t v22 = *(unsigned int *)(v18 + 24);
    sub_1005E33F0();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    sub_1005E3410(v22 | (v22 << 32));
    uint64_t result = sub_1005E3470();
    uint64_t v23 = -1 << v9[32];
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v12 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t v31 = *((void *)v9 + 6) + 32 * v26;
    *(void *)uint64_t v31 = v19;
    *(void *)(v31 + 8) = v20;
    *(void *)(v31 + 16) = v21;
    *(_DWORD *)(v31 + 24) = v22;
    ++*((void *)v9 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    uint64_t v4 = v35;
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= v34) {
    goto LABEL_36;
  }
  unint64_t v16 = v33[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v34) {
      goto LABEL_36;
    }
    unint64_t v16 = v33[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t *sub_10054E778(uint64_t isStackAllocationSafe, unint64_t *a2, char a3)
{
  uint64_t v6 = isStackAllocationSafe;
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    unint64_t v10 = sub_10054EA70((unint64_t *)((char *)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, v6, (uint64_t)a2, a3 & 1);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a2 = sub_10054EA70((unint64_t *)v11, v8, v6, (uint64_t)a2, a3 & 1);
    swift_slowDealloc();
  }
  return a2;
}

void sub_10054E8F0()
{
  uint64_t v1 = *v0;
  unint64_t v2 = *(void *)(*v0 + 16);
  unint64_t v3 = v2 - 2;
  if (v2 >= 2)
  {
    unint64_t v4 = 0;
    while (1)
    {
      Swift::UInt64 v6 = PCG32Random.next()();
      uint64_t v7 = (v6 * (unsigned __int128)v2) >> 64;
      if (v2 > v6 * v2)
      {
        unint64_t v8 = -(uint64_t)v2 % v2;
        if (v8 > v6 * v2)
        {
          do
            Swift::UInt64 v9 = PCG32Random.next()();
          while (v8 > v9 * v2);
          uint64_t v7 = (v9 * (unsigned __int128)v2) >> 64;
        }
      }
      unint64_t v10 = v4 + v7;
      if (__OFADD__(v4, v7)) {
        break;
      }
      if (v4 != v10)
      {
        unint64_t v11 = *(void *)(v1 + 16);
        if (v4 >= v11) {
          goto LABEL_19;
        }
        if (v10 >= v11) {
          goto LABEL_20;
        }
        uint64_t v12 = (uint64_t *)(v1 + 32 + 16 * v4);
        uint64_t v14 = *v12;
        uint64_t v13 = v12[1];
        uint64_t v15 = (uint64_t *)(v1 + 32 + 16 * v10);
        uint64_t v16 = *v15;
        uint64_t v17 = v15[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v1 = sub_1005ABD68(v1);
        }
        if (v4 >= *(void *)(v1 + 16)) {
          goto LABEL_21;
        }
        uint64_t v18 = (void *)(v1 + 32 + 16 * v4);
        void *v18 = v16;
        v18[1] = v17;
        swift_bridgeObjectRelease();
        if (v10 >= *(void *)(v1 + 16)) {
          goto LABEL_22;
        }
        uint64_t v19 = (void *)(v1 + 32 + 16 * v10);
        *uint64_t v19 = v14;
        v19[1] = v13;
        swift_bridgeObjectRelease();
        *uint64_t v20 = v1;
      }
      --v2;
      if (v4++ == v3) {
        return;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
}

unint64_t *sub_10054EA70(unint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_17;
    }
    BOOL v15 = __OFADD__(v7++, 1);
    if (v15)
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v7 >= v12) {
      return (unint64_t *)sub_10059B038(result, a2, v6, a3);
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    if (!v16) {
      break;
    }
LABEL_16:
    unint64_t v18 = __clz(__rbit64(v16));
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = v18 + (v7 << 6);
LABEL_17:
    uint64_t v19 = *(void *)(a3 + 56) + 16 * v14;
    if (*(void *)v19 == a4 && ((*(unsigned __int8 *)(v19 + 8) ^ a5) & 1) == 0)
    {
      *(unint64_t *)((char *)result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      BOOL v15 = __OFADD__(v6++, 1);
      if (v15) {
        goto LABEL_29;
      }
    }
  }
  int64_t v17 = v7 + 1;
  if (v7 + 1 >= v12) {
    return (unint64_t *)sub_10059B038(result, a2, v6, a3);
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v7 + 2;
  if (v7 + 2 >= v12) {
    return (unint64_t *)sub_10059B038(result, a2, v6, a3);
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v7 + 3;
  if (v7 + 3 >= v12) {
    return (unint64_t *)sub_10059B038(result, a2, v6, a3);
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
LABEL_15:
    int64_t v7 = v17;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      return (unint64_t *)sub_10059B038(result, a2, v6, a3);
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_16;
    }
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10054EBD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void (*a4)(uint64_t *__return_ptr, void *)@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t result = sub_100549620(*(void *)a1, *(void *)(a1 + 8), a2, a3, a4, a5, v9);
  if (!v6) {
    return sub_10001FDF0((uint64_t)v9, a6, &qword_100718D18);
  }
  return result;
}

void *sub_10054EC40(uint64_t a1, uint64_t a2, double a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v5 = a1;
  sub_100590C54(0, v3, 0);
  uint64_t result = (void *)sub_100103FD8(v5);
  uint64_t v8 = (uint64_t)result;
  uint64_t v9 = 0;
  uint64_t v10 = v5 + 64;
  char v11 = *(unsigned char *)(v5 + 32);
  uint64_t v28 = v5 + 80;
  uint64_t v30 = v5 + 64;
  uint64_t v31 = v5;
  int v29 = v7;
  while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << v11)
  {
    unint64_t v14 = (unint64_t)v8 >> 6;
    if ((*(void *)(v10 + 8 * ((unint64_t)v8 >> 6)) & (1 << v8)) == 0) {
      goto LABEL_28;
    }
    if (*(_DWORD *)(v5 + 36) != v7) {
      goto LABEL_29;
    }
    BOOL v15 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v8);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    double v18 = floor(*(double *)(*(void *)(v5 + 56) + 8 * v8) / a3);
    uint64_t v33 = v9;
    if ((~*(void *)&v18 & 0x7FF0000000000000) != 0)
    {
      if (v18 <= -9.22337204e18) {
        goto LABEL_33;
      }
      if (v18 >= 9.22337204e18) {
        goto LABEL_34;
      }
      uint64_t v34 = (uint64_t)v18 & ~((uint64_t)v18 >> 63);
    }
    else
    {
      uint64_t v34 = 0;
    }
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_100551D78(v17, v16, a2);
    char v19 = (char)result;
    unint64_t v21 = _swiftEmptyArrayStorage[2];
    unint64_t v20 = _swiftEmptyArrayStorage[3];
    if (v21 >= v20 >> 1) {
      uint64_t result = (void *)sub_100590C54(v20 > 1, v21 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v21 + 1;
    uint64_t v22 = &_swiftEmptyArrayStorage[4 * v21];
    v22[4] = v17;
    v22[5] = v16;
    v22[6] = v34;
    *((unsigned char *)v22 + 56) = v19 & 1;
    uint64_t v5 = v31;
    char v11 = *(unsigned char *)(v31 + 32);
    unint64_t v12 = 1 << v11;
    if (v8 >= 1 << v11) {
      goto LABEL_30;
    }
    uint64_t v10 = v30;
    uint64_t v23 = *(void *)(v30 + 8 * v14);
    if ((v23 & (1 << v8)) == 0) {
      goto LABEL_31;
    }
    int v7 = v29;
    if (*(_DWORD *)(v31 + 36) != v29) {
      goto LABEL_32;
    }
    unint64_t v24 = v23 & (-2 << (v8 & 0x3F));
    if (v24)
    {
      unint64_t v12 = __clz(__rbit64(v24)) | v8 & 0xFFFFFFFFFFFFFFC0;
      int64_t v13 = v3;
    }
    else
    {
      unint64_t v25 = v14 + 1;
      unint64_t v26 = (v12 + 63) >> 6;
      int64_t v13 = v3;
      if (v14 + 1 < v26)
      {
        unint64_t v27 = *(void *)(v30 + 8 * v25);
        if (v27)
        {
LABEL_25:
          unint64_t v12 = __clz(__rbit64(v27)) + (v25 << 6);
        }
        else
        {
          while (v26 - 2 != v14)
          {
            unint64_t v27 = *(void *)(v28 + 8 * v14++);
            if (v27)
            {
              unint64_t v25 = v14 + 1;
              goto LABEL_25;
            }
          }
        }
      }
    }
    uint64_t v9 = v33 + 1;
    uint64_t v8 = v12;
    if (v33 + 1 == v13) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

void *sub_10054EEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a2;
  sub_1005E0970();
  __chkstk_darwin();
  unint64_t v26 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v25 = v2;
    int v29 = _swiftEmptyArrayStorage;
    sub_100590CD4(0, v5, 0);
    uint64_t v6 = v29;
    int v7 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v8 = *(v7 - 1);
      unint64_t v9 = *v7;
      swift_bridgeObjectRetain();
      id v10 = sub_10053942C(v8, v9);
      NSString v11 = sub_1005E1BD0();
      [v10 willAccessValueForKey:v11];

      id v12 = [v10 primitiveDataUsage];
      if (v12)
      {
        int64_t v13 = v12;
        uint64_t v14 = sub_1005E08A0();
        uint64_t v15 = v8;
        unint64_t v17 = v16;

        sub_100008D24(v14, v17);
        uint64_t v18 = (uint64_t)v26;
        sub_1005E0960();
        uint64_t v28 = (void *)sub_1005BF67C(v18, v14, v17);
        unint64_t v19 = v17;
        uint64_t v8 = v15;
        sub_1000094D4(v14, v19);
      }
      else
      {
        uint64_t v28 = _swiftEmptyDictionarySingleton;
      }
      NSString v20 = sub_1005E1BD0();
      [v10 didAccessValueForKey:v20];

      int v29 = v6;
      unint64_t v22 = v6[2];
      unint64_t v21 = v6[3];
      if (v22 >= v21 >> 1)
      {
        sub_100590CD4(v21 > 1, v22 + 1, 1);
        uint64_t v6 = v29;
      }
      v7 += 2;
      void v6[2] = v22 + 1;
      uint64_t v23 = &v6[3 * v22];
      v23[4] = v8;
      v23[5] = v9;
      v23[6] = v28;
      --v5;
    }
    while (v5);
  }
  return v6;
}

void sub_10054F12C()
{
  uint64_t v0 = qword_1007187A8;
  swift_bridgeObjectRetain();
  if (v0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1005E0ED0();
  sub_1003461B0(v1, (uint64_t)qword_100718BD8);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1005E0EB0();
  os_log_type_t v3 = sub_1005E25C0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    swift_bridgeObjectRetain();
    sub_10051B67C(8);
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1005E1D00();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    sub_1005904BC(v5, v7, &v8);
    sub_1005E2960();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Tearing down instance for account %{public}s.", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  Engine.tearDown()();
}

uint64_t sub_10054F344(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  int64_t v4 = 0;
  uint64_t v27 = 0;
  uint64_t v28 = a3 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a3 + 64);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v25 = (unint64_t *)result;
  unint64_t v26 = a4 + 7;
  while (1)
  {
    while (1)
    {
LABEL_5:
      if (v7)
      {
        unint64_t v9 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v10 = v9 | (v4 << 6);
      }
      else
      {
        int64_t v11 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_39;
        }
        if (v11 >= v29) {
          return sub_10059B038(v25, a2, v27, a3);
        }
        unint64_t v12 = *(void *)(v28 + 8 * v11);
        ++v4;
        if (!v12)
        {
          int64_t v4 = v11 + 1;
          if (v11 + 1 >= v29) {
            return sub_10059B038(v25, a2, v27, a3);
          }
          unint64_t v12 = *(void *)(v28 + 8 * v4);
          if (!v12)
          {
            int64_t v4 = v11 + 2;
            if (v11 + 2 >= v29) {
              return sub_10059B038(v25, a2, v27, a3);
            }
            unint64_t v12 = *(void *)(v28 + 8 * v4);
            if (!v12)
            {
              int64_t v13 = v11 + 3;
              if (v13 >= v29) {
                return sub_10059B038(v25, a2, v27, a3);
              }
              unint64_t v12 = *(void *)(v28 + 8 * v13);
              if (!v12)
              {
                while (1)
                {
                  int64_t v4 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    goto LABEL_41;
                  }
                  if (v4 >= v29) {
                    return sub_10059B038(v25, a2, v27, a3);
                  }
                  unint64_t v12 = *(void *)(v28 + 8 * v4);
                  ++v13;
                  if (v12) {
                    goto LABEL_20;
                  }
                }
              }
              int64_t v4 = v13;
            }
          }
        }
LABEL_20:
        unint64_t v7 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
      }
      uint64_t v14 = a4[2];
      if (v14) {
        break;
      }
LABEL_4:
      *(unint64_t *)((char *)v25 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      if (__OFADD__(v27++, 1)) {
        goto LABEL_40;
      }
    }
    uint64_t v15 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v10);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t result = a4[4];
    if (result != *v15 || a4[5] != v17)
    {
      uint64_t result = sub_1005E3290();
      if ((result & 1) == 0) {
        break;
      }
    }
  }
  if (v14 == 1) {
    goto LABEL_4;
  }
  unint64_t v19 = v26;
  uint64_t v20 = 1;
  while (1)
  {
    uint64_t v21 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    uint64_t result = *(v19 - 1);
    uint64_t v22 = *v19;
    v19 += 2;
    if (result == v16 && v22 == v17) {
      goto LABEL_5;
    }
    uint64_t result = sub_1005E3290();
    if (result) {
      goto LABEL_5;
    }
    ++v20;
    if (v21 == v14) {
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10054F594(uint64_t a1, void *a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_10054F344((uint64_t)&v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    int64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_10054F344((uint64_t)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_10054F750(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  unint64_t v119 = a1;
  uint64_t v117 = sub_1005E0ED0();
  uint64_t v13 = *(char **)(v117 - 8);
  __chkstk_darwin();
  uint64_t v98 = (char *)v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v112 = (char *)v88 - v15;
  uint64_t v97 = v16;
  __chkstk_darwin();
  uint64_t v116 = (char *)v88 - v17;
  unint64_t v18 = sub_1005E1850();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin();
  uint64_t v21 = (void *)((char *)v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = a4;
  v22[3] = a5;
  uint64_t v100 = a5;
  unint64_t v101 = a6;
  v22[4] = a6;
  v22[5] = a7;
  unint64_t v113 = v22;
  uint64_t v114 = a3;
  uint64_t v23 = *(void **)(a3 + 16);
  *uint64_t v21 = v23;
  unint64_t v24 = *(void (**)(void))(v19 + 104);
  unsigned int v107 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v108 = v19 + 104;
  Swift::Int v106 = (void (*)(void, void, void))v24;
  v24(v21);
  swift_retain();
  uint64_t v102 = a7;
  swift_retain();
  id v104 = v23;
  LOBYTE(v23) = sub_1005E1860();
  unint64_t v26 = *(void (**)(void *, void))(v19 + 8);
  uint64_t v25 = v19 + 8;
  uint64_t v109 = v21;
  uint64_t v110 = v25;
  long long v111 = (void (*)(void, void))v18;
  Swift::Int v105 = v26;
  v26(v21, v18);
  if ((v23 & 1) == 0)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    swift_once();
    goto LABEL_13;
  }
  uint64_t v99 = a4;
  uint64_t v21 = *(void **)(a2 + 16);
  uint64_t v27 = (void **)_swiftEmptyArrayStorage;
  uint64_t v118 = v13;
  uint64_t v115 = a2;
  if (v21)
  {
    uint64_t v28 = v117;
    uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
    sub_100590C34(0, (int64_t)v21, 0);
    uint64_t v27 = aBlock;
    a6 = (uint64_t *)(a2 + 40);
    uint64_t v13 = (char *)v21;
    while (1)
    {
      uint64_t v25 = *(a6 - 1);
      a7 = *a6;
      uint64_t v29 = HIBYTE(*a6) & 0xF;
      if ((*a6 & 0x2000000000000000) == 0) {
        uint64_t v29 = v25 & 0xFFFFFFFFFFFFLL;
      }
      if (!v29) {
        break;
      }
      uint64_t aBlock = v27;
      unint64_t v18 = (unint64_t)v27[2];
      unint64_t v30 = (unint64_t)v27[3];
      swift_bridgeObjectRetain();
      if (v18 >= v30 >> 1)
      {
        sub_100590C34(v30 > 1, v18 + 1, 1);
        uint64_t v27 = aBlock;
      }
      a6 += 7;
      v27[2] = (void *)(v18 + 1);
      uint64_t v31 = &v27[2 * v18];
      v31[4] = (void *)v25;
      v31[5] = (void *)a7;
      if (!--v13)
      {
        uint64_t v25 = v28;
        a7 = (uint64_t)v118;
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_34;
  }
  a7 = (uint64_t)v13;
  uint64_t v25 = v117;
LABEL_12:
  unint64_t v18 = v119;
  a6 = (uint64_t *)sub_1005AC09C((uint64_t)v27);
  swift_bridgeObjectRelease();
  uint64_t v13 = v116;
  if (qword_1007187A8 != -1) {
    goto LABEL_35;
  }
LABEL_13:
  uint64_t v32 = sub_1003461B0(v25, (uint64_t)qword_100718BD8);
  uint64_t v34 = a7 + 16;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(a7 + 16);
  uint64_t v103 = v32;
  unint64_t v96 = v33;
  ((void (*)(char *))v33)(v13);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v35 = sub_1005E0EB0();
  int v36 = sub_1005E25C0();
  if (os_log_type_enabled(v35, (os_log_type_t)v36))
  {
    int v90 = v36;
    os_log_t v92 = v35;
    uint64_t v37 = a7;
    uint64_t v38 = swift_slowAlloc();
    unint64_t v89 = (void **)swift_slowAlloc();
    uint64_t v120 = (void *)v18;
    uint64_t aBlock = v89;
    *(_DWORD *)uint64_t v38 = 134218498;
    sub_1005E2960();
    *(_WORD *)(v38 + 12) = 2048;
    swift_bridgeObjectRelease();
    uint64_t v95 = v21;
    uint64_t v120 = v21;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    uint64_t v91 = (uint8_t *)v38;
    *(_WORD *)(v38 + 22) = 2082;
    uint64_t v39 = swift_bridgeObjectRetain();
    uint64_t v40 = sub_1005A9014(v39);
    swift_bridgeObjectRelease();
    uint64_t v120 = v40;
    sub_10054C32C((uint64_t *)&v120);
    unint64_t v93 = a6;
    uint64_t v94 = v34;
    uint64_t v41 = v120;
    int64_t v42 = v120[2];
    if (v42)
    {
      uint64_t v120 = _swiftEmptyArrayStorage;
      sub_100590C74(0, v42, 0);
      uint64_t v43 = v120;
      v88[1] = v41;
      uint64_t v44 = v41 + 5;
      do
      {
        swift_bridgeObjectRetain();
        sub_1005E1DF0();
        uint64_t v45 = sub_1005E1F50();
        uint64_t v47 = v46;
        uint64_t v49 = v48;
        uint64_t v51 = v50;
        swift_bridgeObjectRelease();
        uint64_t v120 = v43;
        unint64_t v53 = v43[2];
        unint64_t v52 = v43[3];
        if (v53 >= v52 >> 1)
        {
          sub_100590C74(v52 > 1, v53 + 1, 1);
          uint64_t v43 = v120;
        }
        v44 += 2;
        _OWORD v43[2] = v53 + 1;
        uint64_t v54 = &v43[4 * v53];
        v54[4] = v45;
        v54[5] = v47;
        v54[6] = v49;
        v54[7] = v51;
        --v42;
      }
      while (v42);
      swift_release();
      uint64_t v25 = v117;
      unint64_t v56 = v118;
      uint64_t v13 = v116;
    }
    else
    {
      swift_release();
      uint64_t v43 = _swiftEmptyArrayStorage;
      unint64_t v56 = (char *)v37;
    }
    uint64_t v57 = v91;
    uint64_t v120 = v43;
    sub_10000566C(&qword_100718CE8);
    sub_100057E98(&qword_100718CF0, &qword_100718CE8);
    sub_100550648();
    uint64_t v58 = sub_1005E2060();
    unint64_t v60 = v59;
    swift_bridgeObjectRelease();
    uint64_t v120 = (void *)sub_1005904BC(v58, v60, (uint64_t *)&aBlock);
    sub_1005E2960();
    a6 = v93;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v61 = v92;
    _os_log_impl((void *)&_mh_execute_header, v92, (os_log_type_t)v90, "Starting {%ld} for %ld account(s): %{public}s", v57, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    BOOL v55 = (void (*)(char *, uint64_t))*((void *)v56 + 1);
    v55(v13, v25);
    uint64_t v21 = v95;
    unint64_t v18 = v119;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    BOOL v55 = *(void (**)(char *, uint64_t))(a7 + 8);
    v55(v13, v25);
  }
  uint64_t v62 = v114;
  uint64_t v63 = *(char **)(v114 + 24);
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = v62;
  *(void *)(v64 + 24) = a6;
  uint64_t v125 = sub_100550408;
  uint64_t v126 = v64;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v122 = 1107296256;
  uint64_t v123 = sub_10046A1E4;
  uint64_t v124 = &unk_1006FCE30;
  BOOL v65 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v63 performBlock:v65];
  _Block_release(v65);
  if (!v21)
  {
    sub_100564B78(v100, 3, (uint64_t)v101, v102);
    return swift_release();
  }
  uint64_t v116 = v63;
  uint64_t v66 = v109;
  char v67 = v104;
  *uint64_t v109 = v104;
  uint64_t v68 = v111;
  v106(v66, v107, v111);
  id v69 = v67;
  LOBYTE(v67) = sub_1005E1860();
  v105(v66, v68);
  if (v67)
  {
    long long v111 = (void (*)(void, void))v55;
    uint64_t v70 = *(void *)(v62 + 152);
    if (v70 >= 11000000000 || (uint64_t v71 = *(void *)(v62 + 160), v71 > 0x98BCA59FFLL))
    {
      sub_10055A4C8();
      os_log_type_t v75 = v112;
      uint64_t v76 = v96;
      v96(v112, (char *)v103, v25);
      uint64_t v77 = (void (*)(uint64_t))swift_allocObject();
      *((void *)v77 + 2) = v62;
      *((void *)v77 + 3) = v18;
      uint64_t v78 = v113;
      *((void *)v77 + 4) = sub_1005503BC;
      *((void *)v77 + 5) = v78;
      uint64_t v79 = v25;
      uint64_t v80 = v98;
      v76(v98, v75, v79);
      uint64_t v81 = (void (**)(unint64_t, char *, uint64_t))v118;
      unint64_t v82 = (v118[80] + 32) & ~(unint64_t)v118[80];
      unint64_t v83 = (v97 + v82 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v84 = swift_allocObject();
      *(void *)(v84 + 16) = v62;
      *(void *)(v84 + 24) = v115;
      v81[4](v84 + v82, v80, v79);
      uint64_t v85 = (void (**)(uint64_t))(v84 + v83);
      *uint64_t v85 = sub_100550490;
      v85[1] = v77;
      uint64_t v125 = sub_1005505B4;
      uint64_t v126 = v84;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v122 = 1107296256;
      uint64_t v123 = sub_10046A1E4;
      uint64_t v124 = &unk_1006FCEA8;
      uint64_t v86 = _Block_copy(&aBlock);
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_release();
      [v116 performBlock:v86];
      _Block_release(v86);
      swift_release();
      v111(v112, v79);
    }
    else
    {
      BOOL v72 = sub_1005E0EB0();
      os_log_type_t v73 = sub_1005E25A0();
      if (os_log_type_enabled(v72, v73))
      {
        uint64_t v74 = swift_slowAlloc();
        *(_DWORD *)uint64_t v74 = 134218240;
        uint64_t aBlock = (void **)v70;
        sub_1005E2960();
        *(_WORD *)(v74 + 12) = 2048;
        uint64_t aBlock = (void **)v71;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v72, v73, "Refusing download & index due to low disk space %{iec-bytes}ld / %{iec-bytes}ld.", (uint8_t *)v74, 0x16u);
        swift_slowDealloc();
      }

      sub_100564B78(v100, 0, (uint64_t)v101, v102);
    }
    return swift_release();
  }
  __break(1u);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1005503BC(char a1)
{
  return sub_100564B44(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1005503C8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100550408()
{
  return sub_10053BE68(*(void *)(v0 + 24), *(void *)(*(void *)(v0 + 16) + 40));
}

uint64_t sub_100550434(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100550444()
{
  return swift_release();
}

uint64_t sub_100550450()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

void sub_100550490(uint64_t a1)
{
  sub_1005421EC(*(void *)(v1 + 24), a1, *(void (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1005504C0()
{
  uint64_t v1 = sub_1005E0ED0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1005505B4()
{
  uint64_t v1 = *(void *)(sub_1005E0ED0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = v0 + v2;
  unint64_t v6 = (uint64_t *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  return sub_100547208(v3, v4, v5, v7, v8);
}

unint64_t sub_100550648()
{
  unint64_t result = qword_100718CF8;
  if (!qword_100718CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100718CF8);
  }
  return result;
}

uint64_t sub_10055069C(uint64_t result, char a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v6 = result;
    uint64_t v8 = *(void *)(result + 32);
    uint64_t v7 = *(void *)(result + 40);
    char v41 = *(unsigned char *)(result + 48);
    unint64_t v9 = (void *)*a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_1005A0310(v8, v7);
    uint64_t v12 = v9[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    char v15 = v10;
    if (v9[3] < v14)
    {
      sub_1005A1BB4(v14, a2 & 1);
      unint64_t v16 = sub_1005A0310(v8, v7);
      if ((v15 & 1) != (v17 & 1))
      {
LABEL_28:
        unint64_t result = sub_1005E3380();
        __break(1u);
        return result;
      }
      unint64_t v11 = v16;
      unint64_t v18 = (void *)*a3;
      if ((v15 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_9:
      swift_bridgeObjectRelease();
      *(unsigned char *)(v18[7] + v11) = v41;
      uint64_t v19 = v3 - 1;
      if (v3 == 1) {
        return swift_bridgeObjectRelease();
      }
LABEL_16:
      for (unint64_t i = (unsigned char *)(v6 + 72); ; i += 24)
      {
        uint64_t v26 = *((void *)i - 2);
        uint64_t v25 = *((void *)i - 1);
        char v27 = *i;
        uint64_t v28 = (void *)*a3;
        swift_bridgeObjectRetain();
        unint64_t v30 = sub_1005A0310(v26, v25);
        uint64_t v31 = v28[2];
        BOOL v32 = (v29 & 1) == 0;
        uint64_t v33 = v31 + v32;
        if (__OFADD__(v31, v32)) {
          break;
        }
        char v34 = v29;
        if (v28[3] < v33)
        {
          sub_1005A1BB4(v33, 1);
          unint64_t v35 = sub_1005A0310(v26, v25);
          if ((v34 & 1) != (v36 & 1)) {
            goto LABEL_28;
          }
          unint64_t v30 = v35;
        }
        uint64_t v37 = (void *)*a3;
        if (v34)
        {
          swift_bridgeObjectRelease();
          *(unsigned char *)(v37[7] + v30) = v27;
        }
        else
        {
          v37[(v30 >> 6) + 8] |= 1 << v30;
          uint64_t v38 = (uint64_t *)(v37[6] + 16 * v30);
          *uint64_t v38 = v26;
          v38[1] = v25;
          *(unsigned char *)(v37[7] + v30) = v27;
          uint64_t v39 = v37[2];
          BOOL v22 = __OFADD__(v39, 1);
          uint64_t v40 = v39 + 1;
          if (v22) {
            goto LABEL_27;
          }
          v37[2] = v40;
        }
        if (!--v19) {
          return swift_bridgeObjectRelease();
        }
      }
      goto LABEL_26;
    }
    if (a2)
    {
      unint64_t v18 = (void *)*a3;
      if (v10) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1005A3EEC();
      unint64_t v18 = (void *)*a3;
      if (v15) {
        goto LABEL_9;
      }
    }
LABEL_12:
    v18[(v11 >> 6) + 8] |= 1 << v11;
    uint64_t v20 = (uint64_t *)(v18[6] + 16 * v11);
    *uint64_t v20 = v8;
    v20[1] = v7;
    *(unsigned char *)(v18[7] + v11) = v41;
    uint64_t v21 = v18[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    void v18[2] = v23;
    uint64_t v19 = v3 - 1;
    if (v3 == 1) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_100550924@<X0>(long long *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v39 = a4;
  uint64_t v40 = a6;
  uint64_t v35 = a5;
  id v37 = a2;
  uint64_t v38 = a3;
  uint64_t v9 = type metadata accessor for Configuration();
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (Swift::String *)((char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = type metadata accessor for Engine(0);
  sub_1005515DC((uint64_t)a1);
  uint64_t v12 = sub_1005385A4((uint64_t)a1, (uint64_t)v11);
  if (qword_1007187C0 != -1) {
    uint64_t v12 = swift_once();
  }
  v34[1] = v34;
  int v13 = word_100762380;
  int v14 = HIBYTE(word_100762380);
  int v15 = byte_100762382;
  uint64_t v16 = qword_100762388;
  uint64_t v17 = qword_100762398;
  int v18 = byte_100762390;
  __chkstk_darwin(v12);
  id v19 = v37;
  v34[-6] = a1;
  v34[-5] = v19;
  uint64_t v30 = v39;
  uint64_t v31 = v38;
  uint64_t v32 = v35;
  uint64_t v33 = v40;
  uint64_t v20 = type metadata accessor for SearchIndexPersistence();
  if (v14) {
    int v21 = 256;
  }
  else {
    int v21 = 0;
  }
  int v22 = v21 | v13;
  if (v15) {
    int v23 = 0x10000;
  }
  else {
    int v23 = 0;
  }
  unint64_t v24 = static Engine.makeEngineAndPersistence<A>(configuration:windowOfInterest:environment:makePersistence:)(v11, 0, 1, v22 | v23, v16, v18, v17, (uint64_t (*)(void, uint64_t (*)(uint64_t, char), uint64_t))sub_1005516AC, (uint64_t)&v34[-8], v20, (uint64_t)&off_1006FE5F0);
  uint64_t v26 = v25;
  uint64_t result = sub_1005517BC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Configuration);
  long long v41 = *a1;
  long long v28 = v41;
  uint64_t v29 = HIBYTE(*((void *)&v41 + 1)) & 0xFLL;
  if ((*((void *)&v41 + 1) & 0x2000000000000000) == 0) {
    uint64_t v29 = v41 & 0xFFFFFFFFFFFFLL;
  }
  if (v29)
  {
    swift_retain();
    swift_retain();
    sub_100057B18((uint64_t)&v41);
    Engine.start()();

    swift_release();
    swift_release();
    swift_release();
    sub_1005390B4((uint64_t)a1);
    swift_release();
    uint64_t result = swift_release();
    *(void *)a7 = v24;
    *(void *)(a7 + 8) = v26;
    *(_OWORD *)(a7 + 16) = v28;
    *(_DWORD *)(a7 + 32) = 0;
    *(unsigned char *)(a7 + 36) = 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_100550BA4@<D0>(long long *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  long long v28 = *a1;
  long long v6 = v28;
  uint64_t v7 = HIBYTE(*((void *)&v28 + 1)) & 0xFLL;
  if ((*((void *)&v28 + 1) & 0x2000000000000000) == 0) {
    uint64_t v7 = v28 & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    uint64_t v3 = a2;
    uint64_t v4 = a1;
    uint64_t v8 = qword_1007187A8;
    swift_bridgeObjectRetain();
    if (v8 == -1) {
      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_5:
  uint64_t v9 = sub_1005E0ED0();
  sub_1003461B0(v9, (uint64_t)qword_100718BD8);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_1005E0EB0();
  os_log_type_t v11 = sub_1005E25C0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446210;
    swift_bridgeObjectRetain();
    sub_10051B67C(8);
    sub_10002A77C((uint64_t)&v28);
    uint64_t v13 = sub_1005E1D00();
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    sub_1005904BC(v13, v15, (uint64_t *)&v26);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10002A77C((uint64_t)&v28);
    sub_10002A77C((uint64_t)&v28);
    os_log_type_t v16 = v11;
    uint64_t v17 = v6;
    _os_log_impl((void *)&_mh_execute_header, v10, v16, "Creating new instance for account: %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10002A77C((uint64_t)&v28);
    sub_10002A77C((uint64_t)&v28);

    uint64_t v17 = v6;
  }
  id v19 = (void *)v3[3];
  uint64_t v18 = v3[4];
  uint64_t v20 = v3[5];
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  int v22 = (void *)swift_allocObject();
  v22[2] = v21;
  v22[3] = v17;
  v22[4] = *((void *)&v6 + 1);
  id v23 = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100550924(v4, v23, v18, v20, (uint64_t)sub_1005516A0, (uint64_t)v22, (uint64_t)&v26);
  swift_release();
  swift_release();
  double result = *(double *)&v26;
  long long v25 = *(_OWORD *)v27;
  *(_OWORD *)a3 = v26;
  *(_OWORD *)(a3 + 16) = v25;
  *(void *)(a3 + 29) = *(void *)&v27[13];
  return result;
}

uint64_t sub_100550EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v6 = 0;
  for (unint64_t i = (void *)(a1 + 56); ; i += 6)
  {
    BOOL v8 = *(i - 1) == a2 && *i == a3;
    if (v8 || (sub_1005E3290() & 1) != 0) {
      break;
    }
    if (v3 == ++v6) {
      return 0;
    }
  }
  return v6;
}

void *sub_100550F5C(void *result, char a2, void *a3)
{
  uint64_t v3 = result[2];
  if (v3)
  {
    uint64_t v6 = result;
    uint64_t v8 = result[4];
    uint64_t v7 = result[5];
    uint64_t v9 = result[6];
    uint64_t v10 = (void *)*a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_1005A0310(v8, v7);
    uint64_t v13 = v10[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14))
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    char v16 = v11;
    if (v10[3] < v15)
    {
      sub_1005A1ED0(v15, a2 & 1);
      unint64_t v17 = sub_1005A0310(v8, v7);
      if ((v16 & 1) != (v18 & 1))
      {
LABEL_28:
        double result = (void *)sub_1005E3380();
        __break(1u);
        return result;
      }
      unint64_t v12 = v17;
      id v19 = (void *)*a3;
      if ((v16 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_9:
      swift_bridgeObjectRelease();
      uint64_t v20 = v19[7];
      swift_bridgeObjectRelease();
      *(void *)(v20 + 8 * v12) = v9;
      uint64_t v21 = v3 - 1;
      if (v3 == 1) {
        return (void *)swift_bridgeObjectRelease();
      }
LABEL_16:
      for (unint64_t i = v6 + 9; ; i += 3)
      {
        uint64_t v29 = *(i - 2);
        uint64_t v28 = *(i - 1);
        uint64_t v30 = *i;
        uint64_t v31 = (void *)*a3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v33 = sub_1005A0310(v29, v28);
        uint64_t v34 = v31[2];
        BOOL v35 = (v32 & 1) == 0;
        uint64_t v36 = v34 + v35;
        if (__OFADD__(v34, v35)) {
          break;
        }
        char v37 = v32;
        if (v31[3] < v36)
        {
          sub_1005A1ED0(v36, 1);
          unint64_t v38 = sub_1005A0310(v29, v28);
          if ((v37 & 1) != (v39 & 1)) {
            goto LABEL_28;
          }
          unint64_t v33 = v38;
        }
        uint64_t v40 = (void *)*a3;
        if (v37)
        {
          swift_bridgeObjectRelease();
          uint64_t v27 = v40[7];
          swift_bridgeObjectRelease();
          *(void *)(v27 + 8 * v33) = v30;
        }
        else
        {
          v40[(v33 >> 6) + 8] |= 1 << v33;
          long long v41 = (uint64_t *)(v40[6] + 16 * v33);
          *long long v41 = v29;
          v41[1] = v28;
          *(void *)(v40[7] + 8 * v33) = v30;
          uint64_t v42 = v40[2];
          BOOL v24 = __OFADD__(v42, 1);
          uint64_t v43 = v42 + 1;
          if (v24) {
            goto LABEL_27;
          }
          long long v40[2] = v43;
        }
        if (!--v21) {
          return (void *)swift_bridgeObjectRelease();
        }
      }
      goto LABEL_26;
    }
    if (a2)
    {
      id v19 = (void *)*a3;
      if (v11) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1005A4098();
      id v19 = (void *)*a3;
      if (v16) {
        goto LABEL_9;
      }
    }
LABEL_12:
    v19[(v12 >> 6) + 8] |= 1 << v12;
    int v22 = (uint64_t *)(v19[6] + 16 * v12);
    *int v22 = v8;
    v22[1] = v7;
    *(void *)(v19[7] + 8 * v12) = v9;
    uint64_t v23 = v19[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v19[2] = v25;
    uint64_t v21 = v3 - 1;
    if (v3 == 1) {
      return (void *)swift_bridgeObjectRelease();
    }
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_10055120C(uint64_t a1)
{
  unint64_t v2 = (uint64_t (*)(_OWORD *))v1[2];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  long long v6 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v6;
  v8[2] = *(_OWORD *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 48);
  return sub_10054B6F8((uint64_t)v8, v2, v3, v4, v5) & 1;
}

uint64_t sub_100551254()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100551294()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_1005512C4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005512D4(uint64_t a1)
{
  return sub_1005BADD0(a1, *(void *)(v1 + 16));
}

double sub_1005512DC@<D0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100546918(a1, v2, a2);
}

double sub_1005512F8@<D0>(uint64_t a1@<X8>)
{
  (*(void (**)(long long *__return_ptr))(v1 + 16))(&v5);
  double result = *(double *)&v5;
  long long v4 = *(_OWORD *)v6;
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 29) = *(void *)&v6[13];
  return result;
}

uint64_t sub_100551344()
{
  return sub_1005484B0(v0);
}

uint64_t sub_10055134C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100551384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(uint64_t (**)(void *))(v3 + 16);
  v6[0] = a1;
  v6[1] = a2;
  void v6[2] = a3;
  return v4(v6);
}

uint64_t sub_1005513C4()
{
  return sub_100547798();
}

uint64_t sub_1005513CC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005513DC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005513EC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005513FC(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10055140C(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10055141C(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100718D10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10055147C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10054EBD0(a1, *(void *)(v2 + 16), *(void *)(v2 + 32), *(void (**)(uint64_t *__return_ptr, void *))(v2 + 40), *(void *)(v2 + 56), a2);
}

uint64_t sub_1005514A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005514CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005514F8(_OWORD *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  long long v3 = a1[1];
  v6[0] = *a1;
  v6[1] = v3;
  long long v4 = a1[3];
  void v6[2] = a1[2];
  void v6[3] = v4;
  return sub_100551538((uint64_t *)v6, *(void *)(v2 + 16), *(void *)(v2 + 24)) & 1;
}

uint64_t sub_100551538(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *a1;
  unint64_t v7 = a1[1];
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = result & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    if (result == a2 && v7 == a3) {
      return 1;
    }
    else {
      return sub_1005E3290() & 1;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t *sub_1005515A8(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1005515DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100551628()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100551660()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005516A0(uint64_t a1, unsigned __int8 a2)
{
  return sub_1005475FC(a1, a2, v2[2], v2[3], v2[4]);
}

void *sub_1005516AC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_100547688(a1, a2, a3, *(long long **)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56));
}

uint64_t sub_1005516DC()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_10013B5E0(*(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_100551728()
{
  return sub_1005442BC(*(void *)(v0 + 24), *(uint8_t **)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
}

uint64_t sub_100551758(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s6LoggerVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005517BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10055181C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s6LoggerVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100551880(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10055140C(v2, v3);
  return a1;
}

uint64_t sub_1005518FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1005513FC(v2, v3);
  return a1;
}

uint64_t sub_100551978()
{
  return sub_1005434A4(*(void *)(v0 + 16));
}

uint64_t sub_100551980(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(v1 + 16))(*a1, a1[1], a1[2]);
}

uint64_t sub_1005519B4(uint64_t a1, uint64_t a2)
{
  return sub_1005415B0(a1, a2);
}

uint64_t sub_1005519BC()
{
  return sub_1005419D8();
}

double sub_1005519C4@<D0>(uint64_t a1@<X8>)
{
  return sub_100541C8C(a1);
}

uint64_t sub_100551A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 48);
}

uint64_t sub_100551A2C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  return sub_1005513FC(v2, v3);
}

uint64_t sub_100551A80(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 72);
  uint64_t v10 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10055140C(v6, v7);
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = v10;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  return a1;
}

uint64_t sub_100551B2C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 80);
  sub_10055140C(v4, v5);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = v8;
  sub_1005513FC(v9, v10);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  return a1;
}

__n128 sub_100551C14(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 76) = *(_OWORD *)(a2 + 76);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t sub_100551C38(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 80);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(void *)(a1 + 80) = v4;
  sub_1005513FC(v5, v6);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  return a1;
}

uint64_t sub_100551CC0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 92)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100551D08(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 92) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 92) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t _s5StateVMa_0()
{
  return sub_1000DAF2C();
}

uint64_t sub_100551D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1005E33F0();
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    Swift::Int v6 = sub_1005E3470();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      char v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1005E3290() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          char v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1005E3290() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_100551EC0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  if (!*(void *)(a5 + 16)) {
    return 0;
  }
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  Swift::UInt v10 = a4 | ((unint64_t)a4 << 32);
  sub_1005E3410(v10);
  Swift::Int v11 = sub_1005E3470();
  uint64_t v12 = -1 << *(unsigned char *)(a5 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v14 = a5 + 56;
  if (((*(void *)(a5 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
    return 0;
  }
  uint64_t v15 = ~v12;
  uint64_t v16 = *(void *)(a5 + 48);
  while (1)
  {
    uint64_t v17 = v16 + 32 * v13;
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = *(unsigned int *)(v17 + 24);
    BOOL v20 = *(void *)v17 == a1 && *(void *)(v17 + 8) == a2;
    if (v20 || (sub_1005E3290()) && (v19 | (v19 << 32)) == v10)
    {
      uint64_t v21 = *(void *)(v18 + 16);
      if (v21 == *(void *)(a3 + 16))
      {
        if (!v21 || v18 == a3) {
          return 1;
        }
        if (*(unsigned __int8 *)(v18 + 32) == *(unsigned __int8 *)(a3 + 32))
        {
          if (v21 == 1) {
            return 1;
          }
          if (*(unsigned __int8 *)(v18 + 33) == *(unsigned __int8 *)(a3 + 33))
          {
            if (v21 == 2) {
              return 1;
            }
            if (*(unsigned __int8 *)(v18 + 34) == *(unsigned __int8 *)(a3 + 34))
            {
              if (v21 == 3) {
                return 1;
              }
              if (*(unsigned __int8 *)(v18 + 35) == *(unsigned __int8 *)(a3 + 35)) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_4:
    unint64_t v13 = (v13 + 1) & v15;
    if (((*(void *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
      return 0;
    }
  }
  int v22 = (unsigned __int8 *)(v18 + 36);
  uint64_t v23 = v21 - 4;
  BOOL v24 = (unsigned __int8 *)(a3 + 36);
  while (v23)
  {
    int v26 = *v22++;
    int v25 = v26;
    int v27 = *v24++;
    --v23;
    if (v25 != v27) {
      goto LABEL_4;
    }
  }
  return 1;
}

uint64_t sub_1005520A4(void *a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    goto LABEL_9;
  }
  sub_1005E33F0();
  id v4 = a1;
  sub_1005E2850();

  Swift::Int v5 = sub_1005E3470();
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = v5 & ~v6;
  uint64_t v8 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    goto LABEL_9;
  }
  sub_100553F18();
  id v9 = *(id *)(*(void *)(a2 + 48) + 8 * v7);
  char v10 = sub_1005E2840();

  if (v10)
  {
    char v11 = 1;
    return v11 & 1;
  }
  uint64_t v12 = ~v6;
  unint64_t v13 = (v7 + 1) & v12;
  if (((*(void *)(v8 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_9:
    char v11 = 0;
    return v11 & 1;
  }
  do
  {
    id v14 = *(id *)(*(void *)(a2 + 48) + 8 * v13);
    char v11 = sub_1005E2840();

    if (v11) {
      break;
    }
    unint64_t v13 = (v13 + 1) & v12;
  }
  while (((*(void *)(v8 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  return v11 & 1;
}

BOOL sub_1005521E8(uint64_t a1, uint64_t a2)
{
  if ((sub_1005E1BC0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = _s5StateV12InstanceInfoVMa();
  return *(void *)(a1 + *(int *)(v4 + 36)) == *(void *)(a2 + *(int *)(v4 + 36));
}

BOOL sub_100552254(char *a1, char *a2)
{
  return static Header.Priority.__derived_struct_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_100552260()
{
  return DisplayPart.PlainTextLineKind.hashValue.getter(*v0);
}

void sub_100552268(uint64_t a1)
{
  DisplayPart.PlainTextLineKind.hash(into:)(a1, *v1);
}

Swift::Int sub_100552270()
{
  sub_1005E33F0();
  DisplayPart.PlainTextLineKind.hash(into:)((uint64_t)v2, *v0);
  return sub_1005E3470();
}

BOOL sub_1005522B0(uint64_t a1, uint64_t a2)
{
  return sub_1005521E8(a1, a2);
}

uint64_t _s5StateV12InstanceInfoVMa()
{
  return sub_1000DAF2C();
}

uint64_t sub_1005522D8(uint64_t a1, uint64_t (*a2)(void *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v49 = a2;
  uint64_t v50 = a3;
  uint64_t v8 = sub_10000566C(&qword_100718D10);
  uint64_t result = __chkstk_darwin(v8 - 8);
  uint64_t v47 = (uint64_t)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)(a5 + 32);
  if (v12[2])
  {
    long long v41 = &v52;
    *(void *)&long long v10 = 136446466;
    long long v40 = v10;
    v39[1] = (char *)&type metadata for Any + 8;
    uint64_t v48 = a1;
    uint64_t v42 = a4;
    while (1)
    {
      uint64_t v13 = v12[6];
      uint64_t v14 = v12[7];
      uint64_t v15 = v12[9];
      if (v15 <= a1)
      {
        uint64_t v16 = a1 - v15;
        if (__OFSUB__(a1, v15)) {
          goto LABEL_49;
        }
      }
      else
      {
        if (__OFSUB__(v15, a1)) {
          goto LABEL_47;
        }
        uint64_t v16 = a1 - v15;
        if (__OFSUB__(0, v15 - a1)) {
          goto LABEL_48;
        }
      }
      if ((double)v16 / 1000000000.0 < 0.0) {
        double v17 = 0.0;
      }
      else {
        double v17 = (double)v16 / 1000000000.0;
      }
      uint64_t v18 = *(void *)(a5 + 24);
      uint64_t v19 = *(void *)(v18 + 16);
      if (v19)
      {
        uint64_t v20 = 0;
        unint64_t v21 = 0;
        while (1)
        {
          uint64_t result = *(void *)(v18 + v20 + 32);
          unint64_t v22 = *(void *)(v18 + v20 + 40);
          uint64_t v23 = HIBYTE(v22) & 0xF;
          if ((v22 & 0x2000000000000000) == 0) {
            uint64_t v23 = result & 0xFFFFFFFFFFFFLL;
          }
          if (!v23)
          {
            __break(1u);
            goto LABEL_45;
          }
          BOOL v24 = result == v13 && v22 == v14;
          if (v24 || (sub_1005E3290() & 1) != 0) {
            break;
          }
          ++v21;
          v20 += 64;
          if (v19 == v21) {
            goto LABEL_36;
          }
        }
        swift_bridgeObjectRetain();
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_100572190(v18);
          uint64_t v18 = result;
        }
        if (v21 >= *(void *)(v18 + 16)) {
          goto LABEL_50;
        }
        *(double *)(v18 + v20 + 88) = v17 + *(double *)(v18 + v20 + 88);
        *(void *)(a5 + 24) = v18;
        double v25 = *(double *)(v18 + v20 + 88);
        if ((~*(void *)&v25 & 0x7FF0000000000000) == 0) {
          goto LABEL_51;
        }
        if (v25 <= -9.22337204e18) {
          goto LABEL_52;
        }
        if (v25 >= 9.22337204e18) {
          goto LABEL_53;
        }
        uint64_t v26 = v47;
        sub_100553E48(a4, v47);
        uint64_t v27 = sub_1005E0ED0();
        uint64_t v28 = *(void *)(v27 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
        {
          swift_bridgeObjectRelease();
          sub_10055141C(v26);
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v29 = sub_1005E0EB0();
          os_log_type_t v30 = sub_1005E25C0();
          int v31 = v30;
          if (os_log_type_enabled(v29, v30))
          {
            uint64_t v44 = (uint64_t)v25;
            uint64_t v32 = swift_slowAlloc();
            int v46 = v31;
            uint64_t v33 = v32;
            uint64_t v45 = swift_slowAlloc();
            uint64_t v52 = v45;
            *(_DWORD *)uint64_t v33 = v40;
            uint64_t v43 = v33 + 4;
            swift_bridgeObjectRetain();
            sub_10051B67C(8);
            swift_bridgeObjectRelease();
            uint64_t v34 = sub_1005E1D00();
            unint64_t v36 = v35;
            swift_bridgeObjectRelease();
            uint64_t v51 = sub_1005904BC(v34, v36, &v52);
            sub_1005E2960();
            swift_bridgeObjectRelease_n();
            a4 = v42;
            swift_bridgeObjectRelease();
            *(_WORD *)(v33 + 12) = 2048;
            uint64_t v51 = v44;
            sub_1005E2960();
            _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v46, "Tearing down instance for account %{public}s (run time: %ld)", (uint8_t *)v33, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v47, v27);
        }
      }
LABEL_36:
      uint64_t v12 = *(void **)(a5 + 32);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result)
      {
        if (!v12[2]) {
          goto LABEL_46;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_10057217C((uint64_t)v12);
        uint64_t v12 = (void *)result;
        if (!*(void *)(result + 16)) {
          goto LABEL_46;
        }
      }
      uint64_t result = v49(v12 + 4);
      uint64_t v37 = v12[2];
      if (!v37) {
        break;
      }
      uint64_t v38 = v37 - 1;
      memmove(v12 + 4, v12 + 10, 48 * (v37 - 1));
      void v12[2] = v38;
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t result = swift_release();
      *(void *)(a5 + 32) = v12;
      a1 = v48;
      if (!v12[2]) {
        return result;
      }
    }
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
  }
  return result;
}

uint64_t sub_1005527D4(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v57 = a4;
  os_log_t v61 = a2;
  uint64_t v62 = a3;
  uint64_t v9 = sub_10000566C(&qword_100718D10);
  uint64_t result = __chkstk_darwin(v9 - 8);
  uint64_t v58 = (uint64_t)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = a5;
  uint64_t v15 = *(void *)(a5 + 32);
  uint64_t v14 = (uint64_t *)(a5 + 32);
  uint64_t v13 = v15;
  unint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    unint64_t v56 = &v65;
    unint64_t v59 = (long long *)&v67;
    *(void *)&long long v11 = 136446466;
    long long v55 = v11;
    uint64_t v54 = (char *)&type metadata for Any + 8;
    uint64_t v60 = a1;
    while (2)
    {
      unint64_t v17 = 0;
      for (uint64_t i = 0; (*(unsigned char *)(v13 + i + 68) & 1) == 0 && *(_DWORD *)(v13 + i + 64) == a6; i += 48)
      {
        unint64_t v19 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        ++v17;
        if (v19 == v16) {
          return result;
        }
      }
      if (v17 >= v16) {
        goto LABEL_50;
      }
      uint64_t v20 = (void *)(v13 + i);
      uint64_t v22 = v20[6];
      uint64_t v21 = v20[7];
      uint64_t v23 = v20[9];
      if (v23 <= a1)
      {
        uint64_t v24 = a1 - v23;
        if (__OFSUB__(a1, v23))
        {
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
          return result;
        }
      }
      else
      {
        if (__OFSUB__(v23, a1))
        {
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        uint64_t v24 = a1 - v23;
        if (__OFSUB__(0, v23 - a1)) {
          goto LABEL_53;
        }
      }
      if ((double)v24 / 1000000000.0 < 0.0) {
        double v25 = 0.0;
      }
      else {
        double v25 = (double)v24 / 1000000000.0;
      }
      uint64_t v26 = *(void *)(v63 + 24);
      uint64_t v27 = *(void *)(v26 + 16);
      if (v27)
      {
        uint64_t v28 = 0;
        unint64_t v29 = 0;
        while (1)
        {
          uint64_t result = *(void *)(v26 + v28 + 32);
          unint64_t v30 = *(void *)(v26 + v28 + 40);
          uint64_t v31 = HIBYTE(v30) & 0xF;
          if ((v30 & 0x2000000000000000) == 0) {
            uint64_t v31 = result & 0xFFFFFFFFFFFFLL;
          }
          if (!v31) {
            break;
          }
          BOOL v32 = result == v22 && v30 == v21;
          if (v32 || (sub_1005E3290() & 1) != 0)
          {
            swift_bridgeObjectRetain();
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_100572190(v26);
              uint64_t v26 = result;
            }
            if (v29 >= *(void *)(v26 + 16)) {
              goto LABEL_55;
            }
            *(double *)(v26 + v28 + 88) = v25 + *(double *)(v26 + v28 + 88);
            *(void *)(v63 + 24) = v26;
            double v33 = *(double *)(v26 + v28 + 88);
            if ((~*(void *)&v33 & 0x7FF0000000000000) == 0) {
              goto LABEL_56;
            }
            if (v33 > -9.22337204e18)
            {
              if (v33 >= 9.22337204e18) {
                goto LABEL_58;
              }
              uint64_t v34 = v58;
              sub_100553E48(v57, v58);
              uint64_t v35 = sub_1005E0ED0();
              uint64_t v36 = *(void *)(v35 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35) == 1)
              {
                swift_bridgeObjectRelease();
                sub_10055141C(v34);
              }
              else
              {
                swift_bridgeObjectRetain();
                uint64_t v37 = sub_1005E0EB0();
                os_log_type_t v38 = sub_1005E25C0();
                int v39 = v38;
                if (os_log_type_enabled(v37, v38))
                {
                  uint64_t v51 = (uint64_t)v33;
                  uint64_t v40 = swift_slowAlloc();
                  uint64_t v53 = v35;
                  uint64_t v41 = v40;
                  uint64_t v52 = swift_slowAlloc();
                  uint64_t v65 = v52;
                  *(_DWORD *)uint64_t v41 = v55;
                  v48[1] = v41 + 4;
                  swift_bridgeObjectRetain();
                  sub_10051B67C(8);
                  os_log_t v50 = v37;
                  v48[0] = v42;
                  int v49 = v39;
                  swift_bridgeObjectRelease();
                  uint64_t v43 = sub_1005E1D00();
                  unint64_t v45 = v44;
                  swift_bridgeObjectRelease();
                  uint64_t v64 = sub_1005904BC(v43, v45, &v65);
                  sub_1005E2960();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v41 + 12) = 2048;
                  uint64_t v64 = v51;
                  sub_1005E2960();
                  os_log_t v46 = v50;
                  _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v49, "Tearing down instance for account %{public}s (run time: %ld)", (uint8_t *)v41, 0x16u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  uint64_t v35 = v53;
                  swift_slowDealloc();
                }
                else
                {
                  swift_bridgeObjectRelease_n();
                }
                (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v58, v35);
              }
              goto LABEL_43;
            }
            goto LABEL_57;
          }
          ++v29;
          v28 += 64;
          if (v27 == v29) {
            goto LABEL_43;
          }
        }
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
LABEL_43:
      uint64_t v47 = *v14;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_10057217C(v47);
        uint64_t v47 = result;
      }
      if ((int64_t)v17 >= *(void *)(v47 + 16)) {
        goto LABEL_51;
      }
      v61(v47 + i + 32);
      *uint64_t v14 = v47;
      sub_10058AFAC(v17, (uint64_t)&v66);
      swift_release();
      swift_release();
      long long v68 = *v59;
      uint64_t result = sub_10002A77C((uint64_t)&v68);
      uint64_t v13 = *v14;
      unint64_t v16 = *(void *)(*v14 + 16);
      a1 = v60;
      if (v16) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_100552D78(uint64_t a1, char a2, uint64_t a3, char a4)
{
  char v4 = a2 & (a4 ^ 1);
  if (a1 != a3) {
    char v4 = 0;
  }
  if (a1 >= a3) {
    char v5 = v4;
  }
  else {
    char v5 = 1;
  }
  return v5 & 1;
}

uint64_t sub_100552D98(uint64_t a1, uint64_t a2)
{
  return sub_100552D78(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

void sub_100552DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v42 = a2;
  uint64_t v5 = sub_10000566C(&qword_100718D10);
  __chkstk_darwin(v5 - 8);
  uint64_t v43 = (uint64_t)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(char **)(a3 + 32);
  if (*((void *)v8 + 2))
  {
    uint64_t v37 = &v46;
    *(void *)&long long v6 = 136446466;
    long long v36 = v6;
    v35[1] = (char *)&type metadata for Any + 8;
    uint64_t v44 = a1;
    while (1)
    {
      uint64_t v10 = *((void *)v8 + 6);
      uint64_t v9 = *((void *)v8 + 7);
      uint64_t v11 = *((void *)v8 + 9);
      if (v11 <= a1)
      {
        uint64_t v12 = a1 - v11;
        if (__OFSUB__(a1, v11)) {
          goto LABEL_49;
        }
      }
      else
      {
        if (__OFSUB__(v11, a1)) {
          goto LABEL_47;
        }
        uint64_t v12 = a1 - v11;
        if (__OFSUB__(0, v11 - a1)) {
          goto LABEL_48;
        }
      }
      if ((double)v12 / 1000000000.0 < 0.0) {
        double v13 = 0.0;
      }
      else {
        double v13 = (double)v12 / 1000000000.0;
      }
      uint64_t v14 = *(char **)(a3 + 24);
      uint64_t v15 = *((void *)v14 + 2);
      if (v15)
      {
        uint64_t v16 = 0;
        unint64_t v17 = 0;
        while (1)
        {
          uint64_t v18 = *(void *)&v14[v16 + 32];
          unint64_t v19 = *(void *)&v14[v16 + 40];
          uint64_t v20 = HIBYTE(v19) & 0xF;
          if ((v19 & 0x2000000000000000) == 0) {
            uint64_t v20 = v18 & 0xFFFFFFFFFFFFLL;
          }
          if (!v20)
          {
            __break(1u);
            goto LABEL_45;
          }
          BOOL v21 = v18 == v10 && v19 == v9;
          if (v21 || (sub_1005E3290() & 1) != 0) {
            break;
          }
          ++v17;
          v16 += 64;
          if (v15 == v17) {
            goto LABEL_36;
          }
        }
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = sub_100572190((uint64_t)v14);
        }
        if (v17 >= *((void *)v14 + 2)) {
          goto LABEL_50;
        }
        *(double *)&v14[v16 + 88] = v13 + *(double *)&v14[v16 + 88];
        *(void *)(a3 + 24) = v14;
        double v22 = *(double *)&v14[v16 + 88];
        if ((~*(void *)&v22 & 0x7FF0000000000000) == 0) {
          goto LABEL_51;
        }
        if (v22 <= -9.22337204e18) {
          goto LABEL_52;
        }
        if (v22 >= 9.22337204e18) {
          goto LABEL_53;
        }
        uint64_t v23 = v43;
        sub_100553E48(v42, v43);
        uint64_t v24 = sub_1005E0ED0();
        uint64_t v25 = *(void *)(v24 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
        {
          swift_bridgeObjectRelease();
          sub_10055141C(v23);
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v26 = sub_1005E0EB0();
          os_log_type_t v27 = sub_1005E25C0();
          int v28 = v27;
          if (os_log_type_enabled(v26, v27))
          {
            uint64_t v40 = (uint64_t)v22;
            uint64_t v29 = swift_slowAlloc();
            uint64_t v41 = swift_slowAlloc();
            uint64_t v46 = v41;
            *(_DWORD *)uint64_t v29 = v36;
            uint64_t v38 = v29 + 4;
            swift_bridgeObjectRetain();
            sub_10051B67C(8);
            int v39 = v28;
            swift_bridgeObjectRelease();
            uint64_t v30 = sub_1005E1D00();
            unint64_t v32 = v31;
            swift_bridgeObjectRelease();
            uint64_t v45 = sub_1005904BC(v30, v32, &v46);
            sub_1005E2960();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v29 + 12) = 2048;
            uint64_t v45 = v40;
            sub_1005E2960();
            _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v39, "Tearing down instance for account %{public}s (run time: %ld)", (uint8_t *)v29, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v43, v24);
        }
      }
LABEL_36:
      uint64_t v8 = *(char **)(a3 + 32);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        if (!*((void *)v8 + 2)) {
          goto LABEL_46;
        }
      }
      else
      {
        uint64_t v8 = sub_10057217C((uint64_t)v8);
        if (!*((void *)v8 + 2)) {
          goto LABEL_46;
        }
      }
      sub_10054F12C();
      uint64_t v33 = *((void *)v8 + 2);
      if (!v33) {
        break;
      }
      uint64_t v34 = v33 - 1;
      memmove(v8 + 32, v8 + 80, 48 * (v33 - 1));
      *((void *)v8 + 2) = v34;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      *(void *)(a3 + 32) = v8;
      a1 = v44;
      if (!*((void *)v8 + 2)) {
        return;
      }
    }
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
  }
}

uint64_t sub_1005532A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10000566C(&qword_100718D10);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005E0ED0();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a3, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  sub_100552DC0(a1, (uint64_t)v10, a4);
  sub_10055141C((uint64_t)v10);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a4 + 24) = &_swiftEmptyArrayStorage;
  uint64_t v14 = *(void *)(a4 + 56);
  if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t v15 = *(void *)(a4 + 48);
    uint64_t v16 = *(void (**)(uint64_t))(a4 + 72);
    swift_retain();
    unint64_t v17 = sub_1005E0EB0();
    os_log_type_t v18 = sub_1005E25C0();
    if (os_log_type_enabled(v17, v18))
    {
      unint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = a2;
      uint64_t v20 = v19;
      *(_DWORD *)unint64_t v19 = 67109120;
      LODWORD(v26) = v14;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Stop and clear everything: completing sync #%u for all accounts.", v20, 8u);
      a2 = v25;
      swift_slowDealloc();
    }

    long long v21 = *(_OWORD *)(a4 + 48);
    long long v28 = *(_OWORD *)(a4 + 32);
    long long v29 = v21;
    v30[0] = *(_OWORD *)(a4 + 64);
    *(_OWORD *)((char *)v30 + 12) = *(_OWORD *)(a4 + 76);
    long long v22 = *(_OWORD *)(a4 + 16);
    long long v26 = *(_OWORD *)a4;
    long long v27 = v22;
    sub_100553EB0((uint64_t)&v29, (uint64_t)v31);
    swift_retain();
    uint64_t v23 = sub_100549EBC();
    v16(v23);
    sub_1005513FC(v15, v14);
    sub_1005513FC(v15, v14);
    uint64_t result = (uint64_t)sub_1005515A8(v31);
  }
  *(void *)(a4 + 48) = a2;
  *(void *)(a4 + 56) = 0x8000000000000000;
  *(void *)(a4 + 72) = 0;
  *(void *)(a4 + 80) = 0;
  *(void *)(a4 + 64) = 0;
  return result;
}

void sub_100553530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a4 + 48) <= a2)
  {
    sub_1005532A0(a1, a2, a3, a4);
  }
  else
  {
    swift_retain();
    osint log = sub_1005E0EB0();
    os_log_type_t v4 = sub_1005E25C0();
    if (os_log_type_enabled(oslog, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 134218240;
      sub_1005E2960();
      *(_WORD *)(v5 + 12) = 2048;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "Current ID {%ld} higher than {%ld}: Ignoring request to stop download.", (uint8_t *)v5, 0x16u);
      swift_slowDealloc();
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1005536A8(uint64_t a1, void (*a2)(unint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v59 = a4;
  uint64_t v62 = a3;
  os_log_t v61 = a2;
  uint64_t v63 = a1;
  uint64_t v8 = sub_10000566C(&qword_100718D10);
  __chkstk_darwin(v8 - 8);
  uint64_t v65 = a5;
  uint64_t result = *(void *)(a5 + 32);
  uint64_t v67 = (uint64_t *)(a5 + 32);
  uint64_t v69 = *(void *)(result + 16);
  if (!v69) {
    return result;
  }
  uint64_t v71 = a6 + 56;
  uint64_t v58 = v73;
  uint64_t v60 = (long long *)&v75;
  *(void *)&long long v10 = 136446466;
  long long v57 = v10;
  v56[1] = (char *)&type metadata for Any + 8;
  uint64_t v64 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  while (2)
  {
    uint64_t v12 = result + 32;
    uint64_t v66 = result;
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v13 = 0;
    uint64_t v68 = v12;
    while (1)
    {
      unint64_t v14 = v12 + 48 * v13;
      int v15 = *(unsigned __int8 *)(v14 + 36);
      if (*(void *)(a6 + 16))
      {
        LODWORD(v70) = *(unsigned __int8 *)(v14 + 36);
        uint64_t v16 = *(void *)(v14 + 16);
        uint64_t v17 = *(void *)(v14 + 24);
        sub_1005E33F0();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1005E1DB0();
        Swift::Int v18 = sub_1005E3470();
        uint64_t v19 = a6;
        uint64_t v20 = -1 << *(unsigned char *)(a6 + 32);
        unint64_t v21 = v18 & ~v20;
        if ((*(void *)(v71 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
        {
          uint64_t v22 = *(void *)(v19 + 48);
          uint64_t v23 = (void *)(v22 + 16 * v21);
          BOOL v24 = *v23 == v16 && v23[1] == v17;
          if (v24 || (sub_1005E3290() & 1) != 0)
          {
LABEL_24:
            swift_release();
            swift_release();
            uint64_t v29 = v66;
            swift_bridgeObjectRelease();
            a6 = v19;
            uint64_t v12 = v68;
            goto LABEL_25;
          }
          uint64_t v25 = ~v20;
          while (1)
          {
            unint64_t v21 = (v21 + 1) & v25;
            if (((*(void *)(v71 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
              break;
            }
            long long v26 = (void *)(v22 + 16 * v21);
            BOOL v27 = *v26 == v16 && v26[1] == v17;
            if (v27 || (sub_1005E3290() & 1) != 0) {
              goto LABEL_24;
            }
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t result = swift_release();
        a6 = v19;
        uint64_t v12 = v68;
        int v15 = v70;
      }
      if (v15) {
        break;
      }
      if (__OFADD__(v13++, 1))
      {
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      if (v13 == v69) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v29 = v66;
LABEL_25:
    uint64_t result = swift_bridgeObjectRelease();
    if (v13 >= *(void *)(v29 + 16))
    {
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    uint64_t v31 = *(void *)(v14 + 16);
    uint64_t v30 = *(void *)(v14 + 24);
    uint64_t v32 = *(void *)(v12 + 48 * v13 + 40);
    if (v32 <= v63)
    {
      uint64_t v33 = v63 - v32;
      if (__OFSUB__(v63, v32))
      {
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
    }
    else
    {
      if (__OFSUB__(v32, v63))
      {
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
      uint64_t v33 = v63 - v32;
      if (__OFSUB__(0, v32 - v63)) {
        goto LABEL_70;
      }
    }
    uint64_t v34 = (uint64_t)v64;
    if ((double)v33 / 1000000000.0 < 0.0) {
      double v35 = 0.0;
    }
    else {
      double v35 = (double)v33 / 1000000000.0;
    }
    uint64_t v36 = *(void *)(v65 + 24);
    uint64_t v37 = *(void *)(v36 + 16);
    if (v37)
    {
      uint64_t v38 = 0;
      unint64_t v39 = 0;
      while (1)
      {
        uint64_t result = *(void *)(v36 + v38 + 32);
        unint64_t v40 = *(void *)(v36 + v38 + 40);
        uint64_t v41 = HIBYTE(v40) & 0xF;
        if ((v40 & 0x2000000000000000) == 0) {
          uint64_t v41 = result & 0xFFFFFFFFFFFFLL;
        }
        if (!v41)
        {
          __break(1u);
          goto LABEL_66;
        }
        BOOL v42 = result == v31 && v40 == v30;
        if (v42 || (sub_1005E3290() & 1) != 0) {
          break;
        }
        ++v39;
        v38 += 64;
        if (v37 == v39) {
          goto LABEL_60;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100572190(v36);
        uint64_t v36 = result;
      }
      if (v39 >= *(void *)(v36 + 16)) {
        goto LABEL_72;
      }
      *(double *)(v36 + v38 + 88) = v35 + *(double *)(v36 + v38 + 88);
      *(void *)(v65 + 24) = v36;
      double v43 = *(double *)(v36 + v38 + 88);
      if ((~*(void *)&v43 & 0x7FF0000000000000) == 0) {
        goto LABEL_73;
      }
      if (v43 <= -9.22337204e18)
      {
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
        return result;
      }
      if (v43 >= 9.22337204e18) {
        goto LABEL_75;
      }
      sub_100553E48(v59, v34);
      uint64_t v44 = sub_1005E0ED0();
      uint64_t v45 = *(void *)(v44 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v34, 1, v44) == 1)
      {
        swift_bridgeObjectRelease();
        sub_10055141C(v34);
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v46 = sub_1005E0EB0();
        os_log_type_t v47 = sub_1005E25C0();
        int v48 = v47;
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v69 = (uint64_t)v43;
          uint64_t v49 = swift_slowAlloc();
          uint64_t v70 = swift_slowAlloc();
          v73[0] = v70;
          *(_DWORD *)uint64_t v49 = v57;
          uint64_t v66 = v49 + 4;
          swift_bridgeObjectRetain();
          sub_10051B67C(8);
          v56[0] = v50;
          LODWORD(v68) = v48;
          swift_bridgeObjectRelease();
          uint64_t v51 = sub_1005E1D00();
          unint64_t v53 = v52;
          swift_bridgeObjectRelease();
          uint64_t v72 = sub_1005904BC(v51, v53, v73);
          sub_1005E2960();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v49 + 12) = 2048;
          uint64_t v72 = v69;
          uint64_t v34 = (uint64_t)v64;
          sub_1005E2960();
          _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v68, "Tearing down instance for account %{public}s (run time: %ld)", (uint8_t *)v49, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v34, v44);
      }
    }
LABEL_60:
    uint64_t v54 = *v67;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_10057217C(v54);
      uint64_t v54 = result;
    }
    if ((int64_t)v13 >= *(void *)(v54 + 16))
    {
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    v61(v54 + 48 * v13 + 32);
    long long v55 = v67;
    *uint64_t v67 = v54;
    sub_10058AFAC(v13, (uint64_t)&v74);
    swift_release();
    swift_release();
    long long v76 = *v60;
    sub_10002A77C((uint64_t)&v76);
    uint64_t result = *v55;
    uint64_t v69 = *(void *)(*v55 + 16);
    if (v69) {
      continue;
    }
    return result;
  }
}

uint64_t sub_100553E48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100718D10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100553EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100718D38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100553F18()
{
  unint64_t result = qword_100718DD0[0];
  if (!qword_100718DD0[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_100718DD0);
  }
  return result;
}

uint64_t sub_100553F58(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s5StateV13StartPriorityVMa()
{
  return sub_1000DAF2C();
}

uint64_t sub_100553FC4(uint64_t *a1)
{
  return sub_1005513FC(*a1, a1[1]);
}

uint64_t *sub_100553FD8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  sub_10055140C(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return a1;
}

uint64_t *sub_10055403C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  sub_10055140C(*a2, v4);
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  sub_1005513FC(v8, v9);
  return a1;
}

__n128 _s7RequestVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1005540C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = v3;
  sub_1005513FC(v4, v5);
  return a1;
}

uint64_t sub_10055410C(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  HIDWORD(v3) = *(_DWORD *)(a1 + 12);
  LODWORD(v3) = HIDWORD(v3);
  unsigned int v2 = v3 >> 31;
  if (v2 > 0x80000000) {
    int v4 = ~v2;
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_10055415C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      HIDWORD(v3) = -a2;
      LODWORD(v3) = -a2;
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(v3 >> 1) << 32;
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 16) = 0;
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1005541B4(uint64_t a1)
{
  return *(void *)(a1 + 8) >> 63;
}

uint64_t sub_1005541C0(uint64_t result)
{
  *(void *)(result + 8) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1005541D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 12) = a2 << 31;
  return result;
}

uint64_t _s5StateV5StateOMa()
{
  return sub_1000DAF2C();
}

unsigned char *_s6ResultOwCP(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

unsigned char *sub_100554200(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005542CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t _s5StateV13AccountResultOMa()
{
  return sub_1000DAF2C();
}

uint64_t sub_10055430C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1005543A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_1005544A0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1005544CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100554548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1005545C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100554640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1005546BC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFF8;
    if ((v6 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1005547D0);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  else {
    return 0;
  }
}

void sub_1005547E4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    int v12 = 0;
    int v13 = a2 - v7;
    if (a2 <= v7)
    {
LABEL_14:
      switch(v12)
      {
        case 1:
          a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 2:
          *(_WORD *)&a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 3:
          goto LABEL_34;
        case 4:
          *(_DWORD *)&a1[v8] = 0;
          goto LABEL_26;
        default:
LABEL_26:
          if (a2)
          {
LABEL_27:
            uint64_t v16 = *(void (**)(void))(v6 + 56);
            v16();
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v9 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
    int v13 = a2 - v7;
    if (a2 <= v7) {
      goto LABEL_14;
    }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v14 = v13;
  }
  else {
    int v14 = 1;
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    unsigned int v15 = ~v7 + a2;
    bzero(a1, v8);
    *(_DWORD *)a1 = v15;
  }
  switch(v12)
  {
    case 1:
      a1[v8] = v14;
      break;
    case 2:
      *(_WORD *)&a1[v8] = v14;
      break;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x100554990);
    case 4:
      *(_DWORD *)&a1[v8] = v14;
      break;
    default:
      return;
  }
}

uint64_t sub_1005549B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100554A28(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

__n128 sub_100554AC8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_100554ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t _s5StateV11AccountInfoVMa()
{
  return sub_1000DAF2C();
}

uint64_t sub_100554B64()
{
  return swift_getWitnessTable();
}

uint64_t sub_100554B80()
{
  return swift_getWitnessTable();
}

uint64_t _s7RequestVwxx()
{
  return swift_release();
}

uint64_t _s7RequestVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  swift_retain();
  return a1;
}

uint64_t _s7RequestVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s7RequestVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *_s7RequestVMa()
{
  return &_s7RequestVN;
}

unsigned char *_s6ResultOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100554D68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ResultOMa()
{
  return &_s6ResultON;
}

unint64_t sub_100554DA4()
{
  unint64_t result = qword_100719058;
  if (!qword_100719058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719058);
  }
  return result;
}

void sub_100554DF8(void *a1)
{
  sub_10000566C(&qword_100719060);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005F6670;
  id v4 = [a1 objectID];
  *(void *)(v3 + 56) = sub_1003C8730(0, &qword_100719068);
  *(void *)(v3 + 32) = v4;
  NSString v5 = sub_1005E1BD0();
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [self predicateWithFormat:v5 argumentArray:isa];

  [v1 appendPredicate:v7];
}

void sub_100554F30(void *a1)
{
  id v3 = [v1 predicate];
  if (v3)
  {
    id v4 = v3;
    sub_10000566C(&qword_100719088);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_10062A020;
    *(void *)(v5 + 32) = v4;
    *(void *)(v5 + 40) = a1;
    sub_1005E20E0();
    sub_1003C8730(0, &qword_100719080);
    id v6 = v4;
    id v7 = a1;
    Class isa = sub_1005E20B0().super.isa;
    swift_bridgeObjectRelease();
    id v9 = [self andPredicateWithSubpredicates:isa];

    [v1 setPredicate:v9];
  }
  else
  {
    [v1 setPredicate:a1];
  }
}

void sub_1005550FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  sub_10000566C(&qword_100719070);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6670;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  sub_10000566C(&qword_100719078);
  uint64_t v10 = swift_initStackObject();
  *(_OWORD *)(v10 + 16) = xmmword_1005F6670;
  *(void *)(v10 + 32) = a3;
  *(_DWORD *)(v10 + 40) = a4;
  Swift::Int v11 = sub_100556850(v10);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_arrayDestroy();
  *(void *)(inited + 48) = v11;
  unint64_t v12 = sub_10058A4E4(inited);
  uint64_t v18 = 0;
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_1005A9034(v13);
  sub_1005558E4((uint64_t *)&v17, sub_1005ABD68, sub_10054C398);
  swift_bridgeObjectRelease();
  uint64_t v14 = (uint64_t)v17;
  swift_bridgeObjectRetain();
  sub_100556710(v14, v12, &v18);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1003C8730(0, &qword_100719080);
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v16 = [self orPredicateWithSubpredicates:isa];

  [v4 appendPredicate:v16];
  swift_bridgeObjectRelease();
}

void sub_1005552EC(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  if (!*(void *)(a2 + 16)) {
    goto LABEL_24;
  }
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1005A0310(v9, v8);
  if ((v11 & 1) == 0
    || (uint64_t v12 = *(void *)(*(void *)(a2 + 56) + 8 * v10),
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRelease(),
        !*(void *)(v12 + 16)))
  {
    swift_bridgeObjectRelease();
LABEL_24:
    id v43 = 0;
LABEL_25:
    *a4 = v43;
    return;
  }
  uint64_t v45 = a4;
  sub_10000566C(&qword_100719060);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1005F6670;
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 32) = v9;
  *(void *)(v13 + 40) = v8;
  swift_bridgeObjectRetain();
  NSString v14 = sub_1005E1BD0();
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v46 = self;
  id v44 = [v46 predicateWithFormat:v14 argumentArray:isa];

  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_1005A911C(v16);
  swift_bridgeObjectRelease();
  v50[0] = (uint64_t)v17;
  sub_1005558E4(v50, sub_1005ABD7C, sub_100555968);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = v50[0];
    unint64_t v49 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v19 = *(void *)(v50[0] + 16);
    if (v19)
    {
      swift_retain();
      uint64_t v20 = 32;
      do
      {
        uint64_t v27 = *a3 + 1;
        if (__OFADD__(*a3, 1)) {
          __break(1u);
        }
        uint64_t v28 = *(void *)(v18 + v20);
        *a3 = v27;
        if (v27 <= 19)
        {
          uint64_t v29 = swift_allocObject();
          *(_OWORD *)(v29 + 16) = xmmword_1005F6670;
          uint64_t v30 = sub_10000566C(&qword_100719090);
          v50[3] = v30;
          v50[4] = sub_100556A50();
          v50[0] = v28;
          uint64_t v31 = sub_10003BCDC(v50, v30);
          uint64_t v32 = *v31;
          size_t v33 = *(void *)(*v31 + 16);
          if (v33)
          {
            if (v33 <= 0xE)
            {
              memset(__dst, 0, sizeof(__dst));
              unsigned __int8 v48 = v33;
              memcpy(__dst, (const void *)(v32 + 32), v33);
              uint64_t v21 = *(void *)__dst;
              unint64_t v22 = *(unsigned int *)&__dst[8] | ((unint64_t)__dst[12] << 32) | ((unint64_t)__dst[13] << 40) | ((unint64_t)v48 << 48);
              swift_bridgeObjectRetain_n();
            }
            else
            {
              sub_1005E0590();
              swift_allocObject();
              swift_bridgeObjectRetain_n();
              uint64_t v34 = sub_1005E0540();
              uint64_t v35 = v34;
              if (v33 >= 0x7FFFFFFF)
              {
                sub_1005E0840();
                uint64_t v21 = swift_allocObject();
                *(void *)(v21 + 16) = 0;
                *(void *)(v21 + 24) = v33;
                unint64_t v22 = v35 | 0x8000000000000000;
              }
              else
              {
                uint64_t v21 = v33 << 32;
                unint64_t v22 = v34 | 0x4000000000000000;
              }
            }
          }
          else
          {
            swift_bridgeObjectRetain_n();
            uint64_t v21 = 0;
            unint64_t v22 = 0xC000000000000000;
          }
          _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v50);
          Class v23 = sub_1005E0890().super.isa;
          sub_1000094D4(v21, v22);
          *(void *)(v29 + 56) = sub_1003C8730(0, &qword_1007190A0);
          *(void *)(v29 + 32) = v23;
          NSString v24 = sub_1005E1BD0();
          Class v25 = sub_1005E20B0().super.isa;
          swift_bridgeObjectRelease();
          id v26 = [v46 predicateWithFormat:v24 argumentArray:v25];
          swift_bridgeObjectRelease();

          sub_1005E20A0();
          if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1005E2110();
          }
          sub_1005E2170();
          sub_1005E20E0();
        }
        v20 += 16;
        --v19;
      }
      while (v19);
      swift_release();
    }
    swift_release();
    sub_1003C8730(0, &qword_100719080);
    Class v36 = sub_1005E20B0().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v37 = self;
    id v38 = [v37 orPredicateWithSubpredicates:v36];

    sub_10000566C(&qword_100719088);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_10062A020;
    *(void *)(v39 + 32) = v44;
    *(void *)(v39 + 40) = v38;
    v50[0] = v39;
    sub_1005E20E0();
    id v40 = v44;
    id v41 = v38;
    Class v42 = sub_1005E20B0().super.isa;
    swift_bridgeObjectRelease();
    id v43 = [v37 andPredicateWithSubpredicates:v42];

    a4 = v45;
    goto LABEL_25;
  }
  swift_release();
  __break(1u);
}

uint64_t sub_1005558A4(uint64_t *a1)
{
  return sub_1005558E4(a1, sub_1005ABD68, sub_10054C398);
}

uint64_t sub_1005558E4(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

Swift::Int sub_100555968(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  Swift::Int result = sub_1005E3210(v4);
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_136;
    }
    if (v4) {
      return sub_1005560C8(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_144;
  }
  Swift::Int v111 = result;
  uint64_t v108 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)_swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    uint64_t v110 = _swiftEmptyArrayStorage;
    if (v4 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
LABEL_102:
      uint64_t v99 = v9;
      if (v12 >= 2)
      {
        uint64_t v100 = *v108;
        do
        {
          unint64_t v101 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_131;
          }
          if (!v100) {
            goto LABEL_143;
          }
          uint64_t v102 = v99;
          uint64_t v103 = *(void *)&v99[16 * v101 + 32];
          uint64_t v104 = *(void *)&v99[16 * v12 + 24];
          sub_1005561C8((uint64_t *)(v100 + 16 * v103), (uint64_t *)(v100 + 16 * *(void *)&v99[16 * v12 + 16]), v100 + 16 * v104, __dst);
          if (v2) {
            break;
          }
          if (v104 < v103) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v102 = sub_1005AAE8C((uint64_t)v102);
          }
          if (v101 >= *((void *)v102 + 2)) {
            goto LABEL_133;
          }
          Swift::Int v105 = &v102[16 * v101 + 32];
          *(void *)Swift::Int v105 = v103;
          *((void *)v105 + 1) = v104;
          unint64_t v106 = *((void *)v102 + 2);
          if (v12 > v106) {
            goto LABEL_134;
          }
          memmove(&v102[16 * v12 + 16], &v102[16 * v12 + 32], 16 * (v106 - v12));
          uint64_t v99 = v102;
          *((void *)v102 + 2) = v106 - 1;
          unint64_t v12 = v106 - 1;
        }
        while (v106 > 2);
      }
LABEL_99:
      swift_bridgeObjectRelease();
      v110[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v117 = v1;
  }
  else
  {
    uint64_t v117 = v1;
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_1005E2150();
    *(void *)(v8 + 16) = v7;
    uint64_t v110 = (void *)v8;
    __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v109 = *a1 + 24;
  uint64_t v9 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v112 = v4;
  while (1)
  {
    Swift::Int v13 = v10++;
    Swift::Int v115 = v13;
    if (v10 < v4)
    {
      uint64_t v14 = v11 + 16 * v10;
      uint64_t v15 = *(void *)v14;
      unsigned int v16 = *(_DWORD *)(v14 + 8);
      uint64_t v17 = v11 + 16 * v13;
      uint64_t v18 = *(void *)v17;
      unsigned int v19 = *(_DWORD *)(v17 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      BOOL v20 = static MailboxName.stableOrder(_:_:)(v15, v16, v18, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Swift::Int v10 = v13 + 2;
      if (v13 + 2 < v4)
      {
        uint64_t v21 = v109 + 16 * v13;
        while (1)
        {
          uint64_t v22 = *(void *)(v21 + 8);
          unsigned int v23 = *(_DWORD *)(v21 + 16);
          uint64_t v24 = *(void *)(v21 - 8);
          unsigned int v25 = *(_DWORD *)v21;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          BOOL v26 = static MailboxName.stableOrder(_:_:)(v22, v23, v24, v25);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 ^ v26)) {
            break;
          }
          ++v10;
          v21 += 16;
          if (v4 == v10)
          {
            Swift::Int v10 = v4;
            break;
          }
        }
        Swift::Int v13 = v115;
      }
      if (v20)
      {
        if (v10 < v13) {
          goto LABEL_137;
        }
        if (v13 < v10)
        {
          uint64_t v27 = 16 * v10 - 16;
          uint64_t v28 = 16 * v13;
          Swift::Int v29 = v10;
          Swift::Int v30 = v13;
          do
          {
            if (v30 != --v29)
            {
              if (!v11) {
                goto LABEL_142;
              }
              uint64_t v32 = (_OWORD *)(v11 + v28);
              size_t v33 = (_OWORD *)(v11 + v27);
              uint64_t v34 = *(void *)(v11 + v28);
              int v35 = *(_DWORD *)(v11 + v28 + 8);
              if (v28 != v27 || v32 >= v33 + 1) {
                *uint64_t v32 = *v33;
              }
              uint64_t v31 = v11 + v27;
              *(void *)uint64_t v31 = v34;
              *(_DWORD *)(v31 + 8) = v35;
            }
            ++v30;
            v27 -= 16;
            v28 += 16;
          }
          while (v30 < v29);
        }
      }
    }
    if (v10 >= v4) {
      goto LABEL_51;
    }
    if (__OFSUB__(v10, v13)) {
      goto LABEL_135;
    }
    if (v10 - v13 >= v111) {
      goto LABEL_51;
    }
    Swift::Int v36 = v13 + v111;
    if (__OFADD__(v13, v111)) {
      goto LABEL_138;
    }
    if (v36 >= v4) {
      Swift::Int v36 = v4;
    }
    if (v36 < v13) {
      break;
    }
    if (v10 != v36)
    {
      unsigned int v107 = v9;
      uint64_t v37 = v11 + 16 * v10;
      Swift::Int v113 = v36;
      do
      {
        uint64_t v38 = v37;
        Swift::Int v39 = v13;
        do
        {
          uint64_t v40 = *(void *)v38;
          unsigned int v41 = *(_DWORD *)(v38 + 8);
          uint64_t v42 = *(void *)(v38 - 16);
          unsigned int v43 = *(_DWORD *)(v38 - 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          LOBYTE(v43) = static MailboxName.stableOrder(_:_:)(v40, v41, v42, v43);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v43 & 1) == 0) {
            break;
          }
          if (!v11) {
            goto LABEL_140;
          }
          uint64_t v44 = *(void *)v38;
          int v45 = *(_DWORD *)(v38 + 8);
          *(_OWORD *)uint64_t v38 = *(_OWORD *)(v38 - 16);
          *(_DWORD *)(v38 - 8) = v45;
          *(void *)(v38 - 16) = v44;
          v38 -= 16;
          ++v39;
        }
        while (v10 != v39);
        ++v10;
        v37 += 16;
        Swift::Int v13 = v115;
      }
      while (v10 != v113);
      Swift::Int v10 = v113;
      uint64_t v9 = v107;
    }
LABEL_51:
    if (v10 < v13) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1005AACC4(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v47 = *((void *)v9 + 2);
    unint64_t v46 = *((void *)v9 + 3);
    unint64_t v12 = v47 + 1;
    if (v47 >= v46 >> 1) {
      uint64_t v9 = sub_1005AACC4((char *)(v46 > 1), v47 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v12;
    uint64_t v116 = v9 + 32;
    unsigned __int8 v48 = &v9[16 * v47 + 32];
    *(void *)unsigned __int8 v48 = v13;
    *((void *)v48 + 1) = v10;
    if (v47)
    {
      unint64_t v49 = v9 + 32;
      while (1)
      {
        unint64_t v50 = v12 - 1;
        if (v12 >= 4)
        {
          long long v55 = &v49[16 * v12];
          uint64_t v56 = *((void *)v55 - 8);
          uint64_t v57 = *((void *)v55 - 7);
          BOOL v61 = __OFSUB__(v57, v56);
          uint64_t v58 = v57 - v56;
          if (v61) {
            goto LABEL_119;
          }
          uint64_t v60 = *((void *)v55 - 6);
          uint64_t v59 = *((void *)v55 - 5);
          BOOL v61 = __OFSUB__(v59, v60);
          uint64_t v53 = v59 - v60;
          char v54 = v61;
          if (v61) {
            goto LABEL_120;
          }
          unint64_t v62 = v12 - 2;
          uint64_t v63 = &v49[16 * v12 - 32];
          uint64_t v65 = *(void *)v63;
          uint64_t v64 = *((void *)v63 + 1);
          BOOL v61 = __OFSUB__(v64, v65);
          uint64_t v66 = v64 - v65;
          if (v61) {
            goto LABEL_122;
          }
          BOOL v61 = __OFADD__(v53, v66);
          uint64_t v67 = v53 + v66;
          if (v61) {
            goto LABEL_125;
          }
          if (v67 >= v58)
          {
            uint64_t v85 = &v49[16 * v50];
            uint64_t v87 = *(void *)v85;
            uint64_t v86 = *((void *)v85 + 1);
            BOOL v61 = __OFSUB__(v86, v87);
            uint64_t v88 = v86 - v87;
            if (v61) {
              goto LABEL_129;
            }
            BOOL v78 = v53 < v88;
            goto LABEL_89;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v79 = *((void *)v9 + 4);
            uint64_t v80 = *((void *)v9 + 5);
            BOOL v61 = __OFSUB__(v80, v79);
            uint64_t v72 = v80 - v79;
            char v73 = v61;
            goto LABEL_83;
          }
          uint64_t v52 = *((void *)v9 + 4);
          uint64_t v51 = *((void *)v9 + 5);
          BOOL v61 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          char v54 = v61;
        }
        if (v54) {
          goto LABEL_121;
        }
        unint64_t v62 = v12 - 2;
        uint64_t v68 = &v49[16 * v12 - 32];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v71 = __OFSUB__(v69, v70);
        uint64_t v72 = v69 - v70;
        char v73 = v71;
        if (v71) {
          goto LABEL_124;
        }
        uint64_t v74 = &v49[16 * v50];
        uint64_t v76 = *(void *)v74;
        uint64_t v75 = *((void *)v74 + 1);
        BOOL v61 = __OFSUB__(v75, v76);
        uint64_t v77 = v75 - v76;
        if (v61) {
          goto LABEL_127;
        }
        if (__OFADD__(v72, v77)) {
          goto LABEL_128;
        }
        if (v72 + v77 >= v53)
        {
          BOOL v78 = v53 < v77;
LABEL_89:
          if (v78) {
            unint64_t v50 = v62;
          }
          goto LABEL_91;
        }
LABEL_83:
        if (v73) {
          goto LABEL_123;
        }
        uint64_t v81 = &v49[16 * v50];
        uint64_t v83 = *(void *)v81;
        uint64_t v82 = *((void *)v81 + 1);
        BOOL v61 = __OFSUB__(v82, v83);
        uint64_t v84 = v82 - v83;
        if (v61) {
          goto LABEL_126;
        }
        if (v84 < v72) {
          goto LABEL_15;
        }
LABEL_91:
        unint64_t v89 = v50 - 1;
        if (v50 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        uint64_t v90 = v11;
        if (!v11) {
          goto LABEL_141;
        }
        uint64_t v91 = v9;
        os_log_t v92 = &v49[16 * v89];
        unint64_t v93 = v49;
        uint64_t v94 = *(void *)v92;
        uint64_t v95 = &v93[16 * v50];
        uint64_t v96 = *((void *)v95 + 1);
        uint64_t v97 = v90;
        sub_1005561C8((uint64_t *)(v90 + 16 * *(void *)v92), (uint64_t *)(v90 + 16 * *(void *)v95), v90 + 16 * v96, __dst);
        if (v117) {
          goto LABEL_99;
        }
        if (v96 < v94) {
          goto LABEL_116;
        }
        if (v50 > *((void *)v91 + 2)) {
          goto LABEL_117;
        }
        *(void *)os_log_t v92 = v94;
        unint64_t v49 = v116;
        *(void *)&v116[16 * v89 + 8] = v96;
        unint64_t v98 = *((void *)v91 + 2);
        if (v50 >= v98) {
          goto LABEL_118;
        }
        uint64_t v9 = v91;
        unint64_t v12 = v98 - 1;
        memmove(v95, v95 + 16, 16 * (v98 - 1 - v50));
        *((void *)v91 + 2) = v98 - 1;
        uint64_t v11 = v97;
        if (v98 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v4 = v112;
    if (v10 >= v112)
    {
      uint64_t v2 = v117;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  Swift::Int result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_1005560C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v16 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v7 = v6;
    uint64_t v8 = v16;
    while (1)
    {
      uint64_t v9 = *(void *)v7;
      unsigned int v10 = *(_DWORD *)(v7 + 8);
      uint64_t v11 = *(void *)(v7 - 16);
      unsigned int v12 = *(_DWORD *)(v7 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      LOBYTE(v12) = static MailboxName.stableOrder(_:_:)(v9, v10, v11, v12);
      swift_bridgeObjectRelease();
      Swift::Int result = swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
LABEL_4:
        ++v4;
        v6 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      uint64_t v13 = *(void *)v7;
      int v14 = *(_DWORD *)(v7 + 8);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)(v7 - 16);
      *(_DWORD *)(v7 - 8) = v14;
      *(void *)(v7 - 16) = v13;
      v7 -= 16;
      if (v4 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1005561C8(uint64_t *a1, uint64_t *__src, unint64_t a3, char *__dst)
{
  uint64_t v6 = __src;
  uint64_t v7 = (char *)__src - (char *)a1;
  uint64_t v8 = (char *)__src - (char *)a1 + 15;
  if ((char *)__src - (char *)a1 >= 0) {
    uint64_t v8 = (char *)__src - (char *)a1;
  }
  uint64_t v9 = v8 >> 4;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = a3 - (void)__src + 15;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v11 = a3 - (void)__src;
  }
  uint64_t v12 = v11 >> 4;
  Swift::Int v36 = a1;
  int v35 = __dst;
  if (v9 >= v12)
  {
    if (v10 >= -15)
    {
      uint64_t v22 = 16 * v12;
      if (__dst != (char *)__src || &__src[(unint64_t)v22 / 8] <= (uint64_t *)__dst) {
        memmove(__dst, __src, 16 * v12);
      }
      uint64_t v32 = __dst;
      unsigned int v23 = &__dst[v22];
      uint64_t v34 = &__dst[v22];
      Swift::Int v36 = v6;
      if (a1 < v6 && (unint64_t)(v10 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        uint64_t v24 = (uint64_t *)(a3 - 16);
        unsigned int v25 = v6;
        do
        {
          BOOL v26 = v24 + 2;
          uint64_t v27 = *((void *)v23 - 2);
          unsigned int v28 = *((_DWORD *)v23 - 2);
          uint64_t v29 = *(v25 - 2);
          v25 -= 2;
          unsigned int v30 = *((_DWORD *)v25 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          LOBYTE(v30) = static MailboxName.stableOrder(_:_:)(v27, v28, v29, v30);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v30)
          {
            if (v26 != v6 || v24 >= v6) {
              *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
            }
            Swift::Int v36 = v25;
          }
          else
          {
            uint64_t v34 = v23 - 16;
            if (v26 < (uint64_t *)v23 || v24 >= (uint64_t *)v23 || v26 != (uint64_t *)v23) {
              *(_OWORD *)uint64_t v24 = *((_OWORD *)v23 - 1);
            }
            unsigned int v25 = v6;
            v23 -= 16;
          }
          if (v25 <= a1) {
            break;
          }
          v24 -= 2;
          uint64_t v6 = v25;
        }
        while (v23 > v32);
      }
      goto LABEL_43;
    }
  }
  else if (v7 >= -15)
  {
    size_t v13 = 16 * v9;
    if (__dst != (char *)a1 || &a1[v13 / 8] <= (uint64_t *)__dst) {
      memmove(__dst, a1, v13);
    }
    int v14 = &__dst[v13];
    uint64_t v34 = &__dst[v13];
    if ((unint64_t)v6 < a3 && (unint64_t)(v7 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      uint64_t v15 = (uint64_t *)__dst;
      uint64_t v16 = a1;
      do
      {
        uint64_t v17 = *v6;
        unsigned int v18 = *((_DWORD *)v6 + 2);
        uint64_t v19 = *v15;
        unsigned int v20 = *((_DWORD *)v15 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        LOBYTE(v20) = static MailboxName.stableOrder(_:_:)(v17, v18, v19, v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v20)
        {
          uint64_t v21 = v6 + 2;
          if (v16 < v6 || v16 >= v21 || v16 != v6) {
            *(_OWORD *)uint64_t v16 = *(_OWORD *)v6;
          }
        }
        else
        {
          if (v16 != v15) {
            *(_OWORD *)uint64_t v16 = *(_OWORD *)v15;
          }
          v15 += 2;
          int v35 = v15;
          uint64_t v21 = v6;
        }
        v16 += 2;
        if (v15 >= (uint64_t *)v14) {
          break;
        }
        uint64_t v6 = v21;
      }
      while ((unint64_t)v21 < a3);
      Swift::Int v36 = v16;
    }
LABEL_43:
    sub_1000A692C((void **)&v36, (const void **)&v35, &v34);
    return 1;
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

void *sub_1005564E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000566C((uint64_t *)&unk_100719110);
    uint64_t v3 = sub_1005E2C30();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_1005E1C00();
      sub_1005E33F0();
      id v7 = v6;
      sub_1005E1DB0();
      Swift::Int v8 = sub_1005E3470();
      uint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_1005E1C00();
        uint64_t v17 = v16;
        if (v15 == sub_1005E1C00() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_1005E3290();
        swift_bridgeObjectRelease();
        uint64_t result = (void *)swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_1005E1C00();
          uint64_t v24 = v23;
          if (v22 == sub_1005E1C00() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_1005E3290();
          swift_bridgeObjectRelease();
          uint64_t result = (void *)swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return (void *)v3;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void *sub_100556710(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result = _swiftEmptyArrayStorage;
  unint64_t v13 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v10 = *v9;
      v12[0] = *(v9 - 1);
      v12[1] = v10;
      swift_bridgeObjectRetain();
      sub_1005552EC(v12, a2, a3, &v11);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (void *)swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      if (v11)
      {
        sub_1005E20A0();
        if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1005E2110();
        }
        sub_1005E2170();
        sub_1005E20E0();
      }
      v9 += 2;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return (void *)v13;
  }
  return result;
}

Swift::Int sub_100556850(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000566C(&qword_1007190A8);
    uint64_t v3 = sub_1005E2C30();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      id v7 = (uint64_t *)(v6 + 16 * v4);
      uint64_t v8 = *v7;
      uint64_t v9 = *((unsigned int *)v7 + 2);
      sub_1005E33F0();
      sub_1005E3410(v9 | (v9 << 32));
      Swift::Int result = sub_1005E3470();
      uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v12 = result & ~v11;
      unint64_t v13 = v12 >> 6;
      uint64_t v14 = *(void *)(v5 + 8 * (v12 >> 6));
      uint64_t v15 = 1 << v12;
      uint64_t v16 = *(void *)(v3 + 48);
      if (((1 << v12) & v14) != 0)
      {
        uint64_t v17 = ~v11;
        while (1)
        {
          uint64_t v18 = (uint64_t *)(v16 + 16 * v12);
          if ((*((unsigned int *)v18 + 2) | ((unint64_t)*((unsigned int *)v18 + 2) << 32)) == (v9 | (v9 << 32)))
          {
            uint64_t v19 = *v18;
            uint64_t v20 = *(void *)(v19 + 16);
            if (v20 == *(void *)(v8 + 16))
            {
              if (v20) {
                BOOL v21 = v19 == v8;
              }
              else {
                BOOL v21 = 1;
              }
              if (v21) {
                goto LABEL_3;
              }
              if (*(unsigned __int8 *)(v19 + 32) == *(unsigned __int8 *)(v8 + 32))
              {
                if (v20 == 1) {
                  goto LABEL_3;
                }
                if (*(unsigned __int8 *)(v19 + 33) == *(unsigned __int8 *)(v8 + 33))
                {
                  if (v20 == 2) {
                    goto LABEL_3;
                  }
                  if (*(unsigned __int8 *)(v19 + 34) == *(unsigned __int8 *)(v8 + 34))
                  {
                    if (v20 == 3) {
                      goto LABEL_3;
                    }
                    if (*(unsigned __int8 *)(v19 + 35) == *(unsigned __int8 *)(v8 + 35)) {
                      break;
                    }
                  }
                }
              }
            }
          }
LABEL_6:
          unint64_t v12 = (v12 + 1) & v17;
          unint64_t v13 = v12 >> 6;
          uint64_t v14 = *(void *)(v5 + 8 * (v12 >> 6));
          uint64_t v15 = 1 << v12;
          if ((v14 & (1 << v12)) == 0) {
            goto LABEL_24;
          }
        }
        uint64_t v22 = (unsigned __int8 *)(v19 + 36);
        uint64_t v23 = v20 - 4;
        uint64_t v24 = (unsigned __int8 *)(v8 + 36);
        while (v23)
        {
          int v26 = *v22++;
          int v25 = v26;
          int v27 = *v24++;
          --v23;
          if (v25 != v27) {
            goto LABEL_6;
          }
        }
      }
      else
      {
LABEL_24:
        *(void *)(v5 + 8 * v13) = v15 | v14;
        uint64_t v28 = v16 + 16 * v12;
        *(void *)uint64_t v28 = v8;
        *(_DWORD *)(v28 + 8) = v9;
        uint64_t v29 = *(void *)(v3 + 16);
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        if (v30)
        {
          __break(1u);
          return result;
        }
        *(void *)(v3 + 16) = v31;
        swift_bridgeObjectRetain();
      }
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

unint64_t sub_100556A50()
{
  unint64_t result = qword_100719098;
  if (!qword_100719098)
  {
    sub_10000744C(&qword_100719090);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719098);
  }
  return result;
}

uint64_t sub_100556AAC(unint64_t a1)
{
  unint64_t v1 = HIBYTE(a1);
  unint64_t v2 = a1 & (unint64_t)&_mh_execute_header;
  if (a1)
  {
    if ((a1 & 0x100) != 0)
    {
      if ((a1 & 0x10000) != 0)
      {
        if ((a1 & 0x1000000) != 0)
        {
          if (v2)
          {
            uint64_t v3 = 31;
            if ((a1 & 0x10000000000) != 0) {
              goto LABEL_48;
            }
          }
          else
          {
            uint64_t v3 = 15;
            if ((a1 & 0x10000000000) != 0) {
              goto LABEL_48;
            }
          }
        }
        else if (v2)
        {
          uint64_t v3 = 23;
          if ((a1 & 0x10000000000) != 0) {
            goto LABEL_48;
          }
        }
        else
        {
          uint64_t v3 = 7;
          if ((a1 & 0x10000000000) != 0) {
            goto LABEL_48;
          }
        }
      }
      else if ((a1 & 0x1000000) != 0)
      {
        if (v2)
        {
          uint64_t v3 = 27;
          if ((a1 & 0x10000000000) != 0) {
            goto LABEL_48;
          }
        }
        else
        {
          uint64_t v3 = 11;
          if ((a1 & 0x10000000000) != 0) {
            goto LABEL_48;
          }
        }
      }
      else if (v2)
      {
        uint64_t v3 = 19;
        if ((a1 & 0x10000000000) != 0) {
          goto LABEL_48;
        }
      }
      else
      {
        uint64_t v3 = 3;
        if ((a1 & 0x10000000000) != 0) {
          goto LABEL_48;
        }
      }
      goto LABEL_49;
    }
    if ((a1 & 0x10000) != 0)
    {
      BOOL v4 = v2 == 0;
      if ((a1 & 0x1000000) != 0)
      {
        uint64_t v3 = 29;
        uint64_t v5 = 13;
      }
      else
      {
        uint64_t v3 = 21;
        uint64_t v5 = 5;
      }
    }
    else
    {
      if ((a1 & 0x1000000) == 0)
      {
        if (v2)
        {
          uint64_t v3 = 17;
          if ((a1 & 0x10000000000) != 0) {
            goto LABEL_48;
          }
        }
        else
        {
          uint64_t v3 = 1;
          if ((a1 & 0x10000000000) != 0) {
            goto LABEL_48;
          }
        }
        goto LABEL_49;
      }
      BOOL v4 = v2 == 0;
      uint64_t v3 = 25;
      uint64_t v5 = 9;
    }
LABEL_45:
    if (v4) {
      uint64_t v3 = v5;
    }
    if ((a1 & 0x10000000000) != 0) {
      goto LABEL_48;
    }
    goto LABEL_49;
  }
  if ((a1 & 0x100) == 0)
  {
    if ((a1 & 0x10000) != 0)
    {
      BOOL v4 = v2 == 0;
      if ((a1 & 0x1000000) != 0)
      {
        uint64_t v3 = 28;
        uint64_t v5 = 12;
      }
      else
      {
        uint64_t v3 = 20;
        uint64_t v5 = 4;
      }
    }
    else
    {
      if ((a1 & 0x1000000) == 0)
      {
        uint64_t v3 = v2 >> 28;
        if ((a1 & 0x10000000000) == 0) {
          goto LABEL_49;
        }
LABEL_48:
        v3 |= 0x20uLL;
        goto LABEL_49;
      }
      BOOL v4 = v2 == 0;
      uint64_t v3 = 24;
      uint64_t v5 = 8;
    }
    goto LABEL_45;
  }
  if ((a1 & 0x10000) != 0)
  {
    if ((a1 & 0x1000000) != 0)
    {
      if (v2)
      {
        uint64_t v3 = 30;
        if ((a1 & 0x10000000000) != 0) {
          goto LABEL_48;
        }
      }
      else
      {
        uint64_t v3 = 14;
        if ((a1 & 0x10000000000) != 0) {
          goto LABEL_48;
        }
      }
    }
    else if (v2)
    {
      uint64_t v3 = 22;
      if ((a1 & 0x10000000000) != 0) {
        goto LABEL_48;
      }
    }
    else
    {
      uint64_t v3 = 6;
      if ((a1 & 0x10000000000) != 0) {
        goto LABEL_48;
      }
    }
  }
  else if ((a1 & 0x1000000) != 0)
  {
    if (v2)
    {
      uint64_t v3 = 26;
      if ((a1 & 0x10000000000) != 0) {
        goto LABEL_48;
      }
    }
    else
    {
      uint64_t v3 = 10;
      if ((a1 & 0x10000000000) != 0) {
        goto LABEL_48;
      }
    }
  }
  else if (v2)
  {
    uint64_t v3 = 18;
    if ((a1 & 0x10000000000) != 0) {
      goto LABEL_48;
    }
  }
  else
  {
    uint64_t v3 = 2;
    if ((a1 & 0x10000000000) != 0) {
      goto LABEL_48;
    }
  }
LABEL_49:
  if (BYTE6(a1))
  {
    if (BYTE6(a1) == 1)
    {
      v3 |= 0x100uLL;
      unint64_t v1 = v1;
      switch((int)v1)
      {
        case 1:
          goto LABEL_55;
        case 2:
          goto LABEL_56;
        case 3:
          goto LABEL_57;
        case 4:
          goto LABEL_58;
        case 5:
          goto LABEL_60;
        case 6:
          goto LABEL_61;
        case 7:
          goto LABEL_59;
        default:
          goto LABEL_52;
      }
    }
    v3 |= 0x200uLL;
    unint64_t v1 = v1;
    switch((int)v1)
    {
      case 1:
        goto LABEL_55;
      case 2:
        goto LABEL_56;
      case 3:
        goto LABEL_57;
      case 4:
        goto LABEL_58;
      case 5:
        goto LABEL_60;
      case 6:
        goto LABEL_61;
      case 7:
        goto LABEL_59;
      default:
        goto LABEL_52;
    }
  }
  unint64_t v1 = v1;
  switch((int)v1)
  {
    case 1:
LABEL_55:
      uint64_t result = v3 | 0x800;
      break;
    case 2:
LABEL_56:
      uint64_t result = v3 | 0x1000;
      break;
    case 3:
LABEL_57:
      uint64_t result = v3 | 0x1800;
      break;
    case 4:
LABEL_58:
      uint64_t result = v3 | 0x2000;
      break;
    case 5:
LABEL_60:
      uint64_t result = v3 | 0x2800;
      break;
    case 6:
LABEL_61:
      uint64_t result = v3 | 0x3000;
      break;
    case 7:
LABEL_59:
      uint64_t result = v3 | 0x3800;
      break;
    default:
LABEL_52:
      uint64_t result = v3 | v1;
      break;
  }
  return result;
}

unint64_t sub_100556DA8(unint64_t a1)
{
  uint64_t v1 = ((a1 >> 11) & 7) - 1;
  if (v1 >= 7) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = (v1 << 56) + 0x100000000000000;
  }
  unsigned int v3 = (a1 >> 8) & 3;
  unint64_t v4 = (unint64_t)(v3 == 1) << 48;
  uint64x2_t v5 = (uint64x2_t)vdupq_n_s64(a1);
  int8x16_t v6 = (int8x16_t)vshlq_u64(v5, (uint64x2_t)xmmword_1005F6710);
  int8x16_t v7 = vandq_s8((int8x16_t)vshlq_u64(v5, (uint64x2_t)xmmword_10062A030), (int8x16_t)xmmword_10062A040);
  int8x16_t v8 = vandq_s8(v6, (int8x16_t)xmmword_10062A050);
  BOOL v9 = v3 == 2;
  uint64_t v10 = 0x2000000000000;
  if (!v9) {
    uint64_t v10 = v4;
  }
  int8x16_t v11 = vorrq_s8(v8, v7);
  return *(void *)&vorr_s8(*(int8x8_t *)v11.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v11, v11, 8uLL)) | a1 & 1 | v10 & 0xFFFFFEFFFFFFFFFFLL | (((a1 >> 5) & 1) << 40) | v2;
}

uint64_t type metadata accessor for UInt64Identifier()
{
  return sub_1000DAF2C();
}

Swift::Int sub_100556E58()
{
  sub_1005E33F0();
  ModificationSequenceValue.hash(into:)((uint64_t)v2, *v0);
  return sub_1005E3470();
}

uint64_t sub_100556E98()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for _IndexGeneration()
{
  return &type metadata for _IndexGeneration;
}

id sub_100556EC4(uint64_t a1, uint64_t a2)
{
  id v5 = [self defaultCenter];
  NSString v6 = sub_1005E1BD0();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  v11[4] = sub_100518600;
  v11[5] = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10053A22C;
  v11[3] = &unk_1006FD568;
  int8x16_t v8 = _Block_copy(v11);
  swift_retain();
  swift_release();
  id v9 = [v5 addObserverForName:v6 object:v2 queue:0 usingBlock:v8];
  _Block_release(v8);

  return v9;
}

id sub_100557014(uint64_t *a1)
{
  uint64_t v1 = *a1;
  id v2 = objc_allocWithZone((Class)NSNumber);
  return [v2 initWithLongLong:v1];
}

uint64_t sub_10055705C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (a1) {
    uint64_t result = (uint64_t)[a1 longLongValue];
  }
  else {
    uint64_t result = 1;
  }
  *a2 = result;
  return result;
}

void sub_100557098()
{
  if (qword_1007187C8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1005E0ED0();
  sub_1003461B0(v0, (uint64_t)qword_1007623A8);
  osint log = sub_1005E0EB0();
  os_log_type_t v1 = sub_1005E2590();
  if (os_log_type_enabled(oslog, v1))
  {
    id v2 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v2 = 134217984;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "Saving current index generation %llu.", v2, 0xCu);
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_1005571D0()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100557208(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100557218()
{
  return swift_release();
}

ValueMetadata *_s11QueuedItemsVMa()
{
  return &_s11QueuedItemsVN;
}

uint64_t sub_100557230(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = _s11QueuedItemsV4ItemVMa();
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v53 = (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (uint64_t *)((char *)&v49 - v8);
  uint64_t v10 = __chkstk_darwin(v7);
  unint64_t v12 = (char *)&v49 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v51 = (uint64_t)&v49 - v14;
  __chkstk_darwin(v13);
  uint64_t v50 = (uint64_t)&v49 - v15;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v52 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v54 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v55 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  uint64_t v59 = _swiftEmptyArrayStorage;
LABEL_4:
  while (v19)
  {
    unint64_t v22 = __clz(__rbit64(v19));
    v19 &= v19 - 1;
    unint64_t v23 = v22 | (v21 << 6);
LABEL_17:
    int v27 = (void *)*a2;
    int64_t v28 = *(void *)(*a2 + 24);
    if (v28)
    {
      unint64_t v60 = v19;
      int64_t v61 = v21;
      uint64_t v29 = *(void *)(*(void *)(v55 + 48) + 8 * v23);
      uint64_t v30 = *(unsigned __int8 *)(v62 + 80);
      uint64_t v56 = ~v30;
      uint64_t v57 = v30;
      uint64_t v58 = (v30 + 40) & ~v30;
      uint64_t v31 = (char *)v27 + v58;
      uint64_t result = swift_retain();
      int64_t v32 = 0;
      while (1)
      {
        if (v32 >= v28)
        {
          __break(1u);
          goto LABEL_46;
        }
        uint64_t v33 = v27[4];
        uint64_t v34 = v32 + v33 >= v27[2] ? v27[2] : 0;
        uint64_t v35 = *(void *)(v62 + 72);
        sub_100558BEC((uint64_t)&v31[(v32 + v33 - v34) * v35], (uint64_t)v12, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
        sub_100557C34((uint64_t)v12, (uint64_t)v9);
        uint64_t v36 = *v9;
        uint64_t result = sub_100559AC8((uint64_t)v9, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
        if (v36 == v29) {
          break;
        }
        ++v32;
        int64_t v28 = v27[3];
        if (v32 == v28)
        {
          uint64_t result = swift_release();
          unint64_t v19 = v60;
          int64_t v21 = v61;
          goto LABEL_4;
        }
      }
      swift_release();
      uint64_t result = *a2;
      if (v32 >= *(void *)(*a2 + 24)) {
        goto LABEL_47;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = sub_1005754A8();
      }
      uint64_t v37 = *a2;
      if (v32 >= *(void *)(*a2 + 24)) {
        goto LABEL_48;
      }
      uint64_t v38 = *(void *)(v37 + 32);
      if (v38 + v32 >= *(void *)(v37 + 16)) {
        uint64_t v39 = *(void *)(v37 + 16);
      }
      else {
        uint64_t v39 = 0;
      }
      unint64_t v40 = v37 + v58;
      uint64_t v41 = v51;
      sub_100558BEC(v37 + v58 + (v38 - v39 + v32) * v35, v51, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
      swift_retain();
      sub_1005580DC(v32, v32 + 1, (uint64_t *)(v37 + 16), v40);
      swift_release();
      uint64_t v42 = v50;
      sub_100557C34(v41, v50);
      sub_100557C34(v42, v53);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v59 = (void *)sub_1005717B4(0, v59[2] + 1, 1, (unint64_t)v59);
      }
      unint64_t v19 = v60;
      int64_t v21 = v61;
      uint64_t v43 = v56;
      unint64_t v45 = v59[2];
      unint64_t v44 = v59[3];
      if (v45 >= v44 >> 1) {
        uint64_t v59 = (void *)sub_1005717B4(v44 > 1, v45 + 1, 1, (unint64_t)v59);
      }
      uint64_t v46 = v57;
      unint64_t v47 = v59;
      uint64_t v59[2] = v45 + 1;
      uint64_t result = sub_100557C34(v53, (uint64_t)v47 + ((v46 + 32) & v43) + v45 * v35);
    }
  }
  if (__OFADD__(v21++, 1))
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (v21 >= v54) {
    goto LABEL_44;
  }
  unint64_t v25 = *(void *)(v52 + 8 * v21);
  if (v25)
  {
LABEL_16:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v21 << 6);
    goto LABEL_17;
  }
  int64_t v26 = v21 + 1;
  if (v21 + 1 >= v54) {
    goto LABEL_44;
  }
  unint64_t v25 = *(void *)(v52 + 8 * v26);
  if (v25) {
    goto LABEL_15;
  }
  int64_t v26 = v21 + 2;
  if (v21 + 2 >= v54) {
    goto LABEL_44;
  }
  unint64_t v25 = *(void *)(v52 + 8 * v26);
  if (v25) {
    goto LABEL_15;
  }
  int64_t v26 = v21 + 3;
  if (v21 + 3 >= v54) {
    goto LABEL_44;
  }
  unint64_t v25 = *(void *)(v52 + 8 * v26);
  if (v25)
  {
LABEL_15:
    int64_t v21 = v26;
    goto LABEL_16;
  }
  int64_t v48 = v21 + 4;
  if (v21 + 4 >= v54)
  {
LABEL_44:
    swift_release();
    return (uint64_t)v59;
  }
  unint64_t v25 = *(void *)(v52 + 8 * v48);
  v21 += 4;
  if (v25) {
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v21 = v48 + 1;
    if (__OFADD__(v48, 1)) {
      break;
    }
    if (v21 >= v54) {
      goto LABEL_44;
    }
    unint64_t v25 = *(void *)(v52 + 8 * v21);
    ++v48;
    if (v25) {
      goto LABEL_16;
    }
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_10055771C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 8) = a2;
  *(unsigned char *)(result + 16) = 0;
  return result;
}

void *sub_100557728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = *(void **)a1;
  uint64_t v7 = result[3];
  if (v7)
  {
    uint64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v9 = v7 + 1;
  }
  else
  {
    uint64_t v8 = 0;
    Swift::Int v9 = 1;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *(void **)a1;
  if (*(void *)(*(void *)a1 + 16) < v9 || (isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_100574BA8(v9, 0);
    uint64_t v11 = *(void **)a1;
  }
  uint64_t v12 = *(void *)(_s11QueuedItemsV4ItemVMa() - 8);
  uint64_t result = sub_100574EC0(v11 + 2, (uint64_t)v11+ ((*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), a2);
  *(void *)a3 = v8;
  *(unsigned char *)(a3 + 8) = v7 == 0;
  return result;
}

uint64_t sub_10055781C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  int64_t v21 = a2;
  uint64_t v3 = _s11QueuedItemsV4ItemVMa();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  Swift::Int v9 = (char *)&v21 - v8;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  if (a1[2] >= v11 + v10) {
    uint64_t v12 = v11 + v10;
  }
  else {
    uint64_t v12 = a1[2];
  }
  unint64_t v22 = a1;
  uint64_t v23 = v11;
  uint64_t v24 = v12;
  swift_retain_n();
  uint64_t v13 = 0;
  uint64_t v14 = a1;
  if (v11 == v12)
  {
LABEL_5:
    char v15 = sub_100434C94();
    uint64_t v14 = v22;
    if (v15)
    {
      uint64_t v11 = v23;
      goto LABEL_7;
    }
    swift_release();
    uint64_t result = swift_release();
    uint64_t v20 = v21;
    *int64_t v21 = v10;
    v20[1] = v13;
  }
  else
  {
LABEL_7:
    while (1)
    {
      uint64_t v16 = v11 + 1;
      uint64_t v23 = v11 + 1;
      sub_100558BEC((uint64_t)v14+ ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v11, (uint64_t)v9, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
      sub_100557C34((uint64_t)v9, (uint64_t)v7);
      uint64_t result = type metadata accessor for PendingItem(0);
      uint64_t v18 = *(void *)&v7[*(int *)(result + 28)];
      BOOL v19 = __OFADD__(v13, v18);
      v13 += v18;
      if (v19) {
        break;
      }
      sub_100559AC8((uint64_t)v7, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
      ++v11;
      if (v16 == v24) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1005579F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100558BEC(a1, a2, type metadata accessor for PendingItem);
}

uint64_t sub_100557A20@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = _s11QueuedItemsV4ItemVMa();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = a1[4];
  if (a1[2] >= a1[3] + v11) {
    uint64_t v12 = a1[3] + v11;
  }
  else {
    uint64_t v12 = a1[2];
  }
  uint64_t v17 = a1;
  uint64_t v18 = v11;
  uint64_t v19 = v12;
  uint64_t v20 = &_swiftEmptySetSingleton;
  swift_retain_n();
  uint64_t v13 = a1;
  while (1)
  {
    if (v11 != v12) {
      goto LABEL_5;
    }
    if ((sub_100434C94() & 1) == 0) {
      break;
    }
    uint64_t v13 = v17;
    uint64_t v11 = v18;
LABEL_5:
    uint64_t v18 = v11 + 1;
    sub_100558BEC((uint64_t)v13+ ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v11, (uint64_t)v10, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
    sub_100557C34((uint64_t)v10, (uint64_t)v8);
    sub_1005A5160(&v16, *((void *)v8 + 1));
    sub_100559AC8((uint64_t)v8, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
    uint64_t v12 = v19;
    ++v11;
  }
  swift_release();
  uint64_t result = swift_release();
  *a2 = v20;
  return result;
}

uint64_t _s11QueuedItemsV4ItemVMa()
{
  uint64_t result = qword_100719288;
  if (!qword_100719288) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100557C34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s11QueuedItemsV4ItemVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100557C98()
{
  os_log_type_t v1 = *v0 + 12;
  os_unfair_lock_lock(v1);
  sub_100558B24((uint64_t)&v9);
  os_unfair_lock_unlock(v1);
  uint64_t v2 = v9;
  uint64_t v3 = v10;
  if (*(void *)(v9 + 16))
  {
    os_transaction_create();
    uint64_t v4 = *(void *)(v3 + 16);
    if (!v4) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(v10 + 16);
    if (!v4) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = v3 + 40;
  do
  {
    uint64_t v6 = *(void (**)(uint64_t))(v5 - 8);
    uint64_t v7 = swift_retain();
    v6(v7);
    swift_release();
    v5 += 16;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
LABEL_8:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_100557DB4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  int64_t v32 = a3;
  uint64_t v5 = _s11QueuedItemsV4ItemVMa();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v12 = sub_100557230(a2, a1);
  uint64_t v13 = *a1;
  uint64_t v14 = a1[3];
  uint64_t v15 = *(void *)(*a1 + 32);
  uint64_t v16 = *(void *)(*a1 + 16);
  uint64_t v30 = *(void *)(*a1 + 24);
  uint64_t v31 = v12;
  if (v16 >= v15 + v30) {
    uint64_t v17 = v15 + v30;
  }
  else {
    uint64_t v17 = v16;
  }
  uint64_t v33 = v13;
  uint64_t v34 = v15;
  uint64_t v35 = v17;
  swift_retain_n();
  uint64_t v29 = v14;
  swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  uint64_t v19 = v13;
  if (v15 == v17)
  {
LABEL_5:
    char v20 = sub_100434C94();
    uint64_t v19 = v33;
    if (v20)
    {
      uint64_t v15 = v34;
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    swift_release_n();
    uint64_t result = swift_release();
    unint64_t v25 = _swiftEmptyArrayStorage;
    if (!*(void *)(*a1 + 24))
    {
      int64_t v26 = (void *)a1[3];
      a1[3] = (uint64_t)_swiftEmptyArrayStorage;
      unint64_t v25 = v26;
    }
    int v27 = v32;
    uint64_t v28 = v30;
    *int64_t v32 = v31;
    v27[1] = v28;
    v27[2] = v18;
    void v27[3] = (uint64_t)v25;
  }
  else
  {
LABEL_7:
    while (1)
    {
      uint64_t v21 = v15 + 1;
      uint64_t v34 = v15 + 1;
      sub_100558BEC(v19+ ((*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v15, (uint64_t)v11, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
      sub_100557C34((uint64_t)v11, (uint64_t)v9);
      uint64_t result = type metadata accessor for PendingItem(0);
      uint64_t v23 = *(void *)&v9[*(int *)(result + 28)];
      BOOL v24 = __OFADD__(v18, v23);
      v18 += v23;
      if (v24) {
        break;
      }
      sub_100559AC8((uint64_t)v9, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
      ++v15;
      if (v21 == v35) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100557FE8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_10000566C(&qword_100719208);
    uint64_t result = sub_100007494(&qword_100719210, &qword_100719208);
    uint64_t v5 = result;
    uint64_t v6 = 0;
    uint64_t v7 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = *(void **)a1;
    uint64_t v6 = *(void *)(a1 + 8);
    uint64_t v3 = sub_10000566C(&qword_100719218);
    uint64_t v5 = sub_100007494(&qword_100719220, &qword_100719218);
    a2[1] = sub_1005579F0;
    a2[2] = 0;
    uint64_t result = swift_retain();
  }
  a2[3] = v3;
  a2[4] = v5;
  *a2 = v7;
  a2[5] = v6;
  return result;
}

unint64_t sub_1005580DC(unint64_t a1, uint64_t a2, uint64_t *a3, unint64_t a4)
{
  sub_1005581D8(a1, a2, a3, a4, (uint64_t)&v11);
  char v8 = v14 | (v13 == 0);
  if (v14 & 1 | (v13 == 0)) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v12;
  }
  long long v15 = v11;
  sub_100558B84((uint64_t)&v15, (uint64_t)v16);
  sub_100558B84((uint64_t)v16, (uint64_t)&v17);
  if (v17)
  {
    _s11QueuedItemsV4ItemVMa();
    swift_arrayDestroy();
  }
  if (!(v8 & 1 | (v9 == 0)))
  {
    _s11QueuedItemsV4ItemVMa();
    swift_arrayDestroy();
  }
  return sub_1005582B8(a1, a2, a3, a4);
}

uint64_t sub_1005581D8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = a3[2];
  uint64_t v7 = v6 + result;
  uint64_t v8 = *a3;
  if (v6 + result >= *a3) {
    uint64_t v9 = *a3;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v6 + a2;
  if (v10 >= v8) {
    uint64_t v11 = *a3;
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v12 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = v7 - v9;
    uint64_t v15 = v10 - v11;
    if (v12) {
      BOOL v16 = v14 < v15;
    }
    else {
      BOOL v16 = 1;
    }
    int v17 = v16;
    uint64_t v18 = _s11QueuedItemsV4ItemVMa();
    uint64_t v20 = *(void *)(v18 - 8);
    uint64_t result = v18 - 8;
    uint64_t v19 = v20;
    if (v17 == 1)
    {
      uint64_t v21 = 0;
      uint64_t v15 = 0;
LABEL_18:
      *(void *)a5 = a4 + *(void *)(v19 + 72) * v14;
      *(void *)(a5 + 8) = v12;
      *(void *)(a5 + 16) = v21;
      *(void *)(a5 + 24) = v15;
      *(unsigned char *)(a5 + 32) = v17;
      return result;
    }
    uint64_t v12 = v8 - v14;
    if (!__OFSUB__(v8, v14))
    {
      uint64_t v21 = a4;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1005582B8(unint64_t result, uint64_t a2, uint64_t *a3, unint64_t a4)
{
  uint64_t v4 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
LABEL_169:
    __break(1u);
LABEL_170:
    __break(1u);
    goto LABEL_171;
  }
  if (v4 < 1) {
    return result;
  }
  unint64_t v6 = result;
  uint64_t v7 = a3[1];
  uint64_t v8 = a3[2];
  unint64_t v9 = v8 + result;
  uint64_t v10 = *a3;
  if ((uint64_t)(v8 + result) >= *a3) {
    uint64_t v11 = *a3;
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v12 = v8 + a2;
  if (v8 + a2 >= v10) {
    uint64_t v13 = *a3;
  }
  else {
    uint64_t v13 = 0;
  }
  uint64_t v14 = v7 - a2;
  if (__OFSUB__(v7, a2)) {
    goto LABEL_169;
  }
  uint64_t v16 = a2 - result;
  uint64_t v17 = v9 - v11;
  uint64_t v18 = v12 - v13;
  if (v14 > (uint64_t)result)
  {
    uint64_t v14 = v8 + v4;
    if (!__OFADD__(v8, v4))
    {
      BOOL v19 = __OFSUB__(v14, v10);
      if (v14 >= v10)
      {
        v14 -= v10;
        if (v19) {
          goto LABEL_174;
        }
      }
      if (!result) {
        goto LABEL_126;
      }
      if (v18 <= 0) {
        uint64_t v20 = *a3;
      }
      else {
        uint64_t v20 = v12 - v13;
      }
      if (v17 <= 0) {
        uint64_t v21 = *a3;
      }
      else {
        uint64_t v21 = v9 - v11;
      }
      if (v8 < v21)
      {
        if (v20 >= v14)
        {
          if ((uint64_t)result <= 0) {
            goto LABEL_126;
          }
          uint64_t v40 = *(void *)(*(void *)(_s11QueuedItemsV4ItemVMa() - 8) + 72);
          uint64_t v41 = v40 * v14;
          uint64_t result = a4 + v40 * v14;
          uint64_t v42 = v40 * v8;
          unint64_t v43 = a4 + v40 * v8 + v40 * v6;
          if (v41 >= v42 && result < v43)
          {
            if (v41 != v42) {
              goto LABEL_124;
            }
            goto LABEL_126;
          }
          goto LABEL_125;
        }
        if (v18 > 0)
        {
          uint64_t v22 = v10 - v4;
          uint64_t result = _s11QueuedItemsV4ItemVMa();
          uint64_t v23 = *(void *)(*(void *)(result - 8) + 72);
          uint64_t v24 = v23 * v22;
          unint64_t v25 = a4 + v23 * v22 + v23 * v18;
          if (v24 <= 0 && v25 > a4)
          {
            if (v24) {
              uint64_t result = swift_arrayInitWithTakeBackToFront();
            }
          }
          else
          {
            uint64_t result = swift_arrayInitWithTakeFrontToBack();
          }
        }
        BOOL v19 = __OFSUB__(v6, v18);
        uint64_t v18 = v6 - v18;
        if (!v19) {
          goto LABEL_120;
        }
        __break(1u);
        goto LABEL_101;
      }
      if (v20 >= v14)
      {
        if (__OFSUB__(0, v17))
        {
LABEL_177:
          __break(1u);
          goto LABEL_178;
        }
        if (v17 > 0)
        {
          uint64_t v45 = *(void *)(*(void *)(_s11QueuedItemsV4ItemVMa() - 8) + 72);
          uint64_t v46 = v45 * (v18 - v17);
          uint64_t result = a4 + v46;
          if (v46 < 0 || v46 >= v45 * v17)
          {
            uint64_t result = swift_arrayInitWithTakeFrontToBack();
          }
          else if (v46)
          {
            uint64_t result = swift_arrayInitWithTakeBackToFront();
          }
        }
        uint64_t v18 = v6 - v17;
        if (__OFSUB__(v6, v17)) {
          goto LABEL_180;
        }
LABEL_120:
        if (v18 < 1) {
          goto LABEL_126;
        }
        uint64_t v54 = a3[2];
        uint64_t v55 = *(void *)(*(void *)(_s11QueuedItemsV4ItemVMa() - 8) + 72);
        uint64_t result = a4 + v55 * v14;
        if (v55 * v14 >= v55 * v54 && result < a4 + v55 * v54 + v55 * v18)
        {
          if (v55 * v14 != v55 * v54) {
LABEL_124:
          }
            uint64_t result = swift_arrayInitWithTakeBackToFront();
LABEL_126:
          a3[2] = v14;
          uint64_t v56 = a3[1];
          BOOL v19 = __OFSUB__(v56, v4);
          uint64_t v57 = v56 - v4;
          if (!v19) {
            goto LABEL_166;
          }
          __break(1u);
          goto LABEL_129;
        }
        goto LABEL_125;
      }
      if (v17 > 0)
      {
        uint64_t v36 = *(void *)(*(void *)(_s11QueuedItemsV4ItemVMa() - 8) + 72);
        if (v36 * v4 < 0 || v36 * v4 >= v36 * v17)
        {
LABEL_101:
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_102;
        }
        if (v36) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
LABEL_102:
      uint64_t v49 = *a3 - v4;
      uint64_t result = _s11QueuedItemsV4ItemVMa();
      uint64_t v50 = *(void *)(*(void *)(result - 8) + 72);
      if (v50 * v49 <= 0 && a4 + v50 * v49 + v50 * v4 > a4)
      {
        if (v50 * v49) {
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        uint64_t result = swift_arrayInitWithTakeFrontToBack();
      }
      uint64_t v52 = v6 - v18;
      if (__OFSUB__(v6, v18)) {
        goto LABEL_179;
      }
      if (v52 < 1) {
        goto LABEL_126;
      }
      uint64_t result = a4 + v50 * v14;
      uint64_t v53 = a3[2] * v50;
      if (v50 * v14 >= v53 && result < a4 + v53 + v50 * v52)
      {
        if (v50 * v14 != v53) {
          goto LABEL_124;
        }
        goto LABEL_126;
      }
LABEL_125:
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
      goto LABEL_126;
    }
    goto LABEL_170;
  }
  uint64_t v27 = v8 + v7;
  if (__OFADD__(v8, v7))
  {
LABEL_171:
    __break(1u);
    goto LABEL_172;
  }
  if ((v7 & 0x8000000000000000) == 0)
  {
    BOOL v28 = __OFSUB__(v27, v10);
    if (v27 < v10) {
      goto LABEL_37;
    }
    v27 -= v10;
    if (!v28) {
      goto LABEL_37;
    }
    __break(1u);
  }
  if (v27 < 0)
  {
    BOOL v19 = __OFADD__(v27, v10);
    v27 += v10;
    if (v19) {
      goto LABEL_182;
    }
  }
LABEL_37:
  BOOL v19 = __OFSUB__(v7, v4);
  uint64_t v29 = v7 - v4;
  if (v19)
  {
LABEL_172:
    __break(1u);
    goto LABEL_173;
  }
  uint64_t v30 = v29 + v8;
  if (v30 >= v10) {
    uint64_t v31 = v10;
  }
  else {
    uint64_t v31 = 0;
  }
  if (!v14) {
    goto LABEL_165;
  }
  uint64_t v32 = v30 - v31;
  if (v30 - v31 <= 0) {
    uint64_t v33 = v10;
  }
  else {
    uint64_t v33 = v30 - v31;
  }
  if (v27 <= 0) {
    uint64_t v34 = v10;
  }
  else {
    uint64_t v34 = v27;
  }
  if (v18 >= v34)
  {
    uint64_t v37 = v10 - v18;
    BOOL v38 = __OFSUB__(v10, v18);
    if (v33 >= v17)
    {
      if (v38)
      {
LABEL_178:
        __break(1u);
LABEL_179:
        __break(1u);
LABEL_180:
        __break(1u);
        goto LABEL_181;
      }
      if (v37 > 0)
      {
        uint64_t v48 = *(void *)(*(void *)(_s11QueuedItemsV4ItemVMa() - 8) + 72);
        uint64_t result = a4 + v48 * v17;
        if (v48 * v17 < v48 * v18 || result >= a4 + v48 * v18 + v48 * v37)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else if (v48 * v17 != v48 * v18)
        {
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        BOOL v19 = __OFADD__(v17, v37);
        v17 += v37;
        if (v19) {
          goto LABEL_185;
        }
        BOOL v64 = __OFSUB__(v17, *a3);
        if (v17 >= *a3)
        {
          v17 -= *a3;
          if (v64) {
            goto LABEL_189;
          }
        }
      }
      if (v27 < 1) {
        goto LABEL_165;
      }
      uint64_t v65 = *(void *)(*(void *)(_s11QueuedItemsV4ItemVMa() - 8) + 72);
      uint64_t v66 = v65 * v17;
      uint64_t result = a4 + v65 * v17;
      if (((v65 * v17) & 0x8000000000000000) == 0 && v66 < v65 * v27)
      {
        if (!v66) {
          goto LABEL_165;
        }
        goto LABEL_163;
      }
    }
    else
    {
      if (v38)
      {
LABEL_176:
        __break(1u);
        goto LABEL_177;
      }
      if (v37 > 0)
      {
        uint64_t v39 = *(void *)(*(void *)(_s11QueuedItemsV4ItemVMa() - 8) + 72);
        uint64_t result = a4 + v39 * v17;
        if (v39 * v17 < v39 * v18 || result >= a4 + v39 * v18 + v39 * v37)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else if (v39 * v17 != v39 * v18)
        {
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        BOOL v19 = __OFADD__(v17, v37);
        v17 += v37;
        if (v19) {
          goto LABEL_184;
        }
        BOOL v61 = __OFSUB__(v17, *a3);
        if (v17 >= *a3)
        {
          v17 -= *a3;
          if (v61) {
            goto LABEL_188;
          }
        }
      }
      uint64_t v62 = *(void *)(*(void *)(_s11QueuedItemsV4ItemVMa() - 8) + 72);
      uint64_t v63 = v62 * v17;
      uint64_t result = a4 + v62 * v17;
      if (v62 * v17 < 0 || v63 >= v62 * v4)
      {
        uint64_t result = swift_arrayInitWithTakeFrontToBack();
      }
      else if (v63)
      {
        uint64_t result = swift_arrayInitWithTakeBackToFront();
      }
      if (v4 >= *a3)
      {
        uint64_t v16 = v4 - *a3;
        if (__OFSUB__(v4, *a3)) {
          goto LABEL_186;
        }
      }
      if (v32 < 1) {
        goto LABEL_165;
      }
      if (v16 * v62 <= 0 && a4 + v16 * v62 + v62 * v32 > a4)
      {
        if (!(v16 * v62)) {
          goto LABEL_165;
        }
        goto LABEL_163;
      }
    }
LABEL_164:
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
    goto LABEL_165;
  }
  if (v33 >= v17)
  {
    if (v14 <= 0) {
      goto LABEL_165;
    }
    uint64_t v47 = *(void *)(*(void *)(_s11QueuedItemsV4ItemVMa() - 8) + 72);
    uint64_t result = a4 + v47 * v17;
    if (v47 * v17 >= v47 * v18 && result < a4 + v47 * v18 + v47 * v14)
    {
      if (v47 * v17 == v47 * v18) {
        goto LABEL_165;
      }
LABEL_163:
      uint64_t result = swift_arrayInitWithTakeBackToFront();
      goto LABEL_165;
    }
    goto LABEL_164;
  }
  uint64_t v16 = v10 - v17;
  if (__OFSUB__(v10, v17))
  {
LABEL_175:
    __break(1u);
    goto LABEL_176;
  }
  if (v16 > 0)
  {
    uint64_t v35 = *(void *)(*(void *)(_s11QueuedItemsV4ItemVMa() - 8) + 72);
    uint64_t result = a4 + v35 * v17;
    if (v35 * v17 >= v35 * v18 && result < a4 + v35 * v18 + v35 * v16)
    {
      if (v35 * v17 != v35 * v18) {
        uint64_t result = swift_arrayInitWithTakeBackToFront();
      }
      goto LABEL_130;
    }
LABEL_129:
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
LABEL_130:
    BOOL v19 = __OFADD__(v18, v16);
    v18 += v16;
    if (v19)
    {
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
      return result;
    }
    BOOL v58 = __OFSUB__(v18, *a3);
    if (v18 >= *a3)
    {
      v18 -= *a3;
      if (v58) {
        goto LABEL_187;
      }
    }
  }
  uint64_t v59 = v14 - v16;
  if (__OFSUB__(v14, v16))
  {
LABEL_181:
    __break(1u);
LABEL_182:
    __break(1u);
    goto LABEL_183;
  }
  if (v59 >= 1)
  {
    uint64_t result = _s11QueuedItemsV4ItemVMa();
    uint64_t v60 = *(void *)(*(void *)(result - 8) + 72);
    if (v60 * v18 <= 0 && a4 + v60 * v18 + v60 * v59 > a4)
    {
      if (!(v60 * v18)) {
        goto LABEL_165;
      }
      goto LABEL_163;
    }
    goto LABEL_164;
  }
LABEL_165:
  uint64_t v67 = a3[1];
  BOOL v19 = __OFSUB__(v67, v4);
  uint64_t v57 = v67 - v4;
  if (v19)
  {
LABEL_173:
    __break(1u);
LABEL_174:
    __break(1u);
    goto LABEL_175;
  }
LABEL_166:
  a3[1] = v57;
  return result;
}

uint64_t sub_100558B1C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100557DB4(a1, *(void *)(v2 + 16), a2);
}

__n128 sub_100558B24@<Q0>(uint64_t a1@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  uint64_t v3 = v7;
  __n128 result = v6;
  *(void *)a1 = v5;
  *(__n128 *)(a1 + 8) = result;
  *(void *)(a1 + 24) = v3;
  return result;
}

uint64_t sub_100558B84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100719200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100558BEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *sub_100558C54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = type metadata accessor for PendingItem(0);
    uint64_t v8 = *(int *)(v7 + 24);
    unint64_t v9 = (uint64_t *)((char *)v4 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for PendingItem.Info(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v62 = v7;
      uint64_t v63 = v6;
      uint64_t v13 = v10[1];
      *unint64_t v9 = *v10;
      v9[1] = v13;
      uint64_t v66 = (void *)v10[2];
      void v9[2] = v66;
      uint64_t v60 = (int *)type metadata accessor for PendingItem.AddMessage(0);
      BOOL v61 = v10;
      uint64_t v14 = v60[6];
      uint64_t v68 = v9;
      uint64_t v15 = (void *)((char *)v9 + v14);
      uint64_t v16 = (void *)((char *)v10 + v14);
      uint64_t v17 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v17;
      uint64_t v18 = (int *)type metadata accessor for IndexableMessageInfo(0);
      uint64_t v19 = v18[6];
      __dst = (char *)v15 + v19;
      uint64_t v65 = (char *)v16 + v19;
      uint64_t v20 = sub_1005E0970();
      uint64_t v69 = *(void *)(v20 - 8);
      uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
      uint64_t v22 = v20;
      swift_bridgeObjectRetain();
      id v23 = v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v21(v65, 1, v22))
      {
        uint64_t v24 = sub_10000566C(&qword_100719228);
        memcpy(__dst, v65, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))(__dst, v65, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(__dst, 0, 1, v22);
      }
      uint64_t v67 = v22;
      uint64_t v25 = v18[7];
      int64_t v26 = (char *)v15 + v25;
      uint64_t v27 = (char *)v16 + v25;
      uint64_t v28 = *((void *)v27 + 3);
      if (v28)
      {
        uint64_t v29 = *((void *)v27 + 1);
        *(void *)int64_t v26 = *(void *)v27;
        *((void *)v26 + 1) = v29;
        *((void *)v26 + 2) = *((void *)v27 + 2);
        *((void *)v26 + 3) = v28;
        *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
        uint64_t v30 = *((void *)v27 + 7);
        *((void *)v26 + 6) = *((void *)v27 + 6);
        *((void *)v26 + 7) = v30;
        *((_OWORD *)v26 + 4) = *((_OWORD *)v27 + 4);
        uint64_t v31 = *((void *)v27 + 11);
        *((void *)v26 + 10) = *((void *)v27 + 10);
        *((void *)v26 + 11) = v31;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v32 = *((_OWORD *)v27 + 3);
        *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
        *((_OWORD *)v26 + 3) = v32;
        long long v33 = *((_OWORD *)v27 + 5);
        *((_OWORD *)v26 + 4) = *((_OWORD *)v27 + 4);
        *((_OWORD *)v26 + 5) = v33;
        long long v34 = *((_OWORD *)v27 + 1);
        *(_OWORD *)int64_t v26 = *(_OWORD *)v27;
        *((_OWORD *)v26 + 1) = v34;
      }
      uint64_t v35 = v18[8];
      uint64_t v36 = (void *)((char *)v15 + v35);
      uint64_t v37 = (void *)((char *)v16 + v35);
      uint64_t v38 = v37[1];
      *uint64_t v36 = *v37;
      v36[1] = v38;
      uint64_t v39 = v18[9];
      uint64_t v40 = (void *)((char *)v15 + v39);
      uint64_t v41 = (void *)((char *)v16 + v39);
      uint64_t v42 = v41[1];
      *uint64_t v40 = *v41;
      v40[1] = v42;
      *(void *)((char *)v15 + v18[10]) = *(void *)((char *)v16 + v18[10]);
      *(_WORD *)((char *)v15 + v18[11]) = *(_WORD *)((char *)v16 + v18[11]);
      *((unsigned char *)v15 + v18[12]) = *((unsigned char *)v16 + v18[12]);
      *((unsigned char *)v15 + v18[13]) = *((unsigned char *)v16 + v18[13]);
      *((unsigned char *)v15 + v18[14]) = *((unsigned char *)v16 + v18[14]);
      uint64_t v43 = v18[15];
      unint64_t v44 = (char *)v15 + v43;
      uint64_t v45 = (char *)v16 + v43;
      int v46 = *((unsigned __int8 *)v16 + v43 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v46 == 255)
      {
        *(_OWORD *)unint64_t v44 = *(_OWORD *)v45;
        v44[16] = v45[16];
      }
      else
      {
        uint64_t v47 = *(void *)v45;
        uint64_t v48 = *((void *)v45 + 1);
        MailboxPriorityInfo.mailboxPriorityOrder.getter();
        *(void *)unint64_t v44 = v47;
        *((void *)v44 + 1) = v48;
        v44[16] = v46 & 1;
      }
      uint64_t v7 = v62;
      uint64_t v6 = v63;
      *(void *)((char *)v15 + v18[16]) = *(void *)((char *)v16 + v18[16]);
      uint64_t v49 = v60[7];
      uint64_t v50 = (char *)v68 + v49;
      uint64_t v51 = (char *)v61 + v49;
      *(void *)uint64_t v50 = *(void *)v51;
      v50[8] = v51[8];
      uint64_t v52 = v60[8];
      uint64_t v53 = (char *)v68 + v52;
      uint64_t v54 = (char *)v61 + v52;
      uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
      swift_bridgeObjectRetain();
      v55(v53, v54, v67);
      swift_storeEnumTagMultiPayload();
    }
    *(uint64_t *)((char *)v4 + *(int *)(v7 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 28));
    uint64_t v56 = *(int *)(v6 + 20);
    uint64_t v57 = *(void **)((char *)a2 + v56);
    *(uint64_t *)((char *)v4 + v56) = (uint64_t)v57;
    id v58 = v57;
  }
  return v4;
}

void sub_100559084(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(type metadata accessor for PendingItem(0) + 24);
  type metadata accessor for PendingItem.Info(0);
  if (!swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();

    uint64_t v5 = type metadata accessor for PendingItem.AddMessage(0);
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = (int *)type metadata accessor for IndexableMessageInfo(0);
    uint64_t v8 = v6 + v7[6];
    uint64_t v9 = sub_1005E0970();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    if (*(void *)(v6 + v7[7] + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(unsigned __int8 *)(v6 + v7[15] + 16) != 255) {
      sub_10024EEEC();
    }
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4 + *(int *)(v5 + 32), v9);
  }
  uint64_t v11 = *(void **)(a1 + *(int *)(a2 + 20));
}

_OWORD *sub_10055926C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for PendingItem(0);
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)v4 + v7);
  uint64_t v10 = type metadata accessor for PendingItem.Info(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v65 = v6;
    uint64_t v57 = a3;
    id v58 = v4;
    uint64_t v11 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v11;
    BOOL v61 = (void *)v9[2];
    v8[2] = v61;
    uint64_t v56 = (int *)type metadata accessor for PendingItem.AddMessage(0);
    uint64_t v12 = v56[6];
    BOOL v64 = v8;
    uint64_t v13 = (void *)((char *)v8 + v12);
    uint64_t v14 = (char *)v9 + v12;
    uint64_t v15 = *(void *)((char *)v9 + v12 + 8);
    *uint64_t v13 = *(void *)((char *)v9 + v12);
    v13[1] = v15;
    uint64_t v16 = (int *)type metadata accessor for IndexableMessageInfo(0);
    uint64_t v17 = v16[6];
    __dst = (char *)v13 + v17;
    uint64_t v60 = &v14[v17];
    uint64_t v18 = sub_1005E0970();
    uint64_t v66 = *(void *)(v18 - 8);
    uint64_t v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
    swift_bridgeObjectRetain();
    id v19 = v61;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v59(v60, 1, v18))
    {
      uint64_t v20 = sub_10000566C(&qword_100719228);
      memcpy(__dst, v60, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(__dst, v60, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(__dst, 0, 1, v18);
    }
    __dsta = (void *)v18;
    uint64_t v21 = v16[7];
    uint64_t v22 = (char *)v13 + v21;
    id v23 = &v14[v21];
    uint64_t v24 = *((void *)v23 + 3);
    if (v24)
    {
      uint64_t v25 = *((void *)v23 + 1);
      *(void *)uint64_t v22 = *(void *)v23;
      *((void *)v22 + 1) = v25;
      *((void *)v22 + 2) = *((void *)v23 + 2);
      *((void *)v22 + 3) = v24;
      *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
      uint64_t v26 = *((void *)v23 + 7);
      *((void *)v22 + 6) = *((void *)v23 + 6);
      *((void *)v22 + 7) = v26;
      *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
      uint64_t v27 = *((void *)v23 + 11);
      *((void *)v22 + 10) = *((void *)v23 + 10);
      *((void *)v22 + 11) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v28 = *((_OWORD *)v23 + 3);
      *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
      *((_OWORD *)v22 + 3) = v28;
      long long v29 = *((_OWORD *)v23 + 5);
      *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
      *((_OWORD *)v22 + 5) = v29;
      long long v30 = *((_OWORD *)v23 + 1);
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v30;
    }
    uint64_t v31 = v16[8];
    long long v32 = (void *)((char *)v13 + v31);
    long long v33 = &v14[v31];
    uint64_t v34 = *((void *)v33 + 1);
    *long long v32 = *(void *)v33;
    v32[1] = v34;
    uint64_t v35 = v16[9];
    uint64_t v36 = (void *)((char *)v13 + v35);
    uint64_t v37 = &v14[v35];
    uint64_t v38 = *((void *)v37 + 1);
    *uint64_t v36 = *(void *)v37;
    v36[1] = v38;
    *(void *)((char *)v13 + v16[10]) = *(void *)&v14[v16[10]];
    *(_WORD *)((char *)v13 + v16[11]) = *(_WORD *)&v14[v16[11]];
    *((unsigned char *)v13 + v16[12]) = v14[v16[12]];
    *((unsigned char *)v13 + v16[13]) = v14[v16[13]];
    *((unsigned char *)v13 + v16[14]) = v14[v16[14]];
    uint64_t v39 = v16[15];
    uint64_t v40 = (char *)v13 + v39;
    uint64_t v41 = &v14[v39];
    int v42 = v14[v39 + 16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v42 == 255)
    {
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      v40[16] = v41[16];
    }
    else
    {
      uint64_t v43 = *(void *)v41;
      uint64_t v44 = *((void *)v41 + 1);
      MailboxPriorityInfo.mailboxPriorityOrder.getter();
      *(void *)uint64_t v40 = v43;
      *((void *)v40 + 1) = v44;
      v40[16] = v42 & 1;
    }
    a3 = v57;
    uint64_t v4 = v58;
    *(void *)((char *)v13 + v16[16]) = *(void *)&v14[v16[16]];
    uint64_t v45 = v56[7];
    int v46 = (char *)v64 + v45;
    uint64_t v47 = (char *)v9 + v45;
    *(void *)int v46 = *(void *)v47;
    v46[8] = v47[8];
    uint64_t v48 = v56[8];
    uint64_t v49 = (char *)v64 + v48;
    uint64_t v50 = (char *)v9 + v48;
    uint64_t v51 = *(void (**)(char *, char *, void *))(v66 + 16);
    swift_bridgeObjectRetain();
    v51(v49, v50, __dsta);
    swift_storeEnumTagMultiPayload();
    uint64_t v6 = v65;
  }
  *(void *)((char *)a1 + *(int *)(v6 + 28)) = *(void *)((char *)v4 + *(int *)(v6 + 28));
  uint64_t v52 = *(int *)(a3 + 20);
  uint64_t v53 = *(void **)((char *)v4 + v52);
  *(void *)((char *)a1 + v52) = v53;
  id v54 = v53;
  return a1;
}

void *sub_100559660(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = type metadata accessor for PendingItem(0);
  uint64_t v7 = v6;
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(v6 + 24);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    sub_100559AC8((uint64_t)a1 + v8, type metadata accessor for PendingItem.Info);
    uint64_t v11 = type metadata accessor for PendingItem.Info(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v57 = v7;
      uint64_t v58 = a3;
      *uint64_t v9 = *v10;
      v9[1] = v10[1];
      uint64_t v60 = (void *)v10[2];
      void v9[2] = v60;
      uint64_t v55 = (int *)type metadata accessor for PendingItem.AddMessage(0);
      uint64_t v56 = v10;
      uint64_t v12 = v55[6];
      BOOL v61 = v9;
      uint64_t v13 = (void *)((char *)v9 + v12);
      uint64_t v14 = (char *)v10 + v12;
      *uint64_t v13 = *(void *)((char *)v10 + v12);
      v13[1] = *(void *)((char *)v10 + v12 + 8);
      uint64_t v15 = (int *)type metadata accessor for IndexableMessageInfo(0);
      uint64_t v16 = v15[6];
      __dst = (char *)v13 + v16;
      uint64_t v59 = &v14[v16];
      uint64_t v17 = sub_1005E0970();
      uint64_t v64 = *(void *)(v17 - 8);
      uint64_t v18 = *(unsigned int (**)(char *, uint64_t, void *))(v64 + 48);
      id v19 = (void *)v17;
      swift_bridgeObjectRetain();
      id v20 = v60;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18(v59, 1, v19))
      {
        uint64_t v21 = sub_10000566C(&qword_100719228);
        memcpy(__dst, v59, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v64 + 16))(__dst, v59, v19);
        (*(void (**)(char *, void, uint64_t, void *))(v64 + 56))(__dst, 0, 1, v19);
      }
      __dsta = v19;
      uint64_t v22 = v15[7];
      id v23 = (void *)((char *)v13 + v22);
      uint64_t v24 = &v14[v22];
      if (*((void *)v24 + 3))
      {
        *id v23 = *(void *)v24;
        v23[1] = *((void *)v24 + 1);
        v23[2] = *((void *)v24 + 2);
        v23[3] = *((void *)v24 + 3);
        v23[4] = *((void *)v24 + 4);
        v23[5] = *((void *)v24 + 5);
        v23[6] = *((void *)v24 + 6);
        v23[7] = *((void *)v24 + 7);
        v23[8] = *((void *)v24 + 8);
        v23[9] = *((void *)v24 + 9);
        v23[10] = *((void *)v24 + 10);
        v23[11] = *((void *)v24 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v25 = *((_OWORD *)v24 + 1);
        *(_OWORD *)id v23 = *(_OWORD *)v24;
        *((_OWORD *)v23 + 1) = v25;
        long long v26 = *((_OWORD *)v24 + 2);
        long long v27 = *((_OWORD *)v24 + 3);
        long long v28 = *((_OWORD *)v24 + 5);
        *((_OWORD *)v23 + 4) = *((_OWORD *)v24 + 4);
        *((_OWORD *)v23 + 5) = v28;
        *((_OWORD *)v23 + 2) = v26;
        *((_OWORD *)v23 + 3) = v27;
      }
      uint64_t v29 = v15[8];
      long long v30 = (void *)((char *)v13 + v29);
      uint64_t v31 = &v14[v29];
      *long long v30 = *(void *)v31;
      v30[1] = *((void *)v31 + 1);
      uint64_t v32 = v15[9];
      long long v33 = (void *)((char *)v13 + v32);
      uint64_t v34 = &v14[v32];
      void *v33 = *(void *)v34;
      v33[1] = *((void *)v34 + 1);
      *(void *)((char *)v13 + v15[10]) = *(void *)&v14[v15[10]];
      *(_WORD *)((char *)v13 + v15[11]) = *(_WORD *)&v14[v15[11]];
      *((unsigned char *)v13 + v15[12]) = v14[v15[12]];
      *((unsigned char *)v13 + v15[13]) = v14[v15[13]];
      *((unsigned char *)v13 + v15[14]) = v14[v15[14]];
      uint64_t v35 = v15[15];
      uint64_t v36 = (char *)v13 + v35;
      uint64_t v37 = &v14[v35];
      int v38 = v14[v35 + 16];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v38 == 255)
      {
        long long v39 = *(_OWORD *)v37;
        v36[16] = v37[16];
        *(_OWORD *)uint64_t v36 = v39;
      }
      else
      {
        uint64_t v40 = *(void *)v37;
        uint64_t v41 = *((void *)v37 + 1);
        MailboxPriorityInfo.mailboxPriorityOrder.getter();
        *(void *)uint64_t v36 = v40;
        *((void *)v36 + 1) = v41;
        v36[16] = v38 & 1;
      }
      uint64_t v7 = v57;
      a3 = v58;
      *(void *)((char *)v13 + v15[16]) = *(void *)&v14[v15[16]];
      uint64_t v42 = v55[7];
      uint64_t v43 = (char *)v61 + v42;
      uint64_t v44 = (char *)v56 + v42;
      uint64_t v45 = *(void *)v44;
      v43[8] = v44[8];
      *(void *)uint64_t v43 = v45;
      uint64_t v46 = v55[8];
      uint64_t v47 = (char *)v61 + v46;
      uint64_t v48 = (char *)v56 + v46;
      uint64_t v49 = *(void (**)(char *, char *, void *))(v64 + 16);
      swift_bridgeObjectRetain();
      v49(v47, v48, __dsta);
      swift_storeEnumTagMultiPayload();
    }
  }
  *(void *)((char *)a1 + *(int *)(v7 + 28)) = *(void *)((char *)a2 + *(int *)(v7 + 28));
  uint64_t v50 = *(int *)(a3 + 20);
  uint64_t v51 = *(void **)((char *)a2 + v50);
  uint64_t v52 = *(void **)((char *)a1 + v50);
  *(void *)((char *)a1 + v50) = v51;
  id v53 = v51;

  return a1;
}

uint64_t sub_100559AC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_100559B28(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for PendingItem(0);
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for PendingItem.Info(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v36 = v6;
    uint64_t v37 = a3;
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    v8[2] = v9[2];
    uint64_t v35 = (int *)type metadata accessor for PendingItem.AddMessage(0);
    uint64_t v11 = v35[6];
    uint64_t v12 = (char *)v8 + v11;
    uint64_t v13 = (char *)v9 + v11;
    *(_OWORD *)((char *)v8 + v11) = *(_OWORD *)((char *)v9 + v11);
    uint64_t v14 = (int *)type metadata accessor for IndexableMessageInfo(0);
    uint64_t v15 = v14[6];
    __dst = &v12[v15];
    uint64_t v16 = &v13[v15];
    uint64_t v17 = sub_1005E0970();
    uint64_t v33 = *(void *)(v17 - 8);
    __src = v16;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v16, 1, v17))
    {
      uint64_t v18 = sub_10000566C(&qword_100719228);
      memcpy(__dst, v16, *(void *)(*(void *)(v18 - 8) + 64));
      uint64_t v19 = v33;
    }
    else
    {
      uint64_t v19 = v33;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(__dst, __src, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v17);
    }
    uint64_t v20 = v14[7];
    uint64_t v21 = &v12[v20];
    uint64_t v22 = &v13[v20];
    long long v23 = *((_OWORD *)v22 + 3);
    *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
    *((_OWORD *)v21 + 3) = v23;
    long long v24 = *((_OWORD *)v22 + 5);
    *((_OWORD *)v21 + 4) = *((_OWORD *)v22 + 4);
    *((_OWORD *)v21 + 5) = v24;
    long long v25 = *((_OWORD *)v22 + 1);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v25;
    *(_OWORD *)&v12[v14[8]] = *(_OWORD *)&v13[v14[8]];
    *(_OWORD *)&v12[v14[9]] = *(_OWORD *)&v13[v14[9]];
    *(void *)&v12[v14[10]] = *(void *)&v13[v14[10]];
    *(_WORD *)&v12[v14[11]] = *(_WORD *)&v13[v14[11]];
    v12[v14[12]] = v13[v14[12]];
    v12[v14[13]] = v13[v14[13]];
    v12[v14[14]] = v13[v14[14]];
    uint64_t v26 = v14[15];
    long long v27 = &v12[v26];
    long long v28 = &v13[v26];
    *(_OWORD *)long long v27 = *(_OWORD *)v28;
    v27[16] = v28[16];
    *(void *)&v12[v14[16]] = *(void *)&v13[v14[16]];
    uint64_t v29 = v35[7];
    long long v30 = (char *)v8 + v29;
    uint64_t v31 = (char *)v9 + v29;
    *(void *)long long v30 = *(void *)v31;
    v30[8] = v31[8];
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))((char *)v8 + v35[8], (char *)v9 + v35[8], v17);
    swift_storeEnumTagMultiPayload();
    uint64_t v6 = v36;
    a3 = v37;
  }
  *(void *)((char *)a1 + *(int *)(v6 + 28)) = *(void *)((char *)a2 + *(int *)(v6 + 28));
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_OWORD *sub_100559E0C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for PendingItem(0);
  uint64_t v7 = v6;
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(v6 + 24);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    sub_100559AC8((uint64_t)a1 + v8, type metadata accessor for PendingItem.Info);
    uint64_t v11 = type metadata accessor for PendingItem.Info(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v35 = v7;
      uint64_t v37 = a3;
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      void v9[2] = v10[2];
      uint64_t v36 = (int *)type metadata accessor for PendingItem.AddMessage(0);
      uint64_t v12 = v36[6];
      uint64_t v13 = (char *)v9 + v12;
      uint64_t v14 = (char *)v10 + v12;
      *(_OWORD *)((char *)v9 + v12) = *(_OWORD *)((char *)v10 + v12);
      uint64_t v15 = (int *)type metadata accessor for IndexableMessageInfo(0);
      uint64_t v16 = v15[6];
      int v38 = &v13[v16];
      uint64_t v17 = &v14[v16];
      uint64_t v18 = sub_1005E0970();
      uint64_t v39 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v17, 1, v18))
      {
        uint64_t v19 = sub_10000566C(&qword_100719228);
        memcpy(v38, v17, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v38, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v38, 0, 1, v18);
      }
      uint64_t v20 = v15[7];
      uint64_t v21 = &v13[v20];
      uint64_t v22 = &v14[v20];
      long long v23 = *((_OWORD *)v22 + 3);
      *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
      *((_OWORD *)v21 + 3) = v23;
      long long v24 = *((_OWORD *)v22 + 5);
      *((_OWORD *)v21 + 4) = *((_OWORD *)v22 + 4);
      *((_OWORD *)v21 + 5) = v24;
      long long v25 = *((_OWORD *)v22 + 1);
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v25;
      *(_OWORD *)&v13[v15[8]] = *(_OWORD *)&v14[v15[8]];
      *(_OWORD *)&v13[v15[9]] = *(_OWORD *)&v14[v15[9]];
      *(void *)&v13[v15[10]] = *(void *)&v14[v15[10]];
      *(_WORD *)&v13[v15[11]] = *(_WORD *)&v14[v15[11]];
      v13[v15[12]] = v14[v15[12]];
      v13[v15[13]] = v14[v15[13]];
      v13[v15[14]] = v14[v15[14]];
      uint64_t v26 = v15[15];
      long long v27 = &v13[v26];
      long long v28 = &v14[v26];
      *(_OWORD *)long long v27 = *(_OWORD *)v28;
      v27[16] = v28[16];
      *(void *)&v13[v15[16]] = *(void *)&v14[v15[16]];
      uint64_t v29 = v36[7];
      long long v30 = (char *)v9 + v29;
      uint64_t v31 = (char *)v10 + v29;
      *(void *)long long v30 = *(void *)v31;
      v30[8] = v31[8];
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))((char *)v9 + v36[8], (char *)v10 + v36[8], v18);
      swift_storeEnumTagMultiPayload();
      a3 = v37;
      uint64_t v7 = v35;
    }
  }
  *(void *)((char *)a1 + *(int *)(v7 + 28)) = *(void *)((char *)a2 + *(int *)(v7 + 28));
  uint64_t v32 = *(int *)(a3 + 20);
  uint64_t v33 = *(void **)((char *)a1 + v32);
  *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);

  return a1;
}

uint64_t sub_10055A124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10055A138);
}

uint64_t sub_10055A138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PendingItem(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10055A1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10055A20C);
}

uint64_t sub_10055A20C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for PendingItem(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10055A2C8()
{
  uint64_t result = type metadata accessor for PendingItem(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s11QueuedItemsV5StateVwxx()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t _s11QueuedItemsV5StateVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s11QueuedItemsV5StateVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s11QueuedItemsV5StateVwtk(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t _s11QueuedItemsV5StateVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s11QueuedItemsV5StateVMa()
{
  return &_s11QueuedItemsV5StateVN;
}

void sub_10055A4C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(os_unfair_lock_s **)(v0 + 32);
  long long v3 = v2 + 4;
  uint64_t v4 = v2 + 5;
  os_unfair_lock_lock(v2 + 5);
  sub_10055A988(v3, aBlock);
  os_unfair_lock_unlock(v4);
  if (LOBYTE(aBlock[0]) == 1)
  {
    if (qword_1007187B0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1005E0ED0();
    sub_1003461B0(v5, (uint64_t)qword_100719320);
    uint64_t v6 = sub_1005E0EB0();
    os_log_type_t v7 = sub_1005E25C0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Starting.", v8, 2u);
      swift_slowDealloc();
    }

    uint64_t v9 = *(void **)(v1 + 16);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9;
    *(void *)(v10 + 24) = v1;
    aBlock[4] = sub_10055E898;
    aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10046A1E4;
    aBlock[3] = &unk_1006FD690;
    uint64_t v11 = _Block_copy(aBlock);
    id v12 = v9;
    swift_retain();
    swift_release();
    [v12 performBlock:v11];
    _Block_release(v11);
  }
}

uint64_t sub_10055A6A0()
{
  uint64_t v0 = sub_1005E0ED0();
  sub_10034E5B4(v0, qword_100719320);
  sub_1003461B0(v0, (uint64_t)qword_100719320);
  return sub_1005E0EC0();
}

unsigned char *sub_10055A71C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_10055A728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10000566C(&qword_100719440);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 20) = 0;
  *(unsigned char *)(v9 + 16) = 0;
  v4[4] = v9;
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 20) = 0;
  *(unsigned char *)(v10 + 16) = 0;
  v4[5] = v10;
  uint64_t v11 = *(void *)sub_1005E0BF0();
  sub_10000566C(&qword_100719448);
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 48) = 0;
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = 0;
  *(unsigned char *)(v12 + 32) = 1;
  *(void *)(v12 + 40) = _swiftEmptyArrayStorage;
  void v4[6] = v12;
  v4[7] = 1;
  v4[8] = UInt32.init(_:);
  v4[9] = 0;
  v4[2] = a1;
  v4[3] = a2;
  v4[10] = a3;
  v4[11] = a4;
  swift_retain();
  return v4;
}

void sub_10055A810(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(os_unfair_lock_s **)(v2 + 32);
  os_log_type_t v7 = v6 + 4;
  uint64_t v8 = v6 + 5;
  os_unfair_lock_lock(v6 + 5);
  sub_10055F224(v7, aBlock);
  os_unfair_lock_unlock(v8);
  if (aBlock[0])
  {
    sub_1005E2F20();
    __break(1u);
  }
  else
  {
    uint64_t v9 = *(void **)(v3 + 16);
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = v3;
    v10[3] = a1;
    v10[4] = a2;
    aBlock[4] = sub_10055F1E0;
    aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10046A1E4;
    aBlock[3] = &unk_1006FD730;
    uint64_t v11 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    [v9 performBlock:v11];
    _Block_release(v11);
  }
}

unsigned char *sub_10055A988@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  if (*result)
  {
    *a2 = 0;
  }
  else
  {
    *__n128 result = 1;
    *a2 = 1;
  }
  return result;
}

uint64_t sub_10055A9A8()
{
  v9[0] = 0x6E65477865646E49;
  v9[1] = 0xEF6E6F6974617265;
  void v9[2] = 0xD000000000000017;
  v9[3] = 0x80000001005EC480;
  v9[4] = sub_100557014;
  v9[5] = 0;
  uint64_t v9[6] = sub_10055705C;
  v9[7] = 0;
  v9[8] = sub_100557098;
  v9[9] = 0;
  sub_1005799CC(v9);
  if (qword_1007187B0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1005E0ED0();
  sub_1003461B0(v0, (uint64_t)qword_100719320);
  uint64_t v1 = sub_1005E0EB0();
  os_log_type_t v2 = sub_1005E25C0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 134217984;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Read current index generation %llu from database.", v3, 0xCu);
    swift_slowDealloc();
  }

  uint64_t v4 = swift_beginAccess();
  uint64_t v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  os_log_type_t v7 = v6 + 12;
  os_unfair_lock_lock(v6 + 12);
  sub_10055E8C0();
  os_unfair_lock_unlock(v7);
  return swift_endAccess();
}

uint64_t sub_10055ABEC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IndexQueue()
{
  return self;
}

uint64_t sub_10055AC70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v135 = a4;
  uint64_t v131 = a5;
  uint64_t v132 = a2;
  uint64_t v126 = a1;
  sub_10000566C(&qword_100719228);
  __chkstk_darwin();
  int64_t v121 = &v118.i8[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v123 = sub_1005E0970();
  uint64_t v127 = *(void *)(v123 - 8);
  __chkstk_darwin();
  uint64_t v120 = &v118.i8[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v122 = &v118.i8[-v8];
  uint64_t v124 = type metadata accessor for PendingItem.Info(0);
  __chkstk_darwin();
  uint64_t v125 = (uint64_t *)((char *)v118.i64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v133 = v10;
  uint64_t v134 = v11;
  __chkstk_darwin();
  uint64_t v129 = &v118.i8[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v14 = &v118.i8[-v13];
  __chkstk_darwin();
  uint64_t v16 = &v118.i8[-v15];
  sub_10000566C(&qword_100719420);
  __chkstk_darwin();
  uint64_t v18 = &v118.i8[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for IndexableMessageInfo(0);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin();
  uint64_t v128 = (uint64_t)v118.i64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v130 = (uint64_t)v118.i64 - v22;
  NSString v23 = sub_1005E1BD0();
  [a3 willAccessValueForKey:v23];

  id v24 = [a3 primitiveIndexableMessageInfo];
  if (v24)
  {
    long long v25 = v24;
    uint64_t v26 = (uint64_t)v24
        + OBJC_IVAR____TtCE17IMAPSearchIndexerV9IMAP2MIME20IndexableMessageInfoP33_5FFF53AECAA0B5B4FDC4BFE964265B9C7Wrapper_info;
    swift_beginAccess();
    sub_10055E6C0(v26, (uint64_t)v18);
  }
  else
  {
    (*(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
  }
  NSString v27 = sub_1005E1BD0();
  [a3 didAccessValueForKey:v27];

  if ((*(unsigned int (**)(__int8 *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    swift_bridgeObjectRelease();
    sub_100007A48((uint64_t)v18, &qword_100719420);
    uint64_t v29 = v134;
    uint64_t v28 = v135;
    unint64_t v30 = v133;
    (*(void (**)(__int8 *, uint64_t, unint64_t))(v134 + 16))(v16, v135, v133);
    id v31 = a3;
    uint64_t v32 = sub_1005E0EB0();
    os_log_type_t v33 = sub_1005E25B0();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v138 = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 67109635;
      unint64_t v35 = sub_100578BD8();
      if ((v35 & (unint64_t)&_mh_execute_header) != 0) {
        int v36 = 0;
      }
      else {
        int v36 = v35;
      }
      LODWORD(v136) = v36;
      sub_1005E2960();
      *(_WORD *)(v34 + 8) = 2160;
      uint64_t v136 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v34 + 18) = 2085;
      id v37 = [v31 mailbox];
      if (v37 && (int v38 = v37, v39 = sub_100578E24(), v41 = v40, v38, v39))
      {
        uint64_t v136 = v39;
        int v137 = v41;
        uint64_t v42 = sub_1005E1CC0();
        unint64_t v44 = v43;
        uint64_t v45 = v131;
      }
      else
      {
        unint64_t v44 = 0xA300000000000000;
        uint64_t v45 = v131;
        uint64_t v42 = 8425698;
      }
      uint64_t v136 = sub_1005904BC(v42, v44, &v138);
      sub_1005E2960();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Message UID %u in mailbox '%{sensitive,mask.mailbox}s' has no index info. Not enqueueing for indexing.", (uint8_t *)v34, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_10055E728(v135, _s14descr1006B99F1V6LoggerVMa);
      (*(void (**)(__int8 *, unint64_t))(v134 + 8))(v16, v133);
      goto LABEL_43;
    }

    sub_10055E728(v28, _s14descr1006B99F1V6LoggerVMa);
    (*(void (**)(__int8 *, unint64_t))(v29 + 8))(v16, v30);
    goto LABEL_39;
  }
  uint64_t v46 = v130;
  sub_10055E7F0((uint64_t)v18, v130, type metadata accessor for IndexableMessageInfo);
  id v47 = sub_100578A04();
  if (v48)
  {
    swift_bridgeObjectRelease();
    uint64_t v63 = v134;
    uint64_t v62 = v135;
    unint64_t v64 = v133;
    (*(void (**)(__int8 *, uint64_t, unint64_t))(v134 + 16))(v14, v135, v133);
    id v65 = a3;
    uint64_t v66 = sub_1005E0EB0();
    os_log_type_t v67 = sub_1005E25B0();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = swift_slowAlloc();
      uint64_t v138 = swift_slowAlloc();
      *(_DWORD *)uint64_t v68 = 67109635;
      unint64_t v69 = sub_100578BD8();
      if ((v69 & (unint64_t)&_mh_execute_header) != 0) {
        int v70 = 0;
      }
      else {
        int v70 = v69;
      }
      LODWORD(v136) = v70;
      sub_1005E2960();
      *(_WORD *)(v68 + 8) = 2160;
      uint64_t v136 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v68 + 18) = 2085;
      id v71 = [v65 mailbox];
      if (v71 && (v72 = v71, v73 = sub_100578E24(), int v75 = v74, v72, v73))
      {
        uint64_t v136 = v73;
        int v137 = v75;
        uint64_t v76 = sub_1005E1CC0();
        unint64_t v78 = v77;
        uint64_t v45 = v131;
      }
      else
      {
        unint64_t v78 = 0xA300000000000000;
        uint64_t v45 = v131;
        uint64_t v76 = 8425698;
      }
      uint64_t v136 = sub_1005904BC(v76, v78, &v138);
      sub_1005E2960();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "Message UID %u in mailbox '%{sensitive,mask.mailbox}s' has no spotlight ID. Not enqueueing for indexing.", (uint8_t *)v68, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_10055E728(v135, _s14descr1006B99F1V6LoggerVMa);
      (*(void (**)(__int8 *, unint64_t))(v134 + 8))(v14, v133);
      goto LABEL_42;
    }

    sub_10055E728(v62, _s14descr1006B99F1V6LoggerVMa);
    (*(void (**)(__int8 *, unint64_t))(v63 + 8))(v14, v64);
  }
  else
  {
    id v49 = v47;
    id v50 = [a3 mailbox];
    if (v50)
    {
      id v51 = v50;
      uint64_t v52 = sub_1005B9D78([v51 objectID]);

      if (v52)
      {
        sub_10055E788(v46, v128, type metadata accessor for IndexableMessageInfo);
        NSString v53 = sub_1005E1BD0();
        [a3 willAccessValueForKey:v53];

        id v54 = [a3 primitiveFlags];
        if (v54)
        {
          uint64_t v55 = v54;
          id v56 = [v54 longLongValue];

          unint64_t v57 = sub_100556DA8((unint64_t)v56);
          LODWORD(v134) = v58;
          unint64_t v133 = HIWORD(v57);
          uint64_t v129 = (__int8 *)HIBYTE(v57);
          int8x16_t v59 = (int8x16_t)vdupq_n_s64(v57);
          uint64_t v119 = HIDWORD(v57) & 1;
          uint64_t v60 = (v57 >> 40) & 1;
          int32x4_t v61 = (int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v59, (int8x16_t)xmmword_10062A060)), (int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v59, (int8x16_t)xmmword_10062A070))));
          *(int8x8_t *)v61.i8 = vand_s8((int8x8_t)vmovn_s32(v61), (int8x8_t)0x1000100010001);
        }
        else
        {
          uint64_t v119 = 0;
          LOBYTE(v60) = 0;
          unint64_t v133 = 0;
          uint64_t v129 = 0;
          LODWORD(v134) = 0;
          int32x4_t v61 = 0uLL;
        }
        int16x8_t v118 = (int16x8_t)v61;
        NSString v99 = sub_1005E1BD0();
        [a3 didAccessValueForKey:v99];

        id v100 = [a3 serverDate];
        if (v100)
        {
          unint64_t v101 = v100;
          uint64_t v102 = v120;
          sub_1005E0950();

          uint64_t v103 = v127;
          uint64_t v104 = *(void (**)(__int8 *, __int8 *, uint64_t))(v127 + 32);
          uint64_t v105 = (uint64_t)v121;
          unint64_t v106 = v102;
          uint64_t v107 = v123;
          v104(v121, v106, v123);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v103 + 56))(v105, 0, 1, v107);
          int v108 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v105, 1, v107);
          uint64_t v109 = v135;
          if (v108 != 1)
          {

            sub_10055E728(v109, _s14descr1006B99F1V6LoggerVMa);
            sub_10055E728(v46, type metadata accessor for IndexableMessageInfo);
            uint64_t v110 = v122;
            v104(v122, (__int8 *)v105, v107);
            Swift::Int v111 = v110;
LABEL_51:
            uint64_t v112 = (uint64_t)v125;
            uint64_t v113 = v132;
            *uint64_t v125 = v126;
            *(void *)(v112 + 8) = v113;
            *(void *)(v112 + 16) = v52;
            uint64_t v114 = (int *)type metadata accessor for PendingItem.AddMessage(0);
            sub_10055E7F0(v128, v112 + v114[6], type metadata accessor for IndexableMessageInfo);
            uint64_t v115 = v112 + v114[7];
            *(_DWORD *)uint64_t v115 = vmovn_s16(v118).u32[0];
            *(unsigned char *)(v115 + 4) = v119;
            *(unsigned char *)(v115 + 5) = v60;
            *(unsigned char *)(v115 + 6) = v133;
            *(unsigned char *)(v115 + 7) = (_BYTE)v129;
            *(unsigned char *)(v115 + 8) = v134 & 1;
            (*(void (**)(uint64_t, __int8 *, uint64_t))(v127 + 32))(v112 + v114[8], v111, v107);
            swift_storeEnumTagMultiPayload();
            uint64_t v116 = v131;
            *uint64_t v131 = v49;
            uint64_t v117 = type metadata accessor for EnqueueableItem(0);
            sub_10055E7F0(v112, (uint64_t)v116 + *(int *)(v117 + 20), type metadata accessor for PendingItem.Info);
            return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v116, 0, 1, v117);
          }
        }
        else
        {
          uint64_t v105 = (uint64_t)v121;
          uint64_t v107 = v123;
          (*(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(v127 + 56))(v121, 1, 1, v123);
          uint64_t v109 = v135;
        }
        Swift::Int v111 = v122;
        sub_1005E0960();

        sub_10055E728(v109, _s14descr1006B99F1V6LoggerVMa);
        sub_10055E728(v46, type metadata accessor for IndexableMessageInfo);
        sub_100007A48(v105, &qword_100719228);
        goto LABEL_51;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v80 = v134;
    uint64_t v79 = v135;
    uint64_t v81 = v129;
    unint64_t v82 = v133;
    (*(void (**)(__int8 *, uint64_t, unint64_t))(v134 + 16))(v129, v135, v133);
    id v83 = a3;
    uint64_t v84 = sub_1005E0EB0();
    os_log_type_t v85 = sub_1005E25B0();
    if (os_log_type_enabled(v84, v85))
    {
      uint64_t v86 = 8425698;
      uint64_t v87 = swift_slowAlloc();
      uint64_t v138 = swift_slowAlloc();
      *(_DWORD *)uint64_t v87 = 67109635;
      unint64_t v88 = sub_100578BD8();
      if ((v88 & (unint64_t)&_mh_execute_header) != 0) {
        int v89 = 0;
      }
      else {
        int v89 = v88;
      }
      LODWORD(v136) = v89;
      sub_1005E2960();
      *(_WORD *)(v87 + 8) = 2160;
      uint64_t v136 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v87 + 18) = 2085;
      id v90 = [v83 mailbox];
      if (v90 && (v91 = v90, unint64_t v92 = sub_100578E24(), v94 = v93, v91, v92))
      {
        uint64_t v136 = v92;
        int v137 = v94;
        uint64_t v86 = sub_1005E1CC0();
        unint64_t v96 = v95;
      }
      else
      {
        unint64_t v96 = 0xA300000000000000;
      }
      uint64_t v45 = v131;
      uint64_t v136 = sub_1005904BC(v86, v96, &v138);
      sub_1005E2960();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v84, v85, "Message UID %u in mailbox '%{sensitive,mask.mailbox}s' has no mailbox spotlight ID. Not enqueueing for indexing.", (uint8_t *)v87, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_10055E728(v135, _s14descr1006B99F1V6LoggerVMa);
      (*(void (**)(__int8 *, unint64_t))(v134 + 8))(v129, v133);
LABEL_42:
      sub_10055E728(v130, type metadata accessor for IndexableMessageInfo);
      goto LABEL_43;
    }

    sub_10055E728(v79, _s14descr1006B99F1V6LoggerVMa);
    (*(void (**)(__int8 *, unint64_t))(v80 + 8))(v81, v82);
  }
  sub_10055E728(v46, type metadata accessor for IndexableMessageInfo);
LABEL_39:
  uint64_t v45 = v131;
LABEL_43:
  uint64_t v97 = type metadata accessor for EnqueueableItem(0);
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v45, 1, 1, v97);
}

uint64_t sub_10055BD08(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v28 = a2;
  uint64_t v29 = a1;
  uint64_t v26 = _s11QueuedItemsV4ItemVMa();
  __chkstk_darwin();
  uint64_t v27 = (uint64_t)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PendingItem.Info(0);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EnqueueableItem(0);
  __chkstk_darwin();
  uint64_t v9 = (uint64_t *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for PendingItem(0);
  __chkstk_darwin();
  uint64_t v12 = (uint64_t *)((char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v14 = (uint64_t *)((char *)&v26 - v13);
  uint64_t v15 = *(os_unfair_lock_s **)(v2 + 40);
  uint64_t v16 = v15 + 4;
  uint64_t v17 = v15 + 5;
  os_unfair_lock_lock(v15 + 5);
  sub_10055A71C(v16, &v30);
  os_unfair_lock_unlock(v17);
  uint64_t v18 = 0;
  if (v30) {
    return v18;
  }
  sub_10055E788(v29, (uint64_t)v9, type metadata accessor for EnqueueableItem);
  uint64_t v19 = *(void *)(v3 + 56);
  uint64_t v29 = v3;
  *(void *)(v3 + 56) = v19 + 1;
  uint64_t v20 = *v9;
  sub_10055E788((uint64_t)v9 + *(int *)(v7 + 20), (uint64_t)v6, type metadata accessor for PendingItem.Info);
  *uint64_t v12 = v19;
  v12[1] = v20;
  sub_10055E788((uint64_t)v6, (uint64_t)v12 + *(int *)(v10 + 24), type metadata accessor for PendingItem.Info);
  uint64_t v21 = sub_1005832B0();
  uint64_t result = sub_10055E728((uint64_t)v6, type metadata accessor for PendingItem.Info);
  if (!__OFADD__(v21, 1063))
  {
    *(void *)((char *)v12 + *(int *)(v10 + 28)) = v21 + 1063;
    sub_10055E7F0((uint64_t)v12, (uint64_t)v14, type metadata accessor for PendingItem);
    sub_10055E728((uint64_t)v9, type metadata accessor for EnqueueableItem);
    uint64_t v23 = v27;
    sub_10055E788((uint64_t)v14, v27, type metadata accessor for PendingItem);
    id v24 = v28;
    *(void *)(v23 + *(int *)(v26 + 20)) = v28;
    id v25 = v24;
    sub_10055C050(v23);
    sub_10055E728(v23, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
    uint64_t v18 = *v14;
    sub_10055E728((uint64_t)v14, type metadata accessor for PendingItem);
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_10055C050(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = _s11QueuedItemsV4ItemVMa();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (uint64_t *)&v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v9 = (uint64_t *)&v32[-v8];
  swift_beginAccess();
  uint64_t v36 = a1;
  uint64_t v10 = *(os_unfair_lock_s **)(v1 + 48);
  os_log_type_t v33 = sub_10055E660;
  uint64_t v34 = &v35;
  uint64_t v11 = v10 + 12;
  os_unfair_lock_lock(v10 + 12);
  sub_10055E668((uint64_t)&v37);
  os_unfair_lock_unlock(v11);
  uint64_t v12 = v37;
  int v13 = v38;
  swift_endAccess();
  if (v13 != 1)
  {
    if (qword_1007187B0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1005E0ED0();
    sub_1003461B0(v24, (uint64_t)qword_100719320);
    sub_10055E788(a1, (uint64_t)v7, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
    uint64_t v15 = sub_1005E0EB0();
    os_log_type_t v25 = sub_1005E2590();
    if (os_log_type_enabled(v15, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 134218240;
      uint64_t v27 = *v7;
      sub_10055E728((uint64_t)v7, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
      uint64_t v39 = v27;
      sub_1005E2960();
      *(_WORD *)(v26 + 12) = 2048;
      uint64_t v39 = v12;
      sub_1005E2960();
      uint64_t v19 = "Did enqueue item #%llu. Queue has %ld items.";
      uint64_t v20 = v15;
      os_log_type_t v21 = v25;
      uint64_t v22 = (uint8_t *)v26;
      uint32_t v23 = 22;
      goto LABEL_10;
    }
    uint64_t v28 = (uint64_t)v7;
LABEL_13:
    sub_10055E728(v28, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
    goto LABEL_14;
  }
  if (qword_1007187B0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1005E0ED0();
  sub_1003461B0(v14, (uint64_t)qword_100719320);
  sub_10055E788(a1, (uint64_t)v9, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
  uint64_t v15 = sub_1005E0EB0();
  os_log_type_t v16 = sub_1005E2590();
  if (!os_log_type_enabled(v15, v16))
  {
    uint64_t v28 = (uint64_t)v9;
    goto LABEL_13;
  }
  uint64_t v17 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)uint64_t v17 = 134217984;
  uint64_t v18 = *v9;
  sub_10055E728((uint64_t)v9, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
  uint64_t v39 = v18;
  sub_1005E2960();
  uint64_t v19 = "Did enqueue item #%llu. Was empty.";
  uint64_t v20 = v15;
  os_log_type_t v21 = v16;
  uint64_t v22 = v17;
  uint32_t v23 = 12;
LABEL_10:
  _os_log_impl((void *)&_mh_execute_header, v20, v21, v19, v22, v23);
  swift_slowDealloc();
LABEL_14:

  uint64_t v29 = *(void (**)(uint64_t))(v2 + 64);
  uint64_t v30 = swift_retain();
  v29(v30);
  return swift_release();
}

uint64_t sub_10055C410(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(os_unfair_lock_s **)(v1 + 40);
  uint64_t v5 = v4 + 4;
  uint64_t v6 = v4 + 5;
  os_unfair_lock_lock(v4 + 5);
  sub_10055A71C(v5, v10);
  os_unfair_lock_unlock(v6);
  if (v10[0])
  {
    a1[3] = sub_10000566C(&qword_100719208);
    uint64_t v7 = 0;
    a1[4] = sub_100007494(&qword_100719210, &qword_100719208);
    *a1 = _swiftEmptyArrayStorage;
  }
  else
  {
    swift_beginAccess();
    uint64_t v8 = *(os_unfair_lock_s **)(v2 + 48);
    swift_retain();
    os_unfair_lock_lock(v8 + 12);
    sub_100557FE8((uint64_t)&v8[4], v10);
    os_unfair_lock_unlock(v8 + 12);
    uint64_t v7 = v11;
    sub_100021BFC(v10, (uint64_t)a1);
    swift_release();
  }
  return v7;
}

uint64_t sub_10055C538(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1007187B0 != -1) {
    goto LABEL_26;
  }
  while (1)
  {
    uint64_t v6 = sub_1005E0ED0();
    sub_1003461B0(v6, (uint64_t)qword_100719320);
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_1005E0EB0();
    os_log_type_t v8 = sub_1005E2590();
    if (!os_log_type_enabled(v7, v8))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_16;
    }
    uint64_t v9 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 134218498;
    uint64_t v10 = *(void *)(a1 + 16);
    uint64_t v45 = v42;
    uint64_t aBlock = v10;
    sub_1005E2960();
    *(_WORD *)(v9 + 12) = 2082;
    int64_t v11 = *(void *)(a1 + 16);
    if (!v11) {
      break;
    }
    uint64_t v40 = v9;
    uint64_t v41 = a2;
    uint64_t v43 = v3;
    sub_100590BF4(0, v11, 0);
    a2 = sub_1000D38CC(a1);
    uint64_t v3 = v12;
    char v14 = v13 & 1;
    while ((a2 & 0x8000000000000000) == 0 && a2 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(a1 + 56 + (((unint64_t)a2 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_24;
      }
      if (*(_DWORD *)(a1 + 36) != v3) {
        goto LABEL_25;
      }
      uint64_t aBlock = 35;
      unint64_t v47 = 0xE100000000000000;
      v52._countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v52);
      swift_bridgeObjectRelease();
      unint64_t v16 = _swiftEmptyArrayStorage[2];
      unint64_t v15 = _swiftEmptyArrayStorage[3];
      if (v16 >= v15 >> 1) {
        sub_100590BF4(v15 > 1, v16 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v16 + 1;
      uint64_t v17 = &_swiftEmptyArrayStorage[2 * v16];
      void v17[4] = 35;
      v17[5] = 0xE100000000000000;
      uint64_t v18 = sub_1000D3970(a2, v3, v14 & 1, a1);
      a2 = v18;
      uint64_t v3 = v19;
      char v14 = v20 & 1;
      if (!--v11)
      {
        uint64_t v21 = a1;
        sub_100060FF0(v18, v19, v20 & 1);
        uint64_t v3 = v43;
        a2 = v41;
        uint64_t v9 = v40;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    swift_once();
  }
  uint64_t v21 = a1;
LABEL_15:
  uint64_t aBlock = (uint64_t)_swiftEmptyArrayStorage;
  sub_10000566C(&qword_100719428);
  sub_100007494(&qword_100719430, &qword_100719428);
  uint64_t v22 = sub_1005E1A80();
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  uint64_t aBlock = sub_1005904BC(v22, v24, &v45);
  sub_1005E2960();
  a1 = v21;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v9 + 22) = 2048;
  uint64_t aBlock = a2;
  sub_1005E2960();
  _os_log_impl((void *)&_mh_execute_header, v7, v8, "Did complete %ld item(s) %{public}s, generation: %llu.", (uint8_t *)v9, 0x20u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

LABEL_16:
  swift_beginAccess();
  uint64_t v25 = sub_100557C98();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  swift_endAccess();
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1005E0EB0();
  os_log_type_t v33 = sub_1005E25C0();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v44 = v3;
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 134218496;
    uint64_t aBlock = *(void *)(a1 + 16);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2048;
    uint64_t aBlock = v27;
    sub_1005E2960();
    *(_WORD *)(v34 + 22) = 1024;
    if (v29 == (int)v29) {
      int v35 = v29;
    }
    else {
      int v35 = 0;
    }
    LODWORD(aBlock) = v35;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Did complete %ld item(s), %ld item(s) (%{iec-bytes}d) remaining in queue.", (uint8_t *)v34, 0x1Cu);
    uint64_t v3 = v44;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v36 = *(void **)(v3 + 16);
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = v25;
  v37[3] = v27;
  v37[4] = v29;
  v37[5] = v31;
  v37[6] = v3;
  v37[7] = a2;
  id v50 = sub_10055E938;
  id v51 = v37;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  unint64_t v47 = 1107296256;
  char v48 = sub_10046A1E4;
  id v49 = &unk_1006FD6E0;
  unsigned __int8 v38 = _Block_copy(&aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  [v36 performBlock:v38];
  _Block_release(v38);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10055CB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = type metadata accessor for PendingItem(0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v41 = (void *)((char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  char v14 = (char *)v36 - v13;
  uint64_t v15 = _s11QueuedItemsV4ItemVMa();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    uint64_t v37 = a5;
    uint64_t v38 = a4;
    uint64_t v21 = *(int *)(v16 + 20);
    uint64_t v22 = a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    uint64_t v42 = *(void *)(v17 + 72);
    uint64_t v43 = v21;
    swift_unknownObjectRetain();
    v36[1] = a1;
    swift_bridgeObjectRetain();
    *(void *)&long long v23 = 134217984;
    long long v39 = v23;
    unint64_t v24 = v41;
    uint64_t v40 = v10;
    do
    {
      sub_10055E788(v22, (uint64_t)v19, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
      uint64_t v25 = *(void **)&v19[v43];
      sub_10055E788((uint64_t)v19, (uint64_t)v14, type metadata accessor for PendingItem);
      uint64_t v26 = v25;
      sub_10055E728((uint64_t)v19, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
      if (qword_1007187B0 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_1005E0ED0();
      sub_1003461B0(v27, (uint64_t)qword_100719320);
      id v28 = [v26 managedObjectContext];

      if (v28)
      {
        sub_10055DA7C((uint64_t)&v14[*(int *)(v10 + 24)], a6);
      }
      else
      {
        sub_10055E788((uint64_t)v14, (uint64_t)v24, type metadata accessor for PendingItem);
        uint64_t v29 = sub_1005E0EB0();
        uint64_t v30 = sub_1005E25C0();
        if (os_log_type_enabled(v29, (os_log_type_t)v30))
        {
          uint64_t v31 = swift_slowAlloc();
          *(_DWORD *)uint64_t v31 = v39;
          uint64_t v32 = a6;
          uint64_t v33 = *v41;
          sub_10055E728((uint64_t)v41, type metadata accessor for PendingItem);
          *(void *)(v31 + 4) = v33;
          a6 = v32;
          uint64_t v10 = v40;
          _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v30, "Managed object (message) was unregistered, probably deleted. Not marking as “indexing complete” for #%llu.", (uint8_t *)v31, 0xCu);
          unint64_t v24 = v41;
          swift_slowDealloc();
        }
        else
        {
          sub_10055E728((uint64_t)v24, type metadata accessor for PendingItem);
        }

        uint64_t v26 = v29;
      }

      sub_10055E728((uint64_t)v14, type metadata accessor for PendingItem);
      v22 += v42;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    a5 = v37;
  }
  else
  {
    swift_unknownObjectRetain();
  }
  sub_10053B32C();
  id v34 = [self defaultCenter];
  if (qword_1007187B8 != -1) {
    swift_once();
  }
  [v34 postNotificationName:qword_100719338 object:a5];

  return swift_unknownObjectRelease();
}

uint64_t sub_10055CF8C(uint64_t a1, uint64_t (*a2)(id), uint64_t a3)
{
  uint64_t v59 = a3;
  uint64_t v66 = sub_1005E0970();
  uint64_t v5 = *(char **)(v66 - 8);
  __chkstk_darwin();
  id v65 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v62 = (char *)&v57 - v7;
  __chkstk_darwin();
  int32x4_t v61 = (char *)&v57 - v8;
  uint64_t v9 = *(void **)(a1 + 16);
  *(void *)&long long v70 = 0x6E65477865646E49;
  *((void *)&v70 + 1) = 0xEF6E6F6974617265;
  unint64_t v71 = 0xD000000000000017;
  unint64_t v72 = 0x80000001005EC480;
  unint64_t v73 = sub_100557014;
  uint64_t v74 = 0;
  int v75 = sub_10055705C;
  uint64_t v76 = 0;
  unint64_t v77 = sub_100557098;
  uint64_t v78 = 0;
  id v10 = [objc_allocWithZone((Class)NSNumber) initWithLongLong:sub_1005799CC(&v70) + 1];
  id v11 = [v9 userInfo];
  uint64_t v79 = 0x6E65477865646E49;
  unint64_t v80 = 0xEF6E6F6974617265;
  id v12 = v10;
  objc_msgSend(v11, "__swift_setObject:forKeyedSubscript:", v12, sub_1005E3350());

  swift_unknownObjectRelease();
  sub_10057C6D0(&v70);

  id v13 = [self defaultCenter];
  NSString v14 = sub_1005E1BD0();
  [v13 postNotificationName:v14 object:v9];

  id v58 = v9;
  uint64_t v15 = sub_100539798();
  swift_beginAccess();
  unint64_t v16 = *(void *)(v15 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v60 = a2;
  if (v16 >> 62) {
    goto LABEL_32;
  }
  uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  uint64_t v18 = v62;
  if (v17)
  {
    if (v17 < 1) {
      __break(1u);
    }
    uint64_t v19 = 0;
    unint64_t v20 = v16 & 0xC000000000000001;
    unint64_t v64 = (void (**)(char *, char *, uint64_t))(v5 + 16);
    os_log_type_t v67 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t p_attr = &stru_100707FF8.attr;
    unint64_t v63 = v16 & 0xC000000000000001;
    while (1)
    {
      if (v20) {
        uint64_t v22 = (char *)sub_1005E2CF0();
      }
      else {
        uint64_t v22 = (char *)*(id *)(v16 + 8 * v19 + 32);
      }
      uint64_t v5 = v22;
      if (objc_msgSend(v22, p_attr[491])
        || (id v23 = [v5 managedObjectContext], v23, !v23))
      {
LABEL_6:

        goto LABEL_7;
      }
      NSString v24 = sub_1005E1BD0();
      [v5 willAccessValueForKey:v24];

      id v25 = [v5 primitiveAccount];
      if (!v25) {
        goto LABEL_18;
      }
      uint64_t v26 = v25;
      uint64_t v27 = sub_1005E1C00();
      unint64_t v29 = v28;

      uint64_t v30 = HIBYTE(v29) & 0xF;
      if ((v29 & 0x2000000000000000) == 0) {
        uint64_t v30 = v27 & 0xFFFFFFFFFFFFLL;
      }
      if (!v30) {
        break;
      }
LABEL_19:
      NSString v31 = sub_1005E1BD0();
      [v5 didAccessValueForKey:v31];

      swift_bridgeObjectRelease();
      if (!v29) {
        goto LABEL_6;
      }
      NSString v32 = sub_1005E1BD0();
      [v5 willAccessValueForKey:v32];

      id v33 = [v5 primitiveDataUsage];
      if (v33)
      {
        id v34 = v33;
        uint64_t v35 = sub_1005E08A0();
        unint64_t v37 = v36;

        sub_100008D24(v35, v37);
        uint64_t v38 = (uint64_t)v61;
        sub_1005E0960();
        long long v39 = (void *)sub_1005BF67C(v38, v35, v37);
        sub_1000094D4(v35, v37);
      }
      else
      {
        long long v39 = (void *)sub_100592604((uint64_t)_swiftEmptyArrayStorage);
      }
      NSString v40 = sub_1005E1BD0();
      [v5 didAccessValueForKey:v40];

      v69[0] = v39;
      sub_1005E0960();
      uint64_t v41 = v65;
      uint64_t v42 = v66;
      (*v64)(v65, v18, v66);
      sub_1005E08F0();
      double v44 = round(v43 / 21600.0);
      uint64_t v45 = v18;
      uint64_t v46 = *v67;
      (*v67)(v41, v42);
      if ((~*(void *)&v44 & 0x7FF0000000000000) != 0)
      {
        if (v44 <= -9.22337204e18)
        {
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          swift_bridgeObjectRetain();
          uint64_t v17 = sub_1005E2FB0();
          goto LABEL_3;
        }
        if (v44 >= 9.22337204e18) {
          goto LABEL_31;
        }
        sub_1005BC19C((uint64_t)v44, (unint64_t *)v69);
        uint64_t v45 = v62;
      }
      v46(v45, v42);
      NSString v47 = sub_1005E1BD0();
      [v5 willChangeValueForKey:v47];

      uint64_t v48 = sub_1005BA900();
      unint64_t v50 = v49;
      Class isa = sub_1005E0890().super.isa;
      sub_1000094D4(v48, v50);
      [v5 setPrimitiveDataUsage:isa];

      NSString v52 = sub_1005E1BD0();
      [v5 didChangeValueForKey:v52];

      swift_bridgeObjectRelease();
      uint64_t v18 = v45;
      unint64_t v20 = v63;
      uint64_t p_attr = (char **)(&stru_100707FF8 + 8);
LABEL_7:
      if (v17 == ++v19) {
        goto LABEL_28;
      }
    }
    swift_bridgeObjectRelease();
LABEL_18:
    unint64_t v29 = 0;
    goto LABEL_19;
  }
LABEL_28:
  swift_bridgeObjectRelease_n();
  v69[0] = 0;
  if ([v58 save:v69])
  {
    id v53 = v69[0];
    return v60(v53);
  }
  else
  {
    id v55 = v69[0];
    uint64_t v56 = sub_1005E06F0();

    swift_willThrow();
    v69[0] = 0;
    v69[1] = (id)0xE000000000000000;
    sub_1005E2C80(18);
    v81._object = (void *)0x80000001005EC4D0;
    v81._countAndFlagsBits = 0xD000000000000010;
    sub_1005E1E30(v81);
    uint64_t v68 = v56;
    sub_10000566C(&qword_100718D30);
    sub_1005E2E90();
    uint64_t result = sub_1005E2F20();
    __break(1u);
  }
  return result;
}

uint64_t sub_10055D808(uint64_t a1, uint64_t a2, uint64_t (*a3)(id))
{
  sub_10055D96C(a2);
  uint64_t v5 = *(void **)(a1 + 16);
  v8[0] = 0;
  if ([v5 save:v8]) {
    return a3(v8[0]);
  }
  id v7 = v8[0];
  sub_1005E06F0();

  swift_willThrow();
  v8[0] = 0;
  v8[1] = (id)0xE000000000000000;
  sub_1005E2C80(18);
  v9._object = (void *)0x80000001005EC4D0;
  v9._countAndFlagsBits = 0xD000000000000010;
  sub_1005E1E30(v9);
  sub_10000566C(&qword_100718D30);
  sub_1005E2E90();
  uint64_t result = sub_1005E2F20();
  __break(1u);
  return result;
}

uint64_t sub_10055D96C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = (char *)(a1 + 32);
  uint64_t result = swift_bridgeObjectRetain();
  for (uint64_t i = 0; ; uint64_t i = v8)
  {
    uint64_t v5 = v1 - i;
    uint64_t v6 = v1;
    if ((unint64_t)(v1 - i) >= 0x3E8)
    {
      uint64_t v6 = i + 1000;
      if (__OFADD__(i, 1000)) {
        goto LABEL_21;
      }
      if (v6 < i) {
        goto LABEL_17;
      }
    }
    if (v1 < v6)
    {
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      return result;
    }
    uint64_t v7 = v6 - i;
    if (v6 == i) {
      break;
    }
    if (v6 - i < 0) {
      goto LABEL_18;
    }
    if ((v5 & 0x8000000000000000) == 0 && v5 < v7) {
      goto LABEL_22;
    }
    uint64_t v8 = v6;
    if (__OFADD__(i, v7)) {
      goto LABEL_19;
    }
    if (v1 < v6) {
      goto LABEL_20;
    }
    unint64_t v9 = (2 * v6) | 1;
    swift_unknownObjectRetain();
    sub_10055E950(v2, i, v9);
    uint64_t result = swift_unknownObjectRelease();
  }
  return swift_unknownObjectRelease();
}

void sub_10055DA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10000566C(&qword_100719420);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v54.i8[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for PendingItem.Info(0);
  __chkstk_darwin(v8);
  id v10 = (unsigned __int8 *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10055E1A4(a1);
  sub_10055E788(a1, (uint64_t)v10, type metadata accessor for PendingItem.Info);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      NSString v39 = sub_1005E1BD0();
      [v2 willChangeValueForKey:v39];

      id v40 = [objc_allocWithZone((Class)NSNumber) initWithLongLong:0];
      [v2 setPrimitiveIndexGeneration:v40];

      NSString v41 = sub_1005E1BD0();
      [v2 didChangeValueForKey:v41];

      NSString v42 = [v2 managedObjectContext];
      objc_msgSend(v42, "deleteObject:", v2, *(_OWORD *)&v54, *(_OWORD *)&v55, *(_OWORD *)&v56, *(_OWORD *)&v57);
LABEL_21:

      return;
    }
    uint64_t v12 = *v10;
    int v13 = v10[1];
    int v14 = v10[2];
    int v15 = v10[3];
    int v16 = v10[4];
    int v17 = v10[5];
    uint64_t v59 = v10[6];
    uint64_t v58 = v10[7];
    int v18 = v10[8];
    NSString v19 = sub_1005E1BD0();
    [v2 willAccessValueForKey:v19];

    id v20 = [v2 primitiveFlags];
    uint64_t v21 = v20;
    if (v20)
    {
      id v22 = [v20 longLongValue];

      unint64_t v23 = sub_100556DA8((unint64_t)v22);
      LOBYTE(v21) = v24;
      int8x16_t v25 = (int8x16_t)vdupq_n_s64(v23);
      int8x16_t v57 = vandq_s8(v25, (int8x16_t)xmmword_10062A080);
      int8x16_t v55 = vandq_s8(v25, (int8x16_t)xmmword_10062A090);
      int8x16_t v54 = vandq_s8(v25, (int8x16_t)xmmword_10062A070);
      int8x16_t v56 = vandq_s8(v25, (int8x16_t)xmmword_10062A060);
    }
    else
    {
      int8x16_t v55 = 0u;
      int8x16_t v56 = 0u;
      int8x16_t v54 = 0u;
      int8x16_t v57 = 0u;
    }
    NSString v43 = sub_1005E1BD0();
    [v2 didAccessValueForKey:v43];

    int8x16_t v44 = vorrq_s8(vorrq_s8(v56, v55), vorrq_s8(v54, v57));
    uint64_t v45 = (uint64_t)vorr_s8(*(int8x8_t *)v44.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v44, v44, 8uLL));
    uint64_t v46 = 256;
    if (!v13) {
      uint64_t v46 = 0;
    }
    uint64_t v47 = v46 | v12;
    uint64_t v48 = 0x10000;
    if (!v14) {
      uint64_t v48 = 0;
    }
    uint64_t v49 = 0x1000000;
    if (!v15) {
      uint64_t v49 = 0;
    }
    uint64_t v50 = v47 | v48 | v49;
    id v51 = &_mh_execute_header;
    if (!v16) {
      id v51 = 0;
    }
    uint64_t v52 = 0x10000000000;
    if (!v17) {
      uint64_t v52 = 0;
    }
    if (static Flags.__derived_struct_equals(_:_:)(v45, v21 & 1, v50 | (unint64_t)v51 | v52 | (v59 << 48) | (v58 << 56), v18))
    {
      NSString v53 = sub_1005E1BD0();
      [v2 willChangeValueForKey:v53];

      [v2 setPrimitiveAttributeChange:0];
      NSString v42 = sub_1005E1BD0();
      objc_msgSend(v2, "didChangeValueForKey:", v42, *(_OWORD *)&v54, *(_OWORD *)&v55, *(_OWORD *)&v56, *(_OWORD *)&v57);
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v26 = type metadata accessor for IndexableMessageInfo(0);
    (*(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v7, 1, 1, v26);
    NSString v27 = sub_1005E1BD0();
    [v2 willChangeValueForKey:v27];

    sub_10057A5BC(v2, (uint64_t)v7);
    NSString v28 = sub_1005E1BD0();
    [v2 didChangeValueForKey:v28];

    sub_100007A48((uint64_t)v7, &qword_100719420);
    NSString v29 = sub_1005E1BD0();
    [v2 willChangeValueForKey:v29];

    id v30 = [objc_allocWithZone((Class)NSNumber) initWithLongLong:a2];
    [v2 setPrimitiveIndexGeneration:v30];

    NSString v31 = sub_1005E1BD0();
    [v2 didChangeValueForKey:v31];

    NSString v32 = sub_1005E1BD0();
    [v2 willChangeValueForKey:v32];

    [v2 setPrimitiveAttributeChange:0];
    NSString v33 = sub_1005E1BD0();
    [v2 didChangeValueForKey:v33];

    id v34 = sub_100579C54();
    uint64_t v35 = (uint64_t)v34 + 1;
    if (__OFADD__(v34, 1))
    {
      __break(1u);
    }
    else
    {
      NSString v36 = sub_1005E1BD0();
      [v2 willChangeValueForKey:v36];

      id v37 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v35 & ~(v35 >> 63)];
      [v2 setPrimitiveIndexCount:v37];

      NSString v38 = sub_1005E1BD0();
      [v2 didChangeValueForKey:v38];

      sub_10055E728((uint64_t)v10, type metadata accessor for PendingItem.Info);
    }
  }
}

void sub_10055E1A4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005E0970();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v29 - v9;
  id v11 = [v1 mailbox];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_100578A00(v11);
    unint64_t v15 = v14;

    if (v15)
    {
      id v16 = [v2 managedObjectContext];
      if (v16)
      {
        int v17 = v16;
        id v18 = sub_10053942C(v13, v15);
        uint64_t v19 = swift_bridgeObjectRelease();
        __chkstk_darwin(v19);
        *(&v29 - 2) = a1;
        unint64_t v30 = sub_100578CC4();
        sub_1005E0960();
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
        sub_1005E08F0();
        double v21 = round(v20 / 21600.0);
        id v22 = *(void (**)(char *, uint64_t))(v5 + 8);
        v22(v8, v4);
        if ((~*(void *)&v21 & 0x7FF0000000000000) != 0)
        {
          if (v21 <= -9.22337204e18)
          {
            __break(1u);
          }
          else if (v21 < 9.22337204e18)
          {
            sub_1005BBBF4((uint64_t)v21, &v30, (void (*)(unint64_t))sub_10055E948, (uint64_t)(&v29 - 4));
            goto LABEL_8;
          }
          __break(1u);
          return;
        }
LABEL_8:
        v22(v10, v4);
        NSString v23 = sub_1005E1BD0();
        [v18 willChangeValueForKey:v23];

        uint64_t v24 = sub_1005BA900();
        unint64_t v26 = v25;
        Class isa = sub_1005E0890().super.isa;
        sub_1000094D4(v24, v26);
        [v18 setPrimitiveDataUsage:isa];

        NSString v28 = sub_1005E1BD0();
        [v18 didChangeValueForKey:v28];

        swift_bridgeObjectRelease();
        return;
      }
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_10055E504(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PendingItem.Info(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10055E788(a2, (uint64_t)v6, type metadata accessor for PendingItem.Info);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result == 1)
    {
      uint64_t v8 = a1[1];
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v8 + 1;
      if (!v9)
      {
        a1[1] = v10;
        return result;
      }
      __break(1u);
      goto LABEL_9;
    }
  }
  else
  {
    if (__OFADD__(*a1, 1))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    ++*a1;
    return sub_10055E728((uint64_t)v6, type metadata accessor for PendingItem.Info);
  }
  return result;
}

NSString sub_10055E600()
{
  NSString result = sub_1005E1BD0();
  qword_100719338 = (uint64_t)result;
  return result;
}

uint64_t sub_10055E638(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void *sub_10055E660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100557728(a1, *(void *)(v2 + 16), a2);
}

void *sub_10055E668@<X0>(uint64_t a1@<X8>)
{
  NSString result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  char v4 = v6;
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_10055E6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100719420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10055E728(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10055E788(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10055E7F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10055E858()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10055E898()
{
  return sub_10055A9A8();
}

uint64_t sub_10055E8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10055E8B0()
{
  return swift_release();
}

uint64_t sub_10055E8B8(uint64_t a1)
{
  return sub_10055771C(a1, *(void *)(v1 + 16));
}

uint64_t sub_10055E8C0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10055E8F0()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10055E938()
{
  return sub_10055CB58(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_10055E948(void *a1)
{
  return sub_10055E504(a1, *(void *)(v1 + 16));
}

void sub_10055E950(char *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v70 = sub_1005E0970();
  char v6 = *(char **)(v70 - 8);
  __chkstk_darwin();
  unint64_t v69 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  BOOL v9 = (char *)&v67 - v8;
  id v10 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v11 = sub_1005E1BD0();
  id v12 = [v10 initWithEntityName:v11];

  sub_10000566C(&qword_100719060);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1005F6670;
  unint64_t v14 = a3 >> 1;
  uint64_t v15 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v16 = v13;
  int v17 = _swiftEmptyArrayStorage;
  unint64_t v72 = v9;
  if (v15)
  {
    uint64_t v76 = _swiftEmptyArrayStorage;
    sub_1005E2DA0();
    if (v15 < 0)
    {
      __break(1u);
      goto LABEL_56;
    }
    if (a2 <= (uint64_t)v14) {
      unint64_t v18 = v14;
    }
    else {
      unint64_t v18 = a2;
    }
    uint64_t v19 = v18 - a2;
    double v20 = (uint64_t *)&a1[8 * a2];
    a1 = (char *)&swift_initClassMetadata2_ptr;
    while (v19)
    {
      uint64_t v21 = *v20++;
      [objc_allocWithZone((Class)NSNumber) initWithLongLong:v21];
      sub_1005E2D60();
      unint64_t v14 = v76[2];
      sub_1005E2DD0();
      sub_1005E2DE0();
      sub_1005E2D70();
      --v19;
      if (!--v15)
      {
        int v17 = v76;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  a1 = (char *)&swift_initClassMetadata2_ptr;
LABEL_12:
  *(void *)(v16 + 56) = sub_10000566C(&qword_100719438);
  *(void *)(v16 + 32) = v17;
  NSString v22 = sub_1005E1BD0();
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v24 = [self predicateWithFormat:v22 argumentArray:isa];

  [v12 appendPredicate:v24];
  uint64_t v76 = 0;
  id v25 = [v12 execute:&v76];
  id v26 = v76;
  if (v25)
  {
    NSString v27 = v25;
    _s14descr1006B9AE9V7MessageCMa();
    unint64_t v14 = sub_1005E20C0();
    id v28 = v26;

    id v67 = v12;
    if (!(v14 >> 62))
    {
      uint64_t v29 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v29)
      {
LABEL_42:
        swift_bridgeObjectRelease();
        uint64_t v58 = *(void **)(v71 + 24);
        int64_t v59 = static MonotonicTime.now()();
        uint64_t v60 = (void *)v58[2];
        if (![v60 hasChanges]) {
          goto LABEL_49;
        }
        char v61 = sub_10053B710();
        id v62 = v67;
        if (v61) {
          goto LABEL_52;
        }
        uint64_t v63 = v58[6];
        uint64_t v64 = v59 - v63;
        if (v59 >= v63)
        {
          if (!__OFSUB__(v59, v63)) {
            goto LABEL_51;
          }
LABEL_58:
          __break(1u);
        }
        if (!__OFSUB__(v63, v59))
        {
          uint64_t v64 = v59 - v63;
          if (!__OFSUB__(0, v63 - v59))
          {
LABEL_51:
            if ((double)v64 / 1000000000.0 <= 4.0)
            {
LABEL_54:

              return;
            }
LABEL_52:
            if (objc_msgSend(v60, "hasChanges", v67))
            {
              uint64_t v65 = swift_retain();
              sub_10053BB44(v65, (uint64_t)v58);
              swift_release();
              v58[7] = 0;

              swift_unknownObjectRelease();
              return;
            }
            goto LABEL_54;
          }
          __break(1u);
LABEL_49:

          return;
        }
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
LABEL_15:
      if (v29 >= 1)
      {
        uint64_t v30 = 0;
        unint64_t v74 = v14;
        unint64_t v75 = v14 & 0xC000000000000001;
        uint64_t v68 = (void (**)(char *, char *, uint64_t))(v6 + 16);
        NSString v31 = (void (**)(char *, uint64_t))(v6 + 8);
        uint64_t v73 = v29;
        while (1)
        {
          if (v75) {
            NSString v32 = (char *)sub_1005E2CF0();
          }
          else {
            NSString v32 = (char *)*(id *)(v14 + 8 * v30 + 32);
          }
          char v6 = v32;
          NSString v33 = sub_1005E1BD0();
          [v6 willChangeValueForKey:v33];

          id v34 = [objc_allocWithZone(*((Class *)a1 + 383)) initWithLongLong:0];
          [v6 setPrimitiveIndexGeneration:v34];

          NSString v35 = sub_1005E1BD0();
          [v6 didChangeValueForKey:v35];

          id v36 = [v6 mailbox];
          if (!v36)
          {

            goto LABEL_18;
          }
          id v37 = v36;
          NSString v38 = sub_1005E1BD0();
          [v37 willAccessValueForKey:v38];

          id v39 = [v37 primitiveAccount];
          if (v39)
          {
            id v40 = v39;
            uint64_t v41 = sub_1005E1C00();
            unint64_t v43 = v42;

            uint64_t v44 = HIBYTE(v43) & 0xF;
            if ((v43 & 0x2000000000000000) == 0) {
              uint64_t v44 = v41 & 0xFFFFFFFFFFFFLL;
            }
            if (v44) {
              goto LABEL_29;
            }
            swift_bridgeObjectRelease();
          }
          uint64_t v41 = 0;
          unint64_t v43 = 0;
LABEL_29:
          NSString v45 = sub_1005E1BD0();
          [v37 didAccessValueForKey:v45];

          if (v43)
          {
            id v46 = sub_10053942C(v41, v43);
            swift_bridgeObjectRelease();
            uint64_t v76 = (void *)sub_100578CC4();
            a1 = v72;
            sub_1005E0960();
            uint64_t v47 = v69;
            uint64_t v48 = v70;
            (*v68)(v69, a1, v70);
            sub_1005E08F0();
            double v50 = round(v49 / 21600.0);
            unint64_t v14 = ~*(void *)&v50 & 0x7FF0000000000000;
            id v51 = *v31;
            (*v31)(v47, v48);
            if (v14)
            {
              if (v50 <= -9.22337204e18) {
                goto LABEL_38;
              }
              if (v50 >= 9.22337204e18) {
                goto LABEL_39;
              }
              sub_1005BC72C((uint64_t)v50, (unint64_t *)&v76);
              a1 = v72;
            }
            v51(a1, v48);
            NSString v52 = sub_1005E1BD0();
            [v46 willChangeValueForKey:v52];

            uint64_t v53 = sub_1005BA900();
            unint64_t v55 = v54;
            Class v56 = sub_1005E0890().super.isa;
            sub_1000094D4(v53, v55);
            [v46 setPrimitiveDataUsage:v56];

            NSString v57 = sub_1005E1BD0();
            [v46 didChangeValueForKey:v57];

            swift_bridgeObjectRelease();
            a1 = (char *)&swift_initClassMetadata2_ptr;
          }
          else
          {
          }
          uint64_t v29 = v73;
          unint64_t v14 = v74;
LABEL_18:
          if (v29 == ++v30) {
            goto LABEL_42;
          }
        }
      }
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (!v29) {
      goto LABEL_42;
    }
    goto LABEL_15;
  }
  uint64_t v66 = v76;
  sub_1005E06F0();

  swift_willThrow();
  swift_unexpectedError();
  __break(1u);
}

uint64_t sub_10055F1A0()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10055F1E0()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[4];
  *(void *)(v1 + 64) = v0[3];
  *(void *)(v1 + 72) = v2;
  swift_retain();
  return swift_release();
}

unsigned char *sub_10055F224@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_10055A71C(a1, a2);
}

BOOL sub_10055F24C(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

uint64_t sub_10055F288(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (__OFSUB__(a3, a2))
  {
    __break(1u);
    goto LABEL_15;
  }
  if (__OFSUB__(a5, a4))
  {
LABEL_15:
    __break(1u);
    return result;
  }
  uint64_t v5 = (((a3 - a2) & (unint64_t)~((a3 - a2) >> 63)) * (unsigned __int128)0x1C71C71C71C71C72uLL) >> 64;
  uint64_t v6 = a3 / 3;
  if (a3 / 3 >= result) {
    uint64_t v6 = result;
  }
  BOOL v7 = v5 >= v6;
  if (v5 < v6) {
    uint64_t v6 = (((a3 - a2) & (unint64_t)~((a3 - a2) >> 63)) * (unsigned __int128)0x1C71C71C71C71C72uLL) >> 64;
  }
  char v8 = v5 >= a3 / 12 || v7;
  if ((v8 & ((((a5 - a4) / 9) & (unint64_t)~(((a5 - a4) / 9) >> 63)) > 0xF4240)) != 0) {
    return v6;
  }
  else {
    return 0;
  }
}

ValueMetadata *_s8CapacityVMa()
{
  return &_s8CapacityVN;
}

ValueMetadata *_s15BatchSizeLimitsVMa()
{
  return &_s15BatchSizeLimitsVN;
}

uint64_t sub_10055F348(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1005E0ED0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  NSString v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + OBJC_IVAR____TtC17IMAPSearchIndexer12IndexUpdater_messagesSource) = 0;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC17IMAPSearchIndexer12IndexUpdater_didStart) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC17IMAPSearchIndexer12IndexUpdater_managedObjectContext) = a2;
  *(void *)(v4 + OBJC_IVAR____TtC17IMAPSearchIndexer12IndexUpdater_indexQueue) = a3;
  sub_100561A2C((uint64_t)a1, v4 + OBJC_IVAR____TtC17IMAPSearchIndexer12IndexUpdater_configuration, type metadata accessor for IndexUpdater.Configuration);
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  uint64_t v15 = (void *)a1[3];
  uint64_t v16 = type metadata accessor for IndexUpdater.Configuration(0);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, (char *)a1 + *(int *)(v16 + 20), v8);
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for MessagesSource();
  swift_allocObject();
  id v18 = a2;
  swift_retain();
  id v19 = v15;
  swift_retain();
  double v20 = sub_10056F108(v18, v12, v13, v14, v19, (uint64_t)v11, (uint64_t)sub_1005624BC, v17);
  sub_100561A94((uint64_t)a1, type metadata accessor for IndexUpdater.Configuration);
  swift_release();
  *(void *)(v4 + OBJC_IVAR____TtC17IMAPSearchIndexer12IndexUpdater_messagesSource) = v20;
  swift_release();
  return v4;
}

uint64_t sub_10055F56C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10055F5C4();
    return swift_release();
  }
  return result;
}

uint64_t sub_10055F5C4()
{
  uint64_t v1 = v0;
  uint64_t v71 = _s11QueuedItemsV4ItemVMa();
  __chkstk_darwin(v71);
  uint64_t v70 = (uint64_t)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for PendingItem.Info(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v75 = (uint64_t)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for PendingItem(0);
  uint64_t v5 = __chkstk_darwin(v74);
  unint64_t v72 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v69 = (uint64_t *)((char *)&v63 - v7);
  uint64_t v73 = type metadata accessor for EnqueueableItem(0);
  uint64_t v8 = __chkstk_darwin(v73);
  uint64_t v10 = (uint64_t *)((char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v63 - v11;
  uint64_t v13 = sub_10000566C(&qword_1007195D0);
  unint64_t v82 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v64 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000566C(&qword_1007195D8);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  id v18 = (unint64_t *)((char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  double v20 = (char *)&v63 - v19;
  uint64_t v21 = *(void *)(v0 + OBJC_IVAR____TtC17IMAPSearchIndexer12IndexUpdater_indexQueue);
  swift_beginAccess();
  uint64_t v79 = v21;
  uint64_t v22 = *(void *)(v21 + 48);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v22 + 48));
  uint64_t v23 = 0;
  sub_1005721FC((void **)(v22 + 16), v83);
  os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 48));
  uint64_t v24 = v83[0];
  swift_release();
  sub_100561314(v24, v83);
  id v25 = (uint64_t *)v20;
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v27 = 0;
  uint64_t v28 = v83[0];
  unint64_t v29 = *(void *)(v83[0] + 16);
  uint64_t v65 = v1 + OBJC_IVAR____TtC17IMAPSearchIndexer12IndexUpdater_configuration;
  unint64_t v77 = (uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v82 + 48);
  uint64_t v78 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v82 + 56);
  unint64_t v66 = v29;
  id v67 = (uint64_t *)v20;
  uint64_t v68 = v18;
  uint64_t v76 = v83[0];
  if (v29) {
    goto LABEL_3;
  }
LABEL_2:
  uint64_t v30 = 1;
  for (unint64_t i = v29; ; unint64_t i = v33)
  {
    (*v78)(v18, v30, 1, v13);
    sub_1005619C4((uint64_t)v18, (uint64_t)v25);
    int v38 = (*v77)(v25, 1, v13);
    uint64_t v39 = v79;
    if (v38 == 1) {
      return swift_bridgeObjectRelease();
    }
    unint64_t v82 = i;
    uint64_t v40 = *v25;
    uint64_t v41 = (uint64_t)v25 + *(int *)(v13 + 48);
    sub_100561A2C(v41, (uint64_t)v12, type metadata accessor for EnqueueableItem);
    id v42 = *(id *)(v41 + *(int *)(type metadata accessor for IndexUpdater.Element(0) + 20));
    sub_100561A94(v41, type metadata accessor for IndexUpdater.Element);
    unint64_t v43 = *(os_unfair_lock_s **)(v39 + 40);
    uint64_t v44 = v43 + 4;
    NSString v45 = v43 + 5;
    os_unfair_lock_lock(v43 + 5);
    sub_10055A71C(v44, v83);
    os_unfair_lock_unlock(v45);
    if (v83[0])
    {

      sub_100561A94((uint64_t)v12, type metadata accessor for EnqueueableItem);
      return swift_bridgeObjectRelease();
    }
    uint64_t v80 = v40;
    uint64_t v81 = v23;
    uint64_t v46 = v13;
    uint64_t v47 = v12;
    sub_100561A2C((uint64_t)v12, (uint64_t)v10, type metadata accessor for EnqueueableItem);
    uint64_t v48 = v39;
    uint64_t v49 = *(void *)(v39 + 56);
    *(void *)(v48 + 56) = v49 + 1;
    uint64_t v50 = *v10;
    id v51 = v72;
    uint64_t v52 = (uint64_t)v10 + *(int *)(v73 + 20);
    uint64_t v53 = (uint64_t)v10;
    uint64_t v54 = (uint64_t)v47;
    uint64_t v55 = v75;
    sub_100561A2C(v52, v75, type metadata accessor for PendingItem.Info);
    *id v51 = v49;
    v51[1] = v50;
    uint64_t v56 = v74;
    sub_100561A2C(v55, (uint64_t)v51 + *(int *)(v74 + 24), type metadata accessor for PendingItem.Info);
    uint64_t v57 = sub_1005832B0();
    uint64_t result = sub_100561A94(v55, type metadata accessor for PendingItem.Info);
    if (__OFADD__(v57, 1063)) {
      break;
    }
    *(void *)((char *)v51 + *(int *)(v56 + 28)) = v57 + 1063;
    uint64_t v58 = v69;
    sub_100561AF4((uint64_t)v51, (uint64_t)v69, type metadata accessor for PendingItem);
    sub_100561A94(v53, type metadata accessor for EnqueueableItem);
    uint64_t v59 = v70;
    sub_100561A2C((uint64_t)v58, v70, type metadata accessor for PendingItem);
    *(void *)(v59 + *(int *)(v71 + 20)) = v42;
    id v60 = v42;
    sub_10055C050(v59);
    sub_100561A94(v59, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
    uint64_t v61 = *v58;
    sub_100561A94((uint64_t)v58, type metadata accessor for PendingItem);

    sub_100561A94(v54, type metadata accessor for EnqueueableItem);
    uint64_t v62 = type metadata accessor for IndexUpdater.Configuration(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + *(int *)(v62 + 24)))(v80, v61);
    uint64_t v12 = (char *)v54;
    uint64_t v10 = (uint64_t *)v53;
    uint64_t v13 = v46;
    id v25 = v67;
    id v18 = v68;
    uint64_t v23 = v81;
    unint64_t v27 = v82;
    uint64_t v28 = v76;
    unint64_t v29 = v66;
    if (v82 == v66) {
      goto LABEL_2;
    }
LABEL_3:
    if (v27 >= *(void *)(v28 + 16)) {
      goto LABEL_13;
    }
    uint64_t v32 = *(void *)(type metadata accessor for IndexUpdater.Element(0) - 8);
    unint64_t v33 = v27 + 1;
    uint64_t v34 = v28
        + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))
        + *(void *)(v32 + 72) * v27;
    unint64_t v35 = v27;
    uint64_t v36 = (uint64_t)&v64[*(int *)(v13 + 48)];
    sub_100561A2C(v34, v36, type metadata accessor for IndexUpdater.Element);
    uint64_t v37 = (uint64_t)v18 + *(int *)(v13 + 48);
    unint64_t *v18 = v35;
    sub_100561AF4(v36, v37, type metadata accessor for IndexUpdater.Element);
    uint64_t v30 = 0;
  }
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_10055FD2C()
{
  sub_100561A94(v0 + OBJC_IVAR____TtC17IMAPSearchIndexer12IndexUpdater_configuration, type metadata accessor for IndexUpdater.Configuration);

  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_10055FDD4()
{
  return type metadata accessor for IndexUpdater(0);
}

uint64_t type metadata accessor for IndexUpdater(uint64_t a1)
{
  return sub_10003B314(a1, qword_100719488);
}

uint64_t sub_10055FDFC()
{
  uint64_t result = type metadata accessor for IndexUpdater.Configuration(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for IndexUpdater.Configuration(uint64_t a1)
{
  return sub_10003B314(a1, qword_100719588);
}

void *sub_10055FEDC(void *a1, uint64_t *a2, int *a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    uint64_t v3 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    uint64_t v9 = a2[1];
    uint64_t v8 = a2[2];
    *a1 = v5;
    a1[1] = v9;
    uint64_t v10 = (void *)a2[3];
    a1[2] = v8;
    a1[3] = v10;
    uint64_t v11 = a3[5];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_1005E0ED0();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_retain();
    id v16 = v10;
    v15(v12, v13, v14);
    uint64_t v17 = a3[6];
    uint64_t v18 = a3[7];
    uint64_t v19 = (void *)((char *)v3 + v17);
    double v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = (void *)((char *)v3 + v18);
    uint64_t v23 = (uint64_t *)((char *)a2 + v18);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = a3[8];
    id v26 = (void *)((char *)v3 + v25);
    unint64_t v27 = (uint64_t *)((char *)a2 + v25);
    uint64_t v28 = v27[1];
    *id v26 = *v27;
    v26[1] = v28;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v3;
}

uint64_t sub_100560028(uint64_t a1, uint64_t a2)
{
  swift_release();

  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  swift_release();
  return swift_release();
}

void *sub_1005600E0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1005E0ED0();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_retain();
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  id v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)((char *)a1 + v15);
  double v20 = (void *)((char *)a2 + v15);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1005601E0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  uint64_t v7 = (void *)a2[3];
  uint64_t v8 = (void *)a1[3];
  a1[3] = v7;
  id v9 = v7;

  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1005E0ED0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = (void *)((char *)a1 + v14);
  id v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)((char *)a1 + v18);
  double v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_release();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_100560304(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  id v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1005E0ED0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_1005603B0(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void **)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;

  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  swift_release();
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  swift_release();
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t sub_10056049C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005604B0);
}

uint64_t sub_1005604B0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1005E0ED0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100560560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100560574);
}

void *sub_100560574(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1005E0ED0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10056061C()
{
  uint64_t result = sub_1005E0ED0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_1005606C4(uint64_t a1)
{
  sub_10000566C(&qword_100719060);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1005F6670;
  id v3 = [objc_allocWithZone((Class)NSNumber) initWithLongLong:a1];
  *(void *)(v2 + 56) = sub_100562664();
  *(void *)(v2 + 32) = v3;
  NSString v4 = sub_1005E1BD0();
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [self predicateWithFormat:v4 argumentArray:isa];

  return v6;
}

id sub_1005607BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v37 = a1;
  uint64_t v3 = type metadata accessor for PendingItem.Info(0);
  __chkstk_darwin(v3);
  uint64_t v5 = &v34.i8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for EnqueueableItem(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)v34.i64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v9 = sub_100578A04();
  if ((v10 & 1) == 0)
  {
    id v11 = v9;
    NSString v12 = sub_1005E1BD0();
    [v37 willAccessValueForKey:v12];

    id v13 = [v37 primitiveAttributeChange];
    if (v13)
    {
      uint64_t v14 = v13;
      unint64_t v15 = (unint64_t)[v13 longLongValue];

      NSString v16 = sub_1005E1BD0();
      [v37 didAccessValueForKey:v16];

      if ((v15 & 0xFFFFFFFFFFFFFF01) == 1)
      {
        NSString v17 = sub_1005E1BD0();
        [v37 willAccessValueForKey:v17];

        id v18 = [v37 primitiveFlags];
        uint64_t v19 = v18;
        if (v18)
        {
          id v20 = [v18 longLongValue];

          unint64_t v21 = sub_100556DA8((unint64_t)v20);
          int v36 = v22;
          unint64_t v35 = HIWORD(v21);
          unint64_t v23 = HIBYTE(v21);
          int8x16_t v24 = (int8x16_t)vdupq_n_s64(v21);
          uint64_t v19 = (void *)(HIDWORD(v21) & 1);
          uint64_t v25 = (v21 >> 40) & 1;
          int32x4_t v26 = (int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v24, (int8x16_t)xmmword_10062A060)), (int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v24, (int8x16_t)xmmword_10062A070))));
          *(int8x8_t *)v26.i8 = vand_s8((int8x8_t)vmovn_s32(v26), (int8x8_t)0x1000100010001);
        }
        else
        {
          LOBYTE(v25) = 0;
          unint64_t v35 = 0;
          LOBYTE(v23) = 0;
          int v36 = 0;
          int32x4_t v26 = 0uLL;
        }
        int16x8_t v34 = (int16x8_t)v26;
        NSString v31 = sub_1005E1BD0();
        [v37 didAccessValueForKey:v31];

        *(_DWORD *)uint64_t v5 = vmovn_s16(v34).u32[0];
        v5[4] = (char)v19;
        v5[5] = v25;
        v5[6] = v35;
        v5[7] = v23;
        v5[8] = v36 & 1;
        swift_storeEnumTagMultiPayload();
        *uint64_t v8 = v11;
        sub_100561AF4((uint64_t)v5, (uint64_t)v8 + *(int *)(v6 + 20), type metadata accessor for PendingItem.Info);
        sub_100561AF4((uint64_t)v8, a2, type metadata accessor for EnqueueableItem);
        uint64_t v32 = type metadata accessor for IndexUpdater.Element(0);
        *(void *)(a2 + *(int *)(v32 + 20)) = v37;
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v32 - 8) + 56))(a2, 0, 1);
        id v33 = v37;
        return v33;
      }
    }
    else
    {
      NSString v27 = sub_1005E1BD0();
      [v37 didAccessValueForKey:v27];
    }
  }
  uint64_t v28 = type metadata accessor for IndexUpdater.Element(0);
  unint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
  return (id)v29(a2, 1, 1, v28);
}

uint64_t sub_100560C04(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PendingItem.Info(0);
  __chkstk_darwin(v4);
  uint64_t v6 = &v28.i8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v7 = sub_100578A04();
  char v9 = v8;
  char v10 = sub_1005E0EB0();
  os_log_type_t v11 = sub_1005E25A0();
  if (os_log_type_enabled(v10, v11))
  {
    if (v9) {
      id v12 = 0;
    }
    else {
      id v12 = v7;
    }
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v13 = 134217984;
    id v29 = v12;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Message %llu needs updating, but doesn’t have any update.", v13, 0xCu);
    swift_slowDealloc();
  }

  NSString v14 = sub_1005E1BD0();
  [a1 willAccessValueForKey:v14];

  id v15 = [a1 primitiveFlags];
  NSString v16 = v15;
  if (v15)
  {
    id v17 = [v15 longLongValue];

    unint64_t v18 = sub_100556DA8((unint64_t)v17);
    LOBYTE(v16) = v19;
    unint64_t v20 = HIWORD(v18);
    unint64_t v21 = HIBYTE(v18);
    int8x16_t v22 = (int8x16_t)vdupq_n_s64(v18);
    uint64_t v23 = HIDWORD(v18) & 1;
    uint64_t v24 = (v18 >> 40) & 1;
    int32x4_t v25 = (int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v22, (int8x16_t)xmmword_10062A060)), (int32x4_t)vceqzq_s64((int64x2_t)vandq_s8(v22, (int8x16_t)xmmword_10062A070))));
    *(int8x8_t *)v25.i8 = vand_s8((int8x8_t)vmovn_s32(v25), (int8x8_t)0x1000100010001);
  }
  else
  {
    LOBYTE(v23) = 0;
    LOBYTE(v24) = 0;
    LOBYTE(v20) = 0;
    LOBYTE(v21) = 0;
    int32x4_t v25 = 0uLL;
  }
  int16x8_t v28 = (int16x8_t)v25;
  NSString v26 = sub_1005E1BD0();
  [a1 didAccessValueForKey:v26];

  *(_DWORD *)uint64_t v6 = vmovn_s16(v28).u32[0];
  _OWORD v6[4] = v23;
  v6[5] = v24;
  v6[6] = v20;
  v6[7] = v21;
  v6[8] = v16 & 1;
  swift_storeEnumTagMultiPayload();
  sub_10055DA7C((uint64_t)v6, a2);
  return sub_100561A94((uint64_t)v6, type metadata accessor for PendingItem.Info);
}

id sub_100560EB8()
{
  NSString v0 = sub_1005E1BD0();
  Class isa = sub_1005E20B0().super.isa;
  id v2 = [self predicateWithFormat:v0 argumentArray:isa];

  return v2;
}

void sub_100560F50(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  osint log = sub_1005E0EB0();
  os_log_type_t v6 = sub_1005E25C0();
  if (os_log_type_enabled(oslog, v6))
  {
    id v7 = (_DWORD *)swift_slowAlloc();
    *id v7 = 134218240;
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else
    {
      char v8 = v7;
      sub_1005E2960();
      *((_WORD *)v8 + 6) = 2048;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, a4, (uint8_t *)v8, 0x16u);
      swift_slowDealloc();
    }
  }
  else
  {
  }
}

id sub_100561080@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = sub_100578A04();
  if (v4)
  {
    uint64_t v8 = type metadata accessor for IndexUpdater.Element(0);
    char v9 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    return (id)v9(a2, 1, 1, v8);
  }
  else
  {
    id v5 = v3;
    type metadata accessor for EnqueueableItem(0);
    type metadata accessor for PendingItem.Info(0);
    swift_storeEnumTagMultiPayload();
    *a2 = v5;
    uint64_t v6 = type metadata accessor for IndexUpdater.Element(0);
    *(void *)((char *)a2 + *(int *)(v6 + 20)) = a1;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 0, 1);
    return a1;
  }
}

id sub_1005611B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = sub_1005E0EB0();
  os_log_type_t v7 = sub_1005E25A0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Message tombstone has no Spotlight ID.", v8, 2u);
    swift_slowDealloc();
  }

  return [a4 deleteObject:a1];
}

uint64_t sub_100561274(uint64_t result)
{
  if ((*(unsigned char *)(result + OBJC_IVAR____TtC17IMAPSearchIndexer12IndexUpdater_didStart) & 1) == 0)
  {
    *(unsigned char *)(result + OBJC_IVAR____TtC17IMAPSearchIndexer12IndexUpdater_didStart) = 1;
    uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC17IMAPSearchIndexer12IndexUpdater_messagesSource);
    if (v1)
    {
      if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_didStart) & 1) == 0)
      {
        *(unsigned char *)(v1 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_didStart) = 1;
        id v2 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_contentDidChange);
        uint64_t v3 = swift_retain();
        v2(v3);
        swift_release();
      }
      return sub_10055F5C4();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_100561314(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000566C(&qword_1007195E0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v61 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v60 = (uint64_t)&v52 - v9;
  uint64_t v65 = type metadata accessor for IndexUpdater.Element(0);
  uint64_t v10 = *(void *)(v65 - 8);
  uint64_t v11 = __chkstk_darwin(v65);
  uint64_t v59 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v56 = (uint64_t)&v52 - v13;
  uint64_t v14 = *(void *)(v2 + OBJC_IVAR____TtC17IMAPSearchIndexer12IndexUpdater_messagesSource);
  if (!v14)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRelease_n();
    sub_1005E2F20();
    __break(1u);
    return;
  }
  swift_retain();
  id v15 = sub_10056F62C();
  uint64_t v55 = v16;
  uint64_t v17 = *(void *)(v14 + 40);
  if (v17 < 0)
  {
    __break(1u);
    goto LABEL_38;
  }
  unint64_t v18 = v15;
  swift_bridgeObjectRetain_n();
  swift_release();
  id v19 = v18;
  uint64_t v20 = (uint64_t)[v19 count];
  uint64_t v21 = v17;
  if (v17)
  {
    uint64_t v22 = v20;
    if (v20 >= 1)
    {
      uint64_t v53 = a2;
      uint64_t v23 = 0;
      uint64_t v24 = a1 + 56;
      uint64_t v63 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      uint64_t v54 = v10;
      uint64_t v57 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
      int32x4_t v25 = _swiftEmptyArrayStorage;
      uint64_t p_attr = &stru_100707FF8.attr;
      unint64_t v66 = (char *)&type metadata for Any + 8;
      uint64_t v58 = v3 + OBJC_IVAR____TtC17IMAPSearchIndexer12IndexUpdater_configuration;
      while (2)
      {
        uint64_t v64 = v25;
        uint64_t v62 = v21 - 1;
        while (1)
        {
          id v27 = objc_msgSend(v19, p_attr[506], v23);
          sub_1005E2A70();
          swift_unknownObjectRelease();
          _s14descr1006B9AE9V7MessageCMa();
          if (!swift_dynamicCast()) {
            goto LABEL_39;
          }
          int16x8_t v28 = v67;
          NSString v29 = sub_1005E1BD0();
          [v28 willAccessValueForKey:v29];

          id v30 = [v28 primitiveSpotlightID];
          NSString v31 = v30;
          if (v30)
          {
            id v32 = [v30 longLongValue];
          }
          else
          {
            id v32 = 0;
          }
          ++v23;
          NSString v33 = sub_1005E1BD0();
          [v28 didAccessValueForKey:v33];

          if (v31)
          {
            if (!*(void *)(a1 + 16)) {
              goto LABEL_20;
            }
            sub_1005E33F0();
            sub_1005E3450((Swift::UInt64)v32);
            Swift::Int v34 = sub_1005E3470();
            uint64_t v35 = -1 << *(unsigned char *)(a1 + 32);
            unint64_t v36 = v34 & ~v35;
            if (((*(void *)(v24 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36) & 1) == 0) {
              goto LABEL_20;
            }
            uint64_t v37 = *(void *)(a1 + 48);
            if (*(id *)(v37 + 8 * v36) != v32) {
              break;
            }
          }
LABEL_7:

          if (v23 >= v22)
          {

            a2 = v53;
            int32x4_t v25 = v64;
            goto LABEL_36;
          }
        }
        uint64_t v38 = ~v35;
        while (1)
        {
          unint64_t v36 = (v36 + 1) & v38;
          if (((*(void *)(v24 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36) & 1) == 0) {
            break;
          }
          if (*(id *)(v37 + 8 * v36) == v32) {
            goto LABEL_7;
          }
        }
LABEL_20:
        uint64_t v39 = type metadata accessor for IndexUpdater.Configuration(0);
        uint64_t v40 = v58;
        uint64_t v41 = v61;
        (*(void (**)(void *))(v58 + *(int *)(v39 + 28)))(v28);
        uint64_t v42 = (uint64_t)v41;
        unint64_t v43 = *v63;
        if ((*v63)(v42, 1, v65) == 1)
        {
          sub_100561B5C(v42);
          (*(void (**)(void *, uint64_t))(v40 + *(int *)(v39 + 32)))(v28, v55);
          uint64_t v44 = 1;
          uint64_t v45 = v60;
        }
        else
        {
          uint64_t v46 = v42;
          uint64_t v45 = v60;
          sub_100561AF4(v46, v60, type metadata accessor for IndexUpdater.Element);
          uint64_t v44 = 0;
        }
        uint64_t v47 = v65;
        (*v57)(v45, v44, 1, v65);

        uint64_t p_attr = (char **)(&stru_100707FF8 + 8);
        if (v43(v45, 1, v47) == 1)
        {
          sub_100561B5C(v45);
          int32x4_t v25 = v64;
          uint64_t v21 = v62;
          if (!v62)
          {
LABEL_35:

            a2 = v53;
            goto LABEL_36;
          }
        }
        else
        {
          uint64_t v48 = v45;
          uint64_t v49 = v56;
          sub_100561AF4(v48, v56, type metadata accessor for IndexUpdater.Element);
          sub_100561AF4(v49, v59, type metadata accessor for IndexUpdater.Element);
          int32x4_t v25 = v64;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int32x4_t v25 = (void *)sub_1005717E8(0, v25[2] + 1, 1, (unint64_t)v25);
          }
          unint64_t v51 = v25[2];
          unint64_t v50 = v25[3];
          if (v51 >= v50 >> 1) {
            int32x4_t v25 = (void *)sub_1005717E8(v50 > 1, v51 + 1, 1, (unint64_t)v25);
          }
          v25[2] = v51 + 1;
          sub_100561AF4(v59, (uint64_t)v25+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v51, type metadata accessor for IndexUpdater.Element);
          uint64_t v21 = v62;
          if (!v62) {
            goto LABEL_35;
          }
        }
        if (v23 < v22) {
          continue;
        }
        goto LABEL_35;
      }
    }
  }

  int32x4_t v25 = _swiftEmptyArrayStorage;
LABEL_36:
  swift_bridgeObjectRelease_n();

  *a2 = v25;
}

uint64_t type metadata accessor for IndexUpdater.Element(uint64_t a1)
{
  return sub_10003B314(a1, qword_100719648);
}

uint64_t sub_1005619C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_1007195D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100561A2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100561A94(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100561AF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100561B5C(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_1007195E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100561BBC(void *a1, uint64_t a2)
{
  id v40 = a1;
  uint64_t v41 = a2;
  uint64_t v2 = sub_1005E0ED0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v39 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v34 - v7;
  uint64_t v35 = (char *)&v34 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v37 = (char *)&v34 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = type metadata accessor for IndexUpdater.Configuration(0);
  id v15 = (int *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1005E0EC0();
  id v18 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v19 = sub_1005E1BD0();
  id v38 = [v18 initWithKey:v19 ascending:1];

  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v20(v11, v13, v2);
  v20(v8, v13, v2);
  unint64_t v21 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v36 = swift_allocObject();
  uint64_t v22 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
  v22(v36 + v21, v35, v2);
  uint64_t v23 = v39;
  v22((unint64_t)v39, v13, v2);
  uint64_t v24 = swift_allocObject();
  v22(v24 + v21, v23, v2);
  *uint64_t v17 = (uint64_t)sub_1005606C4;
  v17[1] = 0;
  void v17[2] = 353;
  int32x4_t v25 = v37;
  void v17[3] = (uint64_t)v38;
  v22((unint64_t)v17 + v15[7], v25, v2);
  NSString v26 = (void (**)(uint64_t, uint64_t))((char *)v17 + v15[8]);
  uint64_t v27 = v36;
  *NSString v26 = sub_1005624C8;
  v26[1] = (void (*)(uint64_t, uint64_t))v27;
  int16x8_t v28 = (id (**)@<X0>(void *@<X0>, uint64_t@<X8>))((char *)v17 + v15[9]);
  *int16x8_t v28 = sub_1005607BC;
  v28[1] = 0;
  NSString v29 = (uint64_t (**)(void *, uint64_t))((char *)v17 + v15[10]);
  *NSString v29 = sub_1005625E4;
  v29[1] = (uint64_t (*)(void *, uint64_t))v24;
  type metadata accessor for IndexUpdater(0);
  uint64_t v30 = swift_allocObject();
  id v31 = v40;
  uint64_t v32 = v41;
  swift_retain();
  sub_10055F348(v17, v31, v32);
  return v30;
}

uint64_t sub_100561F68(void *a1, uint64_t a2)
{
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v2 = sub_1005E0ED0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v41 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v36 - v7;
  uint64_t v37 = (char *)&v36 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v39 = (char *)&v36 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v36 - v12;
  uint64_t v14 = type metadata accessor for IndexUpdater.Configuration(0);
  id v15 = (int *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1005E0EC0();
  id v18 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v19 = sub_1005E1BD0();
  id v40 = [v18 initWithKey:v19 ascending:1];

  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v20(v11, v13, v2);
  v20(v8, v13, v2);
  unint64_t v21 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v38 = swift_allocObject();
  uint64_t v22 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
  v22(v38 + v21, v37, v2);
  uint64_t v23 = v41;
  v22((unint64_t)v41, v13, v2);
  unint64_t v24 = (v21 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  v22(v25 + v21, v23, v2);
  NSString v26 = v42;
  *(void *)(v25 + v24) = v42;
  *uint64_t v17 = (uint64_t)sub_100560EB8;
  v17[1] = 0;
  void v17[2] = 971;
  uint64_t v27 = v39;
  void v17[3] = (uint64_t)v40;
  v22((unint64_t)v17 + v15[7], v27, v2);
  int16x8_t v28 = (void (**)(uint64_t, uint64_t))((char *)v17 + v15[8]);
  uint64_t v29 = v38;
  *int16x8_t v28 = sub_100562328;
  v28[1] = (void (*)(uint64_t, uint64_t))v29;
  uint64_t v30 = (uint64_t *)((char *)v17 + v15[9]);
  *uint64_t v30 = sub_100561080;
  v30[1] = 0;
  id v31 = (id (**)(uint64_t, uint64_t))((char *)v17 + v15[10]);
  *id v31 = sub_1005623D8;
  v31[1] = (id (*)(uint64_t, uint64_t))v25;
  type metadata accessor for IndexUpdater(0);
  uint64_t v32 = swift_allocObject();
  id v33 = v26;
  uint64_t v34 = v43;
  swift_retain();
  sub_10055F348(v17, v33, v34);
  return v32;
}

void sub_100562328(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100562334()
{
  uint64_t v1 = sub_1005E0ED0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

id sub_1005623D8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1005E0ED0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1005611B0(a1, a2, v2 + v6, v7);
}

uint64_t sub_100562484()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005624BC()
{
  return sub_10055F56C();
}

void sub_1005624C8(uint64_t a1, uint64_t a2)
{
}

void sub_1005624D4(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v7 = *(void *)(sub_1005E0ED0() - 8);
  sub_100560F50(a1, a2, v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a3);
}

uint64_t sub_100562554()
{
  uint64_t v1 = sub_1005E0ED0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005625E4(void *a1, uint64_t a2)
{
  sub_1005E0ED0();
  return sub_100560C04(a1, a2);
}

unint64_t sub_100562664()
{
  unint64_t result = qword_1007195E8;
  if (!qword_1007195E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007195E8);
  }
  return result;
}

uint64_t *sub_1005626A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    *a1 = *a2;
    uint64_t v7 = *(int *)(type metadata accessor for EnqueueableItem(0) + 20);
    uint64_t v8 = (uint64_t *)((char *)v4 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for PendingItem.Info(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v61 = v6;
      uint64_t v12 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v12;
      uint64_t v64 = (void *)v9[2];
      v8[2] = v64;
      uint64_t v58 = (int *)type metadata accessor for PendingItem.AddMessage(0);
      uint64_t v59 = v9;
      uint64_t v13 = v58[6];
      uint64_t v60 = v8;
      uint64_t v14 = (void *)((char *)v8 + v13);
      id v15 = (void *)((char *)v9 + v13);
      uint64_t v16 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v16;
      uint64_t v17 = (int *)type metadata accessor for IndexableMessageInfo(0);
      uint64_t v18 = v17[6];
      __dst = (char *)v14 + v18;
      NSString v19 = (char *)v15 + v18;
      uint64_t v20 = sub_1005E0970();
      uint64_t v66 = *(void *)(v20 - 8);
      uint64_t v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
      swift_bridgeObjectRetain();
      id v21 = v64;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v65 = v20;
      if (v63(v19, 1, v20))
      {
        uint64_t v22 = sub_10000566C(&qword_100719228);
        memcpy(__dst, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(__dst, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(__dst, 0, 1, v20);
      }
      uint64_t v23 = v17[7];
      unint64_t v24 = (char *)v14 + v23;
      uint64_t v25 = (char *)v15 + v23;
      uint64_t v26 = *((void *)v25 + 3);
      if (v26)
      {
        uint64_t v27 = *((void *)v25 + 1);
        *(void *)unint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = v27;
        *((void *)v24 + 2) = *((void *)v25 + 2);
        *((void *)v24 + 3) = v26;
        *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
        uint64_t v28 = *((void *)v25 + 7);
        *((void *)v24 + 6) = *((void *)v25 + 6);
        *((void *)v24 + 7) = v28;
        *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
        uint64_t v29 = *((void *)v25 + 11);
        *((void *)v24 + 10) = *((void *)v25 + 10);
        *((void *)v24 + 11) = v29;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v30 = *((_OWORD *)v25 + 3);
        *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
        *((_OWORD *)v24 + 3) = v30;
        long long v31 = *((_OWORD *)v25 + 5);
        *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
        *((_OWORD *)v24 + 5) = v31;
        long long v32 = *((_OWORD *)v25 + 1);
        *(_OWORD *)unint64_t v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v32;
      }
      uint64_t v33 = v17[8];
      uint64_t v34 = (void *)((char *)v14 + v33);
      uint64_t v35 = (void *)((char *)v15 + v33);
      uint64_t v36 = v35[1];
      *uint64_t v34 = *v35;
      v34[1] = v36;
      uint64_t v37 = v17[9];
      uint64_t v38 = (void *)((char *)v14 + v37);
      uint64_t v39 = (void *)((char *)v15 + v37);
      uint64_t v40 = v39[1];
      *uint64_t v38 = *v39;
      v38[1] = v40;
      *(void *)((char *)v14 + v17[10]) = *(void *)((char *)v15 + v17[10]);
      *(_WORD *)((char *)v14 + v17[11]) = *(_WORD *)((char *)v15 + v17[11]);
      *((unsigned char *)v14 + v17[12]) = *((unsigned char *)v15 + v17[12]);
      *((unsigned char *)v14 + v17[13]) = *((unsigned char *)v15 + v17[13]);
      *((unsigned char *)v14 + v17[14]) = *((unsigned char *)v15 + v17[14]);
      uint64_t v41 = v17[15];
      uint64_t v42 = (char *)v14 + v41;
      uint64_t v43 = (char *)v15 + v41;
      int v44 = *((unsigned __int8 *)v15 + v41 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v44 == 255)
      {
        *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
        v42[16] = v43[16];
      }
      else
      {
        uint64_t v45 = *(void *)v43;
        uint64_t v46 = *((void *)v43 + 1);
        MailboxPriorityInfo.mailboxPriorityOrder.getter();
        *(void *)uint64_t v42 = v45;
        *((void *)v42 + 1) = v46;
        v42[16] = v44 & 1;
      }
      uint64_t v6 = v61;
      *(void *)((char *)v14 + v17[16]) = *(void *)((char *)v15 + v17[16]);
      uint64_t v47 = v58[7];
      uint64_t v48 = (char *)v60 + v47;
      uint64_t v49 = (char *)v59 + v47;
      *(void *)uint64_t v48 = *(void *)v49;
      v48[8] = v49[8];
      uint64_t v50 = v58[8];
      unint64_t v51 = (char *)v60 + v50;
      uint64_t v52 = (char *)v59 + v50;
      uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
      swift_bridgeObjectRetain();
      v53(v51, v52, v65);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v54 = *(int *)(v6 + 20);
    uint64_t v55 = *(void **)((char *)a2 + v54);
    *(uint64_t *)((char *)v4 + v54) = (uint64_t)v55;
    id v56 = v55;
  }
  return v4;
}

void sub_100562AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(type metadata accessor for EnqueueableItem(0) + 20);
  type metadata accessor for PendingItem.Info(0);
  if (!swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();

    uint64_t v5 = type metadata accessor for PendingItem.AddMessage(0);
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = (int *)type metadata accessor for IndexableMessageInfo(0);
    uint64_t v8 = v6 + v7[6];
    uint64_t v9 = sub_1005E0970();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    if (*(void *)(v6 + v7[7] + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(unsigned __int8 *)(v6 + v7[15] + 16) != 255) {
      sub_10024EEEC();
    }
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4 + *(int *)(v5 + 32), v9);
  }
  uint64_t v11 = *(void **)(a1 + *(int *)(a2 + 20));
}

void *sub_100562CAC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for EnqueueableItem(0) + 20);
  uint64_t v7 = (void *)((char *)v5 + v6);
  uint64_t v8 = (void *)((char *)v4 + v6);
  uint64_t v9 = type metadata accessor for PendingItem.Info(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v60 = a3;
    uint64_t v61 = v4;
    uint64_t v62 = v5;
    uint64_t v10 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v10;
    uint64_t v11 = (void *)v8[2];
    v7[2] = v11;
    uint64_t v58 = (int *)type metadata accessor for PendingItem.AddMessage(0);
    uint64_t v59 = v7;
    uint64_t v12 = v58[6];
    uint64_t v13 = (void *)((char *)v7 + v12);
    uint64_t v14 = (char *)v8 + v12;
    uint64_t v15 = *(void *)((char *)v8 + v12 + 8);
    *uint64_t v13 = *(void *)((char *)v8 + v12);
    v13[1] = v15;
    uint64_t v16 = (int *)type metadata accessor for IndexableMessageInfo(0);
    uint64_t v17 = v16[6];
    __dst = (char *)v13 + v17;
    uint64_t v63 = &v14[v17];
    uint64_t v18 = sub_1005E0970();
    uint64_t v64 = *(void *)(v18 - 8);
    NSString v19 = *(unsigned int (**)(char *, uint64_t, void *))(v64 + 48);
    uint64_t v20 = (void *)v18;
    swift_bridgeObjectRetain();
    id v21 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19(v63, 1, v20))
    {
      uint64_t v22 = sub_10000566C(&qword_100719228);
      memcpy(__dst, v63, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, void *))(v64 + 16))(__dst, v63, v20);
      (*(void (**)(char *, void, uint64_t, void *))(v64 + 56))(__dst, 0, 1, v20);
    }
    __dsta = v20;
    uint64_t v23 = v16[7];
    unint64_t v24 = (char *)v13 + v23;
    uint64_t v25 = &v14[v23];
    uint64_t v26 = *((void *)v25 + 3);
    if (v26)
    {
      uint64_t v27 = *((void *)v25 + 1);
      *(void *)unint64_t v24 = *(void *)v25;
      *((void *)v24 + 1) = v27;
      *((void *)v24 + 2) = *((void *)v25 + 2);
      *((void *)v24 + 3) = v26;
      *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
      uint64_t v28 = *((void *)v25 + 7);
      *((void *)v24 + 6) = *((void *)v25 + 6);
      *((void *)v24 + 7) = v28;
      *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
      uint64_t v29 = *((void *)v25 + 11);
      *((void *)v24 + 10) = *((void *)v25 + 10);
      *((void *)v24 + 11) = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v30 = *((_OWORD *)v25 + 3);
      *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
      *((_OWORD *)v24 + 3) = v30;
      long long v31 = *((_OWORD *)v25 + 5);
      *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
      *((_OWORD *)v24 + 5) = v31;
      long long v32 = *((_OWORD *)v25 + 1);
      *(_OWORD *)unint64_t v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v32;
    }
    uint64_t v33 = v16[8];
    uint64_t v34 = (void *)((char *)v13 + v33);
    uint64_t v35 = &v14[v33];
    uint64_t v36 = *((void *)v35 + 1);
    *uint64_t v34 = *(void *)v35;
    v34[1] = v36;
    uint64_t v37 = v16[9];
    uint64_t v38 = (void *)((char *)v13 + v37);
    uint64_t v39 = &v14[v37];
    uint64_t v40 = *((void *)v39 + 1);
    *uint64_t v38 = *(void *)v39;
    v38[1] = v40;
    *(void *)((char *)v13 + v16[10]) = *(void *)&v14[v16[10]];
    *(_WORD *)((char *)v13 + v16[11]) = *(_WORD *)&v14[v16[11]];
    *((unsigned char *)v13 + v16[12]) = v14[v16[12]];
    *((unsigned char *)v13 + v16[13]) = v14[v16[13]];
    *((unsigned char *)v13 + v16[14]) = v14[v16[14]];
    uint64_t v41 = v16[15];
    uint64_t v42 = (char *)v13 + v41;
    uint64_t v43 = &v14[v41];
    int v44 = v14[v41 + 16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v44 == 255)
    {
      *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
      v42[16] = v43[16];
    }
    else
    {
      uint64_t v45 = *(void *)v43;
      uint64_t v46 = *((void *)v43 + 1);
      MailboxPriorityInfo.mailboxPriorityOrder.getter();
      *(void *)uint64_t v42 = v45;
      *((void *)v42 + 1) = v46;
      v42[16] = v44 & 1;
    }
    uint64_t v4 = v61;
    uint64_t v5 = v62;
    a3 = v60;
    *(void *)((char *)v13 + v16[16]) = *(void *)&v14[v16[16]];
    uint64_t v47 = v58[7];
    uint64_t v48 = (char *)v59 + v47;
    uint64_t v49 = (char *)v8 + v47;
    *(void *)uint64_t v48 = *(void *)v49;
    v48[8] = v49[8];
    uint64_t v50 = v58[8];
    unint64_t v51 = (char *)v59 + v50;
    uint64_t v52 = (char *)v8 + v50;
    uint64_t v53 = *(void (**)(char *, char *, void *))(v64 + 16);
    swift_bridgeObjectRetain();
    v53(v51, v52, __dsta);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v54 = *(int *)(a3 + 20);
  uint64_t v55 = *(void **)((char *)v4 + v54);
  *(void *)((char *)v5 + v54) = v55;
  id v56 = v55;
  return v5;
}

void *sub_100563080(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for EnqueueableItem(0);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100561A94((uint64_t)a1 + v7, type metadata accessor for PendingItem.Info);
    uint64_t v10 = type metadata accessor for PendingItem.Info(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v56 = a3;
      *uint64_t v8 = *v9;
      v8[1] = v9[1];
      uint64_t v58 = (void *)v9[2];
      v8[2] = v58;
      uint64_t v53 = (int *)type metadata accessor for PendingItem.AddMessage(0);
      uint64_t v11 = v53[6];
      uint64_t v54 = v9;
      uint64_t v55 = v8;
      uint64_t v12 = (void *)((char *)v8 + v11);
      uint64_t v13 = (char *)v9 + v11;
      *uint64_t v12 = *(void *)((char *)v9 + v11);
      v12[1] = *(void *)((char *)v9 + v11 + 8);
      uint64_t v14 = (int *)type metadata accessor for IndexableMessageInfo(0);
      uint64_t v15 = v14[6];
      __dst = (char *)v12 + v15;
      uint64_t v16 = &v13[v15];
      uint64_t v17 = sub_1005E0970();
      uint64_t v61 = *(void *)(v17 - 8);
      uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
      swift_bridgeObjectRetain();
      id v18 = v58;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v57(v16, 1, v17))
      {
        uint64_t v19 = sub_10000566C(&qword_100719228);
        memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v61 + 16))(__dst, v16, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(__dst, 0, 1, v17);
      }
      __dsta = (void *)v17;
      uint64_t v20 = v14[7];
      id v21 = (void *)((char *)v12 + v20);
      uint64_t v22 = &v13[v20];
      if (*((void *)v22 + 3))
      {
        *id v21 = *(void *)v22;
        v21[1] = *((void *)v22 + 1);
        v21[2] = *((void *)v22 + 2);
        v21[3] = *((void *)v22 + 3);
        void v21[4] = *((void *)v22 + 4);
        v21[5] = *((void *)v22 + 5);
        v21[6] = *((void *)v22 + 6);
        v21[7] = *((void *)v22 + 7);
        v21[8] = *((void *)v22 + 8);
        v21[9] = *((void *)v22 + 9);
        v21[10] = *((void *)v22 + 10);
        v21[11] = *((void *)v22 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v23 = *((_OWORD *)v22 + 1);
        *(_OWORD *)id v21 = *(_OWORD *)v22;
        *((_OWORD *)v21 + 1) = v23;
        long long v24 = *((_OWORD *)v22 + 2);
        long long v25 = *((_OWORD *)v22 + 3);
        long long v26 = *((_OWORD *)v22 + 5);
        *((_OWORD *)v21 + 4) = *((_OWORD *)v22 + 4);
        *((_OWORD *)v21 + 5) = v26;
        *((_OWORD *)v21 + 2) = v24;
        *((_OWORD *)v21 + 3) = v25;
      }
      uint64_t v27 = v14[8];
      uint64_t v28 = (void *)((char *)v12 + v27);
      uint64_t v29 = &v13[v27];
      *uint64_t v28 = *(void *)v29;
      v28[1] = *((void *)v29 + 1);
      uint64_t v30 = v14[9];
      long long v31 = (void *)((char *)v12 + v30);
      long long v32 = &v13[v30];
      *long long v31 = *(void *)v32;
      v31[1] = *((void *)v32 + 1);
      *(void *)((char *)v12 + v14[10]) = *(void *)&v13[v14[10]];
      *(_WORD *)((char *)v12 + v14[11]) = *(_WORD *)&v13[v14[11]];
      *((unsigned char *)v12 + v14[12]) = v13[v14[12]];
      *((unsigned char *)v12 + v14[13]) = v13[v14[13]];
      *((unsigned char *)v12 + v14[14]) = v13[v14[14]];
      uint64_t v33 = v14[15];
      uint64_t v34 = (char *)v12 + v33;
      uint64_t v35 = &v13[v33];
      int v36 = v13[v33 + 16];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v36 == 255)
      {
        long long v37 = *(_OWORD *)v35;
        v34[16] = v35[16];
        *(_OWORD *)uint64_t v34 = v37;
      }
      else
      {
        uint64_t v38 = *(void *)v35;
        uint64_t v39 = *((void *)v35 + 1);
        MailboxPriorityInfo.mailboxPriorityOrder.getter();
        *(void *)uint64_t v34 = v38;
        *((void *)v34 + 1) = v39;
        v34[16] = v36 & 1;
      }
      a3 = v56;
      *(void *)((char *)v12 + v14[16]) = *(void *)&v13[v14[16]];
      uint64_t v40 = v53[7];
      uint64_t v41 = (char *)v55 + v40;
      uint64_t v42 = (char *)v54 + v40;
      uint64_t v43 = *(void *)v42;
      v41[8] = v42[8];
      *(void *)uint64_t v41 = v43;
      uint64_t v44 = v53[8];
      uint64_t v45 = (char *)v55 + v44;
      uint64_t v46 = (char *)v54 + v44;
      uint64_t v47 = *(void (**)(char *, char *, void *))(v61 + 16);
      swift_bridgeObjectRetain();
      v47(v45, v46, __dsta);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v48 = *(int *)(a3 + 20);
  uint64_t v49 = *(void **)((char *)a2 + v48);
  uint64_t v50 = *(void **)((char *)a1 + v48);
  *(void *)((char *)a1 + v48) = v49;
  id v51 = v49;

  return a1;
}

void *sub_1005634D0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for EnqueueableItem(0) + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)v4 + v6);
  uint64_t v9 = type metadata accessor for PendingItem.Info(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    long long v32 = v4;
    uint64_t v35 = a3;
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    v7[2] = v8[2];
    uint64_t v34 = (int *)type metadata accessor for PendingItem.AddMessage(0);
    uint64_t v10 = v34[6];
    uint64_t v11 = (char *)v7 + v10;
    uint64_t v12 = (char *)v8 + v10;
    *(_OWORD *)((char *)v7 + v10) = *(_OWORD *)((char *)v8 + v10);
    uint64_t v13 = (int *)type metadata accessor for IndexableMessageInfo(0);
    uint64_t v14 = v13[6];
    uint64_t v33 = &v11[v14];
    uint64_t v15 = &v12[v14];
    uint64_t v16 = sub_1005E0970();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_10000566C(&qword_100719228);
      memcpy(v33, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v33, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v33, 0, 1, v16);
    }
    uint64_t v19 = v13[7];
    uint64_t v20 = &v11[v19];
    id v21 = &v12[v19];
    long long v22 = *((_OWORD *)v21 + 3);
    *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
    *((_OWORD *)v20 + 3) = v22;
    long long v23 = *((_OWORD *)v21 + 5);
    *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
    *((_OWORD *)v20 + 5) = v23;
    long long v24 = *((_OWORD *)v21 + 1);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v24;
    *(_OWORD *)&v11[v13[8]] = *(_OWORD *)&v12[v13[8]];
    *(_OWORD *)&v11[v13[9]] = *(_OWORD *)&v12[v13[9]];
    *(void *)&v11[v13[10]] = *(void *)&v12[v13[10]];
    *(_WORD *)&v11[v13[11]] = *(_WORD *)&v12[v13[11]];
    v11[v13[12]] = v12[v13[12]];
    v11[v13[13]] = v12[v13[13]];
    v11[v13[14]] = v12[v13[14]];
    uint64_t v25 = v13[15];
    long long v26 = &v11[v25];
    uint64_t v27 = &v12[v25];
    *(_OWORD *)long long v26 = *(_OWORD *)v27;
    v26[16] = v27[16];
    *(void *)&v11[v13[16]] = *(void *)&v12[v13[16]];
    uint64_t v28 = v34[7];
    uint64_t v29 = (char *)v7 + v28;
    uint64_t v30 = (char *)v8 + v28;
    *(void *)uint64_t v29 = *(void *)v30;
    v29[8] = v30[8];
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))((char *)v7 + v34[8], (char *)v8 + v34[8], v16);
    swift_storeEnumTagMultiPayload();
    a3 = v35;
    uint64_t v4 = v32;
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)v4 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1005637A8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for EnqueueableItem(0);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100561A94((uint64_t)a1 + v7, type metadata accessor for PendingItem.Info);
    uint64_t v10 = type metadata accessor for PendingItem.Info(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v35 = a3;
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      v8[2] = v9[2];
      uint64_t v34 = (int *)type metadata accessor for PendingItem.AddMessage(0);
      uint64_t v11 = v34[6];
      uint64_t v12 = (char *)v8 + v11;
      uint64_t v13 = (char *)v9 + v11;
      *(_OWORD *)((char *)v8 + v11) = *(_OWORD *)((char *)v9 + v11);
      uint64_t v14 = (int *)type metadata accessor for IndexableMessageInfo(0);
      uint64_t v15 = v14[6];
      long long v37 = &v12[v15];
      uint64_t v16 = &v13[v15];
      uint64_t v17 = sub_1005E0970();
      uint64_t v36 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v16, 1, v17))
      {
        uint64_t v18 = sub_10000566C(&qword_100719228);
        memcpy(v37, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v37, v16, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v17);
      }
      uint64_t v19 = v14[7];
      uint64_t v20 = &v12[v19];
      id v21 = &v13[v19];
      long long v22 = *((_OWORD *)v21 + 3);
      *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
      *((_OWORD *)v20 + 3) = v22;
      long long v23 = *((_OWORD *)v21 + 5);
      *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
      *((_OWORD *)v20 + 5) = v23;
      long long v24 = *((_OWORD *)v21 + 1);
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v24;
      *(_OWORD *)&v12[v14[8]] = *(_OWORD *)&v13[v14[8]];
      *(_OWORD *)&v12[v14[9]] = *(_OWORD *)&v13[v14[9]];
      *(void *)&v12[v14[10]] = *(void *)&v13[v14[10]];
      *(_WORD *)&v12[v14[11]] = *(_WORD *)&v13[v14[11]];
      v12[v14[12]] = v13[v14[12]];
      v12[v14[13]] = v13[v14[13]];
      v12[v14[14]] = v13[v14[14]];
      uint64_t v25 = v14[15];
      long long v26 = &v12[v25];
      uint64_t v27 = &v13[v25];
      *(_OWORD *)long long v26 = *(_OWORD *)v27;
      v26[16] = v27[16];
      *(void *)&v12[v14[16]] = *(void *)&v13[v14[16]];
      uint64_t v28 = v34[7];
      uint64_t v29 = (char *)v8 + v28;
      uint64_t v30 = (char *)v9 + v28;
      *(void *)uint64_t v29 = *(void *)v30;
      v29[8] = v30[8];
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))((char *)v8 + v34[8], (char *)v9 + v34[8], v17);
      swift_storeEnumTagMultiPayload();
      a3 = v35;
    }
  }
  uint64_t v31 = *(int *)(a3 + 20);
  long long v32 = *(void **)((char *)a1 + v31);
  *(void *)((char *)a1 + v31) = *(void *)((char *)a2 + v31);

  return a1;
}

uint64_t sub_100563AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100563ABC);
}

uint64_t sub_100563ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EnqueueableItem(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100563B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100563B90);
}

uint64_t sub_100563B90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for EnqueueableItem(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100563C4C()
{
  uint64_t result = type metadata accessor for EnqueueableItem(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_100563CE4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005E07F0();
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  __chkstk_darwin(v4);
  uint64_t v43 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005E2700();
  __chkstk_darwin(v6);
  uint64_t v7 = sub_1005E2600();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005E0ED0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v42 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v41 - v15;
  v1[2] = a1;
  id v46 = a1;
  sub_1005E0EC0();
  uint64_t v47 = v16;
  uint64_t v48 = v12;
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v49 = v11;
  uint64_t v41 = v17;
  v17((char *)v1 + OBJC_IVAR____TtC17IMAPSearchIndexer7Indexer_logger, v16, v11);
  sub_1003C8730(0, &qword_1007197A0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v7);
  uint64_t v50 = _swiftEmptyArrayStorage;
  sub_1005668A8(&qword_1007197A8, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_workloop.Attributes);
  sub_10000566C(&qword_1007197B0);
  sub_100057E98(&qword_1007197B8, &qword_1007197B0);
  sub_1005E2AD0();
  v1[3] = sub_1005E2710();
  id v18 = objc_allocWithZone((Class)CSSearchableIndex);
  NSString v19 = sub_1005E1BD0();
  uint64_t v20 = (void (*)(char *, char *, uint64_t))[v18 initWithName:v19];

  if (qword_100718788 != -1) {
    swift_once();
  }
  uint64_t v21 = v45;
  uint64_t v22 = sub_1003461B0(v45, (uint64_t)qword_100718A88);
  uint64_t v24 = (uint64_t)v43;
  uint64_t v23 = v44;
  uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, v22, v21);
  __chkstk_darwin(v25);
  long long v26 = v47;
  *(&v41 - 2) = (void (*)(char *, char *, uint64_t))v47;
  *(&v41 - 1) = v20;
  id v27 = sub_10059DCC8(v24, (void (*)(uint64_t))sub_100566810, (uint64_t)(&v41 - 4));
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v21);
  _OWORD v2[4] = v27;
  uint64_t v28 = (uint64_t)v42;
  uint64_t v29 = v49;
  v41(v42, v26, v49);
  type metadata accessor for DelayedSave();
  swift_allocObject();
  id v30 = v27;
  uint64_t v31 = sub_10053AAC8(v30, v28);
  type metadata accessor for IndexQueue();
  swift_allocObject();
  id v32 = v30;
  swift_retain();
  uint64_t v33 = sub_10055A728((uint64_t)v32, (uint64_t)v31, 457, 80000000);
  v2[6] = v33;
  type metadata accessor for SpotlightIndexer();
  uint64_t v34 = swift_allocObject();
  swift_retain_n();
  uint64_t v35 = v20;
  v2[5] = sub_100565D68(v35, (uint64_t)v33, 23, v34);
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  sub_10055A810((uint64_t)sub_100566850, v36);
  swift_release_n();
  v2[7] = sub_100561BBC(v32, (uint64_t)v33);
  v2[8] = sub_100561F68(v32, (uint64_t)v33);
  type metadata accessor for Search();
  uint64_t v37 = swift_allocObject();
  uint64_t v38 = v46;
  *(void *)(v37 + 16) = v46;
  *(void *)(v37 + 24) = v32;
  v2[9] = v37;
  type metadata accessor for Downloader();
  swift_allocObject();
  uint64_t v39 = sub_100541098(v38, v32, v33, v31);
  swift_release();

  (*(void (**)(char *, uint64_t))(v48 + 8))(v26, v29);
  v2[10] = v39;
  return v2;
}

uint64_t sub_100564380(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1005E0ED0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = sub_1005E0EB0();
  os_log_type_t v8 = sub_1005E25A0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Unable to open existing database. Removing all existing data from Spotlight.", v9, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_100566988;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100588834;
  aBlock[3] = &unk_1006FDB80;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [a2 deleteAllSearchableItemsWithCompletionHandler:v12];
  _Block_release(v12);
  return swift_release();
}

uint64_t sub_1005645AC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    __uint64_t v2 = static MonotonicTime.now()();
    uint64_t v3 = *(NSObject **)(v1 + 32);
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v1;
    *(void *)(v4 + 24) = v2;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_100566890;
    *(void *)(v5 + 24) = v4;
    aBlock[4] = sub_100518600;
    aBlock[5] = v5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100513398;
    aBlock[3] = &unk_1006FDB08;
    uint64_t v6 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v3, v6);
    _Block_release(v6);
    LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    if (v3) {
      __break(1u);
    }
  }
  return result;
}

void sub_100564734(uint64_t a1)
{
  sub_10055A4C8();
  __uint64_t v2 = static MonotonicTime.now()();
  sub_1005B4780(v2);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC17IMAPSearchIndexer12IndexUpdater_managedObjectContext);
  uint64_t v13 = sub_100566808;
  uint64_t v14 = v3;
  uint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_10046A1E4;
  uint64_t v12 = &unk_1006FDA40;
  uint64_t v5 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  [v4 performBlock:v5];
  _Block_release(v5);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = *(void **)(v6 + OBJC_IVAR____TtC17IMAPSearchIndexer12IndexUpdater_managedObjectContext);
  uint64_t v13 = sub_100566808;
  uint64_t v14 = v6;
  uint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_10046A1E4;
  uint64_t v12 = &unk_1006FDA68;
  os_log_type_t v8 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  [v7 performBlock:v8];
  _Block_release(v8);
}

uint64_t sub_1005648C4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v26 = a3;
  uint64_t v27 = a5;
  uint64_t v25 = a2;
  uint64_t v11 = sub_1005E1850();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (uint64_t *)((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  sub_1005E2C80(29);
  swift_bridgeObjectRelease();
  unint64_t v28 = 0xD00000000000001BLL;
  unint64_t v29 = 0x80000001005EC650;
  v30._countAndFlagsBits = DownloadRequest.ID.description.getter();
  sub_1005E1E30(v30);
  swift_bridgeObjectRelease();
  sub_1005E1CE0();
  swift_bridgeObjectRelease();
  uint64_t v15 = os_transaction_create();
  swift_release();
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v17 = v27;
  _OWORD v16[2] = v15;
  v16[3] = v17;
  v16[4] = a6;
  id v18 = *(void **)(v6 + 16);
  *uint64_t v14 = v18;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  swift_unknownObjectRetain();
  swift_retain();
  id v19 = v18;
  LOBYTE(v18) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if (v18)
  {
    __uint64_t v21 = static MonotonicTime.now()();
    sub_1005B4780(v21);
    swift_retain();
    uint64_t v22 = sub_100566380(v25, v26, a4);
    swift_release();
    uint64_t v23 = *(void *)(v7 + 80);
    swift_retain();
    swift_retain();
    sub_10054F750(a1, (uint64_t)v22, v23, v7, a1, (uint64_t *)sub_100565324, (uint64_t)v16);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release_n();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100564B44(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100564B78(a3, a1, a4, a5);
}

uint64_t sub_100564B78(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  sub_1005B4A10();
  uint64_t v10 = sub_1005E0EB0();
  os_log_type_t v11 = sub_1005E25C0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 134217984;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "{%ld} Waiting for spotlight indexer to pause.", v12, 0xCu);
    swift_slowDealloc();
  }

  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v5;
  *(void *)(v13 + 24) = a1;
  *(unsigned char *)(v13 + 32) = a2;
  *(void *)(v13 + 40) = a3;
  *(void *)(v13 + 48) = a4;
  swift_retain();
  swift_retain();
  sub_1005B4C84((uint64_t)sub_100566508, v13);
  return swift_release();
}

uint64_t sub_100564CD8(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = sub_100566A28();
  return a1(v2);
}

uint64_t sub_100564D18(uint64_t a1, Swift::OpaquePointer a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v14 = sub_10000566C((uint64_t *)&unk_100719790);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v18 = (char *)&v41 - v17;
  uint64_t result = __chkstk_darwin();
  uint64_t v45 = (char *)&v41 - v20;
  uint64_t v21 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v21 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v21)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NIOIMAPCore2::MailboxName v48 = MailboxName.init(_:)(a2);
    uint64_t v22 = (void *)sub_100568A48(a3, a4, (uint64_t)v48.bytes._rawValue, v48._hashValue._value);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v22;
    if (!v22) {
      return a5(a7);
    }
    int64_t v23 = *(void *)(a7 + 16);
    uint64_t v24 = _swiftEmptyArrayStorage;
    uint64_t v43 = a1;
    if (v23)
    {
      uint64_t v41 = a6;
      uint64_t v42 = a5;
      uint64_t v47 = _swiftEmptyArrayStorage;
      sub_100590D3C(0, v23, 0);
      uint64_t v24 = v47;
      uint64_t v25 = (int *)(a7 + 32);
      unint64_t v26 = v47[2];
      do
      {
        int v28 = *v25++;
        int v27 = v28;
        uint64_t v47 = v24;
        unint64_t v29 = v24[3];
        if (v26 >= v29 >> 1)
        {
          sub_100590D3C(v29 > 1, v26 + 1, 1);
          uint64_t v24 = v47;
        }
        v24[2] = v26 + 1;
        *((_DWORD *)v24 + v26++ + 8) = v27;
        --v23;
      }
      while (v23);
      a6 = v41;
      a5 = v42;
    }
    sub_10053E98C();
    sub_1005E3680();
    uint64_t v30 = v24[2];
    uint64_t v31 = (uint64_t)v45;
    if (v30)
    {
      id v32 = (int *)(v24 + 4);
      do
      {
        int v33 = *v32++;
        int v46 = v33;
        MessageIdentifierSet.insert(_:)();
        --v30;
      }
      while (v30);
    }
    swift_bridgeObjectRelease();
    sub_100566740((uint64_t)v18, v31);
    uint64_t v34 = v44;
    sub_10056DE50(v44, v31, (uint64_t)v16);
    MessageIdentifierSet.count.getter();
    uint64_t v36 = _swiftEmptyArrayStorage;
    if (!v35) {
      goto LABEL_22;
    }
    uint64_t v37 = v35;
    uint64_t v41 = a6;
    uint64_t v42 = a5;
    uint64_t v47 = _swiftEmptyArrayStorage;
    sub_100590D14(0, v35 & ~(v35 >> 63), 0);
    uint64_t v36 = v47;
    uint64_t result = MessageIdentifierSet.startIndex.getter(v14);
    if ((v37 & 0x8000000000000000) == 0)
    {
      do
      {
        MessageIdentifierSet.subscript.getter();
        int v38 = v46;
        uint64_t v47 = v36;
        unint64_t v40 = v36[2];
        unint64_t v39 = v36[3];
        if (v40 >= v39 >> 1)
        {
          sub_100590D14(v39 > 1, v40 + 1, 1);
          uint64_t v36 = v47;
        }
        void v36[2] = v40 + 1;
        *((_DWORD *)v36 + v40 + 8) = v38;
        MessageIdentifierSet.index(_:offsetBy:)();
        --v37;
      }
      while (v37);
      a5 = v42;
      uint64_t v34 = v44;
      uint64_t v31 = (uint64_t)v45;
LABEL_22:
      a5((uint64_t)v36);

      swift_bridgeObjectRelease();
      sub_1005667A8((uint64_t)v16);
      return sub_1005667A8(v31);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id *sub_1005650D0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC17IMAPSearchIndexer7Indexer_logger;
  uint64_t v2 = sub_1005E0ED0();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_10056517C()
{
  sub_1005650D0();
  return swift_deallocClassInstance();
}

uint64_t sub_1005651D4()
{
  return type metadata accessor for Indexer();
}

uint64_t type metadata accessor for Indexer()
{
  uint64_t result = qword_1007196A8;
  if (!qword_1007196A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100565228()
{
  uint64_t result = sub_1005E0ED0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1005652E4()
{
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100565324()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

void sub_10056534C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(a1 + 48);
  swift_beginAccess();
  uint64_t v11 = *(void *)(v10 + 48);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 48));
  sub_1005721FC((void **)(v11 + 16), v27);
  os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 48));
  uint64_t v12 = v27[0];
  swift_release();
  uint64_t v13 = *(void *)(v12 + 16);
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_1005E0EB0();
  os_log_type_t v15 = sub_1005E25C0();
  BOOL v16 = os_log_type_enabled(v14, v15);
  if (v13)
  {
    if (v16)
    {
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 134218240;
      v27[0] = a2;
      sub_1005E2960();
      *(_WORD *)(v17 + 12) = 2048;
      v27[0] = v13;
      sub_1005E2960();
      os_log_type_t v18 = v15;
      id v19 = "{%ld} Spotlight indexer did pause. Index queue still has %ld item(s).";
      uint64_t v20 = v14;
      uint64_t v21 = (uint8_t *)v17;
      uint32_t v22 = 22;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v20, v18, v19, v21, v22);
      swift_slowDealloc();
    }
  }
  else if (v16)
  {
    int64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)int64_t v23 = 134217984;
    v27[0] = a2;
    sub_1005E2960();
    os_log_type_t v18 = v15;
    id v19 = "{%ld} Spotlight indexer did pause. Index queue did drain.";
    uint64_t v20 = v14;
    uint64_t v21 = v23;
    uint32_t v22 = 12;
    goto LABEL_6;
  }

  uint64_t v24 = *(void **)(a1 + 32);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a1;
  *(void *)(v25 + 24) = a2;
  *(unsigned char *)(v25 + 32) = a3;
  *(void *)(v25 + 40) = a4;
  *(void *)(v25 + 48) = a5;
  v27[4] = sub_10056655C;
  v27[5] = v25;
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 1107296256;
  v27[2] = sub_10046A1E4;
  void v27[3] = &unk_1006FD9A0;
  unint64_t v26 = _Block_copy(v27);
  swift_retain();
  swift_retain();
  swift_release();
  [v24 performBlock:v26];
  _Block_release(v26);
}

uint64_t sub_1005655F4(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  int v40 = a2;
  uint64_t v36 = a1;
  uint64_t v6 = sub_1005E1680();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v45 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1005E16C0();
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin();
  uint64_t v43 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1005E0ED0();
  uint64_t v10 = *(void *)(v39 - 8);
  __chkstk_darwin();
  uint64_t v37 = v11;
  int v38 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(*(void *)(v4 + 80) + 40);
  uint64_t v13 = *(void **)(v12 + 16);
  swift_retain();
  if ([v13 hasChanges])
  {
    uint64_t v14 = swift_retain();
    sub_10053BB44(v14, v12);
    swift_release();
    *(void *)(v12 + 56) = 0;
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  uint64_t v15 = sub_100566A28();
  uint64_t v17 = v16;
  uint64_t v47 = v18;
  uint64_t v19 = v5 + OBJC_IVAR____TtC17IMAPSearchIndexer7Indexer_logger;
  uint64_t v20 = sub_1005E0EB0();
  os_log_type_t v21 = sub_1005E25C0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 134218752;
    aBlock[0] = v36;
    uint64_t v35 = v7;
    sub_1005E2960();
    uint64_t v36 = v6;
    *(_WORD *)(v22 + 12) = 2048;
    aBlock[0] = v17;
    sub_1005E2960();
    *(_WORD *)(v22 + 22) = 2048;
    aBlock[0] = v15;
    sub_1005E2960();
    *(_WORD *)(v22 + 32) = 2048;
    aBlock[0] = IndexingStatistics.fractionCompletedAsInt.getter(v15, v17);
    uint64_t v7 = v35;
    uint64_t v6 = v36;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "{%ld} %ld of %ld (%ld%%) messages are indexed.", (uint8_t *)v22, 0x2Au);
    swift_slowDealloc();
  }

  uint64_t v36 = *(void *)(v5 + 16);
  uint64_t v24 = v38;
  uint64_t v23 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v38, v19, v39);
  unint64_t v25 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v26 = (v37 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v27 + 16) = v40;
  *(void *)(v27 + 24) = v15;
  *(void *)(v27 + 32) = v17;
  *(void *)(v27 + 40) = v47;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v27 + v25, v24, v23);
  int v28 = (void *)(v27 + v26);
  uint64_t v29 = v42;
  *int v28 = v41;
  v28[1] = v29;
  aBlock[4] = sub_10056664C;
  aBlock[5] = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046A1E4;
  aBlock[3] = &unk_1006FD9F0;
  uint64_t v30 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v31 = v43;
  sub_1005E16A0();
  NIOIMAPCore2::MailboxName v48 = _swiftEmptyArrayStorage;
  sub_1005668A8((unint64_t *)&qword_1007189F8, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000566C((uint64_t *)&unk_100719780);
  sub_100057E98((unint64_t *)&qword_100718A00, (uint64_t *)&unk_100719780);
  id v32 = v45;
  sub_1005E2AD0();
  sub_1005E2610();
  _Block_release(v30);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v32, v6);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v46);
  return swift_release();
}

uint64_t sub_100565B4C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = result - a2;
  if (__OFSUB__(result, a2))
  {
    __break(1u);
  }
  else
  {
    if (a5 - 1 >= 2)
    {
      if ((_BYTE)a5)
      {
        uint64_t v9 = sub_1005E0EB0();
        os_log_type_t v10 = sub_1005E25C0();
        BOOL v11 = os_log_type_enabled(v9, v10);
        if (v5)
        {
          if (v11)
          {
            uint64_t v12 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v12 = 134217984;
            sub_1005E2960();
            _os_log_impl((void *)&_mh_execute_header, v9, v10, "Sync did complete. Still %ld un-indexed message(s).", v12, 0xCu);
            swift_slowDealloc();
          }

          return 2;
        }
        else
        {
          if (v11)
          {
            uint64_t v13 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v13 = 0;
            _os_log_impl((void *)&_mh_execute_header, v9, v10, "Sync did complete. No un-indexed messages.", v13, 2u);
            swift_slowDealloc();
          }

          return 3;
        }
      }
      else
      {
        uint64_t v6 = sub_1005E0EB0();
        os_log_type_t v7 = sub_1005E25C0();
        if (os_log_type_enabled(v6, v7))
        {
          uint64_t v8 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v8 = 0;
          _os_log_impl((void *)&_mh_execute_header, v6, v7, "Sync did defer.", v8, 2u);
          swift_slowDealloc();
        }

        return 0;
      }
    }
    return a5;
  }
  return result;
}

uint64_t sub_100565D10()
{
  uint64_t result = Environment.init(power:appState:isLocked:thermalState:availableFileSystemSpace:unreconciledMessageCount:)(2u, 0, 0);
  word_100762380 = result & 0x1FF;
  byte_100762382 = BYTE2(result) & 1;
  qword_100762388 = v1;
  byte_100762390 = v2;
  qword_100762398 = v3;
  return result;
}

uint64_t sub_100565D68(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a3;
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  uint64_t v5 = sub_1005E1670();
  uint64_t v48 = *(void *)(v5 - 8);
  uint64_t v49 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v46 = (void *)((char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v43 = (void *)((char *)v41 - v8);
  uint64_t v9 = sub_1005E2600();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005E25F0();
  __chkstk_darwin(v13);
  uint64_t v14 = sub_1005E16C0();
  __chkstk_darwin(v14 - 8);
  *(void *)(a4 + 136) = 1;
  v41[6] = a4 + 144;
  *(void *)(a4 + 152) = 0;
  swift_unknownObjectWeakInit();
  v41[5] = sub_1003C8730(0, (unint64_t *)&qword_1007197C0);
  *(void *)(a4 + 160) = 0;
  *(void *)(a4 + 168) = 0;
  sub_1005E16A0();
  aBlock[0] = _swiftEmptyArrayStorage;
  id v41[3] = sub_1005668A8(&qword_100718A20, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  v41[2] = sub_10000566C(&qword_1007197D0);
  v41[4] = sub_100057E98(&qword_100718A28, &qword_1007197D0);
  sub_1005E2AD0();
  uint64_t v15 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  uint64_t v16 = v10 + 104;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v41[1] = v16;
  v17(v12, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v9);
  uint64_t v18 = (void *)sub_1005E2620();
  *(void *)(a4 + 32) = v18;
  id v42 = v18;
  sub_1005E16A0();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1005E2AD0();
  v17(v12, v15, v9);
  *(void *)(a4 + 40) = sub_1005E2620();
  uint64_t v19 = v44;
  *(void *)(a4 + 16) = v44;
  *(void *)(a4 + 24) = &off_1006FF220;
  *(void *)(a4 + 152) = &off_1006FD640;
  swift_unknownObjectWeakAssign();
  uint64_t v20 = v48;
  *(void *)(a4 + 48) = v47;
  *(_OWORD *)(a4 + 56) = 0u;
  *(_OWORD *)(a4 + 72) = 0u;
  *(_OWORD *)(a4 + 88) = 0u;
  *(void *)(a4 + 104) = 0;
  *(void *)(a4 + 112) = 0xC000000000000000;
  *(void *)(a4 + 120) = 0;
  *(void *)(a4 + 128) = 0;
  uint64_t v21 = (uint64_t)v43;
  *uint64_t v43 = 3;
  uint64_t v22 = enum case for DispatchTimeInterval.seconds(_:);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 104);
  uint64_t v24 = v49;
  v23(v21, enum case for DispatchTimeInterval.seconds(_:), v49);
  uint64_t v25 = (uint64_t)v46;
  void *v46 = 1;
  v23(v25, v22, v24);
  uint64_t v26 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1005668F0;
  aBlock[5] = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046A1E4;
  aBlock[3] = &unk_1006FDB30;
  uint64_t v27 = _Block_copy(aBlock);
  type metadata accessor for RestartableTimer();
  swift_allocObject();
  id v28 = v42;
  id v29 = v19;
  swift_retain();
  uint64_t v30 = RestartableTimer.init(queue:repeating:leeway:closure:)(v28, v21, v25, v27);
  swift_release();
  swift_release();
  *(void *)(a4 + 160) = v30;
  swift_release();
  uint64_t v31 = (objc_class *)_s13IndexDelegateCMa();
  id v32 = objc_allocWithZone(v31);
  swift_weakInit();
  swift_weakAssign();
  v50.receiver = v32;
  v50.super_class = v31;
  id v33 = objc_msgSendSuper2(&v50, "init");
  uint64_t v34 = *(void **)(a4 + 168);
  *(void *)(a4 + 168) = v33;

  uint64_t v35 = *(void *)(a4 + 24);
  uint64_t v36 = *(void **)(a4 + 168);
  uint64_t ObjectType = swift_getObjectType();
  int v38 = *(void (**)(void *, uint64_t, uint64_t))(v35 + 16);
  swift_unknownObjectRetain();
  id v39 = v36;
  v38(v36, ObjectType, v35);

  swift_unknownObjectRelease();
  swift_release();
  return a4;
}

void *sub_100566380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    sub_100590CF4(0, v3, 0);
    uint64_t v5 = (unsigned char *)(a1 + 66);
    do
    {
      uint64_t v6 = *(void *)(v5 - 34);
      uint64_t v7 = *(void *)(v5 - 26);
      uint64_t v18 = *(void *)(v5 - 18);
      uint64_t v15 = *(void *)(v5 - 10);
      char v16 = *v5;
      __int16 v17 = *((_WORD *)v5 - 1);
      uint64_t v8 = (void *)swift_allocObject();
      v8[2] = a2;
      id v8[3] = a3;
      uint64_t v19 = v6;
      v8[4] = v6;
      v8[5] = v7;
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v10 >= v9 >> 1) {
        sub_100590CF4(v9 > 1, v10 + 1, 1);
      }
      v5 += 40;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[7 * v10];
      v11[4] = v19;
      v11[5] = v7;
      void v11[6] = v18;
      v11[7] = v15;
      *((_WORD *)v11 + 32) = v17;
      *((unsigned char *)v11 + 66) = v16;
      v11[9] = sub_100566734;
      v11[10] = v8;
      --v3;
    }
    while (v3);
  }
  return _swiftEmptyArrayStorage;
}

void sub_100566508()
{
  sub_10056534C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_10056651C()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10056655C()
{
  return sub_1005655F4(*(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_10056658C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10056659C()
{
  return swift_release();
}

uint64_t sub_1005665A4()
{
  uint64_t v1 = sub_1005E0ED0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10056664C()
{
  uint64_t v1 = *(void *)(sub_1005E0ED0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v5 = sub_100565B4C(*(void *)(v0 + 24), *(void *)(v0 + 32), v4, v0 + v2, *(unsigned __int8 *)(v0 + 16));
  return v3(v5);
}

uint64_t sub_1005666F4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100566734(uint64_t a1, uint64_t a2)
{
  return sub_100538300(a1, a2, *(void (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_100566740(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C((uint64_t *)&unk_100719790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005667A8(uint64_t a1)
{
  uint64_t v2 = sub_10000566C((uint64_t *)&unk_100719790);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100566808()
{
  return sub_100561274(v0);
}

uint64_t sub_100566810()
{
  return sub_100564380(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100566818()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100566850()
{
  return sub_1005645AC();
}

uint64_t sub_100566858()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100566890()
{
  return sub_1005B5D70(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100566898()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005668A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005668F0()
{
  return sub_1005B4FAC();
}

uint64_t sub_1005668F8()
{
  uint64_t v1 = sub_1005E0ED0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

void sub_100566988(uint64_t a1)
{
  sub_1005E0ED0();
  sub_1005B581C(a1);
}

uint64_t sub_100566A28()
{
  uint64_t v33 = sub_100566F74();
  sub_100567280();
  uint64_t v0 = sub_1003C8730(0, &qword_1007197D8);
  NSString v1 = sub_1005E1BD0();
  uint64_t v2 = self;
  id v3 = [v2 expressionForKeyPath:v1];

  id v4 = sub_100567F48(0x6E65477865646E69, 0xEF6E6F6974617265, v3);
  id v5 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v6 = sub_1005E1BD0();
  id v7 = [v5 initWithEntityName:v6];

  [v7 setResultType:2];
  sub_10000566C(&qword_100719060);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1005F6670;
  *(void *)(v8 + 56) = v0;
  *(void *)(v8 + 32) = v4;
  id v9 = v4;
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  [v7 setPropertiesToGroupBy:isa];

  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1005F6690;
  *(void *)(v11 + 56) = v0;
  *(void *)(v11 + 32) = v9;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1005F6670;
  id v32 = v9;
  NSString v13 = sub_1005E1BD0();
  id v14 = [v2 expressionForKeyPath:v13];

  *(void *)(v12 + 56) = sub_1003C8730(0, &qword_1007197E0);
  *(void *)(v12 + 32) = v14;
  NSString v15 = sub_1005E1BD0();
  Class v16 = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v17 = [v2 expressionForFunction:v15 arguments:v16];

  id v18 = sub_100567F48(0x746E756F63, 0xE500000000000000, v17);
  *(void *)(v11 + 88) = v0;
  *(void *)(v11 + 64) = v18;
  Class v19 = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  [v7 setPropertiesToFetch:v19];

  NSString v20 = sub_1005E1BD0();
  Class v21 = sub_1005E20B0().super.isa;
  id v22 = [self predicateWithFormat:v20 argumentArray:v21];

  [v7 setPredicate:v22];
  v34[0] = 0;
  id v23 = [v7 execute:v34];
  id v24 = v34[0];
  if (v23)
  {
    uint64_t v25 = v23;
    sub_1003C8730(0, &qword_1007197E8);
    unint64_t v26 = sub_1005E20C0();
    id v27 = v24;

    v34[0] = (id)0x6E65477865646E49;
    v34[1] = (id)0xEF6E6F6974617265;
    void v34[2] = (id)0xD000000000000017;
    v34[3] = (id)0x80000001005EC480;
    v34[4] = sub_100557014;
    v34[5] = 0;
    uint64_t v34[6] = sub_10055705C;
    v34[7] = 0;
    v34[8] = sub_100557098;
    v34[9] = 0;
    uint64_t v28 = sub_1005799CC(v34);
    uint64_t v29 = sub_100568014(v26, v28, v33);

    return v29;
  }
  else
  {
    id v31 = v34[0];
    sub_1005E06F0();

    swift_willThrow();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_100566F74()
{
  uint64_t v0 = sub_100539798();
  swift_beginAccess();
  unint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t result = sub_1005E2FB0();
    uint64_t v2 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_26:
    uint64_t v5 = 0;
LABEL_27:
    swift_bridgeObjectRelease_n();
    return v5;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_26;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    unint64_t v6 = v1 & 0xC000000000000001;
    uint64_t p_attr = &stru_100707FF8.attr;
    uint64_t v8 = &stru_100707FF8.attr;
    while (1)
    {
      if (v6) {
        id v9 = (id)sub_1005E2CF0();
      }
      else {
        id v9 = *(id *)(v1 + 8 * v4 + 32);
      }
      unint64_t v10 = v9;
      if ((objc_msgSend(v9, p_attr[491], v33) & 1) != 0
        || (id v11 = [v10 v8[499]], v11, !v11))
      {
LABEL_5:

        goto LABEL_6;
      }
      NSString v12 = sub_1005E1BD0();
      [v10 willAccessValueForKey:v12];

      id v13 = [v10 primitiveAccount];
      if (!v13) {
        goto LABEL_17;
      }
      id v14 = v13;
      uint64_t v33 = v5;
      unint64_t v15 = v1;
      uint64_t v16 = v2;
      unint64_t v17 = v6;
      id v18 = p_attr;
      Class v19 = v8;
      uint64_t v20 = sub_1005E1C00();
      unint64_t v22 = v21;

      uint64_t v23 = HIBYTE(v22) & 0xF;
      uint64_t v24 = v20 & 0xFFFFFFFFFFFFLL;
      uint64_t v8 = v19;
      uint64_t p_attr = v18;
      unint64_t v6 = v17;
      uint64_t v2 = v16;
      unint64_t v1 = v15;
      uint64_t v5 = v33;
      if ((v22 & 0x2000000000000000) == 0) {
        uint64_t v23 = v24;
      }
      if (!v23) {
        break;
      }
LABEL_18:
      NSString v25 = sub_1005E1BD0();
      [v10 didAccessValueForKey:v25];

      swift_bridgeObjectRelease();
      if (!v22) {
        goto LABEL_5;
      }
      NSString v26 = sub_1005E1BD0();
      [v10 willAccessValueForKey:v26];

      id v27 = [v10 primitiveMessageCount];
      if (v27)
      {
        uint64_t v28 = v27;
        uint64_t v29 = (uint64_t)[v27 integerValue];

        uint64_t v30 = v29 & ~(v29 >> 63);
      }
      else
      {
        uint64_t v30 = 0;
      }
      NSString v31 = sub_1005E1BD0();
      [v10 didAccessValueForKey:v31];

      BOOL v32 = __OFADD__(v5, v30);
      v5 += v30;
      if (v32)
      {
        __break(1u);
        goto LABEL_25;
      }
LABEL_6:
      if (v2 == ++v4) {
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease();
LABEL_17:
    unint64_t v22 = 0;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_100567280()
{
  uint64_t v0 = sub_100539798();
  swift_beginAccess();
  unint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1005E2FB0();
    uint64_t v2 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_26:
    uint64_t v5 = 0;
LABEL_27:
    swift_bridgeObjectRelease_n();
    return v5;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_26;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    unint64_t v6 = v1 & 0xC000000000000001;
    uint64_t p_attr = &stru_100707FF8.attr;
    uint64_t v8 = &selRef_persistentStoreCoordinator;
    uint64_t v32 = v1;
    while (1)
    {
      if (v6) {
        id v9 = (id)sub_1005E2CF0();
      }
      else {
        id v9 = *(id *)(v1 + 8 * v4 + 32);
      }
      unint64_t v10 = v9;
      if (objc_msgSend(v9, p_attr[491], v32)) {
        goto LABEL_5;
      }
      id v11 = [v10 managedObjectContext];

      if (!v11) {
        goto LABEL_5;
      }
      NSString v12 = sub_1005E1BD0();
      objc_msgSend(v10, v8[111], v12);

      id v13 = [v10 primitiveAccount];
      if (!v13) {
        goto LABEL_17;
      }
      id v14 = v13;
      uint64_t v15 = v2;
      unint64_t v16 = v6;
      uint64_t v17 = v5;
      id v18 = p_attr;
      Class v19 = v8;
      uint64_t v20 = sub_1005E1C00();
      unint64_t v22 = v21;

      uint64_t v23 = HIBYTE(v22) & 0xF;
      uint64_t v24 = v20 & 0xFFFFFFFFFFFFLL;
      uint64_t v8 = v19;
      uint64_t p_attr = v18;
      uint64_t v5 = v17;
      unint64_t v6 = v16;
      uint64_t v2 = v15;
      unint64_t v1 = v32;
      if ((v22 & 0x2000000000000000) == 0) {
        uint64_t v23 = v24;
      }
      if (!v23) {
        break;
      }
LABEL_18:
      NSString v25 = sub_1005E1BD0();
      [v10 didAccessValueForKey:v25];

      swift_bridgeObjectRelease();
      if (v22)
      {
        NSString v26 = sub_1005E1BD0();
        objc_msgSend(v10, v8[111], v26);

        id v27 = [v10 primitiveMessageCount];
        if (v27)
        {
          uint64_t v28 = v27;
          uint64_t v29 = (uint64_t)[v27 integerValue];

          uint64_t v30 = v29 & ~(v29 >> 63);
        }
        else
        {
          uint64_t v30 = 0;
        }
        NSString v31 = sub_1005E1BD0();
        [v10 didAccessValueForKey:v31];

        if (v30 > v5) {
          uint64_t v5 = v30;
        }
        goto LABEL_6;
      }
LABEL_5:

LABEL_6:
      if (v2 == ++v4) {
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease();
LABEL_17:
    unint64_t v22 = 0;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_100567588()
{
  *(void *)&long long v1 = 0;
  uint64_t result = sub_1005E1960();
  __break(1u);
  return result;
}

unint64_t sub_1005679D4(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t v8 = sub_100567C78(a1, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_100083F18);
    char v10 = v22;
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0) {
      id v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      id v7 = (unsigned __int8 *)sub_1005E2D30();
    }
    unint64_t v8 = (unint64_t)sub_100083F18(v7, v5, 10);
    char v10 = v9 & 1;
    goto LABEL_39;
  }
  v23[0] = a1;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v4) {
      goto LABEL_52;
    }
    if (v4 == 1 || (BYTE1(a1) - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v8 = (BYTE1(a1) - 48);
    uint64_t v15 = v4 - 2;
    if (v15)
    {
      unint64_t v16 = (unsigned __int8 *)v23 + 2;
      while (1)
      {
        unsigned int v17 = *v16 - 48;
        if (v17 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v17);
        unint64_t v8 = 10 * v8 + v17;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v16;
        if (!--v15) {
          goto LABEL_39;
        }
      }
    }
LABEL_38:
    char v10 = 0;
    goto LABEL_39;
  }
  if (a1 != 45)
  {
    if (!v4 || (a1 - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v8 = (a1 - 48);
    uint64_t v18 = v4 - 1;
    if (v18)
    {
      uint64_t v20 = (unsigned __int8 *)v23 + 1;
      while (1)
      {
        unsigned int v21 = *v20 - 48;
        if (v21 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v21);
        unint64_t v8 = 10 * v8 + v21;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v20;
        if (!--v18) {
          goto LABEL_39;
        }
      }
    }
    goto LABEL_38;
  }
  if (v4)
  {
    if (v4 != 1 && (BYTE1(a1) - 48) <= 9u)
    {
      unint64_t v2 = 0;
      unint64_t v8 = -(uint64_t)(BYTE1(a1) - 48);
      if (BYTE1(a1) == 48)
      {
        uint64_t v11 = v4 - 2;
        if (v11)
        {
          NSString v12 = (unsigned __int8 *)v23 + 2;
          while (1)
          {
            unsigned int v13 = *v12 - 48;
            if (v13 > 9) {
              goto LABEL_36;
            }
            if (!is_mul_ok(v8, 0xAuLL)) {
              goto LABEL_36;
            }
            BOOL v14 = 10 * v8 >= v13;
            unint64_t v8 = 10 * v8 - v13;
            if (!v14) {
              goto LABEL_36;
            }
            char v10 = 0;
            ++v12;
            if (!--v11) {
              goto LABEL_39;
            }
          }
        }
        goto LABEL_38;
      }
      goto LABEL_53;
    }
LABEL_36:
    unint64_t v8 = 0;
    char v10 = 1;
    goto LABEL_39;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  char v10 = 1;
  unint64_t v8 = v2;
LABEL_39:
  swift_bridgeObjectRelease();
  if (v10) {
    return 0;
  }
  else {
    return v8;
  }
}

unsigned __int8 *sub_100567C48(unsigned __int8 *a1, uint64_t a2, int64_t a3)
{
  return sub_100083F18(a1, a2, a3);
}

uint64_t sub_100567C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100567C78(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_100083F18);
}

uint64_t sub_100567C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1005E1F40();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    char v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_100567D70();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    char v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    char v9 = (void *)sub_1005E2D30();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_100567D70()
{
  unint64_t v0 = sub_1005E1F50();
  uint64_t v4 = sub_100567DF0(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100567DF0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_10008436C(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unint64_t v11 = sub_10059095C(v9, 0),
          unint64_t v12 = sub_10008446C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_1005E1D80();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_1005E1D80();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_1005E2D30();
LABEL_4:
  return sub_1005E1D80();
}

id sub_100567F48(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  NSString v5 = sub_1005E1BD0();
  swift_bridgeObjectRelease();
  [v4 setName:v5];

  [v4 setExpression:a3];
  objc_msgSend(v4, "setExpressionResultType:", objc_msgSend(v4, "expressionResultType"));

  return v4;
}

uint64_t sub_100568014(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1005E2FB0();
    uint64_t v5 = result;
    uint64_t v24 = a3;
    if (result) {
      goto LABEL_3;
    }
LABEL_16:
    uint64_t v9 = _swiftEmptyArrayStorage;
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v24 = a3;
  if (!v5) {
    goto LABEL_16;
  }
LABEL_3:
  if (v5 < 1)
  {
LABEL_33:
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  unint64_t v8 = v4 & 0xC000000000000001;
  uint64_t v9 = _swiftEmptyArrayStorage;
  unint64_t v25 = v4;
  do
  {
    if (v8) {
      id v11 = (id)sub_1005E2CF0();
    }
    else {
      id v11 = *(id *)(v4 + 8 * v7 + 32);
    }
    unint64_t v12 = v11;
    sub_100567588();

    if ((v29 & 1) == 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_10057168C(0, v9[2] + 1, 1, v9);
      }
      unint64_t v14 = v9[2];
      unint64_t v13 = v9[3];
      if (v14 >= v13 >> 1) {
        uint64_t v9 = sub_10057168C((void *)(v13 > 1), v14 + 1, 1, v9);
      }
      void v9[2] = v14 + 1;
      uint64_t v10 = &v9[3 * v14];
      v10[4] = v26;
      *((unsigned char *)v10 + 40) = v27 & 1;
      v10[6] = v28;
      unint64_t v4 = v25;
    }
    ++v7;
  }
  while (v5 != v7);
LABEL_17:
  uint64_t result = swift_bridgeObjectRelease_n();
  uint64_t v15 = v9[2];
  if (v15)
  {
    uint64_t v16 = 0;
    uint64_t v17 = 6;
    uint64_t v18 = v9[2];
    do
    {
      uint64_t v19 = v9[v17];
      BOOL v20 = __OFADD__(v16, v19);
      v16 += v19;
      if (v20)
      {
        __break(1u);
        goto LABEL_33;
      }
      v17 += 3;
      --v18;
    }
    while (v18);
    if (v16 <= v24) {
      uint64_t v21 = v24;
    }
    else {
      uint64_t v21 = v16;
    }
    char v22 = v9 + 6;
    do
    {
      if ((*(unsigned char *)(v22 - 1) & 1) == 0 && *(v22 - 2) == a2) {
        break;
      }
      v22 += 3;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return v24 & ~(v24 >> 63);
  }
  return v21;
}

__n128 _s14NewestMessagesVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *_s7ElementVMa_0()
{
  return &_s7ElementVN_0;
}

uint64_t sub_100568284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100568298);
}

uint64_t sub_100568298(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E0ED0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_100568304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100568318);
}

uint64_t sub_100568318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E0ED0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t _s14descr1006B99F1V6LoggerVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_100719848);
}

uint64_t sub_1005683A8()
{
  return sub_1005689B8();
}

uint64_t sub_1005683B4()
{
  uint64_t v0 = sub_1005E0ED0();
  sub_10034E5B4(v0, qword_1007623A8);
  sub_1003461B0(v0, (uint64_t)qword_1007623A8);
  return sub_1005E0EC0();
}

uint64_t *sub_100568434(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005E0ED0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    uint64_t v11 = *((void *)v10 + 3);
    *((void *)v9 + 2) = *((void *)v10 + 2);
    *((void *)v9 + 3) = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100568514(uint64_t a1)
{
  uint64_t v2 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10056858C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  uint64_t v10 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10056861C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  id v8[3] = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005686C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_10056874C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  uint64_t v11 = *(void *)(v9 + 16);
  uint64_t v10 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = v11;
  *(void *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005687E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005687F4);
}

uint64_t sub_1005687F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1005688B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005688CC);
}

uint64_t sub_1005688CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005E0ED0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t _s6LoggerVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_1007198D8);
}

uint64_t sub_1005689AC()
{
  return sub_1005689B8();
}

uint64_t sub_1005689B8()
{
  uint64_t result = sub_1005E0ED0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100568A48(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  id v5 = [v4 registeredObjects];
  sub_1003C8730(0, (unint64_t *)&qword_100718A10);
  unint64_t rawValue = sub_10053BCE0();
  uint64_t v7 = sub_1005E2260();

  if ((v7 & 0xC000000000000001) != 0)
  {
    sub_1005E2B10();
    sub_1005E22D0();
    uint64_t v7 = (uint64_t)v60[1];
    uint64_t v8 = v60[2];
    id v9 = v60[3];
    id v10 = v60[4];
    unint64_t v11 = (unint64_t)v60[5];
  }
  else
  {
    id v10 = 0;
    uint64_t v12 = -1 << *(unsigned char *)(v7 + 32);
    uint64_t v8 = (void *)(v7 + 56);
    uint64_t v13 = ~v12;
    uint64_t v14 = -v12;
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v11 = v15 & *(void *)(v7 + 56);
    id v9 = (id)v13;
  }
  id v52 = v9;
  uint64_t v58 = v7 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v59 = ((unint64_t)v9 + 64) >> 6;
  uint64_t v56 = v7;
  while (1)
  {
    if (v7 < 0)
    {
      id v5 = (id)v58;
      uint64_t v19 = sub_1005E2B80();
      if (!v19) {
        goto LABEL_56;
      }
      unint64_t rawValue = v19;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v20 = v60[0];
      swift_unknownObjectRelease();
      uint64_t v18 = (char *)v10;
      uint64_t v16 = v11;
      if (!v60[0]) {
        goto LABEL_56;
      }
      goto LABEL_30;
    }
    if (v11)
    {
      uint64_t v16 = (v11 - 1) & v11;
      unint64_t v17 = __clz(__rbit64(v11)) | ((void)v10 << 6);
      uint64_t v18 = (char *)v10;
      goto LABEL_29;
    }
    uint64_t v21 = (uint64_t)v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_68;
    }
    if (v21 >= v59) {
      goto LABEL_56;
    }
    unint64_t v22 = v8[v21];
    uint64_t v18 = (char *)v10 + 1;
    if (!v22)
    {
      uint64_t v18 = (char *)v10 + 2;
      if ((uint64_t)v10 + 2 >= v59) {
        goto LABEL_56;
      }
      unint64_t v22 = v8[(void)v18];
      if (!v22)
      {
        uint64_t v18 = (char *)v10 + 3;
        if ((uint64_t)v10 + 3 >= v59) {
          goto LABEL_56;
        }
        unint64_t v22 = v8[(void)v18];
        if (!v22)
        {
          uint64_t v18 = (char *)v10 + 4;
          if ((uint64_t)v10 + 4 >= v59) {
            goto LABEL_56;
          }
          unint64_t v22 = v8[(void)v18];
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_28:
    uint64_t v16 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + ((void)v18 << 6);
LABEL_29:
    id v20 = *(id *)(*(void *)(v7 + 48) + 8 * v17);
    if (!v20) {
      goto LABEL_56;
    }
LABEL_30:
    if (objc_msgSend(v20, "isFault", v52)
      || [v20 isDeleted]
      || (id v5 = v8, _s14descr1006B9AE9V7MailboxCMa(), (v24 = swift_dynamicCastClass()) == 0))
    {

      id v10 = v18;
      unint64_t v11 = v16;
    }
    else
    {
      unint64_t v25 = (void *)v24;
      id v26 = v20;
      NSString v27 = sub_1005E1BD0();
      [v25 willAccessValueForKey:v27];

      id v28 = [v25 primitiveName];
      if (v28)
      {
        id v29 = v28;
        sub_10059BA20(v29);
        v31._unint64_t rawValue = v30;

        NIOIMAPCore2::MailboxName v61 = MailboxName.init(_:)(v31);
        unint64_t rawValue = (unint64_t)v61.bytes._rawValue;
        Swift::UInt32 value = v61._hashValue._value;
      }
      else
      {
        unint64_t rawValue = 0;
        Swift::UInt32 value = 0;
      }
      NSString v33 = sub_1005E1BD0();
      [v25 didAccessValueForKey:v33];

      if (!rawValue) {
        goto LABEL_51;
      }
      if (value != a4)
      {

        swift_bridgeObjectRelease();
        goto LABEL_55;
      }
      BOOL v34 = sub_1000255D4(rawValue, a3);
      swift_bridgeObjectRelease();
      if (v34)
      {
        NSString v35 = sub_1005E1BD0();
        [v25 willAccessValueForKey:v35];

        id v36 = [v25 primitiveAccount];
        if (!v36) {
          goto LABEL_45;
        }
        uint64_t v37 = v36;
        uint64_t v38 = sub_1005E1C00();
        unint64_t rawValue = v39;

        uint64_t v40 = HIBYTE(rawValue) & 0xF;
        if ((rawValue & 0x2000000000000000) == 0) {
          uint64_t v40 = v38 & 0xFFFFFFFFFFFFLL;
        }
        if (!v40)
        {
          swift_bridgeObjectRelease();
LABEL_45:
          uint64_t v38 = 0;
          unint64_t rawValue = 0;
        }
        NSString v41 = sub_1005E1BD0();
        [v25 didAccessValueForKey:v41];

        if (rawValue)
        {
          if (v38 == a1 && rawValue == a2)
          {
            swift_bridgeObjectRelease();

LABEL_66:
            sub_10003BC80();
            return (uint64_t)v25;
          }
          char v42 = sub_1005E3290();
          swift_bridgeObjectRelease();

          if (v42) {
            goto LABEL_66;
          }
          goto LABEL_54;
        }
LABEL_51:

        id v10 = v18;
        unint64_t v11 = v16;
        uint64_t v7 = v56;
        uint64_t v8 = v5;
      }
      else
      {

LABEL_54:
LABEL_55:
        id v10 = v18;
        unint64_t v11 = v16;
        uint64_t v7 = v56;
        uint64_t v8 = v5;
      }
    }
  }
  uint64_t v23 = (char *)v10 + 5;
  while ((char *)v59 != v23)
  {
    unint64_t v22 = v8[(void)v23++];
    if (v22)
    {
      uint64_t v18 = v23 - 1;
      goto LABEL_28;
    }
  }
LABEL_56:
  sub_10003BC80();
  id v43 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v44 = sub_1005E1BD0();
  id v5 = [v43 initWithEntityName:v44];

  [v5 setReturnsObjectsAsFaults:0];
  sub_1005550FC(a1, a2, a3, a4);
  v60[0] = 0;
  id v45 = [v5 execute:v60];
  id v46 = v60[0];
  if (v45)
  {
    uint64_t v47 = v45;
    _s14descr1006B9AE9V7MailboxCMa();
    unint64_t rawValue = sub_1005E20C0();
    id v48 = v46;

    if (!(rawValue >> 62))
    {
      unint64_t v25 = *(void **)((rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v25) {
        goto LABEL_59;
      }
      goto LABEL_63;
    }
LABEL_68:
    swift_bridgeObjectRetain();
    unint64_t v25 = (void *)sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (v25)
    {
LABEL_59:
      if ((rawValue & 0xC000000000000001) != 0)
      {
        id v49 = (id)sub_1005E2CF0();
      }
      else
      {
        if (!*(void *)((rawValue & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          __break(1u);
        }
        id v49 = *(id *)(rawValue + 32);
      }
      unint64_t v25 = v49;
    }
LABEL_63:
    swift_bridgeObjectRelease();

    return (uint64_t)v25;
  }
  id v51 = v60[0];
  sub_1005E06F0();

  swift_willThrow();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_10056913C(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = a2;
  unint64_t v3 = v2;
  sub_10000566C(&qword_100718BB8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v32 - v7;
  uint64_t v9 = sub_1005E07F0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_10057CD40(v13);
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v6, 1, 1, v9);
  sub_1005E0750();
  sub_1000094D4(v14, v16);
  sub_10056A638((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10056A638((uint64_t)v8);
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  id v17 = [v3 persistentStoreCoordinator];
  if (!v17) {
    goto LABEL_12;
  }
  uint64_t v19 = v17;
  sub_1005E0770(v18);
  uint64_t v21 = v20;
  id v22 = [v19 managedObjectIDForURIRepresentation:v20];

  if (!v22) {
    goto LABEL_12;
  }
  id v23 = [v3 objectRegisteredForID:v22];
  if (!v23)
  {
    id v34 = 0;
    id v25 = [v3 existingObjectWithID:v22 error:&v34];
    if (v25)
    {
      uint64_t v24 = v25;
      id v26 = *(void (**)(char *, uint64_t))(v10 + 8);
      id v27 = v34;
      v26(v12, v9);

      goto LABEL_9;
    }
    id v29 = v34;
    sub_1005E06F0();

    swift_willThrow();
    swift_errorRelease();
LABEL_12:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_13;
  }
  uint64_t v24 = v23;

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
LABEL_9:
  _s14descr1006B9AE9V7MailboxCMa();
  uint64_t result = swift_dynamicCastClass();
  if (result) {
    return result;
  }

LABEL_13:
  sub_10056A698();
  swift_allocError();
  uint64_t v30 = v33;
  *Swift::OpaquePointer v31 = a1;
  v31[1] = v30;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

id sub_1005694E4()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_1005E07F0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v39[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [v1 objectID];
  id rawValue = [v6 isTemporaryID];

  if (rawValue)
  {
    unint64_t v8 = sub_100578E24();
    int v10 = v9;
    sub_100569D38();
    swift_allocError();
    *(void *)uint64_t v11 = v8;
    *(_DWORD *)(v11 + 8) = v10;
    swift_willThrow();
    return rawValue;
  }
  id v12 = [v1 objectID];
  id v13 = [v12 URIRepresentation];

  sub_1005E07C0();
  uint64_t v14 = sub_1005E0760();
  unint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  switch(v16 >> 62)
  {
    case 1uLL:
      if (v14 >> 32 < (int)v14)
      {
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_100008D24(v14, v16);
      size_t v18 = sub_1005E0550();
      if (!v18) {
        goto LABEL_9;
      }
      uint64_t v19 = sub_1005E0580();
      if (__OFSUB__((int)v14, v19))
      {
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
      }
      v18 += (int)v14 - v19;
LABEL_9:
      uint64_t v20 = sub_1005E0570();
      if (v20 >= (v14 >> 32) - (int)v14) {
        uint64_t v21 = (v14 >> 32) - (int)v14;
      }
      else {
        uint64_t v21 = v20;
      }
      unint64_t v22 = v18 + v21;
      if (v18) {
        unint64_t v23 = v22;
      }
      else {
        unint64_t v23 = 0;
      }
      size_t v24 = sub_100569C84(v18, v23);
      id rawValue = OpaqueMailboxID.init(rawValue:)((Swift::OpaquePointer)v24).rawValue._rawValue;
      sub_1000094D4(v14, v16);
LABEL_29:
      sub_1000094D4(v14, v16);
      return rawValue;
    case 2uLL:
      uint64_t v25 = *(void *)(v14 + 16);
      uint64_t v26 = *(void *)(v14 + 24);
      swift_retain();
      swift_retain();
      size_t v27 = sub_1005E0550();
      if (!v27) {
        goto LABEL_19;
      }
      uint64_t v28 = sub_1005E0580();
      if (__OFSUB__(v25, v28)) {
        goto LABEL_34;
      }
      v27 += v25 - v28;
LABEL_19:
      BOOL v29 = __OFSUB__(v26, v25);
      uint64_t v30 = v26 - v25;
      if (v29) {
        goto LABEL_32;
      }
      uint64_t v31 = sub_1005E0570();
      if (v31 >= v30) {
        uint64_t v32 = v30;
      }
      else {
        uint64_t v32 = v31;
      }
      unint64_t v33 = v27 + v32;
      if (v27) {
        unint64_t v34 = v33;
      }
      else {
        unint64_t v34 = 0;
      }
      size_t v35 = sub_100569C84(v27, v34);
      id rawValue = OpaqueMailboxID.init(rawValue:)((Swift::OpaquePointer)v35).rawValue._rawValue;
      swift_release();
      swift_release();
      goto LABEL_29;
    case 3uLL:
      memset(v39, 0, 14);
      id v17 = (char *)v39;
      goto LABEL_28;
    default:
      v39[0] = v14;
      LOWORD(v39[1]) = v16;
      BYTE2(v39[1]) = BYTE2(v16);
      BYTE3(v39[1]) = BYTE3(v16);
      BYTE4(v39[1]) = BYTE4(v16);
      BYTE5(v39[1]) = BYTE5(v16);
      id v17 = (char *)v39 + BYTE6(v16);
LABEL_28:
      size_t v36 = sub_100569C84((size_t)v39, (unint64_t)v17);
      id rawValue = OpaqueMailboxID.init(rawValue:)((Swift::OpaquePointer)v36).rawValue._rawValue;
      goto LABEL_29;
  }
}

uint64_t sub_100569898(unint64_t *a1)
{
  id v3 = [v1 registeredObjects];
  sub_1003C8730(0, (unint64_t *)&qword_100718A10);
  sub_10053BCE0();
  uint64_t v4 = sub_1005E2260();

  swift_bridgeObjectRetain();
  sub_10056A0F0((uint64_t)_swiftEmptyArrayStorage, v4, (uint64_t)a1);
  id v6 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = &_swiftEmptySetSingleton;
  if ((unint64_t)v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1005E2FB0();
    uint64_t v7 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v31 = &_swiftEmptySetSingleton;
LABEL_26:
    if (v31[2] <= a1[2] >> 3)
    {
      size_t v36 = a1;
      swift_bridgeObjectRetain();
      sub_10054CFCC((uint64_t)v31);
      swift_bridgeObjectRelease();
      uint64_t v32 = v36;
      if (v36[2]) {
        goto LABEL_28;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_10054D614((uint64_t)v31, a1);
      swift_bridgeObjectRelease();
      if (v32[2])
      {
LABEL_28:
        unint64_t v33 = sub_10056A914((uint64_t)v32);
        swift_bridgeObjectRelease();
        size_t v36 = v6;
        sub_10056D940(v33);
        return (uint64_t)v36;
      }
    }
    swift_bridgeObjectRelease();
    return (uint64_t)v6;
  }
  uint64_t v7 = *(void *)(((unint64_t)v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v7) {
    goto LABEL_25;
  }
LABEL_3:
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    unint64_t v34 = a1;
    unint64_t v35 = (unint64_t)v6 & 0xC000000000000001;
    int v10 = &selRef_persistentStoreCoordinator;
    while (1)
    {
      if (v35) {
        id v11 = (id)sub_1005E2CF0();
      }
      else {
        id v11 = (id)v6[v9 + 4];
      }
      id v12 = v11;
      NSString v13 = sub_1005E1BD0();
      objc_msgSend(v12, v10[111], v13);

      id v14 = [v12 primitiveAccount];
      if (v14)
      {
        unint64_t v15 = v14;
        Swift::Int v16 = sub_1005E1C00();
        unint64_t v18 = v17;

        uint64_t v19 = HIBYTE(v18) & 0xF;
        if ((v18 & 0x2000000000000000) == 0) {
          uint64_t v19 = v16 & 0xFFFFFFFFFFFFLL;
        }
        if (v19) {
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
      }
      Swift::Int v16 = 0;
      unint64_t v18 = 0;
LABEL_16:
      NSString v20 = sub_1005E1BD0();
      [v12 didAccessValueForKey:v20];

      if (v18)
      {
        uint64_t v21 = v6;
        NSString v22 = sub_1005E1BD0();
        unint64_t v23 = v10;
        objc_msgSend(v12, v10[111], v22);

        id v24 = [v12 primitiveName];
        if (v24)
        {
          id v25 = v24;
          sub_10059BA20(v25);
          v27._id rawValue = v26;

          NIOIMAPCore2::MailboxName v38 = MailboxName.init(_:)(v27);
          id rawValue = v38.bytes._rawValue;
          Swift::UInt32 value = v38._hashValue._value;
        }
        else
        {
          id rawValue = 0;
          Swift::UInt32 value = 0;
        }
        NSString v30 = sub_1005E1BD0();
        [v12 didAccessValueForKey:v30];

        if (rawValue)
        {
          sub_1005A537C((uint64_t)&v36, v16, v18, (uint64_t)rawValue, value);
          swift_bridgeObjectRelease();
        }

        swift_bridgeObjectRelease();
        int v10 = v23;
        id v6 = v21;
      }
      else
      {
      }
      if (v7 == ++v9)
      {
        swift_bridgeObjectRelease();
        uint64_t v31 = v37;
        a1 = v34;
        goto LABEL_26;
      }
    }
  }
  __break(1u);
  return result;
}

size_t sub_100569C84(size_t result, unint64_t a2)
{
  if (!result) {
    return (size_t)_swiftEmptyArrayStorage;
  }
  id v3 = (const void *)result;
  int64_t v4 = a2 - result;
  if (a2 == result) {
    return (size_t)_swiftEmptyArrayStorage;
  }
  if (v4 < 1)
  {
    uint64_t v5 = _swiftEmptyArrayStorage;
    if (!a2) {
      goto LABEL_13;
    }
  }
  else
  {
    sub_10000566C(&qword_100719918);
    uint64_t v5 = (void *)swift_allocObject();
    uint64_t result = j__malloc_size(v5);
    uint64_t v5[2] = v4;
    v5[3] = 2 * result - 64;
    if (!a2) {
      goto LABEL_13;
    }
  }
  if ((unint64_t)v3 < a2)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      memmove(v5 + 4, v3, v4);
      return (size_t)v5;
    }
    __break(1u);
  }
LABEL_13:
  __break(1u);
  return result;
}

unint64_t sub_100569D38()
{
  unint64_t result = qword_100719910;
  if (!qword_100719910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719910);
  }
  return result;
}

uint64_t sub_100569D8C(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v3 = sub_1005E1BD0();
  id v4 = [v2 initWithEntityName:v3];

  sub_10000566C(&qword_100719060);
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = v5;
  *(_OWORD *)(v5 + 16) = xmmword_1005F6670;
  int64_t v7 = *(void *)(a1 + 16);
  unint64_t v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    uint64_t v33 = v5;
    id v34 = v4;
    uint64_t v37 = _swiftEmptyArrayStorage;
    sub_100590BF4(0, v7, 0);
    unint64_t v8 = _swiftEmptyArrayStorage;
    uint64_t v9 = sub_1000D38CC(a1);
    uint64_t v11 = v10;
    char v13 = v12 & 1;
    uint64_t v35 = a1 + 56;
    do
    {
      if (v9 < 0 || v9 >= 1 << *(unsigned char *)(a1 + 32))
      {
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
      }
      if (((*(void *)(v35 + (((unint64_t)v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_14;
      }
      if (*(_DWORD *)(a1 + 36) != v11) {
        goto LABEL_15;
      }
      id v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v9);
      uint64_t v15 = v14[1];
      uint64_t v36 = *v14;
      uint64_t v37 = v8;
      uint64_t v16 = a1;
      unint64_t v17 = v8[2];
      unint64_t v18 = v8[3];
      swift_bridgeObjectRetain();
      if (v17 >= v18 >> 1)
      {
        sub_100590BF4(v18 > 1, v17 + 1, 1);
        unint64_t v8 = v37;
      }
      v8[2] = v17 + 1;
      uint64_t v19 = &v8[2 * v17];
      id v19[4] = v36;
      v19[5] = v15;
      uint64_t v20 = sub_1000D3970(v9, v11, v13 & 1, v16);
      uint64_t v9 = v20;
      uint64_t v11 = v21;
      char v13 = v22 & 1;
      --v7;
      a1 = v16;
    }
    while (v7);
    sub_100060FF0(v20, v21, v22 & 1);
    uint64_t v6 = v33;
    id v4 = v34;
  }
  *(void *)(v6 + 56) = sub_10000566C(&qword_100719428);
  *(void *)(v6 + 32) = v8;
  NSString v23 = sub_1005E1BD0();
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v25 = [self predicateWithFormat:v23 argumentArray:isa];

  [v4 setPredicate:v25];
  [v4 setReturnsObjectsAsFaults:0];
  uint64_t v37 = 0;
  id v26 = [v4 execute:&v37];
  id v27 = v37;
  if (v26)
  {
    uint64_t v28 = v26;
    _s14descr1006B9AE9V7MailboxCMa();
    uint64_t v29 = sub_1005E20C0();
    id v30 = v27;

    return v29;
  }
  else
  {
    uint64_t v32 = v37;
    sub_1005E06F0();

    swift_willThrow();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void sub_10056A0F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1005E2B10();
    sub_1003C8730(0, (unint64_t *)&qword_100718A10);
    sub_10053BCE0();
    sub_1005E22D0();
    uint64_t v3 = v45;
    uint64_t v4 = v46;
    uint64_t v5 = v47;
    uint64_t v6 = v48;
    unint64_t v7 = v49;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v4 = a2 + 56;
    uint64_t v9 = ~v8;
    uint64_t v10 = -v8;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v7 = v11 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    uint64_t v5 = v9;
    uint64_t v6 = 0;
  }
  int64_t v43 = (unint64_t)(v5 + 64) >> 6;
  uint64_t p_attr = (char **)(&stru_100707FF8 + 8);
  uint64_t v41 = v4;
  while (1)
  {
    if (v3 < 0)
    {
      if (!sub_1005E2B80()) {
        goto LABEL_55;
      }
      sub_1003C8730(0, (unint64_t *)&qword_100718A10);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v16 = v44;
      swift_unknownObjectRelease();
      uint64_t v15 = v6;
      uint64_t v13 = v7;
      uint64_t p_attr = &stru_100707FF8.attr;
      if (!v44) {
        goto LABEL_55;
      }
      goto LABEL_32;
    }
    if (!v7) {
      break;
    }
    uint64_t v13 = (v7 - 1) & v7;
    unint64_t v14 = __clz(__rbit64(v7)) | (v6 << 6);
    uint64_t v15 = v6;
LABEL_31:
    id v16 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
    if (!v16) {
      goto LABEL_55;
    }
LABEL_32:
    if (objc_msgSend(v16, p_attr[492])
      || [v16 isDeleted]
      || (_s14descr1006B9AE9V7MailboxCMa(), (uint64_t v20 = swift_dynamicCastClass()) == 0))
    {

      uint64_t v6 = v15;
      unint64_t v7 = v13;
    }
    else
    {
      uint64_t v21 = (void *)v20;
      id v22 = v16;
      NSString v23 = sub_1005E1BD0();
      [v21 willAccessValueForKey:v23];

      id v24 = [v21 primitiveName];
      if (v24)
      {
        id v25 = v24;
        sub_10059BA20(v25);
        v27._id rawValue = v26;

        NIOIMAPCore2::MailboxName v51 = MailboxName.init(_:)(v27);
        id rawValue = v51.bytes._rawValue;
        Swift::UInt32 value = v51._hashValue._value;
      }
      else
      {
        id rawValue = 0;
        Swift::UInt32 value = 0;
      }
      NSString v29 = sub_1005E1BD0();
      [v21 didAccessValueForKey:v29];

      if (rawValue)
      {
        NSString v30 = sub_1005E1BD0();
        [v21 willAccessValueForKey:v30];

        id v31 = [v21 primitiveAccount];
        if (!v31) {
          goto LABEL_44;
        }
        uint64_t v32 = v31;
        uint64_t v33 = sub_1005E1C00();
        unint64_t v35 = v34;

        uint64_t v36 = HIBYTE(v35) & 0xF;
        if ((v35 & 0x2000000000000000) == 0) {
          uint64_t v36 = v33 & 0xFFFFFFFFFFFFLL;
        }
        if (!v36)
        {
          swift_bridgeObjectRelease();
LABEL_44:
          uint64_t v33 = 0;
          unint64_t v35 = 0;
        }
        NSString v37 = sub_1005E1BD0();
        [v21 didAccessValueForKey:v37];

        if (!v35)
        {

          swift_bridgeObjectRelease();
LABEL_53:
          uint64_t v6 = v15;
          unint64_t v7 = v13;
          uint64_t v4 = v41;
          goto LABEL_54;
        }
        char v38 = sub_100551EC0(v33, v35, (uint64_t)rawValue, value, a3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v38 & 1) == 0)
        {

          goto LABEL_53;
        }
        id v39 = v22;
        sub_1005E20A0();
        uint64_t v4 = v41;
        if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1005E2110();
        }
        sub_1005E2170();
        sub_1005E20E0();

        uint64_t v6 = v15;
        unint64_t v7 = v13;
LABEL_54:
        uint64_t p_attr = (char **)(&stru_100707FF8 + 8);
      }
      else
      {

        uint64_t v6 = v15;
        unint64_t v7 = v13;
      }
    }
  }
  int64_t v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v43) {
      goto LABEL_55;
    }
    unint64_t v18 = *(void *)(v4 + 8 * v17);
    uint64_t v15 = v6 + 1;
    if (!v18)
    {
      uint64_t v15 = v6 + 2;
      if (v6 + 2 >= v43) {
        goto LABEL_55;
      }
      unint64_t v18 = *(void *)(v4 + 8 * v15);
      if (!v18)
      {
        uint64_t v15 = v6 + 3;
        if (v6 + 3 >= v43) {
          goto LABEL_55;
        }
        unint64_t v18 = *(void *)(v4 + 8 * v15);
        if (!v18)
        {
          uint64_t v15 = v6 + 4;
          if (v6 + 4 >= v43) {
            goto LABEL_55;
          }
          unint64_t v18 = *(void *)(v4 + 8 * v15);
          if (!v18)
          {
            uint64_t v15 = v6 + 5;
            if (v6 + 5 >= v43) {
              goto LABEL_55;
            }
            unint64_t v18 = *(void *)(v4 + 8 * v15);
            if (!v18)
            {
              uint64_t v19 = v6 + 6;
              while (v43 != v19)
              {
                unint64_t v18 = *(void *)(v4 + 8 * v19++);
                if (v18)
                {
                  uint64_t v15 = v19 - 1;
                  goto LABEL_30;
                }
              }
LABEL_55:
              sub_10003BC80();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    uint64_t v13 = (v18 - 1) & v18;
    unint64_t v14 = __clz(__rbit64(v18)) + (v15 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

uint64_t sub_10056A638(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100718BB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10056A698()
{
  unint64_t result = qword_100719920;
  if (!qword_100719920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719920);
  }
  return result;
}

uint64_t sub_10056A6EC(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v3 = sub_1005E1BD0();
  id v4 = [v2 initWithEntityName:v3];

  [v4 setReturnsObjectsAsFaults:0];
  id v17 = 0;
  uint64_t v5 = swift_bridgeObjectRetain();
  id v16 = sub_1005A9034(v5);
  sub_1005558A4((uint64_t *)&v16);
  swift_bridgeObjectRelease();
  uint64_t v6 = (uint64_t)v16;
  swift_bridgeObjectRetain();
  sub_100556710(v6, a1, (uint64_t *)&v17);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1003C8730(0, &qword_100719080);
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v8 = [self orPredicateWithSubpredicates:isa];

  [v4 appendPredicate:v8];
  id v17 = 0;
  id v9 = [v4 execute:&v17];
  id v10 = v17;
  if (v9)
  {
    uint64_t v11 = v9;
    _s14descr1006B9AE9V7MailboxCMa();
    uint64_t v12 = sub_1005E20C0();
    id v13 = v10;

    return v12;
  }
  else
  {
    id v15 = v17;
    sub_1005E06F0();

    swift_willThrow();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_10056A914(uint64_t a1)
{
  id v2 = (void *)sub_10058A4E4((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v33 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v34 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v35)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      int64_t v35 = i;
      unint64_t v8 = v7 | (i << 6);
    }
    else
    {
      int64_t v9 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_37;
      }
      if (v9 >= v34)
      {
LABEL_34:
        swift_release();
        uint64_t v31 = sub_10056A6EC((uint64_t)v2);
        swift_bridgeObjectRelease();
        return v31;
      }
      unint64_t v10 = *(void *)(v33 + 8 * v9);
      int64_t v11 = i + 1;
      if (!v10)
      {
        int64_t v11 = i + 2;
        if (i + 2 >= v34) {
          goto LABEL_34;
        }
        unint64_t v10 = *(void *)(v33 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = i + 3;
          if (i + 3 >= v34) {
            goto LABEL_34;
          }
          unint64_t v10 = *(void *)(v33 + 8 * v11);
          if (!v10)
          {
            int64_t v11 = i + 4;
            if (i + 4 >= v34) {
              goto LABEL_34;
            }
            unint64_t v10 = *(void *)(v33 + 8 * v11);
            if (!v10)
            {
              int64_t v11 = i + 5;
              if (i + 5 >= v34) {
                goto LABEL_34;
              }
              unint64_t v10 = *(void *)(v33 + 8 * v11);
              if (!v10)
              {
                uint64_t v12 = i + 6;
                if (i + 6 >= v34) {
                  goto LABEL_34;
                }
                unint64_t v10 = *(void *)(v33 + 8 * v12);
                if (!v10)
                {
                  while (1)
                  {
                    int64_t v11 = v12 + 1;
                    if (__OFADD__(v12, 1)) {
                      goto LABEL_38;
                    }
                    if (v11 >= v34) {
                      goto LABEL_34;
                    }
                    unint64_t v10 = *(void *)(v33 + 8 * v11);
                    ++v12;
                    if (v10) {
                      goto LABEL_24;
                    }
                  }
                }
                int64_t v11 = i + 6;
              }
            }
          }
        }
      }
LABEL_24:
      unint64_t v5 = (v10 - 1) & v10;
      int64_t v35 = v11;
      unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    }
    uint64_t v13 = *(void *)(a1 + 48) + 32 * v8;
    uint64_t v15 = *(void *)v13;
    uint64_t v14 = *(void *)(v13 + 8);
    uint64_t v16 = *(void *)(v13 + 16);
    unsigned int v17 = *(_DWORD *)(v13 + 24);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v36 = v2;
    unint64_t v20 = sub_1005A0310(v15, v14);
    uint64_t v21 = v2[2];
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22)) {
      break;
    }
    char v24 = v19;
    if (v2[3] >= v23)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1005A4250();
        id v2 = v36;
      }
    }
    else
    {
      sub_1005A21F8(v23, isUniquelyReferenced_nonNull_native);
      id v2 = v36;
      unint64_t v25 = sub_1005A0310(v15, v14);
      if ((v24 & 1) != (v26 & 1)) {
        goto LABEL_39;
      }
      unint64_t v20 = v25;
    }
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      v2[(v20 >> 6) + 8] |= 1 << v20;
      Swift::OpaquePointer v27 = (uint64_t *)(v2[6] + 16 * v20);
      *Swift::OpaquePointer v27 = v15;
      v27[1] = v14;
      *(void *)(v2[7] + 8 * v20) = &_swiftEmptySetSingleton;
      uint64_t v28 = v2[2];
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29) {
        goto LABEL_36;
      }
      v2[2] = v30;
      swift_bridgeObjectRetain();
    }
    sub_1005A5174((uint64_t)&v36, v16, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

ValueMetadata *_s22UnknownOpaqueMailboxIDVMa()
{
  return &_s22UnknownOpaqueMailboxIDVN;
}

uint64_t _s22MailboxHasNotBeenSavedVwtk(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t _s22MailboxHasNotBeenSavedVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 12)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s22MailboxHasNotBeenSavedVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 12) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 12) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *_s22MailboxHasNotBeenSavedVMa()
{
  return &_s22MailboxHasNotBeenSavedVN;
}

ValueMetadata *_s16NoMailboxForNameVMa()
{
  return &_s16NoMailboxForNameVN;
}

ValueMetadata *type metadata accessor for AllMessagesBeingDownloaded()
{
  return &type metadata for AllMessagesBeingDownloaded;
}

void sub_10056AD78(uint64_t a1, int a2, char *a3, uint64_t a4, int a5, uint64_t a6)
{
  int v56 = a5;
  int v57 = a2;
  uint64_t v55 = type metadata accessor for MessageBeingDownloaded(0);
  uint64_t v10 = *(void *)(v55 - 8);
  __chkstk_darwin();
  uint64_t v45 = (uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v46 = (uint64_t)&v42 - v12;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v42 - v13;
  __chkstk_darwin();
  uint64_t v44 = (uint64_t)&v42 - v15;
  __chkstk_darwin();
  uint64_t v48 = (uint64_t)&v42 - v16;
  sub_10000566C(&qword_100719928);
  __chkstk_darwin();
  __chkstk_darwin();
  uint64_t v49 = (uint64_t)&v42 - v17;
  __chkstk_darwin();
  uint64_t v51 = (uint64_t)&v42 - v18;
  __chkstk_darwin();
  uint64_t v21 = (char *)&v42 - v19;
  objc_super v50 = a3;
  uint64_t v22 = *(void *)a3;
  uint64_t v23 = *(void *)(*(void *)a3 + 16);
  if (!v23)
  {
LABEL_11:
    uint64_t v31 = v55;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v21, 1, 1, v55);
    uint64_t v32 = v54;
    sub_100597E98((uint64_t)v21, a4, v56, (void *)a6);
    if (v32)
    {
      uint64_t v23 = (uint64_t)v21;
LABEL_13:
      sub_100007A48(v23, &qword_100719928);

      swift_release();
      return;
    }
    uint64_t v33 = v51;
    sub_10056BA58((uint64_t)v21, v51);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v33, 1, v31) == 1)
    {
      sub_100007A48((uint64_t)v21, &qword_100719928);
      uint64_t v21 = (char *)v33;
      goto LABEL_31;
    }
    uint64_t v34 = v48;
    sub_10056BAC0(v33, v48, type metadata accessor for MessageBeingDownloaded);
    if (*(void *)v34 != a1
      || *(_DWORD *)(v34 + 16) != v57
      || (uint64_t v23 = v10,
          id v35 = *(id *)(v34 + 8),
          unint64_t v36 = sub_100578BD8(),
          v35,
          (v36 & 0x100000000) != 0)
      || v36 != v57)
    {
      sub_10056B9F8(v34, type metadata accessor for MessageBeingDownloaded);
      goto LABEL_31;
    }
    sub_10056B990(v34, v44, type metadata accessor for MessageBeingDownloaded);
    uint64_t v14 = v50;
    uint64_t v28 = *(unint64_t **)v50;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_21:
      unint64_t v38 = v28[2];
      unint64_t v37 = v28[3];
      if (v38 >= v37 >> 1) {
        uint64_t v28 = (unint64_t *)sub_100571A9C(v37 > 1, v38 + 1, 1, (unint64_t)v28);
      }
      v28[2] = v38 + 1;
      sub_10056BAC0(v44, (uint64_t)v28+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v38, type metadata accessor for MessageBeingDownloaded);
      *(void *)uint64_t v14 = v28;
      sub_10056B9F8(v48, type metadata accessor for MessageBeingDownloaded);
      goto LABEL_31;
    }
LABEL_35:
    uint64_t v28 = (unint64_t *)sub_100571A9C(0, v28[2] + 1, 1, (unint64_t)v28);
    goto LABEL_21;
  }
  uint64_t v43 = v20;
  uint64_t v47 = (char *)&v42 - v19;
  uint64_t v52 = a4;
  uint64_t v53 = (void *)a6;
  uint64_t v21 = (char *)((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  uint64_t v24 = *(void *)(v10 + 72);
  swift_bridgeObjectRetain();
  unint64_t v25 = 0;
  while (1)
  {
    uint64_t v26 = *(void *)&v21[v22];
    sub_10056B990((uint64_t)&v21[v22], (uint64_t)v14, type metadata accessor for MessageBeingDownloaded);
    if (v26 == a1) {
      break;
    }
    sub_10056B9F8((uint64_t)v14, type metadata accessor for MessageBeingDownloaded);
LABEL_4:
    ++v25;
    v21 += v24;
    if (v23 == v25)
    {
      swift_bridgeObjectRelease();
      a4 = v52;
      a6 = (uint64_t)v53;
      uint64_t v21 = v47;
      goto LABEL_11;
    }
  }
  a6 = *((unsigned int *)v14 + 4);
  sub_10056B9F8((uint64_t)v14, type metadata accessor for MessageBeingDownloaded);
  if (a6 != v57) {
    goto LABEL_4;
  }
  uint64_t v27 = v10;
  swift_bridgeObjectRelease();
  uint64_t v28 = (unint64_t *)v50;
  unint64_t v29 = *(void *)v50;
  if (v25 >= *(void *)(*(void *)v50 + 16))
  {
    __break(1u);
LABEL_33:
    unint64_t v29 = sub_1005721A4(v29);
    *uint64_t v28 = v29;
    goto LABEL_28;
  }
  uint64_t v23 = v49;
  sub_10056B990((uint64_t)&v21[v29], v49, type metadata accessor for MessageBeingDownloaded);
  uint64_t v14 = (char *)v55;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v55);
  uint64_t v30 = v54;
  sub_100597E98(v23, v52, v56, v53);
  if (v30)
  {
    a6 = (uint64_t)v53;
    goto LABEL_13;
  }
  a6 = v43;
  sub_10056BA58(v23, v43);
  if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v27 + 48))(a6, 1, v14) == 1)
  {
    sub_100007A48(a6, &qword_100719928);
    uint64_t v39 = v45;
    sub_10058B0CC(v25, v45);
    uint64_t v40 = v39;
    goto LABEL_30;
  }
  uint64_t v27 = v46;
  sub_10056BAC0(a6, v46, type metadata accessor for MessageBeingDownloaded);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v28 = v29;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_33;
  }
LABEL_28:
  if (v25 >= *(void *)(v29 + 16))
  {
    __break(1u);
    goto LABEL_35;
  }
  sub_10056BB28(v27, (uint64_t)&v21[v29]);
  uint64_t v40 = v27;
LABEL_30:
  sub_10056B9F8(v40, type metadata accessor for MessageBeingDownloaded);
  uint64_t v21 = (char *)v23;
  a6 = (uint64_t)v53;
LABEL_31:
  sub_100007A48((uint64_t)v21, &qword_100719928);
  swift_release();
}

uint64_t sub_10056B428@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1005E07F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  int64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MessageBeingDownloaded.State(0);
  __chkstk_darwin();
  uint64_t v11 = (uint64_t *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v12 = sub_100578BD8();
  if (v12 & 0x100000000) != 0 || (int v13 = v12, v14 = sub_100579E1C(), (v15))
  {

    uint64_t v21 = type metadata accessor for MessageBeingDownloaded(0);
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
    return v22(a3, 1, 1, v21);
  }
  else
  {
    uint64_t v16 = (uint64_t)v14;
    if (qword_100718788 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1003461B0(v6, (uint64_t)qword_100718A88);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v17, v6);
    MessageSectionData.Concatenator.init(expectedMessageSize:inMemoryThreshold:baseDirectory:)(v16, 1000000, (uint64_t)v9, v11);
    uint64_t v18 = type metadata accessor for MessageSectionData.Concatenator(0);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 0, 2, v18);
    *(void *)a3 = a1;
    *(void *)(a3 + 8) = a2;
    *(_DWORD *)(a3 + 16) = v13;
    uint64_t v19 = type metadata accessor for MessageBeingDownloaded(0);
    sub_10056BAC0((uint64_t)v11, a3 + *(int *)(v19 + 28), type metadata accessor for MessageBeingDownloaded.State);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a3, 0, 1, v19);
  }
}

uint64_t sub_10056B6E0(uint64_t a1)
{
  type metadata accessor for MessageBeingDownloaded.State(0);
  __chkstk_darwin();
  unint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MessageSectionData.Concatenator(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  int64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v1 + *(int *)(type metadata accessor for MessageBeingDownloaded(0) + 28);
  sub_10056B990(v10, (uint64_t)v5, type metadata accessor for MessageBeingDownloaded.State);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 2, v6)) {
    return sub_10056B9F8((uint64_t)v5, type metadata accessor for MessageBeingDownloaded.State);
  }
  uint64_t v12 = a1;
  int v13 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v13(v9, v5, v6);
  MessageSectionData.Concatenator.appendData(_:)(v12);
  sub_10056B9F8(v10, type metadata accessor for MessageBeingDownloaded.State);
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v10, 1, 2, v6);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    v13((char *)v10, v9, v6);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 2, v6);
  }
}

uint64_t type metadata accessor for MessageBeingDownloaded.State(uint64_t a1)
{
  return sub_10003B314(a1, (uint64_t *)&unk_1007199B8);
}

uint64_t type metadata accessor for MessageBeingDownloaded(uint64_t a1)
{
  return sub_10003B314(a1, qword_100719A20);
}

uint64_t sub_10056B990(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10056B9F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10056BA58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100719928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10056BAC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10056BB28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageBeingDownloaded(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id sub_10056BB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  uint64_t v53 = sub_1005E17E0();
  uint64_t v51 = *(void *)(v53 - 8);
  __chkstk_darwin();
  uint64_t v49 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Message(0);
  __chkstk_darwin();
  uint64_t v47 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100719420);
  __chkstk_darwin();
  uint64_t v45 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v48 = (uint64_t)&v42 - v6;
  uint64_t v52 = type metadata accessor for IndexableMessageInfo(0);
  uint64_t v50 = *(void *)(v52 - 8);
  __chkstk_darwin();
  uint64_t v44 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100719930);
  __chkstk_darwin();
  int64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MessageSectionData.Concatenator.Completed(0);
  uint64_t v56 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MessageBeingDownloaded.State(0);
  __chkstk_darwin();
  id v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for MessageSectionData.Concatenator(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v2 + *(int *)(type metadata accessor for MessageBeingDownloaded(0) + 28);
  sub_10056B990(v19, (uint64_t)v14, type metadata accessor for MessageBeingDownloaded.State);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 2, v15))
  {
    sub_10056B9F8((uint64_t)v14, type metadata accessor for MessageBeingDownloaded.State);
LABEL_5:
    sub_10056C364();
    swift_allocError();
    return (id)swift_willThrow();
  }
  uint64_t v42 = v2;
  uint64_t v43 = v19;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  MessageSectionData.Concatenator.completed.getter((uint64_t)v9);
  uint64_t v20 = v15;
  uint64_t v21 = v18;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v9, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v20);
    sub_100007A48((uint64_t)v9, &qword_100719930);
    goto LABEL_5;
  }
  uint64_t v23 = (uint64_t)v12;
  sub_10056BAC0((uint64_t)v9, (uint64_t)v12, type metadata accessor for MessageSectionData.Concatenator.Completed);
  uint64_t v24 = (uint64_t)v49;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v49, v12, v53);
  uint64_t v25 = v47;
  Message.init(_:)(v24, v47);
  uint64_t v26 = v55;
  swift_retain();
  uint64_t v27 = v48;
  IndexableMessageInfo.init(message:maximumTextCount:cache:)(v25, v54, v26, v48);
  uint64_t v28 = v50;
  uint64_t v29 = v52;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v27, 1, v52) == 1)
  {
    sub_100007A48(v27, &qword_100719420);
    uint64_t v30 = v43;
    sub_10056B9F8(v43, type metadata accessor for MessageBeingDownloaded.State);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v30, 1, 2, v20);
    sub_10056C3B8();
    swift_allocError();
    swift_willThrow();
    sub_10056B9F8((uint64_t)v12, type metadata accessor for MessageSectionData.Concatenator.Completed);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v20);
  }
  else
  {
    uint64_t v55 = (uint64_t)v21;
    uint64_t v56 = v20;
    uint64_t v31 = v44;
    sub_10056BAC0(v27, v44, type metadata accessor for IndexableMessageInfo);
    uint64_t v32 = v42;
    uint64_t v33 = *(void **)(v42 + 8);
    uint64_t v34 = v45;
    sub_10056B990(v31, v45, type metadata accessor for IndexableMessageInfo);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v34, 0, 1, v29);
    NSString v35 = sub_1005E1BD0();
    [v33 willChangeValueForKey:v35];

    uint64_t v36 = v46;
    sub_10057A5BC(v33, v34);
    if (v36)
    {
      id result = [v33 didChangeValueForKey:sub_1005E1BD0()];
      __break(1u);
    }
    else
    {
      NSString v37 = sub_1005E1BD0();
      [v33 didChangeValueForKey:v37];

      sub_100007A48(v34, &qword_100719420);
      sub_10056B9F8(v31, type metadata accessor for IndexableMessageInfo);
      sub_10056B9F8(v23, type metadata accessor for MessageSectionData.Concatenator.Completed);
      uint64_t v38 = v16;
      uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      uint64_t v40 = v56;
      v39(v55, v56);
      uint64_t v41 = v43;
      sub_10056B9F8(v43, type metadata accessor for MessageBeingDownloaded.State);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v41, 2, 2, v40);
      return *(id *)(v32 + 8);
    }
  }
  return result;
}

unint64_t sub_10056C364()
{
  unint64_t result = qword_100719938;
  if (!qword_100719938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719938);
  }
  return result;
}

unint64_t sub_10056C3B8()
{
  unint64_t result = qword_100719940;
  if (!qword_100719940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719940);
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageBeingDownloaded.ParsingMessageDidFail()
{
  return &type metadata for MessageBeingDownloaded.ParsingMessageDidFail;
}

ValueMetadata *type metadata accessor for MessageBeingDownloaded.InvalidState()
{
  return &type metadata for MessageBeingDownloaded.InvalidState;
}

uint64_t *sub_10056C42C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for MessageSectionData.Concatenator(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_10056C578(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageSectionData.Concatenator(0);
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_10056C648(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MessageSectionData.Concatenator(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_10056C758(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MessageSectionData.Concatenator(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_10056C8CC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MessageSectionData.Concatenator(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_10056C9DC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MessageSectionData.Concatenator(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_10056CB50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10056CB64);
}

uint64_t sub_10056CB64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageSectionData.Concatenator(0);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_10056CBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10056CBE4);
}

uint64_t sub_10056CBE4(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for MessageSectionData.Concatenator(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_10056CC68(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageSectionData.Concatenator(0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 2, v2);
}

uint64_t sub_10056CCD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageSectionData.Concatenator(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 2, v4);
}

uint64_t sub_10056CD40()
{
  uint64_t result = type metadata accessor for MessageSectionData.Concatenator(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

char *sub_10056CDB8(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[1];
    *((void *)a1 + 1) = v6;
    *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = &a1[v7];
    int v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for MessageSectionData.Concatenator(0);
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v13 = v4;
    id v14 = v6;
    if (v12(v9, 2, v10))
    {
      uint64_t v15 = type metadata accessor for MessageBeingDownloaded.State(0);
      memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 2, v10);
    }
  }
  return v5;
}

uint64_t sub_10056CF3C(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for MessageSectionData.Concatenator(0);
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 2, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_10056D014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for MessageSectionData.Concatenator(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  id v12 = v4;
  id v13 = v5;
  if (v11(v8, 2, v9))
  {
    uint64_t v14 = type metadata accessor for MessageBeingDownloaded.State(0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
  }
  return a1;
}

uint64_t sub_10056D144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v12 = *(int *)(a3 + 28);
  id v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for MessageSectionData.Concatenator(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 2, v15);
  int v19 = v17(v14, 2, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = type metadata accessor for MessageBeingDownloaded.State(0);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 2, v15);
  return a1;
}

uint64_t sub_10056D2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = type metadata accessor for MessageSectionData.Concatenator(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 2, v7))
  {
    uint64_t v9 = type metadata accessor for MessageBeingDownloaded.State(0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 2, v7);
  }
  return a1;
}

uint64_t sub_10056D400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for MessageSectionData.Concatenator(0);
  uint64_t v12 = *(void *)(v11 - 8);
  id v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 2, v11);
  int v15 = v13(v10, 2, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = type metadata accessor for MessageBeingDownloaded.State(0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 2, v11);
  return a1;
}

uint64_t sub_10056D59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10056D5B0);
}

uint64_t sub_10056D5B0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MessageBeingDownloaded.State(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10056D660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10056D674);
}

void *sub_10056D674(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MessageBeingDownloaded.State(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10056D71C()
{
  uint64_t result = type metadata accessor for MessageBeingDownloaded.State(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10056D7C8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  int v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  int v3 = sub_100571564(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[48 * v9 + 32];
  if (a1 + 32 < v10 + 48 * v8 && v10 < a1 + 32 + 48 * v8) {
    goto LABEL_24;
  }
  sub_10000566C(&qword_100719A80);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = *((void *)v3 + 2);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    *((void *)v3 + 2) = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10056D940(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1005E2FB0();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1005E2D00();
    swift_bridgeObjectRelease();
    *unint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_1005AB910(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_1005E2FB0();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_1005E20E0();
}

uint64_t sub_10056DB0C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native)
  {
    int64_t v8 = v3[3] >> 1;
    if (v8 >= v5)
    {
      unint64_t v9 = *(void *)(a1 + 16);
      if (v9) {
        goto LABEL_5;
      }
LABEL_18:
      if (!v2) {
        goto LABEL_19;
      }
      goto LABEL_21;
    }
  }
  if (v4 <= v5) {
    int64_t v16 = v4 + v2;
  }
  else {
    int64_t v16 = v4;
  }
  uint64_t v3 = sub_100571AD0(isUniquelyReferenced_nonNull_native, v16, 1, v3);
  int64_t v8 = v3[3] >> 1;
  unint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = v3[2];
  if (v8 - v10 < (uint64_t)v9)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v11 = (unint64_t)&v3[2 * v10 + 4];
  if (a1 + 32 < v11 + 16 * v9 && v11 < a1 + 32 + 16 * v9) {
    goto LABEL_24;
  }
  sub_10000566C(&qword_100719A70);
  swift_arrayInitWithCopy();
  if (v9 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v13 = v3[2];
  BOOL v14 = __OFADD__(v13, v9);
  uint64_t v15 = v13 + v9;
  if (!v14)
  {
    v3[2] = v15;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10056DC84(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1005E2FB0();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1005E2D00();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_1005ABB34(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_1005E2FB0();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_1005E20E0();
}

void sub_10056DE50(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v7 = sub_1005E1BD0();
  id v8 = [v6 initWithEntityName:v7];

  v35[0] = 0x6E65477865646E49;
  v35[1] = 0xEF6E6F6974617265;
  void v35[2] = 0xD000000000000017;
  v35[3] = 0x80000001005EC480;
  v35[4] = sub_100557014;
  v35[5] = 0;
  v35[6] = sub_10055705C;
  v35[7] = 0;
  v35[8] = sub_100557098;
  v35[9] = 0;
  uint64_t v9 = sub_1005799CC(v35);
  sub_10000566C(&qword_100719060);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1005F6670;
  *(void *)(v10 + 56) = &type metadata for UInt64;
  *(void *)(v10 + 32) = v9;
  NSString v11 = sub_1005E1BD0();
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [self predicateWithFormat:v11 argumentArray:isa];

  [v8 appendPredicate:v13];
  sub_100554DF8(a1);
  id v14 = sub_1005C207C();
  [v8 appendPredicate:v14];

  id v36 = 0;
  id v15 = [v8 execute:&v36];
  id v16 = v36;
  if (!v15)
  {
    id v32 = v36;
    sub_1005E06F0();

    swift_willThrow();
    return;
  }
  uint64_t v17 = v15;
  _s14descr1006B9AE9V7MessageCMa();
  unint64_t v18 = sub_1005E20C0();
  id v19 = v16;

  sub_10056EDE4(a2, a3);
  uint64_t v33 = v8;
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v20 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v20)
    {
LABEL_4:
      if (v20 < 1) {
        __break(1u);
      }
      for (uint64_t i = 0; i != v20; ++i)
      {
        if ((v18 & 0xC000000000000001) != 0) {
          id v22 = (id)sub_1005E2CF0();
        }
        else {
          id v22 = *(id *)(v18 + 8 * i + 32);
        }
        uint64_t v23 = v22;
        NSString v24 = sub_1005E1BD0();
        objc_msgSend(v23, "willAccessValueForKey:", v24, v33);

        id v25 = [v23 primitiveUid];
        if (v25)
        {
          uint64_t v26 = v25;
          uint64_t v27 = (char *)[v25 longLongValue];

          BOOL v28 = (unint64_t)(v27 - 0x100000000) < 0xFFFFFFFF00000001;
          if ((unint64_t)(v27 - 0x100000000) >= 0xFFFFFFFF00000001) {
            int v29 = (int)v27;
          }
          else {
            int v29 = 0;
          }
        }
        else
        {
          int v29 = 0;
          BOOL v28 = 1;
        }
        NSString v30 = sub_1005E1BD0();
        [v23 didAccessValueForKey:v30];

        if (!v28)
        {
          int v34 = v29;
          uint64_t v31 = sub_10000566C((uint64_t *)&unk_100719790);
          MessageIdentifierSet.remove(_:)((uint64_t)&v34, v31);
        }
      }
    }
  }

  swift_bridgeObjectRelease();
}

void sub_10056E29C(int a1)
{
  sub_10000566C((uint64_t *)&unk_100719790);
  __chkstk_darwin();
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [v1 managedObjectContext];
  if (!v6) {
    goto LABEL_13;
  }
  NSString v7 = v6;
  uint64_t v12[3] = a1;
  sub_10053E938();
  MessageIdentifierSet.init(_:)();
  sub_10056E430(v1, (uint64_t)v5, &v13);
  sub_1005667A8((uint64_t)v5);

  if (v2) {
    return;
  }
  uint64_t v8 = *(void *)(v13 + 16);
  if (!v8) {
    goto LABEL_12;
  }
  if (*(_DWORD *)(v13 + 32) == a1)
  {
    uint64_t v9 = (id *)(v13 + 40);
LABEL_6:
    *v9;
    swift_bridgeObjectRelease();
    return;
  }
  if (v8 == 1)
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    sub_10056ED90();
    swift_allocError();
    swift_willThrow();
    return;
  }
  uint64_t v9 = (id *)(v13 + 56);
  uint64_t v10 = 1;
  while (1)
  {
    uint64_t v11 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (*((_DWORD *)v9 - 2) == a1) {
      goto LABEL_6;
    }
    v9 += 2;
    ++v10;
    if (v11 == v8) {
      goto LABEL_12;
    }
  }
  __break(1u);
}

uint64_t sub_10056E430@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v70 = a3;
  uint64_t v73 = sub_10000566C((uint64_t *)&unk_100719790);
  __chkstk_darwin();
  unint64_t v82 = _swiftEmptyArrayStorage;
  unint64_t v72 = a2;
  unint64_t v74 = (unint64_t)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10056EDE4(a2, v74);
  unint64_t v7 = (unint64_t)[v3 registeredObjects];
  unint64_t v8 = sub_10056EE4C();
  sub_10053BCE0();
  uint64_t v9 = sub_1005E2260();

  if ((v9 & 0xC000000000000001) != 0)
  {
    sub_1005E2B10();
    sub_1005E22D0();
    uint64_t v9 = (uint64_t)v83[1];
    uint64_t v80 = v83[2];
    id v10 = v83[3];
    id v11 = v83[4];
    unint64_t v12 = (unint64_t)v83[5];
  }
  else
  {
    id v11 = 0;
    uint64_t v13 = -1 << *(unsigned char *)(v9 + 32);
    uint64_t v14 = *(void *)(v9 + 56);
    uint64_t v80 = (void *)(v9 + 56);
    uint64_t v15 = ~v13;
    uint64_t v16 = -v13;
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v12 = v17 & v14;
    id v10 = (id)v15;
  }
  id v71 = v10;
  uint64_t v78 = v9 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v79 = ((unint64_t)v10 + 64) >> 6;
  uint64_t v76 = a1;
  unint64_t v77 = (char *)&type metadata for Swift.AnyObject + 8;
  unint64_t v75 = v8;
  if ((v9 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  while (2)
  {
    uint64_t v24 = sub_1005E2B80();
    if (v24)
    {
      uint64_t v81 = v24;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      unint64_t v7 = (unint64_t)v83[0];
      swift_unknownObjectRelease();
      uint64_t v20 = (char *)v11;
      uint64_t v18 = v12;
      if (v7)
      {
        while (1)
        {
          _s14descr1006B9AE9V7MessageCMa();
          uint64_t v25 = swift_dynamicCastClass();
          if (!v25) {
            break;
          }
          uint64_t v26 = (void *)v25;
          id v27 = (id)v7;
          id v28 = [v26 mailbox];
          if (!v28 || (unint64_t v7 = (unint64_t)v28, v28, (void *)v7 != a1))
          {

            goto LABEL_10;
          }
          NSString v29 = sub_1005E1BD0();
          [v26 willAccessValueForKey:v29];

          id v30 = [v26 primitiveUid];
          if (v30)
          {
            uint64_t v31 = v30;
            id v32 = (char *)[v30 longLongValue];

            BOOL v33 = (unint64_t)(v32 - 0x100000000) < 0xFFFFFFFF00000001;
            if ((unint64_t)(v32 - 0x100000000) >= 0xFFFFFFFF00000001) {
              int v34 = (int)v32;
            }
            else {
              int v34 = 0;
            }
          }
          else
          {
            int v34 = 0;
            BOOL v33 = 1;
          }
          unint64_t v7 = (unint64_t)sub_1005E1BD0();
          [v26 didAccessValueForKey:v7];

          if (v33 || (LODWORD(v83[0]) = v34, unint64_t v7 = v72, (MessageIdentifierSet.contains(_:)() & 1) == 0))
          {
          }
          else
          {
            NSString v35 = v82;
            id v36 = v27;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            id v69 = v36;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              NSString v35 = sub_100571AD0(0, v35[2] + 1, 1, v35);
            }
            unint64_t v39 = v35[2];
            unint64_t v38 = v35[3];
            unint64_t v7 = v74;
            if (v39 >= v38 >> 1)
            {
              uint64_t v42 = sub_100571AD0((void *)(v38 > 1), v39 + 1, 1, v35);
              unint64_t v7 = v74;
              NSString v35 = v42;
            }
            void v35[2] = v39 + 1;
            uint64_t v40 = &v35[2 * v39];
            *((_DWORD *)v40 + 8) = v34;
            v40[5] = v26;
            unint64_t v82 = v35;
            LODWORD(v81) = v34;
            MessageIdentifierSet.remove(_:)((uint64_t)&v81, v73);
            id v41 = v69;
          }
          id v11 = v20;
          unint64_t v12 = v18;
          a1 = v76;
          if (v9 < 0) {
            goto LABEL_29;
          }
LABEL_11:
          if (v12)
          {
            uint64_t v18 = (v12 - 1) & v12;
            unint64_t v19 = __clz(__rbit64(v12)) | ((void)v11 << 6);
            uint64_t v20 = (char *)v11;
          }
          else
          {
            int64_t v21 = (int64_t)v11 + 1;
            if (__OFADD__(v11, 1))
            {
              __break(1u);
              goto LABEL_74;
            }
            if (v21 >= v79) {
              goto LABEL_50;
            }
            unint64_t v22 = v80[v21];
            uint64_t v20 = (char *)v11 + 1;
            if (!v22)
            {
              uint64_t v20 = (char *)v11 + 2;
              if ((uint64_t)v11 + 2 >= v79) {
                goto LABEL_50;
              }
              unint64_t v22 = v80[(void)v20];
              if (!v22)
              {
                uint64_t v20 = (char *)v11 + 3;
                if ((uint64_t)v11 + 3 >= v79) {
                  goto LABEL_50;
                }
                unint64_t v22 = v80[(void)v20];
                if (!v22)
                {
                  uint64_t v20 = (char *)v11 + 4;
                  if ((uint64_t)v11 + 4 >= v79) {
                    goto LABEL_50;
                  }
                  unint64_t v22 = v80[(void)v20];
                  if (!v22)
                  {
                    uint64_t v23 = (char *)v11 + 5;
                    while ((char *)v79 != v23)
                    {
                      unint64_t v22 = v80[(void)v23++];
                      if (v22)
                      {
                        uint64_t v20 = v23 - 1;
                        goto LABEL_26;
                      }
                    }
                    goto LABEL_50;
                  }
                }
              }
            }
LABEL_26:
            uint64_t v18 = (v22 - 1) & v22;
            unint64_t v19 = __clz(__rbit64(v22)) + ((void)v20 << 6);
          }
          unint64_t v7 = (unint64_t)*(id *)(*(void *)(v9 + 48) + 8 * v19);
          if (!v7) {
            goto LABEL_50;
          }
        }

LABEL_10:
        id v11 = v20;
        unint64_t v12 = v18;
        if (v9 < 0) {
          continue;
        }
        goto LABEL_11;
      }
    }
    break;
  }
LABEL_50:
  sub_10003BC80();
  sub_10000566C(&qword_100719A68);
  uint64_t v43 = v74;
  if (sub_1005E3630()) {
    goto LABEL_77;
  }
  id v44 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v45 = sub_1005E1BD0();
  id v46 = [v44 initWithEntityName:v45];

  [v46 setReturnsObjectsAsFaults:0];
  sub_100554DF8(a1);
  id v47 = sub_1005C207C();
  [v46 appendPredicate:v47];

  v83[0] = 0;
  id v48 = [v46 execute:v83];
  id v49 = v83[0];
  if (!v48)
  {
    id v66 = v83[0];
    swift_bridgeObjectRelease();
    sub_1005E06F0();

    swift_willThrow();
    return sub_1005667A8(v74);
  }
  uint64_t v50 = v48;
  _s14descr1006B9AE9V7MessageCMa();
  unint64_t v7 = sub_1005E20C0();
  id v51 = v49;

  uint64_t v80 = v46;
  if (v7 >> 62)
  {
LABEL_74:
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1005E2FB0();
    if (v52) {
      goto LABEL_54;
    }
  }
  else
  {
    uint64_t v52 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v52)
    {
LABEL_54:
      if (v52 < 1) {
        __break(1u);
      }
      uint64_t v53 = 0;
      uint64_t v54 = _swiftEmptyArrayStorage;
      do
      {
        if ((v7 & 0xC000000000000001) != 0) {
          id v55 = (id)sub_1005E2CF0();
        }
        else {
          id v55 = *(id *)(v7 + 8 * v53 + 32);
        }
        uint64_t v56 = v55;
        NSString v57 = sub_1005E1BD0();
        [v56 willAccessValueForKey:v57];

        id v58 = [v56 primitiveUid];
        if (v58)
        {
          int64_t v59 = v58;
          uint64_t v60 = (char *)[v58 longLongValue];

          BOOL v61 = (unint64_t)(v60 - 0x100000000) < 0xFFFFFFFF00000001;
          if ((unint64_t)(v60 - 0x100000000) < 0xFFFFFFFF00000001) {
            LODWORD(v60) = 0;
          }
        }
        else
        {
          LODWORD(v60) = 0;
          BOOL v61 = 1;
        }
        NSString v62 = sub_1005E1BD0();
        [v56 didAccessValueForKey:v62];

        if (v61)
        {
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v54 = sub_100571AD0(0, v54[2] + 1, 1, v54);
          }
          unint64_t v64 = v54[2];
          unint64_t v63 = v54[3];
          if (v64 >= v63 >> 1) {
            uint64_t v54 = sub_100571AD0((void *)(v63 > 1), v64 + 1, 1, v54);
          }
          v54[2] = v64 + 1;
          uint64_t v65 = &v54[2 * v64];
          *((_DWORD *)v65 + 8) = v60;
          v65[5] = v56;
        }
        ++v53;
      }
      while (v52 != v53);
      goto LABEL_76;
    }
  }
  uint64_t v54 = _swiftEmptyArrayStorage;
LABEL_76:
  swift_bridgeObjectRelease_n();
  sub_10056DB0C((uint64_t)v54);

  uint64_t v43 = v74;
LABEL_77:
  uint64_t result = sub_1005667A8(v43);
  *uint64_t v70 = v82;
  return result;
}

void sub_10056EC84(uint64_t a1)
{
  uint64_t v3 = v1;
  id v5 = [v3 managedObjectContext];
  if (v5)
  {
    uint64_t v6 = v5;
    sub_10056E430(v3, a1, &v10);
    if (v2)
    {
    }
    else
    {
      uint64_t v7 = v10;
      if (*(void *)(v10 + 16))
      {
        sub_10000566C(&qword_100719A78);
        unint64_t v8 = (void *)sub_1005E2FF0();
      }
      else
      {
        unint64_t v8 = _swiftEmptyDictionarySingleton;
      }
      uint64_t v9 = v8;
      sub_10056EE8C(v7, 1, &v9);

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_100592720((uint64_t)_swiftEmptyArrayStorage);
  }
}

unint64_t sub_10056ED90()
{
  unint64_t result = qword_100719A60;
  if (!qword_100719A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719A60);
  }
  return result;
}

uint64_t sub_10056EDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C((uint64_t *)&unk_100719790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10056EE4C()
{
  unint64_t result = qword_100718A10;
  if (!qword_100718A10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100718A10);
  }
  return result;
}

uint64_t sub_10056EE8C(uint64_t result, char a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    Swift::UInt32 v6 = *(_DWORD *)(result + 32);
    uint64_t v7 = *(void **)(result + 40);
    unint64_t v8 = (void *)*a3;
    uint64_t v45 = result;
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_1003F6668(v6);
    uint64_t v11 = v8[2];
    BOOL v12 = (v10 & 1) == 0;
    uint64_t v13 = v11 + v12;
    if (__OFADD__(v11, v12))
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    unint64_t v14 = v9;
    char v15 = v10;
    uint64_t v16 = v8[3];
    id v17 = v7;
    if (v16 < v13)
    {
      sub_1005A2520(v13, a2 & 1);
      unint64_t v18 = sub_1003F6668(v6);
      if ((v15 & 1) != (v19 & 1))
      {
LABEL_28:
        unint64_t result = sub_1005E3380();
        __break(1u);
        return result;
      }
      unint64_t v14 = v18;
      uint64_t v20 = (void *)*a3;
      if ((v15 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_9:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = v17;
      uint64_t v22 = v3 - 1;
      if (v3 == 1) {
        return swift_bridgeObjectRelease();
      }
LABEL_16:
      for (uint64_t i = (void **)(v45 + 56); ; i += 2)
      {
        Swift::UInt32 v28 = *((_DWORD *)i - 2);
        NSString v29 = *i;
        id v30 = (void *)*a3;
        unint64_t v31 = sub_1003F6668(v28);
        uint64_t v33 = v30[2];
        BOOL v34 = (v32 & 1) == 0;
        uint64_t v35 = v33 + v34;
        if (__OFADD__(v33, v34)) {
          break;
        }
        unint64_t v36 = v31;
        char v37 = v32;
        uint64_t v38 = v30[3];
        id v39 = v29;
        if (v38 < v35)
        {
          sub_1005A2520(v35, 1);
          unint64_t v40 = sub_1003F6668(v28);
          if ((v37 & 1) != (v41 & 1)) {
            goto LABEL_28;
          }
          unint64_t v36 = v40;
        }
        uint64_t v42 = (void *)*a3;
        if (v37)
        {
          uint64_t v27 = v42[7];

          *(void *)(v27 + 8 * v36) = v39;
        }
        else
        {
          v42[(v36 >> 6) + 8] |= 1 << v36;
          *(_DWORD *)(v42[6] + 4 * v36) = v28;
          *(void *)(v42[7] + 8 * v36) = v39;
          uint64_t v43 = v42[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_27;
          }
          v42[2] = v44;
        }
        if (!--v22) {
          return swift_bridgeObjectRelease();
        }
      }
      goto LABEL_26;
    }
    if (a2)
    {
      uint64_t v20 = (void *)*a3;
      if (v15) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1005A4408();
      uint64_t v20 = (void *)*a3;
      if (v15) {
        goto LABEL_9;
      }
    }
LABEL_12:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    *(_DWORD *)(v20[6] + 4 * v14) = v6;
    *(void *)(v20[7] + 8 * v14) = v17;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    void v20[2] = v25;
    uint64_t v22 = v3 - 1;
    if (v3 == 1) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_16;
  }
  return result;
}

ValueMetadata *_s15MessageNotFoundVMa()
{
  return &_s15MessageNotFoundVN;
}

void *sub_10056F108(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v9 = v8;
  *(void *)((char *)v9 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_observer) = 0;
  *(void *)((char *)v9 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_generationToken) = 0;
  id v17 = (void *)((char *)v9 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource__fetchedResultsController);
  *id v17 = 0;
  v17[1] = 0;
  *((unsigned char *)v9 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_didStart) = 0;
  void v9[2] = a1;
  unint64_t v18 = (char *)v9 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_logger;
  uint64_t v31 = sub_1005E0ED0();
  uint64_t v19 = *(void *)(v31 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v18, a6, v31);
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a4;
  uint64_t v9[6] = a5;
  uint64_t v20 = (void *)((char *)v9 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_contentDidChange);
  *uint64_t v20 = a7;
  v20[1] = a8;
  uint64_t v21 = (objc_class *)type metadata accessor for MessagesSource.Observer();
  id v22 = objc_allocWithZone(v21);
  swift_weakInit();
  swift_weakAssign();
  v33.receiver = v22;
  v33.super_class = v21;
  id v23 = a1;
  swift_retain();
  id v24 = a5;
  swift_retain();
  id v25 = objc_msgSendSuper2(&v33, "init");
  uint64_t v26 = *(void **)((char *)v9 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_observer);
  *(void *)((char *)v9 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_observer) = v25;

  uint64_t v27 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  id v28 = sub_100556EC4((uint64_t)sub_10056FE74, v27);

  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a6, v31);
  swift_release();
  *(void *)((char *)v9 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_generationToken) = v28;
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_10056F34C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = (void *)(result + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource__fetchedResultsController);
    uint64_t v3 = *(void **)(result + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource__fetchedResultsController + 8);
    *uint64_t v2 = 0;
    v2[1] = 0;

    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_didStart) == 1) {
      (*(void (**)(void))(v1 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_contentDidChange))();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_10056F3E4()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_logger;
  uint64_t v2 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_10056F4AC()
{
  sub_10056F3E4();
  return swift_deallocClassInstance();
}

uint64_t sub_10056F504()
{
  return type metadata accessor for MessagesSource();
}

uint64_t type metadata accessor for MessagesSource()
{
  uint64_t result = qword_100719AD0;
  if (!qword_100719AD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10056F558()
{
  uint64_t result = sub_1005E0ED0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_10056F62C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  v22[0] = 0x6E65477865646E49;
  v22[1] = 0xEF6E6F6974617265;
  v22[2] = 0xD000000000000017;
  v22[3] = 0x80000001005EC480;
  v22[4] = sub_100557014;
  v22[5] = 0;
  v22[6] = sub_10055705C;
  v22[7] = 0;
  v22[8] = sub_100557098;
  v22[9] = 0;
  id result = (id)sub_1005799CC(v22);
  id v3 = result;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_didStart) != 1) {
    return [objc_allocWithZone((Class)NSArray) init];
  }
  uint64_t v4 = (id *)(v0 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource__fetchedResultsController);
  id v5 = *(void **)(v0 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource__fetchedResultsController + 8);
  if (v5 && *v4 == result)
  {
    id v6 = v5;
    id v7 = [v6 fetchedObjects];
    if (v7)
    {
LABEL_15:
      id v8 = v7;

      return v8;
    }
LABEL_14:
    id v7 = [objc_allocWithZone((Class)NSArray) init];
    goto LABEL_15;
  }
  unint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_observer);
  if (v9)
  {
    id v10 = v9;
    id v11 = sub_10056FC14();
    id v12 = [objc_allocWithZone((Class)NSFetchedResultsController) initWithFetchRequest:v11 managedObjectContext:v1 sectionNameKeyPath:0 cacheName:0];

    [v12 setDelegate:v10];
    id v21 = 0;
    if ([v12 performFetch:&v21])
    {
      id v13 = v21;
    }
    else
    {
      id v14 = v21;
      sub_1005E06F0();

      swift_willThrow();
      swift_errorRetain();
      char v15 = sub_1005E0EB0();
      os_log_type_t v16 = sub_1005E25A0();
      if (os_log_type_enabled(v15, v16))
      {
        id v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v20 = (void *)swift_slowAlloc();
        *(_DWORD *)id v17 = 138412290;
        unint64_t v18 = (void *)sub_1005E06E0();
        id v21 = v18;
        sub_1005E2960();
        *uint64_t v20 = v18;
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Failed to fetch: %@", v17, 0xCu);
        sub_10000566C(&qword_100718A08);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_errorRelease();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
      }
    }
    id v19 = v4[1];
    *uint64_t v4 = v3;
    v4[1] = v12;
    id v6 = v12;

    id v7 = [v6 fetchedObjects];
    if (v7) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

id sub_10056FA74()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MessagesSource.Observer()
{
  return self;
}

void destroy for MessagesSource.Configuration(uint64_t a1)
{
  swift_release();
  objc_super v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for MessagesSource.Configuration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for MessagesSource.Configuration(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  id v5 = (void *)a2[3];
  id v6 = (void *)a1[3];
  a1[3] = v5;
  id v7 = v5;

  return a1;
}

uint64_t assignWithTake for MessagesSource.Configuration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  id v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;

  return a1;
}

ValueMetadata *type metadata accessor for MessagesSource.Configuration()
{
  return &type metadata for MessagesSource.Configuration;
}

id sub_10056FC14()
{
  uint64_t v1 = v0;
  id v2 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v3 = sub_1005E1BD0();
  id v4 = [v2 initWithEntityName:v3];

  [v4 setReturnsObjectsAsFaults:0];
  uint64_t v5 = *(void *)(v1 + 40);
  if (v5 >= 800) {
    uint64_t v5 = 800;
  }
  if (v5 <= 250) {
    uint64_t v6 = 250;
  }
  else {
    uint64_t v6 = v5;
  }
  [v4 setFetchBatchSize:v6];
  v14[0] = 0x6E65477865646E49;
  v14[1] = 0xEF6E6F6974617265;
  void v14[2] = 0xD000000000000017;
  void v14[3] = 0x80000001005EC480;
  v14[4] = sub_100557014;
  v14[5] = 0;
  v14[6] = sub_10055705C;
  v14[7] = 0;
  v14[8] = sub_100557098;
  v14[9] = 0;
  uint64_t v7 = sub_1005799CC(v14);
  id v8 = (void *)(*(uint64_t (**)(uint64_t))(v1 + 24))(v7);
  [v4 setPredicate:v8];

  sub_10000566C(&qword_100719088);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1005F6740;
  id v10 = *(void **)(v1 + 48);
  *(void *)(v9 + 32) = v10;
  sub_1005E20E0();
  sub_10056FDFC();
  id v11 = v10;
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  [v4 setSortDescriptors:isa];

  return v4;
}

unint64_t sub_10056FDFC()
{
  unint64_t result = qword_100719C20;
  if (!qword_100719C20)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100719C20);
  }
  return result;
}

uint64_t sub_10056FE3C()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10056FE74()
{
  return sub_10056F34C();
}

uint64_t sub_10056FE7C()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (*(unsigned char *)(result + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_didStart) == 1)
    {
      uint64_t v1 = *(void (**)(uint64_t))(result + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_contentDidChange);
      uint64_t v2 = swift_retain();
      v1(v2);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_10056FF20()
{
  uint64_t v0 = sub_1005E0ED0();
  sub_10034E5B4(v0, qword_100719C28);
  sub_1003461B0(v0, (uint64_t)qword_100719C28);
  return sub_1005E0EC0();
}

uint64_t sub_10056FFA4(void *a1, uint64_t a2)
{
  NSString v3 = v2;
  id v5 = a1;
  unint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_10057224C(v6);
  swift_bridgeObjectRelease();

  if (v7) {
    return v7;
  }
  type metadata accessor for MessagesToDownload.Source();
  swift_allocObject();
  id v8 = v5;
  swift_retain();
  uint64_t v7 = (uint64_t)sub_100572D40(v8, a2);

  swift_release();
  swift_retain();
  sub_1005E20A0();
  if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1005E2110();
  }
  sub_1005E2170();
  uint64_t result = sub_1005E20E0();
  uint64_t v10 = *(void *)(v7 + 32);
  if (v10)
  {
    if ((*(unsigned char *)(v10 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_didStart) & 1) == 0)
    {
      *(unsigned char *)(v10 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_didStart) = 1;
      (*(void (**)(uint64_t))(v10 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_contentDidChange))(result);
    }
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005700F0()
{
  unint64_t v1 = *v0;
  if (*v0 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1005E2FB0();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 0;
      while (1)
      {
        if ((v1 & 0xC000000000000001) != 0)
        {
          uint64_t v4 = sub_1005E2CF0();
        }
        else
        {
          uint64_t v4 = *(void *)(v1 + 8 * v3 + 32);
          swift_retain();
        }
        id v5 = *(void **)(v4 + 16);
        if ([v5 isDeleted])
        {
          swift_bridgeObjectRelease();
          uint64_t result = swift_release();
          goto LABEL_18;
        }
        id v6 = v5;
        NSString v7 = sub_1005E1BD0();
        [v6 willAccessValueForKey:v7];

        id v8 = [v6 primitiveName];
        if (v8)
        {
          id v9 = v8;
          sub_10059BA20(v9);
          v11._id rawValue = v10;

          unint64_t v12 = (unint64_t)MailboxName.init(_:)(v11);
        }
        else
        {
          unint64_t v12 = 0;
        }
        NSString v13 = sub_1005E1BD0();
        [v6 didAccessValueForKey:v13];
        swift_release();

        swift_bridgeObjectRelease();
        if (!v12) {
          break;
        }
        uint64_t v14 = v3 + 1;
        if (__OFADD__(v3, 1))
        {
          __break(1u);
          goto LABEL_27;
        }
        ++v3;
        if (v14 == v2) {
          goto LABEL_14;
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_18:
      uint64_t v16 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
      }
      else if (!(*v0 >> 62))
      {
        if (v16 == *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_21;
        }
LABEL_34:
        uint64_t v19 = v3 + 5;
        while (1)
        {
          unint64_t v20 = v19 - 4;
          unint64_t v21 = *v0;
          if ((*v0 & 0xC000000000000001) != 0)
          {
            uint64_t v22 = sub_1005E2CF0();
          }
          else
          {
            if ((v20 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_75:
              __break(1u);
LABEL_76:
              __break(1u);
LABEL_77:
              __break(1u);
LABEL_78:
              __break(1u);
LABEL_79:
              __break(1u);
LABEL_80:
              __break(1u);
LABEL_81:
              __break(1u);
LABEL_82:
              __break(1u);
LABEL_83:
              __break(1u);
              return result;
            }
            if (v20 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_75;
            }
            uint64_t v22 = *(void *)(v21 + 8 * v19);
            swift_retain();
          }
          id v23 = *(void **)(v22 + 16);
          if ([v23 isDeleted])
          {
            uint64_t result = swift_release();
            goto LABEL_65;
          }
          id v24 = v23;
          NSString v25 = sub_1005E1BD0();
          [v24 willAccessValueForKey:v25];

          id v26 = [v24 primitiveName];
          if (v26)
          {
            id v27 = v26;
            sub_10059BA20(v27);
            v29._id rawValue = v28;

            unint64_t v30 = (unint64_t)MailboxName.init(_:)(v29);
          }
          else
          {
            unint64_t v30 = 0;
          }
          NSString v31 = sub_1005E1BD0();
          [v24 didAccessValueForKey:v31];
          swift_release();

          uint64_t result = swift_bridgeObjectRelease();
          if (v30) {
            break;
          }
LABEL_65:
          uint64_t v38 = v19 - 3;
          if (__OFADD__(v20, 1)) {
            goto LABEL_76;
          }
          if (*v0 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v39 = sub_1005E2FB0();
            uint64_t result = swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v39 = *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          ++v19;
          if (v38 == v39) {
            goto LABEL_21;
          }
        }
        if (v20 == v3)
        {
LABEL_64:
          if (__OFADD__(v3++, 1)) {
            goto LABEL_77;
          }
          goto LABEL_65;
        }
        unint64_t v32 = *v0;
        if ((*v0 & 0xC000000000000001) != 0)
        {
          uint64_t result = sub_1005E2CF0();
          uint64_t v33 = result;
          unint64_t v32 = *v0;
          if ((*v0 & 0xC000000000000001) == 0)
          {
LABEL_50:
            if ((v20 & 0x8000000000000000) != 0) {
              goto LABEL_80;
            }
            if (v20 >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_81;
            }
            uint64_t v34 = *(void *)(v32 + 8 * v19);
            swift_retain();
            goto LABEL_53;
          }
        }
        else
        {
          if (v3 < 0) {
            goto LABEL_78;
          }
          if ((unint64_t)v3 >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_79;
          }
          uint64_t v33 = *(void *)(v32 + 8 * v3 + 32);
          uint64_t result = swift_retain();
          if ((v32 & 0xC000000000000001) == 0) {
            goto LABEL_50;
          }
        }
        uint64_t v34 = sub_1005E2CF0();
        unint64_t v32 = *v0;
LABEL_53:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *uint64_t v0 = v32;
        if (!isUniquelyReferenced_nonNull_bridgeObject
          || (v32 & 0x8000000000000000) != 0
          || (v32 & 0x4000000000000000) != 0)
        {
          unint64_t v32 = sub_1000934A4(v32);
          *uint64_t v0 = v32;
        }
        *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v34;
        swift_release();
        sub_1005E20E0();
        unint64_t v36 = *v0;
        uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *uint64_t v0 = v36;
        if (!result || (v36 & 0x8000000000000000) != 0 || (v36 & 0x4000000000000000) != 0)
        {
          uint64_t result = sub_1000934A4(v36);
          unint64_t v36 = result;
          *uint64_t v0 = result;
        }
        if ((v20 & 0x8000000000000000) != 0) {
          goto LABEL_82;
        }
        if (v20 >= *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_83;
        }
        *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 8 * v19) = v33;
        swift_release();
        uint64_t result = sub_1005E20E0();
        goto LABEL_64;
      }
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1005E2FB0();
      uint64_t result = swift_bridgeObjectRelease();
      if (v16 == v18) {
        goto LABEL_21;
      }
      goto LABEL_34;
    }
  }
LABEL_14:
  swift_bridgeObjectRelease();
  if (*v0 >> 62) {
    goto LABEL_31;
  }
  uint64_t v3 = *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
  while (!(*v0 >> 62))
  {
    uint64_t v17 = *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17 >= v3) {
      goto LABEL_23;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1005E2FB0();
  swift_bridgeObjectRelease();
  if (v17 < v3) {
    goto LABEL_30;
  }
LABEL_23:
  return sub_100572F58(v3, v17);
}

uint64_t sub_100570690()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MessagesToDownload.Source()
{
  return self;
}

ValueMetadata *type metadata accessor for MessagesToDownload()
{
  return &type metadata for MessagesToDownload;
}

id sub_100570714(uint64_t a1, void *a2)
{
  sub_10000566C(&qword_100719060);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1005F6690;
  id v5 = [a2 objectID];
  *(void *)(v4 + 56) = sub_1003C8730(0, &qword_100719068);
  *(void *)(v4 + 32) = v5;
  id v6 = [objc_allocWithZone((Class)NSNumber) initWithLongLong:a1];
  *(void *)(v4 + 88) = sub_1003C8730(0, (unint64_t *)&qword_1007195E8);
  *(void *)(v4 + 64) = v6;
  NSString v7 = sub_1005E1BD0();
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [self predicateWithFormat:v7 argumentArray:isa];

  return v9;
}

uint64_t sub_10057085C(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = *(_DWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  sub_1003C8730(0, qword_100718DD0);
  if ((sub_1005E2840() & 1) == 0 || v2 != v4) {
    return 0;
  }
  return sub_1005713CC(v3, v5);
}

uint64_t sub_100570908(long long *a1, long long *a2)
{
  sub_1003DC26C(a1, (uint64_t)v4);
  sub_1003DC26C(a2, (uint64_t)v5);
  return sub_10057237C(v4, v5) & 1;
}

uint64_t sub_100570954(uint64_t a1, uint64_t a2)
{
  return sub_100572458(*(_DWORD *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(_DWORD *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_100570978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = _s14descr1006B99F1V6LoggerVMa(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  sub_1005737B0(a2, (uint64_t)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1005738F4((uint64_t)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, _s14descr1006B99F1V6LoggerVMa);
  sub_10000566C(&qword_100719D48);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_10057395C;
  *(void *)(v11 + 24) = v10;
  *a3 = v11;
  return swift_retain();
}

id sub_100570AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v25 = a2;
  id v26 = a3;
  uint64_t v4 = sub_10000566C(&qword_100719D40);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s5StateV15DeferredRequestVMa(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v24 = (uint64_t)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(a1 + 24);
  swift_beginAccess();
  uint64_t v11 = v10[6];
  uint64_t v13 = v10[10];
  uint64_t v12 = v10[11];
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 48));
  sub_10059BB88((void **)(v11 + 16), v28);
  os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 48));
  long long v14 = v28[0];
  swift_release();
  swift_beginAccess();
  swift_retain_n();
  uint64_t v15 = v25;
  sub_100573F08(v14, v13, *((uint64_t *)&v14 + 1), v12, v25, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1005736F4((uint64_t)v6);
    swift_endAccess();
    id result = (id)swift_release_n();
LABEL_7:
    uint64_t v22 = v26;
    *id v26 = 0;
    v22[1] = 0;
    v22[2] = 0;
    return result;
  }
  uint64_t v17 = v24;
  sub_1005738F4((uint64_t)v6, v24, _s5StateV15DeferredRequestVMa);
  swift_retain();
  sub_100576BE4(v27, v17, v15, a1 + 40, a1);
  swift_release();
  sub_100573754(v17);
  swift_endAccess();
  swift_release_n();
  id result = (id)sub_1003DC26C(v27, (uint64_t)v28);
  if ((v29 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v18 = *(void *)&v28[0];
  uint64_t v19 = DWORD2(v28[0]);
  unint64_t v20 = *(void **)(a1 + 16);
  unint64_t v21 = v26;
  *id v26 = v20;
  v21[1] = v19;
  v21[2] = v18;
  return v20;
}

void sub_100570D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 32);
  if (!v4) {
    goto LABEL_63;
  }
  uint64_t v5 = *(void *)(v3 + 24);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 48);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 48));
  sub_1005721FC((void **)(v6 + 16), v58);
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 48));
  uint64_t v7 = v58[0];
  swift_release();
  id v8 = sub_10056F62C();
  uint64_t v9 = *(void *)(v4 + 40);
  if (v9 < 0)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    swift_bridgeObjectRelease();
    id v48 = (os_unfair_lock_s *)sub_1005E2F20();
    __break(1u);
    os_unfair_lock_unlock(v48);
    __break(1u);
    return;
  }
  id v10 = v8;
  uint64_t v11 = (uint64_t)[v10 count];
  char v55 = 0;
  uint64_t v12 = _swiftEmptyArrayStorage;
  if (v9)
  {
    uint64_t v13 = v11;
    if (v11 >= 1)
    {
      char v55 = 0;
      uint64_t v51 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = v7 + 56;
      uint64_t v56 = _swiftEmptyArrayStorage;
      while (1)
      {
        uint64_t v57 = v9 - 1;
        while (1)
        {
          id v16 = [v10 objectAtIndexedSubscript:v14];
          sub_1005E2A70();
          swift_unknownObjectRelease();
          _s14descr1006B9AE9V7MessageCMa();
          if (!swift_dynamicCast()) {
            goto LABEL_64;
          }
          uint64_t v17 = (void *)v58[9];
          NSString v18 = sub_1005E1BD0();
          [v17 willAccessValueForKey:v18];

          id v19 = [v17 primitiveSpotlightID];
          unint64_t v20 = v19;
          if (v19)
          {
            id v21 = [v19 longLongValue];
          }
          else
          {
            id v21 = 0;
          }
          ++v14;
          NSString v22 = sub_1005E1BD0();
          [v17 didAccessValueForKey:v22];

          if (v20)
          {
            if (!*(void *)(v7 + 16)) {
              goto LABEL_20;
            }
            sub_1005E33F0();
            sub_1005E3450((Swift::UInt64)v21);
            Swift::Int v23 = sub_1005E3470();
            uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
            unint64_t v25 = v23 & ~v24;
            if (((*(void *)(v15 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
              goto LABEL_20;
            }
            uint64_t v26 = *(void *)(v7 + 48);
            if (*(id *)(v26 + 8 * v25) != v21) {
              break;
            }
          }
LABEL_7:

          if (v14 >= v13) {
            goto LABEL_56;
          }
        }
        uint64_t v27 = ~v24;
        while (1)
        {
          unint64_t v25 = (v25 + 1) & v27;
          if (((*(void *)(v15 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
            break;
          }
          if (*(id *)(v26 + 8 * v25) == v21) {
            goto LABEL_7;
          }
        }
LABEL_20:
        NSString v28 = sub_1005E1BD0();
        [v17 willAccessValueForKey:v28];

        id v29 = [v17 primitiveUid];
        if (v29)
        {
          unint64_t v30 = v29;
          NSString v31 = (char *)[v29 longLongValue];

          BOOL v32 = (unint64_t)(v31 - 0x100000000) < 0xFFFFFFFF00000001;
          if ((unint64_t)(v31 - 0x100000000) < 0xFFFFFFFF00000001) {
            LODWORD(v31) = 0;
          }
        }
        else
        {
          LODWORD(v31) = 0;
          BOOL v32 = 1;
        }
        NSString v33 = sub_1005E1BD0();
        [v17 didAccessValueForKey:v33];

        if (v32) {
          goto LABEL_48;
        }
        LODWORD(v58[0]) = v31;
        sub_10000566C((uint64_t *)&unk_100719790);
        if (MessageIdentifierSet.contains(_:)()) {
          goto LABEL_48;
        }
        if (v56[2] >= a2)
        {

          char v55 = 1;
          uint64_t v9 = v57;
          if (!v57) {
            goto LABEL_56;
          }
          goto LABEL_54;
        }
        int v50 = (int)v31;
        NSString v34 = sub_1005E1BD0();
        [v17 willAccessValueForKey:v34];

        id v35 = [v17 primitiveMessageSize];
        unint64_t v36 = v35;
        if (v35)
        {
          uint64_t v37 = (uint64_t)[v35 integerValue];
        }
        else
        {
          uint64_t v37 = 0;
        }
        NSString v38 = sub_1005E1BD0();
        [v17 didAccessValueForKey:v38];

        if (!v36) {
          break;
        }
        if (v37 <= 1000000) {
          goto LABEL_35;
        }
        uint64_t v39 = 821709;
LABEL_38:
        uint64_t v9 = v57;
        uint64_t v41 = v51 + v39;
        if (__OFADD__(v51, v39)) {
          goto LABEL_62;
        }
        if (v41 >= a3)
        {

          char v55 = 1;
          if (!v57) {
            goto LABEL_56;
          }
LABEL_54:
          uint64_t v12 = v56;
          if (v14 >= v13) {
            goto LABEL_57;
          }
        }
        else
        {
          id v42 = sub_100579E1C();
          char v52 = v43;
          if (v43) {
            id v44 = 0;
          }
          else {
            id v44 = v42;
          }
          id v49 = v44;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v56 = sub_100571BE0(0, v56[2] + 1, 1, v56);
          }
          unint64_t v46 = v56[2];
          unint64_t v45 = v56[3];
          if (v46 >= v45 >> 1) {
            uint64_t v56 = sub_100571BE0((void *)(v45 > 1), v46 + 1, 1, v56);
          }
          void v56[2] = v46 + 1;
          id v47 = &v56[3 * v46];
          *((_DWORD *)v47 + 8) = v50;
          v47[5] = v49;
          *((unsigned char *)v47 + 48) = v52 & 1;
          uint64_t v51 = v41;
LABEL_48:

          uint64_t v9 = v57;
          if (!v57 || v14 >= v13)
          {
LABEL_56:
            uint64_t v12 = v56;
            goto LABEL_57;
          }
        }
      }
      uint64_t v37 = 0;
LABEL_35:
      uint64_t v40 = 809;
      if (v37 > 809) {
        uint64_t v40 = v37;
      }
      uint64_t v39 = v37 + v40 + 1709;
      goto LABEL_38;
    }
  }
LABEL_57:

  swift_bridgeObjectRelease();
  if (!v12[2] && (v55 & 1) != 0) {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1005713CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    if (*(_DWORD *)(a2 + 32) == *(_DWORD *)(a1 + 32))
    {
      uint64_t v3 = (_DWORD *)(a2 + 56);
      uint64_t v4 = (_DWORD *)(a1 + 56);
      do
      {
        char v5 = *((unsigned char *)v4 - 8);
        if (*((unsigned char *)v3 - 8) == 1)
        {
          if ((*(unsigned char *)(v4 - 2) & 1) == 0) {
            return 0;
          }
        }
        else
        {
          if (*((void *)v4 - 2) != *((void *)v3 - 2)) {
            char v5 = 1;
          }
          if (v5) {
            return 0;
          }
        }
        if (!--v2) {
          return 1;
        }
        int v7 = *v3;
        v3 += 6;
        int v6 = v7;
        int v8 = *v4;
        v4 += 6;
      }
      while (v6 == v8);
    }
    return 0;
  }
  return 1;
}

char *sub_100571454(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100719D30);
      id v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[64 * v8 + 32]) {
          memmove(v13, a4 + 32, v8 << 6);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1005728A8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_100571564(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100719D28);
      id v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[48 * v8 + 32]) {
          memmove(v12, a4 + 32, 48 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v12 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100572798(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10057168C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100719D20);
      id v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      long long v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001E054(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005717B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10057181C(a1, a2, a3, a4, &qword_100719D58, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
}

uint64_t sub_1005717E8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10057181C(a1, a2, a3, a4, &qword_100719D80, type metadata accessor for IndexUpdater.Element, type metadata accessor for IndexUpdater.Element);
}

uint64_t sub_10057181C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    NSString v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000566C(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  NSString v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1005E2F10();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  _OWORD v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10057348C(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_100571A9C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10057181C(a1, a2, a3, a4, &qword_100719CF8, type metadata accessor for MessageBeingDownloaded, type metadata accessor for MessageBeingDownloaded);
}

void *sub_100571AD0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100719D08);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100572C34(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100571BE0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100719D00);
      id v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      long long v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001E054(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100571D04(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100719D50);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001C898(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100571E14(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100719D68);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001B63C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100571F24(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100719D70);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100572B28(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100572034(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10057181C(a1, a2, a3, a4, &qword_100719D60, type metadata accessor for PendingItem, type metadata accessor for PendingItem);
}

void *sub_100572068(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100719D10);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      long long v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1005735E8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_10057217C(uint64_t a1)
{
  return sub_100571564(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_100572190(uint64_t a1)
{
  return sub_100571454(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1005721A4(unint64_t a1)
{
  return sub_10057181C(0, *(void *)(a1 + 16), 0, a1, &qword_100719CF8, type metadata accessor for MessageBeingDownloaded, type metadata accessor for MessageBeingDownloaded);
}

uint64_t sub_1005721FC@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100557A20(*a1, &v4);
  *a2 = v4;
  return result;
}

uint64_t sub_10057224C(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1005E2FB0();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      sub_1003C8730(0, qword_100718DD0);
      uint64_t v3 = 4;
      do
      {
        uint64_t v4 = v3 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = sub_1005E2CF0();
          BOOL v6 = __OFADD__(v4, 1);
          uint64_t v7 = v3 - 3;
          if (v6) {
            goto LABEL_14;
          }
        }
        else
        {
          uint64_t v5 = *(void *)(a1 + 8 * v3);
          swift_retain();
          BOOL v6 = __OFADD__(v4, 1);
          uint64_t v7 = v3 - 3;
          if (v6)
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        if (sub_1005E2840())
        {
          swift_bridgeObjectRelease();
          return v5;
        }
        swift_release();
        ++v3;
      }
      while (v7 != v2);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10057237C(long long *a1, long long *a2)
{
  sub_1003DC26C(a1, (uint64_t)v13);
  if ((v14 & 1) == 0)
  {
    int64x2_t v9 = (int64x2_t)v13[0];
    int64x2_t v10 = (int64x2_t)v13[1];
    sub_1003DC26C(a2, (uint64_t)v11);
    if ((v12 & 1) == 0)
    {
      char v7 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(v9, v11[0]), (int32x4_t)vceqq_s64(v10, v11[1]))), 0xFuLL)));
      return v7 & 1;
    }
    goto LABEL_7;
  }
  uint64_t v3 = *(void *)&v13[0];
  int v4 = DWORD2(v13[0]);
  sub_1003DC26C(a2, (uint64_t)v11);
  if (v12 != 1)
  {
LABEL_7:
    char v7 = 0;
    return v7 & 1;
  }
  __int32 v5 = v11[0].i32[2];
  char v6 = sub_1005713CC(v3, v11[0].i64[0]);
  char v7 = v4 == v5;
  if ((v6 & 1) == 0) {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_100572458(int a1, uint64_t a2, char a3, int a4, uint64_t a5, char a6)
{
  if (a4 == a1)
  {
    if (a3)
    {
      if (a6) {
        return 1;
      }
    }
    else
    {
      if (a6) {
        a5 = 0;
      }
      if ((a6 & 1) == 0 && a5 == a2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_10057248C(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!((unint64_t)*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1005E2FB0();
  swift_bridgeObjectRelease();
  if (v20 < v2) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    uint64_t v8 = v21 + v5;
    if (!__OFADD__(v21, v5)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if ((unint64_t)*v3 >> 62) {
    goto LABEL_32;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      *uint64_t v3 = sub_1005E2D00();
      swift_bridgeObjectRelease();
      uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    sub_1005E2FB0();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v12 = v11 + 32;
  uint64_t v13 = (char *)(v11 + 32 + 8 * v4);
  _s14descr1006B9AE9V11AccountInfoCMa();
  swift_arrayDestroy();
  if (v5)
  {
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1005E2FB0();
      swift_bridgeObjectRelease();
      uint64_t v15 = v22 - v2;
      if (!__OFSUB__(v22, v2))
      {
LABEL_17:
        if (v15 < 0)
        {
LABEL_42:
          uint64_t result = sub_1005E3000();
          __break(1u);
          return result;
        }
        uint64_t v16 = (char *)(v12 + 8 * v2);
        if (v4 != v2 || v13 >= &v16[8 * v15]) {
          memmove(v13, v16, 8 * v15);
        }
        if (!((unint64_t)*v3 >> 62))
        {
          uint64_t v17 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v18 = v17 + v5;
          if (!__OFADD__(v17, v5))
          {
LABEL_23:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v18;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_1005E2FB0();
        swift_bridgeObjectRelease();
        uint64_t v18 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v15 = v14 - v2;
      if (!__OFSUB__(v14, v2)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  return sub_1005E20E0();
}

uint64_t sub_100572798(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_10000566C(&qword_100719A80);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1005728A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      sub_10000566C(&qword_100719D38);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1005729B4(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *((void *)v4 + 3) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_100571454(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  sub_10000566C(&qword_100719D38);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = *((void *)v4 + 2);
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = &v4[64 * a2 + 32];
    if (a1 != a2 || &v4[64 * a1 + 32] >= &v16[64 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[64 * a1 + 32], v16, v15 << 6);
    }
    uint64_t v17 = *((void *)v4 + 2);
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      *((void *)v4 + 2) = v18;
LABEL_20:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100572B28(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_10000566C(&qword_100719D78);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100572C34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_10000566C(&qword_100719A70);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

void *sub_100572D40(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  int64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[2] = a1;
  v3[3] = a2;
  int64x2_t v10 = *(void **)(a2 + 16);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  id v12 = objc_allocWithZone((Class)NSSortDescriptor);
  id v13 = a1;
  swift_retain();
  id v14 = v10;
  NSString v15 = sub_1005E1BD0();
  id v16 = [v12 initWithKey:v15 ascending:0];

  if (qword_1007187D0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1003461B0(v6, (uint64_t)qword_100719C28);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v17, v6);
  type metadata accessor for MessagesSource();
  swift_allocObject();
  v3[4] = sub_10056F108(v14, (uint64_t)sub_100573484, v11, 401, v16, (uint64_t)v9, (uint64_t)UInt32.init(_:), 0);
  v3[5] = *(void *)sub_1005E0BF0();
  swift_retain();
  return v3;
}

uint64_t sub_100572F58(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1005E2FB0();
  swift_bridgeObjectRelease();
  if (v18 < v2) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    uint64_t v8 = v19 + v5;
    if (!__OFADD__(v19, v5)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v3 >> 62) {
    goto LABEL_32;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v9 = sub_1005E2D00();
      swift_bridgeObjectRelease();
      *uint64_t v3 = v9;
      uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    sub_1005E2FB0();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  type metadata accessor for MessagesToDownload.Source();
  swift_arrayDestroy();
  if (v5)
  {
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1005E2FB0();
      swift_bridgeObjectRelease();
      uint64_t v13 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_17:
        if (v13 < 0)
        {
LABEL_42:
          uint64_t result = sub_1005E3000();
          __break(1u);
          return result;
        }
        id v14 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v14 + 8 * v13) {
          memmove((void *)(v11 + 32 + 8 * v4), v14, 8 * v13);
        }
        if (!(v9 >> 62))
        {
          uint64_t v15 = *(void *)(v11 + 16);
          uint64_t v16 = v15 + v5;
          if (!__OFADD__(v15, v5))
          {
LABEL_23:
            *(void *)(v11 + 16) = v16;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_1005E2FB0();
        swift_bridgeObjectRelease();
        uint64_t v16 = v21 + v5;
        if (!__OFADD__(v21, v5)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = v12 - v2;
      if (!__OFSUB__(v12, v2)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  return sub_1005E20E0();
}

uint64_t sub_100573234(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_10057181C(isUniquelyReferenced_nonNull_native, v11, 1, v4, &qword_100719CF8, type metadata accessor for MessageBeingDownloaded, type metadata accessor for MessageBeingDownloaded);
  }
  uint64_t v12 = *(void *)(type metadata accessor for MessageBeingDownloaded(0) - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10057344C()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100573484(uint64_t a1)
{
  return sub_100570714(a1, *(void **)(v1 + 16));
}

uint64_t sub_10057348C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1005735E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_10000566C(&qword_100719D18);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1005736F4(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100719D40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100573754(uint64_t a1)
{
  uint64_t v2 = _s5StateV15DeferredRequestVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005737B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14descr1006B99F1V6LoggerVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100573814()
{
  uint64_t v1 = *(void *)(_s14descr1006B99F1V6LoggerVMa(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1005738F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id sub_10057395C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(_s14descr1006B99F1V6LoggerVMa(0) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_100570AB0(v4, v5, a1);
}

uint64_t destroy for MessagesToDownload.DeferredReply(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t _s17IMAPSearchIndexer18MessagesToDownloadV13DeferredReplyVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  id v4 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessagesToDownload.DeferredReply(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MessagesToDownload.DeferredReply(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MessagesToDownload.DeferredReply()
{
  return &type metadata for MessagesToDownload.DeferredReply;
}

__n128 initializeBufferWithCopyOfBuffer for MessagesToDownload.Source.Message(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for MessagesToDownload.Source.Message()
{
  return &type metadata for MessagesToDownload.Source.Message;
}

uint64_t sub_100573B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for MessagesToDownload.Source.FindMessagesResult(uint64_t a1)
{
  return sub_100573B60(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_100573B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MessagesToDownload.Source.FindMessagesResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_100573B40(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for MessagesToDownload.Source.FindMessagesResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_100573B40(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_100573B60(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for MessagesToDownload.Source.FindMessagesResult(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MessagesToDownload.Source.FindMessagesResult(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = v3;
  sub_100573B60(v4, v6, v5, v7, v8);
  return a1;
}

ValueMetadata *type metadata accessor for MessagesToDownload.Source.FindMessagesResult()
{
  return &type metadata for MessagesToDownload.Source.FindMessagesResult;
}

ValueMetadata *_s5StateVMa_1()
{
  return &_s5StateVN_0;
}

Swift::Int sub_100573CC4(uint64_t a1)
{
  sub_1005E33F0();
  sub_1005E3440(*v1);
  sub_10000566C(&qword_100719A68);
  sub_100578938();
  sub_1005E19C0();
  sub_1005E3410(*(void *)((char *)v1 + *(int *)(a1 + 24)));
  return sub_1005E3470();
}

void sub_100573D54(uint64_t a1, uint64_t a2)
{
  sub_1005E3440(*v2);
  sub_10000566C(&qword_100719A68);
  sub_100578938();
  sub_1005E19C0();
  sub_1005E3410(*(void *)((char *)v2 + *(int *)(a2 + 24)));
}

Swift::Int sub_100573DD4(uint64_t a1, uint64_t a2)
{
  sub_1005E33F0();
  sub_1005E3440(*v2);
  sub_10000566C(&qword_100719A68);
  sub_100578938();
  sub_1005E19C0();
  sub_1005E3410(*(void *)((char *)v2 + *(int *)(a2 + 24)));
  return sub_1005E3470();
}

BOOL sub_100573E60(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  if (*a1 == *a2 && (sub_10053E98C(), (sub_1005E35A0() & 1) != 0)) {
    return *(void *)((char *)a1 + *(int *)(a3 + 24)) == *(void *)((char *)a2 + *(int *)(a3 + 24));
  }
  else {
    return 0;
  }
}

uint64_t sub_100573EF0(uint64_t *a1, void **a2)
{
  return sub_1005755D4(*a2, *a1);
}

uint64_t sub_100573F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v98 = a2;
  uint64_t v99 = a4;
  uint64_t v96 = a3;
  uint64_t v97 = a1;
  uint64_t v100 = a6;
  uint64_t v8 = _s14descr1006B99F1V6LoggerVMa(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005E0ED0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v95 = (char *)&v89 - v17;
  __chkstk_darwin(v16);
  int v94 = (char *)&v89 - v18;
  uint64_t v19 = sub_10000566C(&qword_100719DA8);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = _s5StateV7RequestVMa(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v25 = __chkstk_darwin(v24);
  __chkstk_darwin(v25);
  unint64_t v101 = v6;
  uint64_t v102 = (uint64_t)&v89 - v28;
  if (*(uint64_t *)(*v6 + 24) < 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
    sub_100007A48((uint64_t)v21, &qword_100719DA8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a5, v11);
    sub_100576A60(a5, (uint64_t)v10, _s14descr1006B99F1V6LoggerVMa);
    char v55 = &v10[*(int *)(v8 + 20)];
    char v56 = *v55;
    int v57 = *((_DWORD *)v55 + 1);
    sub_100576AC8((uint64_t)v10, _s14descr1006B99F1V6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    id v58 = sub_1005E0EB0();
    os_log_type_t v59 = sub_1005E2590();
    if (os_log_type_enabled(v58, v59))
    {
      int v60 = v57;
      uint64_t v61 = swift_slowAlloc();
      *(_DWORD *)uint64_t v61 = 68158464;
      LODWORD(v104) = 2;
      sub_1005E2960();
      *(_WORD *)(v61 + 8) = 256;
      LOBYTE(v104) = v56;
      sub_1005E2960();
      *(_WORD *)(v61 + 11) = 1040;
      LODWORD(v104) = 8;
      sub_1005E2960();
      *(_WORD *)(v61 + 17) = 1024;
      LODWORD(v104) = v60;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "[%.*hhx-%.*X] No deferred message requests.", (uint8_t *)v61, 0x17u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    goto LABEL_31;
  }
  id v29 = v27;
  unint64_t v92 = (_DWORD *)v26;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_1005754CC(_s5StateV7RequestVMa, &qword_100719D98, _s5StateV7RequestVMa);
  }
  unint64_t v30 = (void *)*v101;
  unint64_t v91 = (*(unsigned __int8 *)(v23 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v31 = v30[4];
  uint64_t v90 = *(void *)(v23 + 72);
  uint64_t result = sub_100576B7C((uint64_t)v30 + v91 + v90 * v31, (uint64_t)v21, _s5StateV7RequestVMa);
  uint64_t v33 = v30[4];
  BOOL v34 = __OFADD__(v33, 1);
  uint64_t v35 = v33 + 1;
  if (v34)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v36 = v30[3];
  if (v35 >= v30[2]) {
    uint64_t v35 = 0;
  }
  v30[4] = v35;
  if (__OFSUB__(v36, 1)) {
    goto LABEL_34;
  }
  v30[3] = v36 - 1;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
  uint64_t v37 = v102;
  sub_100576B7C((uint64_t)v21, v102, _s5StateV7RequestVMa);
  uint64_t v38 = *(void *)(v37 + *(int *)(v22 + 24));
  uint64_t v39 = v96;
  uint64_t v40 = sub_10055F288(v38, v97, v98, v96, v99);
  uint64_t v42 = v12;
  char v43 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v93 = v11;
  if (v40 < 1 || v41 < 1)
  {
    NSString v62 = v95;
    v43(v95, a5, v11);
    sub_100576A60(a5, (uint64_t)v10, _s14descr1006B99F1V6LoggerVMa);
    unint64_t v63 = &v10[*(int *)(v8 + 20)];
    char v64 = *v63;
    int v65 = *((_DWORD *)v63 + 1);
    sub_100576AC8((uint64_t)v10, _s14descr1006B99F1V6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v66 = v102;
    id v67 = v92;
    sub_100576A60(v102, (uint64_t)v92, _s5StateV7RequestVMa);
    uint64_t v68 = sub_1005E0EB0();
    os_log_type_t v69 = sub_1005E25C0();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = swift_slowAlloc();
      uint64_t v104 = swift_slowAlloc();
      *(_DWORD *)uint64_t v70 = 68158722;
      LODWORD(v103) = 2;
      uint64_t v99 = v42;
      sub_1005E2960();
      *(_WORD *)(v70 + 8) = 256;
      LOBYTE(v103) = v64;
      sub_1005E2960();
      *(_WORD *)(v70 + 11) = 1040;
      LODWORD(v103) = 8;
      sub_1005E2960();
      *(_WORD *)(v70 + 17) = 1024;
      LODWORD(v103) = v65;
      sub_1005E2960();
      *(_WORD *)(v70 + 23) = 2080;
      LODWORD(v103) = *v67;
      sub_100576B28();
      uint64_t v71 = sub_1005E1F20();
      uint64_t v103 = sub_1005904BC(v71, v72, &v104);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100576AC8((uint64_t)v67, _s5StateV7RequestVMa);
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "[%.*hhx-%.*X] Currently no capacity for deferred message request %s.", (uint8_t *)v70, 0x21u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v99 + 8))(v95, v93);
    }
    else
    {
      sub_100576AC8((uint64_t)v67, _s5StateV7RequestVMa);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v62, v93);
    }
    uint64_t v80 = v101;
    uint64_t result = *v101;
    uint64_t v81 = *(void *)(*v101 + 24);
    Swift::Int v82 = v81 + 1;
    if (!__OFADD__(v81, 1))
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      id v83 = (void *)*v80;
      if (*(void *)(*v80 + 16) < v82 || (result & 1) == 0) {
        goto LABEL_27;
      }
      uint64_t v84 = v83[4];
      if (v84)
      {
        while (1)
        {
          Swift::Int v82 = v84 - 1;
          if (!__OFSUB__(v84, 1)) {
            break;
          }
          __break(1u);
LABEL_27:
          uint64_t result = sub_100574BCC(v82, 0, _s5StateV7RequestVMa, &qword_100719D98, _s5StateV7RequestVMa);
          id v83 = (void *)*v80;
          uint64_t v84 = *(void *)(*v80 + 32);
          if (!v84) {
            goto LABEL_28;
          }
        }
      }
      else
      {
LABEL_28:
        uint64_t v85 = v83[2];
        Swift::Int v82 = v85 - 1;
        if (__OFSUB__(v85, 1))
        {
LABEL_37:
          __break(1u);
          return result;
        }
      }
      uint64_t result = sub_100576A60(v66, (uint64_t)v83 + v91 + v82 * v90, _s5StateV7RequestVMa);
      v83[4] = v82;
      uint64_t v86 = v83[3];
      BOOL v34 = __OFADD__(v86, 1);
      uint64_t v87 = v86 + 1;
      if (!v34)
      {
        v83[3] = v87;
        sub_100576AC8(v66, _s5StateV7RequestVMa);
LABEL_31:
        uint64_t v88 = _s5StateV15DeferredRequestVMa(0);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v100, 1, 1, v88);
      }
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  unint64_t v95 = (char *)v41;
  unint64_t v101 = (uint64_t *)v40;
  id v44 = v94;
  v43(v94, a5, v11);
  sub_100576A60(a5, (uint64_t)v10, _s14descr1006B99F1V6LoggerVMa);
  unint64_t v45 = &v10[*(int *)(v8 + 20)];
  char v46 = *v45;
  int v47 = *((_DWORD *)v45 + 1);
  sub_100576AC8((uint64_t)v10, _s14descr1006B99F1V6LoggerVMa);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v48 = v102;
  sub_100576A60(v102, (uint64_t)v29, _s5StateV7RequestVMa);
  id v49 = sub_1005E0EB0();
  os_log_type_t v50 = sub_1005E25C0();
  if (os_log_type_enabled(v49, v50))
  {
    int v51 = v47;
    uint64_t v52 = swift_slowAlloc();
    uint64_t v104 = swift_slowAlloc();
    *(_DWORD *)uint64_t v52 = 68158722;
    LODWORD(v103) = 2;
    sub_1005E2960();
    *(_WORD *)(v52 + 8) = 256;
    LOBYTE(v103) = v46;
    sub_1005E2960();
    *(_WORD *)(v52 + 11) = 1040;
    LODWORD(v103) = 8;
    sub_1005E2960();
    *(_WORD *)(v52 + 17) = 1024;
    LODWORD(v103) = v51;
    sub_1005E2960();
    *(_WORD *)(v52 + 23) = 2080;
    LODWORD(v103) = *v29;
    sub_100576B28();
    uint64_t v53 = sub_1005E1F20();
    uint64_t v103 = sub_1005904BC(v53, v54, &v104);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100576AC8((uint64_t)v29, _s5StateV7RequestVMa);
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "[%.*hhx-%.*X] Popped deferred message request %s.", (uint8_t *)v52, 0x21u);
    swift_arrayDestroy();
    uint64_t v48 = v102;
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v42 + 8))(v94, v93);
    uint64_t v39 = v96;
  }
  else
  {
    sub_100576AC8((uint64_t)v29, _s5StateV7RequestVMa);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v93);
  }
  uint64_t v73 = v100;
  sub_100576B7C(v48, v100, _s5StateV7RequestVMa);
  uint64_t v74 = _s5StateV15DeferredRequestVMa(0);
  unint64_t v75 = (uint64_t **)(v73 + *(int *)(v74 + 20));
  uint64_t v76 = v95;
  *unint64_t v75 = v101;
  v75[1] = (uint64_t *)v76;
  unint64_t v77 = (void *)(v73 + *(int *)(v74 + 24));
  uint64_t v78 = v98;
  void *v77 = v97;
  v77[1] = v78;
  uint64_t v79 = v99;
  v77[2] = v39;
  v77[3] = v79;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v73, 0, 1, v74);
}

size_t sub_100574BA8(Swift::Int a1, char a2)
{
  return sub_100574BCC(a1, a2, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa, &qword_100719DA0, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
}

size_t sub_100574BCC(Swift::Int a1, char a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v9 = *v5;
  uint64_t v10 = (Swift::Int *)(*v5 + 16);
  Swift::Int v11 = *v10;
  if (*v10 >= a1)
  {
    uint64_t v25 = *(unsigned __int8 *)(*(void *)(a3(0) - 8) + 80);
    sub_10000566C(a4);
    uint64_t v22 = swift_allocObject();
    long long v26 = *(_OWORD *)(v9 + 24);
    *(void *)(v22 + 16) = v11;
    *(_OWORD *)(v22 + 24) = v26;
    if ((uint64_t)v26 >= 1) {
      sub_100575310(v22 + 16, v22 + ((v25 + 40) & ~v25), v10, v9 + ((v25 + 40) & ~v25), a5);
    }
    goto LABEL_19;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *v5;
  uint64_t v16 = a3(0);
  sub_1005E0C00(a1, a2 & 1);
  if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
    uint64_t v19 = *(void *)(v15 + 24);
    sub_10000566C(a4);
    uint64_t v20 = *(void *)(v17 + 72);
    uint64_t v21 = (v18 + 40) & ~v18;
    uint64_t v22 = swift_allocObject();
    size_t result = j__malloc_size((const void *)v22);
    if (v20)
    {
      if (result - v21 != 0x8000000000000000 || v20 != -1)
      {
        *(void *)(v22 + 16) = (uint64_t)(result - v21) / v20;
        *(void *)(v22 + 24) = v19;
        *(void *)(v22 + 32) = 0;
        if (v19 >= 1)
        {
          swift_retain();
          sub_100574FC8(v22 + 16, v22 + v21, (void *)(v15 + 16), v15 + v21, a5);
          *(void *)(v15 + 24) = 0;
          swift_release();
        }
LABEL_19:
        size_t result = swift_release();
        *uint64_t v5 = v22;
        return result;
      }
      goto LABEL_22;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v27 = *(void *)(v16 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  sub_10000566C(a4);
  uint64_t v29 = *(void *)(v27 + 72);
  uint64_t v30 = (v28 + 40) & ~v28;
  uint64_t v22 = swift_allocObject();
  size_t result = j__malloc_size((const void *)v22);
  if (!v29) {
    goto LABEL_21;
  }
  if (result - v30 != 0x8000000000000000 || v29 != -1)
  {
    uint64_t v32 = *(void *)(v15 + 24);
    *(void *)(v22 + 16) = (uint64_t)(result - v30) / v29;
    *(void *)(v22 + 24) = v32;
    *(void *)(v22 + 32) = 0;
    if (v32 >= 1) {
      sub_100575168(v22 + 16, v22 + v30, (void *)(v15 + 16), v15 + v30, a5);
    }
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
  return result;
}

void *sub_100574EC0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_100574F00(a1, a2, a3, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
}

void *sub_100574F00(void *result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v5 = result[1];
  uint64_t v6 = result[2];
  uint64_t v7 = v6 + v5;
  if (!__OFADD__(v6, v5))
  {
    Swift::Int v11 = result;
    if ((v5 & 0x8000000000000000) == 0)
    {
      BOOL v12 = __OFSUB__(v7, *result);
      if (v7 < *result || (v7 -= *result, !v12))
      {
LABEL_9:
        uint64_t v13 = a4(0);
        size_t result = (void *)sub_100576A60(a3, a2 + *(void *)(*(void *)(v13 - 8) + 72) * v7, a5);
        uint64_t v14 = v11[1];
        BOOL v12 = __OFADD__(v14, 1);
        uint64_t v15 = v14 + 1;
        if (!v12)
        {
          v11[1] = v15;
          return result;
        }
        goto LABEL_12;
      }
      __break(1u);
    }
    if (v7 < 0)
    {
      BOOL v12 = __OFADD__(v7, *result);
      v7 += *result;
      if (v12) {
        goto LABEL_13;
      }
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

void sub_100574FC8(uint64_t a1, unint64_t a2, void *a3, unint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a3[2];
  uint64_t v6 = *a3 - v5;
  if (__OFSUB__(*a3, v5))
  {
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v9 = a3[1];
  uint64_t v10 = *(void *)(a5(0) - 8);
  if (v6 < v9)
  {
    uint64_t v11 = v9 - v6;
    if (!__OFSUB__(v9, v6))
    {
      uint64_t v12 = v6;
      unint64_t v13 = a4;
      goto LABEL_6;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  unint64_t v13 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = v9;
LABEL_6:
  BOOL v14 = v6 < v9;
  uint64_t v15 = *(void *)(v10 + 72);
  BOOL v16 = v11 != 0;
  BOOL v17 = v14 && v16;
  if (v14 && v16) {
    unint64_t v18 = v13;
  }
  else {
    unint64_t v18 = 0;
  }
  if (v14 && v16) {
    uint64_t v19 = v11;
  }
  else {
    uint64_t v19 = 0;
  }
  if (v12 < 1)
  {
    uint64_t v12 = 0;
    goto LABEL_22;
  }
  if (!a4)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  unint64_t v20 = a4 + v15 * v5;
  if (v20 <= a2 && v20 + v15 * v12 > a2)
  {
    if (v20 != a2) {
      swift_arrayInitWithTakeBackToFront();
    }
  }
  else
  {
    swift_arrayInitWithTakeFrontToBack();
  }
LABEL_22:
  if (!v17 || v19 <= 0) {
    return;
  }
  if (!v18)
  {
LABEL_36:
    __break(1u);
    return;
  }
  unint64_t v22 = a2 + v15 * v12;
  if (v22 < v18 || v22 >= v18 + v15 * v19)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v22 != v18)
  {
    swift_arrayInitWithTakeBackToFront();
  }
}

uint64_t sub_100575168(uint64_t a1, unint64_t a2, void *a3, unint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a3[2];
  uint64_t v6 = *a3 - v5;
  if (__OFSUB__(*a3, v5))
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v9 = a3[1];
  uint64_t result = a5(0);
  if (v6 < v9)
  {
    uint64_t v11 = v9 - v6;
    if (!__OFSUB__(v9, v6))
    {
      uint64_t v12 = v6;
      unint64_t v13 = a4;
      goto LABEL_6;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v13 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = v9;
LABEL_6:
  uint64_t v14 = *(void *)(*(void *)(result - 8) + 72);
  if (v12 < 1)
  {
    uint64_t v12 = 0;
    goto LABEL_14;
  }
  if (!a4)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v15 = a4 + v14 * v5;
  if (v15 < a2 + v14 * v12 && v15 + v14 * v12 > a2) {
    goto LABEL_30;
  }
  uint64_t result = swift_arrayInitWithCopy();
LABEL_14:
  if (v6 >= v9 || v11 < 1) {
    return result;
  }
  if (!v13)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t result = sub_1005E3000();
    __break(1u);
    return result;
  }
  unint64_t v18 = a2 + v14 * v12;
  if (v18 + v14 * v11 > v13 && v18 < v13 + v14 * v11) {
    goto LABEL_30;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_100575310(uint64_t a1, unint64_t a2, void *a3, unint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a3[2];
  uint64_t v6 = *a3 - v5;
  if (__OFSUB__(*a3, v5))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v9 = a3[1];
  uint64_t result = a5(0);
  if (v6 < v9)
  {
    uint64_t v11 = v9 - v6;
    if (!__OFSUB__(v9, v6))
    {
      uint64_t v12 = v6;
      unint64_t v13 = a4;
      goto LABEL_6;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v13 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = v9;
LABEL_6:
  uint64_t v14 = *(void *)(*(void *)(result - 8) + 72);
  if (v12 < 1) {
    goto LABEL_14;
  }
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v15 = a4 + v14 * v5;
  unint64_t v16 = a2 + v14 * v5;
  if (v15 < v16 + v14 * v12 && v16 < v15 + v14 * v12) {
    goto LABEL_29;
  }
  uint64_t result = swift_arrayInitWithCopy();
LABEL_14:
  if (v6 < v9 && v11 >= 1)
  {
    if (v13)
    {
      if (a2 + v14 * v11 <= v13 || v13 + v14 * v11 <= a2) {
        return swift_arrayInitWithCopy();
      }
LABEL_29:
      uint64_t result = sub_1005E3000();
      __break(1u);
      return result;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  return result;
}

uint64_t sub_1005754A8()
{
  return sub_1005754CC((uint64_t (*)(void))_s11QueuedItemsV4ItemVMa, &qword_100719DA0, (uint64_t (*)(void))_s11QueuedItemsV4ItemVMa);
}

uint64_t sub_1005754CC(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = *v3;
  uint64_t v7 = a1(0);
  uint64_t v8 = *(void *)(v6 + 16);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  sub_10000566C(a2);
  uint64_t v10 = swift_allocObject();
  long long v11 = *(_OWORD *)(v6 + 24);
  *(void *)(v10 + 16) = v8;
  *(_OWORD *)(v10 + 24) = v11;
  if ((uint64_t)v11 >= 1) {
    sub_100575310(v10 + 16, v10 + ((v9 + 40) & ~v9), (void *)(v6 + 16), v6 + ((v9 + 40) & ~v9), a3);
  }
  uint64_t result = swift_release();
  *char v3 = v10;
  return result;
}

uint64_t sub_1005755D4(void *a1, uint64_t a2)
{
  uint64_t v4 = _s5StateV7RequestVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (_DWORD *)((char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v9 = (_DWORD *)((char *)v29 - v8);
  uint64_t v30 = sub_10000566C(&qword_100719DB0);
  __chkstk_darwin();
  long long v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100719DA8);
  __chkstk_darwin();
  unint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v15 = (char *)v29 - v14;
  uint64_t v16 = a2;
  uint64_t v17 = *(void *)(a2 + 32);
  if (*(void *)(v16 + 16) >= *(void *)(v16 + 24) + v17) {
    uint64_t v18 = *(void *)(v16 + 24) + v17;
  }
  else {
    uint64_t v18 = *(void *)(v16 + 16);
  }
  uint64_t v35 = v16;
  uint64_t v36 = v17;
  uint64_t v37 = v18;
  v29[1] = a1;
  uint64_t v19 = a1[4];
  uint64_t v20 = a1[3] + v19;
  if (a1[2] < v20) {
    uint64_t v20 = a1[2];
  }
  uint64_t v32 = a1;
  uint64_t v33 = v19;
  uint64_t v34 = v20;
  uint64_t v31 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  swift_retain();
  swift_retain();
  if (v17 == v18) {
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v36 = v17 + 1;
  sub_100576A60(v35+ ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v17, (uint64_t)v15, _s5StateV7RequestVMa);
  unint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v22(v15, 0, 1, v4);
  while (1)
  {
    uint64_t v23 = v33;
    if (v33 != v34) {
      goto LABEL_14;
    }
    if (sub_100558B18())
    {
      uint64_t v23 = v33;
LABEL_14:
      uint64_t v33 = v23 + 1;
      sub_100576A60((uint64_t)v32+ ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v23, (uint64_t)v13, _s5StateV7RequestVMa);
      uint64_t v24 = 0;
      goto LABEL_16;
    }
    uint64_t v24 = 1;
LABEL_16:
    v22(v13, v24, 1, v4);
    uint64_t v25 = (uint64_t)&v11[*(int *)(v30 + 48)];
    sub_100577514((uint64_t)v15, (uint64_t)v11);
    sub_100577514((uint64_t)v13, v25);
    long long v26 = *v21;
    if ((*v21)(v11, 1, v4) == 1) {
      break;
    }
    if (v26((char *)v25, 1, v4) == 1)
    {
      swift_release();
      swift_release();
      sub_100576AC8((uint64_t)v11, _s5StateV7RequestVMa);
      return 0;
    }
    sub_100576B7C((uint64_t)v11, (uint64_t)v9, _s5StateV7RequestVMa);
    sub_100576B7C(v25, (uint64_t)v7, _s5StateV7RequestVMa);
    if (*v9 != *v7
      || (sub_10053E98C(), (sub_1005E35A0() & 1) == 0)
      || *(void *)((char *)v9 + *(int *)(v4 + 24)) != *(void *)((char *)v7 + *(int *)(v4 + 24)))
    {
      sub_100576AC8((uint64_t)v7, _s5StateV7RequestVMa);
      sub_100576AC8((uint64_t)v9, _s5StateV7RequestVMa);
      swift_release();
      swift_release();
      return 0;
    }
    sub_100576AC8((uint64_t)v7, _s5StateV7RequestVMa);
    sub_100576AC8((uint64_t)v9, _s5StateV7RequestVMa);
    uint64_t v17 = v36;
    if (v36 != v37) {
      goto LABEL_9;
    }
LABEL_7:
    if (sub_100558B18())
    {
      uint64_t v17 = v36;
      goto LABEL_9;
    }
    unint64_t v22 = *v31;
    (*v31)(v15, 1, 1, v4);
  }
  swift_release();
  swift_release();
  uint64_t v27 = 1;
  if (v26((char *)v25, 1, v4) == 1) {
    return v27;
  }
  sub_100007A48(v25, &qword_100719DA8);
  return 0;
}

uint64_t sub_100575AC8(_DWORD *a1, _DWORD *a2)
{
  if (*a1 != *a2) {
    goto LABEL_8;
  }
  uint64_t v4 = _s5StateV7RequestVMa(0);
  sub_10053E98C();
  if ((sub_1005E35A0() & 1) == 0
    || *(void *)((char *)a1 + *(int *)(v4 + 24)) != *(void *)((char *)a2 + *(int *)(v4 + 24)))
  {
    goto LABEL_8;
  }
  uint64_t v5 = _s5StateV15DeferredRequestVMa(0);
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v8 = *(void *)((char *)a1 + v6);
  uint64_t v7 = *(void *)((char *)a1 + v6 + 8);
  uint64_t v9 = (uint64_t *)((char *)a2 + v6);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  if (v8 == v11 && v7 == v10) {
    char v13 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)((char *)a1 + *(int *)(v5 + 24)), *(int64x2_t *)((char *)a2 + *(int *)(v5 + 24))), (int32x4_t)vceqq_s64(*(int64x2_t *)((char *)a1 + *(int *)(v5 + 24) + 16), *(int64x2_t *)((char *)a2 + *(int *)(v5 + 24) + 16)))), 0xFuLL)));
  }
  else {
LABEL_8:
  }
    char v13 = 0;
  return v13 & 1;
}

uint64_t sub_100575BC0(uint64_t a1, uint64_t a2)
{
  v32.i64[0] = a2;
  uint64_t v31 = _s5StateV7RequestVMa(0);
  __chkstk_darwin();
  uint64_t v4 = (__int32 *)((char *)v28.i32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = _s5StateV15DeferredRequestVMa(0);
  __chkstk_darwin();
  uint64_t v7 = (__int32 *)((char *)v28.i32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  _s5StateV6ActionOMa(0);
  __chkstk_darwin();
  uint64_t v9 = (__int32 *)((char *)v28.i32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v11 = (__int32 *)((char *)v28.i32 - v10);
  sub_10000566C(&qword_100719FA0);
  uint64_t v12 = __chkstk_darwin();
  uint64_t v14 = &v28.i8[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100576A60(a1, (uint64_t)v14, _s5StateV6ActionOMa);
  sub_100576A60(v32.i64[0], v15, _s5StateV6ActionOMa);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_100576A60((uint64_t)v14, (uint64_t)v11, _s5StateV6ActionOMa);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_100576B7C(v15, (uint64_t)v7, _s5StateV15DeferredRequestVMa);
      if (*v11 == *v7)
      {
        sub_10053E98C();
        if ((sub_1005E35A0() & 1) != 0
          && *(void *)((char *)v11 + *(int *)(v31 + 24)) == *(void *)((char *)v7 + *(int *)(v31 + 24)))
        {
          uint64_t v21 = *(int *)(v5 + 20);
          unint64_t v22 = (char *)v11 + v21;
          uint64_t v23 = *(void *)((char *)v11 + v21);
          uint64_t v24 = (void *)((char *)v7 + v21);
          if (v23 == *v24
            && *((void *)v22 + 1) == v24[1]
            && (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)((char *)v11 + *(int *)(v5 + 24)), *(int64x2_t *)((char *)v7 + *(int *)(v5 + 24))), (int32x4_t)vceqq_s64(*(int64x2_t *)((char *)v11 + *(int *)(v5 + 24) + 16), *(int64x2_t *)((char *)v7 + *(int *)(v5 + 24) + 16)))), 0xFuLL))) & 1) != 0)
          {
            sub_100576AC8((uint64_t)v7, _s5StateV15DeferredRequestVMa);
            sub_100576AC8((uint64_t)v11, _s5StateV15DeferredRequestVMa);
            sub_100576AC8((uint64_t)v14, _s5StateV6ActionOMa);
            char v18 = 1;
            return v18 & 1;
          }
        }
      }
      uint64_t v25 = _s5StateV15DeferredRequestVMa;
      sub_100576AC8((uint64_t)v7, _s5StateV15DeferredRequestVMa);
      uint64_t v26 = (uint64_t)v11;
      goto LABEL_19;
    }
    uint64_t v19 = _s5StateV15DeferredRequestVMa;
    uint64_t v20 = (uint64_t)v11;
LABEL_10:
    sub_100576AC8(v20, v19);
    sub_100007A48((uint64_t)v14, &qword_100719FA0);
LABEL_20:
    char v18 = 0;
    return v18 & 1;
  }
  sub_100576A60((uint64_t)v14, (uint64_t)v9, _s5StateV6ActionOMa);
  uint64_t v16 = *(int *)(sub_10000566C(&qword_100719D88) + 48);
  int64x2_t v32 = *(int64x2_t *)((char *)v9 + v16 + 16);
  int64x2_t v30 = *(int64x2_t *)((char *)v9 + v16);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v19 = _s5StateV7RequestVMa;
    uint64_t v20 = (uint64_t)v9;
    goto LABEL_10;
  }
  int64x2_t v17 = *(int64x2_t *)(v15 + v16 + 16);
  int64x2_t v28 = *(int64x2_t *)(v15 + v16);
  int64x2_t v29 = v17;
  sub_100576B7C(v15, (uint64_t)v4, _s5StateV7RequestVMa);
  if (*v9 != *v4
    || (sub_10053E98C(), (sub_1005E35A0() & 1) == 0)
    || *(void *)((char *)v9 + *(int *)(v31 + 24)) != *(void *)((char *)v4 + *(int *)(v31 + 24)))
  {
    uint64_t v25 = _s5StateV7RequestVMa;
    sub_100576AC8((uint64_t)v4, _s5StateV7RequestVMa);
    uint64_t v26 = (uint64_t)v9;
LABEL_19:
    sub_100576AC8(v26, v25);
    sub_100576AC8((uint64_t)v14, _s5StateV6ActionOMa);
    goto LABEL_20;
  }
  sub_100576AC8((uint64_t)v4, _s5StateV7RequestVMa);
  sub_100576AC8((uint64_t)v9, _s5StateV7RequestVMa);
  char v18 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(v30, v28), (int32x4_t)vceqq_s64(v32, v29))), 0xFuLL)));
  sub_100576AC8((uint64_t)v14, _s5StateV6ActionOMa);
  return v18 & 1;
}

uint64_t sub_100576128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v92 = a8;
  uint64_t v87 = a5;
  uint64_t v88 = a6;
  uint64_t v86 = a9;
  uint64_t v82 = _s14descr1006B99F1V6LoggerVMa(0);
  __chkstk_darwin();
  uint64_t v81 = (uint64_t)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_1005E0ED0();
  uint64_t v89 = *(void (***)(char *, uint64_t, uint64_t))(v91 - 8);
  __chkstk_darwin();
  uint64_t v84 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = _s5StateV7RequestVMa(0);
  uint64_t v79 = *(void *)(v16 - 8);
  __chkstk_darwin();
  id v83 = (_DWORD *)((char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v85 = (uint64_t)&v77 - v18;
  uint64_t v19 = _s5StateV15DeferredRequestVMa(0);
  __chkstk_darwin();
  uint64_t v80 = (uint64_t)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s5StateV6ActionOMa(0);
  __chkstk_darwin();
  unint64_t v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v24 = (void (**)(char *, uint64_t, uint64_t))((char *)&v77 - v23);
  uint64_t v90 = a7;
  if (*(void *)(*a7 + 24))
  {
    uint64_t v25 = a1;
    uint64_t v26 = a2;
    uint64_t v27 = a3;
    uint64_t v28 = a4;
    uint64_t v29 = v87;
    int64x2_t v30 = (char *)v24 + *(int *)(sub_10000566C(&qword_100719D88) + 48);
    uint64_t v31 = v25;
  }
  else
  {
    uint64_t v32 = *(int *)(v16 + 24);
    uint64_t v78 = a1;
    uint64_t v33 = *(void *)(a1 + v32);
    uint64_t v26 = a2;
    uint64_t v34 = a2;
    uint64_t v27 = a3;
    uint64_t v35 = a3;
    uint64_t v28 = a4;
    uint64_t v36 = a4;
    uint64_t v29 = v87;
    uint64_t v37 = sub_10055F288(v33, v34, v35, v36, v87);
    if (v37 >= 1)
    {
      uint64_t v39 = v38;
      if (v38 >= 1)
      {
        uint64_t v40 = v37;
        sub_100576A60(v78, (uint64_t)v24, _s5StateV7RequestVMa);
        uint64_t v41 = (char *)v24 + *(int *)(v19 + 20);
        *(void *)uint64_t v41 = v40;
        *((void *)v41 + 1) = v39;
        int64x2_t v30 = (char *)v24 + *(int *)(v19 + 24);
        goto LABEL_8;
      }
    }
    int64x2_t v30 = (char *)v24 + *(int *)(sub_10000566C(&qword_100719D88) + 48);
    uint64_t v31 = v78;
  }
  sub_100576A60(v31, (uint64_t)v24, _s5StateV7RequestVMa);
LABEL_8:
  uint64_t v42 = v91;
  char v43 = v89;
  *(void *)int64x2_t v30 = v26;
  *((void *)v30 + 1) = v27;
  *((void *)v30 + 2) = v28;
  *((void *)v30 + 3) = v29;
  swift_storeEnumTagMultiPayload();
  sub_100576A60((uint64_t)v24, (uint64_t)v22, _s5StateV6ActionOMa);
  uint64_t v44 = (uint64_t)v24;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v62 = (uint64_t)v22;
    uint64_t v63 = v80;
    sub_100576B7C(v62, v80, _s5StateV15DeferredRequestVMa);
    sub_100576BE8(v63, v88, v90, v92, v94);
    uint64_t v64 = v94[0];
    uint64_t v65 = v94[1];
    uint64_t v66 = v94[2];
    uint64_t v67 = v94[3];
    char v68 = v95;
    sub_100576AC8(v63, _s5StateV15DeferredRequestVMa);
    uint64_t result = sub_100576AC8(v44, _s5StateV6ActionOMa);
LABEL_18:
    uint64_t v76 = v86;
    *uint64_t v86 = v64;
    v76[1] = v65;
    uint64_t v76[2] = v66;
    v76[3] = v67;
    *((unsigned char *)v76 + 32) = v68;
    return result;
  }
  uint64_t v89 = v24;
  unint64_t v45 = (uint64_t *)&v22[*(int *)(sub_10000566C(&qword_100719D88) + 48)];
  uint64_t v87 = *v45;
  uint64_t v80 = v45[1];
  uint64_t v47 = v45[2];
  uint64_t v46 = v45[3];
  uint64_t v78 = v47;
  uint64_t v77 = v46;
  uint64_t v48 = v85;
  sub_100576B7C((uint64_t)v22, v85, _s5StateV7RequestVMa);
  id v49 = v84;
  uint64_t v50 = v88;
  v43[2](v84, v88, v42);
  uint64_t v51 = v50;
  uint64_t v52 = v81;
  sub_100576A60(v51, v81, _s14descr1006B99F1V6LoggerVMa);
  uint64_t v53 = v52 + *(int *)(v82 + 20);
  char v54 = *(unsigned char *)v53;
  int v55 = *(_DWORD *)(v53 + 4);
  swift_retain();
  sub_100576AC8(v52, _s14descr1006B99F1V6LoggerVMa);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  char v56 = v83;
  sub_100576A60(v48, (uint64_t)v83, _s5StateV7RequestVMa);
  int v57 = sub_1005E0EB0();
  os_log_type_t v58 = sub_1005E25C0();
  if (os_log_type_enabled(v57, v58))
  {
    uint64_t v59 = swift_slowAlloc();
    v94[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v59 = 68158722;
    LODWORD(v93) = 2;
    sub_1005E2960();
    *(_WORD *)(v59 + 8) = 256;
    LOBYTE(v93) = v54;
    sub_1005E2960();
    *(_WORD *)(v59 + 11) = 1040;
    LODWORD(v93) = 8;
    sub_1005E2960();
    *(_WORD *)(v59 + 17) = 1024;
    LODWORD(v93) = v55;
    sub_1005E2960();
    *(_WORD *)(v59 + 23) = 2080;
    LODWORD(v93) = *v56;
    sub_100576B28();
    uint64_t v60 = sub_1005E1F20();
    uint64_t v93 = sub_1005904BC(v60, v61, v94);
    uint64_t v48 = v85;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100576AC8((uint64_t)v56, _s5StateV7RequestVMa);
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "[%.*hhx-%.*X] Enqueuing message request %s.", (uint8_t *)v59, 0x21u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    ((void (*)(char *, uint64_t))v43[1])(v84, v91);
  }
  else
  {
    sub_100576AC8((uint64_t)v56, _s5StateV7RequestVMa);

    ((void (*)(char *, uint64_t))v43[1])(v49, v42);
  }
  uint64_t v71 = (uint64_t)v89;
  uint64_t v70 = v90;
  uint64_t v72 = *(void *)(*v90 + 24);
  Swift::Int v73 = v72 + 1;
  if (!__OFADD__(v72, 1))
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v75 = *v70;
    if (*(void *)(*v70 + 16) < v73 || (isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100574BCC(v73, 0, _s5StateV7RequestVMa, &qword_100719D98, _s5StateV7RequestVMa);
      uint64_t v75 = *v70;
    }
    sub_100574F00((void *)(v75 + 16), v75 + ((*(unsigned __int8 *)(v79 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80)), v48, _s5StateV7RequestVMa, _s5StateV7RequestVMa);
    sub_100576AC8(v48, _s5StateV7RequestVMa);
    sub_100576AC8(v71, _s5StateV6ActionOMa);
    uint64_t result = swift_release();
    char v68 = 0;
    uint64_t v64 = v87;
    uint64_t v65 = v80;
    uint64_t v66 = v78;
    uint64_t v67 = v77;
    goto LABEL_18;
  }
  __break(1u);
  uint64_t result = swift_release_n();
  __break(1u);
  return result;
}

uint64_t _s5StateV7RequestVMa(uint64_t a1)
{
  return sub_10003B314(a1, (uint64_t *)&unk_100719F50);
}

uint64_t _s5StateV15DeferredRequestVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_100719EB8);
}

uint64_t _s5StateV6ActionOMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_100719E28);
}

uint64_t sub_100576A60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100576AC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100576B28()
{
  unint64_t result = qword_100719D90;
  if (!qword_100719D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719D90);
  }
  return result;
}

uint64_t sub_100576B7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100576BE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v67 = a3;
  uint64_t v70 = a5;
  uint64_t v71 = a2;
  uint64_t v7 = _s5StateV15DeferredRequestVMa(0);
  __chkstk_darwin();
  os_log_type_t v69 = (_DWORD *)((char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  char v68 = (_DWORD *)((char *)&v64 - v9);
  uint64_t v10 = _s14descr1006B99F1V6LoggerVMa(0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005E0ED0();
  uint64_t v73 = *(void *)(v13 - 8);
  uint64_t v74 = v13;
  __chkstk_darwin();
  uint64_t v66 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v64 - v15;
  uint64_t v17 = _s5StateV7RequestVMa(0) - 8;
  uint64_t v18 = *(void *)v17;
  __chkstk_darwin();
  uint64_t v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100576A60(a1, (uint64_t)v20, _s5StateV7RequestVMa);
  uint64_t v21 = (uint64_t)&v20[*(int *)(v17 + 28)];
  uint64_t v22 = *(int *)(v7 + 20);
  uint64_t v72 = (_DWORD *)a1;
  sub_100570D78(v21, *(void *)(a1 + v22), *(void *)(a1 + v22 + 8));
  uint64_t v24 = v23;
  sub_100007A48(v21, (uint64_t *)&unk_100719790);
  if (v24)
  {
    uint64_t v25 = v16;
    uint64_t v26 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v16, v71, v74);
    sub_100576A60(v26, (uint64_t)v12, _s14descr1006B99F1V6LoggerVMa);
    uint64_t v27 = &v12[*(int *)(v10 + 20)];
    char v28 = *v27;
    int v29 = *((_DWORD *)v27 + 1);
    swift_bridgeObjectRetain();
    sub_100576AC8((uint64_t)v12, _s14descr1006B99F1V6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v30 = (uint64_t)v72;
    uint64_t v31 = v68;
    sub_100576A60((uint64_t)v72, (uint64_t)v68, _s5StateV15DeferredRequestVMa);
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1005E0EB0();
    os_log_type_t v33 = sub_1005E25C0();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      v76[0] = v71;
      *(_DWORD *)uint64_t v34 = 68158978;
      LODWORD(v75) = 2;
      sub_1005E2960();
      *(_WORD *)(v34 + 8) = 256;
      LOBYTE(v75) = v28;
      sub_1005E2960();
      *(_WORD *)(v34 + 11) = 1040;
      LODWORD(v75) = 8;
      sub_1005E2960();
      *(_WORD *)(v34 + 17) = 1024;
      LODWORD(v75) = v29;
      sub_1005E2960();
      *(_WORD *)(v34 + 23) = 2048;
      uint64_t v75 = *(void *)(v24 + 16);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 33) = 2080;
      LODWORD(v75) = *v31;
      sub_100576B28();
      uint64_t v35 = sub_1005E1F20();
      uint64_t v75 = sub_1005904BC(v35, v36, v76);
      sub_1005E2960();
      uint64_t v37 = v72;
      swift_bridgeObjectRelease();
      sub_100576AC8((uint64_t)v31, _s5StateV15DeferredRequestVMa);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "[%.*hhx-%.*X] Returning %ld messages for request %s.", (uint8_t *)v34, 0x2Bu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v37 = (_DWORD *)v30;
      swift_bridgeObjectRelease();
      sub_100576AC8((uint64_t)v31, _s5StateV15DeferredRequestVMa);
    }
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v25, v74);
    uint64_t v52 = 0;
    LODWORD(v53) = *v37;
    uint64_t v54 = v24;
LABEL_14:
    uint64_t v63 = v70;
    *uint64_t v70 = v54;
    *(_OWORD *)(v63 + 1) = v53;
    v63[3] = v52;
    *((unsigned char *)v63 + 32) = v24 != 0;
    return result;
  }
  uint64_t v64 = a4;
  uint64_t v65 = v18;
  char v68 = (_DWORD *)v7;
  uint64_t v38 = v66;
  uint64_t v39 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v66, v71, v74);
  sub_100576A60(v39, (uint64_t)v12, _s14descr1006B99F1V6LoggerVMa);
  uint64_t v40 = &v12[*(int *)(v10 + 20)];
  char v41 = *v40;
  int v42 = *((_DWORD *)v40 + 1);
  sub_100576AC8((uint64_t)v12, _s14descr1006B99F1V6LoggerVMa);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v43 = (uint64_t)v72;
  sub_100576A60((uint64_t)v72, (uint64_t)v69, _s5StateV15DeferredRequestVMa);
  uint64_t v44 = sub_1005E0EB0();
  os_log_type_t v45 = sub_1005E25C0();
  if (os_log_type_enabled(v44, v45))
  {
    int v46 = v42;
    uint64_t v47 = swift_slowAlloc();
    v76[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v47 = 68158722;
    LODWORD(v75) = 2;
    sub_1005E2960();
    *(_WORD *)(v47 + 8) = 256;
    LOBYTE(v75) = v41;
    sub_1005E2960();
    *(_WORD *)(v47 + 11) = 1040;
    LODWORD(v75) = 8;
    sub_1005E2960();
    *(_WORD *)(v47 + 17) = 1024;
    LODWORD(v75) = v46;
    sub_1005E2960();
    *(_WORD *)(v47 + 23) = 2080;
    uint64_t v48 = v69;
    LODWORD(v75) = *v69;
    sub_100576B28();
    uint64_t v49 = sub_1005E1F20();
    uint64_t v75 = sub_1005904BC(v49, v50, v76);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100576AC8((uint64_t)v48, _s5StateV15DeferredRequestVMa);
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "[%.*hhx-%.*X] (Re-)enqueuing (deferred) message request %s due to batch size limits.", (uint8_t *)v47, 0x21u);
    swift_arrayDestroy();
    uint64_t v43 = (uint64_t)v72;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100576AC8((uint64_t)v69, _s5StateV15DeferredRequestVMa);
  }

  (*(void (**)(char *, uint64_t))(v73 + 8))(v38, v74);
  int v55 = v67;
  uint64_t v56 = (uint64_t)v68;
  uint64_t v57 = v65;
  uint64_t v58 = *(void *)(*v67 + 24);
  Swift::Int v59 = v58 + 1;
  if (!__OFADD__(v58, 1))
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v61 = *v55;
    if (*(void *)(*v55 + 16) < v59 || (isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100574BCC(v59, 0, _s5StateV7RequestVMa, &qword_100719D98, _s5StateV7RequestVMa);
      uint64_t v61 = *v55;
    }
    uint64_t result = (uint64_t)sub_100574F00((void *)(v61 + 16), v61+ ((*(unsigned __int8 *)(v57 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80)), v43, _s5StateV7RequestVMa, _s5StateV7RequestVMa);
    uint64_t v62 = v43 + *(int *)(v56 + 24);
    uint64_t v54 = *(void *)v62;
    long long v53 = *(_OWORD *)(v62 + 8);
    uint64_t v52 = *(void *)(v62 + 24);
    goto LABEL_14;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100577514(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100719DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_10057757C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v7 = _s5StateV7RequestVMa(0);
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10000566C(&qword_100719A68);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(v7 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 24));
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = *(int *)(sub_10000566C(&qword_100719D88) + 48);
      uint64_t v13 = (_OWORD *)((char *)a1 + v12);
      uint64_t v14 = (_OWORD *)((char *)a2 + v12);
      long long v15 = v14[1];
      *uint64_t v13 = *v14;
      v13[1] = v15;
    }
    else
    {
      uint64_t v17 = _s5StateV15DeferredRequestVMa(0);
      *(_OWORD *)((char *)a1 + *(int *)(v17 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v17 + 20));
      uint64_t v18 = *(int *)(v17 + 24);
      uint64_t v19 = (_OWORD *)((char *)a1 + v18);
      uint64_t v20 = (_OWORD *)((char *)a2 + v18);
      long long v21 = v20[1];
      *uint64_t v19 = *v20;
      v19[1] = v21;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_DWORD *sub_100577700(_DWORD *a1, _DWORD *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  uint64_t v5 = _s5StateV7RequestVMa(0);
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100719A68);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(v5 + 24)) = *(void *)((char *)a2 + *(int *)(v5 + 24));
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = (int *)(sub_10000566C(&qword_100719D88) + 48);
  }
  else
  {
    uint64_t v11 = _s5StateV15DeferredRequestVMa(0);
    *(_OWORD *)((char *)a1 + *(int *)(v11 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v11 + 20));
    uint64_t v10 = (int *)(v11 + 24);
  }
  uint64_t v12 = *v10;
  uint64_t v13 = (_OWORD *)((char *)a1 + v12);
  uint64_t v14 = (_OWORD *)((char *)a2 + v12);
  long long v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_storeEnumTagMultiPayload();
  return a1;
}

_DWORD *sub_10057781C(_DWORD *a1, _DWORD *a2)
{
  if (a1 != a2)
  {
    sub_100576AC8((uint64_t)a1, _s5StateV6ActionOMa);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    uint64_t v5 = _s5StateV7RequestVMa(0);
    uint64_t v6 = *(int *)(v5 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_10000566C(&qword_100719A68);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    *(void *)((char *)a1 + *(int *)(v5 + 24)) = *(void *)((char *)a2 + *(int *)(v5 + 24));
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = (int *)(sub_10000566C(&qword_100719D88) + 48);
    }
    else
    {
      uint64_t v11 = _s5StateV15DeferredRequestVMa(0);
      *(_OWORD *)((char *)a1 + *(int *)(v11 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v11 + 20));
      uint64_t v10 = (int *)(v11 + 24);
    }
    uint64_t v12 = *v10;
    uint64_t v13 = (_OWORD *)((char *)a1 + v12);
    uint64_t v14 = (_OWORD *)((char *)a2 + v12);
    long long v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_DWORD *sub_10057795C(_DWORD *a1, _DWORD *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  uint64_t v5 = _s5StateV7RequestVMa(0);
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100719A68);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(v5 + 24)) = *(void *)((char *)a2 + *(int *)(v5 + 24));
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = (int *)(sub_10000566C(&qword_100719D88) + 48);
  }
  else
  {
    uint64_t v11 = _s5StateV15DeferredRequestVMa(0);
    *(_OWORD *)((char *)a1 + *(int *)(v11 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v11 + 20));
    uint64_t v10 = (int *)(v11 + 24);
  }
  uint64_t v12 = *v10;
  uint64_t v13 = (_OWORD *)((char *)a1 + v12);
  uint64_t v14 = (_OWORD *)((char *)a2 + v12);
  long long v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_storeEnumTagMultiPayload();
  return a1;
}

_DWORD *sub_100577A78(_DWORD *a1, _DWORD *a2)
{
  if (a1 != a2)
  {
    sub_100576AC8((uint64_t)a1, _s5StateV6ActionOMa);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    uint64_t v5 = _s5StateV7RequestVMa(0);
    uint64_t v6 = *(int *)(v5 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_10000566C(&qword_100719A68);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    *(void *)((char *)a1 + *(int *)(v5 + 24)) = *(void *)((char *)a2 + *(int *)(v5 + 24));
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = (int *)(sub_10000566C(&qword_100719D88) + 48);
    }
    else
    {
      uint64_t v11 = _s5StateV15DeferredRequestVMa(0);
      *(_OWORD *)((char *)a1 + *(int *)(v11 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v11 + 20));
      uint64_t v10 = (int *)(v11 + 24);
    }
    uint64_t v12 = *v10;
    uint64_t v13 = (_OWORD *)((char *)a1 + v12);
    uint64_t v14 = (_OWORD *)((char *)a2 + v12);
    long long v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100577BB8()
{
  uint64_t result = _s5StateV15DeferredRequestVMa(319);
  if (v1 <= 0x3F)
  {
    v3[4] = *(void *)(result - 8) + 64;
    uint64_t result = _s5StateV7RequestVMa(319);
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v3[5] = v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100577C90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v7 = _s5StateV7RequestVMa(0);
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10000566C(&qword_100719A68);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)v4 + *(int *)(v7 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 24));
    uint64_t v12 = *(int *)(a3 + 24);
    *(_OWORD *)((char *)v4 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v13 = (_OWORD *)((char *)v4 + v12);
    uint64_t v14 = (_OWORD *)((char *)a2 + v12);
    long long v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
  }
  return v4;
}

uint64_t sub_100577DA4(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(_s5StateV7RequestVMa(0) + 20);
  uint64_t v2 = sub_10000566C(&qword_100719A68);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(v1, v2);
}

_DWORD *sub_100577E1C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = _s5StateV7RequestVMa(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10000566C(&qword_100719A68);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)a2 + *(int *)(v6 + 24));
  uint64_t v11 = *(int *)(a3 + 24);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  return a1;
}

_DWORD *sub_100577EE0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = _s5StateV7RequestVMa(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10000566C(&qword_100719A68);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)a2 + *(int *)(v6 + 24));
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  uint64_t v14 = *(int *)(a3 + 24);
  long long v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *long long v15 = *v16;
  v15[1] = v16[1];
  v15[2] = v16[2];
  v15[3] = v16[3];
  return a1;
}

_DWORD *sub_100577FD0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = _s5StateV7RequestVMa(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10000566C(&qword_100719A68);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)a2 + *(int *)(v6 + 24));
  uint64_t v11 = *(int *)(a3 + 24);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  return a1;
}

_DWORD *sub_100578094(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = _s5StateV7RequestVMa(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10000566C(&qword_100719A68);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)a2 + *(int *)(v6 + 24));
  uint64_t v11 = *(int *)(a3 + 24);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_100578158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10057816C);
}

uint64_t sub_10057816C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s5StateV7RequestVMa(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1005781D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005781EC);
}

uint64_t sub_1005781EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s5StateV7RequestVMa(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_10057825C()
{
  uint64_t result = _s5StateV7RequestVMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1005782FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_10000566C(&qword_100719A68);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_1005783E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_10000566C(&qword_100719A68);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

_DWORD *sub_100578454(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100719A68);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_DWORD *sub_1005784F0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100719A68);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_DWORD *sub_10057858C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100719A68);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_DWORD *sub_100578628(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100719A68);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1005786C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005786D8);
}

uint64_t sub_1005786D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_10000566C((uint64_t *)&unk_100719790);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_10057874C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100578760);
}

uint64_t sub_100578760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_10000566C((uint64_t *)&unk_100719790);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

void sub_1005787D8()
{
  sub_100578880();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100578880()
{
  if (!qword_100719F60)
  {
    sub_10053E98C();
    unint64_t v0 = sub_1005E3690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100719F60);
    }
  }
}

unint64_t sub_1005788E0()
{
  unint64_t result = qword_100719F98;
  if (!qword_100719F98)
  {
    _s5StateV7RequestVMa(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719F98);
  }
  return result;
}

unint64_t sub_100578938()
{
  unint64_t result = qword_100719FA8;
  if (!qword_100719FA8)
  {
    sub_10000744C(&qword_100719A68);
    sub_1005789AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719FA8);
  }
  return result;
}

unint64_t sub_1005789AC()
{
  unint64_t result = qword_100719FB0;
  if (!qword_100719FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719FB0);
  }
  return result;
}

id sub_100578A04()
{
  NSString v1 = sub_1005E1BD0();
  [v0 willAccessValueForKey:v1];

  id v2 = [v0 primitiveSpotlightID];
  uint64_t v3 = v2;
  if (v2)
  {
    id v4 = [v2 longLongValue];
  }
  else
  {
    id v4 = 0;
  }
  NSString v5 = sub_1005E1BD0();
  [v0 didAccessValueForKey:v5];

  return v4;
}

uint64_t sub_100578AF0()
{
  NSString v1 = sub_1005E1BD0();
  [v0 willAccessValueForKey:v1];

  id v2 = [v0 primitiveAccount];
  if (!v2) {
    goto LABEL_6;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_1005E1C00();
  unint64_t v6 = v5;

  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    uint64_t v4 = 0;
  }
  NSString v8 = sub_1005E1BD0();
  [v0 didAccessValueForKey:v8];

  return v4;
}

unint64_t sub_100578BD8()
{
  NSString v1 = sub_1005E1BD0();
  [v0 willAccessValueForKey:v1];

  id v2 = [v0 primitiveUid];
  if (v2)
  {
    uint64_t v3 = v2;
    unint64_t v4 = (unint64_t)[v2 longLongValue];

    BOOL v5 = v4 - 0x100000000 < 0xFFFFFFFF00000001;
    if (v4 - 0x100000000 >= 0xFFFFFFFF00000001) {
      unint64_t v4 = v4;
    }
    else {
      unint64_t v4 = 0;
    }
  }
  else
  {
    unint64_t v4 = 0;
    BOOL v5 = 1;
  }
  NSString v6 = sub_1005E1BD0();
  [v0 didAccessValueForKey:v6];

  return v4 | ((unint64_t)v5 << 32);
}

unint64_t sub_100578CC4()
{
  uint64_t v1 = sub_1005E0970();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v4 = sub_1005E1BD0();
  [v0 willAccessValueForKey:v4];

  id v5 = [v0 primitiveDataUsage];
  if (v5)
  {
    NSString v6 = v5;
    uint64_t v7 = sub_1005E08A0();
    unint64_t v9 = v8;

    sub_100008D24(v7, v9);
    sub_1005E0960();
    unint64_t v10 = sub_1005BF67C((uint64_t)v3, v7, v9);
    sub_1000094D4(v7, v9);
  }
  else
  {
    unint64_t v10 = sub_100592604((uint64_t)_swiftEmptyArrayStorage);
  }
  NSString v11 = sub_1005E1BD0();
  [v0 didAccessValueForKey:v11];

  return v10;
}

unint64_t sub_100578E24()
{
  NSString v1 = sub_1005E1BD0();
  [v0 willAccessValueForKey:v1];

  id v2 = [v0 primitiveName];
  if (v2)
  {
    id v3 = v2;
    sub_10059BA20(v3);
    v5._id rawValue = v4;

    unint64_t v6 = (unint64_t)MailboxName.init(_:)(v5);
  }
  else
  {
    unint64_t v6 = 0;
  }
  NSString v7 = sub_1005E1BD0();
  [v0 didAccessValueForKey:v7];

  return v6;
}

uint64_t sub_100578EF8(unint64_t a1, unint64_t a2)
{
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_10000566C(&qword_10071A0E0);
  if (swift_dynamicCast())
  {
    sub_100021BFC(v38, (uint64_t)&v41);
    sub_10003BCDC(&v41, v43);
    sub_1005E0640();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_100007A48((uint64_t)v38, &qword_10071A0E8);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      unint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      NSString v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_1005E2D30();
      }
      if (v4) {
        unint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        unint64_t v6 = 0;
      }
      NSString v7 = (uint64_t *)v4;
    }
    unint64_t v8 = sub_1004C3274(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    Swift::Int v11 = sub_1005E1E80();
    goto LABEL_17;
  }
LABEL_69:
  unint64_t v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    Swift::Int v11 = HIBYTE(v3) & 0xF;
  }
  else {
    Swift::Int v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_1004C32D8(v11);
  *((void *)&v38[0] + 1) = v12;
  __chkstk_darwin(*(void *)&v38[0]);
  unint64_t v13 = (unint64_t)sub_10057C964((void *(*)(uint64_t *__return_ptr, char *, char *))sub_1004C48F4);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_1005E0850();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_1000C6E1C(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_1005E1EC0();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_1005E2D30();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_1000C6E1C(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_1005E1E90();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      sub_1005E0870();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  unint64_t v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    sub_1005E0870();
    sub_100057EFC(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_100057EFC((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

uint64_t sub_100579428(uint64_t a1, uint64_t a2)
{
  id v8[3] = &type metadata for UnsafeRawBufferPointer;
  v8[4] = &protocol witness table for UnsafeRawBufferPointer;
  v8[0] = a1;
  v8[1] = a2;
  unint64_t v2 = sub_10003BCDC(v8, (uint64_t)&type metadata for UnsafeRawBufferPointer);
  unint64_t v3 = (unsigned char *)*v2;
  if (*v2 && (uint64_t v4 = (unsigned char *)v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      uint64_t v6 = sub_1004C3014(v3, v4);
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      uint64_t v6 = sub_1004C30D8((uint64_t)v3, (uint64_t)v4);
    }
    else
    {
      uint64_t v6 = sub_1004C3154((uint64_t)v3, (uint64_t)v4);
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v8);
  return v6;
}

uint64_t sub_1005794E4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x79746964696C6176;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x79746964696C6176;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x4C64656863746566;
      unint64_t v3 = 0xEA0000000000776FLL;
      break;
    case 2:
      uint64_t v5 = 0x5564656863746566;
      unint64_t v3 = 0xE900000000000070;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x716553646F6DLL;
      break;
    case 4:
      uint64_t v5 = 0x7473657265746E69;
      unint64_t v3 = 0xEB00000000776F4CLL;
      break;
    case 5:
      uint64_t v5 = 0x7473657265746E69;
      unint64_t v3 = 0xEA00000000007055;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA0000000000776FLL;
      if (v5 == 0x4C64656863746566) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE900000000000070;
      if (v5 != 0x5564656863746566) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x716553646F6DLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x7473657265746E69;
      unint64_t v6 = 0xEB00000000776F4CLL;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xEA00000000007055;
      if (v5 != 0x7473657265746E69) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1005E3290();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_100579718(char a1, char a2)
{
  if (qword_10062B3D8[a1] == qword_10062B3D8[a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1005E3290();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

Swift::Int sub_100579780()
{
  return sub_1005E3470();
}

Swift::Int sub_1005798A8()
{
  return sub_1005E3470();
}

uint64_t sub_1005799D0(uint64_t *a1)
{
  void (*v6)(_OWORD *__return_ptr);
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  char v12;
  id v13;
  id v14;
  uint64_t (*v15)(_OWORD *);
  void *v16;
  void *v18;
  _OWORD v19[2];
  long long v20;
  uint64_t v21;
  long long v22;

  char v2 = v1;
  id v4 = [v1 userInfo];
  uint64_t v22 = *(_OWORD *)a1;
  v19[0] = *(_OWORD *)a1;
  swift_bridgeObjectRetain_n();
  id v5 = objc_msgSend(v4, "__swift_objectForKeyedSubscript:", sub_1005E3350());
  swift_unknownObjectRelease();

  if (v5)
  {
    sub_1005E2A70();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  sub_10001FDF0((uint64_t)v19, (uint64_t)&v20, &qword_100718900);
  if (v21)
  {
    sub_1003C8730(0, (unint64_t *)&qword_1007195E8);
    if (swift_dynamicCast())
    {
      sub_10002A77C((uint64_t)&v22);
      unint64_t v6 = (void (*)(_OWORD *__return_ptr))a1[6];
      char v7 = v18;
      v6(v19);

      return *(void *)&v19[0];
    }
    sub_10002A77C((uint64_t)&v22);
  }
  else
  {
    sub_10002A77C((uint64_t)&v22);
    sub_100007A48((uint64_t)&v20, &qword_100718900);
  }
  unint64_t v8 = [v2 persistentStoreCoordinator];
  if (!v8 || (unint64_t v9 = v8, v10 = sub_10057C3BC(a1), v12 = v11, v9, (v12 & 1) != 0))
  {
    ((void (*)(_OWORD *__return_ptr, void))a1[6])(v19, 0);
    unint64_t v13 = [v2 userInfo];
  }
  else
  {
    *(void *)&v19[0] = v10;
    unint64_t v13 = [v2 userInfo];
  }
  unint64_t v14 = v13;
  uint64_t v15 = (uint64_t (*)(_OWORD *))a1[4];
  swift_bridgeObjectRetain();
  uint64_t v16 = (void *)v15(v19);
  uint64_t v20 = v22;
  swift_bridgeObjectRetain();
  objc_msgSend(v14, "__swift_setObject:forKeyedSubscript:", v16, sub_1005E3350());

  swift_unknownObjectRelease();
  sub_10002A77C((uint64_t)&v22);
  return *(void *)&v19[0];
}

void *sub_100579C54()
{
  NSString v1 = sub_1005E1BD0();
  [v0 willAccessValueForKey:v1];

  id v2 = [v0 primitiveIndexCount];
  unint64_t v3 = v2;
  if (v2)
  {
    uint64_t v4 = (uint64_t)[v2 integerValue];

    unint64_t v3 = (void *)(v4 & ~(v4 >> 63));
  }
  NSString v5 = sub_1005E1BD0();
  [v0 didAccessValueForKey:v5];

  return v3;
}

void *sub_100579D28()
{
  NSString v1 = sub_1005E1BD0();
  [v0 willAccessValueForKey:v1];

  id v2 = [v0 primitiveMessageCount];
  unint64_t v3 = v2;
  if (v2)
  {
    uint64_t v4 = (uint64_t)[v2 integerValue];

    unint64_t v3 = (void *)(v4 & ~(v4 >> 63));
  }
  NSString v5 = sub_1005E1BD0();
  [v0 didAccessValueForKey:v5];

  return v3;
}

uint64_t sub_100579E04()
{
  return 0x6567617373656DLL;
}

id sub_100579E1C()
{
  NSString v1 = sub_1005E1BD0();
  [v0 willAccessValueForKey:v1];

  id v2 = [v0 primitiveMessageSize];
  unint64_t v3 = v2;
  if (v2)
  {
    id v4 = [v2 integerValue];
  }
  else
  {
    id v4 = 0;
  }
  NSString v5 = sub_1005E1BD0();
  [v0 didAccessValueForKey:v5];

  return v4;
}

id sub_100579F08(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, int a6, char a7)
{
  int v29 = a6;
  uint64_t v11 = sub_1005E2770();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  NSString v16 = sub_1005E1BD0();
  swift_bridgeObjectRelease();
  [v15 setName:v16];

  [v15 setOptional:a3 & 1];
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a4, v11);
  sub_1005E2780();
  sub_10057E4EC(a5, (uint64_t)v30);
  uint64_t v17 = v31;
  if (v31)
  {
    uint64_t v18 = sub_10003BCDC(v30, v31);
    uint64_t v28 = (uint64_t)&v28;
    uint64_t v19 = v11;
    uint64_t v20 = a5;
    uint64_t v21 = a4;
    char v22 = a7;
    uint64_t v23 = *(void *)(v17 - 8);
    __chkstk_darwin(v18);
    unint64_t v25 = (char *)&v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v23 + 16))(v25);
    uint64_t v26 = sub_1005E3270();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v17);
    a7 = v22;
    a4 = v21;
    a5 = v20;
    uint64_t v11 = v19;
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v30);
  }
  else
  {
    uint64_t v26 = 0;
  }
  objc_msgSend(v15, "setDefaultValue:", v26, v28);
  swift_unknownObjectRelease();
  [v15 setAllowsExternalBinaryDataStorage:v29 & 1];
  [v15 setTransient:a7 & 1];

  sub_100007A48(a5, &qword_100718900);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a4, v11);
  return v15;
}

id sub_10057A200(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  id v6 = [objc_allocWithZone((Class)NSEntityDescription) init];
  NSString v7 = sub_1005E1BD0();
  swift_bridgeObjectRelease();
  [v6 setName:v7];

  a4();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  unint64_t v9 = NSStringFromClass(ObjCClassFromMetadata);
  if (!v9)
  {
    sub_1005E1C00();
    unint64_t v9 = (NSString *)sub_1005E1BD0();
    swift_bridgeObjectRelease();
  }
  [v6 setManagedObjectClassName:v9];

  if (a3 >> 62)
  {
    sub_1003C8730(0, &qword_10071A120);
    swift_bridgeObjectRetain();
    sub_1005E2F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1005E32F0();
    sub_1003C8730(0, &qword_10071A120);
  }
  swift_bridgeObjectRelease();
  sub_1003C8730(0, &qword_10071A120);
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  [v6 setProperties:isa];

  return v6;
}

uint64_t sub_10057A3B8()
{
  return 0x49746E756F636361;
}

void sub_10057A3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v7 = v6;
  id v12 = [objc_allocWithZone((Class)NSRelationshipDescription) init];
  NSString v13 = sub_1005E1BD0();
  [v12 setName:v13];

  [v12 setDestinationEntity:a3];
  [v12 setDeleteRule:a4];
  [v12 setMinCount:a5];
  [v12 setMaxCount:a6];
  id v17 = v12;
  id v14 = [v7 properties];
  sub_1003C8730(0, &qword_10071A120);
  uint64_t v15 = sub_1005E20C0();

  sub_1005E20A0();
  if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1005E2110();
  }
  sub_1005E2170();
  sub_1005E20E0();
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  [v7 setProperties:isa];
}

void sub_10057A5BC(void *a1, uint64_t a2)
{
  id v4 = [a1 primitiveIndexableMessageInfo];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = (uint64_t)v4
       + OBJC_IVAR____TtCE17IMAPSearchIndexerV9IMAP2MIME20IndexableMessageInfoP33_5FFF53AECAA0B5B4FDC4BFE964265B9C7Wrapper_info;
    swift_beginAccess();
    sub_10057E418(a2, v6);
    swift_endAccess();
  }
  else
  {
    id v5 = [objc_allocWithZone((Class)_s7WrapperCMa()) init];
    uint64_t v7 = (uint64_t)v5
       + OBJC_IVAR____TtCE17IMAPSearchIndexerV9IMAP2MIME20IndexableMessageInfoP33_5FFF53AECAA0B5B4FDC4BFE964265B9C7Wrapper_info;
    swift_beginAccess();
    sub_10057E418(a2, v7);
    swift_endAccess();
    [a1 setPrimitiveIndexableMessageInfo:v5];
  }
}

void sub_10057A6B8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  NSString v7 = sub_1005E1BD0();
  v33.receiver = v3;
  v33.super_class = ObjectType;
  objc_msgSendSuper2(&v33, "didChangeValueForKey:", v7);

  if (a1 == 0x7367616C66 && a2 == 0xE500000000000000 || (sub_1005E3290() & 1) != 0)
  {
    sub_10000566C(&qword_100719D50);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1005F6670;
    *(void *)(v8 + 32) = a1;
    *(void *)(v8 + 40) = a2;
    swift_bridgeObjectRetain();
    Class isa = sub_1005E20B0().super.isa;
    swift_bridgeObjectRelease();
    id v10 = [v3 committedValuesForKeys:isa];

    uint64_t v11 = sub_1005E1970();
    if (*(void *)(v11 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_100024668(a1, a2);
      if (v13)
      {
        sub_1000D65AC(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&v31);
      }
      else
      {
        long long v31 = 0u;
        long long v32 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v31 = 0u;
      long long v32 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v32 + 1))
    {
      sub_100007A48((uint64_t)&v31, &qword_100718900);
      return;
    }
    sub_1003C8730(0, (unint64_t *)&qword_1007195E8);
    if ((swift_dynamicCast() & 1) == 0) {
      return;
    }
    id v14 = *(void **)&v30[0];
    NSString v15 = sub_1005E1BD0();
    id v16 = [v3 valueForKey:v15];

    if (v16)
    {
      sub_1005E2A70();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v30, 0, sizeof(v30));
    }
    sub_10001FDF0((uint64_t)v30, (uint64_t)&v31, &qword_100718900);
    if (*((void *)&v32 + 1))
    {
      if (swift_dynamicCast())
      {
        id v17 = v14;
        id v18 = v29;
        char v19 = sub_1005E2840();

        if (v19)
        {

          return;
        }
        goto LABEL_22;
      }
    }
    else
    {
      sub_100007A48((uint64_t)&v31, &qword_100718900);
    }
    id v18 = 0;
LABEL_22:
    NSString v20 = sub_1005E1BD0();
    [v3 willAccessValueForKey:v20];

    id v21 = [v3 primitiveAttributeChange];
    if (v21)
    {
      char v22 = v21;
      id v23 = [v21 longLongValue];

      if ((unint64_t)v23 > 0xFF) {
        uint64_t v24 = 1;
      }
      else {
        uint64_t v24 = v23 & 0xFE | 1;
      }
    }
    else
    {
      uint64_t v24 = 1;
    }
    NSString v25 = sub_1005E1BD0();
    [v3 didAccessValueForKey:v25];

    NSString v26 = sub_1005E1BD0();
    [v3 willChangeValueForKey:v26];

    id v27 = [objc_allocWithZone((Class)NSNumber) initWithLongLong:v24];
    [v3 setPrimitiveAttributeChange:v27];

    NSString v28 = sub_1005E1BD0();
    [v3 didChangeValueForKey:v28];
  }
}

uint64_t _s14descr1006B9AE9V7MessageCMa()
{
  return self;
}

BOOL sub_10057ABC4(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 13) = *(long long *)((char *)a1 + 29);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 13) = *(long long *)((char *)a2 + 29);
  return sub_10057CC68((BOOL)&v5, (uint64_t)&v7);
}

uint64_t sub_10057AC10@<X0>(uint64_t a1@<X8>)
{
  NSString v3 = sub_1005E1BD0();
  [v1 willAccessValueForKey:v3];

  sub_1005932DC(v1, (uint64_t)v21);
  unint64_t v4 = v21[0];
  uint64_t v5 = v21[1];
  char v6 = v22;
  uint64_t v7 = v23;
  uint64_t v8 = v24;
  unint64_t v9 = v25 | ((unint64_t)v26 << 32);
  NSString v10 = sub_1005E1BD0();
  [v1 didAccessValueForKey:v10];

  uint64_t result = sub_10001FDF0((uint64_t)v21, (uint64_t)v27, &qword_10071A0D8);
  uint64_t v12 = HIDWORD(v4) & 1;
  char v13 = v6 & 1;
  *((void *)&v15 + 1) = v9;
  *(void *)&long long v15 = v8;
  uint64_t v14 = v15 >> 32;
  if (v28) {
    int v16 = 0;
  }
  else {
    int v16 = v4;
  }
  if (v28)
  {
    LOBYTE(v12) = 1;
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v17 = v5;
  }
  if (v28)
  {
    char v13 = 1;
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v18 = v7;
  }
  if (v28) {
    char v19 = 1;
  }
  else {
    char v19 = v8 & 1;
  }
  if (v28)
  {
    uint64_t v14 = 0;
    char v20 = 1;
  }
  else
  {
    char v20 = BYTE4(v9) & 1;
  }
  *(_DWORD *)a1 = v16;
  *(unsigned char *)(a1 + 4) = v12;
  *(void *)(a1 + 8) = v17;
  *(unsigned char *)(a1 + 16) = v13;
  *(void *)(a1 + 24) = v18;
  *(unsigned char *)(a1 + 32) = v19;
  *(void *)(a1 + 36) = v14;
  *(unsigned char *)(a1 + 44) = v20;
  return result;
}

id sub_10057ADA8()
{
  id v1 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v2 = sub_1005E1BD0();
  id v3 = [v1 initWithEntityName:v2];

  sub_10000566C(&qword_100719060);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1005F6670;
  id v5 = [v0 objectID];
  *(void *)(v4 + 56) = sub_1003C8730(0, &qword_100719068);
  *(void *)(v4 + 32) = v5;
  NSString v6 = sub_1005E1BD0();
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v8 = [self predicateWithFormat:v6 argumentArray:isa];

  [v3 setPredicate:v8];
  return v3;
}

uint64_t _s14descr1006B9AE9V7MailboxCMa()
{
  return self;
}

uint64_t _s14descr1006B9AE9V11AccountInfoCMa()
{
  return self;
}

uint64_t sub_10057B07C()
{
  return _s7WrapperCMa();
}

uint64_t _s7WrapperCMa()
{
  uint64_t result = qword_10071A088;
  if (!qword_10071A088) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10057B0D0()
{
  sub_10057B160();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10057B160()
{
  if (!qword_10071A098)
  {
    type metadata accessor for IndexableMessageInfo(255);
    unint64_t v0 = sub_1005E28C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10071A098);
    }
  }
}

void sub_10057B1B8()
{
}

id sub_10057B25C()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s14descr1006B9AE9V13ManagedObjectCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s14descr1006B9AE9V13ManagedObjectCMa()
{
  return self;
}

id sub_10057B2EC(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithContext:a1];
  NSString v4 = sub_1005E1BD0();
  [v3 willChangeValueForKey:v4];

  swift_bridgeObjectRetain();
  NSString v5 = sub_1005E1BD0();
  swift_bridgeObjectRelease();
  [v3 setPrimitiveAccount:v5];

  NSString v6 = sub_1005E1BD0();
  [v3 didChangeValueForKey:v6];
  swift_bridgeObjectRelease();

  NSString v7 = sub_1005E1BD0();
  [v3 willChangeValueForKey:v7];

  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_10057CD40(v8);
  unint64_t v11 = v10;
  swift_bridgeObjectRelease();
  Class isa = sub_1005E0890().super.isa;
  sub_1000094D4(v9, v11);
  [v3 setPrimitiveName:isa];

  NSString v13 = sub_1005E1BD0();
  [v3 didChangeValueForKey:v13];
  swift_bridgeObjectRelease();

  sub_10058B8E0();
  return v3;
}

uint64_t sub_10057B4DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E0380();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  NSString v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005E0390();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [v0 managedObjectContext];
  if (!v10)
  {
    long long v22 = 0u;
    long long v23 = 0u;
LABEL_9:
    sub_100007A48((uint64_t)&v22, &qword_100718900);
    goto LABEL_10;
  }
  unint64_t v11 = v10;
  uint64_t v20 = v2;
  id v12 = [v10 userInfo];

  *(void *)&v21[0] = 0x6F6365446E6F736ALL;
  *((void *)&v21[0] + 1) = 0xEB00000000726564;
  id v13 = objc_msgSend(v12, "__swift_objectForKeyedSubscript:", sub_1005E3350());
  swift_unknownObjectRelease();

  if (v13)
  {
    sub_1005E2A70();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v21, 0, sizeof(v21));
  }
  sub_10001FDF0((uint64_t)v21, (uint64_t)&v22, &qword_100718900);
  uint64_t v2 = v20;
  if (!*((void *)&v23 + 1)) {
    goto LABEL_9;
  }
  sub_1005E03E0();
  if (swift_dynamicCast()) {
    return *(void *)&v21[0];
  }
LABEL_10:
  sub_1005E03E0();
  swift_allocObject();
  uint64_t v14 = sub_1005E03D0();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for JSONDecoder.DateDecodingStrategy.millisecondsSince1970(_:), v6);
  sub_1005E03B0();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for JSONDecoder.DataDecodingStrategy.base64(_:), v2);
  sub_1005E03A0();
  id v15 = [v1 managedObjectContext];
  if (v15)
  {
    int v16 = v15;
    id v17 = [v15 userInfo];

    *(void *)&long long v22 = 0x6F6365446E6F736ALL;
    *((void *)&v22 + 1) = 0xEB00000000726564;
    swift_retain();
    objc_msgSend(v17, "__swift_setObject:forKeyedSubscript:", v14, sub_1005E3350());

    swift_release();
    swift_unknownObjectRelease();
  }
  return v14;
}

uint64_t sub_10057B880()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E0420();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  NSString v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005E0430();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [v0 managedObjectContext];
  if (!v10)
  {
    long long v22 = 0u;
    long long v23 = 0u;
LABEL_9:
    sub_100007A48((uint64_t)&v22, &qword_100718900);
    goto LABEL_10;
  }
  unint64_t v11 = v10;
  uint64_t v20 = v2;
  id v12 = [v10 userInfo];

  *(void *)&v21[0] = 0x6F636E456E6F736ALL;
  *((void *)&v21[0] + 1) = 0xEB00000000726564;
  id v13 = objc_msgSend(v12, "__swift_objectForKeyedSubscript:", sub_1005E3350());
  swift_unknownObjectRelease();

  if (v13)
  {
    sub_1005E2A70();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v21, 0, sizeof(v21));
  }
  sub_10001FDF0((uint64_t)v21, (uint64_t)&v22, &qword_100718900);
  uint64_t v2 = v20;
  if (!*((void *)&v23 + 1)) {
    goto LABEL_9;
  }
  sub_1005E0480();
  if (swift_dynamicCast()) {
    return *(void *)&v21[0];
  }
LABEL_10:
  sub_1005E0480();
  swift_allocObject();
  uint64_t v14 = sub_1005E0470();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for JSONEncoder.DateEncodingStrategy.millisecondsSince1970(_:), v6);
  sub_1005E0450();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for JSONEncoder.DataEncodingStrategy.base64(_:), v2);
  sub_1005E0440();
  id v15 = [v1 managedObjectContext];
  if (v15)
  {
    int v16 = v15;
    id v17 = [v15 userInfo];

    *(void *)&long long v22 = 0x6F636E456E6F736ALL;
    *((void *)&v22 + 1) = 0xEB00000000726564;
    swift_retain();
    objc_msgSend(v17, "__swift_setObject:forKeyedSubscript:", v14, sub_1005E3350());

    swift_release();
    swift_unknownObjectRelease();
  }
  return v14;
}

unint64_t sub_10057BC24()
{
  sub_10000566C(&qword_10071A0A0);
  uint64_t v2 = sub_1005E30A0();
  if (!v0)
  {
    uint64_t v1 = v2;
    uint64_t v3 = sub_1005E30A0();
    if (((v1 | v3) & 0x100000000) != 0)
    {
      return 0;
    }
    else if (v3 >= v1)
    {
      return v1 | ((unint64_t)v3 << 32);
    }
    else
    {
      sub_10057E3C4();
      swift_allocError();
      swift_willThrow();
    }
  }
  return v1;
}

uint64_t sub_10057BCFC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000566C(&qword_10071A0B8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003BCDC(a1, a1[3]);
  sub_10057E370();
  sub_1005E3500();
  char v9 = *(unsigned char *)(v3 + 4);
  v14[31] = 0;
  v14[28] = v9;
  sub_1005E3170();
  if (!v2)
  {
    unint64_t v10 = *(void *)(v3 + 8);
    char v11 = *(unsigned char *)(v3 + 16);
    if ((v11 & 1) == 0) {
      UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)*(void *)(v3 + 8));
    }
    v14[27] = 1;
    unsigned char v14[24] = v11;
    sub_1005E3170();
    if ((v11 & 1) == 0) {
      EngineAccountMailboxLoggerID.account.getter(v10);
    }
    v14[23] = 2;
    v14[20] = v11;
    sub_1005E3170();
    v14[19] = 3;
    sub_1005E3180();
    char v12 = *(unsigned char *)(v3 + 44);
    v14[18] = 4;
    v14[16] = v12;
    sub_1005E3170();
    v14[15] = 5;
    v14[12] = v12;
    sub_1005E3170();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10057BF98(unsigned __int8 *a1, char *a2)
{
  return sub_1005794E4(*a1, *a2);
}

Swift::Int sub_10057BFA4()
{
  return sub_100579780();
}

uint64_t sub_10057BFAC()
{
  sub_1005E1DB0();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_10057C0BC()
{
  return sub_1005798A8();
}

uint64_t sub_10057C0C4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10057E7F0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10057C0F4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x79746964696C6176;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA0000000000776FLL;
      uint64_t v3 = 0x4C64656863746566;
      goto LABEL_3;
    case 2:
      *a1 = 0x5564656863746566;
      a1[1] = 0xE900000000000070;
      break;
    case 3:
      *a1 = 0x716553646F6DLL;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x7473657265746E69;
      a1[1] = 0xEB00000000776F4CLL;
      break;
    case 5:
      *a1 = 0x7473657265746E69;
      a1[1] = 0xEA00000000007055;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_10057C1E4()
{
  uint64_t result = 0x79746964696C6176;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4C64656863746566;
      break;
    case 2:
      uint64_t result = 0x5564656863746566;
      break;
    case 3:
      uint64_t result = 0x716553646F6DLL;
      break;
    case 4:
      uint64_t result = 0x7473657265746E69;
      break;
    case 5:
      uint64_t result = 0x7473657265746E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10057C2C0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10057E7F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10057C2E8(uint64_t a1)
{
  unint64_t v2 = sub_10057E370();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10057C324(uint64_t a1)
{
  unint64_t v2 = sub_10057E370();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10057C360@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10057E10C(a1, (uint64_t)&v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)((char *)v7 + 13);
    *(_OWORD *)((char *)a2 + 29) = *(_OWORD *)((char *)v7 + 13);
  }
  return result;
}

uint64_t sub_10057C3A4(void *a1)
{
  return sub_10057BCFC(a1);
}

uint64_t sub_10057C3BC(uint64_t *a1)
{
  void (*v16)(long long *__return_ptr);
  id v17;
  uint64_t result;
  void *v19;
  long long v20;
  long long v21;

  id v3 = [v1 persistentStores];
  sub_1003C8730(0, &qword_10071A0D0);
  unint64_t v4 = sub_1005E20C0();

  if (!(v4 >> 62))
  {
    long long v5 = *(void **)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_3;
    }
LABEL_22:
    swift_bridgeObjectRelease();
LABEL_27:
    double result = sub_1005E2F20();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  long long v5 = (void *)sub_1005E2FB0();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_22;
  }
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v6 = (id)sub_1005E2CF0();
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_26:

      goto LABEL_27;
    }
    id v6 = *(id *)(v4 + 32);
  }
  long long v5 = v6;
  swift_bridgeObjectRelease();
  id v7 = [v1 persistentStores];
  unint64_t v8 = sub_1005E20C0();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v9 != 1) {
    goto LABEL_26;
  }
  id v10 = [v1 metadataForPersistentStore:v5];
  uint64_t v11 = sub_1005E1970();

  if (!*(void *)(v11 + 16))
  {
    uint64_t v20 = 0u;
    id v21 = 0u;
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v13 = *a1;
  uint64_t v12 = a1[1];
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_100024668(v13, v12);
  if ((v15 & 1) == 0)
  {
    uint64_t v20 = 0u;
    id v21 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_1000D65AC(*(void *)(v11 + 56) + 32 * v14, (uint64_t)&v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v21 + 1))
  {
    sub_1003C8730(0, (unint64_t *)&qword_1007195E8);
    if (swift_dynamicCast())
    {
      int v16 = (void (*)(long long *__return_ptr))a1[6];
      id v17 = v19;
      v16(&v20);

      return v20;
    }

    return 0;
  }
LABEL_17:

  sub_100007A48((uint64_t)&v20, &qword_100718900);
  return 0;
}

void sub_10057C6D0(_OWORD *a1)
{
}

void sub_10057C6DC(_OWORD *a1, uint64_t *a2)
{
  unint64_t v4 = v2;
  id v6 = [v2 userInfo];
  long long v22 = a1[1];
  v21[0] = a1[1];
  swift_bridgeObjectRetain_n();
  id v7 = objc_msgSend(v6, "__swift_objectForKeyedSubscript:", sub_1005E3350());
  swift_unknownObjectRelease();

  if (v7)
  {
    sub_1005E2A70();
    swift_unknownObjectRelease();
    sub_100007A48((uint64_t)v21, &qword_100718900);
    sub_10002A77C((uint64_t)&v22);
  }
  else
  {
    memset(v21, 0, sizeof(v21));
    sub_100007A48((uint64_t)v21, &qword_100718900);
    sub_10002A77C((uint64_t)&v22);
    unint64_t v8 = (objc_class *)sub_10000566C(a2);
    uint64_t v9 = (char *)objc_allocWithZone(v8);
    id v10 = &v9[qword_10071ACB8];
    *(_OWORD *)id v10 = *a1;
    long long v11 = a1[1];
    long long v12 = a1[2];
    long long v13 = a1[4];
    *((_OWORD *)v10 + 3) = a1[3];
    *((_OWORD *)v10 + 4) = v13;
    *((_OWORD *)v10 + 1) = v11;
    *((_OWORD *)v10 + 2) = v12;
    sub_10057E480((uint64_t)a1);
    v20.receiver = v9;
    v20.super_class = v8;
    id v14 = objc_msgSendSuper2(&v20, "init");
    id v15 = [v2 userInfo];
    v21[0] = v22;
    swift_bridgeObjectRetain();
    sub_100057B18((uint64_t)&v22);
    id v16 = v14;
    objc_msgSend(v15, "__swift_setObject:forKeyedSubscript:", v16, sub_1005E3350());

    swift_unknownObjectRelease();
    sub_10002A77C((uint64_t)&v22);
    id v17 = [self defaultCenter];
    sub_1003C8730(0, &qword_10071A0C8);
    id v18 = v16;
    uint64_t v19 = (void *)sub_1005E27A0();
    [v17 addObserver:v18 selector:"managedObjectContextWillSave:" name:v19 object:v4];
  }
}

void sub_10057C958(_OWORD *a1)
{
}

char *sub_10057C964(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  long long v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_100622570;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_1005E0550() && __OFSUB__((int)v4, sub_1005E0580())) {
        goto LABEL_24;
      }
      sub_1005E0590();
      swift_allocObject();
      uint64_t v13 = sub_1005E0530();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      double result = sub_1004C2C1C((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *long long v5 = v4;
        goto LABEL_19;
      }
      *long long v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1005E0810();
      double result = sub_1004C2C1C(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *uint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *uint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      double result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      double result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        double result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *uint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

BOOL sub_10057CC68(BOOL result, uint64_t a2)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(a2 + 4);
  if (*(unsigned char *)(result + 4))
  {
    if (!*(unsigned char *)(a2 + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)result != *(_DWORD *)a2) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  if (*(unsigned char *)(result + 16))
  {
    if (!*(unsigned char *)(a2 + 16)) {
      return 0;
    }
  }
  else
  {
    if (*(unsigned char *)(a2 + 16)) {
      return 0;
    }
    double result = static FetchedWindow.__derived_struct_equals(_:_:)(*(void *)(result + 8), *(void *)(a2 + 8));
    if ((result & 1) == 0) {
      return 0;
    }
  }
  if (*(unsigned char *)(v3 + 32))
  {
    if ((*(unsigned char *)(a2 + 32) & 1) == 0) {
      return 0;
    }
LABEL_18:
    char v7 = *(unsigned char *)(a2 + 44);
    if ((*(unsigned char *)(v3 + 44) & 1) == 0)
    {
      if (*(void *)(a2 + 36) != *(void *)(v3 + 36)) {
        char v7 = 1;
      }
      return (v7 & 1) == 0;
    }
    return (*(unsigned char *)(a2 + 44) & 1) != 0;
  }
  if (*(unsigned char *)(a2 + 32)) {
    return 0;
  }
  uint64_t v5 = *(void *)(v3 + 24);
  uint64_t v6 = *(void *)(a2 + 24);
  if (((v6 | v5) & 0x8000000000000000) == 0)
  {
    if (v6 != v5) {
      return 0;
    }
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_10057CD40(uint64_t a1)
{
  uint64_t v9 = sub_10000566C(&qword_100719090);
  unint64_t v10 = sub_100556A50();
  v8[0] = a1;
  uint64_t v2 = sub_10003BCDC(v8, v9);
  uint64_t v3 = (unsigned char *)(*v2 + 32);
  char v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_1004C2A84(v3, v4, &v7);
  uint64_t v5 = v7;
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v8);
  return v5;
}

uint64_t sub_10057CDDC()
{
  uint64_t v0 = sub_1005E2770();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v57 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = [objc_allocWithZone((Class)NSManagedObjectModel) init];
  uint64_t v4 = sub_10000566C(&qword_100719088);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10062A0A0;
  sub_1003C8730(0, &qword_10071A108);
  sub_1005E2750();
  long long v63 = 0u;
  long long v64 = 0u;
  *(void *)(v5 + 32) = sub_100579F08(0x6867696C746F7073, 0xEB00000000444974, 1, (uint64_t)v2, (uint64_t)&v63, 0, 0);
  sub_1005E2750();
  *((void *)&v64 + 1) = &type metadata for Int;
  *(void *)&long long v63 = 0;
  *(void *)(v5 + 40) = sub_100579F08(0x6E65477865646E69, 0xEF6E6F6974617265, 0, (uint64_t)v2, (uint64_t)&v63, 0, 0);
  sub_1005E2750();
  long long v63 = 0u;
  long long v64 = 0u;
  *(void *)(v5 + 48) = sub_100579F08(0x7475626972747461, 0xEF65676E61684365, 1, (uint64_t)v2, (uint64_t)&v63, 0, 0);
  sub_1005E2750();
  long long v63 = 0u;
  long long v64 = 0u;
  *(void *)(v5 + 56) = sub_100579F08(6580597, 0xE300000000000000, 1, (uint64_t)v2, (uint64_t)&v63, 0, 0);
  sub_1005E2750();
  long long v63 = 0u;
  long long v64 = 0u;
  *(void *)(v5 + 64) = sub_100579F08(0x7367616C66, 0xE500000000000000, 1, (uint64_t)v2, (uint64_t)&v63, 0, 0);
  sub_1005E2750();
  long long v63 = 0u;
  long long v64 = 0u;
  *(void *)(v5 + 72) = sub_100579F08(0x536567617373656DLL, 0xEB00000000657A69, 1, (uint64_t)v2, (uint64_t)&v63, 0, 0);
  sub_1005E2730();
  long long v63 = 0u;
  long long v64 = 0u;
  *(void *)(v5 + 80) = sub_100579F08(0x6144726576726573, 0xEA00000000006574, 1, (uint64_t)v2, (uint64_t)&v63, 0, 0);
  sub_1005E2760();
  long long v63 = 0u;
  long long v64 = 0u;
  *(void *)(v5 + 88) = sub_100579F08(0xD000000000000014, 0x80000001005EC440, 1, (uint64_t)v2, (uint64_t)&v63, 0, 1);
  sub_1005E2750();
  long long v63 = 0u;
  long long v64 = 0u;
  *(void *)(v5 + 96) = sub_100579F08(0x756F437865646E69, 0xEA0000000000746ELL, 1, (uint64_t)v2, (uint64_t)&v63, 0, 0);
  *(void *)&long long v63 = v5;
  sub_1005E20E0();
  id v6 = sub_10057A200(0x6567617373656DLL, 0xE700000000000000, v63, (void (*)(void))_s14descr1006B9AE9V7MessageCMa);
  sub_10000566C(&qword_10071A110);
  uint64_t v7 = swift_allocObject();
  long long v62 = xmmword_1005F6670;
  *(_OWORD *)(v7 + 16) = xmmword_1005F6670;
  sub_10000566C(&qword_100719060);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v62;
  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 32) = 0x6867696C746F7073;
  *(void *)(v8 + 40) = 0xEB00000000444974;
  *(void *)(v7 + 32) = v8;
  sub_10000566C(&qword_10071A118);
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  [v6 setUniquenessConstraints:isa];

  uint64_t v10 = swift_allocObject();
  long long v61 = xmmword_10062A0B0;
  *(_OWORD *)(v10 + 16) = xmmword_10062A0B0;
  sub_1005E2740();
  long long v63 = 0u;
  long long v64 = 0u;
  *(void *)(v10 + 32) = sub_100579F08(0x746E756F636361, 0xE700000000000000, 1, (uint64_t)v2, (uint64_t)&v63, 0, 0);
  sub_1005E2720();
  long long v63 = 0u;
  long long v64 = 0u;
  *(void *)(v10 + 40) = sub_100579F08(1701667182, 0xE400000000000000, 1, (uint64_t)v2, (uint64_t)&v63, 0, 0);
  sub_1005E2720();
  long long v63 = 0u;
  long long v64 = 0u;
  *(void *)(v10 + 48) = sub_100579F08(0x617461646174656DLL, 0xE800000000000000, 1, (uint64_t)v2, (uint64_t)&v63, 0, 0);
  *(void *)&long long v63 = v10;
  sub_1005E20E0();
  id v11 = sub_10057A200(0x786F626C69616DLL, 0xE700000000000000, v63, (void (*)(void))_s14descr1006B9AE9V7MailboxCMa);
  *(void *)&long long v62 = v4;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = v61;
  sub_1005E2740();
  long long v63 = 0u;
  long long v64 = 0u;
  *(void *)(v12 + 32) = sub_100579F08(0x746E756F636361, 0xE700000000000000, 1, (uint64_t)v2, (uint64_t)&v63, 0, 0);
  sub_1005E2720();
  long long v63 = 0u;
  long long v64 = 0u;
  *(void *)(v12 + 40) = sub_100579F08(0x6761735561746164, 0xE900000000000065, 1, (uint64_t)v2, (uint64_t)&v63, 0, 0);
  sub_1005E2750();
  *((void *)&v64 + 1) = &type metadata for Int;
  *(void *)&long long v63 = 0;
  *(void *)(v12 + 48) = sub_100579F08(0x436567617373656DLL, 0xEC000000746E756FLL, 0, (uint64_t)v2, (uint64_t)&v63, 0, 0);
  *(void *)&long long v63 = v12;
  sub_1005E20E0();
  id v13 = sub_10057A200(0x49746E756F636361, 0xEB000000006F666ELL, v63, (void (*)(void))_s14descr1006B9AE9V11AccountInfoCMa);
  sub_10057A3D8(0x786F626C69616DLL, 0xE700000000000000, (uint64_t)v11, 0, 1, 1);
  id v14 = v6;
  id v15 = [v3 entities];
  sub_1003C8730(0, &qword_10071A0F8);
  uint64_t v16 = sub_1005E20C0();

  *(void *)&long long v63 = v16;
  sub_1005E20A0();
  if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1005E2110();
  }
  sub_1005E2170();
  sub_1005E20E0();
  Class v17 = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  [v3 setEntities:v17];

  id v18 = v11;
  id v19 = [v3 entities];
  uint64_t v20 = sub_1005E20C0();

  *(void *)&long long v63 = v20;
  sub_1005E20A0();
  if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1005E2110();
  }
  sub_1005E2170();
  sub_1005E20E0();
  Class v21 = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  [v3 setEntities:v21];

  id v22 = v13;
  id v23 = [v3 entities];
  uint64_t v24 = sub_1005E20C0();

  *(void *)&long long v63 = v24;
  sub_1005E20A0();
  if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1005E2110();
  }
  id v58 = v22;
  id v59 = v18;
  sub_1005E2170();
  sub_1005E20E0();
  Class v25 = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v60 = v3;
  [v3 setEntities:v25];

  uint64_t v26 = swift_allocObject();
  long long v61 = xmmword_10062A020;
  *(_OWORD *)(v26 + 16) = xmmword_10062A020;
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1005F6740;
  id v28 = [v14 propertiesByName];
  sub_1003C8730(0, &qword_10071A120);
  uint64_t v29 = sub_1005E1970();

  if (!*(void *)(v29 + 16) || (unint64_t v30 = sub_100024668(0x6867696C746F7073, 0xEB00000000444974), (v31 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_15:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_16;
  }
  id v32 = *(id *)(*(void *)(v29 + 56) + 8 * v30);
  swift_bridgeObjectRelease();
  id v33 = [objc_allocWithZone((Class)NSFetchIndexElementDescription) initWithProperty:v32 collationType:0];

  *(void *)(v27 + 32) = v33;
  *(void *)&long long v63 = v27;
  sub_1005E20E0();
  id v34 = objc_allocWithZone((Class)NSFetchIndexDescription);
  NSString v35 = sub_1005E1BD0();
  sub_1003C8730(0, &qword_10071A128);
  Class v36 = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v37 = [v34 initWithName:v35 elements:v36];

  *(void *)(v26 + 32) = v37;
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v61;
  id v39 = [v14 propertiesByName];
  uint64_t v40 = sub_1005E1970();

  if (!*(void *)(v40 + 16)) {
    goto LABEL_15;
  }
  unint64_t v41 = sub_100024668(0x6E65477865646E69, 0xEF6E6F6974617265);
  if ((v42 & 1) == 0) {
    goto LABEL_15;
  }
  id v43 = *(id *)(*(void *)(v40 + 56) + 8 * v41);
  swift_bridgeObjectRelease();
  id v44 = [objc_allocWithZone((Class)NSFetchIndexElementDescription) initWithProperty:v43 collationType:0];

  *(void *)(v38 + 32) = v44;
  id v45 = [v14 propertiesByName];
  uint64_t v46 = sub_1005E1970();

  if (*(void *)(v46 + 16))
  {
    unint64_t v47 = sub_100024668(0x7475626972747461, 0xEF65676E61684365);
    if (v48)
    {
      id v49 = *(id *)(*(void *)(v46 + 56) + 8 * v47);
      swift_bridgeObjectRelease();
      id v50 = [objc_allocWithZone((Class)NSFetchIndexElementDescription) initWithProperty:v49 collationType:0];

      *(void *)(v38 + 40) = v50;
      *(void *)&long long v63 = v38;
      sub_1005E20E0();
      id v51 = objc_allocWithZone((Class)NSFetchIndexDescription);
      NSString v52 = sub_1005E1BD0();
      Class v53 = sub_1005E20B0().super.isa;
      swift_bridgeObjectRelease();
      id v54 = [v51 initWithName:v52 elements:v53];

      *(void *)(v26 + 40) = v54;
      *(void *)&long long v63 = v26;
      sub_1005E20E0();
      sub_1003C8730(0, &qword_10071A130);
      Class v55 = sub_1005E20B0().super.isa;
      swift_bridgeObjectRelease();
      [v14 setIndexes:v55];

      return (uint64_t)v60;
    }
  }
LABEL_16:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

id sub_10057DB20(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  id result = [a1 persistentStoreCoordinator];
  if (result)
  {
    id v6 = result;
    id v7 = [result managedObjectModel];

    id v8 = [v7 entitiesByName];
    sub_1003C8730(0, &qword_10071A0F8);
    uint64_t v9 = sub_1005E1970();

    uint64_t v10 = (*(uint64_t (**)(void))(ObjectType + 80))();
    if (*(void *)(v9 + 16))
    {
      unint64_t v12 = sub_100024668(v10, v11);
      if (v13)
      {
        id v14 = *(id *)(*(void *)(v9 + 56) + 8 * v12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v15 = [v2 initWithEntity:v14 insertIntoManagedObjectContext:a1];

        return v15;
      }
    }
    swift_bridgeObjectRelease();
    id result = (id)swift_bridgeObjectRelease();
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_10057DC84(void *a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v8 = v7;
  *(void *)&long long v35 = 0xD000000000000012;
  *((void *)&v35 + 1) = 0x80000001005ECE10;
  unint64_t v36 = 0xD00000000000001ALL;
  unint64_t v37 = 0x80000001005ECE30;
  uint64_t v38 = sub_100557014;
  uint64_t v39 = 0;
  uint64_t v40 = sub_1005B9E74;
  uint64_t v41 = 0;
  char v42 = sub_1005B9EA8;
  uint64_t v43 = 0;
  id v11 = [objc_allocWithZone(v8) initWithContext:a1];
  uint64_t v12 = sub_1005799D0((uint64_t *)&v35) + 1;
  id v13 = [objc_allocWithZone((Class)NSNumber) initWithLongLong:v12];
  id v14 = [a1 userInfo];
  id v15 = v13;
  objc_msgSend(v14, "__swift_setObject:forKeyedSubscript:", v15, sub_1005E3350());

  swift_unknownObjectRelease();
  sub_10057C6DC(&v35, &qword_10071A0C0);

  NSString v16 = sub_1005E1BD0();
  [v11 willChangeValueForKey:v16];

  id v17 = [objc_allocWithZone((Class)NSNumber) initWithLongLong:v12];
  [v11 setPrimitiveSpotlightID:v17];

  NSString v18 = sub_1005E1BD0();
  [v11 didChangeValueForKey:v18];

  [v11 setMailbox:a2];
  NSString v19 = sub_1005E1BD0();
  [v11 willChangeValueForKey:v19];

  id v20 = [objc_allocWithZone((Class)NSNumber) initWithLongLong:a3];
  [v11 setPrimitiveUid:v20];

  NSString v21 = sub_1005E1BD0();
  [v11 didChangeValueForKey:v21];

  NSString v22 = sub_1005E1BD0();
  [v11 willChangeValueForKey:v22];

  id v23 = [objc_allocWithZone((Class)NSNumber) initWithLongLong:sub_100556AAC(a4 & 0xFFFF010101010101)];
  [v11 setPrimitiveFlags:v23];

  NSString v24 = sub_1005E1BD0();
  [v11 didChangeValueForKey:v24];

  NSString v25 = sub_1005E1BD0();
  [v11 willChangeValueForKey:v25];

  id v26 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a6];
  [v11 setPrimitiveMessageSize:v26];

  NSString v27 = sub_1005E1BD0();
  [v11 didChangeValueForKey:v27];

  Class isa = sub_1005E0910().super.isa;
  [v11 setServerDate:isa];

  uint64_t v29 = sub_1005E0970();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(a7, v29);
  return v11;
}

uint64_t sub_10057E10C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000566C(&qword_10071A0A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  id v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_10057E370();
  sub_1005E34E0();
  if (v2) {
    return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_1005E30A0();
  if (v9) {
    int v10 = BYTE4(v9) & 1;
  }
  else {
    int v10 = 1;
  }
  if (v10) {
    int v11 = 0;
  }
  else {
    int v11 = v9;
  }
  v12.underlying = sub_10057BC24();
  int v25 = v11;
  char v14 = v13;
  if (v13) {
    uint64_t v24 = 0;
  }
  else {
    uint64_t v24 = UInt32.init(_:)(v12);
  }
  char v26 = 3;
  uint64_t result = sub_1005E30B0();
  int v23 = v16;
  if (v16)
  {
    uint64_t v22 = 0;
LABEL_16:
    unint64_t v17 = sub_10057BC24();
    NSString v18 = v8;
    char v20 = v19;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
    uint64_t result = _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
    *(_DWORD *)a2 = v25;
    *(unsigned char *)(a2 + 4) = v10;
    *(void *)(a2 + 8) = v24;
    *(unsigned char *)(a2 + 16) = v14 & 1;
    *(void *)(a2 + 24) = v22;
    *(unsigned char *)(a2 + 32) = v23 & 1;
    *(void *)(a2 + 36) = v17;
    *(unsigned char *)(a2 + 44) = v20 & 1;
    return result;
  }
  uint64_t v22 = result;
  if ((result & 0x8000000000000000) == 0) {
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

unint64_t sub_10057E370()
{
  unint64_t result = qword_10071A0A8;
  if (!qword_10071A0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A0A8);
  }
  return result;
}

unint64_t sub_10057E3C4()
{
  unint64_t result = qword_10071A0B0;
  if (!qword_10071A0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A0B0);
  }
  return result;
}

uint64_t sub_10057E418(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100719420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10057E480(uint64_t a1)
{
  return a1;
}

uint64_t sub_10057E4EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100718900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for InvalidUIDRangeError()
{
  return &type metadata for InvalidUIDRangeError;
}

unsigned char *_s14descr1006B9AE9V7MailboxC8MetadataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10057E630);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr1006B9AE9V7MailboxC8MetadataV10CodingKeysOMa()
{
  return &_s14descr1006B9AE9V7MailboxC8MetadataV10CodingKeysON;
}

__n128 _s14descr1006B9AE9V7MailboxC8MetadataVwcp(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s14descr1006B9AE9V7MailboxC8MetadataVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 45)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s14descr1006B9AE9V7MailboxC8MetadataVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 44) = 0;
    *(_DWORD *)(result + 40) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 45) = v3;
  return result;
}

ValueMetadata *_s14descr1006B9AE9V7MailboxC8MetadataVMa()
{
  return &_s14descr1006B9AE9V7MailboxC8MetadataVN;
}

unint64_t sub_10057E6EC()
{
  unint64_t result = qword_10071A138;
  if (!qword_10071A138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A138);
  }
  return result;
}

unint64_t sub_10057E744()
{
  unint64_t result = qword_10071A140;
  if (!qword_10071A140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A140);
  }
  return result;
}

unint64_t sub_10057E79C()
{
  unint64_t result = qword_10071A148;
  if (!qword_10071A148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A148);
  }
  return result;
}

uint64_t sub_10057E7F0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._id rawValue = &off_1006FC5B0;
  v6._object = a2;
  unint64_t v4 = sub_1005E3050(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

uint64_t _s14NewestMessagesVwxx(id *a1)
{
  return swift_release();
}

void *_s14NewestMessagesVwCP_0(void *a1, uint64_t a2)
{
  Swift::OpaquePointer v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t _s14NewestMessagesVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s14NewestMessagesVwta(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_release();
  return a1;
}

ValueMetadata *_s14NewestMessagesVMa()
{
  return &_s14NewestMessagesVN;
}

id sub_10057E978(uint64_t a1, void *a2)
{
  sub_10000566C(&qword_100719088);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10062A020;
  sub_10000566C(&qword_100719060);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1005F6670;
  id v5 = [a2 objectID];
  *(void *)(v4 + 56) = sub_1003C8730(0, &qword_100719068);
  *(void *)(v4 + 32) = v5;
  NSString v6 = sub_1005E1BD0();
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v8 = self;
  id v9 = [v8 predicateWithFormat:v6 argumentArray:isa];

  *(void *)(v3 + 32) = v9;
  NSString v10 = sub_1005E1BD0();
  Class v11 = sub_1005E20B0().super.isa;
  id v12 = [v8 predicateWithFormat:v10 argumentArray:v11];

  *(void *)(v3 + 40) = v12;
  sub_1005E20E0();
  sub_1003C8730(0, &qword_100719080);
  Class v13 = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [self andPredicateWithSubpredicates:v13];

  return v14;
}

id sub_10057EBA0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1005E0ED0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  Class v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  id v13 = objc_allocWithZone((Class)NSSortDescriptor);
  id v14 = a2;
  id v15 = a1;
  NSString v16 = sub_1005E1BD0();
  id v17 = [v13 initWithKey:v16 ascending:0];

  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a4, v8);
  type metadata accessor for MessagesSource();
  swift_allocObject();
  NSString v18 = sub_10056F108(v15, (uint64_t)sub_10057F1B8, v12, a3, v17, (uint64_t)v11, (uint64_t)UInt32.init(_:), 0);
  if (*((unsigned char *)v18 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_didStart) == 1)
  {
    swift_retain();
  }
  else
  {
    *((unsigned char *)v18 + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_didStart) = 1;
    char v19 = *(void (**)(uint64_t))((char *)v18
                                         + OBJC_IVAR____TtC17IMAPSearchIndexer14MessagesSource_contentDidChange);
    uint64_t v20 = swift_retain();
    v19(v20);
  }

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a4, v8);
  return v14;
}

uint64_t sub_10057EDE0(uint64_t a1)
{
  id v2 = sub_10056F62C();
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3 < 0)
  {
    __break(1u);
  }
  else
  {
    id v4 = v2;
    uint64_t v5 = (uint64_t)[v4 count];
    if (v3)
    {
      uint64_t v6 = v5;
      if (v5 >= 1)
      {
        uint64_t v7 = 0;
        uint64_t v8 = 0;
        id v33 = _swiftEmptyArrayStorage;
        uint64_t v9 = &_swiftEmptyArrayStorage[4];
LABEL_5:
        id v34 = v9;
        uint64_t v37 = v7;
        uint64_t v32 = v3 - 1;
        while (1)
        {
          id v10 = [v4 objectAtIndexedSubscript:v8];
          sub_1005E2A70();
          swift_unknownObjectRelease();
          _s14descr1006B9AE9V7MessageCMa();
          if (!swift_dynamicCast()) {
            goto LABEL_35;
          }
          ++v8;
          NSString v11 = sub_1005E1BD0();
          [v39 willAccessValueForKey:v11];

          id v12 = [v39 primitiveSpotlightID];
          if (v12)
          {
            id v14 = v12;
            [v12 longLongValue];

            NSString v15 = sub_1005E1BD0();
            [v39 didAccessValueForKey:v15];

            uint64_t v16 = v37;
            if (!v37)
            {
              unint64_t v17 = v33[3];
              if ((uint64_t)((v17 >> 1) + 0x4000000000000000) < 0) {
                goto LABEL_34;
              }
              int64_t v18 = v17 & 0xFFFFFFFFFFFFFFFELL;
              if (v18 <= 1) {
                int64_t v18 = 1;
              }
              int64_t v35 = v18;
              sub_10000566C(&qword_100719088);
              uint64_t v38 = (void *)swift_allocObject();
              int64_t v19 = j__malloc_size(v38);
              uint64_t v20 = v19 - 32;
              if (v19 < 32) {
                uint64_t v20 = v19 - 25;
              }
              uint64_t v21 = v20 >> 3;
              long long v38[2] = v35;
              v38[3] = (2 * (v20 >> 3)) | 1;
              unint64_t v22 = (unint64_t)(v38 + 4);
              uint64_t v23 = v33[3] >> 1;
              if (v33[2])
              {
                uint64_t v24 = v33 + 4;
                if (v38 != v33 || v22 >= (unint64_t)v24 + 8 * v23)
                {
                  uint64_t v36 = v20 >> 3;
                  uint64_t v31 = v33[3] >> 1;
                  memmove(v38 + 4, v24, 8 * v23);
                  uint64_t v23 = v31;
                  unint64_t v22 = (unint64_t)(v38 + 4);
                  uint64_t v21 = v36;
                }
                _OWORD v33[2] = 0;
              }
              id v34 = (void *)(v22 + 8 * v23);
              uint64_t v16 = (v21 & 0x7FFFFFFFFFFFFFFFLL) - v23;
              swift_release();
              id v33 = v38;
            }
            BOOL v25 = __OFSUB__(v16, 1);
            uint64_t v7 = v16 - 1;
            if (v25) {
              goto LABEL_33;
            }
            *id v34 = v39;
            --v3;
            if (!v32 || (uint64_t v9 = v34 + 1, v8 >= v6))
            {

              char v26 = v33;
              goto LABEL_27;
            }
            goto LABEL_5;
          }
          NSString v13 = sub_1005E1BD0();
          [v39 didAccessValueForKey:v13];

          if (v8 >= v6)
          {

            char v26 = v33;
            uint64_t v7 = v37;
            goto LABEL_27;
          }
        }
      }
    }

    uint64_t v7 = 0;
    char v26 = _swiftEmptyArrayStorage;
LABEL_27:
    unint64_t v27 = v26[3];
    if (v27 < 2)
    {
LABEL_30:

      return (uint64_t)v26;
    }
    unint64_t v28 = v27 >> 1;
    BOOL v25 = __OFSUB__(v28, v7);
    uint64_t v29 = v28 - v7;
    if (!v25)
    {
      void v26[2] = v29;
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  uint64_t result = sub_1005E2F20();
  __break(1u);
  return result;
}

uint64_t sub_10057F180()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10057F1B8(uint64_t a1)
{
  return sub_10057E978(a1, *(void **)(v1 + 16));
}

ValueMetadata *type metadata accessor for PendingItem.MemoryPressure()
{
  return &type metadata for PendingItem.MemoryPressure;
}

void *sub_10057F1D0(_OWORD *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2;
  id v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *id v4 = *a2;
    id v4 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for PendingItem.Info(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      id v58 = v3;
      uint64_t v12 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v12;
      long long v61 = (void *)v9[2];
      _OWORD v8[2] = v61;
      Class v55 = (int *)type metadata accessor for PendingItem.AddMessage(0);
      uint64_t v56 = v9;
      uint64_t v13 = v55[6];
      uint64_t v57 = v8;
      id v14 = (void *)((char *)v8 + v13);
      NSString v15 = (void *)((char *)v9 + v13);
      uint64_t v16 = v15[1];
      *id v14 = *v15;
      v14[1] = v16;
      unint64_t v17 = (int *)type metadata accessor for IndexableMessageInfo(0);
      uint64_t v18 = v17[6];
      __dst = (char *)v14 + v18;
      int64_t v19 = (char *)v15 + v18;
      uint64_t v20 = sub_1005E0970();
      uint64_t v63 = *(void *)(v20 - 8);
      id v60 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
      swift_bridgeObjectRetain();
      id v21 = v61;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v62 = v20;
      if (v60(v19, 1, v20))
      {
        uint64_t v22 = sub_10000566C(&qword_100719228);
        memcpy(__dst, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(__dst, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(__dst, 0, 1, v20);
      }
      uint64_t v23 = v17[7];
      uint64_t v24 = (char *)v14 + v23;
      BOOL v25 = (char *)v15 + v23;
      uint64_t v26 = *((void *)v25 + 3);
      if (v26)
      {
        uint64_t v27 = *((void *)v25 + 1);
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = v27;
        *((void *)v24 + 2) = *((void *)v25 + 2);
        *((void *)v24 + 3) = v26;
        *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
        uint64_t v28 = *((void *)v25 + 7);
        *((void *)v24 + 6) = *((void *)v25 + 6);
        *((void *)v24 + 7) = v28;
        *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
        uint64_t v29 = *((void *)v25 + 11);
        *((void *)v24 + 10) = *((void *)v25 + 10);
        *((void *)v24 + 11) = v29;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v30 = *((_OWORD *)v25 + 3);
        *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
        *((_OWORD *)v24 + 3) = v30;
        long long v31 = *((_OWORD *)v25 + 5);
        *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
        *((_OWORD *)v24 + 5) = v31;
        long long v32 = *((_OWORD *)v25 + 1);
        *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v32;
      }
      uint64_t v33 = v17[8];
      id v34 = (void *)((char *)v14 + v33);
      int64_t v35 = (void *)((char *)v15 + v33);
      uint64_t v36 = v35[1];
      *id v34 = *v35;
      v34[1] = v36;
      uint64_t v37 = v17[9];
      uint64_t v38 = (void *)((char *)v14 + v37);
      uint64_t v39 = (void *)((char *)v15 + v37);
      uint64_t v40 = v39[1];
      *uint64_t v38 = *v39;
      v38[1] = v40;
      *(void *)((char *)v14 + v17[10]) = *(void *)((char *)v15 + v17[10]);
      *(_WORD *)((char *)v14 + v17[11]) = *(_WORD *)((char *)v15 + v17[11]);
      *((unsigned char *)v14 + v17[12]) = *((unsigned char *)v15 + v17[12]);
      *((unsigned char *)v14 + v17[13]) = *((unsigned char *)v15 + v17[13]);
      *((unsigned char *)v14 + v17[14]) = *((unsigned char *)v15 + v17[14]);
      uint64_t v41 = v17[15];
      char v42 = (char *)v14 + v41;
      uint64_t v43 = (char *)v15 + v41;
      int v44 = *((unsigned __int8 *)v15 + v41 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v44 == 255)
      {
        *(_OWORD *)char v42 = *(_OWORD *)v43;
        v42[16] = v43[16];
      }
      else
      {
        uint64_t v45 = *(void *)v43;
        uint64_t v46 = *((void *)v43 + 1);
        MailboxPriorityInfo.mailboxPriorityOrder.getter();
        *(void *)char v42 = v45;
        *((void *)v42 + 1) = v46;
        v42[16] = v44 & 1;
      }
      uint64_t v3 = v58;
      *(void *)((char *)v14 + v17[16]) = *(void *)((char *)v15 + v17[16]);
      uint64_t v47 = v55[7];
      char v48 = (char *)v57 + v47;
      id v49 = (char *)v56 + v47;
      *(void *)char v48 = *(void *)v49;
      v48[8] = v49[8];
      uint64_t v50 = v55[8];
      id v51 = (char *)v57 + v50;
      NSString v52 = (char *)v56 + v50;
      Class v53 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
      swift_bridgeObjectRetain();
      v53(v51, v52, v62);
      swift_storeEnumTagMultiPayload();
    }
    *(void *)((char *)v4 + *(int *)(a3 + 28)) = *(void *)((char *)v3 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t type metadata accessor for PendingItem.Info(uint64_t a1)
{
  return sub_10003B314(a1, qword_10071A2F8);
}

uint64_t type metadata accessor for PendingItem.AddMessage(uint64_t a1)
{
  return sub_10003B314(a1, qword_10071A240);
}

uint64_t sub_10057F624(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  type metadata accessor for PendingItem.Info(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    swift_bridgeObjectRelease();

    uint64_t v4 = type metadata accessor for PendingItem.AddMessage(0);
    uint64_t v5 = v2 + *(int *)(v4 + 24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = (int *)type metadata accessor for IndexableMessageInfo(0);
    uint64_t v7 = v5 + v6[6];
    uint64_t v8 = sub_1005E0970();
    uint64_t v11 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v7, v8);
    }
    if (*(void *)(v5 + v6[7] + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(unsigned __int8 *)(v5 + v6[15] + 16) != 255) {
      sub_10024EEEC();
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = v2 + *(int *)(v4 + 32);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v9, v8);
  }
  return result;
}

_OWORD *sub_10057F804(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for PendingItem.Info(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v56 = v3;
    uint64_t v57 = v4;
    uint64_t v10 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v10;
    id v58 = v5;
    id v59 = (void *)v8[2];
    _OWORD v7[2] = v59;
    id v54 = (int *)type metadata accessor for PendingItem.AddMessage(0);
    Class v55 = v7;
    uint64_t v11 = v54[6];
    uint64_t v12 = (void *)((char *)v7 + v11);
    id v60 = v8;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = *(void *)((char *)v8 + v11 + 8);
    *uint64_t v12 = *(void *)((char *)v8 + v11);
    v12[1] = v14;
    NSString v15 = (int *)type metadata accessor for IndexableMessageInfo(0);
    uint64_t v16 = v15[6];
    __dst = (char *)v12 + v16;
    unint64_t v17 = &v13[v16];
    uint64_t v18 = sub_1005E0970();
    uint64_t v61 = *(void *)(v18 - 8);
    int64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
    swift_bridgeObjectRetain();
    id v20 = v59;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19(v17, 1, v18))
    {
      uint64_t v21 = sub_10000566C(&qword_100719228);
      memcpy(__dst, v17, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(__dst, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(__dst, 0, 1, v18);
    }
    __dsta = (void *)v18;
    uint64_t v22 = v15[7];
    uint64_t v23 = (char *)v12 + v22;
    uint64_t v24 = &v13[v22];
    uint64_t v25 = *((void *)v24 + 3);
    if (v25)
    {
      uint64_t v26 = *((void *)v24 + 1);
      *(void *)uint64_t v23 = *(void *)v24;
      *((void *)v23 + 1) = v26;
      *((void *)v23 + 2) = *((void *)v24 + 2);
      *((void *)v23 + 3) = v25;
      *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
      uint64_t v27 = *((void *)v24 + 7);
      *((void *)v23 + 6) = *((void *)v24 + 6);
      *((void *)v23 + 7) = v27;
      *((_OWORD *)v23 + 4) = *((_OWORD *)v24 + 4);
      uint64_t v28 = *((void *)v24 + 11);
      *((void *)v23 + 10) = *((void *)v24 + 10);
      *((void *)v23 + 11) = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v29 = *((_OWORD *)v24 + 3);
      *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
      *((_OWORD *)v23 + 3) = v29;
      long long v30 = *((_OWORD *)v24 + 5);
      *((_OWORD *)v23 + 4) = *((_OWORD *)v24 + 4);
      *((_OWORD *)v23 + 5) = v30;
      long long v31 = *((_OWORD *)v24 + 1);
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v31;
    }
    uint64_t v32 = v15[8];
    uint64_t v33 = (void *)((char *)v12 + v32);
    id v34 = &v13[v32];
    uint64_t v35 = *((void *)v34 + 1);
    void *v33 = *(void *)v34;
    v33[1] = v35;
    uint64_t v36 = v15[9];
    uint64_t v37 = (void *)((char *)v12 + v36);
    uint64_t v38 = &v13[v36];
    uint64_t v39 = *((void *)v38 + 1);
    *uint64_t v37 = *(void *)v38;
    v37[1] = v39;
    *(void *)((char *)v12 + v15[10]) = *(void *)&v13[v15[10]];
    *(_WORD *)((char *)v12 + v15[11]) = *(_WORD *)&v13[v15[11]];
    *((unsigned char *)v12 + v15[12]) = v13[v15[12]];
    *((unsigned char *)v12 + v15[13]) = v13[v15[13]];
    *((unsigned char *)v12 + v15[14]) = v13[v15[14]];
    uint64_t v40 = v15[15];
    uint64_t v41 = (char *)v12 + v40;
    char v42 = &v13[v40];
    int v43 = v13[v40 + 16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v43 == 255)
    {
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      v41[16] = v42[16];
    }
    else
    {
      uint64_t v44 = *(void *)v42;
      uint64_t v45 = *((void *)v42 + 1);
      MailboxPriorityInfo.mailboxPriorityOrder.getter();
      *(void *)uint64_t v41 = v44;
      *((void *)v41 + 1) = v45;
      v41[16] = v43 & 1;
    }
    uint64_t v4 = v57;
    uint64_t v5 = v58;
    uint64_t v3 = v56;
    *(void *)((char *)v12 + v15[16]) = *(void *)&v13[v15[16]];
    uint64_t v46 = v54[7];
    uint64_t v47 = (char *)v55 + v46;
    char v48 = (char *)v60 + v46;
    *(void *)uint64_t v47 = *(void *)v48;
    v47[8] = v48[8];
    uint64_t v49 = v54[8];
    uint64_t v50 = (char *)v55 + v49;
    id v51 = (char *)v60 + v49;
    NSString v52 = *(void (**)(char *, char *, void *))(v61 + 16);
    swift_bridgeObjectRetain();
    v52(v50, v51, __dsta);
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)v5 + *(int *)(v3 + 28)) = *(void *)((char *)v4 + *(int *)(v3 + 28));
  return v5;
}

void *sub_10057FBCC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *a1 = *a2;
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_1005835E8((uint64_t)a1 + v6, type metadata accessor for PendingItem.Info);
    uint64_t v9 = type metadata accessor for PendingItem.Info(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v51 = v3;
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      Class v53 = (void *)v8[2];
      _OWORD v7[2] = v53;
      char v48 = (int *)type metadata accessor for PendingItem.AddMessage(0);
      uint64_t v10 = v48[6];
      uint64_t v49 = v8;
      uint64_t v50 = v7;
      uint64_t v11 = (void *)((char *)v7 + v10);
      uint64_t v12 = (char *)v8 + v10;
      *uint64_t v11 = *(void *)((char *)v8 + v10);
      v11[1] = *(void *)((char *)v8 + v10 + 8);
      uint64_t v13 = (int *)type metadata accessor for IndexableMessageInfo(0);
      uint64_t v14 = v13[6];
      __dst = (char *)v11 + v14;
      NSString v15 = &v12[v14];
      uint64_t v16 = sub_1005E0970();
      uint64_t v56 = *(void *)(v16 - 8);
      NSString v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
      swift_bridgeObjectRetain();
      id v17 = v53;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v52(v15, 1, v16))
      {
        uint64_t v18 = sub_10000566C(&qword_100719228);
        memcpy(__dst, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v56 + 16))(__dst, v15, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(__dst, 0, 1, v16);
      }
      __dsta = (void *)v16;
      uint64_t v19 = v13[7];
      id v20 = (void *)((char *)v11 + v19);
      uint64_t v21 = &v12[v19];
      if (*((void *)v21 + 3))
      {
        *id v20 = *(void *)v21;
        v20[1] = *((void *)v21 + 1);
        void v20[2] = *((void *)v21 + 2);
        v20[3] = *((void *)v21 + 3);
        v20[4] = *((void *)v21 + 4);
        v20[5] = *((void *)v21 + 5);
        v20[6] = *((void *)v21 + 6);
        v20[7] = *((void *)v21 + 7);
        v20[8] = *((void *)v21 + 8);
        v20[9] = *((void *)v21 + 9);
        v20[10] = *((void *)v21 + 10);
        v20[11] = *((void *)v21 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v22 = *((_OWORD *)v21 + 1);
        *(_OWORD *)id v20 = *(_OWORD *)v21;
        *((_OWORD *)v20 + 1) = v22;
        long long v23 = *((_OWORD *)v21 + 2);
        long long v24 = *((_OWORD *)v21 + 3);
        long long v25 = *((_OWORD *)v21 + 5);
        *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
        *((_OWORD *)v20 + 5) = v25;
        *((_OWORD *)v20 + 2) = v23;
        *((_OWORD *)v20 + 3) = v24;
      }
      uint64_t v26 = v13[8];
      uint64_t v27 = (void *)((char *)v11 + v26);
      uint64_t v28 = &v12[v26];
      *uint64_t v27 = *(void *)v28;
      v27[1] = *((void *)v28 + 1);
      uint64_t v29 = v13[9];
      long long v30 = (void *)((char *)v11 + v29);
      long long v31 = &v12[v29];
      *long long v30 = *(void *)v31;
      v30[1] = *((void *)v31 + 1);
      *(void *)((char *)v11 + v13[10]) = *(void *)&v12[v13[10]];
      *(_WORD *)((char *)v11 + v13[11]) = *(_WORD *)&v12[v13[11]];
      *((unsigned char *)v11 + v13[12]) = v12[v13[12]];
      *((unsigned char *)v11 + v13[13]) = v12[v13[13]];
      *((unsigned char *)v11 + v13[14]) = v12[v13[14]];
      uint64_t v32 = v13[15];
      uint64_t v33 = (char *)v11 + v32;
      id v34 = &v12[v32];
      int v35 = v12[v32 + 16];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v35 == 255)
      {
        long long v36 = *(_OWORD *)v34;
        v33[16] = v34[16];
        *(_OWORD *)uint64_t v33 = v36;
      }
      else
      {
        uint64_t v37 = *(void *)v34;
        uint64_t v38 = *((void *)v34 + 1);
        MailboxPriorityInfo.mailboxPriorityOrder.getter();
        *(void *)uint64_t v33 = v37;
        *((void *)v33 + 1) = v38;
        v33[16] = v35 & 1;
      }
      uint64_t v3 = v51;
      *(void *)((char *)v11 + v13[16]) = *(void *)&v12[v13[16]];
      uint64_t v39 = v48[7];
      uint64_t v40 = (char *)v50 + v39;
      uint64_t v41 = (char *)v49 + v39;
      uint64_t v42 = *(void *)v41;
      v40[8] = v41[8];
      *(void *)uint64_t v40 = v42;
      uint64_t v43 = v48[8];
      uint64_t v44 = (char *)v50 + v43;
      uint64_t v45 = (char *)v49 + v43;
      uint64_t v46 = *(void (**)(char *, char *, void *))(v56 + 16);
      swift_bridgeObjectRetain();
      v46(v44, v45, __dsta);
      swift_storeEnumTagMultiPayload();
    }
  }
  *(void *)((char *)a1 + *(int *)(v3 + 28)) = *(void *)((char *)a2 + *(int *)(v3 + 28));
  return a1;
}

_OWORD *sub_100580010(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for PendingItem.Info(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v32 = v4;
    uint64_t v35 = v3;
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    _OWORD v7[2] = v8[2];
    id v34 = (int *)type metadata accessor for PendingItem.AddMessage(0);
    uint64_t v10 = v34[6];
    uint64_t v11 = (char *)v7 + v10;
    uint64_t v12 = (char *)v8 + v10;
    *(_OWORD *)((char *)v7 + v10) = *(_OWORD *)((char *)v8 + v10);
    uint64_t v13 = (int *)type metadata accessor for IndexableMessageInfo(0);
    uint64_t v14 = v13[6];
    uint64_t v33 = &v11[v14];
    NSString v15 = &v12[v14];
    uint64_t v16 = sub_1005E0970();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_10000566C(&qword_100719228);
      memcpy(v33, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v33, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v33, 0, 1, v16);
    }
    uint64_t v19 = v13[7];
    id v20 = &v11[v19];
    uint64_t v21 = &v12[v19];
    long long v22 = *((_OWORD *)v21 + 3);
    *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
    *((_OWORD *)v20 + 3) = v22;
    long long v23 = *((_OWORD *)v21 + 5);
    *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
    *((_OWORD *)v20 + 5) = v23;
    long long v24 = *((_OWORD *)v21 + 1);
    *(_OWORD *)id v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v24;
    *(_OWORD *)&v11[v13[8]] = *(_OWORD *)&v12[v13[8]];
    *(_OWORD *)&v11[v13[9]] = *(_OWORD *)&v12[v13[9]];
    *(void *)&v11[v13[10]] = *(void *)&v12[v13[10]];
    *(_WORD *)&v11[v13[11]] = *(_WORD *)&v12[v13[11]];
    v11[v13[12]] = v12[v13[12]];
    v11[v13[13]] = v12[v13[13]];
    v11[v13[14]] = v12[v13[14]];
    uint64_t v25 = v13[15];
    uint64_t v26 = &v11[v25];
    uint64_t v27 = &v12[v25];
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    v26[16] = v27[16];
    *(void *)&v11[v13[16]] = *(void *)&v12[v13[16]];
    uint64_t v28 = v34[7];
    uint64_t v29 = (char *)v7 + v28;
    long long v30 = (char *)v8 + v28;
    *(void *)uint64_t v29 = *(void *)v30;
    v29[8] = v30[8];
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))((char *)v7 + v34[8], (char *)v8 + v34[8], v16);
    swift_storeEnumTagMultiPayload();
    uint64_t v3 = v35;
    uint64_t v4 = v32;
  }
  *(void *)((char *)a1 + *(int *)(v3 + 28)) = *(void *)((char *)v4 + *(int *)(v3 + 28));
  return a1;
}

_OWORD *sub_1005802E0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_1005835E8((uint64_t)a1 + v6, type metadata accessor for PendingItem.Info);
    uint64_t v9 = type metadata accessor for PendingItem.Info(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v31 = v3;
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      _OWORD v7[2] = v8[2];
      uint64_t v32 = (int *)type metadata accessor for PendingItem.AddMessage(0);
      uint64_t v10 = v32[6];
      uint64_t v11 = (char *)v7 + v10;
      uint64_t v12 = (char *)v8 + v10;
      *(_OWORD *)((char *)v7 + v10) = *(_OWORD *)((char *)v8 + v10);
      uint64_t v13 = (int *)type metadata accessor for IndexableMessageInfo(0);
      uint64_t v14 = v13[6];
      uint64_t v33 = &v11[v14];
      NSString v15 = &v12[v14];
      uint64_t v16 = sub_1005E0970();
      uint64_t v34 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v15, 1, v16))
      {
        uint64_t v17 = sub_10000566C(&qword_100719228);
        memcpy(v33, v15, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v33, v15, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v33, 0, 1, v16);
      }
      uint64_t v18 = v13[7];
      uint64_t v19 = &v11[v18];
      id v20 = &v12[v18];
      long long v21 = *((_OWORD *)v20 + 3);
      *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
      *((_OWORD *)v19 + 3) = v21;
      long long v22 = *((_OWORD *)v20 + 5);
      *((_OWORD *)v19 + 4) = *((_OWORD *)v20 + 4);
      *((_OWORD *)v19 + 5) = v22;
      long long v23 = *((_OWORD *)v20 + 1);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v23;
      *(_OWORD *)&v11[v13[8]] = *(_OWORD *)&v12[v13[8]];
      *(_OWORD *)&v11[v13[9]] = *(_OWORD *)&v12[v13[9]];
      *(void *)&v11[v13[10]] = *(void *)&v12[v13[10]];
      *(_WORD *)&v11[v13[11]] = *(_WORD *)&v12[v13[11]];
      v11[v13[12]] = v12[v13[12]];
      v11[v13[13]] = v12[v13[13]];
      v11[v13[14]] = v12[v13[14]];
      uint64_t v24 = v13[15];
      uint64_t v25 = &v11[v24];
      uint64_t v26 = &v12[v24];
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      v25[16] = v26[16];
      *(void *)&v11[v13[16]] = *(void *)&v12[v13[16]];
      uint64_t v27 = v32[7];
      uint64_t v28 = (char *)v7 + v27;
      uint64_t v29 = (char *)v8 + v27;
      *(void *)uint64_t v28 = *(void *)v29;
      v28[8] = v29[8];
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))((char *)v7 + v32[8], (char *)v8 + v32[8], v16);
      swift_storeEnumTagMultiPayload();
      uint64_t v3 = v31;
    }
  }
  *(void *)((char *)a1 + *(int *)(v3 + 28)) = *(void *)((char *)a2 + *(int *)(v3 + 28));
  return a1;
}

uint64_t sub_1005805D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005805E4);
}

uint64_t sub_1005805E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = type metadata accessor for PendingItem.Info(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_100580654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100580668);
}

uint64_t sub_100580668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = type metadata accessor for PendingItem.Info(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t type metadata accessor for PendingItem(uint64_t a1)
{
  return sub_10003B314(a1, qword_10071A1A8);
}

uint64_t sub_1005806FC()
{
  uint64_t result = type metadata accessor for PendingItem.Info(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100580798(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v19 = (uint64_t *)(v18 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = (void *)a2[2];
    a1[2] = (uint64_t)v6;
    uint64_t v7 = a3[6];
    uint64_t v8 = (uint64_t *)((char *)a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = *(uint64_t *)((char *)a2 + v7 + 8);
    *uint64_t v8 = *(uint64_t *)((char *)a2 + v7);
    v8[1] = v10;
    uint64_t v11 = (int *)type metadata accessor for IndexableMessageInfo(0);
    uint64_t v12 = v11[6];
    __dst = (char *)v8 + v12;
    uint64_t v13 = &v9[v12];
    uint64_t v14 = sub_1005E0970();
    uint64_t v58 = *(void *)(v14 - 8);
    uint64_t v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
    swift_bridgeObjectRetain();
    id v15 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v56(v13, 1, v14))
    {
      uint64_t v16 = v14;
      uint64_t v17 = sub_10000566C(&qword_100719228);
      memcpy(__dst, v13, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(__dst, v13, v14);
      uint64_t v16 = v14;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(__dst, 0, 1, v14);
    }
    uint64_t v20 = v11[7];
    long long v21 = (char *)v8 + v20;
    long long v22 = &v9[v20];
    uint64_t v23 = *((void *)v22 + 3);
    if (v23)
    {
      uint64_t v24 = *((void *)v22 + 1);
      *(void *)long long v21 = *(void *)v22;
      *((void *)v21 + 1) = v24;
      *((void *)v21 + 2) = *((void *)v22 + 2);
      *((void *)v21 + 3) = v23;
      *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
      uint64_t v25 = *((void *)v22 + 7);
      *((void *)v21 + 6) = *((void *)v22 + 6);
      *((void *)v21 + 7) = v25;
      *((_OWORD *)v21 + 4) = *((_OWORD *)v22 + 4);
      uint64_t v26 = *((void *)v22 + 11);
      *((void *)v21 + 10) = *((void *)v22 + 10);
      *((void *)v21 + 11) = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v27 = *((_OWORD *)v22 + 3);
      *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
      *((_OWORD *)v21 + 3) = v27;
      long long v28 = *((_OWORD *)v22 + 5);
      *((_OWORD *)v21 + 4) = *((_OWORD *)v22 + 4);
      *((_OWORD *)v21 + 5) = v28;
      long long v29 = *((_OWORD *)v22 + 1);
      *(_OWORD *)long long v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v29;
    }
    uint64_t v30 = v11[8];
    uint64_t v31 = (void *)((char *)v8 + v30);
    uint64_t v32 = &v9[v30];
    uint64_t v33 = *((void *)v32 + 1);
    *uint64_t v31 = *(void *)v32;
    v31[1] = v33;
    uint64_t v34 = v11[9];
    uint64_t v35 = (void *)((char *)v8 + v34);
    long long v36 = &v9[v34];
    uint64_t v37 = *((void *)v36 + 1);
    *uint64_t v35 = *(void *)v36;
    v35[1] = v37;
    *(void *)((char *)v8 + v11[10]) = *(void *)&v9[v11[10]];
    *(_WORD *)((char *)v8 + v11[11]) = *(_WORD *)&v9[v11[11]];
    *((unsigned char *)v8 + v11[12]) = v9[v11[12]];
    *((unsigned char *)v8 + v11[13]) = v9[v11[13]];
    *((unsigned char *)v8 + v11[14]) = v9[v11[14]];
    uint64_t v38 = v11[15];
    uint64_t v39 = (char *)v8 + v38;
    uint64_t v40 = &v9[v38];
    int v41 = v9[v38 + 16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v41 == 255)
    {
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      v39[16] = v40[16];
    }
    else
    {
      uint64_t v42 = *(void *)v40;
      uint64_t v43 = *((void *)v40 + 1);
      MailboxPriorityInfo.mailboxPriorityOrder.getter();
      *(void *)uint64_t v39 = v42;
      *((void *)v39 + 1) = v43;
      v39[16] = v41 & 1;
    }
    uint64_t v44 = v16;
    uint64_t v19 = a1;
    *(void *)((char *)v8 + v11[16]) = *(void *)&v9[v11[16]];
    uint64_t v45 = a3[7];
    uint64_t v46 = a3[8];
    uint64_t v47 = (char *)a1 + v45;
    char v48 = (char *)a2 + v45;
    *(void *)uint64_t v47 = *(void *)v48;
    v47[8] = v48[8];
    uint64_t v49 = (char *)a1 + v46;
    uint64_t v50 = (char *)a2 + v46;
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
    swift_bridgeObjectRetain();
    v51(v49, v50, v44);
  }
  return v19;
}

uint64_t sub_100580B20(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();

  uint64_t v4 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for IndexableMessageInfo(0);
  uint64_t v6 = v4 + v5[6];
  uint64_t v7 = sub_1005E0970();
  uint64_t v11 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v6, v7);
  }
  if (*(void *)(v4 + v5[7] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v4 + v5[15] + 16) != 255) {
    sub_10024EEEC();
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + *(int *)(a2 + 32);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
  return v9(v8, v7);
}

void *sub_100580CC4(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v56 = (void *)a2[2];
  a1[2] = v56;
  uint64_t v4 = a3[6];
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = *(void *)((char *)a2 + v4 + 8);
  *uint64_t v5 = *(void *)((char *)a2 + v4);
  v5[1] = v7;
  uint64_t v8 = (int *)type metadata accessor for IndexableMessageInfo(0);
  uint64_t v9 = v8[6];
  __dst = (char *)v5 + v9;
  uint64_t v10 = &v6[v9];
  uint64_t v11 = sub_1005E0970();
  uint64_t v12 = *(void *)(v11 - 8);
  Class v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  id v13 = v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v55(v10, 1, v11))
  {
    uint64_t v14 = v12;
    uint64_t v15 = v11;
    uint64_t v16 = sub_10000566C(&qword_100719228);
    memcpy(__dst, v10, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    uint64_t v14 = v12;
    uint64_t v17 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
    uint64_t v15 = v11;
    v17(__dst, 0, 1, v11);
  }
  uint64_t v18 = v8[7];
  uint64_t v19 = (char *)v5 + v18;
  uint64_t v20 = &v6[v18];
  uint64_t v21 = *((void *)v20 + 3);
  if (v21)
  {
    uint64_t v22 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v22;
    *((void *)v19 + 2) = *((void *)v20 + 2);
    *((void *)v19 + 3) = v21;
    *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
    uint64_t v23 = *((void *)v20 + 7);
    *((void *)v19 + 6) = *((void *)v20 + 6);
    *((void *)v19 + 7) = v23;
    *((_OWORD *)v19 + 4) = *((_OWORD *)v20 + 4);
    uint64_t v24 = *((void *)v20 + 11);
    *((void *)v19 + 10) = *((void *)v20 + 10);
    *((void *)v19 + 11) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v25 = *((_OWORD *)v20 + 3);
    *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
    *((_OWORD *)v19 + 3) = v25;
    long long v26 = *((_OWORD *)v20 + 5);
    *((_OWORD *)v19 + 4) = *((_OWORD *)v20 + 4);
    *((_OWORD *)v19 + 5) = v26;
    long long v27 = *((_OWORD *)v20 + 1);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v27;
  }
  uint64_t v28 = v8[8];
  long long v29 = (void *)((char *)v5 + v28);
  uint64_t v30 = &v6[v28];
  uint64_t v31 = *((void *)v30 + 1);
  *long long v29 = *(void *)v30;
  v29[1] = v31;
  uint64_t v32 = v8[9];
  uint64_t v33 = (void *)((char *)v5 + v32);
  uint64_t v34 = &v6[v32];
  uint64_t v35 = *((void *)v34 + 1);
  void *v33 = *(void *)v34;
  v33[1] = v35;
  *(void *)((char *)v5 + v8[10]) = *(void *)&v6[v8[10]];
  *(_WORD *)((char *)v5 + v8[11]) = *(_WORD *)&v6[v8[11]];
  *((unsigned char *)v5 + v8[12]) = v6[v8[12]];
  *((unsigned char *)v5 + v8[13]) = v6[v8[13]];
  *((unsigned char *)v5 + v8[14]) = v6[v8[14]];
  uint64_t v36 = v8[15];
  uint64_t v37 = (char *)v5 + v36;
  uint64_t v38 = &v6[v36];
  int v39 = v6[v36 + 16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v39 == 255)
  {
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
  }
  else
  {
    uint64_t v40 = *(void *)v38;
    uint64_t v41 = *((void *)v38 + 1);
    MailboxPriorityInfo.mailboxPriorityOrder.getter();
    *(void *)uint64_t v37 = v40;
    *((void *)v37 + 1) = v41;
    v37[16] = v39 & 1;
  }
  uint64_t v42 = v15;
  uint64_t v43 = v14;
  *(void *)((char *)v5 + v8[16]) = *(void *)&v6[v8[16]];
  uint64_t v44 = a3[7];
  uint64_t v45 = a3[8];
  uint64_t v46 = (char *)a1 + v44;
  uint64_t v47 = (char *)a2 + v44;
  *(void *)uint64_t v46 = *(void *)v47;
  v46[8] = v47[8];
  char v48 = (char *)a1 + v45;
  uint64_t v49 = (char *)a2 + v45;
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
  swift_bridgeObjectRetain();
  v50(v48, v49, v42);
  return a1;
}

char *sub_10058100C(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)*((void *)a2 + 2);
  uint64_t v7 = (void *)*((void *)a1 + 2);
  *((void *)a1 + 2) = v6;
  id v8 = v6;

  uint64_t v57 = a2;
  uint64_t v58 = a3;
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v10 + 1) = *((void *)v11 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = (int *)type metadata accessor for IndexableMessageInfo(0);
  uint64_t v13 = v12[6];
  uint64_t v14 = &v10[v13];
  uint64_t v15 = &v11[v13];
  uint64_t v16 = sub_1005E0970();
  uint64_t v59 = *(void *)(v16 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
  int v18 = v17(v14, 1, v16);
  int v19 = v17(v15, 1, v16);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v14, v16);
LABEL_6:
    uint64_t v20 = sub_10000566C(&qword_100719228);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v14, v15, v16);
LABEL_7:
  uint64_t v21 = v12[7];
  uint64_t v22 = &v10[v21];
  uint64_t v23 = &v11[v21];
  uint64_t v24 = *(void *)&v10[v21 + 24];
  uint64_t v25 = *(void *)&v11[v21 + 24];
  if (v24)
  {
    if (v25)
    {
      *(void *)uint64_t v22 = *(void *)v23;
      *((void *)v22 + 1) = *((void *)v23 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v22 + 2) = *((void *)v23 + 2);
      *((void *)v22 + 3) = *((void *)v23 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v22 + 4) = *((void *)v23 + 4);
      *((void *)v22 + 5) = *((void *)v23 + 5);
      *((void *)v22 + 6) = *((void *)v23 + 6);
      *((void *)v22 + 7) = *((void *)v23 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v22 + 8) = *((void *)v23 + 8);
      *((void *)v22 + 9) = *((void *)v23 + 9);
      *((void *)v22 + 10) = *((void *)v23 + 10);
      *((void *)v22 + 11) = *((void *)v23 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1003C4094((uint64_t)v22);
      long long v26 = *((_OWORD *)v23 + 1);
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v26;
      long long v27 = *((_OWORD *)v23 + 5);
      long long v29 = *((_OWORD *)v23 + 2);
      long long v28 = *((_OWORD *)v23 + 3);
      *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
      *((_OWORD *)v22 + 5) = v27;
      *((_OWORD *)v22 + 2) = v29;
      *((_OWORD *)v22 + 3) = v28;
    }
  }
  else if (v25)
  {
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = *((void *)v23 + 1);
    *((void *)v22 + 2) = *((void *)v23 + 2);
    *((void *)v22 + 3) = *((void *)v23 + 3);
    *((void *)v22 + 4) = *((void *)v23 + 4);
    *((void *)v22 + 5) = *((void *)v23 + 5);
    *((void *)v22 + 6) = *((void *)v23 + 6);
    *((void *)v22 + 7) = *((void *)v23 + 7);
    *((void *)v22 + 8) = *((void *)v23 + 8);
    *((void *)v22 + 9) = *((void *)v23 + 9);
    *((void *)v22 + 10) = *((void *)v23 + 10);
    *((void *)v22 + 11) = *((void *)v23 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v30 = *((_OWORD *)v23 + 1);
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *((_OWORD *)v22 + 1) = v30;
    long long v31 = *((_OWORD *)v23 + 2);
    long long v32 = *((_OWORD *)v23 + 3);
    long long v33 = *((_OWORD *)v23 + 5);
    *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
    *((_OWORD *)v22 + 5) = v33;
    *((_OWORD *)v22 + 2) = v31;
    *((_OWORD *)v22 + 3) = v32;
  }
  uint64_t v34 = v12[8];
  uint64_t v35 = &v10[v34];
  uint64_t v36 = &v11[v34];
  *(void *)uint64_t v35 = *(void *)v36;
  *((void *)v35 + 1) = *((void *)v36 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = v12[9];
  uint64_t v38 = &v10[v37];
  int v39 = &v11[v37];
  *(void *)uint64_t v38 = *(void *)v39;
  *((void *)v38 + 1) = *((void *)v39 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v10[v12[10]] = *(void *)&v11[v12[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)&v10[v12[11]] = *(_WORD *)&v11[v12[11]];
  v10[v12[12]] = v11[v12[12]];
  v10[v12[13]] = v11[v12[13]];
  v10[v12[14]] = v11[v12[14]];
  uint64_t v40 = v12[15];
  uint64_t v41 = (uint64_t)&v10[v40];
  uint64_t v42 = &v11[v40];
  int v43 = v10[v40 + 16];
  int v44 = v11[v40 + 16];
  if (v43 == 255)
  {
    if (v44 == 255)
    {
      long long v46 = *(_OWORD *)v42;
      *(unsigned char *)(v41 + 16) = v42[16];
      *(_OWORD *)uint64_t v41 = v46;
    }
    else
    {
      char v50 = v44 & 1;
      uint64_t v51 = *(void *)v42;
      uint64_t v52 = *((void *)v42 + 1);
      MailboxPriorityInfo.mailboxPriorityOrder.getter();
      *(void *)uint64_t v41 = v51;
      *(void *)(v41 + 8) = v52;
      *(unsigned char *)(v41 + 16) = v50;
    }
  }
  else if (v44 == 255)
  {
    sub_100581584(v41);
    char v45 = v42[16];
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    *(unsigned char *)(v41 + 16) = v45;
  }
  else
  {
    char v47 = v44 & 1;
    uint64_t v48 = *(void *)v42;
    uint64_t v49 = *((void *)v42 + 1);
    MailboxPriorityInfo.mailboxPriorityOrder.getter();
    *(void *)uint64_t v41 = v48;
    *(void *)(v41 + 8) = v49;
    *(unsigned char *)(v41 + 16) = v47;
    sub_10024EEEC();
  }
  *(void *)&v10[v12[16]] = *(void *)&v11[v12[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = *(int *)(v58 + 28);
  id v54 = &a1[v53];
  Class v55 = &v57[v53];
  *id v54 = *v55;
  v54[1] = v55[1];
  v54[2] = v55[2];
  v54[3] = v55[3];
  v54[4] = v55[4];
  v54[5] = v55[5];
  v54[6] = v55[6];
  v54[7] = v55[7];
  v54[8] = v55[8];
  (*(void (**)(char *, char *, uint64_t))(v59 + 24))(&a1[*(int *)(v58 + 32)], &v57[*(int *)(v58 + 32)], v16);
  return a1;
}

uint64_t sub_100581584(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005815D8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)(a1 + v6) = *(_OWORD *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for IndexableMessageInfo(0);
  uint64_t v10 = v9[6];
  uint64_t v11 = (void *)(v7 + v10);
  uint64_t v12 = (const void *)(v8 + v10);
  uint64_t v13 = sub_1005E0970();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_10000566C(&qword_100719228);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = v9[7];
  uint64_t v17 = (_OWORD *)(v7 + v16);
  int v18 = (_OWORD *)(v8 + v16);
  long long v19 = v18[3];
  void v17[2] = v18[2];
  void v17[3] = v19;
  long long v20 = v18[5];
  void v17[4] = v18[4];
  v17[5] = v20;
  long long v21 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v21;
  *(_OWORD *)(v7 + v9[8]) = *(_OWORD *)(v8 + v9[8]);
  *(_OWORD *)(v7 + v9[9]) = *(_OWORD *)(v8 + v9[9]);
  *(void *)(v7 + v9[10]) = *(void *)(v8 + v9[10]);
  *(_WORD *)(v7 + v9[11]) = *(_WORD *)(v8 + v9[11]);
  *(unsigned char *)(v7 + v9[12]) = *(unsigned char *)(v8 + v9[12]);
  *(unsigned char *)(v7 + v9[13]) = *(unsigned char *)(v8 + v9[13]);
  *(unsigned char *)(v7 + v9[14]) = *(unsigned char *)(v8 + v9[14]);
  uint64_t v22 = v9[15];
  uint64_t v23 = v7 + v22;
  uint64_t v24 = v8 + v22;
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(unsigned char *)(v23 + 16) = *(unsigned char *)(v24 + 16);
  *(void *)(v7 + v9[16]) = *(void *)(v8 + v9[16]);
  uint64_t v25 = a3[7];
  uint64_t v26 = a3[8];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(a1 + v26, a2 + v26, v13);
  return a1;
}

char *sub_100581808(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)*((void *)a1 + 2);
  *((void *)a1 + 2) = *((void *)a2 + 2);

  uint64_t v57 = a1;
  uint64_t v58 = a3;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = &a1[v8];
  uint64_t v56 = a2;
  uint64_t v10 = &a2[v8];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  swift_bridgeObjectRelease();
  *((void *)v9 + 1) = *((void *)v10 + 1);
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for IndexableMessageInfo(0);
  uint64_t v12 = v11[6];
  uint64_t v13 = &v9[v12];
  uint64_t v14 = &v10[v12];
  uint64_t v15 = sub_1005E0970();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  __src = v14;
  long long v19 = v14;
  uint64_t v20 = v15;
  int v21 = v17(v19, 1, v15);
  if (v18)
  {
    if (v21)
    {
      uint64_t v22 = sub_10000566C(&qword_100719228);
      memcpy(v13, __src, *(void *)(*(void *)(v22 - 8) + 64));
      uint64_t v23 = v15;
      uint64_t v24 = v16;
    }
    else
    {
      uint64_t v24 = v16;
      uint64_t v23 = v20;
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, __src, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v20);
    }
  }
  else
  {
    uint64_t v24 = v16;
    uint64_t v23 = v20;
    if (v21)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v20);
      uint64_t v25 = sub_10000566C(&qword_100719228);
      memcpy(v13, __src, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, __src, v20);
    }
  }
  uint64_t v26 = v11[7];
  uint64_t v27 = (uint64_t)&v9[v26];
  uint64_t v28 = &v10[v26];
  if (*(void *)&v9[v26 + 24])
  {
    if (*((void *)v28 + 3))
    {
      uint64_t v29 = *((void *)v28 + 1);
      *(void *)uint64_t v27 = *(void *)v28;
      *(void *)(v27 + 8) = v29;
      swift_bridgeObjectRelease();
      uint64_t v30 = *((void *)v28 + 3);
      *(void *)(v27 + 16) = *((void *)v28 + 2);
      *(void *)(v27 + 24) = v30;
      swift_bridgeObjectRelease();
      *(_OWORD *)(v27 + 32) = *((_OWORD *)v28 + 2);
      uint64_t v31 = *((void *)v28 + 7);
      *(void *)(v27 + 48) = *((void *)v28 + 6);
      *(void *)(v27 + 56) = v31;
      swift_bridgeObjectRelease();
      *(_OWORD *)(v27 + 64) = *((_OWORD *)v28 + 4);
      uint64_t v32 = *((void *)v28 + 11);
      *(void *)(v27 + 80) = *((void *)v28 + 10);
      *(void *)(v27 + 88) = v32;
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    sub_1003C4094(v27);
  }
  long long v33 = *((_OWORD *)v28 + 3);
  *(_OWORD *)(v27 + 32) = *((_OWORD *)v28 + 2);
  *(_OWORD *)(v27 + 48) = v33;
  long long v34 = *((_OWORD *)v28 + 5);
  *(_OWORD *)(v27 + 64) = *((_OWORD *)v28 + 4);
  *(_OWORD *)(v27 + 80) = v34;
  long long v35 = *((_OWORD *)v28 + 1);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v35;
LABEL_13:
  uint64_t v36 = v11[8];
  uint64_t v37 = &v9[v36];
  uint64_t v38 = &v10[v36];
  uint64_t v40 = *(void *)v38;
  uint64_t v39 = *((void *)v38 + 1);
  *(void *)uint64_t v37 = v40;
  *((void *)v37 + 1) = v39;
  swift_bridgeObjectRelease();
  uint64_t v41 = v11[9];
  uint64_t v42 = &v9[v41];
  int v43 = &v10[v41];
  uint64_t v45 = *(void *)v43;
  uint64_t v44 = *((void *)v43 + 1);
  *(void *)uint64_t v42 = v45;
  *((void *)v42 + 1) = v44;
  swift_bridgeObjectRelease();
  *(void *)&v9[v11[10]] = *(void *)&v10[v11[10]];
  swift_bridgeObjectRelease();
  *(_WORD *)&v9[v11[11]] = *(_WORD *)&v10[v11[11]];
  v9[v11[12]] = v10[v11[12]];
  v9[v11[13]] = v10[v11[13]];
  v9[v11[14]] = v10[v11[14]];
  uint64_t v46 = v11[15];
  uint64_t v47 = (uint64_t)&v9[v46];
  uint64_t v48 = &v10[v46];
  if (v9[v46 + 16] != 255)
  {
    int v49 = v48[16];
    if (v49 != 255)
    {
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      *(unsigned char *)(v47 + 16) = v49 & 1;
      sub_10024EEEC();
      goto LABEL_18;
    }
    sub_100581584(v47);
  }
  *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
  *(unsigned char *)(v47 + 16) = v48[16];
LABEL_18:
  *(void *)&v9[v11[16]] = *(void *)&v10[v11[16]];
  swift_bridgeObjectRelease();
  uint64_t v50 = *(int *)(v58 + 28);
  uint64_t v51 = *(int *)(v58 + 32);
  uint64_t v52 = &v57[v50];
  uint64_t v53 = &v56[v50];
  *uint64_t v52 = *v53;
  v52[1] = v53[1];
  v52[2] = v53[2];
  v52[3] = v53[3];
  v52[4] = v53[4];
  void v52[5] = v53[5];
  *((_WORD *)v52 + 3) = *((_WORD *)v53 + 3);
  v52[8] = v53[8];
  (*(void (**)(char *, char *, uint64_t))(v24 + 40))(&v57[v51], &v56[v51], v23);
  return v57;
}

uint64_t sub_100581C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100581C4C);
}

uint64_t sub_100581C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for IndexableMessageInfo(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005E0970();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100581D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100581D8C);
}

uint64_t sub_100581D8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for IndexableMessageInfo(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005E0970();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_100581EB8()
{
  uint64_t result = type metadata accessor for IndexableMessageInfo(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1005E0970();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100581FA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      uint64_t v57 = (void *)a2[2];
      a1[2] = (uint64_t)v57;
      uint64_t v53 = (int *)type metadata accessor for PendingItem.AddMessage(0);
      uint64_t v9 = v53[6];
      uint64_t v10 = (uint64_t *)((char *)a1 + v9);
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 8);
      *uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
      v10[1] = v12;
      uint64_t v13 = (int *)type metadata accessor for IndexableMessageInfo(0);
      uint64_t v14 = v13[6];
      __dst = (char *)v10 + v14;
      uint64_t v56 = &v11[v14];
      uint64_t v15 = sub_1005E0970();
      uint64_t v16 = *(void *)(v15 - 8);
      Class v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      id v17 = v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v51 = v16;
      if (v55(v56, 1, v15))
      {
        uint64_t v18 = sub_10000566C(&qword_100719228);
        memcpy(__dst, v56, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v56, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
      }
      uint64_t v19 = v13[7];
      uint64_t v20 = (char *)v10 + v19;
      int v21 = &v11[v19];
      uint64_t v22 = *((void *)v21 + 3);
      uint64_t v52 = v15;
      if (v22)
      {
        uint64_t v23 = *((void *)v21 + 1);
        *(void *)uint64_t v20 = *(void *)v21;
        *((void *)v20 + 1) = v23;
        *((void *)v20 + 2) = *((void *)v21 + 2);
        *((void *)v20 + 3) = v22;
        *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
        uint64_t v24 = *((void *)v21 + 7);
        *((void *)v20 + 6) = *((void *)v21 + 6);
        *((void *)v20 + 7) = v24;
        *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
        uint64_t v25 = *((void *)v21 + 11);
        *((void *)v20 + 10) = *((void *)v21 + 10);
        *((void *)v20 + 11) = v25;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v26 = *((_OWORD *)v21 + 3);
        *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
        *((_OWORD *)v20 + 3) = v26;
        long long v27 = *((_OWORD *)v21 + 5);
        *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
        *((_OWORD *)v20 + 5) = v27;
        long long v28 = *((_OWORD *)v21 + 1);
        *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
        *((_OWORD *)v20 + 1) = v28;
      }
      uint64_t v29 = v13[8];
      uint64_t v30 = (void *)((char *)v10 + v29);
      uint64_t v31 = &v11[v29];
      uint64_t v32 = *((void *)v31 + 1);
      *uint64_t v30 = *(void *)v31;
      v30[1] = v32;
      uint64_t v33 = v13[9];
      long long v34 = (void *)((char *)v10 + v33);
      long long v35 = &v11[v33];
      uint64_t v36 = *((void *)v35 + 1);
      *long long v34 = *(void *)v35;
      v34[1] = v36;
      *(void *)((char *)v10 + v13[10]) = *(void *)&v11[v13[10]];
      *(_WORD *)((char *)v10 + v13[11]) = *(_WORD *)&v11[v13[11]];
      *((unsigned char *)v10 + v13[12]) = v11[v13[12]];
      *((unsigned char *)v10 + v13[13]) = v11[v13[13]];
      *((unsigned char *)v10 + v13[14]) = v11[v13[14]];
      uint64_t v37 = v13[15];
      uint64_t v38 = (char *)v10 + v37;
      uint64_t v39 = &v11[v37];
      int v40 = v11[v37 + 16];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v40 == 255)
      {
        *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
        v38[16] = v39[16];
      }
      else
      {
        uint64_t v41 = *(void *)v39;
        uint64_t v42 = *((void *)v39 + 1);
        MailboxPriorityInfo.mailboxPriorityOrder.getter();
        *(void *)uint64_t v38 = v41;
        *((void *)v38 + 1) = v42;
        v38[16] = v40 & 1;
      }
      *(void *)((char *)v10 + v13[16]) = *(void *)&v11[v13[16]];
      uint64_t v43 = v53[7];
      uint64_t v44 = (char *)a1 + v43;
      uint64_t v45 = (char *)a2 + v43;
      *(void *)uint64_t v44 = *(void *)v45;
      v44[8] = v45[8];
      uint64_t v46 = v53[8];
      uint64_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      int v49 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
      swift_bridgeObjectRetain();
      v49(v47, v48, v52);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100582374(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    swift_bridgeObjectRelease();

    uint64_t v3 = type metadata accessor for PendingItem.AddMessage(0);
    uint64_t v4 = a1 + *(int *)(v3 + 24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v5 = (int *)type metadata accessor for IndexableMessageInfo(0);
    uint64_t v6 = v4 + v5[6];
    uint64_t v7 = sub_1005E0970();
    uint64_t v10 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v6, v7);
    }
    if (*(void *)(v4 + v5[7] + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(unsigned __int8 *)(v4 + v5[15] + 16) != 255) {
      sub_10024EEEC();
    }
    swift_bridgeObjectRelease();
    uint64_t v8 = a1 + *(int *)(v3 + 32);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v8, v7);
  }
  return result;
}

void *sub_100582540(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    Class v55 = (void *)a2[2];
    a1[2] = v55;
    uint64_t v52 = (int *)type metadata accessor for PendingItem.AddMessage(0);
    uint64_t v7 = v52[6];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
    *uint64_t v8 = *(void *)((char *)a2 + v7);
    v8[1] = v10;
    uint64_t v11 = (int *)type metadata accessor for IndexableMessageInfo(0);
    uint64_t v12 = v11[6];
    __dst = (char *)v8 + v12;
    id v54 = &v9[v12];
    uint64_t v13 = sub_1005E0970();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v15 = v13;
    swift_bridgeObjectRetain();
    id v16 = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v50 = v14;
    if (v53(v54, 1, v15))
    {
      uint64_t v17 = sub_10000566C(&qword_100719228);
      memcpy(__dst, v54, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v54, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v18 = v11[7];
    uint64_t v19 = (char *)v8 + v18;
    uint64_t v20 = &v9[v18];
    uint64_t v21 = *((void *)v20 + 3);
    uint64_t v51 = v15;
    if (v21)
    {
      uint64_t v22 = *((void *)v20 + 1);
      *(void *)uint64_t v19 = *(void *)v20;
      *((void *)v19 + 1) = v22;
      *((void *)v19 + 2) = *((void *)v20 + 2);
      *((void *)v19 + 3) = v21;
      *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
      uint64_t v23 = *((void *)v20 + 7);
      *((void *)v19 + 6) = *((void *)v20 + 6);
      *((void *)v19 + 7) = v23;
      *((_OWORD *)v19 + 4) = *((_OWORD *)v20 + 4);
      uint64_t v24 = *((void *)v20 + 11);
      *((void *)v19 + 10) = *((void *)v20 + 10);
      *((void *)v19 + 11) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v25 = *((_OWORD *)v20 + 3);
      *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
      *((_OWORD *)v19 + 3) = v25;
      long long v26 = *((_OWORD *)v20 + 5);
      *((_OWORD *)v19 + 4) = *((_OWORD *)v20 + 4);
      *((_OWORD *)v19 + 5) = v26;
      long long v27 = *((_OWORD *)v20 + 1);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v27;
    }
    uint64_t v28 = v11[8];
    uint64_t v29 = (void *)((char *)v8 + v28);
    uint64_t v30 = &v9[v28];
    uint64_t v31 = *((void *)v30 + 1);
    *uint64_t v29 = *(void *)v30;
    v29[1] = v31;
    uint64_t v32 = v11[9];
    uint64_t v33 = (void *)((char *)v8 + v32);
    long long v34 = &v9[v32];
    uint64_t v35 = *((void *)v34 + 1);
    void *v33 = *(void *)v34;
    v33[1] = v35;
    *(void *)((char *)v8 + v11[10]) = *(void *)&v9[v11[10]];
    *(_WORD *)((char *)v8 + v11[11]) = *(_WORD *)&v9[v11[11]];
    *((unsigned char *)v8 + v11[12]) = v9[v11[12]];
    *((unsigned char *)v8 + v11[13]) = v9[v11[13]];
    *((unsigned char *)v8 + v11[14]) = v9[v11[14]];
    uint64_t v36 = v11[15];
    uint64_t v37 = (char *)v8 + v36;
    uint64_t v38 = &v9[v36];
    int v39 = v9[v36 + 16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39 == 255)
    {
      *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
      v37[16] = v38[16];
    }
    else
    {
      uint64_t v40 = *(void *)v38;
      uint64_t v41 = *((void *)v38 + 1);
      MailboxPriorityInfo.mailboxPriorityOrder.getter();
      *(void *)uint64_t v37 = v40;
      *((void *)v37 + 1) = v41;
      v37[16] = v39 & 1;
    }
    *(void *)((char *)v8 + v11[16]) = *(void *)&v9[v11[16]];
    uint64_t v42 = v52[7];
    uint64_t v43 = (char *)a1 + v42;
    uint64_t v44 = (char *)a2 + v42;
    *(void *)uint64_t v43 = *(void *)v44;
    v43[8] = v44[8];
    uint64_t v45 = v52[8];
    uint64_t v46 = (char *)a1 + v45;
    uint64_t v47 = (char *)a2 + v45;
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
    swift_bridgeObjectRetain();
    v48(v46, v47, v51);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1005828D4(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1005835E8((uint64_t)a1, type metadata accessor for PendingItem.Info);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v50 = (void *)a2[2];
      a1[2] = v50;
      uint64_t v47 = (int *)type metadata accessor for PendingItem.AddMessage(0);
      uint64_t v6 = v47[6];
      uint64_t v7 = (void *)((char *)a1 + v6);
      uint64_t v8 = (char *)a2 + v6;
      *uint64_t v7 = *(void *)((char *)a2 + v6);
      v7[1] = *(void *)((char *)a2 + v6 + 8);
      uint64_t v9 = (int *)type metadata accessor for IndexableMessageInfo(0);
      uint64_t v10 = v9[6];
      __dst = (char *)v7 + v10;
      int v49 = &v8[v10];
      uint64_t v11 = sub_1005E0970();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      uint64_t v13 = v11;
      swift_bridgeObjectRetain();
      id v14 = v50;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v45 = v12;
      if (v48(v49, 1, v13))
      {
        uint64_t v15 = sub_10000566C(&qword_100719228);
        memcpy(__dst, v49, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v49, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v13);
      }
      uint64_t v16 = v9[7];
      uint64_t v17 = (void *)((char *)v7 + v16);
      uint64_t v18 = &v8[v16];
      uint64_t v46 = v13;
      if (*((void *)v18 + 3))
      {
        *uint64_t v17 = *(void *)v18;
        v17[1] = *((void *)v18 + 1);
        void v17[2] = *((void *)v18 + 2);
        void v17[3] = *((void *)v18 + 3);
        void v17[4] = *((void *)v18 + 4);
        v17[5] = *((void *)v18 + 5);
        v17[6] = *((void *)v18 + 6);
        v17[7] = *((void *)v18 + 7);
        v17[8] = *((void *)v18 + 8);
        v17[9] = *((void *)v18 + 9);
        v17[10] = *((void *)v18 + 10);
        v17[11] = *((void *)v18 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v19 = *((_OWORD *)v18 + 1);
        *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
        *((_OWORD *)v17 + 1) = v19;
        long long v20 = *((_OWORD *)v18 + 2);
        long long v21 = *((_OWORD *)v18 + 3);
        long long v22 = *((_OWORD *)v18 + 5);
        *((_OWORD *)v17 + 4) = *((_OWORD *)v18 + 4);
        *((_OWORD *)v17 + 5) = v22;
        *((_OWORD *)v17 + 2) = v20;
        *((_OWORD *)v17 + 3) = v21;
      }
      uint64_t v23 = v9[8];
      uint64_t v24 = (void *)((char *)v7 + v23);
      long long v25 = &v8[v23];
      *uint64_t v24 = *(void *)v25;
      v24[1] = *((void *)v25 + 1);
      uint64_t v26 = v9[9];
      long long v27 = (void *)((char *)v7 + v26);
      uint64_t v28 = &v8[v26];
      *long long v27 = *(void *)v28;
      v27[1] = *((void *)v28 + 1);
      *(void *)((char *)v7 + v9[10]) = *(void *)&v8[v9[10]];
      *(_WORD *)((char *)v7 + v9[11]) = *(_WORD *)&v8[v9[11]];
      *((unsigned char *)v7 + v9[12]) = v8[v9[12]];
      *((unsigned char *)v7 + v9[13]) = v8[v9[13]];
      *((unsigned char *)v7 + v9[14]) = v8[v9[14]];
      uint64_t v29 = v9[15];
      uint64_t v30 = (char *)v7 + v29;
      uint64_t v31 = &v8[v29];
      int v32 = v8[v29 + 16];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v32 == 255)
      {
        long long v33 = *(_OWORD *)v31;
        v30[16] = v31[16];
        *(_OWORD *)uint64_t v30 = v33;
      }
      else
      {
        uint64_t v34 = *(void *)v31;
        uint64_t v35 = *((void *)v31 + 1);
        MailboxPriorityInfo.mailboxPriorityOrder.getter();
        *(void *)uint64_t v30 = v34;
        *((void *)v30 + 1) = v35;
        v30[16] = v32 & 1;
      }
      *(void *)((char *)v7 + v9[16]) = *(void *)&v8[v9[16]];
      uint64_t v36 = v47[7];
      uint64_t v37 = (char *)a1 + v36;
      uint64_t v38 = (char *)a2 + v36;
      uint64_t v39 = *(void *)v38;
      v37[8] = v38[8];
      *(void *)uint64_t v37 = v39;
      uint64_t v40 = v47[8];
      uint64_t v41 = (char *)a1 + v40;
      uint64_t v42 = (char *)a2 + v40;
      uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
      swift_bridgeObjectRetain();
      v43(v41, v42, v46);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_100582CDC(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v29 = (int *)type metadata accessor for PendingItem.AddMessage(0);
    uint64_t v6 = v29[6];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    *(_OWORD *)((char *)a1 + v6) = *(_OWORD *)((char *)a2 + v6);
    uint64_t v9 = (int *)type metadata accessor for IndexableMessageInfo(0);
    uint64_t v10 = v9[6];
    uint64_t v11 = &v7[v10];
    uint64_t v12 = &v8[v10];
    uint64_t v13 = sub_1005E0970();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_10000566C(&qword_100719228);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v16 = v9[7];
    uint64_t v17 = &v7[v16];
    uint64_t v18 = &v8[v16];
    long long v19 = *((_OWORD *)v18 + 3);
    *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
    *((_OWORD *)v17 + 3) = v19;
    long long v20 = *((_OWORD *)v18 + 5);
    *((_OWORD *)v17 + 4) = *((_OWORD *)v18 + 4);
    *((_OWORD *)v17 + 5) = v20;
    long long v21 = *((_OWORD *)v18 + 1);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v21;
    *(_OWORD *)&v7[v9[8]] = *(_OWORD *)&v8[v9[8]];
    *(_OWORD *)&v7[v9[9]] = *(_OWORD *)&v8[v9[9]];
    *(void *)&v7[v9[10]] = *(void *)&v8[v9[10]];
    *(_WORD *)&v7[v9[11]] = *(_WORD *)&v8[v9[11]];
    v7[v9[12]] = v8[v9[12]];
    v7[v9[13]] = v8[v9[13]];
    v7[v9[14]] = v8[v9[14]];
    uint64_t v22 = v9[15];
    uint64_t v23 = &v7[v22];
    uint64_t v24 = &v8[v22];
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    v23[16] = v24[16];
    *(void *)&v7[v9[16]] = *(void *)&v8[v9[16]];
    uint64_t v25 = v29[7];
    uint64_t v26 = (char *)a1 + v25;
    long long v27 = (char *)a2 + v25;
    *(void *)uint64_t v26 = *(void *)v27;
    v26[8] = v27[8];
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))((char *)a1 + v29[8], (char *)a2 + v29[8], v13);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100582F6C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1005835E8((uint64_t)a1, type metadata accessor for PendingItem.Info);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      uint64_t v29 = (int *)type metadata accessor for PendingItem.AddMessage(0);
      uint64_t v6 = v29[6];
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      *(_OWORD *)((char *)a1 + v6) = *(_OWORD *)((char *)a2 + v6);
      uint64_t v9 = (int *)type metadata accessor for IndexableMessageInfo(0);
      uint64_t v10 = v9[6];
      uint64_t v11 = &v7[v10];
      uint64_t v12 = &v8[v10];
      uint64_t v13 = sub_1005E0970();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        uint64_t v15 = sub_10000566C(&qword_100719228);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      uint64_t v16 = v9[7];
      uint64_t v17 = &v7[v16];
      uint64_t v18 = &v8[v16];
      long long v19 = *((_OWORD *)v18 + 3);
      *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
      *((_OWORD *)v17 + 3) = v19;
      long long v20 = *((_OWORD *)v18 + 5);
      *((_OWORD *)v17 + 4) = *((_OWORD *)v18 + 4);
      *((_OWORD *)v17 + 5) = v20;
      long long v21 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v21;
      *(_OWORD *)&v7[v9[8]] = *(_OWORD *)&v8[v9[8]];
      *(_OWORD *)&v7[v9[9]] = *(_OWORD *)&v8[v9[9]];
      *(void *)&v7[v9[10]] = *(void *)&v8[v9[10]];
      *(_WORD *)&v7[v9[11]] = *(_WORD *)&v8[v9[11]];
      v7[v9[12]] = v8[v9[12]];
      v7[v9[13]] = v8[v9[13]];
      v7[v9[14]] = v8[v9[14]];
      uint64_t v22 = v9[15];
      uint64_t v23 = &v7[v22];
      uint64_t v24 = &v8[v22];
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      v23[16] = v24[16];
      *(void *)&v7[v9[16]] = *(void *)&v8[v9[16]];
      uint64_t v25 = v29[7];
      uint64_t v26 = (char *)a1 + v25;
      long long v27 = (char *)a2 + v25;
      *(void *)uint64_t v26 = *(void *)v27;
      v26[8] = v27[8];
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))((char *)a1 + v29[8], (char *)a2 + v29[8], v13);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100583220()
{
  uint64_t result = type metadata accessor for PendingItem.AddMessage(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1005832B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PendingItem.AddMessage(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PendingItem.Info(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100583520(v1, (uint64_t)v7);
  if (!swift_getEnumCaseMultiPayload())
  {
    sub_100583584((uint64_t)v7, (uint64_t)v4);
    uint64_t v9 = *(int *)(v2 + 24);
    uint64_t v10 = &v4[v9 + *(int *)(type metadata accessor for IndexableMessageInfo(0) + 60)];
    if (v10[16] == 255)
    {
      Swift::Int v12 = 0;
    }
    else
    {
      unint64_t v11 = *((void *)v10 + 1);
      if ((v11 & 0x1000000000000000) != 0)
      {
        Swift::Int v12 = sub_1005E1E80();
      }
      else
      {
        if ((v11 & 0x2000000000000000) != 0)
        {
          Swift::Int v12 = HIBYTE(v11) & 0xF;
          goto LABEL_11;
        }
        Swift::Int v12 = *(void *)v10 & 0xFFFFFFFFFFFFLL;
      }
      if (v12 >= 1000001)
      {
        uint64_t v8 = 821709;
LABEL_14:
        sub_1005835E8((uint64_t)v4, type metadata accessor for PendingItem.AddMessage);
        return v8;
      }
    }
LABEL_11:
    uint64_t v13 = 809;
    if (v12 > 809) {
      uint64_t v13 = v12;
    }
    uint64_t v8 = v12 + v13 + 1709;
    goto LABEL_14;
  }
  return 29;
}

uint64_t sub_100583450(void *a1, void *a2, uint64_t a3)
{
  if (*a1 == *a2) {
    return sub_100583648((uint64_t)a1 + *(int *)(a3 + 20), (uint64_t)a2 + *(int *)(a3 + 20));
  }
  else {
    return 0;
  }
}

void *sub_100583478()
{
  return &protocol witness table for Int64;
}

unint64_t sub_100583488()
{
  unint64_t result = qword_10071A330;
  if (!qword_10071A330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A330);
  }
  return result;
}

uint64_t sub_1005834DC()
{
  return sub_1005E3230();
}

uint64_t sub_100583520(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PendingItem.Info(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100583584(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PendingItem.AddMessage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005835E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100583648(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PendingItem.AddMessage(0);
  __chkstk_darwin();
  uint64_t v6 = (uint64_t *)((char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for PendingItem.Info(0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (uint64_t *)((char *)&v58 - v9);
  sub_10000566C(&qword_10071A338);
  uint64_t v11 = __chkstk_darwin();
  uint64_t v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = &v13[*(int *)(v11 + 56)];
  sub_100583520(a1, (uint64_t)v13);
  sub_100583520(a2, (uint64_t)v14);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_100583520((uint64_t)v13, (uint64_t)v10);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1005835E8((uint64_t)v10, type metadata accessor for PendingItem.AddMessage);
      goto LABEL_35;
    }
    sub_100583584((uint64_t)v14, (uint64_t)v6);
    BOOL v31 = *v10 == *v6 && v10[1] == v6[1];
    if (!v31 && (sub_1005E3290() & 1) == 0) {
      goto LABEL_78;
    }
    sub_100553F18();
    if ((sub_1005E2840() & 1) == 0
      || (static IndexableMessageInfo.__derived_struct_equals(_:_:)((void *)((char *)v10 + *(int *)(v4 + 24)), (void *)((char *)v6 + *(int *)(v4 + 24))) & 1) == 0)
    {
      goto LABEL_78;
    }
    uint64_t v32 = *(int *)(v4 + 28);
    long long v33 = (char *)v10 + v32;
    uint64_t v34 = *((unsigned __int8 *)v10 + v32);
    int v35 = *((unsigned __int8 *)v10 + v32 + 1);
    int v36 = *((unsigned __int8 *)v10 + v32 + 2);
    int v37 = *((unsigned __int8 *)v10 + v32 + 3);
    int v38 = *((unsigned __int8 *)v10 + v32 + 4);
    int v39 = *((unsigned __int8 *)v10 + v32 + 5);
    uint64_t v40 = *((unsigned __int8 *)v10 + v32 + 6);
    int v41 = *((unsigned __int8 *)v10 + v32 + 8);
    uint64_t v42 = (unsigned __int8 *)v6 + v32;
    uint64_t v43 = v35 ? 256 : 0;
    uint64_t v44 = v43 | v34;
    uint64_t v45 = v36 ? 0x10000 : 0;
    uint64_t v46 = v37 ? 0x1000000 : 0;
    uint64_t v47 = v44 | v45 | v46;
    uint64_t v48 = v38 ? &_mh_execute_header : 0;
    uint64_t v49 = v39 ? 0x10000000000 : 0;
    unint64_t v50 = v47 | (unint64_t)v48 | v49 | (v40 << 48) | ((unint64_t)v33[7] << 56);
    uint64_t v51 = v42[1] ? 256 : 0;
    uint64_t v52 = v51 | *v42;
    uint64_t v53 = v42[2] ? 0x10000 : 0;
    uint64_t v54 = v42[3] ? 0x1000000 : 0;
    uint64_t v55 = v52 | v53 | v54;
    uint64_t v56 = v42[4] ? &_mh_execute_header : 0;
    uint64_t v57 = v42[5] ? 0x10000000000 : 0;
    if ((static Flags.__derived_struct_equals(_:_:)(v50, v41, v55 | (unint64_t)v56 | v57 | ((unint64_t)v42[6] << 48) | ((unint64_t)v42[7] << 56), v42[8]) & 1) == 0|| (sub_1005E0940() & 1) == 0)
    {
LABEL_78:
      sub_1005835E8((uint64_t)v6, type metadata accessor for PendingItem.AddMessage);
      sub_1005835E8((uint64_t)v10, type metadata accessor for PendingItem.AddMessage);
      sub_1005835E8((uint64_t)v13, type metadata accessor for PendingItem.Info);
      goto LABEL_36;
    }
    sub_1005835E8((uint64_t)v6, type metadata accessor for PendingItem.AddMessage);
    sub_1005835E8((uint64_t)v10, type metadata accessor for PendingItem.AddMessage);
LABEL_34:
    sub_1005835E8((uint64_t)v13, type metadata accessor for PendingItem.Info);
    char v29 = 1;
    return v29 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload() != 2) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  sub_100583520((uint64_t)v13, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
LABEL_35:
    sub_100583DBC((uint64_t)v13);
LABEL_36:
    char v29 = 0;
    return v29 & 1;
  }
  if (v8[1]) {
    uint64_t v16 = 256;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v17 = 0x10000;
  if (v8[2]) {
    uint64_t v18 = 0x10000;
  }
  else {
    uint64_t v18 = 0;
  }
  uint64_t v19 = 0x1000000;
  if (v8[3]) {
    uint64_t v20 = 0x1000000;
  }
  else {
    uint64_t v20 = 0;
  }
  long long v21 = &_mh_execute_header;
  if (v8[4]) {
    uint64_t v22 = &_mh_execute_header;
  }
  else {
    uint64_t v22 = 0;
  }
  uint64_t v23 = 0x10000000000;
  if (v8[5]) {
    uint64_t v24 = 0x10000000000;
  }
  else {
    uint64_t v24 = 0;
  }
  unint64_t v25 = v24 | ((unint64_t)v8[6] << 48) | (unint64_t)v22 | v20 | v18 | v16 | *v8 | ((unint64_t)v8[7] << 56);
  if (v14[1]) {
    uint64_t v26 = 256;
  }
  else {
    uint64_t v26 = 0;
  }
  uint64_t v27 = v26 | *v14;
  if (!v14[2]) {
    uint64_t v17 = 0;
  }
  if (!v14[3]) {
    uint64_t v19 = 0;
  }
  uint64_t v28 = v27 | v17 | v19;
  if (!v14[4]) {
    long long v21 = 0;
  }
  if (!v14[5]) {
    uint64_t v23 = 0;
  }
  char v29 = static Flags.__derived_struct_equals(_:_:)(v25, v8[8], v28 | (unint64_t)v21 | v23 | ((unint64_t)v14[6] << 48) | ((unint64_t)v14[7] << 56), v14[8]);
  sub_1005835E8((uint64_t)v13, type metadata accessor for PendingItem.Info);
  return v29 & 1;
}

uint64_t sub_100583B68(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1005E3290() & 1) == 0) {
    return 0;
  }
  sub_100553F18();
  if ((sub_1005E2840() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = type metadata accessor for PendingItem.AddMessage(0);
  if ((static IndexableMessageInfo.__derived_struct_equals(_:_:)((void *)((char *)a1 + *(int *)(v5 + 24)), (void *)((char *)a2 + *(int *)(v5 + 24))) & 1) == 0)return 0; {
  uint64_t v6 = *(int *)(v5 + 28);
  }
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = *((unsigned __int8 *)a1 + v6);
  int v9 = *((unsigned __int8 *)a1 + v6 + 1);
  int v10 = *((unsigned __int8 *)a1 + v6 + 2);
  int v11 = *((unsigned __int8 *)a1 + v6 + 3);
  int v12 = *((unsigned __int8 *)a1 + v6 + 4);
  int v13 = *((unsigned __int8 *)a1 + v6 + 5);
  uint64_t v14 = *((unsigned __int8 *)a1 + v6 + 6);
  int v15 = *((unsigned __int8 *)a1 + v6 + 8);
  uint64_t v16 = (unsigned __int8 *)a2 + v6;
  uint64_t v17 = v9 ? 256 : 0;
  uint64_t v18 = v17 | v8;
  uint64_t v19 = v10 ? 0x10000 : 0;
  uint64_t v20 = v11 ? 0x1000000 : 0;
  uint64_t v21 = v18 | v19 | v20;
  uint64_t v22 = v12 ? &_mh_execute_header : 0;
  uint64_t v23 = v13 ? 0x10000000000 : 0;
  unint64_t v24 = v21 | (unint64_t)v22 | v23 | (v14 << 48) | ((unint64_t)v7[7] << 56);
  uint64_t v25 = v16[1] ? 256 : 0;
  uint64_t v26 = v25 | *v16;
  uint64_t v27 = v16[2] ? 0x10000 : 0;
  uint64_t v28 = v16[3] ? 0x1000000 : 0;
  uint64_t v29 = v26 | v27 | v28;
  uint64_t v30 = v16[4] ? &_mh_execute_header : 0;
  uint64_t v31 = v16[5] ? 0x10000000000 : 0;
  if ((static Flags.__derived_struct_equals(_:_:)(v24, v15, v29 | (unint64_t)v30 | v31 | ((unint64_t)v16[6] << 48) | ((unint64_t)v16[7] << 56), v16[8]) & 1) == 0)return 0; {
  return sub_1005E0940();
  }
}

BOOL sub_100583D34(void *a1, void *a2)
{
  if (*a1 == *a2
    && a1[1] == a2[1]
    && (uint64_t v4 = type metadata accessor for PendingItem(0),
        (sub_100583648((uint64_t)a1 + *(int *)(v4 + 24), (uint64_t)a2 + *(int *)(v4 + 24)) & 1) != 0))
  {
    return *(void *)((char *)a1 + *(int *)(v4 + 28)) == *(void *)((char *)a2 + *(int *)(v4 + 28));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_100583DBC(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_10071A338);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_100583E1C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (uint64_t *)((char *)a1 + v5);
    uint64_t v7 = (uint64_t *)((char *)a2 + v5);
    uint64_t v8 = type metadata accessor for PendingItem.Info(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = v7[1];
      *uint64_t v6 = *v7;
      v6[1] = v10;
      uint64_t v58 = (void *)v7[2];
      _OWORD v6[2] = v58;
      uint64_t v54 = (int *)type metadata accessor for PendingItem.AddMessage(0);
      uint64_t v11 = v54[6];
      uint64_t v55 = v6;
      int v12 = (void *)((char *)v6 + v11);
      uint64_t v59 = v7;
      int v13 = (char *)v7 + v11;
      uint64_t v14 = *(void *)((char *)v7 + v11 + 8);
      *int v12 = *(void *)((char *)v7 + v11);
      v12[1] = v14;
      int v15 = (int *)type metadata accessor for IndexableMessageInfo(0);
      uint64_t v16 = v15[6];
      __dst = (char *)v12 + v16;
      uint64_t v17 = &v13[v16];
      uint64_t v18 = sub_1005E0970();
      uint64_t v60 = *(void *)(v18 - 8);
      uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
      swift_bridgeObjectRetain();
      id v19 = v58;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v53 = v18;
      if (v57(v17, 1, v18))
      {
        uint64_t v20 = sub_10000566C(&qword_100719228);
        memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(__dst, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(__dst, 0, 1, v18);
      }
      uint64_t v21 = v15[7];
      uint64_t v22 = (char *)v12 + v21;
      uint64_t v23 = &v13[v21];
      uint64_t v24 = *((void *)v23 + 3);
      if (v24)
      {
        uint64_t v25 = *((void *)v23 + 1);
        *(void *)uint64_t v22 = *(void *)v23;
        *((void *)v22 + 1) = v25;
        *((void *)v22 + 2) = *((void *)v23 + 2);
        *((void *)v22 + 3) = v24;
        *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
        uint64_t v26 = *((void *)v23 + 7);
        *((void *)v22 + 6) = *((void *)v23 + 6);
        *((void *)v22 + 7) = v26;
        *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
        uint64_t v27 = *((void *)v23 + 11);
        *((void *)v22 + 10) = *((void *)v23 + 10);
        *((void *)v22 + 11) = v27;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v28 = *((_OWORD *)v23 + 3);
        *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
        *((_OWORD *)v22 + 3) = v28;
        long long v29 = *((_OWORD *)v23 + 5);
        *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
        *((_OWORD *)v22 + 5) = v29;
        long long v30 = *((_OWORD *)v23 + 1);
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
        *((_OWORD *)v22 + 1) = v30;
      }
      uint64_t v31 = v15[8];
      uint64_t v32 = (void *)((char *)v12 + v31);
      long long v33 = &v13[v31];
      uint64_t v34 = *((void *)v33 + 1);
      *uint64_t v32 = *(void *)v33;
      v32[1] = v34;
      uint64_t v35 = v15[9];
      int v36 = (void *)((char *)v12 + v35);
      int v37 = &v13[v35];
      uint64_t v38 = *((void *)v37 + 1);
      *int v36 = *(void *)v37;
      v36[1] = v38;
      *(void *)((char *)v12 + v15[10]) = *(void *)&v13[v15[10]];
      *(_WORD *)((char *)v12 + v15[11]) = *(_WORD *)&v13[v15[11]];
      *((unsigned char *)v12 + v15[12]) = v13[v15[12]];
      *((unsigned char *)v12 + v15[13]) = v13[v15[13]];
      *((unsigned char *)v12 + v15[14]) = v13[v15[14]];
      uint64_t v39 = v15[15];
      uint64_t v40 = (char *)v12 + v39;
      int v41 = &v13[v39];
      int v42 = v13[v39 + 16];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v42 == 255)
      {
        *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
        v40[16] = v41[16];
      }
      else
      {
        uint64_t v43 = *(void *)v41;
        uint64_t v44 = *((void *)v41 + 1);
        MailboxPriorityInfo.mailboxPriorityOrder.getter();
        *(void *)uint64_t v40 = v43;
        *((void *)v40 + 1) = v44;
        v40[16] = v42 & 1;
      }
      *(void *)((char *)v12 + v15[16]) = *(void *)&v13[v15[16]];
      uint64_t v45 = v54[7];
      uint64_t v46 = (char *)v55 + v45;
      uint64_t v47 = (char *)v59 + v45;
      *(void *)uint64_t v46 = *(void *)v47;
      v46[8] = v47[8];
      uint64_t v48 = v54[8];
      uint64_t v49 = (char *)v55 + v48;
      unint64_t v50 = (char *)v59 + v48;
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
      swift_bridgeObjectRetain();
      v51(v49, v50, v53);
      swift_storeEnumTagMultiPayload();
    }
  }
  return v3;
}

uint64_t sub_10058421C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  type metadata accessor for PendingItem.Info(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    swift_bridgeObjectRelease();

    uint64_t v4 = type metadata accessor for PendingItem.AddMessage(0);
    uint64_t v5 = v2 + *(int *)(v4 + 24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = (int *)type metadata accessor for IndexableMessageInfo(0);
    uint64_t v7 = v5 + v6[6];
    uint64_t v8 = sub_1005E0970();
    uint64_t v11 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v7, v8);
    }
    if (*(void *)(v5 + v6[7] + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(unsigned __int8 *)(v5 + v6[15] + 16) != 255) {
      sub_10024EEEC();
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = v2 + *(int *)(v4 + 32);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v9, v8);
  }
  return result;
}

void *sub_1005843FC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for PendingItem.Info(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v54 = v3;
    uint64_t v8 = v6[1];
    *uint64_t v5 = *v6;
    v5[1] = v8;
    uint64_t v56 = (void *)v6[2];
    long long v5[2] = v56;
    uint64_t v52 = (int *)type metadata accessor for PendingItem.AddMessage(0);
    uint64_t v9 = v52[6];
    uint64_t v53 = v5;
    uint64_t v10 = (void *)((char *)v5 + v9);
    uint64_t v11 = (char *)v6 + v9;
    uint64_t v12 = *(void *)((char *)v6 + v9 + 8);
    *uint64_t v10 = *(void *)((char *)v6 + v9);
    v10[1] = v12;
    int v13 = (int *)type metadata accessor for IndexableMessageInfo(0);
    uint64_t v14 = v13[6];
    __dst = (char *)v10 + v14;
    uint64_t v55 = &v11[v14];
    uint64_t v15 = sub_1005E0970();
    uint64_t v58 = *(void *)(v15 - 8);
    uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
    swift_bridgeObjectRetain();
    id v17 = v56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v51 = v15;
    if (v16(v55, 1, v15))
    {
      uint64_t v18 = sub_10000566C(&qword_100719228);
      memcpy(__dst, v55, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(__dst, v55, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v19 = v13[7];
    uint64_t v20 = (char *)v10 + v19;
    uint64_t v21 = &v11[v19];
    uint64_t v22 = *((void *)v21 + 3);
    if (v22)
    {
      uint64_t v23 = *((void *)v21 + 1);
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = v23;
      *((void *)v20 + 2) = *((void *)v21 + 2);
      *((void *)v20 + 3) = v22;
      *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
      uint64_t v24 = *((void *)v21 + 7);
      *((void *)v20 + 6) = *((void *)v21 + 6);
      *((void *)v20 + 7) = v24;
      *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
      uint64_t v25 = *((void *)v21 + 11);
      *((void *)v20 + 10) = *((void *)v21 + 10);
      *((void *)v20 + 11) = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v26 = *((_OWORD *)v21 + 3);
      *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
      *((_OWORD *)v20 + 3) = v26;
      long long v27 = *((_OWORD *)v21 + 5);
      *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
      *((_OWORD *)v20 + 5) = v27;
      long long v28 = *((_OWORD *)v21 + 1);
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v28;
    }
    uint64_t v29 = v13[8];
    long long v30 = (void *)((char *)v10 + v29);
    uint64_t v31 = &v11[v29];
    uint64_t v32 = *((void *)v31 + 1);
    *long long v30 = *(void *)v31;
    v30[1] = v32;
    uint64_t v33 = v13[9];
    uint64_t v34 = (void *)((char *)v10 + v33);
    uint64_t v35 = &v11[v33];
    uint64_t v36 = *((void *)v35 + 1);
    *uint64_t v34 = *(void *)v35;
    v34[1] = v36;
    *(void *)((char *)v10 + v13[10]) = *(void *)&v11[v13[10]];
    *(_WORD *)((char *)v10 + v13[11]) = *(_WORD *)&v11[v13[11]];
    *((unsigned char *)v10 + v13[12]) = v11[v13[12]];
    *((unsigned char *)v10 + v13[13]) = v11[v13[13]];
    *((unsigned char *)v10 + v13[14]) = v11[v13[14]];
    uint64_t v37 = v13[15];
    uint64_t v38 = (char *)v10 + v37;
    uint64_t v39 = &v11[v37];
    int v40 = v11[v37 + 16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v40 == 255)
    {
      *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
      v38[16] = v39[16];
    }
    else
    {
      uint64_t v41 = *(void *)v39;
      uint64_t v42 = *((void *)v39 + 1);
      MailboxPriorityInfo.mailboxPriorityOrder.getter();
      *(void *)uint64_t v38 = v41;
      *((void *)v38 + 1) = v42;
      v38[16] = v40 & 1;
    }
    uint64_t v3 = v54;
    *(void *)((char *)v10 + v13[16]) = *(void *)&v11[v13[16]];
    uint64_t v43 = v52[7];
    uint64_t v44 = (char *)v53 + v43;
    uint64_t v45 = (char *)v6 + v43;
    *(void *)uint64_t v44 = *(void *)v45;
    v44[8] = v45[8];
    uint64_t v46 = v52[8];
    uint64_t v47 = (char *)v53 + v46;
    uint64_t v48 = (char *)v6 + v46;
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
    swift_bridgeObjectRetain();
    v49(v47, v48, v51);
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

void *sub_1005847AC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = (void *)((char *)a1 + v4);
    uint64_t v6 = (void *)((char *)a2 + v4);
    sub_1005835E8((uint64_t)a1 + v4, type metadata accessor for PendingItem.Info);
    uint64_t v7 = type metadata accessor for PendingItem.Info(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      *uint64_t v5 = *v6;
      v5[1] = v6[1];
      uint64_t v53 = (void *)v6[2];
      long long v5[2] = v53;
      uint64_t v49 = (int *)type metadata accessor for PendingItem.AddMessage(0);
      uint64_t v8 = v49[6];
      uint64_t v9 = (void *)((char *)v5 + v8);
      unint64_t v50 = v6;
      uint64_t v10 = (char *)v6 + v8;
      *uint64_t v9 = *(void *)((char *)v6 + v8);
      v9[1] = *(void *)((char *)v6 + v8 + 8);
      uint64_t v11 = (int *)type metadata accessor for IndexableMessageInfo(0);
      uint64_t v12 = v11[6];
      __dst = (char *)v9 + v12;
      uint64_t v52 = &v10[v12];
      uint64_t v13 = sub_1005E0970();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      uint64_t v15 = v13;
      swift_bridgeObjectRetain();
      id v16 = v53;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v47 = v14;
      if (v51(v52, 1, v15))
      {
        uint64_t v17 = sub_10000566C(&qword_100719228);
        memcpy(__dst, v52, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v52, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v15);
      }
      uint64_t v18 = v11[7];
      uint64_t v19 = (void *)((char *)v9 + v18);
      uint64_t v20 = &v10[v18];
      uint64_t v48 = v15;
      if (*((void *)v20 + 3))
      {
        *uint64_t v19 = *(void *)v20;
        v19[1] = *((void *)v20 + 1);
        v19[2] = *((void *)v20 + 2);
        v19[3] = *((void *)v20 + 3);
        id v19[4] = *((void *)v20 + 4);
        v19[5] = *((void *)v20 + 5);
        v19[6] = *((void *)v20 + 6);
        v19[7] = *((void *)v20 + 7);
        v19[8] = *((void *)v20 + 8);
        v19[9] = *((void *)v20 + 9);
        v19[10] = *((void *)v20 + 10);
        v19[11] = *((void *)v20 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v21 = *((_OWORD *)v20 + 1);
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        *((_OWORD *)v19 + 1) = v21;
        long long v22 = *((_OWORD *)v20 + 2);
        long long v23 = *((_OWORD *)v20 + 3);
        long long v24 = *((_OWORD *)v20 + 5);
        *((_OWORD *)v19 + 4) = *((_OWORD *)v20 + 4);
        *((_OWORD *)v19 + 5) = v24;
        *((_OWORD *)v19 + 2) = v22;
        *((_OWORD *)v19 + 3) = v23;
      }
      uint64_t v25 = v11[8];
      long long v26 = (void *)((char *)v9 + v25);
      long long v27 = &v10[v25];
      *long long v26 = *(void *)v27;
      v26[1] = *((void *)v27 + 1);
      uint64_t v28 = v11[9];
      uint64_t v29 = (void *)((char *)v9 + v28);
      long long v30 = &v10[v28];
      *uint64_t v29 = *(void *)v30;
      v29[1] = *((void *)v30 + 1);
      *(void *)((char *)v9 + v11[10]) = *(void *)&v10[v11[10]];
      *(_WORD *)((char *)v9 + v11[11]) = *(_WORD *)&v10[v11[11]];
      *((unsigned char *)v9 + v11[12]) = v10[v11[12]];
      *((unsigned char *)v9 + v11[13]) = v10[v11[13]];
      *((unsigned char *)v9 + v11[14]) = v10[v11[14]];
      uint64_t v31 = v11[15];
      uint64_t v32 = (char *)v9 + v31;
      uint64_t v33 = &v10[v31];
      int v34 = v10[v31 + 16];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v34 == 255)
      {
        long long v35 = *(_OWORD *)v33;
        unsigned char v32[16] = v33[16];
        *(_OWORD *)uint64_t v32 = v35;
      }
      else
      {
        uint64_t v36 = *(void *)v33;
        uint64_t v37 = *((void *)v33 + 1);
        MailboxPriorityInfo.mailboxPriorityOrder.getter();
        *(void *)uint64_t v32 = v36;
        *((void *)v32 + 1) = v37;
        unsigned char v32[16] = v34 & 1;
      }
      *(void *)((char *)v9 + v11[16]) = *(void *)&v10[v11[16]];
      uint64_t v38 = v49[7];
      uint64_t v39 = (char *)v5 + v38;
      int v40 = (char *)v50 + v38;
      uint64_t v41 = *(void *)v40;
      v39[8] = v40[8];
      *(void *)uint64_t v39 = v41;
      uint64_t v42 = v49[8];
      uint64_t v43 = (char *)v5 + v42;
      uint64_t v44 = (char *)v50 + v42;
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
      swift_bridgeObjectRetain();
      v45(v43, v44, v48);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_100584BD4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for PendingItem.Info(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v5 = *(_OWORD *)v6;
    long long v5[2] = v6[2];
    long long v30 = (int *)type metadata accessor for PendingItem.AddMessage(0);
    uint64_t v8 = v30[6];
    uint64_t v9 = (char *)v5 + v8;
    uint64_t v10 = (char *)v6 + v8;
    *(_OWORD *)((char *)v5 + v8) = *(_OWORD *)((char *)v6 + v8);
    uint64_t v11 = (int *)type metadata accessor for IndexableMessageInfo(0);
    uint64_t v12 = v11[6];
    __dst = &v9[v12];
    uint64_t v13 = &v10[v12];
    uint64_t v14 = sub_1005E0970();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_10000566C(&qword_100719228);
      memcpy(__dst, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(__dst, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    uint64_t v17 = v11[7];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    long long v20 = *((_OWORD *)v19 + 3);
    *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
    *((_OWORD *)v18 + 3) = v20;
    long long v21 = *((_OWORD *)v19 + 5);
    *((_OWORD *)v18 + 4) = *((_OWORD *)v19 + 4);
    *((_OWORD *)v18 + 5) = v21;
    long long v22 = *((_OWORD *)v19 + 1);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v22;
    *(_OWORD *)&v9[v11[8]] = *(_OWORD *)&v10[v11[8]];
    *(_OWORD *)&v9[v11[9]] = *(_OWORD *)&v10[v11[9]];
    *(void *)&v9[v11[10]] = *(void *)&v10[v11[10]];
    *(_WORD *)&v9[v11[11]] = *(_WORD *)&v10[v11[11]];
    v9[v11[12]] = v10[v11[12]];
    v9[v11[13]] = v10[v11[13]];
    v9[v11[14]] = v10[v11[14]];
    uint64_t v23 = v11[15];
    long long v24 = &v9[v23];
    uint64_t v25 = &v10[v23];
    *(_OWORD *)long long v24 = *(_OWORD *)v25;
    v24[16] = v25[16];
    *(void *)&v9[v11[16]] = *(void *)&v10[v11[16]];
    uint64_t v26 = v30[7];
    long long v27 = (char *)v5 + v26;
    uint64_t v28 = (char *)v6 + v26;
    *(void *)long long v27 = *(void *)v28;
    v27[8] = v28[8];
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))((char *)v5 + v30[8], (char *)v6 + v30[8], v14);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100584E80(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = (void *)((char *)a1 + v4);
    uint64_t v6 = (void *)((char *)a2 + v4);
    sub_1005835E8((uint64_t)a1 + v4, type metadata accessor for PendingItem.Info);
    uint64_t v7 = type metadata accessor for PendingItem.Info(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      *(_OWORD *)uint64_t v5 = *(_OWORD *)v6;
      long long v5[2] = v6[2];
      long long v30 = (int *)type metadata accessor for PendingItem.AddMessage(0);
      uint64_t v8 = v30[6];
      uint64_t v9 = (char *)v5 + v8;
      uint64_t v10 = (char *)v6 + v8;
      *(_OWORD *)((char *)v5 + v8) = *(_OWORD *)((char *)v6 + v8);
      uint64_t v11 = (int *)type metadata accessor for IndexableMessageInfo(0);
      uint64_t v12 = v11[6];
      __dst = &v9[v12];
      uint64_t v13 = &v10[v12];
      uint64_t v14 = sub_1005E0970();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = sub_10000566C(&qword_100719228);
        memcpy(__dst, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(__dst, v13, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
      }
      uint64_t v17 = v11[7];
      uint64_t v18 = &v9[v17];
      uint64_t v19 = &v10[v17];
      long long v20 = *((_OWORD *)v19 + 3);
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
      *((_OWORD *)v18 + 3) = v20;
      long long v21 = *((_OWORD *)v19 + 5);
      *((_OWORD *)v18 + 4) = *((_OWORD *)v19 + 4);
      *((_OWORD *)v18 + 5) = v21;
      long long v22 = *((_OWORD *)v19 + 1);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v22;
      *(_OWORD *)&v9[v11[8]] = *(_OWORD *)&v10[v11[8]];
      *(_OWORD *)&v9[v11[9]] = *(_OWORD *)&v10[v11[9]];
      *(void *)&v9[v11[10]] = *(void *)&v10[v11[10]];
      *(_WORD *)&v9[v11[11]] = *(_WORD *)&v10[v11[11]];
      v9[v11[12]] = v10[v11[12]];
      v9[v11[13]] = v10[v11[13]];
      v9[v11[14]] = v10[v11[14]];
      uint64_t v23 = v11[15];
      long long v24 = &v9[v23];
      uint64_t v25 = &v10[v23];
      *(_OWORD *)long long v24 = *(_OWORD *)v25;
      v24[16] = v25[16];
      *(void *)&v9[v11[16]] = *(void *)&v10[v11[16]];
      uint64_t v26 = v30[7];
      long long v27 = (char *)v5 + v26;
      uint64_t v28 = (char *)v6 + v26;
      *(void *)long long v27 = *(void *)v28;
      v27[8] = v28[8];
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))((char *)v5 + v30[8], (char *)v6 + v30[8], v14);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100585150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100585164);
}

uint64_t sub_100585164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for PendingItem.Info(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_1005851D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005851E8);
}

uint64_t sub_1005851E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for PendingItem.Info(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t type metadata accessor for EnqueueableItem(uint64_t a1)
{
  return sub_10003B314(a1, qword_10071A398);
}

uint64_t sub_10058527C()
{
  uint64_t result = type metadata accessor for PendingItem.Info(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100585318(uint64_t a1)
{
  uint64_t v49 = sub_10000566C(&qword_10071A498);
  __chkstk_darwin();
  uint64_t v3 = (uint64_t *)((char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v48 = (char *)&v44 - v4;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v45 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v47 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v50 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v11 = _swiftEmptyArrayStorage;
  uint64_t v46 = v3;
  uint64_t v57 = _swiftEmptyArrayStorage;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v56 = (v8 - 1) & v8;
  for (unint64_t i = __clz(__rbit64(v8)) | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = *(void *)(v50 + 56);
    uint64_t v17 = *(void *)(v50 + 48) + 32 * i;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    int v21 = *(_DWORD *)(v17 + 24);
    uint64_t v22 = sub_10000566C((uint64_t *)&unk_100719790);
    uint64_t v23 = v16 + *(void *)(*(void *)(v22 - 8) + 72) * i;
    uint64_t v24 = (uint64_t)v48;
    uint64_t v25 = v49;
    sub_10056EDE4(v23, (uint64_t)&v48[*(int *)(v49 + 48)]);
    *(void *)uint64_t v24 = v18;
    *(void *)(v24 + 8) = v19;
    *(void *)(v24 + 16) = v20;
    *(_DWORD *)(v24 + 24) = v21;
    uint64_t result = sub_100589F90(v24, (uint64_t)v3);
    uint64_t v27 = *v3;
    unint64_t v26 = v3[1];
    uint64_t v28 = HIBYTE(v26) & 0xF;
    if ((v26 & 0x2000000000000000) == 0) {
      uint64_t v28 = *v3 & 0xFFFFFFFFFFFFLL;
    }
    if (!v28)
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    int64_t v55 = v10;
    uint64_t v29 = *(int *)(v25 + 48);
    uint64_t v30 = v3[2];
    uint64_t v31 = (uint64_t)v3;
    uint64_t v32 = (char *)v3 + v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    MessageIdentifierSet.count.getter();
    uint64_t v53 = v30;
    unint64_t v54 = v26;
    if (v33)
    {
      uint64_t v34 = v33;
      uint64_t v51 = v27;
      uint64_t v52 = v32;
      uint64_t v59 = _swiftEmptyArrayStorage;
      sub_100590D14(0, v33 & ~(v33 >> 63), 0);
      long long v35 = v59;
      uint64_t result = MessageIdentifierSet.startIndex.getter(v22);
      if (v34 < 0) {
        goto LABEL_38;
      }
      do
      {
        MessageIdentifierSet.subscript.getter();
        int v36 = v58;
        uint64_t v59 = v35;
        unint64_t v38 = v35[2];
        unint64_t v37 = v35[3];
        if (v38 >= v37 >> 1)
        {
          int v39 = v58;
          sub_100590D14(v37 > 1, v38 + 1, 1);
          int v36 = v39;
          long long v35 = v59;
        }
        void v35[2] = v38 + 1;
        *((_DWORD *)v35 + v38 + 8) = v36;
        MessageIdentifierSet.index(_:offsetBy:)();
        --v34;
      }
      while (v34);
      uint64_t v31 = (uint64_t)v46;
      unint64_t v8 = v56;
      uint64_t v11 = v57;
      uint64_t v27 = v51;
    }
    else
    {
      long long v35 = _swiftEmptyArrayStorage;
      unint64_t v8 = v56;
      uint64_t v11 = v57;
    }
    sub_100007A48(v31, &qword_10071A498);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    int v40 = (void *)v31;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100571F24(0, v11[2] + 1, 1, v11);
      uint64_t v11 = (void *)result;
    }
    unint64_t v42 = v11[2];
    unint64_t v41 = v11[3];
    if (v42 >= v41 >> 1)
    {
      uint64_t result = (uint64_t)sub_100571F24((void *)(v41 > 1), v42 + 1, 1, v11);
      uint64_t v11 = (void *)result;
    }
    int64x2_t v11[2] = v42 + 1;
    uint64_t v43 = &v11[4 * v42];
    void v43[4] = v53;
    v43[5] = v27;
    int64_t v10 = v55;
    v43[6] = v54;
    v43[7] = v35;
    uint64_t v3 = v40;
    uint64_t v57 = v11;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v13 >= v47) {
      goto LABEL_36;
    }
    unint64_t v14 = *(void *)(v45 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v47) {
        goto LABEL_36;
      }
      unint64_t v14 = *(void *)(v45 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v47) {
          goto LABEL_36;
        }
        unint64_t v14 = *(void *)(v45 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v47) {
            goto LABEL_36;
          }
          unint64_t v14 = *(void *)(v45 + 8 * v10);
          if (!v14)
          {
            int64_t v15 = v13 + 4;
            if (v15 >= v47)
            {
LABEL_36:
              swift_release();
              return (uint64_t)v11;
            }
            unint64_t v14 = *(void *)(v45 + 8 * v15);
            int64_t v10 = v15;
            if (!v14) {
              break;
            }
          }
        }
      }
    }
LABEL_19:
    uint64_t v56 = (v14 - 1) & v14;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v47) {
      goto LABEL_36;
    }
    unint64_t v14 = *(void *)(v45 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10058579C()
{
  uint64_t v0 = sub_1005E0ED0();
  sub_10034E5B4(v0, qword_10071A3D0);
  sub_1003461B0(v0, (uint64_t)qword_10071A3D0);
  return sub_1005E0EC0();
}

uint64_t sub_100585810()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Search()
{
  return self;
}

uint64_t sub_100585874(void *a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5)
{
  unint64_t v7 = (unint64_t)a1;
  uint64_t v36 = SearchQuery.id.getter(a1);
  unint64_t v9 = v8;
  if (qword_1007187D8 != -1) {
    goto LABEL_16;
  }
  while (1)
  {
    uint64_t v10 = sub_1005E0ED0();
    sub_1003461B0(v10, (uint64_t)qword_10071A3D0);
    swift_bridgeObjectRetain_n();
    uint64_t v11 = sub_1005E0EB0();
    os_log_type_t v12 = sub_1005E25C0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 141558275;
      aBlock[0] = v14;
      sub_1005E2960();
      *(_WORD *)(v13 + 12) = 2085;
      swift_bridgeObjectRetain();
      sub_1005904BC(v36, v9, aBlock);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "[%{sensitive,mask.hash}s] Starting.", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    int64_t v15 = a3[2];
    uint64_t v16 = _swiftEmptyArrayStorage;
    if (!v15) {
      break;
    }
    unint64_t v31 = v7;
    unint64_t v32 = a5;
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_100590D84(0, v15, 0);
    uint64_t v16 = (void *)aBlock[0];
    uint64_t v30 = a3;
    a3 += 6;
    while (1)
    {
      unint64_t v7 = *(a3 - 1);
      uint64_t v17 = *a3;
      uint64_t v18 = HIBYTE(*a3) & 0xFLL;
      if ((*a3 & 0x2000000000000000) == 0) {
        uint64_t v18 = v7 & 0xFFFFFFFFFFFFLL;
      }
      if (!v18) {
        break;
      }
      v19._id rawValue = (void *)*(a3 - 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      NIOIMAPCore2::MailboxName v38 = MailboxName.init(_:)(v19);
      id rawValue = v38.bytes._rawValue;
      Swift::UInt32 value = v38._hashValue._value;
      aBlock[0] = (uint64_t)v16;
      a5 = v16[2];
      unint64_t v22 = v16[3];
      if (a5 >= v22 >> 1)
      {
        sub_100590D84(v22 > 1, a5 + 1, 1);
        uint64_t v16 = (void *)aBlock[0];
      }
      a3 += 3;
      void v16[2] = a5 + 1;
      uint64_t v23 = &v16[4 * a5];
      v23[4] = v7;
      v23[5] = v17;
      v23[6] = rawValue;
      *((_DWORD *)v23 + 14) = value;
      if (!--v15)
      {
        a3 = v30;
        swift_bridgeObjectRelease();
        unint64_t v7 = v31;
        a5 = v32;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    swift_once();
  }
LABEL_14:
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = v7;
  v24[3] = a2;
  v24[4] = a3;
  v24[5] = v35;
  v24[6] = v36;
  v24[7] = v9;
  v24[8] = a4;
  v24[9] = a5;
  uint64_t v25 = *(void **)(v35 + 24);
  unint64_t v26 = (void *)swift_allocObject();
  void v26[2] = v35;
  id v26[3] = v16;
  v26[4] = v36;
  v26[5] = v9;
  v26[6] = sub_1005888F8;
  v26[7] = v24;
  aBlock[4] = (uint64_t)sub_10058897C;
  aBlock[5] = (uint64_t)v26;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10046A1E4;
  aBlock[3] = (uint64_t)&unk_1006FE398;
  uint64_t v27 = _Block_copy(aBlock);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  id v28 = (id)v7;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v25 performBlock:v27];
  _Block_release(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_100585C8C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t (*a8)(void), uint64_t a9)
{
  void v35[2] = a5;
  uint64_t v15 = sub_1005E0ED0();
  uint64_t v36 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v17 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003C8730(0, &qword_10071A490);
  id v18 = a2;
  swift_bridgeObjectRetain();
  Swift::OpaquePointer v19 = v18;
  uint64_t v20 = a6;
  id v21 = sub_100585FEC(v19, a3, a1);
  if (a3 >= 541) {
    uint64_t v22 = 541;
  }
  else {
    uint64_t v22 = a3;
  }
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = v20;
  void v23[3] = a7;
  v23[4] = a8;
  v23[5] = a9;
  if (v21)
  {
    v35[0] = v22;
    uint64_t v24 = v20;
    uint64_t v25 = qword_1007187D8;
    swift_bridgeObjectRetain_n();
    v35[1] = a9;
    swift_retain_n();
    id v26 = v21;
    if (v25 != -1) {
      swift_once();
    }
    uint64_t v27 = v15;
    uint64_t v28 = sub_1003461B0(v15, (uint64_t)qword_10071A3D0);
    uint64_t v29 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v17, v28, v27);
    uint64_t v30 = swift_allocObject();
    swift_weakInit();
    unint64_t v31 = (void *)swift_allocObject();
    v31[2] = v30;
    uint64_t v31[3] = sub_100588DE8;
    uint64_t v32 = v35[0];
    v31[4] = v23;
    v31[5] = v32;
    uint64_t v31[6] = v24;
    v31[7] = a7;
    v31[8] = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_100586AFC(v24, a7, (uint64_t)v17, (uint64_t)sub_100588E7C, (uint64_t)v31);

    swift_release();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v27);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    return swift_release();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    unint64_t v34 = sub_10058A744((uint64_t)_swiftEmptyArrayStorage);
    sub_100586144(v34, v20, a7, a8);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

id sub_100585FEC(void *a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    sub_1003C8730(0, &qword_10071A4B0);
    id v7 = static CSSuggestion.make(_:)(a1);
    id v8 = [v7 userQueryString];

    sub_1003C8730(0, &qword_10071A4B8);
    id v9 = a1;
    id v10 = sub_100587E24(v9, a2);
    id v11 = [v6 initWithUserQueryString:v8 userQueryContext:v10];

    id v12 = v11;
    sub_1005AE098(a3);
    swift_bridgeObjectRelease();
    Class isa = sub_1005E20B0().super.isa;
    swift_bridgeObjectRelease();
    [v12 setFilterQueries:isa];
  }
  else
  {
    swift_bridgeObjectRelease();

    return 0;
  }
  return v12;
}

uint64_t sub_100586144(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(void))
{
  if (qword_1007187D8 != -1) {
    goto LABEL_33;
  }
  while (1)
  {
    uint64_t v8 = sub_1005E0ED0();
    sub_1003461B0(v8, (uint64_t)qword_10071A3D0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v9 = sub_1005E0EB0();
    os_log_type_t v10 = sub_1005E25C0();
    if (!os_log_type_enabled(v9, v10)) {
      break;
    }
    uint64_t v27 = a4;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 141558531;
    uint64_t v28 = v12;
    sub_1005E2960();
    *(_WORD *)(v11 + 12) = 2085;
    swift_bridgeObjectRetain();
    sub_1005904BC(a2, a3, &v28);
    sub_1005E2960();
    uint64_t result = swift_bridgeObjectRelease_n();
    int64_t v14 = 0;
    a4 = 0;
    *(_WORD *)(v11 + 22) = 2048;
    uint64_t v15 = a1 + 64;
    uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v18 = v17 & *(void *)(a1 + 64);
    int64_t v19 = (unint64_t)(v16 + 63) >> 6;
    do
    {
      if (v18)
      {
        unint64_t v20 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        unint64_t v21 = v20 | (v14 << 6);
      }
      else
      {
        int64_t v24 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_32;
        }
        if (v24 >= v19)
        {
LABEL_29:
          swift_release();
          sub_1005E2960();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v9, v10, "[%{sensitive,mask.hash}s] Done. %ld UIDs.", (uint8_t *)v11, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          a4 = v27;
          return a4(a1);
        }
        unint64_t v25 = *(void *)(v15 + 8 * v24);
        ++v14;
        if (!v25)
        {
          int64_t v14 = v24 + 1;
          if (v24 + 1 >= v19) {
            goto LABEL_29;
          }
          unint64_t v25 = *(void *)(v15 + 8 * v14);
          if (!v25)
          {
            int64_t v14 = v24 + 2;
            if (v24 + 2 >= v19) {
              goto LABEL_29;
            }
            unint64_t v25 = *(void *)(v15 + 8 * v14);
            if (!v25)
            {
              int64_t v14 = v24 + 3;
              if (v24 + 3 >= v19) {
                goto LABEL_29;
              }
              unint64_t v25 = *(void *)(v15 + 8 * v14);
              if (!v25)
              {
                int64_t v14 = v24 + 4;
                if (v24 + 4 >= v19) {
                  goto LABEL_29;
                }
                unint64_t v25 = *(void *)(v15 + 8 * v14);
                if (!v25)
                {
                  int64_t v26 = v24 + 5;
                  if (v26 >= v19) {
                    goto LABEL_29;
                  }
                  unint64_t v25 = *(void *)(v15 + 8 * v26);
                  if (!v25)
                  {
                    while (1)
                    {
                      int64_t v14 = v26 + 1;
                      if (__OFADD__(v26, 1)) {
                        break;
                      }
                      if (v14 >= v19) {
                        goto LABEL_29;
                      }
                      unint64_t v25 = *(void *)(v15 + 8 * v14);
                      ++v26;
                      if (v25) {
                        goto LABEL_27;
                      }
                    }
                    __break(1u);
                    return result;
                  }
                  int64_t v14 = v26;
                }
              }
            }
          }
        }
LABEL_27:
        unint64_t v18 = (v25 - 1) & v25;
        unint64_t v21 = __clz(__rbit64(v25)) + (v14 << 6);
      }
      uint64_t v22 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8 * v21) + 16);
      BOOL v23 = __OFADD__(a4, v22);
      a4 = (uint64_t (*)(void))((char *)a4 + v22);
    }
    while (!v23);
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    swift_once();
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return a4(a1);
}

void sub_1005864B4(unint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
    sub_10058A744((uint64_t)_swiftEmptyArrayStorage);
    a3();
LABEL_74:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v55 = a6;
  uint64_t v56 = a7;
  swift_bridgeObjectRetain();
  sub_10053E9E0(a5, a1);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  unint64_t v20 = v19;
  swift_bridgeObjectRelease();
  int64_t v21 = v20 >> 1;
  if (v18 == v20 >> 1)
  {
    uint64_t v22 = _swiftEmptyArrayStorage;
LABEL_73:
    swift_unknownObjectRelease();
    uint64_t v52 = sub_1005AC188((uint64_t)v22);
    swift_bridgeObjectRelease();
    sub_100586998(v55, v56, v52, a8, (uint64_t)a3, a4);
    swift_release();
    goto LABEL_74;
  }
  uint64_t v53 = a3;
  uint64_t v54 = a4;
  swift_unknownObjectRetain();
  uint64_t v22 = _swiftEmptyArrayStorage;
  while (v18 < v21)
  {
    id v23 = *(id *)(v16 + 8 * v18);
    id v24 = [v23 uniqueIdentifier];
    uint64_t v25 = sub_1005E1C00();
    unint64_t v27 = v26;

    uint64_t v28 = HIBYTE(v27) & 0xF;
    uint64_t v29 = v25 & 0xFFFFFFFFFFFFLL;
    if ((v27 & 0x2000000000000000) != 0) {
      uint64_t v30 = HIBYTE(v27) & 0xF;
    }
    else {
      uint64_t v30 = v25 & 0xFFFFFFFFFFFFLL;
    }
    if (v30)
    {
      if ((v27 & 0x1000000000000000) != 0)
      {
        unint64_t v32 = sub_100567C60(v25, v27, 10);
        char v34 = v51;
        goto LABEL_45;
      }
      if ((v27 & 0x2000000000000000) == 0)
      {
        if ((v25 & 0x1000000000000000) != 0) {
          unint64_t v31 = (unsigned __int8 *)((v27 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else {
          unint64_t v31 = (unsigned __int8 *)sub_1005E2D30();
        }
        unint64_t v32 = (unint64_t)sub_100567C48(v31, v29, 10);
        char v34 = v33 & 1;
LABEL_45:

        swift_bridgeObjectRelease();
        if ((v34 & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v22 = sub_100571E14(0, v22[2] + 1, 1, v22);
          }
          unint64_t v42 = v22[2];
          unint64_t v41 = v22[3];
          if (v42 >= v41 >> 1) {
            uint64_t v22 = sub_100571E14((void *)(v41 > 1), v42 + 1, 1, v22);
          }
          v22[2] = v42 + 1;
          v22[v42 + 4] = v32;
        }
        goto LABEL_7;
      }
      v57[0] = v25;
      v57[1] = v27 & 0xFFFFFFFFFFFFFFLL;
      if (v25 == 43)
      {
        if (!v28) {
          goto LABEL_77;
        }
        if (v28 == 1 || (BYTE1(v25) - 48) > 9u) {
          goto LABEL_41;
        }
        unint64_t v32 = (BYTE1(v25) - 48);
        if (v28 == 2) {
          goto LABEL_44;
        }
        if ((BYTE2(v25) - 48) <= 9u)
        {
          unint64_t v32 = 10 * (BYTE1(v25) - 48) + (BYTE2(v25) - 48);
          uint64_t v38 = v28 - 3;
          if (v38)
          {
            int v39 = (unsigned __int8 *)v57 + 3;
            while (1)
            {
              unsigned int v40 = *v39 - 48;
              if (v40 > 9) {
                goto LABEL_41;
              }
              if (!is_mul_ok(v32, 0xAuLL)) {
                goto LABEL_41;
              }
              BOOL v36 = __CFADD__(10 * v32, v40);
              unint64_t v32 = 10 * v32 + v40;
              if (v36) {
                goto LABEL_41;
              }
              char v34 = 0;
              ++v39;
              if (!--v38) {
                goto LABEL_45;
              }
            }
          }
          goto LABEL_44;
        }
      }
      else if (v25 == 45)
      {
        if (!v28) {
          goto LABEL_76;
        }
        if (v28 != 1)
        {
          unsigned __int8 v35 = BYTE1(v25) - 48;
          if ((BYTE1(v25) - 48) <= 9u)
          {
            unint64_t v32 = 0;
            BOOL v36 = v35 == 0;
            unint64_t v37 = -(uint64_t)v35;
            if (!v36) {
              goto LABEL_42;
            }
            if (v28 == 2)
            {
              char v34 = 0;
              unint64_t v32 = v37;
              goto LABEL_45;
            }
            unsigned __int8 v46 = BYTE2(v25) - 48;
            if ((BYTE2(v25) - 48) <= 9u && is_mul_ok(v37, 0xAuLL))
            {
              unint64_t v47 = 10 * v37;
              unint64_t v32 = v47 - v46;
              if (v47 >= v46)
              {
                uint64_t v48 = v28 - 3;
                if (v48)
                {
                  uint64_t v49 = (unsigned __int8 *)v57 + 3;
                  while (1)
                  {
                    unsigned int v50 = *v49 - 48;
                    if (v50 > 9) {
                      goto LABEL_41;
                    }
                    if (!is_mul_ok(v32, 0xAuLL)) {
                      goto LABEL_41;
                    }
                    BOOL v36 = 10 * v32 >= v50;
                    unint64_t v32 = 10 * v32 - v50;
                    if (!v36) {
                      goto LABEL_41;
                    }
                    char v34 = 0;
                    ++v49;
                    if (!--v48) {
                      goto LABEL_45;
                    }
                  }
                }
LABEL_44:
                char v34 = 0;
                goto LABEL_45;
              }
            }
          }
        }
      }
      else if (v28 && (v25 - 48) <= 9u)
      {
        unint64_t v32 = (v25 - 48);
        if (v28 == 1) {
          goto LABEL_44;
        }
        if ((BYTE1(v25) - 48) <= 9u)
        {
          unint64_t v32 = 10 * (v25 - 48) + (BYTE1(v25) - 48);
          uint64_t v43 = v28 - 2;
          if (v43)
          {
            uint64_t v44 = (unsigned __int8 *)v57 + 2;
            while (1)
            {
              unsigned int v45 = *v44 - 48;
              if (v45 > 9) {
                goto LABEL_41;
              }
              if (!is_mul_ok(v32, 0xAuLL)) {
                goto LABEL_41;
              }
              BOOL v36 = __CFADD__(10 * v32, v45);
              unint64_t v32 = 10 * v32 + v45;
              if (v36) {
                goto LABEL_41;
              }
              char v34 = 0;
              ++v44;
              if (!--v43) {
                goto LABEL_45;
              }
            }
          }
          goto LABEL_44;
        }
      }
LABEL_41:
      unint64_t v32 = 0;
LABEL_42:
      char v34 = 1;
      goto LABEL_45;
    }

    swift_bridgeObjectRelease();
LABEL_7:
    if (++v18 == v21)
    {
      swift_unknownObjectRelease();
      a3 = v53;
      a4 = v54;
      goto LABEL_73;
    }
  }
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
}

void sub_100586998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v7 = v6;
  uint64_t v14 = *v6;
  uint64_t v15 = (void *)v6[3];
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = v7;
  v16[3] = a1;
  v16[4] = a2;
  v16[5] = a4;
  v16[6] = a3;
  v16[7] = a5;
  unsigned char v16[8] = a6;
  v16[9] = v14;
  void v18[4] = sub_10058921C;
  v18[5] = v16;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  void v18[2] = sub_10046A1E4;
  _OWORD v18[3] = &unk_1006FE578;
  uint64_t v17 = _Block_copy(v18);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v15 performBlock:v17];
  _Block_release(v17);
}

uint64_t sub_100586AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v36 = a1;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v32 = a3;
  uint64_t v35 = a2;
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin();
  id v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = _swiftEmptyArrayStorage;
  unint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v31(v9, a3, v6);
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = (v11 + 16) & ~v11;
  unint64_t v13 = (v8 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = v13;
  uint64_t v30 = v11 | 7;
  unint64_t v14 = (v13 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  uint64_t v28 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v28(v15 + v12, v9, v6);
  uint64_t v16 = (void *)(v15 + v13);
  uint64_t v17 = v35;
  void *v16 = v36;
  v16[1] = v17;
  *(void *)(v15 + v14) = v10;
  unint64_t v42 = sub_100588F88;
  uint64_t v43 = v15;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  unint64_t v27 = &v40;
  unsigned int v40 = sub_1005882F4;
  unint64_t v41 = &unk_1006FE4D8;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v37 setFoundItemsHandler:v18];
  _Block_release(v18);
  v31(v9, v32, v6);
  uint64_t v19 = swift_allocObject();
  v28(v19 + v12, v9, v6);
  unint64_t v20 = (void *)(v19 + v29);
  uint64_t v21 = v35;
  *unint64_t v20 = v36;
  v20[1] = v21;
  uint64_t v22 = (void *)(v19 + v14);
  uint64_t v23 = v34;
  *uint64_t v22 = v33;
  v22[1] = v23;
  *(void *)(v19 + ((v14 + 23) & 0xFFFFFFFFFFFFFFF8)) = v10;
  unint64_t v42 = sub_100589108;
  uint64_t v43 = v19;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  unsigned int v40 = sub_100588834;
  unint64_t v41 = &unk_1006FE528;
  id v24 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  id v25 = v37;
  [v37 setCompletionHandler:v24];
  _Block_release(v24);
  [v25 start];
  return swift_release();
}

uint64_t sub_100586E54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v70 = a7;
  uint64_t v69 = a6;
  uint64_t v68 = a1;
  uint64_t v12 = sub_1005E1680();
  uint64_t v75 = *(void *)(v12 - 8);
  uint64_t v76 = v12;
  __chkstk_darwin();
  uint64_t v74 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005E16C0();
  uint64_t v72 = *(void *)(v14 - 8);
  uint64_t v73 = v14;
  __chkstk_darwin();
  uint64_t v71 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_10000566C(&qword_10071A498);
  __chkstk_darwin();
  uint64_t v79 = (uint64_t *)((char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v18 = (char *)&v64 - v17;
  __chkstk_darwin();
  unint64_t v20 = (char *)&v64 - v19;
  uint64_t v67 = a5;
  sub_100589230(a5);
  uint64_t v22 = v21;
  uint64_t v65 = a2;
  unint64_t v66 = a3;
  uint64_t v23 = sub_10058956C(a2, a3, a4, v21);

  uint64_t v24 = *(void *)(v23 + 64);
  uint64_t v77 = v23 + 64;
  uint64_t v25 = 1 << *(unsigned char *)(v23 + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v27 = v26 & v24;
  int64_t v78 = (unint64_t)(v25 + 63) >> 6;
  uint64_t v81 = v23;
  swift_bridgeObjectRetain();
  int64_t v28 = 0;
  uint64_t v29 = 0;
  uint64_t v83 = 0;
  if (!v27) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v30 = __clz(__rbit64(v27));
  v27 &= v27 - 1;
  int64_t v82 = v28;
  for (unint64_t i = v30 | (v28 << 6); ; unint64_t i = __clz(__rbit64(v33)) + (v34 << 6))
  {
    uint64_t v36 = *(void *)(v81 + 56);
    uint64_t v37 = *(void *)(v81 + 48) + 32 * i;
    uint64_t v38 = *(void *)v37;
    uint64_t v7 = *(void *)(v37 + 8);
    uint64_t v39 = *(void *)(v37 + 16);
    int v40 = *(_DWORD *)(v37 + 24);
    uint64_t v41 = v36 + *(void *)(*(void *)(sub_10000566C((uint64_t *)&unk_100719790) - 8) + 72) * i;
    uint64_t v42 = v80;
    sub_10056EDE4(v41, (uint64_t)&v20[*(int *)(v80 + 48)]);
    *(void *)unint64_t v20 = v38;
    *((void *)v20 + 1) = v7;
    *((void *)v20 + 2) = v39;
    *((_DWORD *)v20 + 6) = v40;
    sub_100589F90((uint64_t)v20, (uint64_t)v18);
    uint64_t v43 = *(int *)(v42 + 48);
    uint64_t v44 = v79;
    uint64_t v45 = (uint64_t)v79 + v43;
    int v46 = *((_DWORD *)v18 + 6);
    *uint64_t v79 = *(void *)v18;
    *(_OWORD *)(v44 + 1) = *(_OWORD *)(v18 + 8);
    *((_DWORD *)v44 + 6) = v46;
    sub_10056EDE4((uint64_t)&v18[v43], v45);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    MessageIdentifierSet.count.getter();
    uint64_t v48 = v47;
    sub_100007A48(v45, (uint64_t *)&unk_100719790);
    BOOL v49 = __OFADD__(v83, v48);
    uint64_t v29 = v83 + v48;
    if (v49)
    {
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      swift_once();
      goto LABEL_28;
    }
    sub_100007A48((uint64_t)v18, &qword_10071A498);
    int64_t v28 = v82;
    uint64_t v83 = v29;
    if (v27) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v32 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      goto LABEL_33;
    }
    if (v32 >= v78) {
      break;
    }
    unint64_t v33 = *(void *)(v77 + 8 * v32);
    int64_t v34 = v28 + 1;
    if (v33) {
      goto LABEL_22;
    }
    int64_t v34 = v28 + 2;
    if (v28 + 2 >= v78) {
      break;
    }
    unint64_t v33 = *(void *)(v77 + 8 * v34);
    if (v33) {
      goto LABEL_22;
    }
    int64_t v34 = v28 + 3;
    if (v28 + 3 >= v78) {
      break;
    }
    unint64_t v33 = *(void *)(v77 + 8 * v34);
    if (v33) {
      goto LABEL_22;
    }
    int64_t v34 = v28 + 4;
    if (v28 + 4 >= v78) {
      break;
    }
    unint64_t v33 = *(void *)(v77 + 8 * v34);
    if (v33) {
      goto LABEL_22;
    }
    int64_t v34 = v28 + 5;
    if (v28 + 5 >= v78) {
      break;
    }
    unint64_t v33 = *(void *)(v77 + 8 * v34);
    if (v33) {
      goto LABEL_22;
    }
    uint64_t v35 = v28 + 6;
    if (v28 + 6 >= v78) {
      break;
    }
    unint64_t v33 = *(void *)(v77 + 8 * v35);
    if (!v33)
    {
      while (1)
      {
        int64_t v34 = v35 + 1;
        if (__OFADD__(v35, 1)) {
          goto LABEL_34;
        }
        if (v34 >= v78) {
          goto LABEL_26;
        }
        unint64_t v33 = *(void *)(v77 + 8 * v34);
        ++v35;
        if (v33) {
          goto LABEL_22;
        }
      }
    }
    int64_t v34 = v28 + 6;
LABEL_22:
    unint64_t v27 = (v33 - 1) & v33;
    int64_t v82 = v34;
  }
LABEL_26:
  swift_release();
  uint64_t v7 = v67;
  if (v29 == *(void *)(v67 + 16)) {
    goto LABEL_31;
  }
  if (qword_1007187D8 != -1) {
    goto LABEL_35;
  }
LABEL_28:
  uint64_t v50 = sub_1005E0ED0();
  sub_1003461B0(v50, (uint64_t)qword_10071A3D0);
  unint64_t v51 = v66;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v52 = sub_1005E0EB0();
  os_log_type_t v53 = sub_1005E25A0();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    *(_DWORD *)uint64_t v54 = 141558787;
    uint64_t v84 = 1752392040;
    aBlock[0] = v55;
    sub_1005E2960();
    *(_WORD *)(v54 + 12) = 2085;
    swift_bridgeObjectRetain();
    uint64_t v84 = sub_1005904BC(v65, v51, aBlock);
    sub_1005E2960();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v54 + 22) = 2048;
    uint64_t v56 = *(void *)(v7 + 16);
    swift_bridgeObjectRelease();
    uint64_t v84 = v56;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 32) = 2048;
    uint64_t v84 = v29;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v52, v53, "[%{sensitive,mask.hash}s] Spotlight returned %ld message IDs, but %ld messages found in database.", (uint8_t *)v54, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
LABEL_31:
  uint64_t v57 = (void *)swift_allocObject();
  uint64_t v58 = v70;
  v57[2] = v69;
  void v57[3] = v58;
  v57[4] = v81;
  aBlock[4] = (uint64_t)sub_10058A03C;
  aBlock[5] = (uint64_t)v57;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10046A1E4;
  aBlock[3] = (uint64_t)&unk_1006FE5C8;
  uint64_t v59 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v60 = v71;
  sub_1005E16A0();
  uint64_t v84 = (uint64_t)_swiftEmptyArrayStorage;
  sub_10054007C();
  sub_10000566C((uint64_t *)&unk_100719780);
  sub_1005400D4();
  uint64_t v61 = v74;
  uint64_t v62 = v76;
  sub_1005E2AD0();
  sub_1005E2610();
  _Block_release(v59);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v61, v62);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v60, v73);
  return swift_release();
}

uint64_t sub_10058765C(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  if (*(void *)(sub_100585318(a3) + 16))
  {
    sub_10000566C(&qword_10071A4A0);
    uint64_t v4 = (void *)sub_1005E2FF0();
  }
  else
  {
    uint64_t v4 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v7 = v4;
  uint64_t v5 = (void *)swift_bridgeObjectRetain();
  sub_1005889A4(v5, 1, &v7);
  swift_bridgeObjectRelease();
  a1(v7);
  return swift_release();
}

uint64_t sub_100587744(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v51 = a5;
  uint64_t v52 = a6;
  unint64_t v49 = a4;
  uint64_t v47 = a3;
  uint64_t v10 = sub_1005E1680();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v55 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1005E16C0();
  uint64_t v54 = *(void *)(v56 - 8);
  __chkstk_darwin();
  os_log_type_t v53 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = a1;
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = (unint64_t *)sub_1005AC24C(v14);
  swift_bridgeObjectRelease();
  unint64_t v16 = sub_100569898(v15);
  swift_bridgeObjectRelease();
  aBlock[0] = (uint64_t)&_swiftEmptySetSingleton;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1005E2FB0();
    if (v17) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17)
    {
LABEL_3:
      if (v17 >= 1)
      {
        uint64_t v48 = a2;
        uint64_t v45 = v11;
        uint64_t v46 = v10;
        uint64_t v18 = 0;
        while (1)
        {
          if ((v16 & 0xC000000000000001) != 0) {
            id v19 = (id)sub_1005E2CF0();
          }
          else {
            id v19 = *(id *)(v16 + 8 * v18 + 32);
          }
          unint64_t v20 = v19;
          id v21 = objc_msgSend(v19, "objectID", v45);
          id v22 = [v21 entity];
          id v23 = [v22 name];

          if (!v23) {
            goto LABEL_5;
          }
          uint64_t v24 = sub_1005E1C00();
          uint64_t v26 = v25;

          if (v24 == 0x786F626C69616DLL && v26 == 0xE700000000000000)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v28 = sub_1005E3290();
            swift_bridgeObjectRelease();
            if ((v28 & 1) == 0) {
              goto LABEL_5;
            }
          }
          if (([v21 isTemporaryID] & 1) == 0)
          {
            sub_1005A5678(&v57, v21);
            uint64_t v29 = (void *)v57;

            goto LABEL_6;
          }
LABEL_5:

LABEL_6:
          if (v17 == ++v18)
          {
            swift_bridgeObjectRelease_n();
            unint64_t v16 = aBlock[0];
            uint64_t v11 = v45;
            uint64_t v10 = v46;
            a2 = v48;
            goto LABEL_23;
          }
        }
      }
      __break(1u);
LABEL_30:
      swift_once();
LABEL_25:
      uint64_t v30 = sub_1005E0ED0();
      sub_1003461B0(v30, (uint64_t)qword_10071A3D0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      unint64_t v31 = sub_1005E0EB0();
      uint64_t v32 = a2;
      os_log_type_t v33 = sub_1005E25A0();
      if (os_log_type_enabled(v31, v33))
      {
        uint64_t v34 = swift_slowAlloc();
        uint64_t v48 = v32;
        uint64_t v35 = v34;
        uint64_t v36 = swift_slowAlloc();
        uint64_t v46 = v36;
        *(_DWORD *)uint64_t v35 = 141558787;
        uint64_t v57 = 1752392040;
        aBlock[0] = v36;
        sub_1005E2960();
        *(_WORD *)(v35 + 12) = 2085;
        swift_bridgeObjectRetain();
        uint64_t v57 = sub_1005904BC(v47, v7, aBlock);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v35 + 22) = 2048;
        uint64_t v37 = v11;
        uint64_t v38 = *(void *)(v16 + 16);
        swift_bridgeObjectRelease();
        uint64_t v57 = v38;
        uint64_t v11 = v37;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v35 + 32) = 2048;
        swift_bridgeObjectRelease();
        uint64_t v57 = v6;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v31, v33, "[%{sensitive,mask.hash}s] Found %ld mailboxes for search request with %ld mailboxes.", (uint8_t *)v35, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRelease_n();
  unint64_t v16 = (unint64_t)&_swiftEmptySetSingleton;
LABEL_23:
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v7 = v49;
  if (*(void *)(v16 + 16) != v6)
  {
    if (qword_1007187D8 == -1) {
      goto LABEL_25;
    }
    goto LABEL_30;
  }
LABEL_28:
  uint64_t v39 = (void *)swift_allocObject();
  uint64_t v40 = v52;
  void v39[2] = v51;
  v39[3] = v40;
  v39[4] = v16;
  aBlock[4] = (uint64_t)sub_100588D78;
  aBlock[5] = (uint64_t)v39;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10046A1E4;
  aBlock[3] = (uint64_t)&unk_1006FE3E8;
  uint64_t v41 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v42 = v53;
  sub_1005E16A0();
  uint64_t v57 = (uint64_t)_swiftEmptyArrayStorage;
  sub_10054007C();
  sub_10000566C((uint64_t *)&unk_100719780);
  sub_1005400D4();
  uint64_t v43 = v55;
  sub_1005E2AD0();
  sub_1005E2610();
  _Block_release(v41);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v43, v10);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v42, v56);
  return swift_release();
}

id sub_100587E24(void *a1, uint64_t a2)
{
  sub_1003C8730(0, &qword_10071A4B0);
  id v4 = static CSSuggestion.make(_:)(a1);
  id v5 = [(id)swift_getObjCClassFromMetadata() userQueryContextWithCurrentSuggestion:v4];
  Class isa = sub_1005E20B0().super.isa;
  [v5 setBundleIDs:isa];

  if (a2 >= 541) {
    uint64_t v7 = 541;
  }
  else {
    uint64_t v7 = a2;
  }
  [v5 setMaxResultCount:v7];

  return v5;
}

uint64_t sub_100587F10(unint64_t a1, NSObject *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v7 = a1;
  v21[0] = (uint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1005E2FB0();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      if (v8 >= 1)
      {
        uint64_t v9 = 0;
        while (1)
        {
          if ((v7 & 0xC000000000000001) != 0) {
            id v10 = (id)sub_1005E2CF0();
          }
          else {
            id v10 = *(id *)(v7 + 8 * v9 + 32);
          }
          uint64_t v11 = v10;
          id v12 = [v10 attributeSet];
          id v13 = [v12 bundleID];

          if (v13)
          {
            uint64_t v14 = sub_1005E1C00();
            uint64_t v16 = v15;

            if (v14 == 0xD00000000000001DLL && v16 == 0x80000001005E49A0)
            {
              swift_bridgeObjectRelease();
LABEL_15:
              sub_1005E2D60();
              sub_1005E2DD0();
              sub_1005E2DE0();
              sub_1005E2D70();
              goto LABEL_6;
            }
            char v17 = sub_1005E3290();
            swift_bridgeObjectRelease();
            if (v17) {
              goto LABEL_15;
            }
          }

LABEL_6:
          if (v8 == ++v9)
          {
            swift_bridgeObjectRelease();
            unint64_t v7 = v21[0];
            goto LABEL_19;
          }
        }
      }
      __break(1u);
LABEL_26:
      swift_bridgeObjectRetain();
      sub_1005E2FB0();
      swift_release();
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v7 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_19:
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  a2 = sub_1005E0EB0();
  LOBYTE(v8) = sub_1005E25C0();
  if (!os_log_type_enabled(a2, (os_log_type_t)v8))
  {
    swift_bridgeObjectRelease_n();

    swift_release_n();
    goto LABEL_24;
  }
  uint64_t v4 = swift_slowAlloc();
  uint64_t v18 = (void *)swift_slowAlloc();
  *(_DWORD *)uint64_t v4 = 141558531;
  v21[0] = (uint64_t)v18;
  sub_1005E2960();
  *(_WORD *)(v4 + 12) = 2085;
  swift_bridgeObjectRetain();
  sub_1005904BC(a3, a4, v21);
  sub_1005E2960();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v4 + 22) = 2048;
  if ((v7 & 0x8000000000000000) != 0 || (v7 & 0x4000000000000000) != 0) {
    goto LABEL_26;
  }
LABEL_22:
  swift_release();
  sub_1005E2960();
  swift_release();
  _os_log_impl((void *)&_mh_execute_header, a2, (os_log_type_t)v8, "[%{sensitive,mask.hash}s] Spotlight found %ld items.", (uint8_t *)v4, 0x20u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

LABEL_24:
  swift_beginAccess();
  sub_10056DC84(v7);
  return swift_endAccess();
}

uint64_t sub_1005882F4(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1003C8730(0, (unint64_t *)&qword_100718A80);
  uint64_t v2 = sub_1005E20C0();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100588378(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void *), uint64_t a6, uint64_t a7)
{
  if (a1)
  {
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    id v10 = sub_1005E0EB0();
    os_log_type_t v11 = sub_1005E25A0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      id v13 = (void *)swift_slowAlloc();
      v21[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 141558531;
      sub_1005E2960();
      *(_WORD *)(v12 + 12) = 2085;
      swift_bridgeObjectRetain();
      sub_1005904BC(a3, a4, v21);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 22) = 2112;
      swift_errorRetain();
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
      sub_1005E2960();
      *id v13 = v20;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "[%{sensitive,mask.hash}s] Spotlight search could not be completed due to %@", (uint8_t *)v12, 0x20u);
      sub_10000566C(&qword_100718A08);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_errorRelease();
      swift_errorRelease();
    }
    a5(_swiftEmptyArrayStorage);
    return swift_errorRelease();
  }
  else
  {
    uint64_t v14 = (void *)(a7 + 16);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v15 = sub_1005E0EB0();
    os_log_type_t v16 = sub_1005E25C0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      v21[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 141558531;
      sub_1005E2960();
      *(_WORD *)(v17 + 12) = 2085;
      swift_bridgeObjectRetain();
      sub_1005904BC(a3, a4, v21);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 22) = 2048;
      swift_beginAccess();
      if (*v14 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_1005E2FB0();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      sub_1005E2960();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "[%{sensitive,mask.hash}s] Spotlight completed with %ld results", (uint8_t *)v17, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_release_n();
    }
    swift_beginAccess();
    uint64_t v19 = swift_bridgeObjectRetain();
    a5((void *)v19);
    return swift_bridgeObjectRelease();
  }
}

void sub_100588834(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_1005888A0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1005888F8(uint64_t a1)
{
  return sub_100585C8C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(uint64_t (**)(void))(v1 + 64), *(void *)(v1 + 72));
}

uint64_t sub_10058892C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10058897C()
{
  return sub_100587744(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_10058898C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10058899C()
{
  return swift_release();
}

uint64_t sub_1005889A4(void *a1, char a2, void *a3)
{
  if (!a1[2]) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v42 = a1[2];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v7 = a1[7];
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_1005A0410(v5, v6, v8);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1005A4858();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    uint64_t v20 = (uint64_t *)(v19[6] + 24 * v11);
    *uint64_t v20 = v5;
    v20[1] = v6;
    void v20[2] = v8;
    *(void *)(v19[7] + 8 * v11) = v7;
    uint64_t v21 = v19[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v19[2] = v23;
    uint64_t v24 = v42 - 1;
    if (v42 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    for (unint64_t i = a1 + 11; ; i += 4)
    {
      uint64_t v26 = *(i - 3);
      uint64_t v27 = *(i - 2);
      uint64_t v29 = *(i - 1);
      uint64_t v28 = *i;
      uint64_t v30 = (void *)*a3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v31 = sub_1005A0410(v26, v27, v29);
      uint64_t v33 = v30[2];
      BOOL v34 = (v32 & 1) == 0;
      BOOL v22 = __OFADD__(v33, v34);
      uint64_t v35 = v33 + v34;
      if (v22) {
        break;
      }
      char v36 = v32;
      if (v30[3] < v35)
      {
        sub_1005A2BCC(v35, 1);
        unint64_t v31 = sub_1005A0410(v26, v27, v29);
        if ((v36 & 1) != (v37 & 1)) {
          goto LABEL_25;
        }
      }
      if (v36) {
        goto LABEL_10;
      }
      uint64_t v38 = (void *)*a3;
      *(void *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      uint64_t v39 = (uint64_t *)(v38[6] + 24 * v31);
      *uint64_t v39 = v26;
      v39[1] = v27;
      void v39[2] = v29;
      *(void *)(v38[7] + 8 * v31) = v28;
      uint64_t v40 = v38[2];
      BOOL v22 = __OFADD__(v40, 1);
      uint64_t v41 = v40 + 1;
      if (v22) {
        goto LABEL_24;
      }
      long long v38[2] = v41;
      if (!--v24) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1005A2BCC(v14, a2 & 1);
  unint64_t v16 = sub_1005A0410(v5, v6, v8);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    sub_10000566C(&qword_100718D30);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return swift_errorRelease();
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1005E3380();
  __break(1u);
LABEL_26:
  sub_1005E2C80(30);
  v44._object = (void *)0x80000001005E4EC0;
  v44._countAndFlagsBits = 0xD00000000000001BLL;
  sub_1005E1E30(v44);
  sub_1005E2E90();
  v45._countAndFlagsBits = 39;
  v45._object = (void *)0xE100000000000000;
  sub_1005E1E30(v45);
  uint64_t result = sub_1005E2F20();
  __break(1u);
  return result;
}

uint64_t sub_100588D78()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_100588DA8()
{
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100588DE8(uint64_t a1)
{
  return sub_100586144(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(void))(v1 + 32));
}

uint64_t sub_100588DF4()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100588E2C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 72, 7);
}

void sub_100588E7C(unint64_t a1)
{
  sub_1005864B4(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_100588E90()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100588EC8()
{
  uint64_t v1 = sub_1005E0ED0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100588F88(unint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1005E0ED0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + v5);
  unint64_t v7 = *(void *)(v1 + v5 + 8);
  return sub_100587F10(a1, (v1 + v4), v6, v7);
}

uint64_t sub_100589034()
{
  uint64_t v1 = sub_1005E0ED0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100589108(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1005E0ED0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + v5);
  unint64_t v8 = *(void *)(v1 + v5 + 8);
  uint64_t v9 = *(void (**)(void *))(v1 + v6);
  uint64_t v10 = *(void *)(v1 + v6 + 8);
  uint64_t v11 = *(void *)(v1 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8));
  return sub_100588378(a1, v1 + v4, v7, v8, v9, v10, v11);
}

uint64_t sub_1005891C4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10058921C()
{
  return sub_100586E54(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

void sub_100589230(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v3 = sub_1005E1BD0();
  id v23 = [v2 initWithEntityName:v3];

  id v4 = [objc_allocWithZone((Class)NSMutableArray) init];
  uint64_t v5 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v14 >= v9) {
      goto LABEL_21;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v9) {
        goto LABEL_21;
      }
      unint64_t v15 = *(void *)(v5 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v9) {
          goto LABEL_21;
        }
        unint64_t v15 = *(void *)(v5 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_5:
    id v13 = [objc_allocWithZone((Class)NSNumber) initWithLongLong:*(void *)(*(void *)(a1 + 48) + 8 * v12)];
    [v4 addObject:v13];
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v9)
  {
LABEL_21:
    swift_release();
    sub_10000566C(&qword_100719060);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1005F6670;
    *(void *)(v17 + 56) = sub_1003C8730(0, &qword_10071A4A8);
    *(void *)(v17 + 32) = v4;
    id v18 = v4;
    NSString v19 = sub_1005E1BD0();
    Class isa = sub_1005E20B0().super.isa;
    swift_bridgeObjectRelease();
    id v21 = [self predicateWithFormat:v19 argumentArray:isa];

    [v23 setPredicate:v21];
    [v23 setFetchLimit:1082];
    [v23 setReturnsObjectsAsFaults:0];
    Class v22 = sub_1005E20B0().super.isa;
    [v23 setRelationshipKeyPathsForPrefetching:v22];

    [v23 setFetchBatchSize:541];
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v9) {
      goto LABEL_21;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_10058956C(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v90 = a3;
  uint64_t v7 = sub_10000566C((uint64_t *)&unk_100719790);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  int64_t v10 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = sub_10058A884((uint64_t)_swiftEmptyArrayStorage);
  v93[0] = 0;
  id v12 = a4;
  id v13 = [v12 execute:v93];
  if (!v13)
  {
    id v73 = v93[0];
    sub_1005E06F0();

    swift_willThrow();
    swift_bridgeObjectRelease();

    if (qword_1007187D8 != -1) {
      swift_once();
    }
    uint64_t v74 = sub_1005E0ED0();
    sub_1003461B0(v74, (uint64_t)qword_10071A3D0);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v75 = sub_1005E0EB0();
    os_log_type_t v76 = sub_1005E25A0();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = swift_slowAlloc();
      int64_t v78 = (void *)swift_slowAlloc();
      v93[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v77 = 141558531;
      uint64_t v92 = 1752392040;
      sub_1005E2960();
      *(_WORD *)(v77 + 12) = 2085;
      swift_bridgeObjectRetain();
      uint64_t v92 = sub_1005904BC(a1, a2, (uint64_t *)v93);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v77 + 22) = 2112;
      uint64_t v79 = sub_1005E06E0();
      uint64_t v92 = v79;
      sub_1005E2960();
      *int64_t v78 = v79;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v75, v76, "[%{sensitive,mask.hash}s] Search request failed: %@", (uint8_t *)v77, 0x20u);
      sub_10000566C(&qword_100718A08);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }

    unint64_t v72 = sub_10058A884((uint64_t)_swiftEmptyArrayStorage);
    swift_errorRelease();
    return v72;
  }
  int64_t v14 = v13;
  uint64_t v89 = (void *)v11;
  id v15 = v93[0];

  uint64_t v16 = (uint64_t)[v14 count];
  if (v16 < 1)
  {
LABEL_47:

    return (uint64_t)v89;
  }
  uint64_t v17 = v16;
  uint64_t v83 = v10;
  uint64_t v84 = v8;
  uint64_t v85 = v7;
  uint64_t v18 = 0;
  uint64_t p_attr = (char **)(&stru_100707FF8 + 8);
  uint64_t v91 = (char *)&type metadata for Any + 8;
  while (1)
  {
    id v20 = objc_msgSend(v14, p_attr[506], v18, v81);
    sub_1005E2A70();
    swift_unknownObjectRelease();
    _s14descr1006B9AE9V7MessageCMa();
    if ((swift_dynamicCast() & 1) == 0) {
      break;
    }
    id v21 = (void *)v92;
    NSString v22 = sub_1005E1BD0();
    [v21 willAccessValueForKey:v22];

    id v23 = [v21 primitiveUid];
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v25 = (char *)[v23 longLongValue];

      BOOL v26 = (unint64_t)(v25 - 0x100000000) < 0xFFFFFFFF00000001;
      if ((unint64_t)(v25 - 0x100000000) >= 0xFFFFFFFF00000001) {
        int v27 = (int)v25;
      }
      else {
        int v27 = 0;
      }
    }
    else
    {
      int v27 = 0;
      BOOL v26 = 1;
    }
    NSString v28 = sub_1005E1BD0();
    [v21 didAccessValueForKey:v28];

    if (v26) {
      goto LABEL_5;
    }
    id v29 = [v21 mailbox];
    if (!v29) {
      goto LABEL_5;
    }
    id v30 = v29;
    id v31 = [v30 objectID];
    id v32 = [v31 entity];
    id v33 = [v32 name];

    if (!v33)
    {

      goto LABEL_6;
    }
    uint64_t v34 = sub_1005E1C00();
    uint64_t v36 = v35;

    if (v34 == 0x786F626C69616DLL && v36 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v37 = sub_1005E3290();
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0) {
        goto LABEL_22;
      }
    }
    if ([v31 isTemporaryID])
    {
LABEL_22:

      uint64_t p_attr = (char **)(&stru_100707FF8 + 8);
      goto LABEL_6;
    }

    uint64_t p_attr = &stru_100707FF8.attr;
    if ((sub_1005520A4(v31, v90) & 1) == 0
      || (id v38 = [v21 mailbox]) == 0)
    {

LABEL_5:
      goto LABEL_6;
    }
    uint64_t v39 = v38;
    NSString v40 = sub_1005E1BD0();
    [v39 willAccessValueForKey:v40];

    id v87 = v39;
    id v41 = [v39 primitiveName];
    if (v41)
    {
      id v42 = v41;
      sub_10059BA20(v42);
      Swift::String v44 = v43;

      v45._id rawValue = v44;
      uint64_t p_attr = (char **)(&stru_100707FF8 + 8);
      NIOIMAPCore2::MailboxName v94 = MailboxName.init(_:)(v45);
      id rawValue = v94.bytes._rawValue;
      Swift::UInt32 value = v94._hashValue._value;
    }
    else
    {
      id rawValue = 0;
      Swift::UInt32 value = 0;
    }
    NSString v46 = sub_1005E1BD0();
    id v47 = v87;
    [v87 didAccessValueForKey:v46];

    if (!rawValue)
    {

      goto LABEL_5;
    }
    NSString v48 = sub_1005E1BD0();
    [v47 willAccessValueForKey:v48];

    id v49 = [v47 primitiveAccount];
    if (!v49) {
      goto LABEL_34;
    }
    uint64_t v50 = v49;
    uint64_t v51 = sub_1005E1C00();
    unint64_t v53 = v52;

    uint64_t v54 = HIBYTE(v53) & 0xF;
    uint64_t v82 = v51;
    if ((v53 & 0x2000000000000000) == 0) {
      uint64_t v54 = v51 & 0xFFFFFFFFFFFFLL;
    }
    if (!v54)
    {
      swift_bridgeObjectRelease();
LABEL_34:
      uint64_t v82 = 0;
      unint64_t v53 = 0;
    }
    NSString v55 = sub_1005E1BD0();
    [v47 didAccessValueForKey:v55];

    if (v53)
    {
      LODWORD(v92) = v27;
      uint64_t v56 = v89;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v93[0] = v56;
      uint64_t v58 = v53;
      uint64_t v59 = rawValue;
      unint64_t v61 = sub_1005A049C(v82, v53, (uint64_t)rawValue, value);
      uint64_t v62 = v56[2];
      BOOL v63 = (v60 & 1) == 0;
      uint64_t v64 = v62 + v63;
      if (__OFADD__(v62, v63)) {
        __break(1u);
      }
      char v65 = v60;
      uint64_t v66 = v56[3];
      id rawValue = v59;
      if (v66 >= v64)
      {
        unint64_t v69 = v61;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1005A45B0();
        }
      }
      else
      {
        sub_1005A27EC(v64, isUniquelyReferenced_nonNull_native);
        unint64_t v67 = sub_1005A049C(v82, v58, (uint64_t)v59, value);
        if ((v65 & 1) != (v68 & 1)) {
          goto LABEL_57;
        }
        unint64_t v69 = v67;
      }
      uint64_t v70 = v93[0];
      swift_bridgeObjectRelease();
      uint64_t v81 = v58;
      if ((v65 & 1) == 0)
      {
        sub_10053E98C();
        swift_bridgeObjectRetain();
        uint64_t v71 = (uint64_t)v83;
        sub_1005E3680();
        sub_1005BE2F4(v69, v82, v58, (uint64_t)rawValue, value, v71, v70);
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      uint64_t p_attr = (char **)(&stru_100707FF8 + 8);
      uint64_t v89 = v70;
      swift_bridgeObjectRelease();
      MessageIdentifierSet.insert(_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease();
      uint64_t p_attr = (char **)(&stru_100707FF8 + 8);
    }
LABEL_6:
    if (v17 == ++v18) {
      goto LABEL_47;
    }
  }
  sub_1005E2F20();
  __break(1u);
LABEL_57:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

uint64_t sub_100589F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10071A498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100589FFC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10058A03C()
{
  return sub_10058765C(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

unint64_t sub_10058A070(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000566C(&qword_10071A720);
  id v2 = (void *)sub_1005E2FF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1005A0310(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *int64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10058A184(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000566C(&qword_100718D08);
  id v2 = (void *)sub_1005E2FF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1005A0310(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *int64_t v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10058A298(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000566C(&qword_10071A6E8);
  id v2 = (void *)sub_1005E2FF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1005A0310(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *int64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10058A3AC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000566C(&qword_10071A718);
  id v2 = (void *)sub_1005E2FF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = (void *)*(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    id v8 = (id)*(v4 - 3);
    id v9 = v5;
    swift_retain();
    unint64_t result = sub_1005A0398(v8);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v8;
    BOOL v12 = (void *)(v2[7] + 24 * result);
    *BOOL v12 = v9;
    v12[1] = v6;
    uint64_t v12[2] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 4;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10058A4E4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000566C(&qword_10071A6B0);
  id v2 = (void *)sub_1005E2FF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1005A0310(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *int64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10058A600(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000566C(&qword_10071A758);
  uint64_t v2 = sub_1005E2FF0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000079E4(v6, (uint64_t)v15, &qword_10071A760);
    unint64_t result = sub_1004EE0C8((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_100353CB8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10058A744(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000566C(&qword_10071A4A0);
  uint64_t v2 = (void *)sub_1005E2FF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1005A0410(v5, v6, v8);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 24 * result);
    *long long v11 = v5;
    v11[1] = v6;
    int64x2_t v11[2] = v8;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 4;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10058A884(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_10071A738);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000566C(&qword_10071A740);
  uint64_t v6 = sub_1005E2FF0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  int v27 = &v5[*(int *)(v2 + 48)];
  uint64_t v9 = v6 + 64;
  uint64_t v10 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v11 = *(void *)(v3 + 72);
  v25[1] = a1;
  uint64_t v26 = v11;
  swift_retain();
  while (1)
  {
    sub_1000079E4(v10, (uint64_t)v5, &qword_10071A738);
    uint64_t v12 = *(void *)v5;
    uint64_t v13 = *((void *)v5 + 1);
    uint64_t v14 = *((void *)v5 + 2);
    unsigned int v15 = *((_DWORD *)v5 + 6);
    unint64_t result = sub_1005A049C(*(void *)v5, v13, v14, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v9 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = v7[6] + 32 * result;
    *(void *)uint64_t v19 = v12;
    *(void *)(v19 + 8) = v13;
    *(void *)(v19 + 16) = v14;
    *(_DWORD *)(v19 + 24) = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = sub_10000566C((uint64_t *)&unk_100719790);
    unint64_t result = sub_10001FDF0((uint64_t)v27, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, (uint64_t *)&unk_100719790);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    _OWORD v7[2] = v24;
    v10 += v26;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10058AA94(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000566C(&qword_10071A6A0);
  uint64_t v2 = (void *)sub_1005E2FF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (char *)(a1 + 65);
  while (1)
  {
    uint64_t v5 = *(void *)(v4 - 33);
    unint64_t v6 = *(void *)(v4 - 25);
    int v7 = *(_DWORD *)(v4 - 17);
    uint64_t v8 = *(void *)(v4 - 9);
    char v9 = *(v4 - 1);
    char v10 = *v4;
    sub_100008D24(v5, v6);
    unint64_t result = sub_1005A054C(v5, v6);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v13 = v5;
    v13[1] = v6;
    uint64_t v14 = v2[7] + 24 * result;
    *(_DWORD *)uint64_t v14 = v7;
    *(void *)(v14 + 8) = v8;
    *(unsigned char *)(v14 + 16) = v9;
    *(unsigned char *)(v14 + 17) = v10;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v2[2] = v17;
    v4 += 40;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_10058ABE0(int a1)
{
}

void sub_10058AC10(int a1)
{
}

void sub_10058AC40(int a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v33 = a2;
  uint64_t v34 = a3;
  uint64_t v8 = v5;
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = _s14descr1006B99F1V6LoggerVMa(0);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v8 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger;
  sub_100592E1C(v8 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, (uint64_t)v17, _s14descr1006B99F1V6LoggerVMa);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v17, v10);
  uint64_t v19 = (unsigned __int8 *)(v18 + *(int *)(v15 + 28));
  int v32 = *v19;
  int v20 = *((_DWORD *)v19 + 1);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v21 = sub_1005E0EB0();
  os_log_type_t v22 = sub_1005E25C0();
  if (os_log_type_enabled(v21, v22))
  {
    BOOL v23 = (_DWORD *)swift_slowAlloc();
    int v29 = v20;
    uint64_t v24 = v23;
    *BOOL v23 = 68158720;
    LODWORD(aBlock[0]) = 2;
    int v30 = a1;
    uint64_t v31 = a5;
    sub_1005E2960();
    *((_WORD *)v24 + 4) = 256;
    LOBYTE(aBlock[0]) = v32;
    sub_1005E2960();
    *(_WORD *)((char *)v24 + 11) = 1040;
    LODWORD(aBlock[0]) = 8;
    sub_1005E2960();
    *(_WORD *)((char *)v24 + 17) = 1024;
    LODWORD(aBlock[0]) = v29;
    sub_1005E2960();
    *(_WORD *)((char *)v24 + 23) = 1024;
    a1 = v30;
    LODWORD(aBlock[0]) = v30;
    a5 = v31;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, v33, (uint8_t *)v24, 0x1Du);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v25 = *(void **)(v8 + 48);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v8;
  *(_DWORD *)(v26 + 24) = a1;
  aBlock[4] = a4;
  aBlock[5] = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046A1E4;
  aBlock[3] = a5;
  int v27 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v25 performBlock:v27];
  _Block_release(v27);
}

uint64_t sub_10058AFAC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_10057217C((uint64_t)v5);
  }
  unint64_t v6 = *((void *)v5 + 2);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      char v9 = &v5[48 * a1];
      long long v10 = *((_OWORD *)v9 + 2);
      v9 += 32;
      uint64_t v11 = *((void *)v9 + 5);
      char v12 = v9[36];
      int v13 = *((_DWORD *)v9 + 8);
      uint64_t v15 = *((void *)v9 + 2);
      uint64_t v14 = *((void *)v9 + 3);
      uint64_t result = (uint64_t)memmove(v9, v9 + 48, 48 * v8);
      *((void *)v5 + 2) = v7;
      *uint64_t v2 = v5;
      *(_OWORD *)a2 = v10;
      *(void *)(a2 + 16) = v15;
      *(void *)(a2 + 24) = v14;
      *(_DWORD *)(a2 + 32) = v13;
      *(unsigned char *)(a2 + 36) = v12;
      *(void *)(a2 + 40) = v11;
      return result;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10058B0CC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1005721A4(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = *(void *)(type metadata accessor for MessageBeingDownloaded(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  uint64_t result = sub_100592F1C(v10, a2, type metadata accessor for MessageBeingDownloaded);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = sub_1005E3000();
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v9)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_10058B254(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v6 = v5;
  uint64_t v59 = a4;
  char v60 = a3;
  sub_10000566C(&qword_100719928);
  __chkstk_darwin();
  uint64_t v57 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v50 = (uint64_t)&v46 - v10;
  __chkstk_darwin();
  char v12 = (char *)&v46 - v11;
  __chkstk_darwin();
  uint64_t v53 = (uint64_t)&v46 - v13;
  uint64_t v58 = type metadata accessor for MessageBeingDownloaded(0);
  uint64_t v14 = *(void *)(v58 - 8);
  __chkstk_darwin();
  uint64_t v49 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v46 - v16;
  __chkstk_darwin();
  __chkstk_darwin();
  __chkstk_darwin();
  uint64_t v21 = (char *)&v46 - v20;
  uint64_t v54 = v4;
  os_log_type_t v22 = *v4;
  BOOL v23 = (unint64_t **)v22[2];
  if (!v23)
  {
LABEL_12:
    uint64_t v35 = v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v58);
    v60(v12);
    if (v6)
    {
      a2 = (uint64_t)v12;
LABEL_14:
      uint64_t v36 = a2;
      return sub_100007A48(v36, &qword_100719928);
    }
    uint64_t v37 = v57;
    sub_1000079E4((uint64_t)v12, v57, &qword_100719928);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v37, 1, v35) == 1)
    {
      sub_100007A48((uint64_t)v12, &qword_100719928);
      char v12 = (char *)v37;
      goto LABEL_31;
    }
    sub_100592F1C(v37, (uint64_t)v17, type metadata accessor for MessageBeingDownloaded);
    if (*(void *)v17 != a1
      || *((_DWORD *)v17 + 4) != a2
      || (id v38 = *((id *)v17 + 1), v39 = sub_100578BD8(), v38, (v39 & 0x100000000) != 0)
      || v39 != a2)
    {
      uint64_t v42 = (uint64_t)v17;
LABEL_26:
      sub_100592FCC(v42, type metadata accessor for MessageBeingDownloaded);
      goto LABEL_31;
    }
    a1 = v49;
    sub_100592E1C((uint64_t)v17, v49, type metadata accessor for MessageBeingDownloaded);
    uint64_t v25 = v54;
    uint64_t v28 = *v54;
    a2 = (uint64_t)v17;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_22:
      unint64_t v41 = v28[2];
      unint64_t v40 = v28[3];
      if (v41 >= v40 >> 1) {
        uint64_t v28 = (unint64_t *)sub_100571A9C(v40 > 1, v41 + 1, 1, (unint64_t)v28);
      }
      _OWORD v28[2] = v41 + 1;
      sub_100592F1C(a1, (uint64_t)v28+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v41, type metadata accessor for MessageBeingDownloaded);
      *uint64_t v25 = v28;
      uint64_t v42 = a2;
      goto LABEL_26;
    }
LABEL_36:
    uint64_t v28 = (unint64_t *)sub_100571A9C(0, v28[2] + 1, 1, (unint64_t)v28);
    goto LABEL_22;
  }
  uint64_t v47 = v19;
  uint64_t v48 = v18;
  uint64_t v55 = v5;
  uint64_t v56 = v14;
  uint64_t v51 = v17;
  unint64_t v52 = v12;
  char v12 = (char *)((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v24 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  uint64_t v25 = 0;
  while (1)
  {
    uint64_t v26 = *(void *)&v12[(void)v22];
    sub_100592E1C((uint64_t)&v12[(void)v22], (uint64_t)v21, type metadata accessor for MessageBeingDownloaded);
    if (v26 == a1) {
      break;
    }
    sub_100592FCC((uint64_t)v21, type metadata accessor for MessageBeingDownloaded);
LABEL_4:
    uint64_t v25 = (unint64_t **)((char *)v25 + 1);
    v12 += v24;
    if (v23 == v25)
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = v51;
      char v12 = v52;
      uint64_t v6 = v55;
      uint64_t v14 = v56;
      goto LABEL_12;
    }
  }
  int v27 = *((_DWORD *)v21 + 4);
  sub_100592FCC((uint64_t)v21, type metadata accessor for MessageBeingDownloaded);
  if (v27 != a2) {
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  uint64_t v28 = (unint64_t *)v54;
  unint64_t v29 = (unint64_t)*v54;
  uint64_t v14 = v56;
  if ((unint64_t)v25 >= (*v54)[2])
  {
    __break(1u);
LABEL_34:
    unint64_t v29 = sub_1005721A4(v29);
    *uint64_t v28 = v29;
    goto LABEL_28;
  }
  a2 = v53;
  sub_100592E1C((uint64_t)&v12[v29], v53, type metadata accessor for MessageBeingDownloaded);
  a1 = v58;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v58);
  uint64_t v30 = v55;
  v60((char *)a2);
  if (v30) {
    goto LABEL_14;
  }
  uint64_t v31 = v50;
  sub_1000079E4(a2, v50, &qword_100719928);
  int v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v14 += 48;
  if (v32(v31, 1, a1) == 1)
  {
    sub_100007A48(v31, &qword_100719928);
    uint64_t v33 = v47;
    sub_10058B0CC((unint64_t)v25, v47);
    uint64_t v34 = v33;
    goto LABEL_30;
  }
  sub_100592F1C(v31, v48, type metadata accessor for MessageBeingDownloaded);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v28 = v29;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_34;
  }
LABEL_28:
  if ((unint64_t)v25 >= *(void *)(v29 + 16))
  {
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v44 = v48;
  sub_10056BB28(v48, (uint64_t)&v12[v29]);
  uint64_t v34 = v44;
LABEL_30:
  sub_100592FCC(v34, type metadata accessor for MessageBeingDownloaded);
  char v12 = (char *)a2;
LABEL_31:
  uint64_t v36 = (uint64_t)v12;
  return sub_100007A48(v36, &qword_100719928);
}

void sub_10058B8E0()
{
  uint64_t v1 = v0;
  NSString v2 = sub_1005E1BD0();
  [v0 willChangeValueForKey:v2];

  sub_10057B880();
  sub_100592DC8();
  uint64_t v3 = sub_1005E0460();
  unint64_t v5 = v4;
  swift_release();
  Class isa = sub_1005E0890().super.isa;
  NSString v7 = sub_1005E1BD0();
  [v1 setPrimitiveValue:isa forKey:v7];

  sub_1000094D4(v3, v5);
  NSString v8 = sub_1005E1BD0();
  [v1 didChangeValueForKey:v8];
}

void *sub_10058BA38(int a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, int *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13 = (void *)v12;
  uint64_t v58 = a8;
  uint64_t v54 = (char *)a4;
  uint64_t v52 = a2;
  LODWORD(v53) = a1;
  uint64_t v18 = _s14descr1006B99F1V6LoggerVMa(0);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (int *)((char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  BOOL v23 = (char *)&v49 - v22;
  *(void *)(v12 + 56) = 0;
  sub_10000566C(&qword_10071A700);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = 0;
  *(void *)(v12 + 80) = v24;
  *(void *)(v12 + 104) = 0;
  *(void *)(v12 + 128) = _swiftEmptyArrayStorage;
  type metadata accessor for Cache();
  swift_allocObject();
  Cache.init()();
  *(void *)(v12 + 136) = v25;
  *(void *)(v12 + 152) = sub_10058A3AC((uint64_t)_swiftEmptyArrayStorage);
  *(_WORD *)(v12 + 160) = 0;
  if ([a6 concurrencyType] == (id)1)
  {
    uint64_t v51 = v21;
    uint64_t v21 = a6;
    a6 = (int *)v18;
    uint64_t v18 = v58;
    uint64_t v57 = a12;
    uint64_t v50 = a11;
    uint64_t v55 = a7;
    uint64_t v56 = a10;
    a7 = a9;
    uint64_t v26 = qword_1007187C8;
    swift_bridgeObjectRetain();
    if (v26 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v27 = sub_1005E0ED0();
  uint64_t v28 = sub_1003461B0(v27, (uint64_t)qword_1007623A8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v23, v28, v27);
  uint64_t v29 = v52;
  v30.value._countAndFlagsBits = v52;
  v30.value._object = a3;
  v31.id rawValue = AccountLoggerID.init(accountIdentifier:)(v30).rawValue;
  IMAP2Persistence::EngineAndAccountLoggerID v32 = EngineAndAccountLoggerID.init(engine:account:)((IMAP2Tracing::EngineLoggerID)v53, v31);
  uint64_t v33 = &v23[a6[5]];
  char *v33 = v32.engine.id.rawValue;
  *((_DWORD *)v33 + 1) = v32.account.rawValue;
  _OWORD v13[2] = v29;
  v13[3] = a3;
  v13[4] = v54;
  v13[5] = a5;
  v13[6] = v21;
  uint64_t v34 = v56;
  v13[11] = a7;
  v13[12] = v34;
  v13[9] = v18;
  v13[8] = v55;
  uint64_t v35 = v57;
  v13[14] = v50;
  v13[15] = v35;
  uint64_t v36 = (uint64_t)v13 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger;
  v13[18] = _swiftEmptyArrayStorage;
  uint64_t v54 = v23;
  sub_100592E1C((uint64_t)v23, v36, _s14descr1006B99F1V6LoggerVMa);
  uint64_t v53 = a5;
  swift_retain();
  uint64_t v37 = v21;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v38 = (uint64_t)v51;
  sub_1005E0EC0();
  uint64_t v39 = v38 + a6[5];
  *(unsigned char *)uint64_t v39 = v32.engine.id.rawValue;
  *(_DWORD *)(v39 + 4) = v32.account.rawValue;
  sub_100592F1C(v38, (uint64_t)v13 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_actionLogger, _s14descr1006B99F1V6LoggerVMa);
  uint64_t v40 = swift_allocObject();
  swift_weakInit();
  unint64_t v41 = self;
  swift_retain();
  id v42 = [v41 defaultCenter];
  if (qword_1007187B8 != -1) {
    swift_once();
  }
  uint64_t v43 = (void *)qword_100719338;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_100592F84;
  *(void *)(v44 + 24) = v40;
  aBlock[4] = sub_100592FC4;
  aBlock[5] = v44;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10053A22C;
  aBlock[3] = &unk_1006FE920;
  Swift::OpaquePointer v45 = _Block_copy(aBlock);
  id v46 = v43;
  swift_retain();
  swift_release();
  id v47 = [v42 addObserverForName:v46 object:v58 queue:0 usingBlock:v45];
  _Block_release(v45);
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_100592FCC((uint64_t)v54, _s14descr1006B99F1V6LoggerVMa);
  swift_release();
  v13[13] = v47;
  swift_unknownObjectRelease();
  return v13;
}

uint64_t sub_10058BF6C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10058BFC4();
    return swift_release();
  }
  return result;
}

uint64_t sub_10058BFC4()
{
  uint64_t v94 = sub_1005E0ED0();
  uint64_t v1 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v93 = (char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = _s14descr1006B99F1V6LoggerVMa(0);
  uint64_t v75 = *(void *)(v88 - 8);
  uint64_t v3 = __chkstk_darwin(v88);
  uint64_t v87 = (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v73 = (uint64_t)&v65 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v72 = (uint64_t)&v65 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v71 = (uint64_t)&v65 - v10;
  uint64_t v74 = v11;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v65 - v12;
  swift_beginAccess();
  unint64_t v14 = *(void *)(v0 + 144);
  uint64_t v89 = v0;
  uint64_t v86 = v0 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger;
  os_log_type_t v76 = v13;
  uint64_t v15 = (uint64_t)v13;
  unint64_t v16 = v14;
  sub_100592E1C(v0 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, v15, _s14descr1006B99F1V6LoggerVMa);
  if (v16 >> 62) {
    goto LABEL_29;
  }
  uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  unint64_t v68 = v16;
  uint64_t v19 = 0;
  if (v17)
  {
    unint64_t v20 = 0;
    unint64_t v16 = 0;
    unint64_t v70 = v68 & 0xC000000000000001;
    uint64_t v67 = v68 & 0xFFFFFFFFFFFFFF8;
    unint64_t v66 = v68 + 32;
    uint64_t v85 = (void (**)(char *, uint64_t, uint64_t))(v1 + 32);
    uint64_t v84 = (void (**)(char *, uint64_t))(v1 + 8);
    uint64_t v82 = (char *)&v96 + 4;
    uint64_t v81 = (char *)&v96 + 1;
    uint64_t v80 = &v97;
    *(void *)&long long v18 = 68158978;
    long long v79 = v18;
    int64_t v78 = (char *)&type metadata for Any + 8;
    uint64_t v69 = v17;
    do
    {
      if (v70)
      {
        uint64_t v1 = sub_1005E2CF0();
        BOOL v21 = __OFADD__(v20, 1);
        unint64_t v22 = v20 + 1;
        if (v21) {
          goto LABEL_27;
        }
      }
      else
      {
        if (v20 >= *(void *)(v67 + 16)) {
          goto LABEL_28;
        }
        uint64_t v1 = *(void *)(v66 + 8 * v20);
        swift_retain();
        BOOL v21 = __OFADD__(v20, 1);
        unint64_t v22 = v20 + 1;
        if (v21)
        {
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
LABEL_29:
          swift_bridgeObjectRetain();
          uint64_t v17 = sub_1005E2FB0();
          goto LABEL_3;
        }
      }
      unint64_t v77 = v22;
      uint64_t v95 = v19;
      uint64_t v23 = v71;
      sub_100592E1C((uint64_t)v76, v71, _s14descr1006B99F1V6LoggerVMa);
      uint64_t v24 = v72;
      sub_100592E1C(v23, v72, _s14descr1006B99F1V6LoggerVMa);
      unint64_t v25 = (*(unsigned __int8 *)(v75 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v1;
      sub_100592F1C(v23, v26 + v25, _s14descr1006B99F1V6LoggerVMa);
      sub_10000566C(&qword_10071A708);
      uint64_t inited = swift_initStackObject();
      *(void *)(inited + 16) = sub_100593030;
      *(void *)(inited + 24) = v26;
      uint64_t v28 = v73;
      sub_100592E1C(v24, v73, _s14descr1006B99F1V6LoggerVMa);
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = v1;
      sub_100592F1C(v28, v29 + v25, _s14descr1006B99F1V6LoggerVMa);
      sub_10000566C(&qword_100719D48);
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = sub_10057395C;
      *(void *)(v30 + 24) = v29;
      swift_retain();
      swift_retain();
      sub_100592FCC(v24, _s14descr1006B99F1V6LoggerVMa);
      sub_10000566C(&qword_10071A710);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v30;
      swift_release();
      swift_setDeallocating();
      swift_release();
      swift_release();
      sub_1005E3020();
      IMAP2Persistence::AccountLoggerID v31 = v98;
      if (v98)
      {
        uint64_t v1 = v99;
        IMAP2Persistence::EngineAndAccountLoggerID v32 = v100;
        uint64_t v90 = v19;
        do
        {
          uint64_t v33 = (uint64_t *)sub_1005694E4();
          uint64_t v35 = v34;
          uint64_t v95 = v1;
          uint64_t v36 = v86;
          uint64_t v37 = v87;
          sub_100592E1C(v86, v87, _s14descr1006B99F1V6LoggerVMa);
          (*v85)(v93, v37, v94);
          uint64_t v38 = v36 + *(int *)(v88 + 20);
          char v39 = *(unsigned char *)v38;
          int v40 = *(_DWORD *)(v38 + 4);
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          id v92 = v31;
          unint64_t v41 = v31;
          swift_bridgeObjectRetain_n();
          id v42 = v41;
          uint64_t v43 = sub_1005E0EB0();
          os_log_type_t v44 = sub_1005E25C0();
          if (os_log_type_enabled(v43, v44))
          {
            uint64_t v45 = swift_slowAlloc();
            id v46 = (void *)swift_slowAlloc();
            uint64_t v83 = v35;
            uint64_t v98 = v46;
            *(_DWORD *)uint64_t v45 = v79;
            LODWORD(v96) = 2;
            uint64_t v91 = v33;
            sub_1005E2960();
            *(_WORD *)(v45 + 8) = 256;
            LOBYTE(v96) = v39;
            sub_1005E2960();
            *(_WORD *)(v45 + 11) = 1040;
            LODWORD(v96) = 8;
            sub_1005E2960();
            *(_WORD *)(v45 + 17) = 1024;
            LODWORD(v96) = v40;
            sub_1005E2960();
            *(_WORD *)(v45 + 23) = 2048;
            uint64_t v96 = v32[2];
            sub_1005E2960();
            *(_WORD *)(v45 + 33) = 2080;
            LODWORD(v96) = v95;
            sub_100576B28();
            uint64_t v47 = sub_1005E1F20();
            uint64_t v96 = sub_1005904BC(v47, v48, (uint64_t *)&v98);
            uint64_t v49 = v94;
            sub_1005E2960();
            swift_bridgeObjectRelease_n();

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v43, v44, "[%.*hhx-%.*X] Sending deferred messages-to-download reply with %ld message(s). (%s)", (uint8_t *)v45, 0x2Bu);
            swift_arrayDestroy();
            uint64_t v35 = v83;
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v50 = v49;
            uint64_t v33 = v91;
            (*v84)(v93, v50);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            (*v84)(v93, v94);
          }
          uint64_t v51 = swift_allocObject();
          *(void *)(v51 + 16) = v33;
          *(void *)(v51 + 24) = v35;
          *(unsigned char *)(v51 + 32) = 0;
          int64_t v52 = v32[2];
          if (v52)
          {
            uint64_t v98 = _swiftEmptyArrayStorage;
            swift_bridgeObjectRetain();
            sub_100590DA4(0, v52, 0);
            uint64_t v53 = v98;
            uint64_t v91 = v32;
            uint64_t v54 = v32 + 6;
            do
            {
              MessageToDownload.init(message:size:bodyStructure:)();
              int v56 = v55;
              uint64_t v58 = v57;
              __int16 v60 = v59;
              uint64_t v98 = v53;
              unint64_t v62 = v53[2];
              unint64_t v61 = v53[3];
              if (v62 >= v61 >> 1)
              {
                sub_100590DA4(v61 > 1, v62 + 1, 1);
                uint64_t v53 = v98;
              }
              v53[2] = v62 + 1;
              BOOL v63 = &v53[3 * v62];
              *((_DWORD *)v63 + 8) = v56;
              v63[5] = v58;
              *((unsigned char *)v63 + 48) = v60 & 1;
              *((unsigned char *)v63 + 49) = HIBYTE(v60) & 1;
              v54 += 3;
              --v52;
            }
            while (v52);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v53 = _swiftEmptyArrayStorage;
          }
          *(void *)(v51 + 40) = v53;
          (*(void (**)(uint64_t, uint64_t))(v89 + 88))(v51 | 0x5000000000000004, 1);
          swift_release();
          sub_10058FE20(v95);
          swift_bridgeObjectRelease();
          uint64_t v19 = v90;

          sub_1005E3020();
          IMAP2Persistence::AccountLoggerID v31 = v98;
          uint64_t v1 = v99;
          IMAP2Persistence::EngineAndAccountLoggerID v32 = v100;
        }
        while (v98);
      }
      unint64_t v20 = v77;
    }
    while (v77 != v69);
  }
  swift_bridgeObjectRelease();
  sub_100592FCC((uint64_t)v76, _s14descr1006B99F1V6LoggerVMa);
  return swift_release();
}

uint64_t sub_10058C9EC()
{
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100592FCC(v0 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, _s14descr1006B99F1V6LoggerVMa);
  sub_100592FCC(v0 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_actionLogger, _s14descr1006B99F1V6LoggerVMa);
  return v0;
}

uint64_t sub_10058CAB8()
{
  sub_10058C9EC();
  return swift_deallocClassInstance();
}

uint64_t sub_10058CB10()
{
  return type metadata accessor for SearchIndexPersistence();
}

uint64_t type metadata accessor for SearchIndexPersistence()
{
  uint64_t result = qword_10071A4E8;
  if (!qword_10071A4E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10058CB64()
{
  uint64_t result = _s14descr1006B99F1V6LoggerVMa(319);
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_10058CC5C(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005E0ED0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s14descr1006B99F1V6LoggerVMa(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(os_unfair_lock_s **)(v2 + 80);
  swift_retain();
  os_unfair_lock_lock(v10 + 5);
  uint64_t os_unfair_lock_opaque = v10[4]._os_unfair_lock_opaque;
  v10[4]._uint64_t os_unfair_lock_opaque = (os_unfair_lock_opaque + 1) & 0xFFFFFF;
  os_unfair_lock_unlock(v10 + 5);
  swift_release();
  sub_100592E1C(v2 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_actionLogger, (uint64_t)v9, _s14descr1006B99F1V6LoggerVMa);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v9, v4);
  sub_10058D064(a1);
  sub_10058D064(a1);
  uint64_t v12 = sub_1005E0EB0();
  os_log_type_t v13 = sub_1005E25C0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    aBlock[0] = v25;
    *(_DWORD *)uint64_t v14 = 136315394;
    LODWORD(v28) = os_unfair_lock_opaque;
    sub_100576B28();
    unsigned int v27 = os_unfair_lock_opaque;
    uint64_t v15 = sub_1005E1F20();
    uint64_t v26 = v4;
    uint64_t v28 = sub_1005904BC(v15, v16, aBlock);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    char v17 = Action.kind.getter(a1);
    unint64_t v18 = Action.Kind.description.getter(v17);
    uint64_t v28 = sub_1005904BC(v18, v19, aBlock);
    uint64_t os_unfair_lock_opaque = v27;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10058D154(a1);
    sub_10058D154(a1);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s -> %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v26);
  }
  else
  {
    sub_10058D154(a1);
    sub_10058D154(a1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  unint64_t v20 = *(void **)(v2 + 48);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v2;
  *(void *)(v21 + 24) = a1;
  *(_DWORD *)(v21 + 32) = os_unfair_lock_opaque;
  aBlock[4] = (uint64_t)sub_10058D37C;
  aBlock[5] = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10046A1E4;
  aBlock[3] = (uint64_t)&unk_1006FE628;
  uint64_t v22 = os_unfair_lock_opaque;
  uint64_t v23 = _Block_copy(aBlock);
  sub_10058D064(a1);
  swift_retain();
  swift_release();
  [v20 performBlock:v23];
  _Block_release(v23);
  return v22;
}

unint64_t sub_10058D064(unint64_t result)
{
  switch((result >> 58) & 0x3C | (result >> 1) & 3)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x20uLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10058D154(unint64_t result)
{
  switch((result >> 58) & 0x3C | (result >> 1) & 3)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x20uLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10058D244(uint64_t a1, int a2)
{
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 16) = a2;
  (*(void (**)(uint64_t, uint64_t))(a1 + 88))(v4 | 0x1000000000000004, 1);
  return swift_release();
}

uint64_t sub_10058D2BC(uint64_t a1, int a2)
{
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 16) = a2;
  *(unsigned char *)(v4 + 24) = 3;
  *(void *)(v4 + 32) = 0;
  *(unsigned char *)(v4 + 40) = 0;
  (*(void (**)(uint64_t, uint64_t))(a1 + 88))(v4 | 0x1000000000000000, 1);
  return swift_release();
}

uint64_t sub_10058D33C()
{
  swift_release();
  sub_10058D154(*(void *)(v0 + 24));
  return _swift_deallocObject(v0, 36, 7);
}

uint64_t sub_10058D37C()
{
  return sub_10058D3C0(*(void *)(v0 + 24), *(_DWORD *)(v0 + 32));
}

uint64_t sub_10058D3A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10058D3B8()
{
  return swift_release();
}

uint64_t sub_10058D3C0(unint64_t a1, unsigned int a2)
{
  uint64_t v3 = v2;
  unint64_t v43 = a1;
  uint64_t v5 = sub_1005E0ED0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v45 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v35 - v8;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t v12 = _s14descr1006B99F1V6LoggerVMa(0);
  __chkstk_darwin();
  char v39 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v36 = (uint64_t)&v35 - v14;
  __chkstk_darwin();
  unint64_t v16 = (char *)&v35 - v15;
  uint64_t v35 = v3 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_actionLogger;
  sub_100592E1C(v3 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_actionLogger, (uint64_t)&v35 - v15, _s14descr1006B99F1V6LoggerVMa);
  id v42 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v42(v11, v16, v5);
  char v17 = sub_1005E0EB0();
  os_log_type_t v18 = sub_1005E25C0();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v44 = v6;
  uint64_t v37 = v9;
  uint64_t v40 = v12;
  if (v19)
  {
    uint64_t v38 = v3;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v41 = v5;
    uint64_t v21 = (uint8_t *)v20;
    v47[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315138;
    LODWORD(v46) = a2;
    sub_100576B28();
    uint64_t v22 = sub_1005E1F20();
    uint64_t v46 = sub_1005904BC(v22, v23, v47);
    uint64_t v6 = v44;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s -- on context", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v5 = v41;
    swift_slowDealloc();
  }

  uint64_t v24 = *(void (**)(char *, uint64_t))(v6 + 8);
  v24(v11, v5);
  if (sub_10058DBEC(v43, a2))
  {
    uint64_t v25 = v36;
    sub_100592E1C(v35, v36, _s14descr1006B99F1V6LoggerVMa);
    uint64_t v26 = v37;
    v42(v37, (char *)v25, v5);
    unsigned int v27 = sub_1005E0EB0();
    os_log_type_t v28 = sub_1005E25C0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      v47[0] = swift_slowAlloc();
      uint64_t v41 = v5;
      *(_DWORD *)uint64_t v29 = 136315138;
      LODWORD(v46) = a2;
      sub_100576B28();
      uint64_t v30 = sub_1005E1F20();
      uint64_t v46 = sub_1005904BC(v30, v31, v47);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s -- async", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      IMAP2Persistence::EngineAndAccountLoggerID v32 = v37;
      uint64_t v33 = v41;
    }
    else
    {

      IMAP2Persistence::EngineAndAccountLoggerID v32 = v26;
      uint64_t v33 = v5;
    }
    v24(v32, v33);
  }
  else
  {
    sub_10058FE20(a2);
  }
  return sub_10053B32C();
}

uint64_t sub_10058DBEC(unint64_t a1, int a2)
{
  LODWORD(v331) = a2;
  type metadata accessor for Activity(0);
  __chkstk_darwin();
  uint64_t v328 = (uint64_t)&v314 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MessageSectionData(0);
  __chkstk_darwin();
  v329 = (char *)&v314 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E0ED0();
  uint64_t v320 = *(void *)(v5 - 8);
  uint64_t v321 = v5;
  __chkstk_darwin();
  v319 = (char *)&v314 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v316 = _s14descr1006B99F1V6LoggerVMa(0);
  __chkstk_darwin();
  uint64_t v315 = (uint64_t)&v314 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E0970();
  __chkstk_darwin();
  uint64_t v332 = (uint64_t)&v314 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MessageMetadata(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v317 = v9;
  uint64_t v318 = v10;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v314 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C((uint64_t *)&unk_100719790);
  __chkstk_darwin();
  uint64_t v322 = (char *)&v314 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v323 = (uint64_t)&v314 - v14;
  __chkstk_darwin();
  uint64_t v330 = (uint64_t)&v314 - v15;
  __chkstk_darwin();
  uint64_t v324 = (uint64_t)&v314 - v16;
  char v17 = (void *)sub_10000566C(&qword_100718A58);
  uint64_t v325 = *(v17 - 1);
  id v326 = v17;
  __chkstk_darwin();
  BOOL v19 = (char *)&v314 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v327 = (uint64_t)&v314 - v20;
  uint64_t v21 = sub_10000566C(&qword_10071A5F8);
  __chkstk_darwin();
  uint64_t v314 = (uint64_t)&v314 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v24 = (char *)&v314 - v23;
  __chkstk_darwin();
  uint64_t v26 = (char *)&v314 - v25;
  sub_10000566C(&qword_100718A60);
  __chkstk_darwin();
  os_log_type_t v28 = (char *)&v314 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = 0;
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 1uLL:
      (*((void (**)(void, void))v333 + 14))(*(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10), 0);
      return 0;
    case 2uLL:
    case 0xDuLL:
    case 0xFuLL:
    case 0x1AuLL:
    case 0x20uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x29uLL:
      return v29;
    case 3uLL:
      unint64_t v43 = v333;
      uint64_t v44 = v393;
      uint64_t v45 = sub_100593774();
      uint64_t v393 = v44;
      if (v44) {
        return v29;
      }
      uint64_t v46 = (uint64_t)v45;
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = v46;
      uint64_t v48 = v47 | 0x2000000000000000;
      uint64_t v50 = (char *)*((void *)v43 + 11);
      uint64_t v49 = *((void *)v43 + 12);
      swift_bridgeObjectRetain();
      ((void (*)(uint64_t, uint64_t))v50)(v48, 1);
      swift_release();
      int64_t v51 = *(void *)(v46 + 16);
      if (v51)
      {
        uint64_t v332 = v49;
        v333 = v50;
        v335[0] = (uint64_t)_swiftEmptyArrayStorage;
        sub_100590DEC(0, v51, 0);
        int64_t v52 = (void *)v335[0];
        uint64_t v331 = v46;
        uint64_t v53 = (uint64_t *)(v46 + 40);
        do
        {
          uint64_t v54 = *(v53 - 1);
          uint64_t v55 = *v53;
          v335[0] = (uint64_t)v52;
          unint64_t v57 = v52[2];
          unint64_t v56 = v52[3];
          swift_bridgeObjectRetain();
          if (v57 >= v56 >> 1)
          {
            sub_100590DEC(v56 > 1, v57 + 1, 1);
            int64_t v52 = (void *)v335[0];
          }
          v52[2] = v57 + 1;
          uint64_t v58 = &v52[2 * v57];
          v58[4] = v54;
          v58[5] = v55;
          v53 += 12;
          --v51;
        }
        while (v51);
        swift_bridgeObjectRelease();
        uint64_t v50 = v333;
      }
      else
      {
        swift_bridgeObjectRelease();
        int64_t v52 = _swiftEmptyArrayStorage;
      }
      uint64_t v290 = swift_allocObject();
      *(void *)(v290 + 16) = &_swiftEmptySetSingleton;
      *(void *)(v290 + 24) = v52;
      ((void (*)(uint64_t, uint64_t))v50)(v290 | 0x2000000000000004, 1);
      goto LABEL_131;
    case 4uLL:
      uint64_t v59 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v60 = (uint64_t)v333;
      swift_retain();
      uint64_t v61 = v59;
      uint64_t v62 = v393;
      unint64_t v63 = sub_10059294C(v61, v60);
      uint64_t v393 = v62;
      swift_release();
      sub_100593C70(v63);
      goto LABEL_16;
    case 5uLL:
      uint64_t v64 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v65 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      LODWORD(v332) = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      char v66 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x24);
      uint64_t v67 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x28);
      uint64_t v29 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x30);
      uint64_t v68 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x38);
      LODWORD(v331) = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x40);
      uint64_t v69 = v333;
      uint64_t v70 = v393;
      uint64_t v71 = sub_10056913C(v64, v65);
      uint64_t v393 = v70;
      if (v70) {
        return v29;
      }
      uint64_t v72 = (char *)v71;
      (*(void (**)(char *, uint64_t, uint64_t, id))(v325 + 56))(v28, 1, 1, v326);
      sub_10053D614((uint64_t)v72, (uint64_t)v28, *((void *)v69 + 8));
      sub_100007A48((uint64_t)v28, &qword_100718A60);
      v359[3] = v332;
      char v360 = v66;
      uint64_t v361 = v67;
      char v362 = v29;
      uint64_t v363 = v68;
      char v364 = v331;
      uint64_t v365 = 0;
      char v366 = 1;
      goto LABEL_41;
    case 6uLL:
      uint64_t v73 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v74 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v75 = (void (**)(uint64_t, uint64_t))v333;
      uint64_t v76 = swift_bridgeObjectRetain();
      uint64_t v77 = v393;
      uint64_t v78 = sub_10056913C(v76, v74);
      uint64_t v393 = v77;
      if (v77) {
        goto LABEL_120;
      }
      long long v79 = (void *)v78;
      sub_10057AC10((uint64_t)&v336);

      sub_10001FDF0((uint64_t)&v337, (uint64_t)v359, &qword_10071A658);
      sub_10001FDF0((uint64_t)v359, (uint64_t)&v391, &qword_10071A658);
      if (v392)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        return 0;
      }
      uint64_t v80 = v391;
      uint64_t v81 = swift_allocObject();
      *(void *)(v81 + 16) = v73;
      *(void *)(v81 + 24) = v74;
      *(void *)(v81 + 32) = v80;
      uint64_t v82 = 0x3000000000000004;
LABEL_67:
      v75[11](v81 | v82, 1);
      goto LABEL_131;
    case 7uLL:
      uint64_t v83 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      char v84 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x28);
      uint64_t v85 = v393;
      uint64_t v86 = sub_10056913C(*(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10), *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18));
      uint64_t v393 = v85;
      if (v85) {
        return v29;
      }
      id v87 = (id)v86;
      sub_10057AC10((uint64_t)&v338);
      int v367 = v338;
      char v368 = v339;
      uint64_t v369 = v340;
      char v370 = v341;
      uint64_t v371 = v342;
      char v372 = v343;
      uint64_t v373 = v83;
      char v374 = v84;
      goto LABEL_48;
    case 8uLL:
      uint64_t v88 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v89 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v29 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v90 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x28);
      uint64_t v331 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x30);
      uint64_t v332 = v90;
      uint64_t v91 = swift_bridgeObjectRetain();
      uint64_t v92 = v393;
      uint64_t v93 = (void *)sub_10056913C(v91, v89);
      if (v92)
      {
        uint64_t v393 = v92;
        goto LABEL_120;
      }
      uint64_t v254 = v93;
      uint64_t v330 = v89;
      unint64_t v255 = sub_100594028((uint64_t)v26, v93, v29, v332, v331);
      uint64_t v393 = 0;
      unint64_t v291 = v255;

      *(void *)&v26[*(int *)(v21 + 48)] = v291;
      uint64_t v292 = sub_10000566C(&qword_10071A650);
      uint64_t v293 = swift_allocBox();
      uint64_t v295 = v294;
      uint64_t v296 = (uint64_t)v294 + *(int *)(v292 + 48);
      uint64_t v331 = *(int *)(v292 + 64);
      uint64_t v332 = v293;
      uint64_t v297 = v330;
      *uint64_t v294 = v88;
      v294[1] = v297;
      uint64_t v298 = *(int *)(v21 + 48);
      sub_1000079E4((uint64_t)v26, (uint64_t)v24, (uint64_t *)&unk_100719790);
      *(void *)&v24[v298] = v291;
      sub_10001FDF0((uint64_t)v24, v296, (uint64_t *)&unk_100719790);
      uint64_t v299 = *(int *)(v21 + 48);
      uint64_t v300 = v314;
      sub_1000079E4((uint64_t)v26, v314, (uint64_t *)&unk_100719790);
      *(void *)(v300 + v299) = v291;
      uint64_t v301 = v332;
      *(void *)((char *)v295 + v331) = v291;
      (*((void (**)(uint64_t, uint64_t))v333 + 11))(v301 | 0x4000000000000000, 1);
      swift_release();
      sub_100007A48((uint64_t)v26, &qword_10071A5F8);
      uint64_t v209 = v300;
      v302 = (uint64_t *)&unk_100719790;
      goto LABEL_134;
    case 9uLL:
      uint64_t v94 = sub_10000566C(&qword_10071A640);
      uint64_t v95 = (uint64_t *)swift_projectBox();
      uint64_t v96 = *v95;
      uint64_t v97 = v95[1];
      uint64_t v29 = v327;
      sub_1000079E4((uint64_t)v95 + *(int *)(v94 + 48), v327, &qword_100718A58);
      uint64_t v98 = (void (**)(uint64_t, uint64_t))v333;
      uint64_t v99 = swift_bridgeObjectRetain();
      uint64_t v100 = v393;
      uint64_t v101 = sub_10056913C(v99, v97);
      if (v100)
      {
        uint64_t v393 = v100;
        sub_100007A48(v29, &qword_100718A58);
        goto LABEL_120;
      }
      uint64_t v256 = (void *)v101;
      uint64_t v257 = v324;
      sub_100594520(v324);
      uint64_t v393 = 0;

      uint64_t v303 = sub_10000566C(&qword_10071A648);
      uint64_t v304 = swift_allocBox();
      uint64_t v306 = (uint64_t)v305 + *(int *)(v303 + 48);
      uint64_t v307 = (uint64_t)v305 + *(int *)(v303 + 64);
      void *v305 = v96;
      v305[1] = v97;
      sub_1000079E4(v257, v306, (uint64_t *)&unk_100719790);
      sub_1000079E4(v29, v307, &qword_100718A58);
      v98[11](v304 | 0x4000000000000004, 1);
      swift_release();
      sub_100007A48(v257, (uint64_t *)&unk_100719790);
      uint64_t v209 = v29;
      goto LABEL_132;
    case 0xAuLL:
      uint64_t v102 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v103 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v29 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v104 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x28);
      int v105 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x30);
      unint64_t v106 = (void *)*((void *)v333 + 6);
      uint64_t v107 = v393;
      uint64_t v108 = sub_10056913C(v102, v103);
      uint64_t v393 = v107;
      if (v107) {
        return v29;
      }
      uint64_t v72 = (char *)v108;
      uint64_t v109 = *(char **)(v29 + 16);
      if (v109)
      {
        LODWORD(v323) = v105;
        uint64_t v324 = v104;
        uint64_t v110 = _s14descr1006B9AE9V7MessageCMa();
        uint64_t v327 = *(int *)(v317 + 36);
        uint64_t v328 = v110;
        uint64_t v111 = v29 + ((*(unsigned __int8 *)(v318 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v318 + 80));
        uint64_t v325 = *(void *)(v318 + 72);
        id v326 = v106;
        uint64_t v322 = (char *)v29;
        swift_bridgeObjectRetain();
        v329 = v72;
        do
        {
          v333 = v109;
          sub_100592E1C(v111, (uint64_t)v12, type metadata accessor for MessageMetadata);
          LODWORD(v331) = *(_DWORD *)v12;
          uint64_t v112 = 256;
          if (!v12[17]) {
            uint64_t v112 = 0;
          }
          uint64_t v113 = v112 | v12[16];
          uint64_t v114 = 0x10000;
          if (!v12[18]) {
            uint64_t v114 = 0;
          }
          uint64_t v115 = 0x1000000;
          if (!v12[19]) {
            uint64_t v115 = 0;
          }
          uint64_t v116 = Flags.init(_:)(v113 | v114 | v115 | ((unint64_t)v12[20] << 32) | ((unint64_t)v12[21] << 40) | ((unint64_t)v12[22] << 48) | ((unint64_t)v12[23] << 56));
          char v118 = v117;
          uint64_t v330 = *(void *)&v12[v327];
          uint64_t v119 = *((void *)v12 + 1);
          id v120 = v326;
          int64_t v121 = v72;
          sub_100592FCC((uint64_t)v12, type metadata accessor for MessageMetadata);
          uint64_t v122 = v332;
          ServerMessageDate.date.getter(v119, v332);
          unint64_t v123 = v116 & 0xFFFF010101010101;
          uint64_t v124 = v333;

          uint64_t v72 = v329;
          v111 += v325;
          uint64_t v109 = v124 - 1;
        }
        while (v109);
        swift_bridgeObjectRelease();
        uint64_t v104 = v324;
        LOBYTE(v105) = v323;
      }
      if (v105) {
        goto LABEL_123;
      }
      sub_10057AC10((uint64_t)&v344);
      int v375 = v344;
      char v376 = v345;
      uint64_t v377 = v104;
      char v378 = 0;
      uint64_t v379 = v346;
      char v380 = v347;
      uint64_t v381 = v348;
      char v382 = v349;
LABEL_41:
      sub_10058B8E0();
      goto LABEL_123;
    case 0xBuLL:
      uint64_t v125 = sub_10000566C(&qword_10071A638);
      uint64_t v126 = (uint64_t *)swift_projectBox();
      uint64_t v127 = *v126;
      uint64_t v128 = v126[1];
      sub_1000079E4((uint64_t)v126 + *(int *)(v125 + 48), (uint64_t)v19, &qword_100718A58);
      uint64_t v29 = (uint64_t)v333;
      uint64_t v129 = v393;
      uint64_t v130 = sub_10056913C(v127, v128);
      uint64_t v393 = v129;
      if (v129)
      {
        sub_100007A48((uint64_t)v19, &qword_100718A58);
        return v29;
      }
      uint64_t v258 = (void *)v130;
      sub_1000079E4((uint64_t)v19, (uint64_t)v28, &qword_100718A58);
      (*(void (**)(char *, void, uint64_t, id))(v325 + 56))(v28, 0, 1, v326);
      sub_10053D614((uint64_t)v258, (uint64_t)v28, *(void *)(v29 + 64));
      sub_100007A48((uint64_t)v28, &qword_100718A60);

      uint64_t v209 = (uint64_t)v19;
LABEL_132:
      v302 = &qword_100718A58;
      goto LABEL_134;
    case 0xCuLL:
      uint64_t v131 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v132 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x28);
      char v133 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x30);
      uint64_t v134 = v393;
      uint64_t v135 = sub_10056913C(*(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10), *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18));
      uint64_t v393 = v134;
      if (!v134)
      {
        uint64_t v136 = (void *)v135;
        sub_100594878(v135, v131, v132, v133);

        return 0;
      }
      return v29;
    case 0xEuLL:
    case 0x21uLL:
      uint64_t v30 = v393;
      unint64_t v31 = (void *)sub_10056913C(*(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10), *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18));
      uint64_t v393 = v30;
      if (!v30)
      {

        return 0;
      }
      return v29;
    case 0x10uLL:
      uint64_t v137 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v138 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v139 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      char v140 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x28);
      uint64_t v141 = *((void *)v333 + 2);
      uint64_t v142 = *((void *)v333 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v87 = (id)sub_100568A48(v141, v142, v137, v138);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v87) {
        goto LABEL_56;
      }
      sub_10057AC10((uint64_t)&v350);
      int v383 = v350;
      char v384 = v351;
      uint64_t v385 = v352;
      char v386 = v353;
      uint64_t v387 = v139;
      char v388 = v140;
      uint64_t v389 = v354;
      char v390 = v355;
LABEL_48:
      sub_10058B8E0();
      goto LABEL_62;
    case 0x11uLL:
      uint64_t v143 = sub_10000566C(&qword_10071A630);
      uint64_t v144 = swift_projectBox();
      uint64_t v145 = *(void *)v144;
      uint64_t v146 = *(void *)(v144 + 8);
      LODWORD(v332) = *(unsigned __int8 *)(v144 + 16);
      uint64_t v147 = v144 + *(int *)(v143 + 64);
      uint64_t v148 = *(void *)(v144 + *(int *)(v143 + 96));
      uint64_t v149 = v330;
      sub_1000079E4(v147, v330, (uint64_t *)&unk_100719790);
      uint64_t v29 = (uint64_t)v333;
      uint64_t v150 = swift_bridgeObjectRetain();
      uint64_t v151 = v393;
      uint64_t v152 = (void *)sub_10056913C(v150, v146);
      uint64_t v393 = v151;
      if (v151)
      {
        sub_100007A48(v149, (uint64_t *)&unk_100719790);
        goto LABEL_120;
      }
      uint64_t v259 = v152;
      sub_10059C62C(v152, v332, v149, v148, v331, (uint64_t)v356);

      sub_100592BB4((uint64_t)v356, (uint64_t)v357);
      if (v358)
      {
        uint64_t v260 = v357[0];
        uint64_t v261 = swift_allocObject();
        *(void *)(v261 + 16) = v145;
        *(void *)(v261 + 24) = v146;
        *(unsigned char *)(v261 + 32) = v332;
        *(void *)(v261 + 40) = v260;
        uint64_t v262 = v261 | 0x5000000000000004;
        uint64_t v263 = *(void (**)(uint64_t, uint64_t))(v29 + 88);
        swift_bridgeObjectRetain();
        v263(v262, 1);
        swift_release();
        sub_100592C64((uint64_t)v356);
        v302 = (uint64_t *)&unk_100719790;
        uint64_t v209 = v149;
        goto LABEL_134;
      }
      v329 = (char *)v357[0];
      uint64_t v332 = v357[1];
      v274 = (char *)v357[2];
      swift_bridgeObjectRelease();
      uint64_t v275 = v29 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger;
      uint64_t v276 = v315;
      sub_100592E1C(v29 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, v315, _s14descr1006B99F1V6LoggerVMa);
      uint64_t v278 = v319;
      uint64_t v277 = v320;
      uint64_t v279 = v276;
      uint64_t v280 = v321;
      (*(void (**)(char *, uint64_t, uint64_t))(v320 + 32))(v319, v279, v321);
      uint64_t v281 = v275 + *(int *)(v316 + 20);
      char v282 = *(unsigned char *)v281;
      int v283 = *(_DWORD *)(v281 + 4);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v284 = sub_1005E0EB0();
      os_log_type_t v285 = sub_1005E25C0();
      if (os_log_type_enabled(v284, v285))
      {
        uint64_t v286 = swift_slowAlloc();
        v335[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v286 = 68159490;
        LODWORD(v334) = 2;
        v333 = v274;
        sub_1005E2960();
        *(_WORD *)(v286 + 8) = 256;
        LOBYTE(v334) = v282;
        sub_1005E2960();
        *(_WORD *)(v286 + 11) = 1040;
        LODWORD(v334) = 8;
        sub_1005E2960();
        *(_WORD *)(v286 + 17) = 1024;
        LODWORD(v334) = v283;
        sub_1005E2960();
        *(_WORD *)(v286 + 23) = 2080;
        LODWORD(v334) = v331;
        sub_100576B28();
        uint64_t v287 = sub_1005E1F20();
        uint64_t v334 = sub_1005904BC(v287, v288, v335);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v286 + 33) = 2048;
        uint64_t v334 = (uint64_t)v329;
        sub_1005E2960();
        *(_WORD *)(v286 + 43) = 2048;
        uint64_t v334 = v332;
        sub_1005E2960();
        *(_WORD *)(v286 + 53) = 1024;
        if (v333 == (char *)(int)v333) {
          int v289 = (int)v333;
        }
        else {
          int v289 = 0;
        }
        LODWORD(v334) = v289;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v284, v285, "[%.*hhx-%.*X] (%s) Deferring returning messages-to-download. Queue is full: %ld of %ld items, queued memory pressure %{iec-bytes}d", (uint8_t *)v286, 0x3Bu);
        uint64_t v29 = 1;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v320 + 8))(v319, v321);
        sub_100007A48(v330, (uint64_t *)&unk_100719790);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v277 + 8))(v278, v280);
        sub_100007A48(v330, (uint64_t *)&unk_100719790);
        return 1;
      }
      return v29;
    case 0x12uLL:
      uint64_t v153 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v154 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      int v155 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v29 = (uint64_t)v333;
      uint64_t v156 = swift_bridgeObjectRetain();
      uint64_t v157 = v393;
      uint64_t v158 = (void *)sub_10056913C(v156, v154);
      if (v157)
      {
        uint64_t v393 = v157;
        goto LABEL_120;
      }
      uint64_t v264 = v158;
      uint64_t v265 = v323;
      sub_100594A38(v158, v155, v323);
      uint64_t v393 = 0;

      uint64_t v308 = sub_10000566C(&qword_10071A628);
      uint64_t v309 = swift_allocBox();
      v311 = v310;
      uint64_t v312 = (uint64_t)v310 + *(int *)(v308 + 48);
      uint64_t v313 = *(int *)(v308 + 64);
      void *v311 = v153;
      v311[1] = v154;
      sub_1000079E4(v265, v312, (uint64_t *)&unk_100719790);
      *(void *)((char *)v311 + v313) = v155;
      (*(void (**)(uint64_t, uint64_t))(v29 + 88))(v309 | 0x5000000000000000, 1);
      swift_release();
      uint64_t v209 = v265;
LABEL_133:
      v302 = (uint64_t *)&unk_100719790;
LABEL_134:
      sub_100007A48(v209, v302);
      return 0;
    case 0x13uLL:
      uint64_t v159 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v160 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      char v161 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x1C);
      uint64_t v29 = *(unsigned int *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      sub_10001FDF0((a1 & 0xFFFFFFFFFFFFFF9) + 40, (uint64_t)v335, &qword_10071A618);
      uint64_t v162 = (void (**)(uint64_t, uint64_t))v333;
      uint64_t v163 = *((void *)v333 + 2);
      uint64_t v164 = *((void *)v333 + 3);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_100370DFC((uint64_t)v335, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AAE4);
      uint64_t v165 = (void *)sub_100568A48(v163, v164, v159, v160);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v165)
      {
        sub_10000566C(&qword_10071A620);
        uint64_t v166 = swift_allocObject();
        *(_OWORD *)(v166 + 16) = xmmword_1005F6670;
        *(void *)(v166 + 32) = _swiftEmptyArrayStorage;

        uint64_t v167 = swift_allocObject();
        *(void *)(v167 + 16) = v159;
        *(_DWORD *)(v167 + 24) = v160;
        *(unsigned char *)(v167 + 28) = v161;
        *(_DWORD *)(v167 + 32) = v29;
        *(void *)(v167 + 40) = v166;
        *(unsigned char *)(v167 + 48) = 0;
        v162[11](v167 | 0x6000000000000000, 1);
        swift_release();
        sub_100370DFC((uint64_t)v335, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10006133C);
        return 0;
      }
      sub_100590B14();
      uint64_t v266 = swift_allocError();
      *(void *)uint64_t v267 = v159;
      *(_DWORD *)(v267 + 8) = v160;
      swift_bridgeObjectRetain();
      uint64_t v393 = v266;
      swift_willThrow();
      sub_100370DFC((uint64_t)v335, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10006133C);
      goto LABEL_120;
    case 0x14uLL:
      uint64_t v168 = swift_projectBox();
      uint64_t v137 = *(void *)v168;
      int v138 = *(_DWORD *)(v168 + 8);
      uint64_t v169 = *((void *)v333 + 2);
      uint64_t v170 = *((void *)v333 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v87 = (id)sub_100568A48(v169, v170, v137, v138);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v87) {
        goto LABEL_62;
      }
LABEL_56:
      sub_100590B14();
      uint64_t v171 = swift_allocError();
      *(void *)uint64_t v172 = v137;
      *(_DWORD *)(v172 + 8) = v138;
      goto LABEL_117;
    case 0x15uLL:
      uint64_t v173 = swift_projectBox();
      uint64_t v29 = (uint64_t)v329;
      sub_100592E1C(v173, (uint64_t)v329, type metadata accessor for MessageSectionData);
      uint64_t v174 = *(void *)v29;
      int v175 = *(_DWORD *)(v29 + 8);
      uint64_t v176 = (uint64_t)v333;
      uint64_t v177 = *((void *)v333 + 2);
      uint64_t v178 = *((void *)v333 + 3);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v72 = (char *)sub_100568A48(v177, v178, v174, v175);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v72)
      {
        sub_100590B14();
        uint64_t v268 = swift_allocError();
        *(void *)uint64_t v269 = v174;
        *(_DWORD *)(v269 + 8) = v175;
        swift_bridgeObjectRetain();
        uint64_t v393 = v268;
        swift_willThrow();
        sub_100592FCC(v29, type metadata accessor for MessageSectionData);
        goto LABEL_120;
      }
      swift_bridgeObjectRelease();
      uint64_t v179 = *(unsigned int *)(v29 + 12);
      __chkstk_darwin();
      *(&v314 - 4) = v29;
      *(&v314 - 3) = v176;
      *(&v314 - 2) = (uint64_t)v72;
      swift_beginAccess();
      uint64_t v180 = v393;
      sub_10058B254((uint64_t)v72, v179, (void (*)(char *))sub_100592B8C, (uint64_t)(&v314 - 6));
      uint64_t v393 = v180;
      if (v180)
      {
        swift_endAccess();
        sub_100592FCC(v29, type metadata accessor for MessageSectionData);
      }
      else
      {
        swift_endAccess();
        sub_100592FCC(v29, type metadata accessor for MessageSectionData);
LABEL_123:

        return 0;
      }
      return v29;
    case 0x16uLL:
      uint64_t v181 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v182 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      int v183 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v184 = (uint64_t)v333;
      uint64_t v185 = *((void *)v333 + 2);
      uint64_t v186 = *((void *)v333 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v187 = (void *)sub_100568A48(v185, v186, v181, v182);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v187)
      {
        swift_beginAccess();
        swift_retain();
        id v87 = v187;
        uint64_t v188 = v393;
        sub_10056AD78((uint64_t)v87, v183, (char *)(v184 + 128), v184, v183, (uint64_t)v87);
        uint64_t v393 = v188;
        swift_endAccess();
        goto LABEL_62;
      }
      sub_100590B14();
      uint64_t v171 = swift_allocError();
      *(void *)uint64_t v270 = v181;
      *(_DWORD *)(v270 + 8) = v182;
LABEL_117:
      swift_bridgeObjectRetain();
      uint64_t v393 = v171;
      swift_willThrow();
      return v29;
    case 0x17uLL:
      uint64_t v189 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      uint64_t v190 = v393;
      uint64_t v191 = sub_10056913C(*(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10), *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18));
      if (v190)
      {
        uint64_t v393 = v190;
      }
      else
      {
        id v87 = (id)v191;
        sub_10059CA24(v191, v189);
        uint64_t v393 = 0;
LABEL_62:

        return 0;
      }
      return v29;
    case 0x18uLL:
      uint64_t v192 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v193 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v75 = (void (**)(uint64_t, uint64_t))v333;
      uint64_t v194 = swift_bridgeObjectRetain();
      uint64_t v195 = v393;
      uint64_t v196 = (void *)sub_10056913C(v194, v193);
      uint64_t v393 = v195;
      if (v195) {
        goto LABEL_120;
      }

      uint64_t v81 = swift_allocObject();
      *(void *)(v81 + 16) = v192;
      *(void *)(v81 + 24) = v193;
      *(void *)(v81 + 32) = _swiftEmptyArrayStorage;
      *(unsigned char *)(v81 + 40) = 1;
      uint64_t v82 = 0x7000000000000004;
      goto LABEL_67;
    case 0x19uLL:
      uint64_t v197 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v198 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v199 = (void (**)(unint64_t, uint64_t))v333;
      uint64_t v200 = swift_bridgeObjectRetain();
      uint64_t v201 = v393;
      uint64_t v202 = sub_10056913C(v200, v198);
      uint64_t v393 = v201;
      if (v201) {
        goto LABEL_120;
      }
      v203 = (void *)v202;
      uint64_t v204 = (uint64_t)v322;
      sub_10059244C((uint64_t)_swiftEmptyArrayStorage);

      uint64_t v205 = sub_10000566C(&qword_10071A610);
      uint64_t v206 = swift_allocBox();
      uint64_t v208 = (uint64_t)v207 + *(int *)(v205 + 48);
      *uint64_t v207 = v197;
      v207[1] = v198;
      sub_1000079E4(v204, v208, (uint64_t *)&unk_100719790);
      v199[11](v206 | 0x8000000000000000, 1);
      swift_release();
      uint64_t v209 = v204;
      goto LABEL_133;
    case 0x1BuLL:
      uint64_t v210 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v211 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v212 = (void (**)(uint64_t, uint64_t))v333;
      uint64_t v213 = *((void *)v333 + 2);
      uint64_t v214 = *((void *)v333 + 3);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v215 = (void *)sub_100568A48(v213, v214, v210, v211);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v215) {
        goto LABEL_104;
      }

      uint64_t v216 = swift_allocObject();
      *(void *)(v216 + 16) = v210;
      *(_DWORD *)(v216 + 24) = v211;
      *(void *)(v216 + 32) = _swiftEmptyArrayStorage;
      *(unsigned char *)(v216 + 40) = 1;
      v212[11](v216 | 0x6000000000000004, 1);
      goto LABEL_131;
    case 0x1CuLL:
      uint64_t v217 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v218 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v219 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      unint64_t v220 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x28);
      uint64_t v221 = *((void *)v333 + 2);
      uint64_t v29 = *((void *)v333 + 3);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_100008D24(v219, v220);
      os_log_t v222 = (void *)sub_100568A48(v221, v29, v217, v218);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v222)
      {
        sub_100590B78();
        uint64_t v393 = swift_allocError();
        swift_willThrow();
        swift_bridgeObjectRelease();
        sub_1000094D4(v219, v220);
      }
      else
      {
        sub_100590B14();
        uint64_t v271 = swift_allocError();
        *(void *)uint64_t v272 = v217;
        *(_DWORD *)(v272 + 8) = v218;
        swift_bridgeObjectRetain();
        uint64_t v393 = v271;
        swift_willThrow();
        sub_1000094D4(v219, v220);
LABEL_120:
        swift_bridgeObjectRelease();
      }
      return v29;
    case 0x1DuLL:
    case 0x1EuLL:
      uint64_t v32 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v33 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v34 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x20);
      unint64_t v35 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x28);
      uint64_t v36 = *((void *)v333 + 2);
      uint64_t v29 = *((void *)v333 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100008D24(v34, v35);
      uint64_t v37 = (void *)sub_100568A48(v36, v29, v32, v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v37)
      {

        sub_1000094D4(v34, v35);
        return 0;
      }
      else
      {
        sub_100590B14();
        uint64_t v252 = swift_allocError();
        *(void *)uint64_t v253 = v32;
        *(_DWORD *)(v253 + 8) = v33;
        swift_bridgeObjectRetain();
        uint64_t v393 = v252;
        swift_willThrow();
        sub_1000094D4(v34, v35);
      }
      return v29;
    case 0x1FuLL:
      uint64_t v223 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v224 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v225 = swift_allocObject();
      *(void *)(v225 + 16) = v223;
      *(_DWORD *)(v225 + 24) = v224;
      *(void *)(v225 + 32) = _swiftEmptyArrayStorage;
      *(unsigned char *)(v225 + 40) = 1;
      uint64_t v226 = (void (*)(unint64_t, uint64_t))*((void *)v333 + 11);
      swift_bridgeObjectRetain();
      v226(v225 | 0x8000000000000004, 1);
      goto LABEL_131;
    case 0x24uLL:
      uint64_t v227 = swift_projectBox();
      uint64_t v228 = v328;
      sub_100592E1C(v227, v328, type metadata accessor for Activity);
      sub_1005950F4(v228);
      sub_100592FCC(v228, type metadata accessor for Activity);
      return 0;
    case 0x25uLL:
      uint64_t v229 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v230 = v229 + 64;
      uint64_t v231 = 1 << *(unsigned char *)(v229 + 32);
      uint64_t v232 = -1;
      if (v231 < 64) {
        uint64_t v232 = ~(-1 << v231);
      }
      uint64_t v29 = v232 & *(void *)(v229 + 64);
      int64_t v233 = (unint64_t)(v231 + 63) >> 6;
      swift_bridgeObjectRetain();
      int64_t v234 = 0;
      uint64_t v235 = v393;
      if (v29) {
        goto LABEL_79;
      }
      break;
    case 0x28uLL:
      uint64_t v210 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      int v211 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v244 = (void (**)(unint64_t, uint64_t))v333;
      uint64_t v245 = *((void *)v333 + 2);
      uint64_t v246 = *((void *)v333 + 3);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v247 = (void *)sub_100568A48(v245, v246, v210, v211);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v247)
      {
        unint64_t v248 = sub_10058AA94((uint64_t)_swiftEmptyArrayStorage);

        uint64_t v249 = swift_allocObject();
        *(void *)(v249 + 16) = v210;
        *(_DWORD *)(v249 + 24) = v211;
        *(void *)(v249 + 32) = v248;
        v244[11](v249 | 0xA000000000000000, 1);
        goto LABEL_131;
      }
LABEL_104:
      sub_100590B14();
      uint64_t v250 = swift_allocError();
      *(void *)uint64_t v251 = v210;
      *(_DWORD *)(v251 + 8) = v211;
      uint64_t v393 = v250;
      swift_willThrow();
      return v29;
    case 0x2AuLL:
      sub_100595774(*(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10), *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18));
      return 0;
    case 0x2BuLL:
      if (a1 != 0xA000000000000006) {
        sub_1005934C8();
      }
      return 0;
    default:
      int v38 = *(_DWORD *)(a1 + 16);
      char v39 = (void (*)(uint64_t (*)(uint64_t), uint64_t))*((void *)v333 + 4);
      uint64_t v40 = swift_allocObject();
      swift_weakInit();
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v40;
      int v42 = v331;
      *(_DWORD *)(v41 + 24) = v38;
      *(_DWORD *)(v41 + 28) = v42;
      swift_retain();
      v39(sub_100592DBC, v41);
      swift_release();
      swift_release();
      return 1;
  }
LABEL_80:
  if (__OFADD__(v234++, 1))
  {
    __break(1u);
    goto LABEL_137;
  }
  if (v234 >= v233) {
    goto LABEL_107;
  }
  unint64_t v239 = *(void *)(v230 + 8 * v234);
  if (v239) {
    goto LABEL_90;
  }
  int64_t v240 = v234 + 1;
  if (v234 + 1 >= v233)
  {
LABEL_107:
    uint64_t v393 = v235;
LABEL_131:
    swift_release();
    return 0;
  }
  unint64_t v239 = *(void *)(v230 + 8 * v240);
  if (!v239)
  {
    int64_t v240 = v234 + 2;
    if (v234 + 2 >= v233) {
      goto LABEL_107;
    }
    unint64_t v239 = *(void *)(v230 + 8 * v240);
    if (!v239)
    {
      int64_t v240 = v234 + 3;
      if (v234 + 3 < v233)
      {
        unint64_t v239 = *(void *)(v230 + 8 * v240);
        if (v239) {
          goto LABEL_89;
        }
        while (1)
        {
          int64_t v234 = v240 + 1;
          if (__OFADD__(v240, 1)) {
            break;
          }
          if (v234 >= v233) {
            goto LABEL_107;
          }
          unint64_t v239 = *(void *)(v230 + 8 * v234);
          ++v240;
          if (v239) {
            goto LABEL_90;
          }
        }
LABEL_137:
        __break(1u);
        JUMPOUT(0x10058FD70);
      }
      goto LABEL_107;
    }
  }
LABEL_89:
  int64_t v234 = v240;
LABEL_90:
  uint64_t v29 = (v239 - 1) & v239;
  for (unint64_t i = __clz(__rbit64(v239)) + (v234 << 6); ; unint64_t i = v236 | (v234 << 6))
  {
    uint64_t v241 = *(void *)(*(void *)(v229 + 48) + 16 * i + 8);
    uint64_t v242 = swift_bridgeObjectRetain();
    uint64_t v243 = (void *)sub_10056913C(v242, v241);
    if (v235) {
      break;
    }

    swift_bridgeObjectRelease();
    if (!v29) {
      goto LABEL_80;
    }
LABEL_79:
    unint64_t v236 = __clz(__rbit64(v29));
    v29 &= v29 - 1;
  }
  uint64_t v393 = v235;
  swift_bridgeObjectRelease();
  swift_release();
  return v29;
}

uint64_t sub_10058FE20(unsigned int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005E0ED0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s14descr1006B99F1V6LoggerVMa(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100592E1C(v2 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_actionLogger, (uint64_t)v10, _s14descr1006B99F1V6LoggerVMa);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  uint64_t v11 = sub_1005E0EB0();
  os_log_type_t v12 = sub_1005E25C0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v18 = v2;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    char v17 = v13 + 4;
    LODWORD(v19) = a1;
    sub_100576B28();
    uint64_t v14 = sub_1005E1F20();
    uint64_t v19 = sub_1005904BC(v14, v15, &v20);
    sub_1005E2960();
    uint64_t v2 = v18;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s <- complete", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(void, void))(v2 + 88))(a1, 0);
}

uint64_t sub_1005900C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1005E0ED0();
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v35 = v8;
  __chkstk_darwin();
  int v33 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s14descr1006B99F1V6LoggerVMa(0);
  __chkstk_darwin();
  os_log_type_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)a1;
  int v14 = *(_DWORD *)(a1 + 8);
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t v16 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_100568A48(v15, v16, v13, v14);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v17)
  {
    unint64_t v31 = a3;
    uint64_t v32 = 0;
    uint64_t v30 = v4;
    uint64_t v19 = a2 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger;
    sub_100592E1C(v19, (uint64_t)v12, _s14descr1006B99F1V6LoggerVMa);
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v33, v12, v35);
    uint64_t v20 = v19 + *(int *)(v10 + 20);
    char v21 = *(unsigned char *)v20;
    int v22 = *(_DWORD *)(v20 + 4);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_1005E0EB0();
    os_log_type_t v24 = sub_1005E25A0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v38 = v29;
      *(_DWORD *)uint64_t v25 = 68158979;
      LODWORD(v36) = 2;
      sub_1005E2960();
      *(_WORD *)(v25 + 8) = 256;
      LOBYTE(v36) = v21;
      sub_1005E2960();
      *(_WORD *)(v25 + 11) = 1040;
      LODWORD(v36) = 8;
      sub_1005E2960();
      *(_WORD *)(v25 + 17) = 1024;
      LODWORD(v36) = v22;
      sub_1005E2960();
      *(_WORD *)(v25 + 23) = 2160;
      uint64_t v36 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v25 + 33) = 2085;
      uint64_t v36 = v13;
      int v37 = v14;
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1005E1CC0();
      uint64_t v36 = sub_1005904BC(v26, v27, &v38);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "[%.*hhx-%.*X] Unknown mailbox '%{sensitive,mask.mailbox}s' got de-selected. Ignoring.", (uint8_t *)v25, 0x2Bu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v33, v35);
    a3 = v31;
    uint64_t v17 = v32;
  }
  *a3 = v17;
  return result;
}

uint64_t sub_1005904BC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100590590(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1000D65AC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000D65AC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_100590590(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1005E2970();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_10059074C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1005E2D30();
  if (!v8)
  {
    sub_1005E2F10();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1005E3000();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_10059074C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_1005907E4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1005909C4(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1005909C4(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_1005907E4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10059095C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1005E2C90();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1005E2F10();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1005E1E80();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_1005E3000();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1005E2F10();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_10059095C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10000566C(&qword_100719918);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  long long v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1005909C4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100719918);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

unint64_t sub_100590B14()
{
  unint64_t result = qword_10071A600;
  if (!qword_10071A600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A600);
  }
  return result;
}

uint64_t sub_100590B68()
{
  return sub_1005925B8(40);
}

uint64_t sub_100590B70()
{
  return sub_1005925B8(41);
}

unint64_t sub_100590B78()
{
  unint64_t result = qword_10071A608;
  if (!qword_10071A608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A608);
  }
  return result;
}

uint64_t sub_100590BCC()
{
  return sub_1005925B8(41);
}

uint64_t sub_100590BD4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100590E0C(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100590BF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100590F90(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100590C14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005910FC(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100590C34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10059125C(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100590C54(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005913C8(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_100590C74(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100591550(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100590C94(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005916BC(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_100590CB4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100591858(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_100590CD4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005919E4(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_100590CF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100591B8C(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100590D14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2174(a1, a2, a3, *v3, &qword_10071A730);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100590D3C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2174(a1, a2, a3, *v3, &qword_10071A750);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100590D64(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100591E80(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100590D84(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100591FF0(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100590DA4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2E8C(a1, a2, a3, *v3, &qword_10071A698);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100590DCC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100592158(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100590DEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005922E0(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100590E0C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10071A728);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[80 * v8]) {
      memmove(v12, v13, 80 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[80 * v8] || v12 >= &v13[80 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100590F90(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100719D50);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  int v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1005910FC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10071A678);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  int v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10059125C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10071A6A8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  int v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1005913C8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10071A6D8);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    long long v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 4;
  int v14 = a4 + 4;
  size_t v15 = 4 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v10 + 4, a4 + 4, v15 * 8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    sub_10000566C(&qword_10071A6E0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100591550(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10071A6B8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  int v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1005916BC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10071A6F0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    long long v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 4;
  uint64_t v13 = a4 + 4;
  size_t v14 = 3 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_10000566C(&qword_10071A6F8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100591858(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100719D30);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    long long v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 4;
  size_t v14 = a4 + 4;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v10 + 4, a4 + 4, v8 << 6);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    sub_10000566C(&qword_100719D38);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1005919E4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10071A6C8);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    long long v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_10000566C(&qword_10071A6D0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100591B8C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10071A6C0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100591D18(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100719078);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = 16 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100591E80(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10071A680);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 96 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    memcpy(v12, v13, v14);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100591FF0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10071A748);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = 32 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100592158(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10071A668);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 96 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1005922D4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1000A2E8C(a1, a2, a3, a4, &qword_100719D00);
}

uint64_t sub_1005922E0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10071A660);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10059244C(uint64_t a1)
{
  sub_10053E98C();
  sub_1005E3680();
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_10053E938();
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v2; ++i)
    {
      v7[0] = *(void *)(a1 + 8 * i + 32);
      Range<>.init<A>(_:)((uint64_t)v7, (uint64_t)&type metadata for UID);
      void v7[4] = v4;
      if (HIDWORD(v4) != v4)
      {
        sub_10000566C(&qword_100719A68);
        size_t v5 = (void (*)(void *, void))sub_1005E3620();
        sub_10000566C(&qword_100718A78);
        sub_1005E35D0();
        v5(v7, 0);
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1005925B0()
{
  return sub_1005925B8(41);
}

uint64_t sub_1005925B8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v1, a1, 7);
}

unint64_t sub_100592604(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000566C(&qword_10071A688);
    unint64_t v3 = (void *)sub_1005E2FF0();
    for (uint64_t i = (_OWORD *)(a1 + 48); ; i += 5)
    {
      Swift::UInt v5 = *((void *)i - 2);
      uint64_t v6 = *((void *)i - 1);
      long long v15 = i[1];
      long long v16 = *i;
      long long v13 = i[3];
      long long v14 = i[2];
      unint64_t result = sub_1005A02A4(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      uint64_t v9 = v3[7] + 72 * result;
      *(void *)uint64_t v9 = v6;
      *(_OWORD *)(v9 + 8) = v16;
      *(_OWORD *)(v9 + 24) = v15;
      *(_OWORD *)(v9 + 40) = v14;
      *(_OWORD *)(v9 + 56) = v13;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_100592720(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_10000566C(&qword_100719A78);
  unint64_t v3 = (void *)sub_1005E2FF0();
  Swift::UInt32 v4 = *(_DWORD *)(a1 + 32);
  Swift::UInt v5 = *(void **)(a1 + 40);
  unint64_t result = sub_1003F6668(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v16 = v5;
    return (unint64_t)v3;
  }
  char v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v12 = v8 + 2;
    Swift::UInt32 v4 = *((_DWORD *)v8 - 2);
    long long v13 = (void *)*v8;
    id v14 = v5;
    unint64_t result = sub_1003F6668(v4);
    char v8 = v12;
    Swift::UInt v5 = v13;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_10059281C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_10000566C(&qword_10071A670);
  unint64_t v3 = (void *)sub_1005E2FF0();
  uint64_t v4 = *(void *)(a1 + 32);
  unsigned int v5 = *(_DWORD *)(a1 + 40);
  uint64_t v6 = *(void **)(a1 + 48);
  unint64_t result = sub_100024264(v4, v5);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    id v19 = v6;
    return (unint64_t)v3;
  }
  uint64_t v9 = (void *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = v3[6] + 16 * result;
    *(void *)uint64_t v10 = v4;
    *(_DWORD *)(v10 + 8) = v5;
    *(void *)(v3[7] + 8 * result) = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    id v14 = v9 + 3;
    uint64_t v15 = *(v9 - 2);
    unsigned int v5 = *((_DWORD *)v9 - 2);
    id v16 = (void *)*v9;
    swift_bridgeObjectRetain();
    id v17 = v6;
    unint64_t result = sub_100024264(v15, v5);
    uint64_t v9 = v14;
    uint64_t v6 = v16;
    uint64_t v4 = v15;
    if (v18) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10059294C(uint64_t a1, uint64_t a2)
{
  unint64_t v22 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v5 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 56);
  int64_t v18 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v10 >= v18) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v10);
    if (!v14) {
      break;
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_19:
    uint64_t v16 = *(void *)(a1 + 48) + 16 * v12;
    uint64_t v17 = *(void *)v16;
    LODWORD(v16) = *(_DWORD *)(v16 + 8);
    uint64_t v20 = v17;
    int v21 = v16;
    swift_bridgeObjectRetain();
    sub_1005900C0((uint64_t)&v20, a2, &v19);
    if (v2)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v19)
    {
      sub_1005E20A0();
      if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1005E2110();
      }
      sub_1005E2170();
      uint64_t result = sub_1005E20E0();
    }
  }
  int64_t v15 = v10 + 1;
  if (v10 + 1 >= v18) {
    goto LABEL_29;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  int64_t v15 = v10 + 2;
  if (v10 + 2 >= v18) {
    goto LABEL_29;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  int64_t v15 = v10 + 3;
  if (v10 + 3 >= v18) {
    goto LABEL_29;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  int64_t v15 = v10 + 4;
  if (v10 + 4 >= v18)
  {
LABEL_29:
    swift_release();
    return v22;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
LABEL_17:
    int64_t v10 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v18) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_100592B8C(uint64_t a1)
{
  sub_100596D9C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_100592BAC()
{
  return sub_100592C18(49);
}

uint64_t sub_100592BB4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100592C10()
{
  return sub_100592C18(48);
}

uint64_t sub_100592C18(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_100592C64(uint64_t a1)
{
  return a1;
}

uint64_t sub_100592C9C()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100592CD4()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100592D0C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100592D4C()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100592D84()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100592DBC(uint64_t a1)
{
  return sub_100595D94(a1, *(void *)(v1 + 16), *(_DWORD *)(v1 + 24), *(_DWORD *)(v1 + 28));
}

unint64_t sub_100592DC8()
{
  unint64_t result = qword_10071A690;
  if (!qword_10071A690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A690);
  }
  return result;
}

uint64_t sub_100592E1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100592E84()
{
  swift_release();
  return _swift_deallocObject(v0, 28, 7);
}

uint64_t sub_100592EBC()
{
  return sub_10058D244(*(void *)(v0 + 16), *(_DWORD *)(v0 + 24));
}

uint64_t sub_100592EC8()
{
  return _swift_deallocObject(v0, 20, 7);
}

uint64_t sub_100592ED8()
{
  return sub_10058D2BC(*(void *)(v0 + 16), *(_DWORD *)(v0 + 24));
}

uint64_t sub_100592EE4()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100592F1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100592F84()
{
  return sub_10058BF6C();
}

uint64_t sub_100592F8C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100592FC4(uint64_t a1)
{
  return sub_10055E638(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_100592FCC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100593030@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(_s14descr1006B99F1V6LoggerVMa(0) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_100570978(v4, v5, a1);
}

uint64_t sub_1005930A8()
{
  uint64_t v1 = *(void *)(_s14descr1006B99F1V6LoggerVMa(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1005931A4(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1005E2FB0())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a3 & 0xC000000000000001) != 0 ? (id)sub_1005E2CF0() : *(id *)(a3 + 8 * v6);
      unint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v15 = v7;
      char v10 = a1(&v15);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v12 & 1;
      }
      char v11 = v10;

      if (v11)
      {
        swift_bridgeObjectRelease();
        char v12 = 1;
        return v12 & 1;
      }
      ++v6;
      if (v9 == v5) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  char v12 = 0;
  return v12 & 1;
}

uint64_t sub_1005932DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  NSString v5 = sub_1005E1BD0();
  id v6 = [a1 primitiveValueForKey:v5];

  if (v6)
  {
    sub_1005E2A70();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_10001FDF0((uint64_t)v18, (uint64_t)&v19, &qword_100718900);
  if (!*((void *)&v20 + 1))
  {
    uint64_t result = sub_100007A48((uint64_t)&v19, &qword_100718900);
    goto LABEL_9;
  }
  sub_1003C8730(0, &qword_1007190A0);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_9:
    unint64_t v12 = 0;
    uint64_t v13 = 0;
    goto LABEL_10;
  }
  sub_10057B4DC();
  id v8 = v17;
  uint64_t v9 = sub_1005E08A0();
  unint64_t v11 = v10;

  sub_10059BB34();
  sub_1005E03C0();
  if (!v2)
  {

    sub_1000094D4(v9, v11);
    uint64_t result = swift_release();
    char v15 = 0;
    long long v14 = v19;
    long long v16 = v20;
    uint64_t v13 = v21;
    unint64_t v12 = v22 | ((unint64_t)v23 << 32);
    goto LABEL_11;
  }
  swift_errorRelease();

  sub_1000094D4(v9, v11);
  uint64_t result = swift_release();
  unint64_t v12 = 0;
  uint64_t v13 = 0;
LABEL_10:
  long long v14 = 0uLL;
  char v15 = 1;
  long long v16 = 0uLL;
LABEL_11:
  *(_OWORD *)a2 = v14;
  *(_OWORD *)(a2 + 16) = v16;
  *(void *)(a2 + 32) = v13;
  *(_DWORD *)(a2 + 40) = v12;
  *(unsigned char *)(a2 + 44) = BYTE4(v12);
  *(unsigned char *)(a2 + 45) = v15;
  return result;
}

uint64_t sub_1005934C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E0ED0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  NSString v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s14descr1006B99F1V6LoggerVMa(0) - 8;
  __chkstk_darwin();
  id v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger;
  sub_10059C99C(v1 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, (uint64_t)v8, _s14descr1006B99F1V6LoggerVMa);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  unint64_t v10 = (char *)(v9 + *(int *)(v6 + 28));
  char v11 = *v10;
  int v12 = *((_DWORD *)v10 + 1);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v13 = sub_1005E0EB0();
  os_log_type_t v14 = sub_1005E25A0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 68158464;
    int v19 = 2;
    sub_1005E2960();
    *(_WORD *)(v15 + 8) = 256;
    char v18 = v11;
    sub_1005E2960();
    *(_WORD *)(v15 + 11) = 1040;
    v17[1] = 8;
    sub_1005E2960();
    *(_WORD *)(v15 + 17) = 1024;
    v17[0] = v12;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%.*hhx-%.*X] Credentials are invalid. Marking server as temporarily unavailable.", (uint8_t *)v15, 0x17u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 112))(1, 2);
}

void *sub_100593774()
{
  sub_100595E98();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_100596158(v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_10059ACD4(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_10059E340(v4);
  if (v0)
  {
    swift_release();
LABEL_26:
    swift_beginAccess();
    sub_1005700F0();
    swift_endAccess();
    return v1;
  }
  unint64_t v6 = v5;
  swift_release();
  if (v6 >> 62) {
    goto LABEL_24;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v1 = _swiftEmptyArrayStorage;
    goto LABEL_26;
  }
  while (1)
  {
    uint64_t v47 = _swiftEmptyArrayStorage;
    sub_100590DCC(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0) {
      break;
    }
    uint64_t v8 = 0;
    uint64_t v1 = v47;
    unint64_t v41 = v6;
    unint64_t v42 = v6 & 0xC000000000000001;
    uint64_t v9 = &selRef_persistentStoreCoordinator;
    uint64_t v40 = v7;
    while (v7 != v8)
    {
      if (v42) {
        id v10 = (id)sub_1005E2CF0();
      }
      else {
        id v10 = *(id *)(v6 + 8 * v8 + 32);
      }
      id v11 = v10;
      NSString v12 = sub_1005E1BD0();
      objc_msgSend(v11, v9[111], v12);

      id v13 = [v11 primitiveName];
      if (v13)
      {
        id v14 = v13;
        sub_10059BA20(v14);
        v16._id rawValue = v15;

        NIOIMAPCore2::MailboxName v56 = MailboxName.init(_:)(v16);
        id rawValue = v56.bytes._rawValue;
        Swift::UInt32 value = v56._hashValue._value;
      }
      else
      {
        id rawValue = 0;
        Swift::UInt32 value = 0;
      }
      NSString v18 = sub_1005E1BD0();
      [v11 didAccessValueForKey:v18];

      if (!rawValue)
      {
        sub_10059B7BC();
        swift_allocError();
        swift_willThrow();

        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_26;
      }
      NSString v19 = sub_1005E1BD0();
      objc_msgSend(v11, v9[111], v19);

      sub_1005932DC(v11, (uint64_t)v48);
      uint64_t v44 = (uint64_t)rawValue;
      unint64_t v21 = v48[0];
      uint64_t v20 = v48[1];
      char v22 = v49;
      uint64_t v55 = v50;
      char v23 = v51;
      NSString v24 = sub_1005E1BD0();
      [v11 didAccessValueForKey:v24];

      sub_10001FDF0((uint64_t)v48, (uint64_t)v54, &qword_10071A0D8);
      uint64_t v45 = v1;
      if (v54[45])
      {
        LODWORD(v21) = 0;
        uint64_t v43 = 0;
        uint64_t v55 = 0;
        LOBYTE(v25) = 1;
        char v26 = 1;
        char v27 = 1;
      }
      else
      {
        uint64_t v43 = v20;
        uint64_t v25 = HIDWORD(v21) & 1;
        char v26 = v22 & 1;
        char v27 = v23 & 1;
      }
      id v28 = sub_1005694E4();
      uint64_t v30 = v29;

      MailboxOfInterest.init(id:name:uidValidity:fetchedWindow:highestModificationSequenceValue:localModification:latestLocalChange:)((uint64_t)v28, v30, v44, value, v21 | ((unint64_t)v25 << 32), v43, v26, v55, (uint64_t)v52, v27, 0, 0, v39, 0, 1);
      uint64_t v1 = v45;
      uint64_t v47 = v45;
      unint64_t v32 = v45[2];
      unint64_t v31 = v45[3];
      if (v32 >= v31 >> 1)
      {
        sub_100590DCC(v31 > 1, v32 + 1, 1);
        uint64_t v1 = v47;
      }
      ++v8;
      v1[2] = v32 + 1;
      int v33 = &v1[12 * v32];
      long long v34 = v52[1];
      _OWORD v33[2] = v52[0];
      uint64_t v33[3] = v34;
      long long v35 = v52[2];
      long long v36 = v52[3];
      long long v37 = v53[0];
      *(_OWORD *)((char *)v33 + 105) = *(_OWORD *)((char *)v53 + 9);
      v33[5] = v36;
      v33[6] = v37;
      v33[4] = v35;
      uint64_t v7 = v40;
      unint64_t v6 = v41;
      uint64_t v9 = &selRef_persistentStoreCoordinator;
      if (v40 == v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_25;
    }
  }
  __break(1u);
  uint64_t result = [&v47 didAccessValueForKey:sub_1005E1BD0()];
  __break(1u);
  return result;
}

uint64_t sub_100593C70(unint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = 0;
  uint64_t v4 = sub_100599788((uint64_t (*)(unint64_t))sub_10059BBD8);
  int64_t v5 = *(void *)(v1[16] + 16);
  if (v5 < v4)
  {
    __break(1u);
  }
  else
  {
    sub_100573234(v4, v5);
    swift_endAccess();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_10059C078(v1 + 18, a1);
    swift_bridgeObjectRelease();
    unint64_t v6 = v1[18];
    if (!(v6 >> 62))
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v7 >= v3) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
LABEL_30:
      swift_bridgeObjectRetain();
      uint64_t result = sub_1005E2FB0();
      uint64_t v8 = result;
      if (result) {
        goto LABEL_6;
      }
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1005E2FB0();
  swift_bridgeObjectRelease();
  if (v7 < v3) {
    goto LABEL_29;
  }
LABEL_4:
  sub_100572F58(v3, v7);
  swift_endAccess();
  if (a1 >> 62) {
    goto LABEL_30;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v8) {
    return swift_bridgeObjectRelease();
  }
LABEL_6:
  if (v8 >= 1)
  {
    uint64_t v10 = 0;
    id v28 = v1 + 19;
    uint64_t v27 = v8;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v11 = (id)sub_1005E2CF0();
      }
      else {
        id v11 = *(id *)(a1 + 8 * v10 + 32);
      }
      NSString v12 = v11;
      id v13 = [v11 objectID];
      id v14 = [v13 entity];
      id v15 = [v14 name];

      if (!v15) {
        goto LABEL_8;
      }
      uint64_t v16 = sub_1005E1C00();
      uint64_t v18 = v17;

      if (v16 == 0x786F626C69616DLL && v18 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v20 = sub_1005E3290();
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0) {
          goto LABEL_8;
        }
      }
      if (([v13 isTemporaryID] & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        unint64_t v21 = sub_1005A0398(v13);
        char v23 = v22;
        swift_bridgeObjectRelease();
        NSString v24 = 0;
        if (v23)
        {
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v26 = *v28;
          uint64_t v29 = *v28;
          *id v28 = 0x8000000000000000;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_1005A4BE8();
            uint64_t v26 = v29;
          }

          NSString v24 = *(void **)(*(void *)(v26 + 56) + 24 * v21);
          sub_10059A710(v21, v26);
          *id v28 = v26;
          swift_bridgeObjectRelease();
        }
        swift_endAccess();

        sub_10059C568(v24);
        uint64_t v8 = v27;
        goto LABEL_9;
      }
LABEL_8:

LABEL_9:
      ++v10;

      if (v8 == v10) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100594028(uint64_t a1, void *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_10000566C((uint64_t *)&unk_100719790);
  __chkstk_darwin();
  id v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = (unint64_t)sub_100596894(a2, a3, a4, a5);
  if (!v5)
  {
    uint64_t v16 = v15;
    if (result >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_1005E2FB0();
      swift_bridgeObjectRelease();
      if (!v42) {
        goto LABEL_23;
      }
    }
    else if (!*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_23;
    }
    if (v16 >= 1)
    {
      id v17 = objc_allocWithZone((Class)NSFetchRequest);
      NSString v18 = sub_1005E1BD0();
      id v19 = [v17 initWithEntityName:v18];

      sub_10000566C(&qword_100719060);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1005F6670;
      sub_1003C8730(0, &qword_100719068);
      Class isa = sub_1005E20B0().super.isa;
      swift_bridgeObjectRelease();
      *(void *)(v20 + 56) = sub_1003C8730(0, &qword_10071A780);
      *(void *)(v20 + 32) = isa;
      NSString v22 = sub_1005E1BD0();
      Class v23 = sub_1005E20B0().super.isa;
      swift_bridgeObjectRelease();
      id v24 = [self predicateWithFormat:v22 argumentArray:v23];

      uint64_t v25 = v19;
      [v19 setPredicate:v24];

      sub_10053E98C();
      sub_1005E3680();
      id v49 = 0;
      id v26 = [v19 execute:&v49];
      id v27 = v49;
      if (!v26)
      {
        id v41 = v49;
        sub_1005E06F0();

        swift_willThrow();
        return sub_100007A48((uint64_t)v13, (uint64_t *)&unk_100719790);
      }
      id v28 = v26;
      id v43 = v25;
      uint64_t v45 = a1;
      uint64_t v46 = 0;
      _s14descr1006B9AE9V7MessageCMa();
      unint64_t v29 = sub_1005E20C0();
      id v30 = v27;

      uint64_t v44 = v16;
      uint64_t v47 = v11;
      if (v29 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v31 = sub_1005E2FB0();
        swift_bridgeObjectRelease();
        if (v31) {
          goto LABEL_8;
        }
      }
      else
      {
        uint64_t v31 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v31)
        {
LABEL_8:
          if (v31 < 1) {
            __break(1u);
          }
          for (uint64_t i = 0; i != v31; ++i)
          {
            if ((v29 & 0xC000000000000001) != 0) {
              id v33 = (id)sub_1005E2CF0();
            }
            else {
              id v33 = *(id *)(v29 + 8 * i + 32);
            }
            long long v34 = v33;
            NSString v35 = sub_1005E1BD0();
            [v34 willAccessValueForKey:v35];

            id v36 = [v34 primitiveUid];
            if (v36)
            {
              long long v37 = v36;
              uint64_t v38 = (char *)[v36 longLongValue];

              BOOL v39 = (unint64_t)(v38 - 0x100000000) < 0xFFFFFFFF00000001;
              if ((unint64_t)(v38 - 0x100000000) < 0xFFFFFFFF00000001) {
                LODWORD(v38) = 0;
              }
            }
            else
            {
              LODWORD(v38) = 0;
              BOOL v39 = 1;
            }
            NSString v40 = sub_1005E1BD0();
            [v34 didAccessValueForKey:v40];

            if (!v39)
            {
              int v48 = (int)v38;
              MessageIdentifierSet.insert(_:)();
            }
          }
        }
      }

      swift_bridgeObjectRelease();
      sub_10001FDF0((uint64_t)v13, v45, (uint64_t *)&unk_100719790);
      return v44;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    sub_10053E98C();
    sub_1005E3680();
    return 0;
  }
  return result;
}

void sub_100594520(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v2 = sub_10000566C((uint64_t *)&unk_100719790);
  __chkstk_darwin();
  uint64_t v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = sub_10057ADA8();
  sub_10000566C(&qword_100719060);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005F6670;
  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 32) = 6580597;
  *(void *)(v6 + 40) = 0xE300000000000000;
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  [v5 setPropertiesToFetch:isa];

  id v8 = sub_1005C207C();
  [v5 appendPredicate:v8];

  [v5 setFetchBatchSize:1000];
  _s14descr1006B9AE9V7MessageCMa();
  sub_1005E27B0();
  if (v1) {
    goto LABEL_15;
  }
  uint64_t v25 = v2;
  v9.super.Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t)[(objc_class *)v9.super.isa count];
  sub_10053E98C();
  sub_1005E3680();
  uint64_t v11 = v24;
  if (!v10)
  {
LABEL_14:
    sub_10001FDF0((uint64_t)v4, v11, (uint64_t *)&unk_100719790);

LABEL_15:
    return;
  }
  if (v10 >= 1)
  {
    v22[1] = 0;
    id v23 = v5;
    id v26 = v4;
    v22[0] = v9.super.isa;
    uint64_t v12 = v9.super.isa;
    for (uint64_t i = 0; i != v10; ++i)
    {
      id v14 = [(objc_class *)v12 objectAtIndex:i];
      sub_1005E2A70();
      swift_unknownObjectRelease();
      swift_dynamicCast();
      uint64_t v15 = v27;
      NSString v16 = sub_1005E1BD0();
      [v15 willAccessValueForKey:v16];

      id v17 = [v15 primitiveUid];
      if (v17)
      {
        NSString v18 = v17;
        id v19 = (char *)[v17 longLongValue];

        BOOL v20 = (unint64_t)(v19 - 0x100000000) < 0xFFFFFFFF00000001;
        if ((unint64_t)(v19 - 0x100000000) < 0xFFFFFFFF00000001) {
          LODWORD(v19) = 0;
        }
      }
      else
      {
        LODWORD(v19) = 0;
        BOOL v20 = 1;
      }
      NSString v21 = sub_1005E1BD0();
      [v15 didAccessValueForKey:v21];

      if (!v20)
      {
        LODWORD(v27) = v19;
        MessageIdentifierSet.insert(_:)();
      }
    }
    id v5 = v23;
    uint64_t v11 = v24;
    uint64_t v4 = v26;
    v9.super.Class isa = (Class)v22[0];
    goto LABEL_14;
  }
  __break(1u);
}

void sub_100594878(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_10000566C(&qword_100718A60);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = a2;
  sub_10053E938();
  Range<>.init<A>(_:)((uint64_t)v19, (uint64_t)&type metadata for UID);
  v19[0] = v11;
  sub_10053E98C();
  sub_1005E36A0();
  uint64_t v12 = sub_10000566C(&qword_100718A58);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  sub_10053D614(a1, (uint64_t)v10, *(void *)(v4 + 64));
  sub_100007A48((uint64_t)v10, &qword_100718A60);
  if (a4)
  {
    if (!a3) {
      return;
    }
    sub_10057AC10((uint64_t)&v13);
    a3 = 0;
  }
  else
  {
    sub_10057AC10((uint64_t)&v13);
  }
  LODWORD(v19[0]) = v13;
  BYTE4(v19[0]) = v14;
  v19[1] = a3;
  char v20 = a4 & 1;
  uint64_t v21 = v15;
  char v22 = v16;
  uint64_t v23 = v17;
  char v24 = v18;
  sub_10058B8E0();
}

void sub_100594A38(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v67 = sub_10000566C((uint64_t *)&unk_100719790);
  __chkstk_darwin();
  uint64_t v68 = (uint64_t)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1005E0ED0();
  uint64_t v10 = *(void *)(v65 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s14descr1006B99F1V6LoggerVMa(0);
  __chkstk_darwin();
  char v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = a1;
  char v16 = sub_1005B9D78([v15 objectID]);

  id v66 = v16;
  if (!v16)
  {
    sub_10059244C((uint64_t)_swiftEmptyArrayStorage);
    return;
  }
  uint64_t v63 = v4;
  id v64 = a2;
  uint64_t v62 = a3;
  uint64_t v17 = (uint64_t *)(v5 + 152);
  swift_beginAccess();
  uint64_t v18 = *(void *)(v5 + 152);
  if (*(void *)(v18 + 16))
  {
    id v19 = v66;
    unint64_t v20 = sub_1005A0398(v19);
    if (v21)
    {
      uint64_t v22 = *(void *)(v18 + 56) + 24 * v20;
      uint64_t v23 = *(void **)v22;
      id v61 = *(id *)(v22 + 8);
      uint64_t v24 = *(void *)(v22 + 16);
      swift_endAccess();
      id v25 = v23;
      swift_retain();

      if (v61 == v64)
      {
        uint64_t v26 = v24;
        id v27 = v25;
        goto LABEL_36;
      }
      swift_release();

      goto LABEL_9;
    }
  }
  swift_endAccess();
LABEL_9:
  id v28 = *(void **)(v5 + 48);
  sub_10059C99C(v5 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, (uint64_t)v14, _s14descr1006B99F1V6LoggerVMa);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v14, v65);
  id v29 = v15;
  id v30 = v28;
  id v31 = sub_10057EBA0(v30, v29, (uint64_t)v64, (uint64_t)v12);
  id v61 = v32;
  unint64_t v34 = v33;
  uint64_t v35 = *(void *)(v5 + 152);
  unint64_t v36 = *(void *)(v35 + 16);
  id v64 = v31;
  uint64_t v65 = v34;
  swift_retain();
  if (v36 < 5)
  {
LABEL_35:
    swift_beginAccess();
    id v48 = v66;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v69 = *v17;
    *uint64_t v17 = 0x8000000000000000;
    id v27 = v64;
    uint64_t v26 = v65;
    sub_10059AA24((uint64_t)v64, (uint64_t)v61, v65, v48, isUniquelyReferenced_nonNull_native);
    *uint64_t v17 = v69;

    swift_bridgeObjectRelease();
    swift_endAccess();
LABEL_36:
    unint64_t v34 = sub_10057EDE0(v26);
    sub_10053E98C();
    sub_1005E3680();
    id v64 = v27;
    uint64_t v65 = v26;
    if (v34 >> 62) {
      goto LABEL_55;
    }
    uint64_t v50 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v50) {
      goto LABEL_56;
    }
    goto LABEL_38;
  }
  while (1)
  {
    unint64_t v37 = *(void *)(v35 + 64);
    if (v37)
    {
      uint64_t v38 = 0;
LABEL_12:
      unint64_t v39 = __clz(__rbit64(v37)) + (v38 << 6);
      goto LABEL_13;
    }
    uint64_t v43 = *(unsigned __int8 *)(v35 + 32);
    unsigned int v44 = v43 & 0x3F;
    unint64_t v39 = 1 << v43;
    if (v44 >= 7)
    {
      unint64_t v37 = *(void *)(v35 + 72);
      if (v37)
      {
        uint64_t v38 = 1;
        goto LABEL_12;
      }
      if (v44 >= 8)
      {
        unint64_t v37 = *(void *)(v35 + 80);
        if (v37)
        {
          uint64_t v38 = 2;
          goto LABEL_12;
        }
        unint64_t v37 = *(void *)(v35 + 88);
        if (v37)
        {
          uint64_t v38 = 3;
          goto LABEL_12;
        }
        uint64_t v45 = 0;
        unint64_t v46 = (v39 + 63) >> 6;
        if (v46 <= 4) {
          unint64_t v46 = 4;
        }
        unint64_t v47 = v46 - 4;
        while (v47 != v45)
        {
          unint64_t v37 = *(void *)(v35 + 96 + 8 * v45++);
          if (v37)
          {
            uint64_t v38 = v45 + 3;
            goto LABEL_12;
          }
        }
      }
    }
LABEL_13:
    int v40 = *(_DWORD *)(v35 + 36);
    swift_beginAccess();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v69 = *v17;
      *uint64_t v17 = 0x8000000000000000;
      sub_1005A4BE8();
      *uint64_t v17 = v69;
      swift_bridgeObjectRelease();
    }
    if ((v39 & 0x8000000000000000) != 0) {
      break;
    }
    uint64_t v41 = *v17;
    if ((uint64_t)v39 >= 1 << *(unsigned char *)(*v17 + 32)) {
      break;
    }
    if (((*(void *)(v41 + 8 * (v39 >> 6) + 64) >> v39) & 1) == 0) {
      goto LABEL_53;
    }
    if (v40 != *(_DWORD *)(v41 + 36)) {
      goto LABEL_54;
    }
    *uint64_t v17 = 0x8000000000000000;
    uint64_t v42 = *(void **)(*(void *)(v41 + 48) + 8 * v39);
    unint64_t v34 = *(void *)(*(void *)(v41 + 56) + 24 * v39);
    sub_10059A710(v39, v41);
    *uint64_t v17 = v41;
    swift_endAccess();

    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v35 = *v17;
    if (*(void *)(*v17 + 16) <= 4uLL) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  swift_bridgeObjectRetain();
  uint64_t v50 = sub_1005E2FB0();
  if (!v50)
  {
LABEL_56:
    swift_bridgeObjectRelease();
    sub_10001FDF0(v68, v62, (uint64_t *)&unk_100719790);
    swift_bridgeObjectRelease();

    swift_release();
    return;
  }
LABEL_38:
  if (v50 >= 1)
  {
    for (uint64_t i = 0; i != v50; ++i)
    {
      if ((v34 & 0xC000000000000001) != 0) {
        id v52 = (id)sub_1005E2CF0();
      }
      else {
        id v52 = *(id *)(v34 + 8 * i + 32);
      }
      uint64_t v53 = v52;
      NSString v54 = sub_1005E1BD0();
      [v53 willAccessValueForKey:v54];

      id v55 = [v53 primitiveUid];
      if (v55)
      {
        NIOIMAPCore2::MailboxName v56 = v55;
        unint64_t v57 = (char *)[v55 longLongValue];

        BOOL v58 = (unint64_t)(v57 - 0x100000000) < 0xFFFFFFFF00000001;
        if ((unint64_t)(v57 - 0x100000000) < 0xFFFFFFFF00000001) {
          LODWORD(v57) = 0;
        }
      }
      else
      {
        LODWORD(v57) = 0;
        BOOL v58 = 1;
      }
      NSString v59 = sub_1005E1BD0();
      [v53 didAccessValueForKey:v59];

      if (!v58)
      {
        LODWORD(v69) = v57;
        MessageIdentifierSet.insert(_:)();
      }
    }
    goto LABEL_56;
  }
  __break(1u);
}

uint64_t sub_1005950F4(uint64_t a1)
{
  uint64_t v3 = sub_1005E0970();
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  __chkstk_darwin();
  unint64_t v47 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v48 = (char *)&v46 - v5;
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  __chkstk_darwin();
  id v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s14descr1006B99F1V6LoggerVMa(0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_10071A790);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v17 = (unsigned __int8 *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Activity(0);
  sub_1000079E4(a1 + *(int *)(v18 + 24), (uint64_t)v13, &qword_10071A790);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1) {
    return sub_100007A48((uint64_t)v13, &qword_10071A790);
  }
  sub_10059CCE4((uint64_t)v13, (uint64_t)v17, type metadata accessor for ConnectionStatus.Error);
  int v20 = *v17;
  uint64_t result = sub_10059CD4C((uint64_t)v17, type metadata accessor for ConnectionStatus.Error);
  if (v20 == 2 && (*(unsigned char *)(v1 + 160) & 1) == 0)
  {
    *(unsigned char *)(v1 + 160) = 1;
    uint64_t v21 = v1 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger;
    sub_10059C99C(v1 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, (uint64_t)v11, _s14descr1006B99F1V6LoggerVMa);
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v8, v11, v52);
    uint64_t v22 = (char *)(v21 + *(int *)(v9 + 20));
    char v23 = *v22;
    int v24 = *((_DWORD *)v22 + 1);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    id v25 = sub_1005E0EB0();
    os_log_type_t v26 = sub_1005E25C0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 68158464;
      LODWORD(v53) = 2;
      sub_1005E2960();
      *(_WORD *)(v27 + 8) = 256;
      LOBYTE(v53) = v23;
      sub_1005E2960();
      *(_WORD *)(v27 + 11) = 1040;
      LODWORD(v53) = 8;
      sub_1005E2960();
      *(_WORD *)(v27 + 17) = 1024;
      LODWORD(v53) = v24;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "[%.*hhx-%.*X] Server temporarily unavailable.", (uint8_t *)v27, 0x17u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v52);
    id v28 = *(void **)(v1 + 56);
    if (v28)
    {
      id v29 = *(id *)(v1 + 56);
    }
    else
    {
      id v30 = sub_10053942C(*(void *)(v1 + 16), *(void *)(v1 + 24));
      id v31 = *(void **)(v1 + 56);
      *(void *)(v1 + 56) = v30;
      id v29 = v30;

      id v28 = 0;
    }
    uint64_t v33 = v49;
    uint64_t v32 = v50;
    unint64_t v34 = v48;
    id v35 = v28;
    unint64_t v53 = sub_100578CC4();
    sub_1005E0960();
    unint64_t v36 = v47;
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v47, v34, v32);
    sub_1005E08F0();
    double v38 = round(v37 / 21600.0);
    unint64_t v39 = *(uint64_t (**)(char *, uint64_t))(v33 + 8);
    uint64_t result = v39(v36, v32);
    if ((~*(void *)&v38 & 0x7FF0000000000000) == 0) {
      goto LABEL_14;
    }
    if (v38 <= -9.22337204e18)
    {
      __break(1u);
    }
    else if (v38 < 9.22337204e18)
    {
      sub_1005BCCBC((uint64_t)v38, &v53);
LABEL_14:
      v39(v34, v32);
      NSString v40 = sub_1005E1BD0();
      [v29 willChangeValueForKey:v40];

      uint64_t v41 = sub_1005BA900();
      unint64_t v43 = v42;
      Class isa = sub_1005E0890().super.isa;
      sub_1000094D4(v41, v43);
      [v29 setPrimitiveDataUsage:isa];

      NSString v45 = sub_1005E1BD0();
      [v29 didChangeValueForKey:v45];

      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 112))(1, 2);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100595774(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  _s14descr1006B99F1V6LoggerVMa(0);
  __chkstk_darwin();
  uint64_t v56 = (uint64_t)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0970();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  BOOL v58 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  NSString v59 = (char *)&v55 - v10;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v55 - v11;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v55 - v13;
  uint64_t v15 = (void *)v2[7];
  uint64_t v60 = v2;
  if (v15)
  {
    id v16 = v15;
  }
  else
  {
    id v17 = sub_10053942C(v2[2], v2[3]);
    uint64_t v18 = (void *)v2[7];
    v3[7] = v17;
    id v16 = v17;

    uint64_t v15 = 0;
  }
  id v19 = v15;
  v61[0] = sub_100578CC4();
  sub_1005E0960();
  unint64_t v57 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v57(v12, v14, v7);
  sub_1005E08F0();
  double v21 = round(v20 / 21600.0);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t result = v22(v12, v7);
  if ((~*(void *)&v21 & 0x7FF0000000000000) == 0) {
    goto LABEL_8;
  }
  if (v21 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v21 >= 9.22337204e18)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  sub_1005BD24C((uint64_t)v21, v61, a1, a2);
LABEL_8:
  v22(v14, v7);
  NSString v24 = sub_1005E1BD0();
  [v16 willChangeValueForKey:v24];

  uint64_t v25 = sub_1005BA900();
  unint64_t v27 = v26;
  Class isa = sub_1005E0890().super.isa;
  sub_1000094D4(v25, v27);
  [v16 setPrimitiveDataUsage:isa];

  NSString v29 = sub_1005E1BD0();
  [v16 didChangeValueForKey:v29];

  swift_bridgeObjectRelease();
  id v30 = v60;
  id v31 = (void *)v60[7];
  if (v31)
  {
    id v32 = (id)v60[7];
  }
  else
  {
    id v33 = sub_10053942C(v60[2], v60[3]);
    unint64_t v34 = (void *)v30[7];
    v30[7] = v33;
    id v32 = v33;

    id v31 = 0;
  }
  id v35 = v31;
  unint64_t v36 = sub_100578CC4();

  double v37 = v59;
  sub_1005E0960();
  double v38 = v58;
  v57(v58, v37, v7);
  sub_1005E08F0();
  double v40 = round(v39 / 21600.0);
  uint64_t result = v22(v38, v7);
  if ((~*(void *)&v40 & 0x7FF0000000000000) == 0)
  {
    v22(v37, v7);
    return swift_bridgeObjectRelease();
  }
  if (v40 <= -9.22337204e18) {
    goto LABEL_26;
  }
  if (v40 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
    return result;
  }
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = (uint64_t)v40;
  v61[0] = v36;
  v61[1] = (unint64_t)sub_1005512D4;
  v61[2] = v41;
  v61[3] = (unint64_t)sub_1005BADD4;
  v61[4] = 0;
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_1005BA33C(0, 0, v61);
  swift_release();
  swift_bridgeObjectRelease();
  v22(v37, v7);
  uint64_t result = swift_bridgeObjectRelease();
  if (v42 < 1000000000) {
    return result;
  }
  uint64_t v43 = v56;
  sub_10059C99C((uint64_t)v30 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, v56, _s14descr1006B99F1V6LoggerVMa);
  unsigned int v44 = sub_1005E0EB0();
  uint64_t v45 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v43, v45);
  os_log_type_t v46 = sub_1005E25A0();
  if (os_log_type_enabled(v44, v46))
  {
    unint64_t v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v47 = 0;
    _os_log_impl((void *)&_mh_execute_header, v44, v46, "Account’s data usage is above threshold.", v47, 2u);
    swift_slowDealloc();
  }

  id v48 = (void (*)(unint64_t, uint64_t))v30[14];
  uint64_t v49 = (void *)v30[7];
  if (v49)
  {
    id v50 = (id)v30[7];
  }
  else
  {
    id v51 = sub_10053942C(v30[2], v30[3]);
    uint64_t v52 = (void *)v30[7];
    v30[7] = v51;
    id v50 = v51;

    uint64_t v49 = 0;
  }
  id v53 = v49;
  unint64_t v54 = sub_100578CC4();

  v48(v54, 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100595D94(uint64_t a1, uint64_t a2, int a3, unsigned int a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = swift_allocObject();
    *(_DWORD *)(v9 + 16) = a3;
    *(void *)(v9 + 24) = a1;
    uint64_t v10 = v9 | 4;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v8 + 88);
    swift_bridgeObjectRetain();
    v11(v10, 1);
    swift_release();
    sub_10058FE20(a4);
    return swift_release();
  }
  return result;
}

uint64_t sub_100595E60()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100595E98()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E0ED0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s14descr1006B99F1V6LoggerVMa(0);
  uint64_t result = __chkstk_darwin();
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v1 + 161) & 1) == 0)
  {
    *(unsigned char *)(v1 + 161) = 1;
    uint64_t v10 = v1 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger;
    sub_10059C99C(v1 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, (uint64_t)v9, _s14descr1006B99F1V6LoggerVMa);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    uint64_t v11 = (char *)(v10 + *(int *)(v6 + 20));
    char v12 = *v11;
    int v13 = *((_DWORD *)v11 + 1);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v14 = sub_1005E0EB0();
    os_log_type_t v15 = sub_1005E25C0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 68158464;
      int v19 = 2;
      sub_1005E2960();
      *(_WORD *)(v16 + 8) = 256;
      char v18 = v12;
      sub_1005E2960();
      *(_WORD *)(v16 + 11) = 1040;
      v17[1] = 8;
      sub_1005E2960();
      *(_WORD *)(v16 + 17) = 1024;
      v17[0] = v13;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "[%.*hhx-%.*X] Did receive remote mailboxes: Sending sync-did-start.", (uint8_t *)v16, 0x17u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(void, uint64_t))(v1 + 112))(0, 2);
  }
  return result;
}

void sub_100596158(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v58 = sub_1005E0ED0();
  uint64_t v4 = *(void *)(v58 - 8);
  __chkstk_darwin();
  unint64_t v57 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v56 - v6;
  uint64_t v8 = _s14descr1006B99F1V6LoggerVMa(0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  char v12 = (char *)&v56 - v11;
  int64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = a1 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(a1 + 64);
  int64_t v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v25 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_43;
    }
    if (v25 >= v19) {
      break;
    }
    unint64_t v26 = *(void *)(v15 + 8 * v25);
    ++v13;
    if (!v26)
    {
      int64_t v13 = v25 + 1;
      if (v25 + 1 >= v19) {
        break;
      }
      unint64_t v26 = *(void *)(v15 + 8 * v13);
      if (!v26)
      {
        int64_t v13 = v25 + 2;
        if (v25 + 2 >= v19) {
          break;
        }
        unint64_t v26 = *(void *)(v15 + 8 * v13);
        if (!v26)
        {
          int64_t v13 = v25 + 3;
          if (v25 + 3 >= v19) {
            break;
          }
          unint64_t v26 = *(void *)(v15 + 8 * v13);
          if (!v26)
          {
            int64_t v13 = v25 + 4;
            if (v25 + 4 >= v19) {
              break;
            }
            unint64_t v26 = *(void *)(v15 + 8 * v13);
            if (!v26)
            {
              int64_t v27 = v25 + 5;
              if (v27 >= v19) {
                break;
              }
              unint64_t v26 = *(void *)(v15 + 8 * v27);
              if (!v26)
              {
                while (1)
                {
                  int64_t v13 = v27 + 1;
                  if (__OFADD__(v27, 1)) {
                    goto LABEL_44;
                  }
                  if (v13 >= v19) {
                    goto LABEL_28;
                  }
                  unint64_t v26 = *(void *)(v15 + 8 * v13);
                  ++v27;
                  if (v26) {
                    goto LABEL_27;
                  }
                }
              }
              int64_t v13 = v27;
            }
          }
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v26 - 1) & v26;
    unint64_t v21 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_5:
    uint64_t v22 = *(void *)(a1 + 56) + 72 * v21;
    if (*(unsigned char *)(v22 + 65)) {
      uint64_t v23 = 0;
    }
    else {
      uint64_t v23 = *(void *)(v22 + 24);
    }
    BOOL v24 = __OFADD__(v14, v23);
    v14 += v23;
    if (v24)
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return;
    }
  }
LABEL_28:
  id v28 = (void *)v2[7];
  if (v28)
  {
    id v29 = (id)v2[7];
  }
  else
  {
    id v30 = sub_10053942C(v2[2], v2[3]);
    id v31 = (void *)v2[7];
    v2[7] = v30;
    id v29 = v30;

    id v28 = 0;
  }
  id v32 = v28;
  id v33 = sub_100579D28();

  unint64_t v34 = (char *)v2 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger;
  id v35 = (void (**)(char *, char *, uint64_t))(v4 + 32);
  if ((void *)v14 == v33)
  {
    sub_10059C99C((uint64_t)v2 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, (uint64_t)v12, _s14descr1006B99F1V6LoggerVMa);
    (*v35)(v7, v12, v58);
    unint64_t v36 = &v34[*(int *)(v8 + 20)];
    char v37 = *v36;
    int v38 = *((_DWORD *)v36 + 1);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    double v39 = sub_1005E0EB0();
    os_log_type_t v40 = sub_1005E25C0();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 68158720;
      LODWORD(v59) = 2;
      sub_1005E2960();
      *(_WORD *)(v41 + 8) = 256;
      LOBYTE(v59) = v37;
      sub_1005E2960();
      *(_WORD *)(v41 + 11) = 1040;
      LODWORD(v59) = 8;
      sub_1005E2960();
      *(_WORD *)(v41 + 17) = 1024;
      LODWORD(v59) = v38;
      sub_1005E2960();
      *(_WORD *)(v41 + 23) = 2048;
      uint64_t v59 = v14;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "[%.*hhx-%.*X] Account message count unchanged at %ld.", (uint8_t *)v41, 0x21u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v58);
  }
  else
  {
    sub_10059C99C((uint64_t)v2 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, (uint64_t)v10, _s14descr1006B99F1V6LoggerVMa);
    (*v35)(v57, v10, v58);
    uint64_t v42 = &v34[*(int *)(v8 + 20)];
    char v43 = *v42;
    int v44 = *((_DWORD *)v42 + 1);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v45 = sub_1005E0EB0();
    os_log_type_t v46 = sub_1005E25C0();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 68158976;
      LODWORD(v59) = 2;
      sub_1005E2960();
      *(_WORD *)(v47 + 8) = 256;
      LOBYTE(v59) = v43;
      sub_1005E2960();
      *(_WORD *)(v47 + 11) = 1040;
      LODWORD(v59) = 8;
      sub_1005E2960();
      *(_WORD *)(v47 + 17) = 1024;
      LODWORD(v59) = v44;
      sub_1005E2960();
      *(_WORD *)(v47 + 23) = 2048;
      uint64_t v59 = (uint64_t)v33;
      sub_1005E2960();
      *(_WORD *)(v47 + 33) = 2048;
      uint64_t v59 = v14;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "[%.*hhx-%.*X] Account message count %ld -> %ld.", (uint8_t *)v47, 0x2Bu);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v57, v58);
    id v48 = (void *)v2[7];
    if (v48)
    {
      id v49 = (id)v2[7];
    }
    else
    {
      id v50 = sub_10053942C(v2[2], v2[3]);
      id v51 = (void *)v2[7];
      v2[7] = v50;
      id v49 = v50;

      id v48 = 0;
    }
    id v52 = v48;
    NSString v53 = sub_1005E1BD0();
    [v49 willChangeValueForKey:v53];

    id v54 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v14 & ~(v14 >> 63)];
    [v49 setPrimitiveMessageCount:v54];

    NSString v55 = sub_1005E1BD0();
    [v49 didChangeValueForKey:v55];
  }
}

void *sub_100596894(void *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = HIDWORD(a2);
  id v9 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v10 = sub_1005E1BD0();
  id v11 = [v9 initWithEntityName:v10];

  sub_10000566C(&qword_100719060);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1005F66F0;
  id v13 = [a1 objectID];
  *(void *)(v12 + 56) = sub_1003C8730(0, &qword_100719068);
  *(void *)(v12 + 32) = v13;
  id v14 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:a2];
  uint64_t v15 = sub_1003C8730(0, (unint64_t *)&qword_1007195E8);
  *(void *)(v12 + 88) = v15;
  *(void *)(v12 + 64) = v14;
  id v16 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:v8];
  *(void *)(v12 + 120) = v15;
  *(void *)(v12 + 96) = v16;
  NSString v17 = sub_1005E1BD0();
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v19 = [self predicateWithFormat:v17 argumentArray:isa];

  [v11 setPredicate:v19];
  sub_10000566C(&qword_100719088);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1005F6740;
  id v21 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v22 = sub_1005E1BD0();
  id v23 = [v21 initWithKey:v22 ascending:0];

  *(void *)(v20 + 32) = v23;
  sub_1005E20E0();
  sub_1003C8730(0, (unint64_t *)&qword_100719C20);
  Class v24 = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  [v11 setSortDescriptors:v24];

  [v11 setResultType:1];
  id v40 = 0;
  id v25 = [v11 execute:&v40];
  id v26 = v40;
  if (!v25)
  {
    id v36 = v40;
    sub_1005E06F0();

    swift_willThrow();
    return v26;
  }
  int64_t v27 = v25;
  unint64_t v28 = sub_1005E20C0();
  id v29 = v26;

  if (v28 >> 62) {
    goto LABEL_22;
  }
  uint64_t v30 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v30)
  {
LABEL_25:

    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  id v40 = &_swiftEmptySetSingleton;
  if (!a3)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  while (1)
  {
    if (v30 == 0x8000000000000000 && a3 == -1) {
      goto LABEL_30;
    }
    uint64_t v31 = v30 / a3 + 1;
    if (__OFADD__(v30 / a3, 1))
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (v31 < 0) {
      goto LABEL_28;
    }
    if (v30 / a3 == -1) {
      break;
    }
    uint64_t v32 = 0;
    while (1)
    {
      uint64_t v33 = v32 * a3;
      if ((unsigned __int128)(v32 * (__int128)a3) >> 64 != (v32 * a3) >> 63) {
        break;
      }
      uint64_t v34 = v33 - a4;
      if (__OFSUB__(v33, a4)) {
        goto LABEL_21;
      }
      if ((v34 & 0x8000000000000000) == 0 && v34 < v30) {
        sub_1005A5828(&v39, v34);
      }
      if (v31 == ++v32) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (!v37) {
      goto LABEL_25;
    }
    id v40 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (!a3) {
      goto LABEL_24;
    }
  }
LABEL_17:
  sub_1005A5828(&v39, 0);
  if (__OFSUB__(v30, 1))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  sub_1005A5828(&v39, v30 - 1);
  swift_bridgeObjectRetain();
  uint64_t v35 = swift_bridgeObjectRetain();
  id v26 = (id)sub_10059BC20(v35, v28);

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return v26;
}

void sub_100596D9C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v120 = a4;
  uint64_t v113 = a3;
  uint64_t v122 = a2;
  uint64_t v119 = type metadata accessor for MessageSectionData(0);
  __chkstk_darwin();
  uint64_t v105 = (uint64_t)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v111 = (uint64_t)&v104 - v6;
  __chkstk_darwin();
  uint64_t v108 = (uint64_t)&v104 - v7;
  uint64_t v8 = sub_1005E0ED0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v116 = v8;
  uint64_t v117 = v9;
  __chkstk_darwin();
  unint64_t v106 = (char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v114 = (char *)&v104 - v11;
  __chkstk_darwin();
  uint64_t v109 = (char *)&v104 - v12;
  uint64_t v112 = _s14descr1006B99F1V6LoggerVMa(0);
  __chkstk_darwin();
  uint64_t v104 = (uint64_t)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v104 - v14;
  __chkstk_darwin();
  uint64_t v107 = (uint64_t)&v104 - v16;
  sub_10000566C(&qword_100719928);
  __chkstk_darwin();
  unint64_t v18 = (char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v104 - v19;
  uint64_t v21 = type metadata accessor for MessageBeingDownloaded(0);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin();
  uint64_t v110 = (char *)&v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v25 = (char *)&v104 - v24;
  sub_1000079E4(a1, (uint64_t)v20, &qword_100719928);
  uint64_t v115 = v22;
  id v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  uint64_t v118 = v21;
  if (v26(v20, 1, v21) == 1)
  {
    uint64_t v27 = v119;
    sub_100007A48((uint64_t)v20, &qword_100719928);
    uint64_t v28 = v121;
    id v29 = v120;
    sub_10056E29C(*(_DWORD *)(v122 + 12));
    if (v28) {
      return;
    }
    uint64_t v31 = v30;
    uint64_t v121 = 0;
    id v32 = v29;
    sub_10056B428(v32, v31, (uint64_t)v18);
    if (v26(v18, 1, v118) == 1)
    {
      sub_100007A48((uint64_t)v18, &qword_100719928);
      uint64_t v33 = v113 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger;
      uint64_t v34 = v107;
      sub_10059C99C(v113 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, v107, _s14descr1006B99F1V6LoggerVMa);
      uint64_t v36 = v116;
      uint64_t v35 = v117;
      uint64_t v37 = v109;
      (*(void (**)(char *, uint64_t, uint64_t))(v117 + 32))(v109, v34, v116);
      int v38 = (char *)(v33 + *(int *)(v112 + 20));
      char v39 = *v38;
      LODWORD(v120) = *((_DWORD *)v38 + 1);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v40 = v108;
      sub_10059C99C(v122, v108, type metadata accessor for MessageSectionData);
      id v41 = v32;
      uint64_t v42 = sub_1005E0EB0();
      os_log_type_t v43 = sub_1005E25A0();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = swift_slowAlloc();
        uint64_t v122 = swift_slowAlloc();
        uint64_t v125 = v122;
        *(_DWORD *)uint64_t v44 = 68159235;
        LODWORD(v123) = 2;
        sub_1005E2960();
        *(_WORD *)(v44 + 8) = 256;
        LOBYTE(v123) = v39;
        sub_1005E2960();
        *(_WORD *)(v44 + 11) = 1040;
        LODWORD(v123) = 8;
        sub_1005E2960();
        *(_WORD *)(v44 + 17) = 1024;
        LODWORD(v123) = v120;
        sub_1005E2960();
        *(_WORD *)(v44 + 23) = 1024;
        int v45 = *(_DWORD *)(v40 + 12);
        sub_10059CD4C(v40, type metadata accessor for MessageSectionData);
        LODWORD(v123) = v45;
        sub_1005E2960();
        *(_WORD *)(v44 + 29) = 2160;
        uint64_t v123 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v44 + 39) = 2085;
        unint64_t v46 = sub_100578E24();
        if (v46)
        {
          uint64_t v123 = v46;
          int v124 = v47;
          uint64_t v48 = sub_1005E1CC0();
          unint64_t v50 = v49;
        }
        else
        {
          uint64_t v48 = 8425698;
          unint64_t v50 = 0xA300000000000000;
        }
        uint64_t v102 = v116;
        uint64_t v123 = sub_1005904BC(v48, v50, &v125);
        sub_1005E2960();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "[%.*hhx-%.*X] Unable to create downloaded data for %u in '%{sensitive,mask.mailbox}s'.", (uint8_t *)v44, 0x31u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v117 + 8))(v109, v102);
      }
      else
      {
        sub_10059CD4C(v40, type metadata accessor for MessageSectionData);

        (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v36);
      }
      return;
    }
    uint64_t v74 = v32;
    uint64_t v75 = (uint64_t)v110;
    sub_10059CCE4((uint64_t)v18, (uint64_t)v110, type metadata accessor for MessageBeingDownloaded);
    uint64_t v76 = v121;
    uint64_t v77 = v122;
    sub_10056B6E0(v122 + *(int *)(v27 + 28));
    if (v76)
    {
      uint64_t v121 = 0;
      uint64_t v78 = v113 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger;
      uint64_t v79 = v104;
      sub_10059C99C(v113 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, v104, _s14descr1006B99F1V6LoggerVMa);
      uint64_t v80 = v117;
      uint64_t v81 = v106;
      uint64_t v82 = v79;
      uint64_t v83 = v116;
      (*(void (**)(char *, uint64_t, uint64_t))(v117 + 32))(v106, v82, v116);
      char v84 = (char *)(v78 + *(int *)(v112 + 20));
      char v85 = *v84;
      LODWORD(v120) = *((_DWORD *)v84 + 1);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v86 = v105;
      sub_10059C99C(v77, v105, type metadata accessor for MessageSectionData);
      id v87 = v81;
      id v88 = v74;
      swift_errorRetain();
      id v89 = v88;
      swift_errorRetain();
      uint64_t v90 = sub_1005E0EB0();
      int v91 = sub_1005E25A0();
      if (os_log_type_enabled(v90, (os_log_type_t)v91))
      {
        LODWORD(v118) = v91;
        uint64_t v92 = swift_slowAlloc();
        uint64_t v119 = swift_slowAlloc();
        uint64_t v122 = swift_slowAlloc();
        uint64_t v125 = v122;
        *(_DWORD *)uint64_t v92 = 68159491;
        LODWORD(v123) = 2;
        sub_1005E2960();
        *(_WORD *)(v92 + 8) = 256;
        LOBYTE(v123) = v85;
        sub_1005E2960();
        *(_WORD *)(v92 + 11) = 1040;
        LODWORD(v123) = 8;
        sub_1005E2960();
        *(_WORD *)(v92 + 17) = 1024;
        LODWORD(v123) = v120;
        sub_1005E2960();
        *(_WORD *)(v92 + 23) = 1024;
        int v93 = *(_DWORD *)(v86 + 12);
        sub_10059CD4C(v86, type metadata accessor for MessageSectionData);
        LODWORD(v123) = v93;
        sub_1005E2960();
        *(_WORD *)(v92 + 29) = 2160;
        uint64_t v123 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v92 + 39) = 2085;
        unint64_t v94 = sub_100578E24();
        if (v94)
        {
          uint64_t v123 = v94;
          int v124 = v95;
          uint64_t v96 = sub_1005E1CC0();
          unint64_t v98 = v97;
        }
        else
        {
          uint64_t v96 = 8425698;
          unint64_t v98 = 0xA300000000000000;
        }
        uint64_t v123 = sub_1005904BC(v96, v98, &v125);
        sub_1005E2960();

        swift_bridgeObjectRelease();
        *(_WORD *)(v92 + 49) = 2112;
        uint64_t v103 = sub_1005E06E0();
        uint64_t v123 = v103;
        sub_1005E2960();
        *(void *)uint64_t v119 = v103;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v90, (os_log_type_t)v118, "[%.*hhx-%.*X] Failed to append initial downloaded data to %u in '%{sensitive,mask.mailbox}s': %@", (uint8_t *)v92, 0x3Bu);
        sub_10000566C(&qword_100718A08);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v117 + 8))(v106, v116);
      }
      else
      {
        sub_10059CD4C(v86, type metadata accessor for MessageSectionData);

        swift_errorRelease();
        swift_errorRelease();

        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v80 + 8))(v87, v83);
      }
      sub_10059CD4C((uint64_t)v110, type metadata accessor for MessageBeingDownloaded);
      return;
    }
    sub_100007A48(a1, &qword_100719928);
    uint64_t v73 = v75;
LABEL_12:
    sub_10059CCE4(v73, a1, type metadata accessor for MessageBeingDownloaded);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v115 + 56))(a1, 0, 1, v118);
    return;
  }
  id v51 = v120;
  sub_100007A48(a1, &qword_100719928);
  sub_10059CCE4((uint64_t)v20, (uint64_t)v25, type metadata accessor for MessageBeingDownloaded);
  uint64_t v52 = v121;
  uint64_t v53 = v122;
  sub_10056B6E0(v122 + *(int *)(v119 + 28));
  if (!v52)
  {
    uint64_t v73 = (uint64_t)v25;
    goto LABEL_12;
  }
  uint64_t v110 = v25;
  uint64_t v119 = a1;
  uint64_t v54 = v113 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger;
  sub_10059C99C(v113 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, (uint64_t)v15, _s14descr1006B99F1V6LoggerVMa);
  uint64_t v55 = v117;
  uint64_t v56 = v114;
  unint64_t v57 = v15;
  uint64_t v58 = v116;
  (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v114, v57, v116);
  uint64_t v59 = (char *)(v54 + *(int *)(v112 + 20));
  char v60 = *v59;
  LODWORD(v113) = *((_DWORD *)v59 + 1);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v61 = v111;
  sub_10059C99C(v53, v111, type metadata accessor for MessageSectionData);
  id v62 = v51;
  swift_errorRetain();
  id v63 = v62;
  swift_errorRetain();
  id v64 = sub_1005E0EB0();
  int v65 = sub_1005E25A0();
  if (os_log_type_enabled(v64, (os_log_type_t)v65))
  {
    LODWORD(v112) = v65;
    uint64_t v121 = v52;
    uint64_t v66 = swift_slowAlloc();
    id v120 = (void *)swift_slowAlloc();
    uint64_t v122 = swift_slowAlloc();
    uint64_t v125 = v122;
    *(_DWORD *)uint64_t v66 = 68159491;
    LODWORD(v123) = 2;
    sub_1005E2960();
    *(_WORD *)(v66 + 8) = 256;
    LOBYTE(v123) = v60;
    sub_1005E2960();
    *(_WORD *)(v66 + 11) = 1040;
    LODWORD(v123) = 8;
    sub_1005E2960();
    *(_WORD *)(v66 + 17) = 1024;
    LODWORD(v123) = v113;
    sub_1005E2960();
    *(_WORD *)(v66 + 23) = 1024;
    int v67 = *(_DWORD *)(v61 + 12);
    sub_10059CD4C(v61, type metadata accessor for MessageSectionData);
    LODWORD(v123) = v67;
    sub_1005E2960();
    *(_WORD *)(v66 + 29) = 2160;
    uint64_t v123 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v66 + 39) = 2085;
    unint64_t v68 = sub_100578E24();
    if (v68)
    {
      uint64_t v123 = v68;
      int v124 = v69;
      uint64_t v70 = sub_1005E1CC0();
      unint64_t v72 = v71;
    }
    else
    {
      uint64_t v70 = 8425698;
      unint64_t v72 = 0xA300000000000000;
    }
    uint64_t v99 = v116;
    uint64_t v100 = v114;
    uint64_t v123 = sub_1005904BC(v70, v72, &v125);
    sub_1005E2960();

    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 49) = 2112;
    uint64_t v101 = sub_1005E06E0();
    uint64_t v123 = v101;
    sub_1005E2960();
    *id v120 = v101;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v112, "[%.*hhx-%.*X] Failed to append downloaded data to %u in '%{sensitive,mask.mailbox}s': %@", (uint8_t *)v66, 0x3Bu);
    sub_10000566C(&qword_100718A08);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v100, v99);
  }
  else
  {
    sub_10059CD4C(v61, type metadata accessor for MessageSectionData);

    swift_errorRelease();
    swift_errorRelease();

    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v58);
  }
  sub_10059CD4C((uint64_t)v110, type metadata accessor for MessageBeingDownloaded);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v115 + 56))(v119, 1, 1, v118);
}

id sub_100597E98(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  id v106 = a4;
  int v104 = a3;
  sub_10000566C(&qword_100719420);
  __chkstk_darwin();
  uint64_t v101 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v110 = v7;
  uint64_t v111 = v8;
  __chkstk_darwin();
  uint64_t v103 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v98 - v10;
  __chkstk_darwin();
  uint64_t v102 = (char *)&v98 - v12;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v98 - v13;
  uint64_t v15 = _s14descr1006B99F1V6LoggerVMa(0);
  __chkstk_darwin();
  uint64_t v100 = (uint64_t)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v18 = (char *)&v98 - v17;
  __chkstk_darwin();
  uint64_t v20 = (char *)&v98 - v19;
  __chkstk_darwin();
  uint64_t v22 = (char *)&v98 - v21;
  sub_10000566C(&qword_100719928);
  __chkstk_darwin();
  uint64_t v24 = (char *)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = a1;
  uint64_t v107 = a2;
  uint64_t v108 = sub_1005990B0(a1);
  if ((_BYTE)v25)
  {
    if (v25 == 1)
    {
      uint64_t v26 = v112;
LABEL_30:
      sub_100007A48(v26, &qword_100719928);
      uint64_t v96 = type metadata accessor for MessageBeingDownloaded(0);
      return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v26, 1, 1, v96);
    }
    int v105 = v25;
    sub_1000079E4(v112, (uint64_t)v24, &qword_100719928);
    uint64_t v47 = type metadata accessor for MessageBeingDownloaded(0);
    int v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v24, 1, v47);
    sub_100007A48((uint64_t)v24, &qword_100719928);
    uint64_t v49 = v107 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger;
    unint64_t v50 = (void (**)(char *, char *, uint64_t))(v111 + 32);
    if (v48 == 1)
    {
      sub_10059C99C(v107 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, (uint64_t)v22, _s14descr1006B99F1V6LoggerVMa);
      uint64_t v30 = v110;
      (*v50)(v14, v22, v110);
      id v51 = (unsigned __int8 *)(v49 + *(int *)(v15 + 20));
      int v52 = *v51;
      int v33 = *((_DWORD *)v51 + 1);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      id v53 = v106;
      uint64_t v54 = sub_1005E0EB0();
      os_log_type_t v55 = sub_1005E25A0();
      BOOL v56 = os_log_type_enabled(v54, v55);
      int v99 = v52;
      if (v56)
      {
        uint64_t v57 = swift_slowAlloc();
        uint64_t v102 = (char *)swift_slowAlloc();
        uint64_t v123 = v102;
        *(_DWORD *)uint64_t v57 = 68159235;
        LODWORD(v113) = 2;
        sub_1005E2960();
        *(_WORD *)(v57 + 8) = 256;
        LOBYTE(v113) = v52;
        sub_1005E2960();
        *(_WORD *)(v57 + 11) = 1040;
        LODWORD(v113) = 8;
        sub_1005E2960();
        *(_WORD *)(v57 + 17) = 1024;
        LODWORD(v106) = v33;
        LODWORD(v113) = v33;
        sub_1005E2960();
        *(_WORD *)(v57 + 23) = 1024;
        LODWORD(v113) = v104;
        sub_1005E2960();
        *(_WORD *)(v57 + 29) = 2160;
        uint64_t v113 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v57 + 39) = 2085;
        unint64_t v58 = sub_100578E24();
        if (v58)
        {
          uint64_t v113 = v58;
          LODWORD(v114) = v59;
          uint64_t v60 = sub_1005E1CC0();
          unint64_t v62 = v61;
        }
        else
        {
          uint64_t v60 = 8425698;
          unint64_t v62 = 0xA300000000000000;
        }
        uint64_t v113 = sub_1005904BC(v60, v62, (uint64_t *)&v123);
        sub_1005E2960();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "[%.*hhx-%.*X] Download did complete for unknown message %u in '%{sensitive,mask.mailbox}s'.", (uint8_t *)v57, 0x31u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v30 = v110;
        uint64_t v65 = v111;
        id v63 = *(void (**)(char *, uint64_t))(v111 + 8);
        v63(v14, v110);
        uint64_t v34 = v108;
        uint64_t v64 = v109;
        int v33 = (int)v106;
        goto LABEL_23;
      }
    }
    else
    {
      sub_10059C99C(v107 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, (uint64_t)v20, _s14descr1006B99F1V6LoggerVMa);
      uint64_t v14 = v102;
      uint64_t v30 = v110;
      (*v50)(v102, v20, v110);
      uint64_t v66 = (unsigned __int8 *)(v49 + *(int *)(v15 + 20));
      int v67 = *v66;
      int v33 = *((_DWORD *)v66 + 1);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      id v53 = v106;
      uint64_t v54 = sub_1005E0EB0();
      os_log_type_t v68 = sub_1005E25A0();
      BOOL v69 = os_log_type_enabled(v54, v68);
      int v99 = v67;
      if (v69)
      {
        uint64_t v70 = swift_slowAlloc();
        uint64_t v123 = (char *)swift_slowAlloc();
        *(_DWORD *)uint64_t v70 = 68159235;
        LODWORD(v113) = 2;
        sub_1005E2960();
        *(_WORD *)(v70 + 8) = 256;
        LOBYTE(v113) = v67;
        sub_1005E2960();
        *(_WORD *)(v70 + 11) = 1040;
        LODWORD(v113) = 8;
        sub_1005E2960();
        *(_WORD *)(v70 + 17) = 1024;
        LODWORD(v113) = v33;
        sub_1005E2960();
        *(_WORD *)(v70 + 23) = 1024;
        LODWORD(v113) = v104;
        sub_1005E2960();
        *(_WORD *)(v70 + 29) = 2160;
        uint64_t v113 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v70 + 39) = 2085;
        unint64_t v71 = sub_100578E24();
        if (v71)
        {
          uint64_t v113 = v71;
          LODWORD(v114) = v72;
          uint64_t v73 = sub_1005E1CC0();
          unint64_t v75 = v74;
        }
        else
        {
          uint64_t v73 = 8425698;
          unint64_t v75 = 0xA300000000000000;
        }
        uint64_t v113 = sub_1005904BC(v73, v75, (uint64_t *)&v123);
        sub_1005E2960();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v54, v68, "[%.*hhx-%.*X] Download did complete, but unable to enqueue message %u in '%{sensitive,mask.mailbox}s'.", (uint8_t *)v70, 0x31u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v30 = v110;
        uint64_t v65 = v111;
        id v63 = *(void (**)(char *, uint64_t))(v111 + 8);
        v63(v102, v110);
        goto LABEL_22;
      }
    }

    uint64_t v65 = v111;
    id v63 = *(void (**)(char *, uint64_t))(v111 + 8);
    v63(v14, v30);
LABEL_22:
    uint64_t v34 = v108;
    uint64_t v64 = v109;
    goto LABEL_23;
  }
  int v105 = v25;
  uint64_t v27 = v107 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger;
  sub_10059C99C(v107 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, (uint64_t)v18, _s14descr1006B99F1V6LoggerVMa);
  uint64_t v28 = v111;
  id v29 = v18;
  uint64_t v30 = v110;
  (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v11, v29, v110);
  uint64_t v31 = (unsigned __int8 *)(v27 + *(int *)(v15 + 20));
  int v32 = *v31;
  int v33 = *((_DWORD *)v31 + 1);
  uint64_t v34 = v108;
  swift_errorRetain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  id v35 = v106;
  sub_10059CA04(v34, 0);
  id v36 = v35;
  sub_10059CA04(v34, 0);
  uint64_t v37 = sub_1005E0EB0();
  int v38 = sub_1005E25A0();
  BOOL v39 = os_log_type_enabled(v37, (os_log_type_t)v38);
  int v99 = v32;
  if (v39)
  {
    int v98 = v38;
    uint64_t v40 = swift_slowAlloc();
    id v41 = (void *)swift_slowAlloc();
    uint64_t v102 = (char *)swift_slowAlloc();
    uint64_t v123 = v102;
    *(_DWORD *)uint64_t v40 = 68159491;
    LODWORD(v113) = 2;
    sub_1005E2960();
    *(_WORD *)(v40 + 8) = 256;
    LOBYTE(v113) = v32;
    sub_1005E2960();
    *(_WORD *)(v40 + 11) = 1040;
    LODWORD(v113) = 8;
    sub_1005E2960();
    *(_WORD *)(v40 + 17) = 1024;
    LODWORD(v106) = v33;
    LODWORD(v113) = v33;
    sub_1005E2960();
    *(_WORD *)(v40 + 23) = 1024;
    LODWORD(v113) = v104;
    sub_1005E2960();
    *(_WORD *)(v40 + 29) = 2160;
    uint64_t v113 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v40 + 39) = 2085;
    unint64_t v42 = sub_100578E24();
    if (v42)
    {
      uint64_t v113 = v42;
      LODWORD(v114) = v43;
      uint64_t v44 = sub_1005E1CC0();
      unint64_t v46 = v45;
    }
    else
    {
      uint64_t v44 = 8425698;
      unint64_t v46 = 0xA300000000000000;
    }
    uint64_t v113 = sub_1005904BC(v44, v46, (uint64_t *)&v123);
    sub_1005E2960();

    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 49) = 2112;
    uint64_t v76 = v108;
    uint64_t v77 = sub_1005E06E0();
    uint64_t v113 = v77;
    sub_1005E2960();
    *id v41 = v77;
    sub_10059CA14(v76, 0);
    sub_10059CA14(v76, 0);
    _os_log_impl((void *)&_mh_execute_header, v37, (os_log_type_t)v98, "[%.*hhx-%.*X] Failed to parse downloaded message %u in '%{sensitive,mask.mailbox}s': %@", (uint8_t *)v40, 0x3Bu);
    sub_10000566C(&qword_100718A08);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v34 = v76;
    swift_slowDealloc();

    sub_10059CA14(v76, 0);
    uint64_t v30 = v110;
    uint64_t v65 = v111;
    id v63 = *(void (**)(char *, uint64_t))(v111 + 8);
    v63(v11, v110);
    uint64_t v64 = v109;
    int v33 = (int)v106;
  }
  else
  {
    sub_10059CA14(v34, 0);

    sub_10059CA14(v34, 0);
    sub_10059CA14(v34, 0);

    id v63 = *(void (**)(char *, uint64_t))(v28 + 8);
    v63(v11, v30);
    uint64_t v64 = v109;
    uint64_t v65 = v28;
  }
LABEL_23:
  uint64_t v78 = type metadata accessor for MessageBeingDownloaded(0);
  uint64_t v26 = v112;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 48))(v112, 1, v78))
  {
LABEL_29:
    sub_10059CA14(v34, v105);
    goto LABEL_30;
  }
  id v79 = *(id *)(v26 + 8);
  id v80 = [v79 managedObjectContext];
  if (!v80)
  {
    sub_10059CA14(v34, v105);

    goto LABEL_30;
  }
  uint64_t v81 = v80;
  LODWORD(v106) = v33;
  uint64_t v113 = 0x6E65477865646E49;
  unint64_t v114 = 0xEF6E6F6974617265;
  unint64_t v115 = 0xD000000000000017;
  unint64_t v116 = 0x80000001005EC480;
  uint64_t v117 = sub_100557014;
  uint64_t v118 = 0;
  uint64_t v119 = sub_10055705C;
  uint64_t v120 = 0;
  uint64_t v121 = sub_100557098;
  uint64_t v122 = 0;
  uint64_t v109 = sub_1005799CC(&v113);

  uint64_t v82 = v100;
  sub_10059C99C(v107 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, v100, _s14descr1006B99F1V6LoggerVMa);
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v103, v82, v30);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v83 = sub_1005E0EB0();
  os_log_type_t v84 = sub_1005E25C0();
  if (os_log_type_enabled(v83, v84))
  {
    uint64_t v85 = swift_slowAlloc();
    *(_DWORD *)uint64_t v85 = 68158464;
    LODWORD(v123) = 2;
    sub_1005E2960();
    *(_WORD *)(v85 + 8) = 256;
    LOBYTE(v123) = v99;
    uint64_t v34 = v108;
    sub_1005E2960();
    *(_WORD *)(v85 + 11) = 1040;
    LODWORD(v123) = 8;
    sub_1005E2960();
    *(_WORD *)(v85 + 17) = 1024;
    LODWORD(v123) = v106;
    uint64_t v30 = v110;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v83, v84, "[%.*hhx-%.*X] Marking message as indexed.", (uint8_t *)v85, 0x17u);
    uint64_t v26 = v112;
    swift_slowDealloc();
  }

  v63(v103, v30);
  uint64_t v86 = type metadata accessor for IndexableMessageInfo(0);
  uint64_t v87 = (uint64_t)v101;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v101, 1, 1, v86);
  NSString v88 = sub_1005E1BD0();
  [v79 willChangeValueForKey:v88];

  sub_10057A5BC(v79, v87);
  if (!v64)
  {
    NSString v89 = sub_1005E1BD0();
    [v79 didChangeValueForKey:v89];

    sub_100007A48(v87, &qword_100719420);
    NSString v90 = sub_1005E1BD0();
    [v79 willChangeValueForKey:v90];

    id v91 = objc_allocWithZone((Class)NSNumber);
    id v92 = [v91 initWithLongLong:v109];
    [v79 setPrimitiveIndexGeneration:v92];

    NSString v93 = sub_1005E1BD0();
    [v79 didChangeValueForKey:v93];

    NSString v94 = sub_1005E1BD0();
    [v79 willChangeValueForKey:v94];

    [v79 setPrimitiveAttributeChange:0];
    NSString v95 = sub_1005E1BD0();
    [v79 didChangeValueForKey:v95];

    goto LABEL_29;
  }
  id result = [v79 didChangeValueForKey:sub_1005E1BD0()];
  __break(1u);
  return result;
}

uint64_t sub_1005990B0(uint64_t a1)
{
  uint64_t v2 = v1;
  _s14descr1006B99F1V6LoggerVMa(0);
  __chkstk_darwin();
  uint64_t v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000566C(&qword_10071A788);
  __chkstk_darwin();
  uint64_t v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for EnqueueableItem(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for MessageBeingDownloaded(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(a1, 1, v12))
  {
    uint64_t v14 = v2[17];
    swift_retain();
    id v16 = sub_10056BB8C(820000, v14);
    swift_release();
    uint64_t v17 = v2[2];
    uint64_t v18 = v2[3];
    sub_10059C99C((uint64_t)v2 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, (uint64_t)v5, _s14descr1006B99F1V6LoggerVMa);
    id v19 = v16;
    swift_bridgeObjectRetain();
    sub_10055AC70(v17, v18, v19, (uint64_t)v5, v7);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_100007A48((uint64_t)v7, &qword_10071A788);
    }
    else
    {
      sub_10059CCE4((uint64_t)v7, (uint64_t)v11, type metadata accessor for EnqueueableItem);
      uint64_t v13 = sub_10055BD08((uint64_t)v11, v19);
      char v21 = v20;
      sub_10059CD4C((uint64_t)v11, type metadata accessor for EnqueueableItem);

      if ((v21 & 1) == 0) {
        return v13;
      }
    }
  }
  return 0;
}

uint64_t sub_10059938C(uint64_t (*a1)(uint64_t *))
{
  uint64_t v73 = a1;
  uint64_t v3 = *v1;
  uint64_t v62 = *(void *)(*v1 + 16);
  if (!v62) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v4 = 0;
  for (uint64_t i = 152; ; i += 64)
  {
    uint64_t v6 = v3;
    uint64_t v7 = v3 + i;
    uint64_t v8 = *(void *)(v3 + i - 120);
    uint64_t v9 = *(void *)(v3 + i - 112);
    uint64_t v10 = *(void *)(v3 + i - 104);
    uint64_t v11 = *(void *)(v3 + i - 96);
    __int16 v12 = *(_WORD *)(v7 - 88);
    char v13 = *(unsigned char *)(v7 - 86);
    uint64_t v14 = *(void *)(v7 - 80);
    uint64_t v15 = *(void *)(v7 - 72);
    uint64_t v16 = *(void *)(v7 - 64);
    uint64_t v64 = v8;
    uint64_t v65 = v9;
    uint64_t v66 = v10;
    uint64_t v67 = v11;
    __int16 v68 = v12;
    char v69 = v13;
    uint64_t v70 = v14;
    uint64_t v71 = v15;
    uint64_t v72 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    char v17 = v73(&v64);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v4;
    }
    char v18 = v17;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18) {
      break;
    }
    ++v4;
    uint64_t v3 = v6;
    if (v62 == v4)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v6 + 16);
    }
  }
  char v20 = (char *)v6;
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v21 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    unint64_t v22 = *(void *)(v6 + 16);
    while (v21 != v22)
    {
      if (v21 >= v22)
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      uint64_t v61 = (uint64_t)v20;
      unint64_t v63 = v21;
      uint64_t v24 = &v20[i];
      uint64_t v25 = *(void *)&v20[i - 56];
      uint64_t v26 = *(void *)&v20[i - 48];
      uint64_t v27 = *(void *)&v20[i - 40];
      uint64_t v28 = *(void *)&v20[i - 32];
      __int16 v29 = *(_WORD *)&v20[i - 24];
      char v30 = v20[i - 22];
      uint64_t v31 = *(void *)&v20[i - 16];
      uint64_t v32 = *(void *)&v20[i - 8];
      uint64_t v33 = *(void *)v24;
      uint64_t v64 = v25;
      uint64_t v65 = v26;
      uint64_t v66 = v27;
      uint64_t v67 = v28;
      __int16 v68 = v29;
      char v69 = v30;
      uint64_t v70 = v31;
      uint64_t v71 = v32;
      uint64_t v72 = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      char v34 = v73(&v64);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v34)
      {
        char v20 = (char *)v61;
        unint64_t v23 = v63;
      }
      else
      {
        char v20 = (char *)v61;
        unint64_t v23 = v63;
        if (v63 != v4)
        {
          if ((v4 & 0x8000000000000000) != 0) {
            goto LABEL_30;
          }
          unint64_t v35 = *(void *)(v61 + 16);
          if (v4 >= v35) {
            goto LABEL_31;
          }
          if (v63 >= v35) {
            goto LABEL_32;
          }
          uint64_t v36 = v61 + 32 + (v4 << 6);
          uint64_t v37 = *(void *)(v36 + 8);
          uint64_t v54 = *(void *)v36;
          uint64_t v38 = *(void *)(v36 + 24);
          uint64_t v52 = *(void *)(v36 + 16);
          char v50 = *(unsigned char *)(v36 + 34);
          __int16 v51 = *(_WORD *)(v36 + 32);
          uint64_t v39 = *(void *)(v36 + 48);
          uint64_t v49 = *(void *)(v36 + 40);
          uint64_t v40 = *(void *)(v36 + 56);
          uint64_t v41 = *((void *)v24 - 6);
          uint64_t v42 = *((void *)v24 - 4);
          uint64_t v58 = *((void *)v24 - 5);
          uint64_t v59 = *((void *)v24 - 7);
          char v56 = *(v24 - 22);
          __int16 v57 = *((_WORD *)v24 - 12);
          uint64_t v43 = *((void *)v24 - 2);
          uint64_t v44 = *((void *)v24 - 1);
          uint64_t v55 = v43;
          uint64_t v45 = *(void *)(v61 + i);
          uint64_t v53 = v37;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v20 = sub_100572190(v61);
          }
          unint64_t v46 = &v20[64 * v4];
          *((void *)v46 + 4) = v59;
          *((void *)v46 + 5) = v41;
          *((void *)v46 + 6) = v58;
          *((void *)v46 + 7) = v42;
          *((_WORD *)v46 + 32) = v57;
          v46[66] = v56;
          *((void *)v46 + 9) = v55;
          *((void *)v46 + 10) = v44;
          *((void *)v46 + 11) = v45;
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v23 = v63;
          if (v63 >= *((void *)v20 + 2)) {
            goto LABEL_33;
          }
          uint64_t v47 = &v20[i];
          *((void *)v47 - 7) = v54;
          *((void *)v47 - 6) = v53;
          *((void *)v47 - 5) = v52;
          *((void *)v47 - 4) = v38;
          *((_WORD *)v47 - 12) = v51;
          *(v47 - 22) = v50;
          *((void *)v47 - 2) = v49;
          *((void *)v47 - 1) = v39;
          *(void *)uint64_t v47 = v40;
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          void *v60 = v20;
        }
        if (__OFADD__(v4++, 1)) {
          goto LABEL_29;
        }
      }
      unint64_t v21 = v23 + 1;
      unint64_t v22 = *((void *)v20 + 2);
      i += 64;
    }
    return v4;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_100599788(uint64_t (*a1)(unint64_t))
{
  uint64_t v3 = v1;
  type metadata accessor for MessageBeingDownloaded(0);
  __chkstk_darwin();
  uint64_t v31 = (uint64_t)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v30 = (uint64_t)&v27 - v6;
  __chkstk_darwin();
  uint64_t v32 = (uint64_t)&v27 - v8;
  unint64_t v9 = *v1;
  uint64_t v10 = *(void *)(*v1 + 16);
  if (!v10) {
    return 0;
  }
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = *(void *)(v7 + 72);
  swift_bridgeObjectRetain();
  unint64_t v13 = 0;
  unint64_t v28 = v11;
  while (1)
  {
    char v14 = a1(v9 + v11);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v13;
    }
    if (v14) {
      break;
    }
    ++v13;
    v11 += v12;
    if (v10 == v13)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v13, 1))
  {
    unint64_t v16 = *(void *)(v9 + 16);
    if (v13 + 1 == v16) {
      return v13;
    }
    uint64_t v17 = v12 + v11;
    unint64_t v18 = v13 + 1;
    uint64_t v27 = v1;
    uint64_t v29 = v12;
    while (v18 < v16)
    {
      id v19 = v3;
      uint64_t v33 = v17;
      uint64_t v20 = v32;
      sub_10059C99C(v9 + v17, v32, type metadata accessor for MessageBeingDownloaded);
      char v21 = a1(v20);
      uint64_t result = sub_10059CD4C(v20, type metadata accessor for MessageBeingDownloaded);
      if (v21)
      {
        uint64_t v3 = v19;
        uint64_t v22 = v29;
      }
      else
      {
        uint64_t v3 = v19;
        uint64_t v22 = v29;
        if (v18 != v13)
        {
          if ((v13 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          unint64_t v23 = *v3;
          unint64_t v24 = *(void *)(*v3 + 16);
          if (v13 >= v24) {
            goto LABEL_33;
          }
          uint64_t result = sub_10059C99C(v23 + v28 + v13 * v29, v30, type metadata accessor for MessageBeingDownloaded);
          if (v18 >= v24) {
            goto LABEL_34;
          }
          sub_10059C99C(v23 + v33, v31, type metadata accessor for MessageBeingDownloaded);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v3 = v27;
          *uint64_t v27 = v23;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_1005721A4(v23);
            unint64_t v23 = result;
            *uint64_t v3 = result;
          }
          if (v13 >= *(void *)(v23 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_10059C5A8(v31, v23 + v28 + v13 * v22);
          if (v18 >= *(void *)(*v3 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = sub_10059C5A8(v30, *v3 + v33);
        }
        if (__OFADD__(v13++, 1)) {
          goto LABEL_31;
        }
      }
      unint64_t v26 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_30;
      }
      unint64_t v9 = *v3;
      unint64_t v16 = *(void *)(*v3 + 16);
      ++v18;
      uint64_t v17 = v33 + v22;
      if (v26 == v16) {
        return v13;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Int sub_100599B0C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1005ABDB8(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_100599B78(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_100599B78(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1005E3210(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v87 = *a1;
      uint64_t v88 = -1;
      uint64_t v89 = 1;
      uint64_t v90 = *a1;
      do
      {
        uint64_t v91 = v88;
        uint64_t v92 = v90;
        do
        {
          unsigned int v93 = *(_DWORD *)(v92 + 24);
          if (v93 >= *(_DWORD *)v92) {
            break;
          }
          if (!v87) {
            goto LABEL_141;
          }
          uint64_t v94 = *(void *)(v92 + 32);
          char v95 = *(unsigned char *)(v92 + 40);
          *(_OWORD *)(v92 + 24) = *(_OWORD *)v92;
          *(void *)(v92 + 40) = *(void *)(v92 + 16);
          *(_DWORD *)uint64_t v92 = v93;
          *(void *)(v92 + 8) = v94;
          *(unsigned char *)(v92 + 16) = v95;
          v92 -= 24;
        }
        while (!__CFADD__(v91++, 1));
        ++v89;
        v90 += 24;
        --v88;
      }
      while (v89 != v3);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  Swift::Int v6 = result;
  uint64_t v113 = v1;
  id v106 = a1;
  if (v3 < 2)
  {
    unint64_t v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      uint64_t v12 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      unint64_t v97 = v12;
      uint64_t v108 = v9;
      if (v13 >= 2)
      {
        uint64_t v98 = *v106;
        do
        {
          unint64_t v99 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v98) {
            goto LABEL_145;
          }
          uint64_t v100 = v97;
          uint64_t v101 = *(void *)&v97[16 * v99 + 32];
          uint64_t v102 = *(void *)&v97[16 * v13 + 24];
          sub_10059A2A4((char *)(v98 + 24 * v101), (char *)(v98 + 24 * *(void *)&v97[16 * v13 + 16]), v98 + 24 * v102, __dst);
          if (v113) {
            break;
          }
          if (v102 < v101) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v100 = sub_1005AAE8C((uint64_t)v100);
          }
          if (v99 >= *((void *)v100 + 2)) {
            goto LABEL_134;
          }
          uint64_t v103 = &v100[16 * v99 + 32];
          *(void *)uint64_t v103 = v101;
          *((void *)v103 + 1) = v102;
          unint64_t v104 = *((void *)v100 + 2);
          if (v13 > v104) {
            goto LABEL_135;
          }
          memmove(&v100[16 * v13 + 16], &v100[16 * v13 + 32], 16 * (v104 - v13));
          unint64_t v97 = v100;
          *((void *)v100 + 2) = v104 - 1;
          unint64_t v13 = v104 - 1;
        }
        while (v104 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v108[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v108 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1005E2150();
    *(void *)(v8 + 16) = v7;
    uint64_t v108 = (void *)v8;
    __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v107 = *a1 + 24;
  uint64_t v105 = *a1 - 24;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v109 = v6;
  Swift::Int v110 = v3;
  uint64_t v111 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      unsigned int v15 = *(_DWORD *)(v11 + 24 * v10);
      unsigned int v16 = *(_DWORD *)(v11 + 24 * v14);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v17 = (unsigned int *)(v107 + 24 * v14);
        unint64_t v18 = v17;
        while (1)
        {
          unsigned int v19 = v18[6];
          v18 += 6;
          if (v15 < v16 == v19 >= *v17) {
            break;
          }
          ++v10;
          uint64_t v17 = v18;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 24 * v10;
          uint64_t v21 = 24 * v14;
          Swift::Int v22 = v10;
          Swift::Int v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v21;
              uint64_t v25 = v11 + v20;
              int v26 = *(_DWORD *)(v11 + v21);
              uint64_t v27 = *(void *)(v11 + v21 + 8);
              char v28 = *(unsigned char *)(v11 + v21 + 16);
              uint64_t v29 = *(void *)(v11 + v20 - 8);
              *(_OWORD *)uint64_t v24 = *(_OWORD *)(v11 + v20 - 24);
              *(void *)(v24 + 16) = v29;
              *(_DWORD *)(v25 - 24) = v26;
              *(void *)(v25 - 16) = v27;
              *(unsigned char *)(v25 - 8) = v28;
            }
            ++v23;
            v20 -= 24;
            v21 += 24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v30 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v30 >= v3) {
      Swift::Int v30 = v3;
    }
    if (v30 < v14) {
      break;
    }
    if (v10 != v30)
    {
      uint64_t v31 = v105 + 24 * v10;
      do
      {
        Swift::Int v32 = v14;
        uint64_t v33 = v31;
        do
        {
          unsigned int v34 = *(_DWORD *)(v33 + 24);
          if (v34 >= *(_DWORD *)v33) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          uint64_t v35 = *(void *)(v33 + 32);
          char v36 = *(unsigned char *)(v33 + 40);
          *(_OWORD *)(v33 + 24) = *(_OWORD *)v33;
          *(void *)(v33 + 40) = *(void *)(v33 + 16);
          *(_DWORD *)uint64_t v33 = v34;
          *(void *)(v33 + 8) = v35;
          *(unsigned char *)(v33 + 16) = v36;
          v33 -= 24;
          ++v32;
        }
        while (v10 != v32);
        ++v10;
        v31 += 24;
      }
      while (v10 != v30);
      Swift::Int v10 = v30;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1005AACC4(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v38 = *((void *)v12 + 2);
    unint64_t v37 = *((void *)v12 + 3);
    unint64_t v13 = v38 + 1;
    uint64_t v11 = v111;
    if (v38 >= v37 >> 1)
    {
      uint64_t v11 = v111;
      uint64_t v12 = sub_1005AACC4((char *)(v37 > 1), v38 + 1, 1, v12);
    }
    *((void *)v12 + 2) = v13;
    uint64_t v39 = v12 + 32;
    uint64_t v40 = &v12[16 * v38 + 32];
    *(void *)uint64_t v40 = v14;
    *((void *)v40 + 1) = v10;
    if (v38)
    {
      while (1)
      {
        unint64_t v41 = v13 - 1;
        if (v13 >= 4)
        {
          unint64_t v46 = &v39[16 * v13];
          uint64_t v47 = *((void *)v46 - 8);
          uint64_t v48 = *((void *)v46 - 7);
          BOOL v52 = __OFSUB__(v48, v47);
          uint64_t v49 = v48 - v47;
          if (v52) {
            goto LABEL_120;
          }
          uint64_t v51 = *((void *)v46 - 6);
          uint64_t v50 = *((void *)v46 - 5);
          BOOL v52 = __OFSUB__(v50, v51);
          uint64_t v44 = v50 - v51;
          char v45 = v52;
          if (v52) {
            goto LABEL_121;
          }
          unint64_t v53 = v13 - 2;
          uint64_t v54 = &v39[16 * v13 - 32];
          uint64_t v56 = *(void *)v54;
          uint64_t v55 = *((void *)v54 + 1);
          BOOL v52 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          if (v52) {
            goto LABEL_123;
          }
          BOOL v52 = __OFADD__(v44, v57);
          uint64_t v58 = v44 + v57;
          if (v52) {
            goto LABEL_126;
          }
          if (v58 >= v49)
          {
            uint64_t v76 = &v39[16 * v41];
            uint64_t v78 = *(void *)v76;
            uint64_t v77 = *((void *)v76 + 1);
            BOOL v52 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            if (v52) {
              goto LABEL_130;
            }
            BOOL v69 = v44 < v79;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v70 = *((void *)v12 + 4);
            uint64_t v71 = *((void *)v12 + 5);
            BOOL v52 = __OFSUB__(v71, v70);
            uint64_t v63 = v71 - v70;
            char v64 = v52;
            goto LABEL_77;
          }
          uint64_t v43 = *((void *)v12 + 4);
          uint64_t v42 = *((void *)v12 + 5);
          BOOL v52 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          char v45 = v52;
        }
        if (v45) {
          goto LABEL_122;
        }
        unint64_t v53 = v13 - 2;
        uint64_t v59 = &v39[16 * v13 - 32];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v62 = __OFSUB__(v60, v61);
        uint64_t v63 = v60 - v61;
        char v64 = v62;
        if (v62) {
          goto LABEL_125;
        }
        uint64_t v65 = &v39[16 * v41];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v52 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v52) {
          goto LABEL_128;
        }
        if (__OFADD__(v63, v68)) {
          goto LABEL_129;
        }
        if (v63 + v68 >= v44)
        {
          BOOL v69 = v44 < v68;
LABEL_83:
          if (v69) {
            unint64_t v41 = v53;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v64) {
          goto LABEL_124;
        }
        uint64_t v72 = &v39[16 * v41];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v52 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v52) {
          goto LABEL_127;
        }
        if (v75 < v63) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v80 = v41 - 1;
        if (v41 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v81 = v12;
        uint64_t v82 = &v39[16 * v80];
        uint64_t v83 = *(void *)v82;
        os_log_type_t v84 = &v39[16 * v41];
        uint64_t v85 = *((void *)v84 + 1);
        sub_10059A2A4((char *)(v11 + 24 * *(void *)v82), (char *)(v11 + 24 * *(void *)v84), v11 + 24 * v85, __dst);
        if (v113) {
          goto LABEL_93;
        }
        if (v85 < v83) {
          goto LABEL_117;
        }
        if (v41 > *((void *)v81 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v82 = v83;
        *(void *)&v39[16 * v80 + 8] = v85;
        unint64_t v86 = *((void *)v81 + 2);
        if (v41 >= v86) {
          goto LABEL_119;
        }
        uint64_t v12 = v81;
        unint64_t v13 = v86 - 1;
        memmove(&v39[16 * v41], v84 + 16, 16 * (v86 - 1 - v41));
        *((void *)v81 + 2) = v86 - 1;
        uint64_t v11 = v111;
        if (v86 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v109;
    Swift::Int v3 = v110;
    if (v10 >= v110)
    {
      unint64_t v9 = v108;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_10059A2A4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  unint64_t v4 = __dst;
  Swift::Int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v27 = __dst;
  char v28 = __src;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      uint64_t v17 = 24 * v11;
      if (__dst != a2 || &a2[v17] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      unint64_t v18 = &v4[v17];
      int v26 = &v4[v17];
      char v28 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        unint64_t v19 = a3 - 24;
        uint64_t v20 = v6;
        while (1)
        {
          uint64_t v21 = (char *)(v19 + 24);
          unsigned int v22 = *((_DWORD *)v20 - 6);
          v20 -= 24;
          if (*((_DWORD *)v18 - 6) >= v22)
          {
            int v26 = v18 - 24;
            if (v21 < v18 || v19 >= (unint64_t)v18 || v21 != v18)
            {
              long long v24 = *(_OWORD *)(v18 - 24);
              *(void *)(v19 + 16) = *((void *)v18 - 1);
              *(_OWORD *)unint64_t v19 = v24;
            }
            uint64_t v20 = v6;
            v18 -= 24;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v21 != v6 || v19 >= (unint64_t)v6)
            {
              long long v23 = *(_OWORD *)v20;
              *(void *)(v19 + 16) = *((void *)v20 + 2);
              *(_OWORD *)unint64_t v19 = v23;
            }
            char v28 = v20;
            if (v20 <= v7) {
              goto LABEL_38;
            }
          }
          v19 -= 24;
          Swift::Int v6 = v20;
          if (v18 <= v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -23)
  {
    size_t v12 = 24 * v9;
    if (__dst != __src || &__src[v12] <= __dst) {
      memmove(__dst, __src, v12);
    }
    unint64_t v13 = &v4[v12];
    int v26 = &v4[v12];
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      do
      {
        if (*(_DWORD *)v6 >= *(_DWORD *)v4)
        {
          if (v7 != v4)
          {
            long long v16 = *(_OWORD *)v4;
            *((void *)v7 + 2) = *((void *)v4 + 2);
            *(_OWORD *)uint64_t v7 = v16;
          }
          v4 += 24;
          uint64_t v27 = v4;
          Swift::Int v14 = v6;
        }
        else
        {
          Swift::Int v14 = v6 + 24;
          if (v7 < v6 || v7 >= v14 || v7 != v6)
          {
            long long v15 = *(_OWORD *)v6;
            *((void *)v7 + 2) = *((void *)v6 + 2);
            *(_OWORD *)uint64_t v7 = v15;
          }
        }
        v7 += 24;
        if (v4 >= v13) {
          break;
        }
        Swift::Int v6 = v14;
      }
      while ((unint64_t)v14 < a3);
      char v28 = v7;
    }
LABEL_38:
    sub_1000A6860((void **)&v28, (const void **)&v27, &v26);
    return 1;
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

unint64_t sub_10059A548(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1005E2AE0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Swift::UInt v9 = *(void *)(*(void *)(a2 + 48) + 8 * v6);
        sub_1005E33F0();
        sub_1005E3410(v9);
        uint64_t result = sub_1005E3470();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          size_t v12 = (void *)(v11 + 8 * v3);
          unint64_t v13 = (void *)(v11 + 8 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *size_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t result = v14 + 72 * v3;
          long long v15 = (const void *)(v14 + 72 * v6);
          if (v3 != v6 || (int64_t v3 = v6, result >= (unint64_t)v15 + 72))
          {
            uint64_t result = (unint64_t)memmove((void *)result, v15, 0x48uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    long long v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    long long v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  uint64_t *v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_10059A710(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1005E2AE0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v11 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        sub_1005E33F0();
        id v12 = v11;
        sub_1005E2850();
        Swift::Int v13 = sub_1005E3470();

        unint64_t v14 = v13 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v14 < v9) {
            goto LABEL_5;
          }
        }
        else if (v14 >= v9)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          uint64_t v15 = *(void *)(a2 + 48);
          long long v16 = (void *)(v15 + 8 * v3);
          uint64_t v17 = (void *)(v15 + 8 * v6);
          if (v3 != v6 || v16 >= v17 + 1) {
            void *v16 = *v17;
          }
          uint64_t v18 = *(void *)(a2 + 56);
          unint64_t v19 = v18 + 24 * v3;
          BOOL v20 = (long long *)(v18 + 24 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v19 >= (unint64_t)v20 + 24))
          {
            long long v10 = *v20;
            *(void *)(v19 + 16) = *((void *)v20 + 2);
            *(_OWORD *)unint64_t v19 = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_10059A8F0(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  long long v10 = (void *)*v4;
  unint64_t v12 = sub_1005A0310(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= result && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      *(unsigned char *)(v18[7] + v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1005A3EEC();
    goto LABEL_7;
  }
  sub_1005A1BB4(result, a4 & 1);
  uint64_t result = sub_1005A0310(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_15:
    uint64_t result = sub_1005E3380();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1005BE2AC(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

void sub_10059AA24(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  unint64_t v6 = (void **)v5;
  char v11 = (void *)*v5;
  unint64_t v13 = sub_1005A0398(a4);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a5 & 1) != 0)
  {
LABEL_7:
    char v19 = *v6;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7] + 24 * v13;
      uint64_t v21 = *(void **)v20;
      swift_release();

      *(void *)uint64_t v20 = a1;
      *(void *)(v20 + 8) = a2;
      *(void *)(v20 + 16) = a3;
      return;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a5 & 1) == 0)
  {
    sub_1005A4BE8();
    goto LABEL_7;
  }
  sub_1005A31F0(v16, a5 & 1);
  unint64_t v22 = sub_1005A0398(a4);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_15:
    sub_1005E3380();
    __break(1u);
    return;
  }
  unint64_t v13 = v22;
  char v19 = *v6;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1005BE398(v13, (uint64_t)a4, a1, a2, a3, v19);
  id v24 = a4;
}

_OWORD *sub_10059AB80(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  long long v10 = (void *)*v4;
  unint64_t v12 = sub_100024668(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1005A4DB8();
      goto LABEL_7;
    }
    sub_1005A3520(v15, a4 & 1);
    unint64_t v21 = sub_100024668(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1005E3380();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    char v19 = (_OWORD *)(v18[7] + 32 * v12);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v19);
    return sub_100353CB8(a1, v19);
  }
LABEL_13:
  sub_1005BE3E8(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_10059ACD4(uint64_t a1)
{
  uint64_t v2 = a1;
  char v3 = *(unsigned char *)(a1 + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if (v3 & 0x3Fu) <= 0xD || (swift_stdlib_isStackAllocationSafe())
  {
    __chkstk_darwin();
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_10059AE2C((uint64_t)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_10059AE2C((uint64_t)v7, v4, v2);
    swift_slowDealloc();
  }
  return v2;
}

uint64_t sub_10059AE2C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = (unint64_t *)result;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v19 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v10 = v9 | (v4 << 6);
LABEL_18:
    int v14 = *(unsigned __int16 *)(*(void *)(a3 + 56) + 72 * v10 + 14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((*(unsigned __int16 *)RemoteMailbox.Attributes.noSelect.unsafeMutableAddressor() & ~v14) != 0)
    {
      int v15 = *(unsigned __int16 *)RemoteMailbox.Attributes.nonExistent.unsafeMutableAddressor();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v15 & ~v14) != 0)
      {
        *(unint64_t *)((char *)v17 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        BOOL v11 = __OFADD__(v18++, 1);
        if (v11) {
          goto LABEL_30;
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  BOOL v11 = __OFADD__(v4++, 1);
  if (v11)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v4 >= v19) {
    return sub_10059B318(v17, a2, v18, a3);
  }
  unint64_t v12 = *(void *)(v5 + 8 * v4);
  if (v12)
  {
LABEL_17:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_18;
  }
  int64_t v13 = v4 + 1;
  if (v4 + 1 >= v19) {
    return sub_10059B318(v17, a2, v18, a3);
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v4 + 2;
  if (v4 + 2 >= v19) {
    return sub_10059B318(v17, a2, v18, a3);
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v4 + 3;
  if (v4 + 3 >= v19) {
    return sub_10059B318(v17, a2, v18, a3);
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
LABEL_16:
    int64_t v4 = v13;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v19) {
      return sub_10059B318(v17, a2, v18, a3);
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_17;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10059B038(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_10000566C(&qword_100718D28);
  uint64_t result = sub_1005E2FF0();
  uint64_t v8 = result;
  uint64_t v38 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      uint64_t v40 = v10;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v38) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      uint64_t v16 = v10 + 1;
      if (!v15)
      {
        uint64_t v16 = v10 + 2;
        if (v10 + 2 >= v38) {
          return v8;
        }
        unint64_t v15 = a1[v16];
        if (!v15)
        {
          uint64_t v16 = v10 + 3;
          if (v10 + 3 >= v38) {
            return v8;
          }
          unint64_t v15 = a1[v16];
          if (!v15)
          {
            uint64_t v17 = v10 + 4;
            if (v10 + 4 >= v38) {
              return v8;
            }
            unint64_t v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                uint64_t v16 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v38) {
                  return v8;
                }
                unint64_t v15 = a1[v16];
                ++v17;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      uint64_t v40 = v16;
      unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    uint64_t v18 = 16 * v13;
    uint64_t v19 = v4;
    uint64_t v20 = (uint64_t *)(*(void *)(v4 + 48) + v18);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    uint64_t v23 = *(void *)(v4 + 56) + v18;
    uint64_t v24 = *(void *)v23;
    char v25 = *(unsigned char *)(v23 + 8);
    sub_1005E33F0();
    swift_bridgeObjectRetain_n();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1005E3470();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v32 = v28 == v31;
        if (v28 == v31) {
          unint64_t v28 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v28);
      }
      while (v33 == -1);
      unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    uint64_t v34 = 16 * v29;
    uint64_t v35 = (void *)(*(void *)(v8 + 48) + v34);
    *uint64_t v35 = v22;
    v35[1] = v21;
    uint64_t v36 = *(void *)(v8 + 56) + v34;
    *(void *)uint64_t v36 = v24;
    *(unsigned char *)(v36 + 8) = v25;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v19;
    uint64_t v10 = v40;
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10059B318(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_10000566C(&qword_10071A778);
  uint64_t result = sub_1005E2FF0();
  uint64_t v9 = result;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  uint64_t v40 = v4;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v41 = v11;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v39) {
        return v9;
      }
      unint64_t v16 = v38[v15];
      uint64_t v17 = v11 + 1;
      if (!v16)
      {
        uint64_t v17 = v11 + 2;
        if (v11 + 2 >= v39) {
          return v9;
        }
        unint64_t v16 = v38[v17];
        if (!v16)
        {
          uint64_t v17 = v11 + 3;
          if (v11 + 3 >= v39) {
            return v9;
          }
          unint64_t v16 = v38[v17];
          if (!v16)
          {
            uint64_t v18 = v11 + 4;
            if (v11 + 4 >= v39) {
              return v9;
            }
            unint64_t v16 = v38[v18];
            if (!v16)
            {
              while (1)
              {
                uint64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v39) {
                  return v9;
                }
                unint64_t v16 = v38[v17];
                ++v18;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      uint64_t v41 = v17;
      unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    uint64_t v19 = *(void *)(v4 + 56);
    uint64_t v20 = *(void *)(v4 + 48) + 16 * v14;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(unsigned int *)(v20 + 8);
    uint64_t v23 = (uint64_t *)(v19 + 72 * v14);
    uint64_t v24 = *v23;
    int v25 = *((_DWORD *)v23 + 2);
    __int16 v26 = *((_WORD *)v23 + 7);
    char v49 = *((unsigned char *)v23 + 16);
    char v50 = *((unsigned char *)v23 + 12);
    uint64_t v47 = v23[4];
    uint64_t v48 = v23[3];
    uint64_t v45 = v23[6];
    uint64_t v46 = v23[5];
    uint64_t v44 = v23[7];
    char v42 = *((unsigned char *)v23 + 65);
    char v43 = *((unsigned char *)v23 + 64);
    sub_1005E33F0();
    sub_1005E3410(v22 | (v22 << 32));
    uint64_t result = sub_1005E3470();
    uint64_t v27 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v33 = v29 == v32;
        if (v29 == v32) {
          unint64_t v29 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v29);
      }
      while (v34 == -1);
      unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
    }
    *(void *)(v12 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    uint64_t v35 = *(void *)(v9 + 48) + 16 * v30;
    *(void *)uint64_t v35 = v21;
    *(_DWORD *)(v35 + 8) = v22;
    uint64_t v36 = *(void *)(v9 + 56) + 72 * v30;
    *(void *)uint64_t v36 = v24;
    *(_DWORD *)(v36 + 8) = v25;
    *(unsigned char *)(v36 + 12) = v50;
    *(_WORD *)(v36 + 14) = v26;
    *(unsigned char *)(v36 + 16) = v49;
    *(void *)(v36 + 24) = v48;
    *(void *)(v36 + 32) = v47;
    *(void *)(v36 + 40) = v46;
    *(void *)(v36 + 48) = v45;
    *(void *)(v36 + 56) = v44;
    *(unsigned char *)(v36 + 64) = v43;
    *(unsigned char *)(v36 + 65) = v42;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = v40;
    uint64_t v11 = v41;
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void (*sub_10059B664(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10059B734(v6, a2, a3);
  return sub_1002C5234;
}

void (*sub_10059B6CC(void (**a1)(id *), unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10059B810(v6, a2, a3);
  return sub_1002C5234;
}

void (*sub_10059B734(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  char v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_1005E2CF0();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)char v3 = v4;
    return sub_10059B7B4;
  }
  __break(1u);
  return result;
}

void sub_10059B7B4(id *a1)
{
}

unint64_t sub_10059B7BC()
{
  unint64_t result = qword_10071A768;
  if (!qword_10071A768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A768);
  }
  return result;
}

void (*sub_10059B810(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  char v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_1005E2CF0();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)char v3 = v4;
    return sub_10059CDDC;
  }
  __break(1u);
  return result;
}

void sub_10059B890(void *a1, unsigned char *a2, uint64_t a3)
{
  id v7 = v3;
  uint64_t v8 = sub_1005E27F0();

  uint64_t v21 = a2;
  if (!a2 || !a3) {
    goto LABEL_5;
  }
  if (a3 < 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v8 == sub_1005E2800())
  {
LABEL_5:
    *a1 = v7;
    a1[1] = v8;
    return;
  }
  char v9 = sub_1005E2810();
  id v10 = v7;
  uint64_t v11 = sub_1005E27F0();
  uint64_t v12 = sub_1005E2800();

  if (v8 >= v11 && v8 < v12)
  {
    *a2 = v9;
    if (a3 == 1)
    {
      ++v8;
      goto LABEL_5;
    }
    uint64_t v20 = a1;
    uint64_t v13 = 1;
    while (a3 != v13)
    {
      uint64_t v14 = v8 + v13;
      if (v8 + v13 == sub_1005E2800())
      {
        v8 += v13;
        goto LABEL_18;
      }
      char v15 = sub_1005E2810();
      id v16 = v10;
      uint64_t v17 = sub_1005E27F0();
      uint64_t v18 = sub_1005E2800();

      if (v14 < v17 || v14 >= v18) {
        goto LABEL_20;
      }
      uint64_t v19 = v13 + 1;
      v21[v13] = v15;
      uint64_t v13 = v19;
      if (a3 == v19)
      {
        v8 += v19;
LABEL_18:
        a1 = v20;
        goto LABEL_5;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
}

void sub_10059BA20(void *a1)
{
  uint64_t v2 = sub_1005E27F0();
  uint64_t v3 = sub_1005E2800();
  uint64_t v4 = sub_1005E27F0();
  uint64_t v5 = sub_1005E2800();
  if (v2 < v4 || v5 < v2)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v6 = sub_1005E27F0();
  uint64_t v7 = sub_1005E2800();
  if (v3 < v6 || v7 < v3) {
    goto LABEL_14;
  }
  BOOL v8 = __OFSUB__(v3, v2);
  uint64_t v9 = v3 - v2;
  if (v8)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  if (v9)
  {
    if (v9 < 1)
    {
      id v10 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_10000566C(&qword_100719918);
      id v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      long long v10[2] = v9;
      v10[3] = 2 * v11 - 64;
    }
    id v12 = a1;
    sub_10059B890(v15, (unsigned char *)v10 + 32, v9);
    uint64_t v14 = v13;

    if (v14 != v9) {
      goto LABEL_16;
    }
  }
}

unint64_t sub_10059BB34()
{
  unint64_t result = qword_10071A770;
  if (!qword_10071A770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A770);
  }
  return result;
}

double sub_10059BB88@<D0>(void **a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10055781C(*a1, &v4);
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_10059BBD8(uint64_t a1)
{
  unint64_t v2 = **(void **)(v1 + 16);
  long long v4[2] = a1;
  return sub_1005931A4((uint64_t (*)(id *))sub_10059C60C, (uint64_t)v4, v2) & 1;
}

unint64_t sub_10059BC20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t result = (unint64_t)_swiftEmptyArrayStorage;
  if (v3)
  {
    sub_1005E2DA0();
    unint64_t result = sub_1000D38D0(a1);
    int64_t v6 = result;
    int v8 = v7;
    char v10 = v9 & 1;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(a1 + 56 + (((unint64_t)v6 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_16;
      }
      if (*(_DWORD *)(a1 + 36) != v8) {
        goto LABEL_17;
      }
      unint64_t result = *(void *)(*(void *)(a1 + 48) + 8 * v6);
      if ((a2 & 0xC000000000000001) != 0)
      {
        sub_1005E2CF0();
      }
      else
      {
        if ((result & 0x8000000000000000) != 0) {
          goto LABEL_18;
        }
        if (result >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_19;
        }
        id v13 = *(id *)(a2 + 32 + 8 * result);
      }
      sub_1005E2D60();
      sub_1005E2DD0();
      sub_1005E2DE0();
      sub_1005E2D70();
      unint64_t result = sub_1000D3974(v6, v8, v10 & 1, a1);
      int64_t v6 = result;
      int v8 = v11;
      char v10 = v12 & 1;
      if (!--v3)
      {
        sub_100060FF0(result, v11, v12 & 1);
        return (unint64_t)_swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  return result;
}

uint64_t sub_10059BDC0(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    uint64_t v5 = 0;
    unint64_t v6 = v3 & 0xC000000000000001;
    uint64_t v25 = v3 + 32;
    unint64_t v26 = v3 & 0xC000000000000001;
    unint64_t v27 = a2 & 0xC000000000000001;
    unint64_t v7 = a2 >> 62;
    uint64_t v23 = v4;
    uint64_t v24 = v3;
    while (1)
    {
      if (v6)
      {
        int v8 = *(void **)(sub_1005E2CF0() + 16);
        if (!v7) {
          goto LABEL_6;
        }
      }
      else
      {
        uint64_t v14 = *(void *)(v25 + 8 * v5);
        swift_retain();
        int v8 = *(void **)(v14 + 16);
        if (!v7)
        {
LABEL_6:
          uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          id v10 = v8;
          swift_bridgeObjectRetain();
          if (!v9) {
            goto LABEL_14;
          }
          goto LABEL_7;
        }
      }
      id v15 = v8;
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1005E2FB0();
      if (!v9)
      {
LABEL_14:

        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
LABEL_7:
      if (v27) {
        id v11 = (id)sub_1005E2CF0();
      }
      else {
        id v11 = *(id *)(a2 + 32);
      }
      char v12 = v11;
      _s14descr1006B9AE9V7MailboxCMa();
      char v13 = sub_1005E2840();

      if (v13)
      {
LABEL_31:

        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
      if (v9 != 1) {
        break;
      }

      swift_bridgeObjectRelease();
      unint64_t v6 = v26;
LABEL_26:
      unint64_t v7 = a2 >> 62;
LABEL_27:
      swift_release();
      if (__OFADD__(v5++, 1)) {
        goto LABEL_34;
      }
      if (v5 == v4) {
        return 0;
      }
    }
    if (v27)
    {
      uint64_t v16 = 1;
      while (1)
      {
        sub_1005E2CF0();
        uint64_t v17 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          break;
        }
        uint64_t v3 = sub_1005E2840();
        swift_unknownObjectRelease();
        if (v3) {
          goto LABEL_31;
        }
        ++v16;
        if (v17 == v9) {
          goto LABEL_25;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v3 = 5;
      while (1)
      {
        uint64_t v18 = v3 - 3;
        if (__OFADD__(v3 - 4, 1)) {
          break;
        }
        id v19 = *(id *)(a2 + 8 * v3);
        char v20 = sub_1005E2840();

        if (v20) {
          goto LABEL_31;
        }
        ++v3;
        if (v18 == v9)
        {
LABEL_25:

          swift_bridgeObjectRelease();
          uint64_t v4 = v23;
          uint64_t v3 = v24;
          unint64_t v6 = v26;
          goto LABEL_26;
        }
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_10059C078(uint64_t *a1, unint64_t a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v37 = a2;
  unint64_t v6 = sub_10059BDC0(v5, a2);
  char v8 = v7;
  uint64_t v9 = v2;
  swift_bridgeObjectRelease();
  if (v2) {
    return v6;
  }
  if ((v8 & 1) == 0)
  {
    unint64_t v10 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_82;
    }
    if ((unint64_t)*a1 >> 62)
    {
LABEL_83:
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1005E2FB0();
      swift_bridgeObjectRelease();
      if (v10 != v31) {
        goto LABEL_6;
      }
    }
    else if (v10 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      uint64_t v34 = v9;
      unint64_t v35 = v37 & 0xC000000000000001;
      BOOL v33 = a1;
      while (1)
      {
        uint64_t v11 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          uint64_t v12 = sub_1005E2CF0();
        }
        else
        {
          if ((v10 & 0x8000000000000000) != 0) {
            goto LABEL_71;
          }
          if (v10 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_72;
          }
          uint64_t v12 = *(void *)(v11 + 8 * v10 + 32);
          swift_retain();
        }
        char v13 = *(void **)(v12 + 16);
        if (v37 >> 62)
        {
          id v18 = v13;
          swift_bridgeObjectRetain();
          uint64_t v14 = sub_1005E2FB0();
          if (!v14)
          {
LABEL_18:

            swift_bridgeObjectRelease();
            goto LABEL_33;
          }
        }
        else
        {
          uint64_t v14 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
          id v15 = v13;
          swift_bridgeObjectRetain();
          if (!v14) {
            goto LABEL_18;
          }
        }
        unint64_t v36 = v6;
        if (v35) {
          id v16 = (id)sub_1005E2CF0();
        }
        else {
          id v16 = *(id *)(v37 + 32);
        }
        uint64_t v17 = v16;
        _s14descr1006B9AE9V7MailboxCMa();
        unint64_t v6 = sub_1005E2840();

        if (v6)
        {
          swift_release();

          swift_bridgeObjectRelease();
LABEL_57:
          unint64_t v6 = v36;
          BOOL v28 = __OFADD__(v10++, 1);
          if (v28) {
            goto LABEL_73;
          }
          goto LABEL_58;
        }
        if (v14 != 1)
        {
          if (v35)
          {
            uint64_t v19 = 1;
            while (1)
            {
              uint64_t v20 = sub_1005E2CF0();
              a1 = (uint64_t *)(v19 + 1);
              if (__OFADD__(v19, 1)) {
                break;
              }
              unint64_t v6 = v20;
              uint64_t v9 = sub_1005E2840();
              swift_unknownObjectRelease();
              if (v9) {
                goto LABEL_56;
              }
              ++v19;
              if (a1 == (uint64_t *)v14) {
                goto LABEL_31;
              }
            }
            __break(1u);
LABEL_71:
            __break(1u);
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
            goto LABEL_74;
          }
          uint64_t v9 = 5;
          while (1)
          {
            a1 = (uint64_t *)(v9 - 3);
            if (__OFADD__(v9 - 4, 1)) {
              break;
            }
            id v21 = *(id *)(v37 + 8 * v9);
            unint64_t v6 = sub_1005E2840();

            if (v6)
            {
LABEL_56:
              swift_release();

              swift_bridgeObjectRelease();
              a1 = v33;
              uint64_t v9 = v34;
              goto LABEL_57;
            }
            ++v9;
            if (a1 == (uint64_t *)v14)
            {
LABEL_31:

              swift_bridgeObjectRelease();
              a1 = v33;
              uint64_t v9 = v34;
              goto LABEL_32;
            }
          }
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
LABEL_82:
          __break(1u);
          goto LABEL_83;
        }

        swift_bridgeObjectRelease();
LABEL_32:
        unint64_t v6 = v36;
LABEL_33:
        swift_release();
        if (v6 == v10) {
          goto LABEL_52;
        }
        uint64_t v22 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          uint64_t v23 = sub_1005E2CF0();
          uint64_t v22 = *a1;
          if ((*a1 & 0xC000000000000001) == 0) {
            goto LABEL_38;
          }
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_76;
          }
          if (v6 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_77;
          }
          uint64_t v23 = *(void *)(v22 + 8 * v6 + 32);
          swift_retain();
          if ((v22 & 0xC000000000000001) == 0)
          {
LABEL_38:
            if ((v10 & 0x8000000000000000) != 0) {
              goto LABEL_78;
            }
            if (v10 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_79;
            }
            uint64_t v24 = *(void *)(v22 + 8 * v10 + 32);
            swift_retain();
            goto LABEL_41;
          }
        }
        uint64_t v24 = sub_1005E2CF0();
        uint64_t v22 = *a1;
LABEL_41:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v22;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v22 < 0 || (v22 & 0x4000000000000000) != 0)
        {
          uint64_t v22 = sub_100572178(v22);
          *a1 = v22;
        }
        *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v24;
        swift_release();
        sub_1005E20E0();
        uint64_t v26 = *a1;
        int v27 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v26;
        if (!v27 || v26 < 0 || (v26 & 0x4000000000000000) != 0)
        {
          uint64_t v26 = sub_100572178(v26);
          *a1 = v26;
        }
        if ((v10 & 0x8000000000000000) != 0) {
          goto LABEL_80;
        }
        if (v10 >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_81;
        }
        *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20) = v23;
        swift_release();
        sub_1005E20E0();
LABEL_52:
        BOOL v28 = __OFADD__(v6++, 1);
        if (v28) {
          goto LABEL_75;
        }
        BOOL v28 = __OFADD__(v10++, 1);
        if (v28) {
          goto LABEL_73;
        }
LABEL_58:
        if ((unint64_t)*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v29 = sub_1005E2FB0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v29 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v10 == v29) {
          return v6;
        }
      }
    }
    return v6;
  }
  if (!((unint64_t)*a1 >> 62)) {
    return *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1005E2FB0();
  swift_bridgeObjectRelease();
  return v32;
}

void *sub_10059C568(void *result)
{
  if (result)
  {

    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_10059C5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageBeingDownloaded(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL sub_10059C60C(void *a1)
{
  return sub_1000827C4(a1, *(void **)(v1 + 16));
}

uint64_t sub_10059C62C@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v14 = _s5StateV7RequestVMa(0);
  uint64_t result = __chkstk_darwin();
  uint64_t v17 = (_DWORD *)((char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    long long v39 = 0uLL;
    *((void *)&v40 + 1) = 0;
    *(void *)&long long v40 = _swiftEmptyArrayStorage;
LABEL_13:
    char v41 = 1;
    goto LABEL_14;
  }
  uint64_t v43 = a6;
  uint64_t v18 = *(void *)(v7 + 72);
  swift_beginAccess();
  uint64_t v19 = sub_10056FFA4(a1, v18);
  swift_endAccess();
  uint64_t v20 = OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger;
  sub_1000079E4(a3, (uint64_t)v17 + *(int *)(v14 + 20), (uint64_t *)&unk_100719790);
  *uint64_t v17 = a5;
  *(void *)((char *)v17 + *(int *)(v14 + 24)) = a4;
  id v21 = *(void **)(v19 + 24);
  swift_beginAccess();
  uint64_t v22 = v21[6];
  uint64_t v24 = v21[10];
  uint64_t v23 = v21[11];
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v22 + 48));
  sub_10059BB88((void **)(v22 + 16), v46);
  os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 48));
  long long v25 = v46[0];
  swift_release();
  swift_beginAccess();
  swift_retain();
  sub_100576128((uint64_t)v17, v25, v24, *((uint64_t *)&v25 + 1), v23, v7 + v20, (uint64_t *)(v19 + 40), v19, (uint64_t *)v45);
  swift_endAccess();
  swift_release();
  sub_10059CD4C((uint64_t)v17, _s5StateV7RequestVMa);
  swift_release();
  uint64_t result = sub_1003DC26C(v45, (uint64_t)v46);
  if (v47)
  {
    uint64_t v44 = *(void **)&v46[0];
    swift_bridgeObjectRetain();
    sub_100599B0C((uint64_t *)&v44);
    a6 = v43;
    uint64_t v26 = v44;
    int64_t v27 = v44[2];
    if (v27)
    {
      uint64_t v44 = _swiftEmptyArrayStorage;
      sub_100590DA4(0, v27, 0);
      BOOL v28 = v44;
      uint64_t v29 = v26 + 6;
      do
      {
        MessageToDownload.init(message:size:bodyStructure:)();
        int v31 = v30;
        uint64_t v33 = v32;
        __int16 v35 = v34;
        uint64_t v44 = v28;
        unint64_t v37 = v28[2];
        unint64_t v36 = v28[3];
        if (v37 >= v36 >> 1)
        {
          sub_100590DA4(v36 > 1, v37 + 1, 1);
          BOOL v28 = v44;
        }
        _OWORD v28[2] = v37 + 1;
        uint64_t v38 = &v28[3 * v37];
        *((_DWORD *)v38 + 8) = v31;
        v38[5] = v33;
        *((unsigned char *)v38 + 48) = v35 & 1;
        *((unsigned char *)v38 + 49) = HIBYTE(v35) & 1;
        v29 += 3;
        --v27;
      }
      while (v27);
      sub_100592C64((uint64_t)v45);
      uint64_t result = swift_release();
      a6 = v43;
    }
    else
    {
      sub_100592C64((uint64_t)v45);
      uint64_t result = swift_release();
      BOOL v28 = _swiftEmptyArrayStorage;
    }
    long long v39 = 0uLL;
    long long v40 = (unint64_t)v28;
    goto LABEL_13;
  }
  char v41 = 0;
  long long v40 = v46[0];
  long long v39 = v46[1];
  a6 = v43;
LABEL_14:
  *(_OWORD *)a6 = v40;
  *(_OWORD *)(a6 + 16) = v39;
  *(unsigned char *)(a6 + 32) = v41;
  return result;
}

uint64_t sub_10059C99C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10059CA04(uint64_t a1, char a2)
{
  if (!a2) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_10059CA14(uint64_t a1, char a2)
{
  if (!a2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_10059CA24(uint64_t a1, uint64_t a2)
{
  sub_10000566C((uint64_t *)&unk_100719790);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v25 - v6;
  sub_10053E98C();
  sub_1005E3680();
  uint64_t v8 = *(void *)(a2 + 16);
  if (v8)
  {
    uint64_t v9 = v7;
    swift_bridgeObjectRetain();
    uint64_t v10 = 32;
    uint64_t v11 = v8;
    do
    {
      int v27 = *(_DWORD *)(a2 + v10);
      MessageIdentifierSet.insert(_:)();
      v10 += 24;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v7 = v9;
  }
  sub_10001FDF0((uint64_t)v5, (uint64_t)v7, (uint64_t *)&unk_100719790);
  sub_10056EC84((uint64_t)v7);
  if (!v2)
  {
    uint64_t v13 = v12;
    if (v8)
    {
      uint64_t v25 = 0;
      uint64_t v26 = v7;
      swift_bridgeObjectRetain();
      uint64_t v14 = a2 + 48;
      do
      {
        uint64_t v15 = *(void *)(v14 - 12);
        if (v15 != 2)
        {
          if (*(void *)(v13 + 16))
          {
            unint64_t v16 = sub_1003F6668(*(_DWORD *)(v14 - 16));
            if (v17)
            {
              uint64_t v18 = *(void **)(*(void *)(v13 + 56) + 8 * v16);
              uint64_t v19 = Flags.init(_:)(v15 & 0xFFFFFFFF01010101);
              swift_bridgeObjectRetain();
              id v20 = v18;
              NSString v21 = sub_1005E1BD0();
              [v20 willChangeValueForKey:v21];

              id v22 = [objc_allocWithZone((Class)NSNumber) initWithLongLong:sub_100556AAC(v19 & 0xFFFF010101010101)];
              [v20 setPrimitiveFlags:v22];

              NSString v23 = sub_1005E1BD0();
              [v20 didChangeValueForKey:v23];

              swift_bridgeObjectRelease();
            }
          }
        }
        v14 += 24;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
      uint64_t v7 = v26;
    }
    swift_bridgeObjectRelease();
  }
  return sub_100007A48((uint64_t)v7, (uint64_t *)&unk_100719790);
}

uint64_t sub_10059CCE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10059CD4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10059CDAC()
{
  return _swift_deallocObject(v0, 24, 7);
}

ValueMetadata *_s14descr1006B9C11V23MessagesMissingSectionsOMa()
{
  return &_s14descr1006B9C11V23MessagesMissingSectionsON;
}

ValueMetadata *_s14descr1006B9C11V8NoUploadVMa()
{
  return &_s14descr1006B9C11V8NoUploadVN;
}

id sub_10059CDE0(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:1];
  [v2 setPersistentStoreCoordinator:a1];
  sub_1005E2790();
  if (aBlock[0] == 1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    aBlock[4] = sub_10059E0F4;
    aBlock[5] = v3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10046A1E4;
    aBlock[3] = &unk_1006FEAC0;
    uint64_t v4 = _Block_copy(aBlock);
    id v5 = v2;
    swift_release();
    [v5 performBlock:v4];
    _Block_release(v4);
  }
  else
  {
    if (qword_1007187C8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1005E0ED0();
    sub_1003461B0(v6, (uint64_t)qword_1007623A8);
    uint64_t v7 = sub_1005E0EB0();
    os_log_type_t v8 = sub_1005E25A0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 134218240;
      sub_1005E2960();
      *(_WORD *)(v9 + 12) = 2048;
      aBlock[0] = 1;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Store version is %ld, current is %ld.", (uint8_t *)v9, 0x16u);
      swift_slowDealloc();
    }
    else
    {
    }
    return 0;
  }
  return v5;
}

id sub_10059D050(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1005E25E0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005E07F0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)aBlock - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v13);
  sub_10059D790(a4);
  sub_1005E25D0();
  sub_1005E27E0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  sub_10059D3A0(a4);
  id v16 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:1];
  [v16 setPersistentStoreCoordinator:a3];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  aBlock[4] = sub_10059E198;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046A1E4;
  aBlock[3] = &unk_1006FEB10;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = v16;
  swift_release();
  [v19 performBlock:v18];
  _Block_release(v18);
  return v19;
}

uint64_t sub_10059D3A0(uint64_t a1)
{
  uint64_t v21 = sub_1005E07F0();
  uint64_t v16 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005E25E0();
  uint64_t v15 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E25D0();
  sub_10059D790(a1);
  sub_10000566C(&qword_10071A798);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6690;
  uint64_t v19 = sub_1005E1C00();
  uint64_t v20 = v7;
  sub_1005E2BF0();
  *(void *)(inited + 96) = &type metadata for Bool;
  *(unsigned char *)(inited + 72) = 1;
  uint64_t v19 = sub_1005E1C00();
  uint64_t v20 = v8;
  sub_1005E2BF0();
  *(void *)(inited + 168) = &type metadata for Bool;
  *(unsigned char *)(inited + 144) = 1;
  sub_10058A600(inited);
  uint64_t v9 = v17;
  uint64_t v10 = (void *)sub_1005E27D0();
  uint64_t v11 = (void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v12 = (uint64_t (**)(char *, uint64_t))(v15 + 8);
  if (!v9) {

  }
  swift_bridgeObjectRelease();
  (*v11)(v3, v21);
  return (*v12)(v5, v18);
}

void sub_10059D650(void *a1)
{
  strcpy((char *)&v6, "StoreVersion");
  BYTE13(v6) = 0;
  HIWORD(v6) = -5120;
  id v2 = [objc_allocWithZone((Class)NSNumber) initWithInteger:1];
  id v3 = [a1 userInfo];
  strcpy((char *)v5, "StoreVersion");
  BYTE5(v5[1]) = 0;
  HIWORD(v5[1]) = -5120;
  id v4 = v2;
  objc_msgSend(v3, "__swift_setObject:forKeyedSubscript:", v4, sub_1005E3350(), v5[0], v5[1], v6, 0xD000000000000014, 0x80000001005ED0D0, sub_10059DB14, 0, sub_10059DB5C, 0, sub_10059DB90, 0);

  swift_unknownObjectRelease();
  sub_10057C958(&v6);
}

uint64_t sub_10059D790(uint64_t a1)
{
  uint64_t v2 = sub_1005E07F0();
  uint64_t v24 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E0710();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [self defaultManager];
  sub_1005E0770(v10);
  uint64_t v12 = v11;
  unint64_t v25 = 0;
  unsigned int v13 = [v9 createDirectoryAtURL:v11 withIntermediateDirectories:1 attributes:0 error:&v25];

  id v14 = (id)v25;
  if (v13)
  {
    unint64_t v25 = 0x6573616261746164;
    unint64_t v26 = 0xE800000000000000;
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for URL.DirectoryHint.inferFromPath(_:), v5);
    sub_10053EF64();
    id v15 = v14;
    sub_1005E07E0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    id v17 = (id)v25;
    sub_1005E06F0();

    swift_willThrow();
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v4, a1, v2);
    unint64_t v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    sub_1005E2C80(23);
    swift_bridgeObjectRelease();
    unint64_t v25 = 0xD000000000000011;
    unint64_t v26 = 0x80000001005ED1B0;
    v27._countAndFlagsBits = sub_1005E07D0();
    sub_1005E1E30(v27);
    swift_bridgeObjectRelease();
    v28._countAndFlagsBits = 8250;
    v28._object = (void *)0xE200000000000000;
    sub_1005E1E30(v28);
    uint64_t v18 = (void *)sub_1005E06E0();
    id v19 = [v18 description];
    uint64_t v20 = sub_1005E1C00();
    id v22 = v21;

    v29._countAndFlagsBits = v20;
    v29._object = v22;
    sub_1005E1E30(v29);

    swift_bridgeObjectRelease();
    uint64_t result = sub_1005E2F20();
    __break(1u);
  }
  return result;
}

id sub_10059DB14(uint64_t *a1)
{
  uint64_t v1 = *a1;
  id v2 = objc_allocWithZone((Class)NSNumber);
  return [v2 initWithInteger:v1];
}

id sub_10059DB5C@<X0>(id result@<X0>, void *a2@<X8>)
{
  if (result) {
    uint64_t result = [result integerValue];
  }
  *a2 = result;
  return result;
}

void sub_10059DB90()
{
  if (qword_1007187C8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1005E0ED0();
  sub_1003461B0(v0, (uint64_t)qword_1007623A8);
  osint log = sub_1005E0EB0();
  os_log_type_t v1 = sub_1005E25C0();
  if (os_log_type_enabled(oslog, v1))
  {
    id v2 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v2 = 134217984;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "Saving current store version %ld.", v2, 0xCu);
    swift_slowDealloc();
  }
  else
  {
  }
}

id sub_10059DCC8(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6 = sub_1005E07F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)sub_10057CDDC();
  id v11 = [objc_allocWithZone((Class)NSPersistentStoreCoordinator) initWithManagedObjectModel:v10];

  NSString v12 = sub_1005E1BD0();
  [v11 setName:v12];

  sub_10059D3A0(a1);
  id v13 = sub_10059CDE0((uint64_t)v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  if (!v13) {
    id v13 = sub_10059D050(a2, a3, (uint64_t)v11, (uint64_t)v9);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v13;
}

uint64_t sub_10059DFFC@<X0>(uint64_t *a1@<X8>)
{
  strcpy((char *)v3, "StoreVersion");
  HIBYTE(v3[6]) = 0;
  v3[7] = -5120;
  unint64_t v4 = 0xD000000000000014;
  unint64_t v5 = 0x80000001005ED0D0;
  uint64_t v6 = sub_10059DB14;
  uint64_t v7 = 0;
  uint64_t v8 = sub_10059DB5C;
  uint64_t v9 = 0;
  uint64_t v10 = sub_10059DB90;
  uint64_t v11 = 0;
  uint64_t result = sub_1005799CC(v3);
  *a1 = result;
  return result;
}

uint64_t sub_10059E0BC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10059E0F4()
{
  sub_10059D650(*(void **)(v0 + 16));
}

uint64_t sub_10059E110(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10059E120()
{
  return swift_release();
}

ValueMetadata *_s12StoreVersionVMa()
{
  return &_s12StoreVersionVN;
}

unint64_t sub_10059E13C()
{
  unint64_t result = qword_10071A7A0;
  if (!qword_10071A7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A7A0);
  }
  return result;
}

uint64_t sub_10059E1A0(uint64_t a1)
{
  sub_1005ABDCC();
  uint64_t result = sub_1005E2280();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = *(void *)(a1 + 48) + 16 * v10;
    uint64_t v12 = *(void *)v11;
    unsigned int v13 = *(_DWORD *)(v11 + 8);
    swift_bridgeObjectRetain();
    sub_1005A5174((uint64_t)&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10059E340(uint64_t a1)
{
  uint64_t v4 = v2;
  sub_10000566C(&qword_100718A60);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v69 = v1;
  uint64_t v8 = sub_10059EA18();
  if (v2) {
    return v3;
  }
  uint64_t v9 = v8;
  uint64_t v63 = 0;
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v87 = sub_10059E1A0(v10);
  unint64_t v74 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v65 = a1 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v66 = (unint64_t)(v12 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v15 = 0;
  char v64 = v7;
  uint64_t v68 = v9;
  uint64_t v67 = a1;
  if (!v14) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v16 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v16 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    uint64_t v21 = *(void *)(a1 + 56) + 72 * i;
    v83[0] = *(_OWORD *)v21;
    long long v23 = *(_OWORD *)(v21 + 32);
    long long v22 = *(_OWORD *)(v21 + 48);
    long long v24 = *(_OWORD *)(v21 + 16);
    __int16 v86 = *(_WORD *)(v21 + 64);
    long long v84 = v23;
    long long v85 = v22;
    v83[1] = v24;
    uint64_t v25 = RemoteMailbox.name.getter();
    unsigned int v27 = v26;
    sub_10002292C((uint64_t)v83);
    sub_1005AB2CC(v25, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v28 = RemoteMailbox.name.getter();
    if (*(void *)(v9 + 16) && (unint64_t v30 = sub_100024264(v28, v29), (v31 & 1) != 0))
    {
      id v32 = *(id *)(*(void *)(v9 + 56) + 8 * v30);
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v71 = v14;
      uint64_t v72 = v15;
      swift_bridgeObjectRelease();
      uint64_t v33 = (void *)v69[6];
      uint64_t v70 = v69[2];
      uint64_t v4 = RemoteMailbox.name.getter();
      char v34 = HIBYTE(v86);
      if ((v86 & 0x100) != 0)
      {
        uint64_t v35 = 0;
        int v36 = 0;
        char v37 = 1;
      }
      else
      {
        uint64_t v35 = *((void *)&v85 + 1);
        int v36 = DWORD1(v84);
        char v37 = v86 & 1;
      }
      _s14descr1006B9AE9V7MailboxCMa();
      int v75 = v36;
      char v76 = v34;
      uint64_t v77 = 0;
      char v78 = 1;
      uint64_t v79 = v35;
      char v80 = v37;
      uint64_t v81 = 0;
      char v82 = 1;
      id v38 = v33;
      swift_bridgeObjectRetain();
      id v32 = sub_10057B2EC(v38);
      uint64_t v9 = v68;
      a1 = v67;
      unint64_t v14 = v71;
      int64_t v15 = v72;
    }
    sub_10001D550((uint64_t)v83);
    id v39 = v32;
    os_log_type_t v1 = (void **)&v74;
    sub_1005E20A0();
    if (*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1005E2110();
    }
    sub_1005E2170();
    sub_1005E20E0();

    if (v14) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v18 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    if (v18 >= v66) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v65 + 8 * v18);
    ++v15;
    if (!v19)
    {
      int64_t v15 = v18 + 1;
      if (v18 + 1 >= v66) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v65 + 8 * v15);
      if (!v19)
      {
        int64_t v15 = v18 + 2;
        if (v18 + 2 >= v66) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v65 + 8 * v15);
        if (!v19)
        {
          int64_t v15 = v18 + 3;
          if (v18 + 3 >= v66) {
            goto LABEL_33;
          }
          unint64_t v19 = *(void *)(v65 + 8 * v15);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v14 = (v19 - 1) & v19;
  }
  int64_t v20 = v18 + 4;
  if (v20 < v66)
  {
    unint64_t v19 = *(void *)(v65 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        int64_t v15 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          break;
        }
        if (v15 >= v66) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v65 + 8 * v15);
        ++v20;
        if (v19) {
          goto LABEL_21;
        }
      }
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    int64_t v15 = v20;
    goto LABEL_21;
  }
LABEL_33:
  swift_release();
  uint64_t v40 = v87 + 56;
  uint64_t v41 = 1 << *(unsigned char *)(v87 + 32);
  uint64_t v42 = -1;
  if (v41 < 64) {
    uint64_t v42 = ~(-1 << v41);
  }
  unint64_t v43 = v42 & *(void *)(v87 + 56);
  int64_t v3 = (unint64_t)(v41 + 63) >> 6;
  uint64_t v72 = v87;
  swift_bridgeObjectRetain();
  int64_t v44 = 0;
  while (1)
  {
    if (v43)
    {
      unint64_t v45 = __clz(__rbit64(v43));
      v43 &= v43 - 1;
      unint64_t v46 = v45 | (v44 << 6);
      if (!*(void *)(v9 + 16)) {
        continue;
      }
LABEL_50:
      os_log_type_t v1 = (void **)v9;
      unint64_t v50 = sub_100024264(*(void *)(*(void *)(v72 + 48) + 16 * v46), *(_DWORD *)(*(void *)(v72 + 48) + 16 * v46 + 8));
      if (v51)
      {
        BOOL v52 = *(void **)(*(void *)(v9 + 56) + 8 * v50);
        unint64_t v53 = (void *)v69[6];
        uint64_t v4 = v69[8];
        id v54 = v52;
        sub_10053C964(0, 1);
        uint64_t v55 = sub_10000566C(&qword_100718A58);
        uint64_t v56 = v40;
        uint64_t v57 = (uint64_t)v64;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v64, 1, 1, v55);
        sub_10053D614((uint64_t)v54, v57, v4);
        uint64_t v58 = v57;
        uint64_t v40 = v56;
        sub_1005AB4B0(v58);
        uint64_t v59 = v53;
        uint64_t v9 = v68;
        [v59 deleteObject:v54];
        os_log_type_t v1 = (void **)v4;
        sub_10053B32C();
      }
      continue;
    }
    if (__OFADD__(v44++, 1)) {
      goto LABEL_65;
    }
    if (v44 >= v3) {
      break;
    }
    unint64_t v48 = *(void *)(v40 + 8 * v44);
    if (!v48)
    {
      int64_t v49 = v44 + 1;
      if (v44 + 1 >= v3) {
        break;
      }
      unint64_t v48 = *(void *)(v40 + 8 * v49);
      if (!v48)
      {
        int64_t v49 = v44 + 2;
        if (v44 + 2 >= v3) {
          break;
        }
        unint64_t v48 = *(void *)(v40 + 8 * v49);
        if (!v48)
        {
          int64_t v49 = v44 + 3;
          if (v44 + 3 >= v3) {
            break;
          }
          unint64_t v48 = *(void *)(v40 + 8 * v49);
          if (!v48)
          {
            while (1)
            {
              int64_t v44 = v49 + 1;
              if (__OFADD__(v49, 1)) {
                goto LABEL_66;
              }
              if (v44 >= v3) {
                goto LABEL_56;
              }
              unint64_t v48 = *(void *)(v40 + 8 * v44);
              ++v49;
              if (v48) {
                goto LABEL_49;
              }
            }
          }
        }
      }
      int64_t v44 = v49;
    }
LABEL_49:
    unint64_t v43 = (v48 - 1) & v48;
    unint64_t v46 = __clz(__rbit64(v48)) + (v44 << 6);
    if (*(void *)(v9 + 16)) {
      goto LABEL_50;
    }
  }
LABEL_56:
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v60 = v63;
  sub_10059F69C();
  uint64_t v4 = v60;
  os_log_type_t v1 = (void **)v74;
  if (v60)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v3;
  }
  if ((v74 & 0x8000000000000000) == 0 && (v74 & 0x4000000000000000) == 0)
  {
    uint64_t v62 = v74 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    goto LABEL_62;
  }
LABEL_68:
  swift_bridgeObjectRetain_n();
  uint64_t v62 = (uint64_t)sub_1005A9228((unint64_t)v1);
  swift_bridgeObjectRelease();
LABEL_62:
  uint64_t v73 = v62;
  sub_1005A8F98(&v73);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    int64_t v3 = v73;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v3;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_10059EA18()
{
  sub_10000566C(&qword_100718A60);
  __chkstk_darwin();
  uint64_t v101 = (char *)&v81 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t isUniquelyReferenced_nonNull_native = sub_1005E0ED0();
  int64_t v3 = *(void **)(isUniquelyReferenced_nonNull_native - 8);
  __chkstk_darwin();
  uint64_t v103 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v90 = (char *)&v81 - v5;
  uint64_t v100 = _s14descr1006B99F1V6LoggerVMa(0);
  __chkstk_darwin();
  uint64_t v96 = (uint64_t)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v91 = (uint64_t)&v81 - v7;
  id v8 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v9 = sub_1005E1BD0();
  id v10 = [v8 initWithEntityName:v9];

  uint64_t v12 = *(void *)(v0 + 16);
  uint64_t v11 = *(void *)(v0 + 24);
  uint64_t v102 = v0;
  sub_10000566C(&qword_100719060);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1005F6670;
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 32) = v12;
  *(void *)(v13 + 40) = v11;
  uint64_t v14 = (uint64_t)v10;
  swift_bridgeObjectRetain();
  NSString v15 = sub_1005E1BD0();
  id rawValue = (char *)&type metadata for Any;
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v18 = [self predicateWithFormat:v15 argumentArray:isa];

  [(id)v14 appendPredicate:v18];
  [(id)v14 setReturnsObjectsAsFaults:0];
  unint64_t v19 = sub_10059281C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v109 = 0;
  id v20 = [(id)v14 execute:&v109];
  id v21 = (id)v109;
  if (!v20)
  {
    id v79 = (id)v109;
    sub_1005E06F0();

    swift_willThrow();
    swift_bridgeObjectRelease();

    return (uint64_t)v3;
  }
  long long v22 = v20;
  _s14descr1006B9AE9V7MailboxCMa();
  unint64_t v23 = sub_1005E20C0();
  id v24 = v21;

  if (v23 >> 62)
  {
LABEL_43:
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v82 = (id)v14;
  if (!v26)
  {
    int64_t v3 = (void *)v19;
LABEL_38:

    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  uint64_t v99 = v102 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger;
  unint64_t v107 = v23 & 0xC000000000000001;
  unint64_t v97 = (void (**)(char *, uint64_t))(v3 + 1);
  uint64_t v98 = (void (**)(char *, uint64_t, uint64_t))(v3 + 4);
  uint64_t v94 = (char *)&v109 + 1;
  char v95 = (char *)&v109 + 4;
  __int16 v86 = &v110;
  uint64_t v14 = 4;
  *(void *)&long long v25 = 68158464;
  long long v89 = v25;
  *(void *)&long long v25 = 68158979;
  long long v85 = v25;
  long long v84 = rawValue + 8;
  int64_t v3 = (void *)v19;
  uint64_t v105 = v26;
  unint64_t v106 = v23;
  uint64_t v83 = isUniquelyReferenced_nonNull_native;
  while (1)
  {
    if (v107) {
      id v31 = (id)sub_1005E2CF0();
    }
    else {
      id v31 = *(id *)(v23 + 8 * v14);
    }
    unint64_t v19 = (unint64_t)v31;
    uint64_t v32 = v14 - 3;
    if (__OFADD__(v14 - 4, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    NSString v33 = sub_1005E1BD0();
    [(id)v19 willAccessValueForKey:v33];

    id v34 = [(id)v19 primitiveName];
    if (v34)
    {
      id v35 = v34;
      sub_10059BA20(v35);
      v37._id rawValue = v36;

      NIOIMAPCore2::MailboxName v112 = MailboxName.init(_:)(v37);
      id rawValue = (char *)v112.bytes._rawValue;
      Swift::UInt32 value = v112._hashValue._value;
    }
    else
    {
      id rawValue = 0;
      Swift::UInt32 value = 0;
    }
    NSString v39 = sub_1005E1BD0();
    [(id)v19 didAccessValueForKey:v39];

    if (!rawValue)
    {
      unint64_t v104 = v3;
      uint64_t v61 = v99;
      uint64_t v62 = v96;
      sub_1005737B0(v99, v96);
      (*v98)(v103, v62, isUniquelyReferenced_nonNull_native);
      uint64_t v63 = v61 + *(int *)(v100 + 20);
      char v64 = *(unsigned char *)v63;
      int v65 = *(_DWORD *)(v63 + 4);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      int64_t v66 = sub_1005E0EB0();
      os_log_type_t v67 = sub_1005E25A0();
      if (os_log_type_enabled(v66, v67))
      {
        uint64_t v68 = (_DWORD *)swift_slowAlloc();
        LODWORD(v108) = v65;
        BOOL v69 = v68;
        *uint64_t v68 = v89;
        LODWORD(v109) = 2;
        sub_1005E2960();
        *((_WORD *)v69 + 4) = 256;
        LOBYTE(v109) = v64;
        sub_1005E2960();
        *(_WORD *)((char *)v69 + 11) = 1040;
        LODWORD(v109) = 8;
        sub_1005E2960();
        *(_WORD *)((char *)v69 + 17) = 1024;
        LODWORD(v109) = v108;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v66, v67, "[%.*hhx-%.*X] Found local mailbox without name.", (uint8_t *)v69, 0x17u);
        swift_slowDealloc();
      }

      (*v97)(v103, isUniquelyReferenced_nonNull_native);
      unsigned int v27 = *(void **)(v102 + 48);
      uint64_t v28 = *(void *)(v102 + 64);
      sub_10053C964(0, 1);
      uint64_t v29 = sub_10000566C(&qword_100718A58);
      id rawValue = v101;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v101, 1, 1, v29);
      sub_10053D614(v19, (uint64_t)rawValue, v28);
      sub_1005AB4B0((uint64_t)rawValue);
      [v27 deleteObject:v19];
      sub_10053B32C();

      int64_t v3 = v104;
      uint64_t v30 = v105;
      unint64_t v23 = v106;
      goto LABEL_7;
    }
    uint64_t v108 = v14 - 3;
    if (!v3[2]) {
      break;
    }
    sub_100024264((uint64_t)rawValue, value);
    if ((v40 & 1) == 0) {
      break;
    }
    uint64_t v41 = v99;
    uint64_t v42 = v91;
    sub_1005737B0(v99, v91);
    unint64_t v43 = v90;
    (*v98)(v90, v42, isUniquelyReferenced_nonNull_native);
    uint64_t v44 = v41 + *(int *)(v100 + 20);
    char v45 = *(unsigned char *)v44;
    int v92 = *(_DWORD *)(v44 + 4);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_bridgeObjectRetain();
    unint64_t v46 = sub_1005E0EB0();
    os_log_type_t v47 = sub_1005E25A0();
    int v93 = v47;
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      unint64_t v104 = v3;
      uint64_t v49 = v48;
      uint64_t v88 = swift_slowAlloc();
      uint64_t v111 = v88;
      *(_DWORD *)uint64_t v49 = v85;
      LODWORD(v109) = 2;
      Swift::UInt32 v87 = value;
      sub_1005E2960();
      *(_WORD *)(v49 + 8) = 256;
      LOBYTE(v109) = v45;
      sub_1005E2960();
      *(_WORD *)(v49 + 11) = 1040;
      LODWORD(v109) = 8;
      sub_1005E2960();
      *(_WORD *)(v49 + 17) = 1024;
      LODWORD(v109) = v92;
      sub_1005E2960();
      *(_WORD *)(v49 + 23) = 2160;
      uint64_t v109 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v49 + 33) = 2085;
      uint64_t v109 = (uint64_t)rawValue;
      Swift::UInt32 v110 = v87;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1005E1CC0();
      uint64_t v109 = sub_1005904BC(v50, v51, &v111);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v93, "[%.*hhx-%.*X] Found duplicate local mailbox with name '%{sensitive,mask.mailbox}s'.", (uint8_t *)v49, 0x2Bu);
      swift_arrayDestroy();
      swift_slowDealloc();
      int64_t v3 = v104;
      swift_slowDealloc();

      uint64_t isUniquelyReferenced_nonNull_native = v83;
      (*v97)(v43, v83);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*v97)(v43, isUniquelyReferenced_nonNull_native);
    }
    char v76 = *(void **)(v102 + 48);
    uint64_t v77 = *(void *)(v102 + 64);
    sub_10053C964(0, 1);
    uint64_t v78 = sub_10000566C(&qword_100718A58);
    id rawValue = v101;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v101, 1, 1, v78);
    sub_10053D614(v19, (uint64_t)rawValue, v77);
    sub_1005AB4B0((uint64_t)rawValue);
    [v76 deleteObject:v19];
    sub_10053B32C();

LABEL_35:
    uint64_t v30 = v105;
    unint64_t v23 = v106;
    uint64_t v32 = v108;
LABEL_7:
    ++v14;
    if (v32 == v30) {
      goto LABEL_38;
    }
  }
  uint64_t v52 = isUniquelyReferenced_nonNull_native;
  id v53 = (id)v19;
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v109 = (uint64_t)v3;
  unint64_t v23 = (unint64_t)v3;
  unint64_t v19 = sub_100024264((uint64_t)rawValue, value);
  uint64_t v55 = v3;
  uint64_t v56 = v3[2];
  BOOL v57 = (v54 & 1) == 0;
  uint64_t v58 = v56 + v57;
  if (__OFADD__(v56, v57)) {
    goto LABEL_41;
  }
  int64_t v3 = v54;
  if (v55[3] >= v58)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v23 = (unint64_t)&v109;
      sub_1005A4A2C();
    }
    goto LABEL_28;
  }
  sub_1005A2F00(v58, isUniquelyReferenced_nonNull_native);
  unint64_t v23 = v109;
  unint64_t v59 = sub_100024264((uint64_t)rawValue, value);
  if ((v3 & 1) == (v60 & 1))
  {
    unint64_t v19 = v59;
LABEL_28:
    uint64_t isUniquelyReferenced_nonNull_native = v52;
    uint64_t v70 = (void *)v109;
    if (v3)
    {
      uint64_t v71 = *(void *)(v109 + 56);

      *(void *)(v71 + 8 * v19) = v53;
      int64_t v3 = v70;
    }
    else
    {
      *(void *)(v109 + 8 * (v19 >> 6) + 64) |= 1 << v19;
      uint64_t v72 = v70[6] + 16 * v19;
      *(void *)uint64_t v72 = rawValue;
      *(_DWORD *)(v72 + 8) = value;
      *(void *)(v70[7] + 8 * v19) = v53;
      uint64_t v73 = v70[2];
      BOOL v74 = __OFADD__(v73, 1);
      uint64_t v75 = v73 + 1;
      if (v74) {
        goto LABEL_42;
      }
      int64_t v3 = v70;
      v70[2] = v75;
      swift_bridgeObjectRetain();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

void sub_10059F69C()
{
  uint64_t v2 = sub_1005E0ED0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v58 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v50 = (char *)&v47 - v5;
  uint64_t v54 = _s14descr1006B99F1V6LoggerVMa(0);
  __chkstk_darwin();
  uint64_t v51 = (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v48 = (uint64_t)&v47 - v7;
  id v8 = *(void **)(v0 + 48);
  id v9 = [v8 registeredObjects];
  sub_1003C8730(0, (unint64_t *)&qword_100718A10);
  sub_10053BCE0();
  uint64_t v10 = sub_1005E2260();

  uint64_t v52 = v1;
  uint64_t v56 = v2;
  uint64_t v57 = v3;
  id v49 = v8;
  uint64_t v55 = v0;
  if ((v10 & 0xC000000000000001) != 0)
  {
    sub_1005E2B10();
    sub_1005E22D0();
    uint64_t v10 = (uint64_t)v63[1];
    uint64_t v61 = v63[2];
    uint64_t v11 = (uint64_t)v63[3];
    id v12 = v63[4];
    unint64_t v13 = (unint64_t)v63[5];
  }
  else
  {
    id v12 = 0;
    uint64_t v14 = -1 << *(unsigned char *)(v10 + 32);
    uint64_t v15 = *(void *)(v10 + 56);
    uint64_t v61 = (void *)(v10 + 56);
    uint64_t v11 = ~v14;
    uint64_t v16 = -v14;
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v13 = v17 & v15;
  }
  uint64_t v53 = v11;
  int64_t v60 = (unint64_t)(v11 + 64) >> 6;
  unint64_t v59 = (char *)&type metadata for Swift.AnyObject + 8;
  while (v10 < 0)
  {
    uint64_t v21 = sub_1005E2B80();
    if (!v21) {
      goto LABEL_36;
    }
    uint64_t v62 = v21;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v22 = v63[0];
    swift_unknownObjectRelease();
    id v20 = (char *)v12;
    uint64_t v18 = v13;
    if (!v22) {
      goto LABEL_36;
    }
LABEL_30:
    _s14descr1006B9AE9V7MailboxCMa();
    if ([v22 isKindOfClass:swift_getObjCClassFromMetadata()]
      && [v22 isInserted])
    {
      uint64_t v27 = v55 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger;
      uint64_t v28 = v48;
      sub_1005737B0(v55 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, v48);
      uint64_t v29 = v56;
      uint64_t v30 = v57;
      id v31 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v50, v28, v56);
      uint64_t v32 = (unsigned __int8 *)(v27 + *(int *)(v54 + 20));
      LODWORD(v59) = *v32;
      LODWORD(v60) = *((_DWORD *)v32 + 1);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      NSString v33 = sub_1005E0EB0();
      os_log_type_t v34 = sub_1005E25C0();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = swift_slowAlloc();
        *(_DWORD *)uint64_t v35 = 68158464;
        LODWORD(v63[0]) = 2;
        sub_1005E2960();
        *(_WORD *)(v35 + 8) = 256;
        LOBYTE(v63[0]) = (_BYTE)v59;
        sub_1005E2960();
        *(_WORD *)(v35 + 11) = 1040;
        LODWORD(v63[0]) = 8;
        sub_1005E2960();
        *(_WORD *)(v35 + 17) = 1024;
        LODWORD(v63[0]) = v60;
        uint64_t v30 = v57;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "[%.*hhx-%.*X] New mailboxes were inserted. Saving context.", (uint8_t *)v35, 0x17u);
        id v31 = v50;
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v29);
      v63[0] = 0;
      if ([v49 save:v63])
      {
        id v36 = v63[0];
        sub_10003BC80();
      }
      else
      {
        id v46 = v63[0];
        sub_1005E06F0();

        swift_willThrow();
        sub_10003BC80();
      }
      return;
    }

    id v12 = v20;
    unint64_t v13 = v18;
  }
  if (v13)
  {
    uint64_t v18 = (v13 - 1) & v13;
    unint64_t v19 = __clz(__rbit64(v13)) | ((void)v12 << 6);
    id v20 = (char *)v12;
    goto LABEL_29;
  }
  uint64_t v23 = (uint64_t)v12 + 1;
  if (__OFADD__(v12, 1)) {
    __break(1u);
  }
  if (v23 >= v60)
  {
LABEL_36:
    uint64_t v26 = v57;
    goto LABEL_37;
  }
  unint64_t v24 = v61[v23];
  id v20 = (char *)v12 + 1;
  if (v24) {
    goto LABEL_28;
  }
  id v20 = (char *)v12 + 2;
  if ((uint64_t)v12 + 2 >= v60) {
    goto LABEL_36;
  }
  unint64_t v24 = v61[(void)v20];
  if (v24) {
    goto LABEL_28;
  }
  id v20 = (char *)v12 + 3;
  if ((uint64_t)v12 + 3 >= v60) {
    goto LABEL_36;
  }
  unint64_t v24 = v61[(void)v20];
  if (v24) {
    goto LABEL_28;
  }
  id v20 = (char *)v12 + 4;
  if ((uint64_t)v12 + 4 >= v60) {
    goto LABEL_36;
  }
  unint64_t v24 = v61[(void)v20];
  if (v24)
  {
LABEL_28:
    uint64_t v18 = (v24 - 1) & v24;
    unint64_t v19 = __clz(__rbit64(v24)) + ((void)v20 << 6);
LABEL_29:
    id v22 = *(id *)(*(void *)(v10 + 48) + 8 * v19);
    if (!v22) {
      goto LABEL_36;
    }
    goto LABEL_30;
  }
  long long v25 = (char *)v12 + 5;
  uint64_t v26 = v57;
  while ((char *)v60 != v25)
  {
    unint64_t v24 = v61[(void)v25++];
    if (v24)
    {
      id v20 = v25 - 1;
      goto LABEL_28;
    }
  }
LABEL_37:
  sub_10003BC80();
  uint64_t v37 = v55 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger;
  uint64_t v38 = v51;
  sub_1005737B0(v55 + OBJC_IVAR____TtC17IMAPSearchIndexer22SearchIndexPersistence_logger, v51);
  uint64_t v39 = v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v58, v38, v56);
  char v40 = (char *)(v37 + *(int *)(v54 + 20));
  char v41 = *v40;
  int v42 = *((_DWORD *)v40 + 1);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  unint64_t v43 = sub_1005E0EB0();
  os_log_type_t v44 = sub_1005E25C0();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 68158464;
    LODWORD(v63[0]) = 2;
    sub_1005E2960();
    *(_WORD *)(v45 + 8) = 256;
    LOBYTE(v63[0]) = v41;
    sub_1005E2960();
    *(_WORD *)(v45 + 11) = 1040;
    LODWORD(v63[0]) = 8;
    sub_1005E2960();
    *(_WORD *)(v45 + 17) = 1024;
    LODWORD(v63[0]) = v42;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "[%.*hhx-%.*X] No new mailboxes.", (uint8_t *)v45, 0x17u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v26 + 8))(v58, v39);
}

uint64_t sub_10059FE9C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    id v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1005A009C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 48) + 16 * v16;
    uint64_t v21 = *(void *)v20;
    LODWORD(v20) = *(_DWORD *)(v20 + 8);
    *(void *)uint64_t v11 = v21;
    *(_DWORD *)(v11 + 8) = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 16;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1005A02A4(Swift::UInt a1)
{
  sub_1005E33F0();
  sub_1005E3410(a1);
  Swift::Int v2 = sub_1005E3470();
  return sub_1005A05DC(a1, v2);
}

unint64_t sub_1005A0310(uint64_t a1, uint64_t a2)
{
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  Swift::Int v4 = sub_1005E3470();
  return sub_1000252B4(a1, a2, v4);
}

unint64_t sub_1005A0398(void *a1)
{
  sub_1005E33F0();
  id v2 = a1;
  sub_1005E2850();

  Swift::Int v3 = sub_1005E3470();
  return sub_1005A0678((uint64_t)v2, v3);
}

unint64_t sub_1005A0410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1005E33F0();
  Mailbox.hash(into:)((uint64_t)v8, a1);
  Swift::Int v6 = sub_1005E3470();
  return sub_1005A0794(a1, a2, a3, v6);
}

unint64_t sub_1005A049C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  sub_1005E3410(a4 | ((unint64_t)a4 << 32));
  Swift::Int v8 = sub_1005E3470();
  return sub_1005A0908(a1, a2, a3, a4, v8);
}

unint64_t sub_1005A054C(uint64_t a1, unint64_t a2)
{
  sub_1005E33F0();
  sub_100008D24(a1, a2);
  sub_1005E08B0();
  sub_1000094D4(a1, a2);
  Swift::Int v4 = sub_1005E3470();
  return sub_1005A0AA0(a1, a2, v4);
}

unint64_t sub_1005A05DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1005A0678(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1003C8730(0, qword_100718DD0);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_1005E2840();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_1005E2840();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1005A0794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t i = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v11 = (uint64_t *)(*(void *)(v4 + 48) + 24 * i);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    uint64_t v14 = v11[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v13) = static Mailbox.__derived_struct_equals(_:_:)(v12, v13, v14, a1, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      uint64_t v15 = ~v6;
      for (unint64_t i = (i + 1) & v15; ((*(void *)(v5 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v15)
      {
        unint64_t v16 = (uint64_t *)(*(void *)(v4 + 48) + 24 * i);
        uint64_t v18 = *v16;
        uint64_t v17 = v16[1];
        uint64_t v19 = v16[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        LOBYTE(v17) = static Mailbox.__derived_struct_equals(_:_:)(v18, v17, v19, a1, a2, a3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1005A0908(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = a5 & ~v7;
  if ((*(void *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v12 = ~v7;
    uint64_t v13 = *(void *)(v5 + 48);
    unint64_t v14 = a4 | ((unint64_t)a4 << 32);
    uint64_t v27 = (unsigned __int8 *)(a3 + 36);
    while (1)
    {
      uint64_t v15 = v13 + 32 * v8;
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(unsigned int *)(v15 + 24);
      BOOL v18 = *(void *)v15 == a1 && *(void *)(v15 + 8) == a2;
      if (v18 || (sub_1005E3290()) && (v17 | (v17 << 32)) == v14)
      {
        uint64_t v19 = *(void *)(v16 + 16);
        if (v19 == *(void *)(a3 + 16))
        {
          if (!v19 || v16 == a3) {
            return v8;
          }
          if (*(unsigned __int8 *)(v16 + 32) == *(unsigned __int8 *)(a3 + 32))
          {
            if (v19 == 1) {
              return v8;
            }
            if (*(unsigned __int8 *)(v16 + 33) == *(unsigned __int8 *)(a3 + 33))
            {
              if (v19 == 2) {
                return v8;
              }
              if (*(unsigned __int8 *)(v16 + 34) == *(unsigned __int8 *)(a3 + 34))
              {
                if (v19 == 3) {
                  return v8;
                }
                if (*(unsigned __int8 *)(v16 + 35) == *(unsigned __int8 *)(a3 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_3:
      unint64_t v8 = (v8 + 1) & v12;
      if (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        return v8;
      }
    }
    uint64_t v20 = (unsigned __int8 *)(v16 + 36);
    uint64_t v21 = v19 - 4;
    id v22 = v27;
    while (v21)
    {
      int v24 = *v20++;
      int v23 = v24;
      int v25 = *v22++;
      --v21;
      if (v23 != v25) {
        goto LABEL_3;
      }
    }
  }
  return v8;
}

unint64_t sub_1005A0AA0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v31 = ~v5;
    BOOL v9 = __OFSUB__(HIDWORD(a1), a1);
    BOOL v30 = v9;
    uint64_t v29 = HIDWORD(a1) - (int)a1;
    unint64_t v32 = a2 >> 62;
    uint64_t v33 = BYTE6(a2);
    uint64_t v27 = v3 + 64;
    while (1)
    {
      char v10 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v6);
      uint64_t v12 = *v10;
      unint64_t v11 = v10[1];
      uint64_t v13 = 0;
      switch(v11 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v12), v12))
          {
            __break(1u);
LABEL_42:
            __break(1u);
LABEL_43:
            __break(1u);
LABEL_44:
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
          }
          uint64_t v13 = HIDWORD(v12) - (int)v12;
LABEL_14:
          sub_100008D24(v12, v11);
          sub_100008D24(v12, v11);
          break;
        case 2uLL:
          uint64_t v15 = *(void *)(v12 + 16);
          uint64_t v14 = *(void *)(v12 + 24);
          uint64_t v13 = v14 - v15;
          if (!__OFSUB__(v14, v15)) {
            goto LABEL_14;
          }
          goto LABEL_42;
        case 3uLL:
          break;
        default:
          uint64_t v13 = BYTE6(v11);
          break;
      }
      uint64_t v16 = v33;
      switch(v32)
      {
        case 1uLL:
          uint64_t v16 = v29;
          if (v30) {
            goto LABEL_43;
          }
          goto LABEL_19;
        case 2uLL:
          uint64_t v18 = *(void *)(a1 + 16);
          uint64_t v17 = *(void *)(a1 + 24);
          BOOL v19 = __OFSUB__(v17, v18);
          uint64_t v16 = v17 - v18;
          if (!v19) {
            goto LABEL_19;
          }
          goto LABEL_44;
        case 3uLL:
          if (v13) {
            goto LABEL_7;
          }
          goto LABEL_39;
        default:
LABEL_19:
          if (v13 == v16)
          {
            if (v13 < 1)
            {
LABEL_39:
              sub_1000094D4(v12, v11);
              sub_1000094D4(v12, v11);
              return v6;
            }
            switch(v11 >> 62)
            {
              case 1uLL:
                if (v12 >> 32 < (int)v12) {
                  goto LABEL_45;
                }
                sub_100008D24(v12, v11);
                sub_100008D24(a1, a2);
                uint64_t v20 = sub_1005E0550();
                if (!v20) {
                  goto LABEL_27;
                }
                uint64_t v21 = sub_1005E0580();
                if (__OFSUB__((int)v12, v21)) {
                  goto LABEL_48;
                }
                v20 += (int)v12 - v21;
LABEL_27:
                sub_1005E0570();
                sub_1005ABE20(v20, a1, a2, (BOOL *)__s1);
                sub_1000094D4(v12, v11);
                break;
              case 2uLL:
                uint64_t v23 = *(void *)(v12 + 16);
                uint64_t v22 = *(void *)(v12 + 24);
                sub_100008D24(a1, a2);
                swift_retain();
                swift_retain();
                uint64_t v24 = sub_1005E0550();
                if (!v24) {
                  goto LABEL_31;
                }
                uint64_t v25 = sub_1005E0580();
                if (__OFSUB__(v23, v25)) {
                  goto LABEL_47;
                }
                v24 += v23 - v25;
LABEL_31:
                if (__OFSUB__(v22, v23)) {
                  goto LABEL_46;
                }
                sub_1005E0570();
                sub_1005ABE20(v24, a1, a2, (BOOL *)__s1);
                swift_release();
                swift_release();
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                sub_100008D24(a1, a2);
                goto LABEL_36;
              default:
                __s1[0] = v12;
                LOWORD(__s1[1]) = v11;
                BYTE2(__s1[1]) = BYTE2(v11);
                BYTE3(__s1[1]) = BYTE3(v11);
                BYTE4(__s1[1]) = BYTE4(v11);
                BYTE5(__s1[1]) = BYTE5(v11);
                sub_100008D24(a1, a2);
LABEL_36:
                sub_1005ABE20((uint64_t)__s1, a1, a2, &v34);
                sub_1000094D4(a1, a2);
                sub_1000094D4(v12, v11);
                sub_1000094D4(v12, v11);
                if (v34) {
                  return v6;
                }
                goto LABEL_8;
            }
            sub_1000094D4(a1, a2);
            sub_1000094D4(v12, v11);
            sub_1000094D4(v12, v11);
            if (__s1[0]) {
              return v6;
            }
            uint64_t v4 = v27;
            uint64_t v3 = v28;
          }
          else
          {
LABEL_7:
            sub_1000094D4(v12, v11);
            sub_1000094D4(v12, v11);
          }
LABEL_8:
          unint64_t v6 = (v6 + 1) & v31;
          if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
            return v6;
          }
          break;
      }
    }
  }
  return v6;
}

uint64_t sub_1005A0F44(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10071A688);
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v34 = a2;
    int64_t v8 = 0;
    id v36 = (void *)(v5 + 64);
    uint64_t v37 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v36;
        if (v17 >= v35) {
          goto LABEL_31;
        }
        unint64_t v18 = v36[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v35) {
            goto LABEL_31;
          }
          unint64_t v18 = v36[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v35)
            {
LABEL_31:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
              if (v33 >= 64) {
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *id v36 = -1 << v33;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v36[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v35) {
                  goto LABEL_31;
                }
                unint64_t v18 = v36[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      Swift::UInt v20 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
      uint64_t v21 = (uint64_t *)(*(void *)(v5 + 56) + 72 * v16);
      uint64_t v41 = v21[7];
      uint64_t v42 = v21[8];
      uint64_t v39 = v21[5];
      uint64_t v40 = v21[6];
      uint64_t v22 = v21[3];
      uint64_t v38 = v21[4];
      uint64_t v23 = v21[1];
      uint64_t v24 = v21[2];
      uint64_t v25 = *v21;
      sub_1005E33F0();
      sub_1005E3410(v20);
      uint64_t result = sub_1005E3470();
      uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v13 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v7 + 48) + 8 * v13) = v20;
      uint64_t v14 = (void *)(*(void *)(v7 + 56) + 72 * v13);
      *uint64_t v14 = v25;
      v14[1] = v23;
      void v14[2] = v24;
      void v14[3] = v22;
      uint64_t v5 = v37;
      v14[4] = v38;
      v14[5] = v39;
      v14[6] = v40;
      v14[7] = v41;
      v14[8] = v42;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1005A126C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10071A720);
  char v37 = a2;
  uint64_t v6 = sub_1005E2FE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    char v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1005E33F0();
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1005E3470();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1005A1588(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10071A6E8);
  char v6 = a2;
  uint64_t v7 = sub_1005E2FE0();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v35 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v20 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v21 = v20 | (v14 << 6);
      }
      else
      {
        int64_t v22 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v34) {
          goto LABEL_33;
        }
        unint64_t v23 = v35[v22];
        ++v14;
        if (!v23)
        {
          int64_t v14 = v22 + 1;
          if (v22 + 1 >= v34) {
            goto LABEL_33;
          }
          unint64_t v23 = v35[v14];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v35 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v35[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v14 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v34) {
                  goto LABEL_33;
                }
                unint64_t v23 = v35[v14];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v24;
          }
        }
LABEL_30:
        unint64_t v11 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v14 << 6);
      }
      char v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
      if ((v6 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1005E3470();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
      *unint64_t v19 = v31;
      v19[1] = v30;
      *(void *)(*(void *)(v8 + 56) + 8 * v18) = v32;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_1005A1890(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_100718D28);
  char v40 = a2;
  uint64_t v6 = sub_1005E2FE0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v39 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v38 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v21 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v22 = v21 | (v13 << 6);
      }
      else
      {
        int64_t v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v38) {
          goto LABEL_33;
        }
        unint64_t v24 = v39[v23];
        ++v13;
        if (!v24)
        {
          int64_t v13 = v23 + 1;
          if (v23 + 1 >= v38) {
            goto LABEL_33;
          }
          unint64_t v24 = v39[v13];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v38)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
                if (v37 >= 64) {
                  bzero(v39, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v39 = -1 << v37;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v39[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v13 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v38) {
                  goto LABEL_33;
                }
                unint64_t v24 = v39[v13];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v25;
          }
        }
LABEL_30:
        unint64_t v10 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      uint64_t v34 = *(void *)(v5 + 56) + v30;
      uint64_t v35 = *(void *)v34;
      char v36 = *(unsigned char *)(v34 + 8);
      if ((v40 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1005E3470();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v16 == v27;
          if (v16 == v27) {
            unint64_t v16 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v11 + 8 * v16);
        }
        while (v29 == -1);
        unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 16 * v17;
      unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
      *unint64_t v19 = v33;
      v19[1] = v32;
      uint64_t v20 = *(void *)(v7 + 56) + v18;
      *(void *)uint64_t v20 = v35;
      *(unsigned char *)(v20 + 8) = v36;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1005A1BB4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_100718D08);
  char v37 = a2;
  uint64_t v6 = sub_1005E2FE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1005E33F0();
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1005E3470();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(unsigned char *)(*(void *)(v7 + 56) + v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1005A1ED0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_100718D00);
  char v36 = a2;
  uint64_t v6 = sub_1005E2FE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1005E33F0();
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1005E3470();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1005A21F8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10071A6B0);
  char v36 = a2;
  uint64_t v6 = sub_1005E2FE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1005E33F0();
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1005E3470();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1005A2520(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_100719A78);
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v30 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v30) {
          goto LABEL_33;
        }
        unint64_t v20 = v31[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v20 = v31[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v31 = -1 << v29;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v31[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v30) {
                  goto LABEL_33;
                }
                unint64_t v20 = v31[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      Swift::UInt32 v26 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v18);
      BOOL v27 = *(void **)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        id v28 = v27;
      }
      sub_1005E33F0();
      sub_1005E3440(v26);
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1005A27EC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = *(void *)(sub_10000566C((uint64_t *)&unk_100719790) - 8);
  __chkstk_darwin();
  uint64_t v46 = (uint64_t)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v2;
  sub_10000566C(&qword_10071A740);
  int v45 = a2;
  uint64_t v7 = sub_1005E2FE0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_41;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v42 = (void *)(v6 + 64);
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  char v40 = v2;
  int64_t v41 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  for (i = v6; ; uint64_t v6 = i)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v15 << 6);
      goto LABEL_22;
    }
    int64_t v20 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v20 >= v41) {
      break;
    }
    int64_t v21 = v42;
    unint64_t v22 = v42[v20];
    ++v15;
    if (!v22)
    {
      int64_t v15 = v20 + 1;
      if (v20 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v22 = v42[v15];
      if (!v22)
      {
        int64_t v23 = v20 + 2;
        if (v23 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v45 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v22 = v42[v23];
        if (!v22)
        {
          while (1)
          {
            int64_t v15 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_43;
            }
            if (v15 >= v41) {
              goto LABEL_34;
            }
            unint64_t v22 = v42[v15];
            ++v23;
            if (v22) {
              goto LABEL_21;
            }
          }
        }
        int64_t v15 = v23;
      }
    }
LABEL_21:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v15 << 6);
LABEL_22:
    uint64_t v24 = *(void *)(v6 + 56);
    uint64_t v25 = *(void *)(v6 + 48) + 32 * v19;
    uint64_t v26 = *(void *)v25;
    uint64_t v27 = *(void *)(v25 + 8);
    uint64_t v28 = *(void *)(v25 + 16);
    uint64_t v29 = *(unsigned int *)(v25 + 24);
    uint64_t v30 = *(void *)(v44 + 72);
    uint64_t v31 = v24 + v30 * v19;
    if (v45)
    {
      sub_100566740(v31, v46);
    }
    else
    {
      sub_10056EDE4(v31, v46);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1005E33F0();
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    sub_1005E3410(v29 | (v29 << 32));
    uint64_t result = sub_1005E3470();
    uint64_t v32 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v13 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v33) & ~*(void *)(v13 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v13 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v16 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t v17 = *(void *)(v8 + 48) + 32 * v16;
    *(void *)uint64_t v17 = v26;
    *(void *)(v17 + 8) = v27;
    *(void *)(v17 + 16) = v28;
    *(_DWORD *)(v17 + 24) = v29;
    uint64_t result = sub_100566740(v46, *(void *)(v8 + 56) + v30 * v16);
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v21 = v42;
  if ((v45 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v39 = 1 << *(unsigned char *)(v6 + 32);
  if (v39 >= 64) {
    bzero(v21, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v21 = -1 << v39;
  }
  *(void *)(v6 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_1005A2BCC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10071A4A0);
  char v38 = a2;
  uint64_t v6 = sub_1005E2FE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 24 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = v29[2];
    uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1005E33F0();
    Mailbox.hash(into:)((uint64_t)v39, v31);
    uint64_t result = sub_1005E3470();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (uint64_t *)(*(void *)(v7 + 48) + 24 * v17);
    uint64_t *v18 = v31;
    v18[1] = v30;
    _OWORD v18[2] = v32;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1005A2F00(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10071A670);
  char v35 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v34 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v34 = -1 << v32;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(v5 + 48) + 16 * v19;
      uint64_t v28 = *(void *)v27;
      uint64_t v29 = *(unsigned int *)(v27 + 8);
      uint64_t v30 = *(void **)(*(void *)(v5 + 56) + 8 * v19);
      if ((v35 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        id v31 = v30;
      }
      sub_1005E33F0();
      sub_1005E3410(v29 | (v29 << 32));
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = *(void *)(v7 + 48) + 16 * v16;
      *(void *)uint64_t v17 = v28;
      *(_DWORD *)(v17 + 8) = v29;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1005A31F0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10071A718);
  char v41 = a2;
  uint64_t v6 = sub_1005E2FE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v40 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v38 = v2;
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39) {
      break;
    }
    char v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v40 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v39) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v40 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v38;
          if ((v41 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v40 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v39) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v40 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v31 = *(void *)(v5 + 56) + 24 * v21;
    uint64_t v32 = *(void **)v31;
    uint64_t v33 = *(void *)(v31 + 8);
    uint64_t v34 = *(void *)(v31 + 16);
    if ((v41 & 1) == 0)
    {
      id v35 = v30;
      id v36 = v32;
      swift_retain();
    }
    sub_1005E33F0();
    id v14 = v30;
    sub_1005E2850();

    uint64_t result = sub_1005E3470();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v14;
    unint64_t v19 = (void *)(*(void *)(v7 + 56) + 24 * v18);
    *unint64_t v19 = v32;
    v19[1] = v33;
    void v19[2] = v34;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v38;
  char v23 = (void *)(v5 + 64);
  if ((v41 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
  if (v37 >= 64) {
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v23 = -1 << v37;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1005A3520(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10071A820);
  uint64_t v6 = sub_1005E2FE0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      unint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_100353CB8(v24, v35);
      }
      else
      {
        sub_1000D65AC((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E1DB0();
      uint64_t result = sub_1005E3470();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *uint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_100353CB8(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_1005A3820()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10071A688);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v29 = __clz(__rbit64(v27));
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = v29 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 72 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)(v19 + 64);
    long long v21 = *(_OWORD *)v19;
    long long v22 = *(_OWORD *)(v19 + 16);
    long long v23 = *(_OWORD *)(v19 + 32);
    long long v24 = *(_OWORD *)(v19 + 48);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v25 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v25 = v21;
    *(_OWORD *)(v25 + 16) = v22;
    *(_OWORD *)(v25 + 32) = v23;
    *(_OWORD *)(v25 + 48) = v24;
    *(void *)(v25 + 64) = v20;
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1005A39D0()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10071A720);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    long long v22 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1005A3B80()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10071A6E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1005A3D30()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_100718D28);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = *(void *)(v2 + 56) + v16;
    uint64_t v21 = *(void *)v20;
    LOBYTE(v20) = *(unsigned char *)(v20 + 8);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v22 = v19;
    v22[1] = v18;
    uint64_t v23 = *(void *)(v4 + 56) + v16;
    *(void *)uint64_t v23 = v21;
    *(unsigned char *)(v23 + 8) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1005A3EEC()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_100718D08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    *uint64_t v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1005A4098()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_100718D00);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1005A4250()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10071A6B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1005A4408()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_100719A78);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void **)(*(void *)(v2 + 56) + v18);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
    id result = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1005A45B0()
{
  uint64_t v33 = *(void *)(sub_10000566C((uint64_t *)&unk_100719790) - 8);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_10071A740);
  BOOL v30 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_1005E2FD0();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v34 = v4;
  if (!v5)
  {
    id result = (void *)swift_release();
    uint64_t v28 = v34;
    unint64_t v27 = v30;
LABEL_25:
    *unint64_t v27 = v28;
    return result;
  }
  uint64_t v6 = v4;
  id result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v34;
  }
  uint64_t v31 = v3 + 64;
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  int64_t v32 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v13 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v14 = v13 | (v9 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v31 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v14 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_9:
    uint64_t v15 = 32 * v14;
    uint64_t v16 = *(void *)(v3 + 48) + 32 * v14;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    int v20 = *(_DWORD *)(v16 + 24);
    unint64_t v21 = *(void *)(v33 + 72) * v14;
    sub_10056EDE4(*(void *)(v3 + 56) + v21, (uint64_t)v2);
    uint64_t v22 = v34;
    uint64_t v23 = *(void *)(v34 + 48) + v15;
    *(void *)uint64_t v23 = v17;
    *(void *)(v23 + 8) = v18;
    *(void *)(v23 + 16) = v19;
    *(_DWORD *)(v23 + 24) = v20;
    sub_100566740((uint64_t)v2, *(void *)(v22 + 56) + v21);
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    id result = (void *)swift_release();
    unint64_t v27 = v30;
    uint64_t v28 = v34;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1005A4858()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10071A4A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 24 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = v17[2];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v22 = *v17;
    v22[1] = v18;
    void v22[2] = v19;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1005A4A2C()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10071A670);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v15;
    uint64_t v18 = *(void *)v17;
    LODWORD(v17) = *(_DWORD *)(v17 + 8);
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v21 = v18;
    *(_DWORD *)(v21 + 8) = v17;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1005A4BE8()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10071A718);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v21 = *(void **)v19;
    uint64_t v20 = *(void *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    unint64_t v23 = (void *)(*(void *)(v4 + 56) + v18);
    *unint64_t v23 = v21;
    v23[1] = v20;
    v23[2] = v22;
    id v24 = v17;
    id v25 = v21;
    id result = (void *)swift_retain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1005A4DB8()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10071A820);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2FD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  id v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1000D65AC(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    sub_100353CB8(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1005A4FA0(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  Swift::Int v8 = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1005E3290() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1005E3290() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1005A6B48(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1005A5160(Swift::UInt64 *a1, Swift::UInt64 a2)
{
  return sub_1005A5938(a1, a2, &qword_10071A7D8, &qword_10071A7D0);
}

uint64_t sub_1005A5174(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v7 = *v3;
  sub_1005E33F0();
  sub_1005E3410(a3 | ((unint64_t)a3 << 32));
  Swift::Int v8 = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      uint64_t v12 = *(void *)(v7 + 48) + 16 * v10;
      if ((*(unsigned int *)(v12 + 8) | ((unint64_t)*(unsigned int *)(v12 + 8) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        uint64_t v13 = *(void *)v12;
        uint64_t v14 = *(void *)(v13 + 16);
        if (v14 == *(void *)(a2 + 16))
        {
          if (v14) {
            BOOL v15 = v13 == a2;
          }
          else {
            BOOL v15 = 1;
          }
          if (v15) {
            goto LABEL_22;
          }
          if (*(unsigned __int8 *)(v13 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v14 == 1) {
              goto LABEL_22;
            }
            if (*(unsigned __int8 *)(v13 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v14 == 2) {
                goto LABEL_22;
              }
              if (*(unsigned __int8 *)(v13 + 34) == *(unsigned __int8 *)(a2 + 34))
              {
                if (v14 == 3) {
                  goto LABEL_22;
                }
                if (*(unsigned __int8 *)(v13 + 35) == *(unsigned __int8 *)(a2 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_3:
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_21;
      }
    }
    uint64_t v16 = (unsigned __int8 *)(v13 + 36);
    uint64_t v17 = v14 - 4;
    uint64_t v18 = (unsigned __int8 *)(a2 + 36);
    while (v17)
    {
      int v20 = *v16++;
      int v19 = v20;
      int v21 = *v18++;
      --v17;
      if (v19 != v21) {
        goto LABEL_3;
      }
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void *)(*v3 + 48) + 16 * v10;
    uint64_t v26 = *(void *)v25;
    LODWORD(v25) = *(_DWORD *)(v25 + 8);
    *(void *)a1 = v26;
    *(_DWORD *)(a1 + 8) = v25;
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_21:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    Swift::Int v23 = swift_bridgeObjectRetain();
    sub_1005A6CF4(v23, a3, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v27;
    swift_bridgeObjectRelease();
    *(void *)a1 = a2;
    *(_DWORD *)(a1 + 8) = a3;
    return 1;
  }
}

uint64_t sub_1005A537C(uint64_t a1, Swift::Int a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v11 = *v5;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  Swift::UInt v12 = a5 | ((unint64_t)a5 << 32);
  sub_1005E3410(v12);
  Swift::Int v13 = sub_1005E3470();
  uint64_t v14 = -1 << *(unsigned char *)(v11 + 32);
  unint64_t v15 = v13 & ~v14;
  uint64_t v16 = v11;
  uint64_t v17 = v11 + 56;
  uint64_t v39 = a1;
  uint64_t v40 = a4;
  unsigned int v38 = a5;
  if ((*(void *)(v17 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    uint64_t v18 = ~v14;
    uint64_t v19 = *(void *)(v16 + 48);
    uint64_t v37 = (unsigned __int8 *)(a4 + 36);
    while (1)
    {
      uint64_t v20 = v19 + 32 * v15;
      uint64_t v21 = *(void *)(v20 + 16);
      uint64_t v22 = *(unsigned int *)(v20 + 24);
      BOOL v23 = *(void *)v20 == a2 && *(void *)(v20 + 8) == a3;
      if (v23 || (sub_1005E3290()) && (v22 | (v22 << 32)) == v12)
      {
        uint64_t v24 = *(void *)(v21 + 16);
        if (v24 == *(void *)(v40 + 16))
        {
          if (!v24 || v21 == v40) {
            goto LABEL_25;
          }
          if (*(unsigned __int8 *)(v21 + 32) == *(unsigned __int8 *)(v40 + 32))
          {
            if (v24 == 1) {
              goto LABEL_25;
            }
            if (*(unsigned __int8 *)(v21 + 33) == *(unsigned __int8 *)(v40 + 33))
            {
              if (v24 == 2) {
                goto LABEL_25;
              }
              if (*(unsigned __int8 *)(v21 + 34) == *(unsigned __int8 *)(v40 + 34))
              {
                if (v24 == 3) {
                  goto LABEL_25;
                }
                if (*(unsigned __int8 *)(v21 + 35) == *(unsigned __int8 *)(v40 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_3:
      unint64_t v15 = (v15 + 1) & v18;
      if (((*(void *)(v17 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
        goto LABEL_24;
      }
    }
    uint64_t v25 = (unsigned __int8 *)(v21 + 36);
    uint64_t v26 = v24 - 4;
    uint64_t v27 = v37;
    while (v26)
    {
      int v29 = *v25++;
      int v28 = v29;
      int v30 = *v27++;
      --v26;
      if (v28 != v30) {
        goto LABEL_3;
      }
    }
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void *)(*v5 + 48) + 32 * v15;
    uint64_t v35 = *(void *)v33;
    uint64_t v34 = *(void *)(v33 + 8);
    uint64_t v36 = *(void *)(v33 + 16);
    LODWORD(v33) = *(_DWORD *)(v33 + 24);
    *(void *)uint64_t v39 = v35;
    *(void *)(v39 + 8) = v34;
    *(void *)(v39 + 16) = v36;
    *(_DWORD *)(v39 + 24) = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_24:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v41 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1005A6F04(a2, a3, v40, v38, v15, isUniquelyReferenced_nonNull_native);
    *uint64_t v5 = v41;
    swift_bridgeObjectRelease();
    *(void *)uint64_t v39 = a2;
    *(void *)(v39 + 8) = a3;
    *(void *)(v39 + 16) = v40;
    uint64_t result = 1;
    *(_DWORD *)(v39 + 24) = v38;
  }
  return result;
}

uint64_t sub_1005A5678(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  id v7 = a2;
  sub_1005E2850();

  Swift::Int v8 = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    sub_1003C8730(0, qword_100718DD0);
    id v11 = *(id *)(*(void *)(v6 + 48) + 8 * v10);
    char v12 = sub_1005E2840();

    if (v12)
    {
LABEL_6:

      swift_bridgeObjectRelease();
      uint64_t v16 = *(void **)(*(void *)(*v3 + 48) + 8 * v10);
      *a1 = v16;
      id v17 = v16;
      return 0;
    }
    uint64_t v13 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v13;
      if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v10);
      char v15 = sub_1005E2840();

      if (v15) {
        goto LABEL_6;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  id v20 = v7;
  sub_1005A7178(v20, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = v20;
  return 1;
}

uint64_t sub_1005A5828(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1005E33E0();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1005A732C(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1005A5924(Swift::UInt64 *a1, Swift::UInt64 a2)
{
  return sub_1005A5938(a1, a2, &qword_10071A7F0, &qword_10071A7E8);
}

uint64_t sub_1005A5938(Swift::UInt64 *a1, Swift::UInt64 a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v9 = *v4;
  sub_1005E33F0();
  sub_1005E3450(a2);
  Swift::Int v10 = sub_1005E3470();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_1005A7450(a2, v12, isUniquelyReferenced_nonNull_native, a3, a4);
    *uint64_t v4 = v17;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v13 = *(void *)(v9 + 48);
  if (*(void *)(v13 + 8 * v12) != a2)
  {
    uint64_t v14 = ~v11;
    do
    {
      unint64_t v12 = (v12 + 1) & v14;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v13 + 8 * v12) != a2);
  }
  uint64_t result = 0;
  a2 = *(void *)(*(void *)(*v4 + 48) + 8 * v12);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1005A5A70()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_100718D20);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    int v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1005E33F0();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1005E3470();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005A5D60()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_1007190A8);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v9) {
          goto LABEL_33;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v16 = v29[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v29 = -1 << v28;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v29[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 16 * v14;
      uint64_t v19 = *(void *)v18;
      uint64_t v20 = *(unsigned int *)(v18 + 8);
      sub_1005E33F0();
      sub_1005E3410(v20 | (v20 << 32));
      uint64_t result = sub_1005E3470();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
      *(void *)uint64_t v12 = v19;
      *(_DWORD *)(v12 + 8) = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005A6038()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_100718D40);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    int v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = *(void *)(v2 + 48) + 32 * v15;
      uint64_t v20 = *(void *)v19;
      long long v31 = *(_OWORD *)(v19 + 8);
      uint64_t v21 = *(unsigned int *)(v19 + 24);
      sub_1005E33F0();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      sub_1005E3410(v21 | (v21 << 32));
      uint64_t result = sub_1005E3470();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = *(void *)(v4 + 48) + 32 * v12;
      *(void *)uint64_t v13 = v20;
      *(_OWORD *)(v13 + 8) = v31;
      *(_DWORD *)(v13 + 24) = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005A6354()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_10071A7F8);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v29 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v29;
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v28;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
      sub_1005E33F0();
      id v20 = v19;
      sub_1005E2850();

      uint64_t result = sub_1005E3470();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005A661C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_10071A7C8);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_1005E33E0();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005A68A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10000566C(a2);
  uint64_t result = sub_1005E2C10();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    uint64_t v8 = (void *)(v4 + 56);
    uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v4 + 56);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v7 << 6);
      }
      else
      {
        int64_t v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          int64_t v7 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v18 = v8[v7];
          if (!v18)
          {
            int64_t v7 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_33;
            }
            unint64_t v18 = v8[v7];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
                if (v28 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v28;
                }
                uint64_t v3 = v2;
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v7 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v7 >= v12) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v8[v7];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v7 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      Swift::UInt64 v20 = *(void *)(*(void *)(v4 + 48) + 8 * v16);
      sub_1005E33F0();
      sub_1005E3450(v20);
      uint64_t result = sub_1005E3470();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(void *)(*(void *)(v6 + 48) + 8 * v14) = v20;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

Swift::Int sub_1005A6B48(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  int64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1005A5A70();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_1005A75B0();
      goto LABEL_22;
    }
    sub_1005A7FC0();
  }
  uint64_t v11 = *v4;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1005E3470();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1005E3290(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1005E3370();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        unint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1005E3290();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

Swift::Int sub_1005A6CF4(Swift::Int result, unsigned int a2, unint64_t a3, char a4)
{
  Swift::Int v7 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0) {
    goto LABEL_28;
  }
  if (a4)
  {
    sub_1005A5D60();
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (Swift::Int)sub_1005A7764();
      goto LABEL_28;
    }
    sub_1005A827C();
  }
  uint64_t v10 = *v4;
  sub_1005E33F0();
  sub_1005E3410(a2 | ((unint64_t)a2 << 32));
  uint64_t result = sub_1005E3470();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a3 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v12 = ~v11;
    while (1)
    {
      uint64_t v13 = *(void *)(v10 + 48) + 16 * a3;
      if ((*(unsigned int *)(v13 + 8) | ((unint64_t)*(unsigned int *)(v13 + 8) << 32)) == (a2 | ((unint64_t)a2 << 32)))
      {
        uint64_t v14 = *(void *)v13;
        uint64_t v15 = *(void *)(v14 + 16);
        if (v15 == *(void *)(v7 + 16))
        {
          if (v15) {
            BOOL v16 = v14 == v7;
          }
          else {
            BOOL v16 = 1;
          }
          if (v16) {
            goto LABEL_31;
          }
          if (*(unsigned __int8 *)(v14 + 32) == *(unsigned __int8 *)(v7 + 32))
          {
            if (v15 == 1) {
              goto LABEL_31;
            }
            if (*(unsigned __int8 *)(v14 + 33) == *(unsigned __int8 *)(v7 + 33))
            {
              if (v15 == 2) {
                goto LABEL_31;
              }
              if (*(unsigned __int8 *)(v14 + 34) == *(unsigned __int8 *)(v7 + 34))
              {
                if (v15 == 3) {
                  goto LABEL_31;
                }
                if (*(unsigned __int8 *)(v14 + 35) == *(unsigned __int8 *)(v7 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_10:
      a3 = (a3 + 1) & v12;
      if (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
        goto LABEL_28;
      }
    }
    uint64_t v17 = (unsigned __int8 *)(v14 + 36);
    uint64_t v18 = v15 - 4;
    int64_t v19 = (unsigned __int8 *)(v7 + 36);
    while (v18)
    {
      int v21 = *v17++;
      int v20 = v21;
      int v22 = *v19++;
      --v18;
      if (v20 != v22) {
        goto LABEL_10;
      }
    }
    goto LABEL_31;
  }
LABEL_28:
  uint64_t v23 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v24 = *(void *)(v23 + 48) + 16 * a3;
  *(void *)uint64_t v24 = v7;
  *(_DWORD *)(v24 + 8) = a2;
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_31:
  uint64_t result = sub_1005E3370();
  __break(1u);
  return result;
}

Swift::Int sub_1005A6F04(Swift::Int result, uint64_t a2, uint64_t a3, unsigned int a4, unint64_t a5, char a6)
{
  Swift::Int v11 = result;
  unint64_t v12 = *(void *)(*v6 + 16);
  unint64_t v13 = *(void *)(*v6 + 24);
  if (v13 > v12 && (a6 & 1) != 0) {
    goto LABEL_33;
  }
  if (a6)
  {
    sub_1005A6038();
  }
  else
  {
    if (v13 > v12)
    {
      uint64_t result = (Swift::Int)sub_1005A7920();
      goto LABEL_33;
    }
    sub_1005A8528();
  }
  uint64_t v14 = *v6;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  Swift::UInt v15 = a4 | ((unint64_t)a4 << 32);
  sub_1005E3410(v15);
  uint64_t result = sub_1005E3470();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a5 = result & ~v16;
  uint64_t v17 = v14 + 56;
  if ((*(void *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5))
  {
    uint64_t v18 = ~v16;
    uint64_t v19 = *(void *)(v14 + 48);
    while (1)
    {
      uint64_t v20 = v19 + 32 * a5;
      uint64_t result = *(void *)v20;
      uint64_t v21 = *(void *)(v20 + 16);
      uint64_t v22 = *(unsigned int *)(v20 + 24);
      BOOL v23 = *(void *)v20 == v11 && *(void *)(v20 + 8) == a2;
      if (v23 || (uint64_t result = sub_1005E3290(), (result & 1) != 0))
      {
        if ((v22 | (v22 << 32)) == v15)
        {
          uint64_t v24 = *(void *)(v21 + 16);
          if (v24 == *(void *)(a3 + 16))
          {
            if (v24) {
              BOOL v25 = v21 == a3;
            }
            else {
              BOOL v25 = 1;
            }
            if (v25) {
              goto LABEL_36;
            }
            if (*(unsigned __int8 *)(v21 + 32) == *(unsigned __int8 *)(a3 + 32))
            {
              if (v24 == 1) {
                goto LABEL_36;
              }
              if (*(unsigned __int8 *)(v21 + 33) == *(unsigned __int8 *)(a3 + 33))
              {
                if (v24 == 2) {
                  goto LABEL_36;
                }
                if (*(unsigned __int8 *)(v21 + 34) == *(unsigned __int8 *)(a3 + 34))
                {
                  if (v24 == 3) {
                    goto LABEL_36;
                  }
                  if (*(unsigned __int8 *)(v21 + 35) == *(unsigned __int8 *)(a3 + 35)) {
                    break;
                  }
                }
              }
            }
          }
        }
      }
LABEL_10:
      a5 = (a5 + 1) & v18;
      if (((*(void *)(v17 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5) & 1) == 0) {
        goto LABEL_33;
      }
    }
    BOOL v26 = (unsigned __int8 *)(v21 + 36);
    uint64_t v27 = v24 - 4;
    uint64_t v28 = (unsigned __int8 *)(a3 + 36);
    while (v27)
    {
      int v30 = *v26++;
      int v29 = v30;
      int v31 = *v28++;
      --v27;
      if (v29 != v31) {
        goto LABEL_10;
      }
    }
    goto LABEL_36;
  }
LABEL_33:
  uint64_t v32 = *v37;
  *(void *)(*v37 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  uint64_t v33 = *(void *)(v32 + 48) + 32 * a5;
  *(void *)uint64_t v33 = v11;
  *(void *)(v33 + 8) = a2;
  *(void *)(v33 + 16) = a3;
  *(_DWORD *)(v33 + 24) = a4;
  uint64_t v34 = *(void *)(v32 + 16);
  BOOL v35 = __OFADD__(v34, 1);
  uint64_t v36 = v34 + 1;
  if (!v35)
  {
    *(void *)(v32 + 16) = v36;
    return result;
  }
  __break(1u);
LABEL_36:
  uint64_t result = sub_1005E3370();
  __break(1u);
  return result;
}

void sub_1005A7178(void *a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1005A6354();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1005A7AEC();
      goto LABEL_14;
    }
    sub_1005A8824();
  }
  uint64_t v8 = *v3;
  sub_1005E33F0();
  id v9 = a1;
  sub_1005E2850();

  Swift::Int v10 = sub_1005E3470();
  uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1003C8730(0, qword_100718DD0);
    id v12 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v13 = sub_1005E2840();

    if (v13)
    {
LABEL_13:
      sub_1005E3370();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v16 = sub_1005E2840();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

uint64_t sub_1005A732C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1005A661C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1005A7C98();
      goto LABEL_14;
    }
    sub_1005A8ABC();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_1005E33E0();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1005E3370();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

Swift::Int sub_1005A7450(Swift::Int result, unint64_t a2, char a3, uint64_t *a4, uint64_t *a5)
{
  Swift::UInt64 v8 = result;
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_1005A68A0(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_1005A7E30(a4);
      goto LABEL_14;
    }
    sub_1005A8D20(v11, a4);
  }
  uint64_t v12 = *v5;
  sub_1005E33F0();
  sub_1005E3450(v8);
  uint64_t result = sub_1005E3470();
  uint64_t v13 = -1 << *(unsigned char *)(v12 + 32);
  a2 = result & ~v13;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v14 = *(void *)(v12 + 48);
    if (*(void *)(v14 + 8 * a2) == v8)
    {
LABEL_13:
      sub_10000566C(a5);
      uint64_t result = sub_1005E3370();
      __break(1u);
    }
    else
    {
      uint64_t v15 = ~v13;
      while (1)
      {
        a2 = (a2 + 1) & v15;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v14 + 8 * a2) == v8) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = v8;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
  return result;
}

void *sub_1005A75B0()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_100718D20);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005A7764()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_1007190A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    LODWORD(v17) = *(_DWORD *)(v17 + 8);
    uint64_t v19 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v19 = v18;
    *(_DWORD *)(v19 + 8) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005A7920()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_100718D40);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v19 = *(void *)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    LODWORD(v17) = *(_DWORD *)(v17 + 24);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v21 = v19;
    *(void *)(v21 + 8) = v18;
    *(void *)(v21 + 16) = v20;
    *(_DWORD *)(v21 + 24) = v17;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1005A7AEC()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10071A7F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005A7C98()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_10071A7C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005A7E30(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10000566C(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1005E2C00();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(void *)(*(void *)(v5 + 48) + 8 * v16) = *(void *)(*(void *)(v3 + 48) + 8 * v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1005A7FC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_100718D20);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1005E33F0();
    swift_bridgeObjectRetain_n();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1005E3470();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A827C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_1007190A8);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v28) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 16 * v14;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(unsigned int *)(v18 + 8);
    sub_1005E33F0();
    sub_1005E3410(v20 | (v20 << 32));
    uint64_t result = sub_1005E3470();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
    *(void *)uint64_t v12 = v19;
    *(_DWORD *)(v12 + 8) = v20;
    ++*(void *)(v4 + 16);
    uint64_t result = swift_bridgeObjectRetain();
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A8528()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_100718D40);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v30 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v30 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v30 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 32 * v14;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    uint64_t v22 = *(unsigned int *)(v18 + 24);
    sub_1005E33F0();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    sub_1005E3410(v22 | (v22 << 32));
    uint64_t result = sub_1005E3470();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 32 * v11;
    *(void *)uint64_t v12 = v19;
    *(void *)(v12 + 8) = v20;
    *(void *)(v12 + 16) = v21;
    *(_DWORD *)(v12 + 24) = v22;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v30 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v31) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A8824()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_10071A7F8);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  BOOL v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    uint64_t v19 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    sub_1005E33F0();
    id v20 = v19;
    sub_1005E2850();

    uint64_t result = sub_1005E3470();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A8ABC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_10071A7C8);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  BOOL v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_1005E33E0();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A8D20(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10000566C(a2);
  uint64_t result = sub_1005E2C10();
  uint64_t v6 = result;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  int64_t v7 = 0;
  uint64_t v8 = v4 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v4 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    Swift::UInt64 v20 = *(void *)(*(void *)(v4 + 48) + 8 * v16);
    sub_1005E33F0();
    sub_1005E3450(v20);
    uint64_t result = sub_1005E3470();
    uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v6 + 48) + 8 * v14) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v3 = v2;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A8F98(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_1005ABDA4(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1005A9320(v6);
  return sub_1005E2D70();
}

void *sub_1005A9014(uint64_t a1)
{
  return sub_1005A913C(a1, &qword_10071A6A8, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_100039BA8);
}

void *sub_1005A9034(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000566C(&qword_10071A6A8);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_10059FE9C((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_10003BC80();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_1005A911C(uint64_t a1)
{
  return sub_1005A913C(a1, &qword_100719078, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1005A009C);
}

void *sub_1005A913C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000566C(a2);
  uint64_t v6 = (void *)swift_allocObject();
  int64_t v7 = j__malloc_size(v6);
  uint64_t v8 = v7 - 32;
  if (v7 < 32) {
    uint64_t v8 = v7 - 17;
  }
  uint64_t v6[2] = v3;
  void v6[3] = 2 * (v8 >> 4);
  uint64_t v9 = a3(&v11, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_10003BC80();
  if (v9 != v3)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v6;
}

void *sub_1005A9228(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_10000566C(&qword_100719088);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = j__malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1005AB910((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v3;
}

Swift::Int sub_1005A9320(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  Swift::Int result = sub_1005E3210(v4);
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_235;
    }
    if (v4) {
      return sub_1005AA3EC(0, v4, 1, a1);
    }
    return result;
  }
  Swift::Int v195 = result;
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_243;
  }
  Swift::Int v200 = v4;
  uint64_t v193 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)_swiftEmptyArrayStorage;
    uint64_t v223 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v201 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v137 = _swiftEmptyArrayStorage[2];
LABEL_187:
      if (v137 >= 2)
      {
        uint64_t v186 = *v193;
        do
        {
          unint64_t v187 = v137 - 2;
          if (v137 < 2) {
            goto LABEL_229;
          }
          if (!v186) {
            goto LABEL_242;
          }
          uint64_t v188 = *(void *)&v9[16 * v187 + 32];
          uint64_t v189 = *(void *)&v9[16 * v137 + 24];
          sub_1005AA684((id *)(v186 + 8 * v188), (id *)(v186 + 8 * *(void *)&v9[16 * v137 + 16]), v186 + 8 * v189, v201);
          if (v2) {
            break;
          }
          if (v189 < v188) {
            goto LABEL_230;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1005AAE8C((uint64_t)v9);
          }
          if (v187 >= *((void *)v9 + 2)) {
            goto LABEL_231;
          }
          uint64_t v190 = &v9[16 * v187 + 32];
          *(void *)uint64_t v190 = v188;
          *((void *)v190 + 1) = v189;
          unint64_t v191 = *((void *)v9 + 2);
          if (v137 > v191) {
            goto LABEL_232;
          }
          memmove(&v9[16 * v137 + 16], &v9[16 * v137 + 32], 16 * (v191 - v137));
          *((void *)v9 + 2) = v191 - 1;
          unint64_t v137 = v191 - 1;
        }
        while (v191 > 2);
      }
LABEL_198:
      swift_bridgeObjectRelease();
      *(void *)((v223 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1005E20E0();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    _s14descr1006B9AE9V7MailboxCMa();
    uint64_t v8 = sub_1005E2150();
    *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    uint64_t v201 = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v223 = v8;
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v194 = *a1 + 16;
  uint64_t v192 = *a1 - 8;
  uint64_t v9 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v12 = v200;
  uint64_t v212 = *a1;
  while (1)
  {
    Swift::Int v13 = v10 + 1;
    uint64_t v206 = v9;
    Swift::Int v209 = v10;
    if (v10 + 1 < v12)
    {
      unint64_t v14 = *(void **)(v11 + 8 * v10);
      id v15 = *(id *)(v11 + 8 * v13);
      id v16 = v14;
      NSString v17 = sub_1005E1BD0();
      [v15 willAccessValueForKey:v17];

      id v18 = [v15 primitiveName];
      if (v18)
      {
        id v19 = v18;
        sub_10059BA20(v19);
        v21._uint64_t rawValue = v20;

        NIOIMAPCore2::MailboxName v224 = MailboxName.init(_:)(v21);
        uint64_t rawValue = (uint64_t)v224.bytes._rawValue;
        Swift::UInt32 value = v224._hashValue._value;
      }
      else
      {
        uint64_t rawValue = 0;
        Swift::UInt32 value = 0;
      }
      NSString v24 = sub_1005E1BD0();
      [v15 didAccessValueForKey:v24];

      if (!rawValue)
      {
        unint64_t v25 = MailboxName.inbox.unsafeMutableAddressor();
        uint64_t rawValue = *v25;
        Swift::UInt32 value = *((_DWORD *)v25 + 2);
        swift_bridgeObjectRetain();
      }
      NSString v26 = sub_1005E1BD0();
      [v16 willAccessValueForKey:v26];

      id v27 = [v16 primitiveName];
      if (v27)
      {
        id v28 = v27;
        sub_10059BA20(v28);
        v30._uint64_t rawValue = v29;

        NIOIMAPCore2::MailboxName v225 = MailboxName.init(_:)(v30);
        uint64_t v31 = (uint64_t)v225.bytes._rawValue;
        Swift::UInt32 v32 = v225._hashValue._value;
      }
      else
      {
        uint64_t v31 = 0;
        Swift::UInt32 v32 = 0;
      }
      NSString v33 = sub_1005E1BD0();
      [v16 didAccessValueForKey:v33];

      if (!v31)
      {
        uint64_t v34 = MailboxName.inbox.unsafeMutableAddressor();
        uint64_t v31 = *v34;
        Swift::UInt32 v32 = *((_DWORD *)v34 + 2);
        swift_bridgeObjectRetain();
      }
      BOOL v221 = static MailboxName.stableOrder(_:_:)(rawValue, value, v31, v32);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Swift::Int v10 = v209;
      Swift::Int v13 = v209 + 2;
      if (v209 + 2 < v200)
      {
        uint64_t v202 = v2;
        BOOL v35 = (id *)(v194 + 8 * v209);
        while (1)
        {
          uint64_t v36 = *(v35 - 1);
          id v37 = *v35;
          id v38 = v36;
          NSString v39 = sub_1005E1BD0();
          [v37 willAccessValueForKey:v39];

          id v40 = [v37 primitiveName];
          if (v40)
          {
            id v41 = v40;
            sub_10059BA20(v41);
            v43._uint64_t rawValue = v42;

            NIOIMAPCore2::MailboxName v226 = MailboxName.init(_:)(v43);
            uint64_t v44 = (uint64_t)v226.bytes._rawValue;
            Swift::UInt32 v45 = v226._hashValue._value;
          }
          else
          {
            uint64_t v44 = 0;
            Swift::UInt32 v45 = 0;
          }
          NSString v46 = sub_1005E1BD0();
          [v37 didAccessValueForKey:v46];

          if (!v44)
          {
            uint64_t v47 = MailboxName.inbox.unsafeMutableAddressor();
            uint64_t v44 = *v47;
            Swift::UInt32 v45 = *((_DWORD *)v47 + 2);
            swift_bridgeObjectRetain();
          }
          NSString v48 = sub_1005E1BD0();
          [v38 willAccessValueForKey:v48];

          id v49 = [v38 primitiveName];
          if (v49)
          {
            id v50 = v49;
            sub_10059BA20(v50);
            v52._uint64_t rawValue = v51;

            NIOIMAPCore2::MailboxName v227 = MailboxName.init(_:)(v52);
            uint64_t v53 = (uint64_t)v227.bytes._rawValue;
            Swift::UInt32 v54 = v227._hashValue._value;
          }
          else
          {
            uint64_t v53 = 0;
            Swift::UInt32 v54 = 0;
          }
          NSString v55 = sub_1005E1BD0();
          [v38 didAccessValueForKey:v55];

          if (!v53)
          {
            uint64_t v56 = MailboxName.inbox.unsafeMutableAddressor();
            uint64_t v53 = *v56;
            Swift::UInt32 v54 = *((_DWORD *)v56 + 2);
            swift_bridgeObjectRetain();
          }
          uint64_t v9 = v206;
          BOOL v57 = static MailboxName.stableOrder(_:_:)(v44, v45, v53, v54);

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v221 ^ v57)) {
            break;
          }
          ++v13;
          ++v35;
          Swift::Int v10 = v209;
          if (v200 == v13)
          {
            Swift::Int v13 = v200;
            uint64_t v2 = v202;
            goto LABEL_40;
          }
        }
        uint64_t v2 = v202;
        Swift::Int v10 = v209;
      }
LABEL_40:
      uint64_t v11 = v212;
      if (v221)
      {
        if (v13 < v10) {
          goto LABEL_236;
        }
        Swift::Int v58 = v13;
        if (v10 < v13)
        {
          unint64_t v59 = (uint64_t *)(v192 + 8 * v13);
          Swift::Int v60 = v10;
          uint64_t v61 = (uint64_t *)(v212 + 8 * v10);
          do
          {
            if (v60 != --v58)
            {
              if (!v212) {
                goto LABEL_241;
              }
              uint64_t v62 = *v61;
              *uint64_t v61 = *v59;
              *unint64_t v59 = v62;
            }
            ++v60;
            --v59;
            ++v61;
          }
          while (v60 < v58);
        }
      }
    }
    Swift::Int v63 = v13;
    if (v13 >= v200) {
      goto LABEL_134;
    }
    if (__OFSUB__(v13, v10)) {
      goto LABEL_234;
    }
    if (v13 - v10 >= v195)
    {
      Swift::Int v63 = v13;
      goto LABEL_134;
    }
    Swift::Int v64 = v10 + v195;
    if (__OFADD__(v10, v195)) {
      goto LABEL_237;
    }
    if (v64 >= v200) {
      Swift::Int v64 = v200;
    }
    if (v64 < v10) {
      break;
    }
    Swift::Int v63 = v13;
    Swift::Int v197 = v64;
    if (v13 != v64)
    {
      do
      {
        int v65 = *(void **)(v11 + 8 * v63);
        Swift::Int v198 = v63;
        Swift::Int v66 = v63;
        do
        {
          Swift::Int v215 = v66 - 1;
          os_log_type_t v67 = *(void **)(v11 + 8 * (v66 - 1));
          id v68 = v65;
          id v69 = v67;
          NSString v70 = sub_1005E1BD0();
          [v68 willAccessValueForKey:v70];

          id v71 = [v68 primitiveName];
          id v220 = v68;
          id v222 = v69;
          if (!v71)
          {
            uint64_t v83 = 0;
            Swift::UInt32 v219 = 0;
            goto LABEL_94;
          }
          id v72 = v71;
          uint64_t v73 = sub_1005E27F0();
          uint64_t v74 = sub_1005E2800();
          uint64_t v75 = sub_1005E27F0();
          uint64_t v76 = sub_1005E2800();
          if (v73 < v75 || v76 < v73) {
            goto LABEL_202;
          }
          uint64_t v78 = sub_1005E27F0();
          uint64_t v79 = sub_1005E2800();
          if (v74 < v78 || v79 < v74) {
            goto LABEL_203;
          }
          Swift::Int v210 = v66;
          uint64_t v80 = v74 - v73;
          if (__OFSUB__(v74, v73)) {
            goto LABEL_204;
          }
          if (!v80)
          {
            long long v84 = _swiftEmptyArrayStorage;
            id v68 = v220;
            id v69 = v222;
            goto LABEL_93;
          }
          id v68 = v220;
          id v69 = v222;
          if (v80 < 1)
          {
            int v218 = _swiftEmptyArrayStorage;
          }
          else
          {
            sub_10000566C(&qword_100719918);
            uint64_t v81 = (void *)swift_allocObject();
            size_t v82 = j__malloc_size(v81);
            v81[2] = v80;
            v81[3] = 2 * v82 - 64;
            int v218 = v81;
          }
          id v85 = v72;
          uint64_t v86 = sub_1005E27F0();

          if (v80 < 1) {
            goto LABEL_210;
          }
          uint64_t v213 = v85;
          if (v86 == sub_1005E2800())
          {
            uint64_t v87 = 0;
            goto LABEL_91;
          }
          char v88 = sub_1005E2810();
          id v89 = v85;
          uint64_t v90 = sub_1005E27F0();
          uint64_t v91 = sub_1005E2800();

          if (v86 < v90 || v86 >= v91) {
            goto LABEL_216;
          }
          long long v84 = v218;
          *((unsigned char *)v218 + 32) = v88;
          if (v80 == 1)
          {
            uint64_t v87 = 1;
            uint64_t v9 = v206;
            id v68 = v220;
            id v69 = v222;
            goto LABEL_92;
          }
          uint64_t v92 = v86 + 1;
          if (v92 == sub_1005E2800())
          {
            uint64_t v87 = 1;
            uint64_t v9 = v206;
            goto LABEL_90;
          }
          uint64_t v203 = v2;
          uint64_t v93 = 0;
          uint64_t v207 = v80;
          uint64_t v216 = v80 - 2;
          do
          {
            uint64_t v94 = v92;
            uint64_t v95 = v92 + v93;
            char v96 = sub_1005E2810();
            id v97 = v89;
            uint64_t v98 = sub_1005E27F0();
            uint64_t v99 = sub_1005E2800();

            if (v95 < v98 || v95 >= v99)
            {
              __break(1u);
LABEL_201:
              __break(1u);
LABEL_202:
              __break(1u);
LABEL_203:
              __break(1u);
LABEL_204:
              __break(1u);
LABEL_205:
              __break(1u);
LABEL_206:
              __break(1u);
LABEL_207:
              __break(1u);
LABEL_208:
              __break(1u);
LABEL_209:
              __break(1u);
LABEL_210:
              __break(1u);
LABEL_211:
              __break(1u);
LABEL_212:
              __break(1u);
LABEL_213:
              __break(1u);
LABEL_214:
              __break(1u);
LABEL_215:
              __break(1u);
LABEL_216:
              __break(1u);
LABEL_217:
              __break(1u);
LABEL_218:
              __break(1u);
LABEL_219:
              __break(1u);
LABEL_220:
              __break(1u);
LABEL_221:
              __break(1u);
LABEL_222:
              __break(1u);
LABEL_223:
              __break(1u);
LABEL_224:
              __break(1u);
LABEL_225:
              __break(1u);
LABEL_226:
              __break(1u);
LABEL_227:
              __break(1u);
LABEL_228:
              __break(1u);
LABEL_229:
              __break(1u);
LABEL_230:
              __break(1u);
LABEL_231:
              __break(1u);
LABEL_232:
              __break(1u);
LABEL_233:
              __break(1u);
LABEL_234:
              __break(1u);
LABEL_235:
              __break(1u);
LABEL_236:
              __break(1u);
LABEL_237:
              __break(1u);
              goto LABEL_238;
            }
            *((unsigned char *)v218 + v93 + 33) = v96;
            if (v216 == v93)
            {

              uint64_t v2 = v203;
              uint64_t v9 = v206;
              Swift::Int v10 = v209;
              id v68 = v220;
              id v69 = v222;
              long long v84 = v218;
              goto LABEL_93;
            }
            ++v93;
            uint64_t v92 = v94;
          }
          while (v94 + v93 != sub_1005E2800());
          uint64_t v87 = v93 + 1;
          uint64_t v2 = v203;
          uint64_t v9 = v206;
          uint64_t v80 = v207;
          Swift::Int v10 = v209;
LABEL_90:
          id v68 = v220;
          id v69 = v222;
LABEL_91:
          long long v84 = v218;
LABEL_92:

          if (v87 != v80) {
            goto LABEL_208;
          }
LABEL_93:

          NIOIMAPCore2::MailboxName v228 = MailboxName.init(_:)((Swift::OpaquePointer)v84);
          uint64_t v83 = (uint64_t)v228.bytes._rawValue;
          Swift::UInt32 v219 = v228._hashValue._value;

          Swift::Int v66 = v210;
LABEL_94:
          NSString v100 = sub_1005E1BD0();
          [v68 didAccessValueForKey:v100];

          if (!v83)
          {
            uint64_t v101 = MailboxName.inbox.unsafeMutableAddressor();
            uint64_t v83 = *v101;
            Swift::UInt32 v219 = *((_DWORD *)v101 + 2);
            swift_bridgeObjectRetain();
          }
          uint64_t v217 = v83;
          NSString v102 = sub_1005E1BD0();
          [v69 willAccessValueForKey:v102];

          id v103 = [v69 primitiveName];
          if (!v103)
          {
            uint64_t v114 = 0;
            Swift::UInt32 v115 = 0;
            goto LABEL_125;
          }
          id v104 = v103;
          uint64_t v105 = sub_1005E27F0();
          uint64_t v106 = sub_1005E2800();
          uint64_t v107 = sub_1005E27F0();
          uint64_t v108 = sub_1005E2800();
          if (v105 < v107 || v108 < v105) {
            goto LABEL_205;
          }
          uint64_t v109 = sub_1005E27F0();
          uint64_t v110 = sub_1005E2800();
          if (v106 < v109 || v110 < v106) {
            goto LABEL_206;
          }
          uint64_t v111 = v106 - v105;
          if (__OFSUB__(v106, v105)) {
            goto LABEL_207;
          }
          if (!v111)
          {
            unint64_t v116 = _swiftEmptyArrayStorage;
            id v68 = v220;
            id v69 = v222;
            goto LABEL_124;
          }
          id v68 = v220;
          id v69 = v222;
          if (v111 < 1)
          {
            uint64_t v214 = _swiftEmptyArrayStorage;
          }
          else
          {
            sub_10000566C(&qword_100719918);
            NIOIMAPCore2::MailboxName v112 = (void *)swift_allocObject();
            size_t v113 = j__malloc_size(v112);
            v112[2] = v111;
            v112[3] = 2 * v113 - 64;
            uint64_t v214 = v112;
          }
          id v117 = v104;
          uint64_t v118 = sub_1005E27F0();

          if (v111 < 1) {
            goto LABEL_211;
          }
          uint64_t v205 = v117;
          if (v118 == sub_1005E2800())
          {
            uint64_t v119 = 0;
            unint64_t v116 = v214;
            goto LABEL_123;
          }
          uint64_t v204 = v2;
          char v120 = sub_1005E2810();
          id v121 = v117;
          uint64_t v122 = sub_1005E27F0();
          uint64_t v123 = sub_1005E2800();

          if (v118 < v122 || v118 >= v123) {
            goto LABEL_217;
          }
          unint64_t v116 = v214;
          *((unsigned char *)v214 + 32) = v120;
          if (v111 == 1)
          {
            uint64_t v119 = 1;
            uint64_t v2 = v204;
            id v69 = v222;
            goto LABEL_123;
          }
          uint64_t v124 = v118 + 1;
          if (v118 + 1 == sub_1005E2800())
          {
            uint64_t v119 = 1;
            uint64_t v2 = v204;
            id v69 = v222;
            unint64_t v116 = v214;
            goto LABEL_123;
          }
          Swift::Int v211 = v66;
          uint64_t v125 = 0;
          uint64_t v196 = v111;
          uint64_t v208 = v111 - 2;
          do
          {
            uint64_t v126 = v124;
            uint64_t v127 = v124 + v125;
            char v128 = sub_1005E2810();
            id v129 = v121;
            uint64_t v130 = sub_1005E27F0();
            uint64_t v131 = sub_1005E2800();

            if (v127 < v130 || v127 >= v131) {
              goto LABEL_201;
            }
            *((unsigned char *)v214 + v125 + 33) = v128;
            if (v208 == v125)
            {

              uint64_t v2 = v204;
              uint64_t v9 = v206;
              Swift::Int v66 = v211;
              id v68 = v220;
              id v69 = v222;
              unint64_t v116 = v214;
              goto LABEL_124;
            }
            ++v125;
            uint64_t v124 = v126;
          }
          while (v126 + v125 != sub_1005E2800());
          uint64_t v119 = v125 + 1;
          uint64_t v2 = v204;
          Swift::Int v66 = v211;
          id v68 = v220;
          id v69 = v222;
          unint64_t v116 = v214;
          uint64_t v111 = v196;
LABEL_123:

          uint64_t v9 = v206;
          if (v119 != v111) {
            goto LABEL_209;
          }
LABEL_124:

          NIOIMAPCore2::MailboxName v229 = MailboxName.init(_:)((Swift::OpaquePointer)v116);
          uint64_t v114 = (uint64_t)v229.bytes._rawValue;
          Swift::UInt32 v115 = v229._hashValue._value;

          Swift::Int v10 = v209;
LABEL_125:
          NSString v132 = sub_1005E1BD0();
          [v69 didAccessValueForKey:v132];

          if (!v114)
          {
            char v133 = MailboxName.inbox.unsafeMutableAddressor();
            uint64_t v114 = *v133;
            Swift::UInt32 v115 = *((_DWORD *)v133 + 2);
            swift_bridgeObjectRetain();
          }
          BOOL v134 = static MailboxName.stableOrder(_:_:)(v217, v219, v114, v115);

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!v134)
          {
            uint64_t v11 = v212;
            break;
          }
          uint64_t v11 = v212;
          if (!v212) {
            goto LABEL_239;
          }
          int v65 = *(void **)(v212 + 8 * v66);
          *(void *)(v212 + 8 * v66) = *(void *)(v212 + 8 * v215);
          *(void *)(v212 + 8 * v215) = v65;
          Swift::Int v66 = v215;
        }
        while (v215 != v10);
        Swift::Int v63 = v198 + 1;
      }
      while (v198 + 1 != v197);
      Swift::Int v63 = v197;
      if (v197 < v10) {
        goto LABEL_233;
      }
      goto LABEL_135;
    }
LABEL_134:
    if (v63 < v10) {
      goto LABEL_233;
    }
LABEL_135:
    Swift::Int v199 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1005AACC4(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v136 = *((void *)v9 + 2);
    unint64_t v135 = *((void *)v9 + 3);
    unint64_t v137 = v136 + 1;
    uint64_t v11 = v212;
    if (v136 >= v135 >> 1)
    {
      uint64_t v185 = sub_1005AACC4((char *)(v135 > 1), v136 + 1, 1, v9);
      uint64_t v11 = v212;
      uint64_t v9 = v185;
    }
    *((void *)v9 + 2) = v137;
    int v138 = v9 + 32;
    uint64_t v139 = &v9[16 * v136 + 32];
    *(void *)uint64_t v139 = v10;
    *((void *)v139 + 1) = v199;
    if (v136)
    {
      while (1)
      {
        unint64_t v140 = v137 - 1;
        if (v137 >= 4)
        {
          uint64_t v145 = &v138[16 * v137];
          uint64_t v146 = *((void *)v145 - 8);
          uint64_t v147 = *((void *)v145 - 7);
          BOOL v151 = __OFSUB__(v147, v146);
          uint64_t v148 = v147 - v146;
          if (v151) {
            goto LABEL_218;
          }
          uint64_t v150 = *((void *)v145 - 6);
          uint64_t v149 = *((void *)v145 - 5);
          BOOL v151 = __OFSUB__(v149, v150);
          uint64_t v143 = v149 - v150;
          char v144 = v151;
          if (v151) {
            goto LABEL_219;
          }
          unint64_t v152 = v137 - 2;
          uint64_t v153 = &v138[16 * v137 - 32];
          uint64_t v155 = *(void *)v153;
          uint64_t v154 = *((void *)v153 + 1);
          BOOL v151 = __OFSUB__(v154, v155);
          uint64_t v156 = v154 - v155;
          if (v151) {
            goto LABEL_221;
          }
          BOOL v151 = __OFADD__(v143, v156);
          uint64_t v157 = v143 + v156;
          if (v151) {
            goto LABEL_224;
          }
          if (v157 >= v148)
          {
            int v175 = &v138[16 * v140];
            uint64_t v177 = *(void *)v175;
            uint64_t v176 = *((void *)v175 + 1);
            BOOL v151 = __OFSUB__(v176, v177);
            uint64_t v178 = v176 - v177;
            if (v151) {
              goto LABEL_228;
            }
            BOOL v168 = v143 < v178;
            goto LABEL_171;
          }
        }
        else
        {
          if (v137 != 3)
          {
            uint64_t v169 = *((void *)v9 + 4);
            uint64_t v170 = *((void *)v9 + 5);
            BOOL v151 = __OFSUB__(v170, v169);
            uint64_t v162 = v170 - v169;
            char v163 = v151;
            goto LABEL_165;
          }
          uint64_t v142 = *((void *)v9 + 4);
          uint64_t v141 = *((void *)v9 + 5);
          BOOL v151 = __OFSUB__(v141, v142);
          uint64_t v143 = v141 - v142;
          char v144 = v151;
        }
        if (v144) {
          goto LABEL_220;
        }
        unint64_t v152 = v137 - 2;
        uint64_t v158 = &v138[16 * v137 - 32];
        uint64_t v160 = *(void *)v158;
        uint64_t v159 = *((void *)v158 + 1);
        BOOL v161 = __OFSUB__(v159, v160);
        uint64_t v162 = v159 - v160;
        char v163 = v161;
        if (v161) {
          goto LABEL_223;
        }
        uint64_t v164 = &v138[16 * v140];
        uint64_t v166 = *(void *)v164;
        uint64_t v165 = *((void *)v164 + 1);
        BOOL v151 = __OFSUB__(v165, v166);
        uint64_t v167 = v165 - v166;
        if (v151) {
          goto LABEL_226;
        }
        if (__OFADD__(v162, v167)) {
          goto LABEL_227;
        }
        if (v162 + v167 >= v143)
        {
          BOOL v168 = v143 < v167;
LABEL_171:
          if (v168) {
            unint64_t v140 = v152;
          }
          goto LABEL_173;
        }
LABEL_165:
        if (v163) {
          goto LABEL_222;
        }
        uint64_t v171 = &v138[16 * v140];
        uint64_t v173 = *(void *)v171;
        uint64_t v172 = *((void *)v171 + 1);
        BOOL v151 = __OFSUB__(v172, v173);
        uint64_t v174 = v172 - v173;
        if (v151) {
          goto LABEL_225;
        }
        if (v174 < v162) {
          goto LABEL_182;
        }
LABEL_173:
        unint64_t v179 = v140 - 1;
        if (v140 - 1 >= v137) {
          goto LABEL_212;
        }
        if (!v11) {
          goto LABEL_240;
        }
        uint64_t v180 = &v138[16 * v179];
        uint64_t v181 = *(void *)v180;
        int v182 = &v138[16 * v140];
        uint64_t v183 = *((void *)v182 + 1);
        sub_1005AA684((id *)(v11 + 8 * *(void *)v180), (id *)(v11 + 8 * *(void *)v182), v11 + 8 * v183, v201);
        if (v2) {
          goto LABEL_198;
        }
        if (v183 < v181) {
          goto LABEL_213;
        }
        if (v140 > *((void *)v9 + 2)) {
          goto LABEL_214;
        }
        *(void *)uint64_t v180 = v181;
        *(void *)&v138[16 * v179 + 8] = v183;
        unint64_t v184 = *((void *)v9 + 2);
        if (v140 >= v184) {
          goto LABEL_215;
        }
        unint64_t v137 = v184 - 1;
        memmove(&v138[16 * v140], v182 + 16, 16 * (v184 - 1 - v140));
        *((void *)v9 + 2) = v184 - 1;
        uint64_t v11 = v212;
        if (v184 <= 2) {
          goto LABEL_182;
        }
      }
    }
    unint64_t v137 = 1;
LABEL_182:
    Swift::Int v10 = v199;
    Swift::Int v12 = v200;
    if (v199 >= v200) {
      goto LABEL_187;
    }
  }
LABEL_238:
  __break(1u);
LABEL_239:
  __break(1u);
LABEL_240:
  __break(1u);
LABEL_241:
  __break(1u);
LABEL_242:
  __break(1u);
LABEL_243:
  Swift::Int result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_1005AA3EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v34 = result;
  if (a3 != a2)
  {
    uint64_t v36 = *a4;
    uint64_t v4 = *a4 + 8 * a3 - 8;
    uint64_t v5 = &selRef_persistentStoreCoordinator;
    uint64_t v6 = &selRef_persistentStoreCoordinator;
LABEL_5:
    uint64_t v7 = *(void **)(v36 + 8 * a3);
    uint64_t v8 = v34;
    uint64_t v35 = v4;
    uint64_t v37 = a3;
    while (1)
    {
      uint64_t v9 = *(void **)v4;
      id v10 = v7;
      id v11 = v9;
      NSString v12 = sub_1005E1BD0();
      objc_msgSend(v10, v5[111], v12);

      id v13 = [v10 v6[15]];
      if (v13)
      {
        id v14 = v13;
        sub_10059BA20(v14);
        v16._uint64_t rawValue = v15;

        NIOIMAPCore2::MailboxName v39 = MailboxName.init(_:)(v16);
        uint64_t rawValue = (uint64_t)v39.bytes._rawValue;
        Swift::UInt32 value = v39._hashValue._value;
      }
      else
      {
        uint64_t rawValue = 0;
        Swift::UInt32 value = 0;
      }
      NSString v19 = sub_1005E1BD0();
      [v10 didAccessValueForKey:v19];

      if (rawValue)
      {
        unsigned int v38 = value;
      }
      else
      {
        Swift::UInt64 v20 = MailboxName.inbox.unsafeMutableAddressor();
        uint64_t rawValue = *v20;
        unsigned int v38 = *((_DWORD *)v20 + 2);
        swift_bridgeObjectRetain();
      }
      NSString v21 = sub_1005E1BD0();
      unint64_t v22 = v5;
      objc_msgSend(v11, v5[111], v21);

      id v23 = [v11 v6[15]];
      if (v23)
      {
        id v24 = v23;
        sub_10059BA20(v24);
        v26._uint64_t rawValue = v25;

        NIOIMAPCore2::MailboxName v40 = MailboxName.init(_:)(v26);
        uint64_t v27 = (uint64_t)v40.bytes._rawValue;
        Swift::UInt32 v28 = v40._hashValue._value;
      }
      else
      {
        uint64_t v27 = 0;
        Swift::UInt32 v28 = 0;
      }
      NSString v29 = sub_1005E1BD0();
      [v11 didAccessValueForKey:v29];

      if (!v27)
      {
        Swift::OpaquePointer v30 = MailboxName.inbox.unsafeMutableAddressor();
        uint64_t v27 = *v30;
        Swift::UInt32 v28 = *((_DWORD *)v30 + 2);
        swift_bridgeObjectRetain();
      }
      uint64_t v5 = v22;
      BOOL v31 = static MailboxName.stableOrder(_:_:)(rawValue, v38, v27, v28);

      swift_bridgeObjectRelease();
      Swift::Int result = swift_bridgeObjectRelease();
      uint64_t v6 = &selRef_persistentStoreCoordinator;
      if (!v31)
      {
LABEL_4:
        a3 = v37 + 1;
        uint64_t v4 = v35 + 8;
        if (v37 + 1 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v36) {
        break;
      }
      Swift::UInt32 v32 = *(void **)v4;
      uint64_t v7 = *(void **)(v4 + 8);
      *(void *)uint64_t v4 = v7;
      *(void *)(v4 + 8) = v32;
      v4 -= 8;
      if (v37 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1005AA684(id *__src, id *a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = __src;
  int64_t v6 = (char *)a2 - (char *)__src;
  int64_t v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v7 = (char *)a2 - (char *)__src;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v79 = __src;
  uint64_t v78 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4) {
        memmove(a4, a2, 8 * v11);
      }
      NIOIMAPCore2::MailboxName v39 = (char *)&a4[v11];
      uint64_t v77 = v39;
      uint64_t v79 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        NIOIMAPCore2::MailboxName v40 = (id *)(a3 - 8);
        id v41 = &selRef_persistentStoreCoordinator;
        uint64_t v42 = v4;
        uint64_t v76 = v5;
        do
        {
          id v72 = v39;
          uint64_t v74 = v4;
          uint64_t v44 = (void *)*((void *)v39 - 1);
          v39 -= 8;
          Swift::OpaquePointer v43 = v44;
          Swift::UInt32 v45 = *--v42;
          id v46 = v43;
          id v47 = v45;
          NSString v48 = sub_1005E1BD0();
          objc_msgSend(v46, v41[111], v48);

          id v49 = [v46 primitiveName];
          if (v49)
          {
            id v50 = v49;
            sub_10059BA20(v50);
            v52._uint64_t rawValue = v51;

            NIOIMAPCore2::MailboxName v82 = MailboxName.init(_:)(v52);
            uint64_t rawValue = (uint64_t)v82.bytes._rawValue;
            Swift::UInt32 value = v82._hashValue._value;
          }
          else
          {
            uint64_t rawValue = 0;
            Swift::UInt32 value = 0;
          }
          NSString v55 = sub_1005E1BD0();
          [v46 didAccessValueForKey:v55];

          if (!rawValue)
          {
            uint64_t v56 = MailboxName.inbox.unsafeMutableAddressor();
            uint64_t rawValue = *v56;
            Swift::UInt32 value = *((_DWORD *)v56 + 2);
            swift_bridgeObjectRetain();
          }
          unsigned int v70 = value;
          NSString v57 = sub_1005E1BD0();
          objc_msgSend(v47, v41[111], v57);

          id v58 = [v47 primitiveName];
          if (v58)
          {
            id v59 = v58;
            sub_10059BA20(v59);
            v61._uint64_t rawValue = v60;

            NIOIMAPCore2::MailboxName v83 = MailboxName.init(_:)(v61);
            uint64_t v62 = (uint64_t)v83.bytes._rawValue;
            Swift::UInt32 v63 = v83._hashValue._value;
          }
          else
          {
            uint64_t v62 = 0;
            Swift::UInt32 v63 = 0;
          }
          NSString v64 = sub_1005E1BD0();
          [v47 didAccessValueForKey:v64];

          if (!v62)
          {
            int v65 = MailboxName.inbox.unsafeMutableAddressor();
            uint64_t v62 = *v65;
            Swift::UInt32 v63 = *((_DWORD *)v65 + 2);
            swift_bridgeObjectRetain();
          }
          Swift::Int v66 = v40 + 1;
          BOOL v67 = static MailboxName.stableOrder(_:_:)(rawValue, v70, v62, v63);

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v67)
          {
            NIOIMAPCore2::MailboxName v39 = v72;
            id v41 = &selRef_persistentStoreCoordinator;
            if (v66 != v74 || v40 >= v74) {
              *NIOIMAPCore2::MailboxName v40 = *v42;
            }
            uint64_t v79 = v42;
          }
          else
          {
            uint64_t v77 = v39;
            id v41 = &selRef_persistentStoreCoordinator;
            if (v66 < (id *)v72 || v40 >= (id *)v72 || v66 != (id *)v72) {
              *NIOIMAPCore2::MailboxName v40 = *(id *)v39;
            }
            uint64_t v42 = v74;
          }
          if (v42 <= v76) {
            break;
          }
          --v40;
          uint64_t v4 = v42;
        }
        while (v39 > (char *)a4);
      }
LABEL_65:
      sub_1000A67A0((void **)&v79, (const void **)&v78, &v77);
      return 1;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4) {
      memmove(a4, __src, 8 * v8);
    }
    id v71 = (char *)&a4[v8];
    uint64_t v77 = v71;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      NSString v12 = &selRef_persistentStoreCoordinator;
      id v13 = a4;
      while (1)
      {
        uint64_t v75 = v5;
        id v14 = v4;
        id v15 = *v13;
        id v16 = *v4;
        id v17 = v15;
        NSString v18 = sub_1005E1BD0();
        objc_msgSend(v16, v12[111], v18);

        id v19 = [v16 primitiveName];
        if (v19)
        {
          id v20 = v19;
          sub_10059BA20(v20);
          v22._uint64_t rawValue = v21;

          NIOIMAPCore2::MailboxName v80 = MailboxName.init(_:)(v22);
          uint64_t v23 = (uint64_t)v80.bytes._rawValue;
          Swift::UInt32 v24 = v80._hashValue._value;
        }
        else
        {
          uint64_t v23 = 0;
          Swift::UInt32 v24 = 0;
        }
        NSString v25 = sub_1005E1BD0();
        [v16 didAccessValueForKey:v25];

        if (!v23)
        {
          Swift::OpaquePointer v26 = MailboxName.inbox.unsafeMutableAddressor();
          uint64_t v23 = *v26;
          Swift::UInt32 v24 = *((_DWORD *)v26 + 2);
          swift_bridgeObjectRetain();
        }
        NSString v27 = sub_1005E1BD0();
        objc_msgSend(v17, v12[111], v27);

        id v28 = [v17 primitiveName];
        if (v28)
        {
          id v29 = v28;
          sub_10059BA20(v29);
          v31._uint64_t rawValue = v30;

          NIOIMAPCore2::MailboxName v81 = MailboxName.init(_:)(v31);
          uint64_t v32 = (uint64_t)v81.bytes._rawValue;
          Swift::UInt32 v33 = v81._hashValue._value;
        }
        else
        {
          uint64_t v32 = 0;
          Swift::UInt32 v33 = 0;
        }
        NSString v34 = sub_1005E1BD0();
        [v17 didAccessValueForKey:v34];

        if (!v32)
        {
          uint64_t v35 = MailboxName.inbox.unsafeMutableAddressor();
          uint64_t v32 = *v35;
          Swift::UInt32 v33 = *((_DWORD *)v35 + 2);
          swift_bridgeObjectRetain();
        }
        BOOL v36 = static MailboxName.stableOrder(_:_:)(v23, v24, v32, v33);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v36)
        {
          uint64_t v37 = v14 + 1;
          unsigned int v38 = v75;
          if (v75 >= v14 && v75 < v37)
          {
            NSString v12 = &selRef_persistentStoreCoordinator;
            if (v75 != v14) {
              *uint64_t v75 = *v14;
            }
            goto LABEL_33;
          }
          *uint64_t v75 = *v14;
        }
        else
        {
          unsigned int v38 = v75;
          if (v75 != v13) {
            *uint64_t v75 = *v13;
          }
          uint64_t v78 = ++v13;
          uint64_t v37 = v14;
        }
        NSString v12 = &selRef_persistentStoreCoordinator;
LABEL_33:
        uint64_t v5 = v38 + 1;
        if (v13 < (void **)v71)
        {
          uint64_t v4 = v37;
          if ((unint64_t)v37 < a3) {
            continue;
          }
        }
        uint64_t v79 = v5;
        goto LABEL_65;
      }
    }
    goto LABEL_65;
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

char *sub_1005AACC4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10071A7B8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  id v13 = v10 + 32;
  id v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1005AADC0(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -96)
  {
    uint64_t result = (char *)sub_1005E3000();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 96 * (v4 / 96);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_1005AAE8C(uint64_t a1)
{
  return sub_1005AACC4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1005AAEA0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  Swift::Int v6 = sub_1005E3470();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1005E3290() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      id v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1005E3290() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1005A75B0();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_1005AB510(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1005AB040(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v5;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  Swift::UInt v34 = a4 | ((unint64_t)a4 << 32);
  sub_1005E3410(v34);
  Swift::Int v11 = sub_1005E3470();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v14 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    Swift::UInt32 v33 = v5;
    uint64_t v15 = ~v12;
    uint64_t v16 = *(void *)(v10 + 48);
    while (1)
    {
      uint64_t v17 = 32 * v13;
      uint64_t v18 = v16 + 32 * v13;
      uint64_t v19 = *(void *)(v18 + 16);
      uint64_t v20 = *(unsigned int *)(v18 + 24);
      BOOL v21 = *(void *)v18 == a1 && *(void *)(v18 + 8) == a2;
      if (v21 || (sub_1005E3290()) && (v20 | (v20 << 32)) == v34)
      {
        uint64_t v22 = *(void *)(v19 + 16);
        if (v22 == *(void *)(a3 + 16))
        {
          if (!v22 || v19 == a3) {
            goto LABEL_25;
          }
          if (*(unsigned __int8 *)(v19 + 32) == *(unsigned __int8 *)(a3 + 32))
          {
            if (v22 == 1) {
              goto LABEL_25;
            }
            if (*(unsigned __int8 *)(v19 + 33) == *(unsigned __int8 *)(a3 + 33))
            {
              if (v22 == 2) {
                goto LABEL_25;
              }
              if (*(unsigned __int8 *)(v19 + 34) == *(unsigned __int8 *)(a3 + 34))
              {
                if (v22 == 3) {
                  goto LABEL_25;
                }
                if (*(unsigned __int8 *)(v19 + 35) == *(unsigned __int8 *)(a3 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_3:
      unint64_t v13 = (v13 + 1) & v15;
      if (((*(void *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_24;
      }
    }
    uint64_t v23 = (unsigned __int8 *)(v19 + 36);
    uint64_t v24 = v22 - 4;
    NSString v25 = (unsigned __int8 *)(a3 + 36);
    while (v24)
    {
      int v27 = *v23++;
      int v26 = v27;
      int v28 = *v25++;
      --v24;
      if (v26 != v28) {
        goto LABEL_3;
      }
    }
LABEL_25:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v31 = *v33;
    uint64_t v35 = *v33;
    uint64_t *v33 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1005A7920();
      uint64_t v17 = 32 * v13;
      uint64_t v31 = v35;
    }
    uint64_t v29 = *(void *)(*(void *)(v31 + 48) + v17);
    sub_1005AB6D8(v13);
    uint64_t *v33 = v35;
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_24:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v29;
}

uint64_t sub_1005AB2CC(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  sub_1005E33F0();
  Swift::UInt v7 = a2 | ((unint64_t)a2 << 32);
  sub_1005E3410(v7);
  Swift::Int v8 = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
    return 0;
  }
  uint64_t v11 = ~v9;
  while (1)
  {
    uint64_t v12 = *(void *)(v6 + 48) + 16 * v10;
    if ((*(unsigned int *)(v12 + 8) | ((unint64_t)*(unsigned int *)(v12 + 8) << 32)) == v7)
    {
      uint64_t v13 = *(void *)v12;
      uint64_t v14 = *(void *)(v13 + 16);
      if (v14 == *(void *)(a1 + 16))
      {
        if (v14) {
          BOOL v15 = v13 == a1;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15) {
          goto LABEL_22;
        }
        if (*(unsigned __int8 *)(v13 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v14 == 1) {
            goto LABEL_22;
          }
          if (*(unsigned __int8 *)(v13 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v14 == 2) {
              goto LABEL_22;
            }
            if (*(unsigned __int8 *)(v13 + 34) == *(unsigned __int8 *)(a1 + 34))
            {
              if (v14 == 3) {
                goto LABEL_22;
              }
              if (*(unsigned __int8 *)(v13 + 35) == *(unsigned __int8 *)(a1 + 35)) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_3:
    unint64_t v10 = (v10 + 1) & v11;
    if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v16 = (unsigned __int8 *)(v13 + 36);
  uint64_t v17 = v14 - 4;
  uint64_t v18 = (unsigned __int8 *)(a1 + 36);
  while (v17)
  {
    int v20 = *v16++;
    int v19 = v20;
    int v21 = *v18++;
    --v17;
    if (v19 != v21) {
      goto LABEL_3;
    }
  }
LABEL_22:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = *v3;
  uint64_t v26 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1005A7764();
    uint64_t v24 = v26;
  }
  uint64_t v22 = *(void *)(*(void *)(v24 + 48) + 16 * v10);
  sub_100094EDC(v10);
  *uint64_t v3 = v26;
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1005AB4B0(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100718A60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1005AB510(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1005E2AE0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1005E33F0();
        swift_bridgeObjectRetain();
        sub_1005E1DB0();
        Swift::Int v10 = sub_1005E3470();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1005AB6D8(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1005E2AE0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      uint64_t v23 = v4;
      do
      {
        uint64_t v11 = 32 * v6;
        uint64_t v12 = v3;
        uint64_t v13 = *(unsigned int *)(*(void *)(v3 + 48) + 32 * v6 + 24);
        unint64_t v14 = v9;
        sub_1005E33F0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1005E1DB0();
        sub_1005E3410(v13 | (v13 << 32));
        Swift::Int v15 = sub_1005E3470();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v9 = v14;
        Swift::Int v16 = v15 & v7;
        if (v2 >= (uint64_t)v14)
        {
          if (v16 < v14)
          {
            uint64_t v4 = v23;
            uint64_t v3 = v12;
          }
          else
          {
            uint64_t v4 = v23;
            uint64_t v3 = v12;
            if (v2 >= v16) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v4 = v23;
          uint64_t v3 = v12;
          if (v16 >= v9 || v2 >= v16)
          {
LABEL_12:
            uint64_t v17 = *(void *)(v3 + 48);
            uint64_t v18 = (_OWORD *)(v17 + 32 * v2);
            int v19 = (_OWORD *)(v17 + v11);
            if (32 * v2 != v11 || (int64_t v2 = v6, v18 >= v19 + 2))
            {
              long long v10 = v19[1];
              _OWORD *v18 = *v19;
              v18[1] = v10;
              int64_t v2 = v6;
            }
          }
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v22;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1005AB910(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100007494(&qword_10071A7B0, &qword_10071A7A8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10000566C(&qword_10071A7A8);
          uint64_t v12 = sub_10059B664(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    _s14descr1006B9AE9V7MailboxCMa();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1005ABB34(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100007494(&qword_10071A810, &qword_10071A808);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10000566C(&qword_10071A808);
          uint64_t v12 = sub_10059B6CC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1003C8730(0, (unint64_t *)&qword_100718A80);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1005ABD68(uint64_t a1)
{
  return sub_10059125C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1005ABD7C(uint64_t a1)
{
  return sub_100591D18(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1005ABD90(uint64_t a1)
{
  return sub_100591E80(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1005ABDA4(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1005ABDB8(uint64_t a1)
{
  return sub_1005922D4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_1005ABDCC()
{
  unint64_t result = qword_10071A7C0;
  if (!qword_10071A7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A7C0);
  }
  return result;
}

uint64_t sub_1005ABE20@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, BOOL *a4@<X8>)
{
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
      }
      else
      {
        sub_100008D24(a2, a3);
        uint64_t v10 = (char *)sub_1005E0550();
        if (!v10) {
          goto LABEL_8;
        }
        uint64_t v11 = sub_1005E0580();
        if (!__OFSUB__((int)a2, v11))
        {
          v10 += (int)a2 - v11;
LABEL_8:
          uint64_t v12 = sub_1005E0570();
          if (v12 >= v9) {
            size_t v13 = (a2 >> 32) - (int)a2;
          }
          else {
            size_t v13 = v12;
          }
          if (v7)
          {
            if (v10)
            {
              int v14 = memcmp(v7, v10, v13);
              __s1 = sub_1000094D4(a2, a3);
              BOOL v8 = v14 == 0;
              goto LABEL_26;
            }
LABEL_33:
            __break(1u);
LABEL_34:
            __break(1u);
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
            JUMPOUT(0x1005AC08CLL);
          }
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
      }
      __break(1u);
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1005E0550();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1005E0580();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_29;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_28;
      }
      uint64_t v21 = sub_1005E0570();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_34;
      }
      if (!v17) {
        goto LABEL_35;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_26;
    case 3uLL:
      if (!__s1) {
        goto LABEL_36;
      }
      BOOL v8 = 1;
      goto LABEL_26;
    default:
      uint64_t __s2 = a2;
      __int16 v25 = a3;
      char v26 = BYTE2(a3);
      char v27 = BYTE3(a3);
      char v28 = BYTE4(a3);
      char v29 = BYTE5(a3);
      if (!__s1)
      {
        __break(1u);
        goto LABEL_32;
      }
      __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
      BOOL v8 = __s1 == 0;
LABEL_26:
      *a4 = v8;
      return __s1;
  }
}

uint64_t sub_1005AC09C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1005AC134();
  uint64_t result = sub_1005E2280();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1005A4FA0(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_1005AC134()
{
  unint64_t result = qword_10071A7E0;
  if (!qword_10071A7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A7E0);
  }
  return result;
}

uint64_t sub_1005AC188(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_10000566C(&qword_10071A7D0);
  sub_100007494(&qword_10071A818, &qword_10071A7D0);
  uint64_t result = sub_1005E2280();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::UInt64 *)(a1 + 32);
    do
    {
      Swift::UInt64 v5 = *v4++;
      sub_1005A5938(&v6, v5, &qword_10071A7D8, &qword_10071A7D0);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1005AC24C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1005AC308();
  uint64_t result = sub_1005E2280();
  uint64_t v10 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned int *)(a1 + 56);
    do
    {
      Swift::Int v5 = *((void *)v4 - 3);
      uint64_t v6 = *((void *)v4 - 2);
      uint64_t v7 = *((void *)v4 - 1);
      unsigned int v8 = *v4;
      v4 += 8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1005A537C((uint64_t)v9, v5, v6, v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

unint64_t sub_1005AC308()
{
  unint64_t result = qword_10071A800;
  if (!qword_10071A800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A800);
  }
  return result;
}

ValueMetadata *_s13NoMailboxNameVMa()
{
  return &_s13NoMailboxNameVN;
}

id sub_1005AC36C(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v48 = a1;
  Swift::OpaquePointer v52 = a3;
  uint64_t v4 = sub_1005E0970();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  __chkstk_darwin(v4);
  id v49 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005E07F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v47 - v11;
  uint64_t v13 = sub_1005E0CB0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E0C30();
  id v17 = objc_allocWithZone((Class)CSSearchableItemAttributeSet);
  Class isa = sub_1005E0C50().super.isa;
  id v19 = [v17 initWithContentType:isa];

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v20 = type metadata accessor for PendingItem.AddMessage(0);
  sub_1005ACAA8((void *)(a2 + *(int *)(v20 + 24)));
  uint64_t v21 = (unsigned __int8 *)(a2 + *(int *)(v20 + 28));
  uint64_t v22 = 256;
  if (!v21[1]) {
    uint64_t v22 = 0;
  }
  uint64_t v23 = v22 | *v21;
  uint64_t v24 = 0x10000;
  if (!v21[2]) {
    uint64_t v24 = 0;
  }
  uint64_t v25 = 0x1000000;
  if (!v21[3]) {
    uint64_t v25 = 0;
  }
  uint64_t v26 = v23 | v24 | v25;
  char v27 = &_mh_execute_header;
  if (!v21[4]) {
    char v27 = 0;
  }
  uint64_t v28 = 0x10000000000;
  if (!v21[5]) {
    uint64_t v28 = 0;
  }
  sub_1005AD6B0(v26 | (unint64_t)v27 | v28 | ((unint64_t)v21[6] << 48) | ((unint64_t)v21[7] << 56));
  Class v29 = sub_1005E0910().super.isa;
  [v19 setMailDateReceived:v29];

  swift_bridgeObjectRetain();
  NSString v30 = sub_1005E1BD0();
  swift_bridgeObjectRelease();
  [v19 setAccountIdentifier:v30];

  id v31 = *(id *)(a2 + 16);
  id v32 = [v31 URIRepresentation];
  sub_1005E07C0();

  sub_1005E0700();
  Swift::UInt32 v33 = *(void (**)(char *, uint64_t))(v7 + 8);
  v33(v12, v6);
  sub_1005E0730();

  v33(v10, v6);
  NSString v34 = sub_1005E1BD0();
  swift_bridgeObjectRelease();
  if (qword_1007187E0 != -1) {
    swift_once();
  }
  [v19 setValue:v34 forCustomKey:qword_10071A828];

  id v35 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v53 = v48;
  sub_1005E3230();
  NSString v36 = sub_1005E1BD0();
  swift_bridgeObjectRelease();
  NSString v37 = sub_1005E1BD0();
  id v38 = [v35 initWithUniqueIdentifier:v36 domainIdentifier:v37 attributeSet:v19];

  id v39 = v38;
  NIOIMAPCore2::MailboxName v40 = v49;
  id v41 = v52;
  sub_1005E0900();
  Class v42 = sub_1005E0910().super.isa;
  Swift::OpaquePointer v43 = *(void (**)(char *, uint64_t))(v50 + 8);
  uint64_t v44 = v40;
  uint64_t v45 = v51;
  v43(v44, v51);
  [v39 setExpirationDate:v42];

  v43(v41, v45);
  sub_1005ADE74(a2);
  return v39;
}

id sub_1005AC8A0(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v7 = sub_1005E0970();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [objc_allocWithZone((Class)CSSearchableItemAttributeSet) init];
  sub_1005AD6B0(a2 & 0xFFFF010101010101);
  id v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v20[1] = a1;
  sub_1005E3230();
  NSString v13 = sub_1005E1BD0();
  swift_bridgeObjectRelease();
  NSString v14 = sub_1005E1BD0();
  id v15 = [v12 initWithUniqueIdentifier:v13 domainIdentifier:v14 attributeSet:v11];

  id v16 = v15;
  [v16 setIsUpdate:1];
  sub_1005E0900();
  Class isa = sub_1005E0910().super.isa;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v10, v7);
  [v16 setExpirationDate:isa];

  v18(a4, v7);
  return v16;
}

void sub_1005ACAA8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000566C(&qword_100719228);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for IndexableMessageInfo(0);
  if (*(void *)((char *)a1 + v7[9] + 8)) {
    NSString v8 = sub_1005E1BD0();
  }
  else {
    NSString v8 = 0;
  }
  [v2 setSubject:v8];

  sub_1005ADED0((uint64_t)a1 + v7[6], (uint64_t)v6);
  uint64_t v9 = sub_1005E0970();
  uint64_t v10 = *(void *)(v9 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
  {
    Class isa = sub_1005E0910().super.isa;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
  }
  [v2 setContentCreationDate:isa];

  id v12 = (char *)a1 + v7[7];
  uint64_t v13 = *((void *)v12 + 3);
  if (v13)
  {
    uint64_t v14 = *((void *)v12 + 10);
    uint64_t v15 = *((void *)v12 + 11);
    uint64_t v16 = *((void *)v12 + 6);
    uint64_t v17 = *((void *)v12 + 7);
    uint64_t v89 = *(void *)v12;
    long long v87 = *(_OWORD *)(v12 + 8);
    long long v90 = v87;
    uint64_t v91 = v13;
    long long v92 = *((_OWORD *)v12 + 2);
    uint64_t v93 = v16;
    uint64_t v94 = v17;
    long long v95 = *((_OWORD *)v12 + 4);
    uint64_t v96 = v14;
    uint64_t v97 = v15;
    sub_10000566C(&qword_100719088);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1005F6740;
    sub_1003C8730(0, &qword_10071A830);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(void *)(v18 + 32) = sub_1005B9FF0(&v89);
    char v88 = (void *)v18;
    sub_1005E20E0();
  }
  uint64_t v19 = sub_1003C8730(0, &qword_10071A830);
  Class v20 = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  [v2 setAuthors:v20];

  NIOIMAPCore2::MailboxName v82 = v7;
  uint64_t v21 = *(void *)((char *)a1 + v7[10]);
  uint64_t v22 = *(void *)(v21 + 16);
  long long v84 = a1;
  id v85 = v2;
  uint64_t v83 = v19;
  if (v22)
  {
    char v88 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1005E2DA0();
    *(void *)&long long v87 = CNContactEmailAddressesKey;
    uint64_t v81 = v21;
    uint64_t v23 = v21 + 88;
    long long v86 = xmmword_1005F6670;
    do
    {
      uint64_t v29 = *(void *)(v23 - 40);
      uint64_t v30 = *(void *)(v23 - 32);
      if (*(void *)(v23 - 48))
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        NSString v24 = sub_1005E1BD0();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        NSString v24 = 0;
      }
      id v25 = objc_allocWithZone((Class)CSPerson);
      sub_10000566C(&qword_100719D50);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = v86;
      *(void *)(v26 + 32) = v29;
      *(void *)(v26 + 40) = v30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Class v27 = sub_1005E20B0().super.isa;
      swift_bridgeObjectRelease();
      sub_1005E1C00();
      NSString v28 = sub_1005E1BD0();
      swift_bridgeObjectRelease();
      [v25 initWithDisplayName:v24 handles:v27 handleIdentifier:v28];

      sub_1005E2D60();
      sub_1005E2DD0();
      sub_1005E2DE0();
      sub_1005E2D70();
      v23 += 96;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    a1 = v84;
    uint64_t v2 = v85;
  }
  Class v31 = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  [v2 setPrimaryRecipients:v31];

  uint64_t v32 = a1[1];
  uint64_t v33 = *(void *)(v32 + 16);
  if (v33)
  {
    char v88 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1005E2DA0();
    *(void *)&long long v87 = CNContactEmailAddressesKey;
    uint64_t v81 = v32;
    uint64_t v34 = v32 + 88;
    long long v86 = xmmword_1005F6670;
    do
    {
      uint64_t v40 = *(void *)(v34 - 40);
      uint64_t v41 = *(void *)(v34 - 32);
      if (*(void *)(v34 - 48))
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        NSString v35 = sub_1005E1BD0();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        NSString v35 = 0;
      }
      id v36 = objc_allocWithZone((Class)CSPerson);
      sub_10000566C(&qword_100719D50);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = v86;
      *(void *)(v37 + 32) = v40;
      *(void *)(v37 + 40) = v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Class v38 = sub_1005E20B0().super.isa;
      swift_bridgeObjectRelease();
      sub_1005E1C00();
      NSString v39 = sub_1005E1BD0();
      swift_bridgeObjectRelease();
      [v36 initWithDisplayName:v35 handles:v38 handleIdentifier:v39];

      sub_1005E2D60();
      sub_1005E2DD0();
      sub_1005E2DE0();
      sub_1005E2D70();
      v34 += 96;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    a1 = v84;
    uint64_t v2 = v85;
  }
  Class v42 = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  [v2 setAdditionalRecipients:v42];

  uint64_t v43 = *a1;
  uint64_t v44 = *(void *)(*a1 + 16);
  if (v44)
  {
    char v88 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1005E2DA0();
    *(void *)&long long v87 = CNContactEmailAddressesKey;
    uint64_t v81 = v43;
    uint64_t v45 = v43 + 88;
    long long v86 = xmmword_1005F6670;
    do
    {
      uint64_t v51 = *(void *)(v45 - 40);
      uint64_t v52 = *(void *)(v45 - 32);
      if (*(void *)(v45 - 48))
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        NSString v46 = sub_1005E1BD0();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        NSString v46 = 0;
      }
      id v47 = objc_allocWithZone((Class)CSPerson);
      sub_10000566C(&qword_100719D50);
      uint64_t v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = v86;
      *(void *)(v48 + 32) = v51;
      *(void *)(v48 + 40) = v52;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Class v49 = sub_1005E20B0().super.isa;
      swift_bridgeObjectRelease();
      sub_1005E1C00();
      NSString v50 = sub_1005E1BD0();
      swift_bridgeObjectRelease();
      [v47 initWithDisplayName:v46 handles:v49 handleIdentifier:v50];

      sub_1005E2D60();
      sub_1005E2DD0();
      sub_1005E2DE0();
      sub_1005E2D70();
      v45 += 96;
      --v44;
    }
    while (v44);
    swift_bridgeObjectRelease();
    a1 = v84;
    uint64_t v2 = v85;
  }
  Class v53 = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  [v2 setHiddenAdditionalRecipients:v53];

  Swift::UInt32 v54 = v82;
  NSString v55 = (unsigned __int8 *)a1 + v82[11];
  if (v55[1]) {
    id v56 = 0;
  }
  else {
    id v56 = [objc_allocWithZone((Class)NSNumber) initWithInteger:*v55];
  }
  [v2 setMailPriority:v56];

  uint64_t v57 = *(void *)((char *)a1 + v54[8] + 8);
  if (v57) {
    NSString v58 = sub_1005E1BD0();
  }
  else {
    NSString v58 = 0;
  }
  [v2 setMailMessageID:v58];

  id v59 = (char *)a1 + v54[15];
  int v60 = v59[16];
  if (v60 != 255)
  {
    unint64_t v61 = *(void *)v59;
    unint64_t v62 = *((void *)v59 + 1);
    if (v60)
    {
      MailboxPriorityInfo.mailboxPriorityOrder.getter();
      uint64_t v65 = sub_100578EF8(v61, v62);
      unint64_t v67 = v66;
      Swift::UInt32 v63 = sub_1005E0890().super.isa;
      sub_1000094D4(v65, v67);
      NSString v64 = &selRef_setHTMLContentData_;
    }
    else
    {
      Swift::UInt32 v63 = sub_1005E1BD0();
      NSString v64 = &selRef_setTextContent_;
    }
    objc_msgSend(v2, *v64, v63);
  }
  sub_1003C8730(0, (unint64_t *)&qword_1007195E8);
  Class v68 = sub_1005E2830(0).super.super.isa;
  [v2 setPartiallyDownloaded:v68];

  id v69 = [objc_allocWithZone((Class)NSNumber) initWithInteger:1];
  [v2 setDataOwnerType:v69];

  id v70 = [v2 accountIdentifier];
  [v2 setAccountIdentifier:v70];

  id v71 = [v2 accountType];
  [v2 setAccountType:v71];

  sub_1005AD850(*(void *)((char *)a1 + v54[16]));
  if (v57) {
    NSString v72 = sub_1005E1BD0();
  }
  else {
    NSString v72 = 0;
  }
  NSString v73 = sub_1005E1BD0();
  [v2 setAttribute:v72 forKey:v73];
  swift_unknownObjectRelease();

  Class v74 = sub_1005E2240().super.super.isa;
  NSString v75 = sub_1005E1BD0();
  [v2 setAttribute:v74 forKey:v75];

  Class v76 = sub_1005E2240().super.super.isa;
  NSString v77 = sub_1005E1BD0();
  [v2 setAttribute:v76 forKey:v77];

  Class v78 = sub_1005E2240().super.super.isa;
  NSString v79 = sub_1005E1BD0();
  [v2 setAttribute:v78 forKey:v79];
}

void sub_1005AD6B0(unint64_t a1)
{
  unint64_t v2 = HIBYTE(a1);
  uint64_t v3 = (a1 >> 16) & 1;
  id v4 = [objc_allocWithZone((Class)NSNumber) initWithBool:(a1 & 1) == 0];
  [v1 setMailRead:v4];

  id v5 = [objc_allocWithZone((Class)NSNumber) initWithBool:v2 != 0];
  [v1 setMailFlagged:v5];

  id v6 = [objc_allocWithZone((Class)NSNumber) initWithBool:v3];
  [v1 setMailRepliedTo:v6];

  uint64_t v7 = 0;
  switch(v2)
  {
    case 1uLL:
      goto LABEL_8;
    case 2uLL:
      uint64_t v7 = 1;
      goto LABEL_8;
    case 3uLL:
      uint64_t v7 = 2;
      goto LABEL_8;
    case 4uLL:
      uint64_t v7 = 3;
      goto LABEL_8;
    case 5uLL:
      uint64_t v7 = 4;
      goto LABEL_8;
    case 6uLL:
      uint64_t v7 = 5;
      goto LABEL_8;
    case 7uLL:
      uint64_t v7 = 6;
LABEL_8:
      uint64_t v7 = (uint64_t)[objc_allocWithZone((Class)NSNumber) initWithInteger:v7];
      break;
    default:
      break;
  }
  id v8 = (id)v7;
  objc_msgSend(v1, "setMailFlagColor:");
}

void sub_1005AD850(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_10000566C(&qword_10071A838);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0CB0();
  __chkstk_darwin(v7);
  Swift::UInt32 v54 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v52 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    Class v53 = v6;
    uint64_t v51 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    Class v49 = v2;
    NSString v50 = (void (**)(char *, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    v48[1] = a1;
    id v11 = (unint64_t *)(a1 + 80);
    id v12 = _swiftEmptyArrayStorage;
    uint64_t v13 = _swiftEmptyArrayStorage;
    NSString v55 = _swiftEmptyArrayStorage;
    uint64_t v14 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v15 = v7;
      sub_1003AE650((uint64_t)(v11 - 6), (uint64_t)v58);
      if (*v11) {
        uint64_t v16 = *(v11 - 1);
      }
      else {
        uint64_t v16 = 0;
      }
      if (*v11) {
        unint64_t v17 = *v11;
      }
      else {
        unint64_t v17 = 0xE000000000000000;
      }
      unint64_t v57 = v17;
      sub_1005ADF38((uint64_t)v58);
      swift_bridgeObjectRetain();
      uint64_t v18 = String.init(_:)(v58);
      uint64_t v20 = v19;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      id v56 = v12;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v14 = sub_100571D04(0, v14[2] + 1, 1, v14);
      }
      unint64_t v23 = v14[2];
      unint64_t v22 = v14[3];
      if (v23 >= v22 >> 1) {
        uint64_t v14 = sub_100571D04((void *)(v22 > 1), v23 + 1, 1, v14);
      }
      void v14[2] = v23 + 1;
      NSString v24 = &v14[2 * v23];
      v24[4] = v18;
      v24[5] = v20;
      id v25 = v53;
      static MediaType.uniformType(filename:mimeType:)(v18, v20, v53);
      swift_bridgeObjectRelease();
      uint64_t v7 = v15;
      if ((*v52)(v25, 1, v15) == 1)
      {
        sub_1005AE038((uint64_t)v25);
      }
      else
      {
        (*v51)(v54, v25, v15);
        uint64_t v26 = sub_1005E0C20();
        uint64_t v28 = v27;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v29 = v55;
        }
        else {
          uint64_t v29 = sub_100571D04(0, v55[2] + 1, 1, v55);
        }
        unint64_t v31 = v29[2];
        unint64_t v30 = v29[3];
        if (v31 >= v30 >> 1) {
          uint64_t v29 = sub_100571D04((void *)(v30 > 1), v31 + 1, 1, v29);
        }
        void v29[2] = v31 + 1;
        NSString v55 = v29;
        uint64_t v32 = &v29[2 * v31];
        v32[4] = v26;
        v32[5] = v28;
        uint64_t v7 = v15;
        (*v50)(v54, v15);
      }
      id v12 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_100571D04(0, v13[2] + 1, 1, v13);
      }
      unint64_t v34 = v13[2];
      unint64_t v33 = v13[3];
      if (v34 >= v33 >> 1) {
        uint64_t v13 = sub_100571D04((void *)(v33 > 1), v34 + 1, 1, v13);
      }
      _OWORD v13[2] = v34 + 1;
      NSString v35 = &v13[2 * v34];
      unint64_t v36 = v57;
      v35[4] = v16;
      v35[5] = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v12 = sub_100571D04(0, v12[2] + 1, 1, v12);
      }
      unint64_t v38 = v12[2];
      unint64_t v37 = v12[3];
      if (v38 >= v37 >> 1) {
        id v12 = sub_100571D04((void *)(v37 > 1), v38 + 1, 1, v12);
      }
      v11 += 7;
      uint64_t v12[2] = v38 + 1;
      NSString v39 = &v12[2 * v38];
      v39[4] = 0;
      v39[5] = 0xE000000000000000;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    unint64_t v2 = v49;
  }
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  NSString v41 = sub_1005E1BD0();
  [v2 setAttribute:isa forKey:v41];

  Class v42 = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  NSString v43 = sub_1005E1BD0();
  [v2 setAttribute:v42 forKey:v43];

  Class v44 = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  NSString v45 = sub_1005E1BD0();
  [v2 setAttribute:v44 forKey:v45];

  Class v46 = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  NSString v47 = sub_1005E1BD0();
  [v2 setAttribute:v46 forKey:v47];
}

void sub_1005ADDEC()
{
  id v0 = objc_allocWithZone((Class)CSCustomAttributeKey);
  NSString v1 = sub_1005E1BD0();
  id v2 = [v0 initWithKeyName:v1 searchable:1 searchableByDefault:0 unique:1 multiValued:0];

  if (v2) {
    qword_10071A828 = (uint64_t)v2;
  }
  else {
    __break(1u);
  }
}

uint64_t sub_1005ADE74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PendingItem.AddMessage(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005ADED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100719228);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005ADF38(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005ADF70(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
      unint64_t result = sub_1003AE774(result, a2);
      break;
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      goto LABEL_2;
    case 10:
      swift_bridgeObjectRetain();
LABEL_2:
      unint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1005AE038(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_10071A838);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005AE098(uint64_t a1)
{
  uint64_t v40 = sub_1005E07F0();
  uint64_t v2 = *(void *)(v40 - 8);
  __chkstk_darwin();
  NSString v39 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v38 = (char *)v35 - v4;
  int64_t v5 = *(void *)(a1 + 16);
  id v6 = _swiftEmptyArrayStorage;
  if (!v5) {
    return (uint64_t)v6;
  }
  NSString v45 = _swiftEmptyArrayStorage;
  sub_100590BF4(0, v5, 0);
  uint64_t result = sub_1000D38CC(a1);
  uint64_t v9 = result;
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  int v11 = v10 & 1;
  v35[1] = v2 + 8;
  id v12 = v39;
  uint64_t v13 = (void (**)(char *, uint64_t))(v2 + 8);
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(v37 + (((unint64_t)v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      goto LABEL_17;
    }
    if (*(_DWORD *)(a1 + 36) != v8) {
      goto LABEL_18;
    }
    int v41 = v11;
    uint64_t v42 = v8;
    uint64_t v14 = qword_1007187E0;
    id v15 = *(id *)(*(void *)(a1 + 48) + 8 * v9);
    if (v14 != -1) {
      swift_once();
    }
    id v16 = [(id)qword_10071A828 keyName];
    uint64_t v17 = sub_1005E1C00();
    uint64_t v19 = v18;

    uint64_t v43 = v17;
    uint64_t v44 = v19;
    v46._countAndFlagsBits = 10045;
    v46._object = (void *)0xE200000000000000;
    sub_1005E1E30(v46);
    id v20 = v15;
    id v21 = [v20 URIRepresentation];
    unint64_t v22 = v38;
    sub_1005E07C0();

    sub_1005E0700();
    unint64_t v23 = *v13;
    NSString v24 = v22;
    uint64_t v25 = v40;
    (*v13)(v24, v40);
    uint64_t v26 = sub_1005E0730();
    uint64_t v28 = v27;

    v23(v12, v25);
    v47._countAndFlagsBits = v26;
    v47._object = v28;
    sub_1005E1E30(v47);
    swift_bridgeObjectRelease();
    v48._countAndFlagsBits = 39;
    v48._object = (void *)0xE100000000000000;
    sub_1005E1E30(v48);

    uint64_t v29 = v43;
    uint64_t v30 = v44;
    id v6 = v45;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100590BF4(0, v6[2] + 1, 1);
      id v6 = v45;
    }
    unint64_t v32 = v6[2];
    unint64_t v31 = v6[3];
    a1 = v36;
    if (v32 >= v31 >> 1)
    {
      sub_100590BF4(v31 > 1, v32 + 1, 1);
      id v6 = v45;
    }
    uint64_t v6[2] = v32 + 1;
    unint64_t v33 = &v6[2 * v32];
    v33[4] = v29;
    v33[5] = v30;
    uint64_t result = sub_1000D3970(v9, v42, v41 & 1, a1);
    uint64_t v9 = result;
    int v11 = v34 & 1;
    if (!--v5)
    {
      sub_100060FF0(result, v8, v11);
      return (uint64_t)v6;
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1005AE3F4()
{
  uint64_t v0 = sub_1005E0ED0();
  sub_10034E5B4(v0, qword_10071A840);
  sub_1003461B0(v0, (uint64_t)qword_10071A840);
  return sub_1005E0EC0();
}

uint64_t sub_1005AE46C()
{
  uint64_t v1 = sub_1005E0F90();
  __chkstk_darwin(v1 - 8);
  id v20 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1005E2600();
  uint64_t v3 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  int64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005E25F0();
  __chkstk_darwin(v6);
  uint64_t v7 = sub_1005E16C0();
  __chkstk_darwin(v7 - 8);
  *(void *)(v0 + 24) = 0;
  v18[1] = sub_1005B2480();
  sub_1005E16A0();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1005B2518(&qword_100718A20, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000566C(&qword_1007197D0);
  sub_100057E98(&qword_100718A28, &qword_1007197D0);
  sub_1005E2AD0();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v19);
  uint64_t v8 = (void *)sub_1005E2620();
  *(void *)(v0 + 16) = v8;
  type metadata accessor for Indexer();
  swift_allocObject();
  id v9 = v8;
  char v10 = sub_100563CE4(v9);
  SearchIndexerXPC.serviceName.unsafeMutableAddressor();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  *(void *)(v11 + 24) = v10;
  id v12 = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1005E0F80();
  sub_1005E0FC0();
  swift_allocObject();
  uint64_t v13 = aBlock[7];
  uint64_t v14 = sub_1005E0FB0();
  if (v13)
  {
    swift_release();
    swift_release();
  }
  else
  {
    *(void *)(v0 + 24) = v14;
    swift_release();
    id v15 = (void *)v10[4];
    aBlock[4] = sub_1005B2508;
    aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10046A1E4;
    aBlock[3] = &unk_1006FEE40;
    id v16 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v15 performBlock:v16];
    _Block_release(v16);

    swift_release();
  }
  return v0;
}

uint64_t sub_1005AE8A4()
{
  return sub_1005E0FA0();
}

void *sub_1005AE944@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  type metadata accessor for Service.SessionHandler();
  swift_allocObject();
  swift_retain();
  id v8 = a2;
  swift_retain();
  uint64_t result = sub_1005AEA9C(a1, v8, a3);
  *a4 = result;
  return result;
}

uint64_t Service.deinit()
{
  swift_release();
  return v0;
}

uint64_t Service.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t static Service.main()()
{
  swift_initStackObject();
  uint64_t result = sub_1005AE46C();
  if (!v0) {
    dispatch_main();
  }
  return result;
}

uint64_t type metadata accessor for Service()
{
  return self;
}

void *sub_1005AEA9C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = (void *)v3;
  *(unsigned char *)(v3 + 48) = 0;
  if (qword_1007187F0 != -1) {
    swift_once();
  }
  id v8 = (uint64_t *)(qword_10071A858 + 16);
  id v9 = (os_unfair_lock_s *)(qword_10071A858 + 24);
  swift_retain();
  os_unfair_lock_lock(v9);
  sub_1005AF430(v8, &v18);
  os_unfair_lock_unlock(v9);
  uint64_t v10 = v18;
  swift_release();
  long long v4[2] = v10;
  v4[3] = a1;
  void v4[4] = a2;
  v4[5] = a3;
  swift_allocObject();
  swift_weakInit();
  uint64_t v11 = *(void *)(*(void *)(a3 + 80) + 200);
  __chkstk_darwin(a1);
  swift_retain();
  id v12 = a2;
  swift_retain();
  swift_retain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 32));
  sub_1005B25A0((void *)(v11 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 32));
  swift_release();
  swift_release_n();
  if (qword_1007187E8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1005E0ED0();
  sub_1003461B0(v13, (uint64_t)qword_10071A840);
  swift_retain();
  uint64_t v14 = sub_1005E0EB0();
  os_log_type_t v15 = sub_1005E25C0();
  if (os_log_type_enabled(v14, v15))
  {
    id v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v16 = 134217984;
    uint64_t v18 = v4[2];
    sub_1005E2960();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[%llu] New session.", v16, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  swift_release();

  swift_release();
  return v4;
}

uint64_t sub_1005AED5C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1005AEDD8();
    return swift_release();
  }
  return result;
}

void sub_1005AEDD8()
{
  XPCSession.sendToMaild(_:)();
  if (qword_1007187E8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1005E0ED0();
  sub_1003461B0(v0, (uint64_t)qword_10071A840);
  swift_retain();
  uint64_t v1 = sub_1005E0EB0();
  os_log_type_t v2 = sub_1005E25C0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 134217984;
    sub_1005E2960();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[%llu] Sending indexing stats to maild.", v3, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
}

uint64_t sub_1005AF10C()
{
  uint64_t v1 = v0;
  if (qword_1007187E8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1005E0ED0();
  sub_1003461B0(v2, (uint64_t)qword_10071A840);
  uint64_t v3 = sub_1005E0EB0();
  os_log_type_t v4 = sub_1005E25C0();
  if (os_log_type_enabled(v3, v4))
  {
    int64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)int64_t v5 = 134217984;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[%llu] Session deinit.", v5, 0xCu);
    swift_slowDealloc();
  }

  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1005AF240()
{
  sub_1005AF10C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Service.SessionHandler()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for Service.SessionHandler.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005AF360);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Service.SessionHandler.State()
{
  return &type metadata for Service.SessionHandler.State;
}

unint64_t sub_1005AF39C()
{
  unint64_t result = qword_10071A9C8;
  if (!qword_10071A9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A9C8);
  }
  return result;
}

uint64_t sub_1005AF3F0()
{
  sub_10000566C(&qword_10071A9F8);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = 1;
  qword_10071A858 = result;
  return result;
}

uint64_t *sub_1005AF430@<X0>(uint64_t *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = *result;
  *a2 = *result;
  *uint64_t result = v2 + 1;
  return result;
}

double sub_1005AF444@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v4 = sub_1005E1010();
  uint64_t v72 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v72 + 64);
  __chkstk_darwin();
  unsigned int v6 = &v61[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  id v70 = &v61[-v7];
  __chkstk_darwin();
  id v9 = &v61[-v8];
  uint64_t v10 = sub_1005E1850();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = &v61[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v71 = v2;
  uint64_t v14 = *(void **)(v2 + 32);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  LOBYTE(v14) = sub_1005E1860();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    sub_1005B1CEC();
    sub_1005E1000();
    unint64_t v22 = v75;
    uint64_t v23 = v78;
    int v24 = v79;
    int v25 = v79 >> 6;
    if (!v25)
    {
      uint64_t v67 = v76;
      uint64_t v68 = v77;
      uint64_t v65 = v77 & 1;
      sub_1005B1F04((uint64_t)v75, v76, v77 & 1);
      if (qword_1007187E8 != -1) {
        swift_once();
      }
      uint64_t v69 = v23;
      uint64_t v34 = sub_1005E0ED0();
      sub_1003461B0(v34, (uint64_t)qword_10071A840);
      uint64_t v35 = v72;
      NSString v64 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v72 + 16);
      v64(v9, a1, v4);
      uint64_t v36 = sub_1005E0EB0();
      os_log_type_t v37 = sub_1005E25C0();
      int v38 = v37;
      if (os_log_type_enabled(v36, v37))
      {
        NSString v39 = (uint8_t *)swift_slowAlloc();
        int v62 = v38;
        uint64_t v40 = v39;
        int v66 = v24;
        *(_DWORD *)NSString v39 = 67109120;
        Swift::UInt32 v63 = v36;
        int v41 = sub_1005E0FE0() & 1;
        (*(void (**)(unsigned char *, uint64_t))(v72 + 8))(v9, v4);
        LODWORD(v75) = v41;
        uint64_t v35 = v72;
        uint64_t v36 = v63;
        LOBYTE(v24) = v66;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v62, "Download request. Expects reply: %{BOOL}d", v40, 8u);
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v9, v4);
      }

      Class v53 = v70;
      v64(v70, a1, v4);
      uint64_t v54 = v35;
      unint64_t v55 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      uint64_t v56 = swift_allocObject();
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v54 + 32))(v56 + v55, v53, v4);
      uint64_t v52 = v67;
      sub_1005AFE44((unint64_t)v22, v67, v65, (uint64_t (*)(uint64_t))sub_1005B1FA8, v56);
      uint64_t v51 = v22;
      goto LABEL_26;
    }
    if (v25 == 1)
    {
      v79 &= 0x3Fu;
      uint64_t v67 = v76;
      uint64_t v68 = v77;
      sub_1005B1DEC(v75, v76, v77, v78, v24 & 0x3F);
      if (qword_1007187E8 != -1) {
        swift_once();
      }
      uint64_t v69 = v23;
      uint64_t v26 = sub_1005E0ED0();
      sub_1003461B0(v26, (uint64_t)qword_10071A840);
      uint64_t v27 = v72;
      uint64_t v28 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v72 + 16);
      v28(v6, a1, v4);
      uint64_t v29 = sub_1005E0EB0();
      os_log_type_t v30 = sub_1005E25C0();
      LODWORD(v65) = v30;
      if (os_log_type_enabled(v29, v30))
      {
        unint64_t v31 = (uint8_t *)swift_slowAlloc();
        NSString v64 = v28;
        unint64_t v32 = v31;
        int v66 = v24;
        *(_DWORD *)unint64_t v31 = 67109120;
        Swift::UInt32 v63 = v29;
        int v33 = sub_1005E0FE0() & 1;
        (*(void (**)(unsigned char *, uint64_t))(v72 + 8))(v6, v4);
        int v74 = v33;
        uint64_t v27 = v72;
        uint64_t v29 = v63;
        LOBYTE(v24) = v66;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v65, "Search request. Expects reply: %{BOOL}d", v32, 8u);
        uint64_t v28 = v64;
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v6, v4);
      }

      Swift::String v47 = v70;
      v28(v70, a1, v4);
      uint64_t v48 = v27;
      unint64_t v49 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      uint64_t v50 = swift_allocObject();
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v48 + 32))(v50 + v49, v47, v4);
      sub_1005B051C((uint64_t)&v75, (uint64_t)sub_1005B1E5C, v50);
      uint64_t v51 = v22;
      uint64_t v52 = v67;
LABEL_26:
      uint64_t v58 = v68;
      uint64_t v57 = v69;
      sub_1005B1D40(v51, v52, v68, v69, v24);
      swift_release();
      sub_1005B1D40(v22, v52, v58, v57, v24);
      goto LABEL_27;
    }
    uint64_t v42 = v76;
    uint64_t v43 = v77;
    if (qword_1007187E8 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_1005E0ED0();
    sub_1003461B0(v44, (uint64_t)qword_10071A840);
    uint64_t v17 = sub_1005E0EB0();
    os_log_type_t v45 = sub_1005E25A0();
    if (os_log_type_enabled(v17, v45))
    {
      Swift::String v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v45, "Received invalid 'credentials' message from maild.", v46, 2u);
      swift_slowDealloc();
    }
    sub_1005B1D40(v22, v42, v43, v23, v24);
    goto LABEL_21;
  }
  __break(1u);
  swift_once();
  uint64_t v16 = sub_1005E0ED0();
  sub_1003461B0(v16, (uint64_t)qword_10071A840);
  swift_errorRetain();
  uint64_t v17 = sub_1005E0EB0();
  os_log_type_t v18 = sub_1005E25A0();
  if (!os_log_type_enabled(v17, v18))
  {
    swift_errorRelease();
    swift_errorRelease();
LABEL_21:

    goto LABEL_27;
  }
  uint64_t v19 = (uint8_t *)swift_slowAlloc();
  id v20 = (void *)swift_slowAlloc();
  *(_DWORD *)uint64_t v19 = 138412290;
  id v21 = (void *)sub_1005E06E0();
  NSString v75 = v21;
  sub_1005E2960();
  *id v20 = v21;
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v17, v18, "Received invalid message from maild: %@", v19, 0xCu);
  sub_10000566C(&qword_100718A08);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  swift_errorRelease();
LABEL_27:
  id v59 = (_OWORD *)v73;
  *(void *)(v73 + 32) = 0;
  double result = 0.0;
  *id v59 = 0u;
  v59[1] = 0u;
  return result;
}

uint64_t sub_1005AFD28()
{
  if (qword_1007187E8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1005E0ED0();
  sub_1003461B0(v0, (uint64_t)qword_10071A840);
  uint64_t v1 = sub_1005E0EB0();
  os_log_type_t v2 = sub_1005E25C0();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Sending download task reply.", v3, 2u);
    swift_slowDealloc();
  }

  sub_1005B2284();
  return sub_1005E0FF0();
}

uint64_t sub_1005AFE44(unint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v40 = a4;
  uint64_t v11 = sub_1005E1850();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (uint64_t *)((char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v15 = *(void **)(v6 + 32);
  *uint64_t v14 = v15;
  uint64_t v16 = *(void (**)(void))(v12 + 104);
  unsigned int v43 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v42 = (void (*)(void *, void, uint64_t))v16;
  v16(v14);
  id v17 = v15;
  LOBYTE(v15) = sub_1005E1860();
  int v41 = *(void (**)(void *, uint64_t))(v12 + 8);
  v41(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (a3)
  {
    uint64_t v22 = a1;
    if (*(unsigned char *)(v6 + 48))
    {
      if (qword_1007187E8 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_1005E0ED0();
      sub_1003461B0(v23, (uint64_t)qword_10071A840);
      swift_retain();
      int v24 = sub_1005E0EB0();
      os_log_type_t v25 = sub_1005E25C0();
      a1 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 134218240;
        unint64_t v44 = *(void *)(v6 + 16);
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v26 + 12) = 2048;
        unint64_t v44 = v22;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)a1, "[%llu] {%ld} Stopping download & index.", (uint8_t *)v26, 0x16u);
        swift_slowDealloc();
      }
      else
      {

        swift_release();
      }
      *(unsigned char *)(v6 + 48) = 0;
    }
    else
    {
      if (qword_1007187E8 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_1005E0ED0();
      sub_1003461B0(v31, (uint64_t)qword_10071A840);
      swift_retain();
      unint64_t v32 = sub_1005E0EB0();
      os_log_type_t v33 = sub_1005E25A0();
      a1 = v33;
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = swift_slowAlloc();
        *(_DWORD *)uint64_t v34 = 134218240;
        unint64_t v44 = *(void *)(v6 + 16);
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v34 + 12) = 2048;
        unint64_t v44 = v22;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)a1, "[%llu] {%ld} Stopping download & index, but not in downloading state.", (uint8_t *)v34, 0x16u);
        swift_slowDealloc();
      }
      else
      {

        swift_release();
      }
    }
    uint64_t v6 = *(void *)(v6 + 40);
    os_log_type_t v37 = *(void **)(v6 + 16);
    *uint64_t v14 = v37;
    v42(v14, v43, v11);
    id v38 = v37;
    LOBYTE(v37) = sub_1005E1860();
    v41(v14, v11);
    if (v37) {
      return sub_100543228(v22);
    }
    goto LABEL_30;
  }
  if (*(unsigned char *)(v6 + 48))
  {
    if (qword_1007187E8 == -1)
    {
LABEL_5:
      uint64_t v18 = sub_1005E0ED0();
      sub_1003461B0(v18, (uint64_t)qword_10071A840);
      swift_retain();
      uint64_t v19 = sub_1005E0EB0();
      os_log_type_t v20 = sub_1005E25C0();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = 134218240;
        unint64_t v44 = *(void *)(v6 + 16);
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v21 + 12) = 2048;
        unint64_t v44 = a1;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "[%llu] {%ld} Trying to start download & index, but already running.", (uint8_t *)v21, 0x16u);
        swift_slowDealloc();
      }
      else
      {

        swift_release();
      }
      return v40(4);
    }
LABEL_31:
    swift_once();
    goto LABEL_5;
  }
  if (qword_1007187E8 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_1005E0ED0();
  sub_1003461B0(v27, (uint64_t)qword_10071A840);
  swift_retain();
  uint64_t v28 = sub_1005E0EB0();
  os_log_type_t v29 = sub_1005E25C0();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 134218240;
    unint64_t v44 = *(void *)(v6 + 16);
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v30 + 12) = 2048;
    unint64_t v44 = a1;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "[%llu] {%ld} Starting download & index.", (uint8_t *)v30, 0x16u);
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  *(unsigned char *)(v6 + 48) = 1;
  uint64_t v36 = (void *)swift_allocObject();
  void v36[2] = v6;
  v36[3] = a1;
  v36[4] = v40;
  v36[5] = a5;
  swift_retain_n();
  swift_retain();
  sub_1005648C4(a1, a2, (uint64_t)sub_1005B2018, v6, (uint64_t)sub_1005B205C, (uint64_t)v36);
  swift_release();
  return swift_release();
}

uint64_t sub_1005B051C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1005E1850();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(v3 + 32);
  *uint64_t v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v12 = v11;
  LOBYTE(v11) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    sub_1005B22D8(a1, (uint64_t)&v42);
    if (v46)
    {
      if (v46 == 1)
      {
        uint64_t v14 = v42;
        uint64_t v15 = v43;
        id v17 = v44;
        uint64_t v16 = v45;
        uint64_t v18 = *(void *)(v3 + 40);
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = a2;
        *(void *)(v19 + 24) = a3;
        os_log_type_t v20 = *(void **)(v18 + 32);
        uint64_t v21 = (void *)swift_allocObject();
        _OWORD v21[2] = v20;
        uint64_t v21[3] = v14;
        void v21[4] = v15;
        v21[5] = v17;
        v21[6] = sub_1005B2334;
        v21[7] = v19;
        v21[8] = v16;
        uint64_t v40 = sub_1005B23C0;
        int v41 = v21;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v37 = 1107296256;
        id v38 = sub_10046A1E4;
        uint64_t v39 = &unk_1006FED50;
        uint64_t v22 = _Block_copy(&aBlock);
        swift_retain();
        id v23 = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_release();
        [v23 performBlock:v22];
        int v24 = v22;
      }
      else
      {
        uint64_t v30 = *(void *)(v3 + 40);
        uint64_t v31 = swift_allocObject();
        *(void *)(v31 + 16) = a2;
        *(void *)(v31 + 24) = a3;
        unint64_t v32 = *(void **)(v30 + 32);
        os_log_type_t v33 = (void *)swift_allocObject();
        _OWORD v33[2] = sub_1005B23D4;
        uint64_t v33[3] = v31;
        v33[4] = v30;
        uint64_t v40 = sub_1005B2440;
        int v41 = v33;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v37 = 1107296256;
        id v38 = sub_10046A1E4;
        uint64_t v39 = &unk_1006FEDC8;
        uint64_t v34 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_release();
        [v32 performBlock:v34];
        int v24 = v34;
      }
      _Block_release(v24);
    }
    else
    {
      uint64_t v26 = v42;
      uint64_t v25 = v43;
      uint64_t v27 = v44;
      unint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = a2;
      *(void *)(v28 + 24) = a3;
      id v29 = v26;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_100585874(v29, v25, v27, (uint64_t)sub_1005B244C, v28);
      swift_bridgeObjectRelease();

      swift_release();
    }
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1005B0904(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005E0FD0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = sub_1005E1850();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (uint64_t *)((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void **)(v2 + 32);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  LOBYTE(v14) = sub_1005E1860();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    uint64_t v26 = v7;
    if (qword_1007187E8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v16 = sub_1005E0ED0();
  sub_1003461B0(v16, (uint64_t)qword_10071A840);
  id v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v17(v9, a1, v4);
  swift_retain();
  uint64_t v18 = sub_1005E0EB0();
  os_log_type_t v19 = sub_1005E25A0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 134218242;
    uint64_t v27 = *(void *)(v2 + 16);
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v20 + 12) = 2112;
    uint64_t v24 = v20 + 14;
    uint64_t v21 = v26;
    v17(v26, (uint64_t)v9, v4);
    sub_1005B2518(&qword_10071A9D0, (void (*)(uint64_t))&type metadata accessor for XPCRichError);
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v22, v21, v4);
    uint64_t v23 = sub_1005E06E0();
    swift_errorRelease();
    uint64_t v27 = v23;
    sub_1005E2960();
    *uint64_t v25 = v23;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "[%llu] Cancelled: %@", (uint8_t *)v20, 0x16u);
    sub_10000566C(&qword_100718A08);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  }
}

double sub_1005B0D20@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005AF444(a1, a2);
}

void sub_1005B0D44(uint64_t a1)
{
}

uint64_t sub_1005B0D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v12[6] = *(void *)(sub_1005E1680() - 8);
  __chkstk_darwin();
  unint64_t v12[7] = sub_1005E16C0();
  __chkstk_darwin();
  v12[5] = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = v4;
  v10[3] = a3;
  _DWORD v12[4] = a3;
  v10[4] = a4;
  swift_retain();
  swift_retain();
  XPCSession.sendToMaild(_:replyHandler:)(a1, a2, 0, 128, (uint64_t)sub_1005B20A8, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1005B1280(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  switch(a1)
  {
    case 1:
      if (qword_1007187E8 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1005E0ED0();
      sub_1003461B0(v10, (uint64_t)qword_10071A840);
      swift_retain();
      uint64_t v11 = sub_1005E0EB0();
      os_log_type_t v12 = sub_1005E25C0();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 134218240;
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v13 + 12) = 2048;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "[%llu] {%ld} Download & index is currently unavailable.", (uint8_t *)v13, 0x16u);
        swift_slowDealloc();
      }
      else
      {

        swift_release();
      }
      uint64_t v9 = 2;
      break;
    case 2:
      if (qword_1007187E8 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_1005E0ED0();
      sub_1003461B0(v14, (uint64_t)qword_10071A840);
      swift_retain();
      id v15 = sub_1005E0EB0();
      os_log_type_t v16 = sub_1005E25C0();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 134218240;
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v17 + 12) = 2048;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "[%llu] {%ld} Download & index did not complete.", (uint8_t *)v17, 0x16u);
        swift_slowDealloc();
      }
      else
      {

        swift_release();
      }
      uint64_t v9 = 1;
      break;
    case 3:
      if (qword_1007187E8 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_1005E0ED0();
      sub_1003461B0(v18, (uint64_t)qword_10071A840);
      swift_retain();
      os_log_type_t v19 = sub_1005E0EB0();
      os_log_type_t v20 = sub_1005E25C0();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = 134218240;
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v21 + 12) = 2048;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "[%llu] {%ld} Download & index did complete.", (uint8_t *)v21, 0x16u);
        swift_slowDealloc();
      }
      else
      {

        swift_release();
      }
      uint64_t v9 = 3;
      break;
    default:
      if (qword_1007187E8 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_1005E0ED0();
      sub_1003461B0(v5, (uint64_t)qword_10071A840);
      swift_retain();
      uint64_t v6 = sub_1005E0EB0();
      os_log_type_t v7 = sub_1005E25C0();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 134218240;
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v8 + 12) = 2048;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%llu] {%ld} Download & index did defer work.", (uint8_t *)v8, 0x16u);
        swift_slowDealloc();
      }
      else
      {

        swift_release();
      }
      uint64_t v9 = 0;
      break;
  }
  return a4(v9);
}

uint64_t sub_1005B17B4(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  sub_1005B2134(a1, (uint64_t)v23);
  sub_1005B2134(a1, (uint64_t)v24);
  if (v25)
  {
    swift_errorRetain();
    if (qword_1007187E8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1005E0ED0();
    sub_1003461B0(v6, (uint64_t)qword_10071A840);
    swift_retain();
    sub_1005B21D8(a1, (void (*)(void, void, void, void, void, void))sub_1005B219C);
    os_log_type_t v7 = sub_1005E0EB0();
    os_log_type_t v8 = sub_1005E25A0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 134218242;
      v27[0] = *(void *)(a2 + 16);
      sub_1005E2960();
      swift_release();
      *(_WORD *)(v9 + 12) = 2112;
      uint64_t v11 = sub_1005E06E0();
      v27[0] = v11;
      sub_1005E2960();
      *uint64_t v10 = v11;
      sub_1005B21D8(a1, (void (*)(void, void, void, void, void, void))sub_1005B221C);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "[%llu] Failed getting credentials from maild: %@", (uint8_t *)v9, 0x16u);
      sub_10000566C(&qword_100718A08);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release();
      sub_1005B21D8(a1, (void (*)(void, void, void, void, void, void))sub_1005B221C);
    }

    a3(_swiftEmptyArrayStorage);
    return sub_1005B21D8(a1, (void (*)(void, void, void, void, void, void))sub_1005B221C);
  }
  else
  {
    sub_1005B2228((uint64_t)v24, (uint64_t)v26);
    sub_1005B2228((uint64_t)v26, (uint64_t)v27);
    if ((v28 & 0xC0) == 0x80)
    {
      v28 &= 0x3Fu;
      os_log_type_t v12 = (void *)v27[0];
      if (qword_1007187E8 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_1005E0ED0();
      sub_1003461B0(v13, (uint64_t)qword_10071A840);
      swift_retain();
      sub_1005B21D8(a1, (void (*)(void, void, void, void, void, void))sub_1005B219C);
      uint64_t v14 = sub_1005E0EB0();
      os_log_type_t v15 = sub_1005E25C0();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = swift_slowAlloc();
        *(_DWORD *)uint64_t v16 = 134218240;
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v16 + 12) = 2048;
        sub_1005E2960();
        sub_1005B21D8(a1, (void (*)(void, void, void, void, void, void))sub_1005B221C);
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "[%llu] Got %ld credentials from maild.", (uint8_t *)v16, 0x16u);
        swift_slowDealloc();
      }
      else
      {
        swift_release();
        sub_1005B21D8(a1, (void (*)(void, void, void, void, void, void))sub_1005B221C);
      }

      uint64_t v22 = v12;
    }
    else
    {
      if (qword_1007187E8 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_1005E0ED0();
      sub_1003461B0(v18, (uint64_t)qword_10071A840);
      swift_retain();
      os_log_type_t v19 = sub_1005E0EB0();
      os_log_type_t v20 = sub_1005E25A0();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = 134217984;
        sub_1005E2960();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "[%llu] Invalid response for credential request from maild.", v21, 0xCu);
        swift_slowDealloc();
      }
      else
      {

        swift_release();
      }
      uint64_t v22 = _swiftEmptyArrayStorage;
    }
    return ((uint64_t (*)(void *))a3)(v22);
  }
}

unint64_t sub_1005B1CEC()
{
  unint64_t result = qword_10071A9D8;
  if (!qword_10071A9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A9D8);
  }
  return result;
}

void *sub_1005B1D40(void *result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  int v5 = a5 >> 6;
  if (v5 == 2) {
    return (void *)swift_bridgeObjectRelease();
  }
  if (v5 == 1) {
    return sub_1005B1D80(result, a2, a3, a4, a5 & 0x3F);
  }
  if (!(a5 >> 6)) {
    return (void *)sub_1005B1D70((uint64_t)result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_1005B1D70(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1005B1D80(void *result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (a5) {
      return result;
    }
  }
  return (void *)swift_bridgeObjectRelease();
}

void *sub_1005B1DEC(void *result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    if (a5) {
      return result;
    }
    id v5 = result;
  }
  return (void *)swift_bridgeObjectRetain();
}

uint64_t sub_1005B1E5C()
{
  return sub_1005E0FF0();
}

uint64_t sub_1005B1F04(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1005B1F18()
{
  uint64_t v1 = sub_1005E1010();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005B1FA8()
{
  sub_1005E1010();
  return sub_1005AFD28();
}

uint64_t sub_1005B201C()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005B205C(char a1)
{
  return sub_1005B1280(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

uint64_t sub_1005B2068()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005B20A8(uint64_t a1)
{
  return sub_1005B17B4(a1, *(void *)(v1 + 16), *(void (**)(void *))(v1 + 24));
}

uint64_t sub_1005B20B4()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005B20EC()
{
  return (*(uint64_t (**)(void *))(v0 + 16))(&_swiftEmptyArrayStorage);
}

uint64_t sub_1005B211C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005B212C()
{
  return swift_release();
}

uint64_t sub_1005B2134(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10071A9E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1005B219C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, char a6)
{
  if (a6) {
    return (void *)swift_errorRetain();
  }
  else {
    return sub_1005B21A8(a1, a2, a3, a4, a5);
  }
}

void *sub_1005B21A8(void *result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  int v5 = a5 >> 6;
  if (v5 == 2) {
    return (void *)swift_bridgeObjectRetain();
  }
  if (v5 == 1) {
    return sub_1005B1DEC(result, a2, a3, a4, a5 & 0x3F);
  }
  if (!(a5 >> 6)) {
    return (void *)sub_1005B1F04((uint64_t)result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_1005B21D8(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

void *sub_1005B221C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, char a6)
{
  if (a6) {
    return (void *)swift_errorRelease();
  }
  else {
    return sub_1005B1D40(a1, a2, a3, a4, a5);
  }
}

uint64_t sub_1005B2228(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1005B2284()
{
  unint64_t result = qword_10071A9E8;
  if (!qword_10071A9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A9E8);
  }
  return result;
}

uint64_t sub_1005B22D8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1005B2334(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(v1 + 16))(a1, 0, 0, 2);
}

uint64_t sub_1005B2368()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1005B23C0()
{
  v1._uint64_t rawValue = *(void **)(v0 + 24);
  return sub_100564D18(*(void *)(v0 + 16), v1, *(void *)(v0 + 32), *(void *)(v0 + 40), *(uint64_t (**)(uint64_t))(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_1005B23D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 16))(a1, a2, a3, 1);
}

uint64_t sub_1005B2400()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005B2440()
{
  return sub_100564CD8(*(uint64_t (**)(uint64_t))(v0 + 16));
}

uint64_t sub_1005B244C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void, void, void))(v1 + 16))(a1, 0, 0, 0);
}

unint64_t sub_1005B2480()
{
  unint64_t result = qword_1007197C0;
  if (!qword_1007197C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007197C0);
  }
  return result;
}

uint64_t sub_1005B24C0()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005B2500()
{
  return sub_1005AE8A4();
}

void sub_1005B2508()
{
  sub_100564734(v0);
}

void *sub_1005B2510@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1005AE944(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1005B2518(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005B2560()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005B2598()
{
  return sub_1005AED5C();
}

uint64_t sub_1005B25A0(void *a1)
{
  return sub_100541024(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t _s5BatchVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s5BatchVwcp_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_WORD *)(a1 + 44) = *(_WORD *)(a2 + 44);
  *(unsigned char *)(a1 + 46) = *(unsigned char *)(a2 + 46);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s5BatchVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_WORD *)(a1 + 42) = *(_WORD *)(a2 + 42);
  *(_WORD *)(a1 + 44) = *(_WORD *)(a2 + 44);
  *(unsigned char *)(a1 + 46) = *(unsigned char *)(a2 + 46);
  return a1;
}

__n128 _s5BatchVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 31) = *(_OWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s5BatchVwta_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_DWORD *)(a1 + 42) = *(_DWORD *)(a2 + 42);
  *(unsigned char *)(a1 + 46) = *(unsigned char *)(a2 + 46);
  return a1;
}

uint64_t _s5BatchVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 47)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s5BatchVwst_0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 46) = 0;
    *(_WORD *)(result + 44) = 0;
    *(_DWORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 47) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 47) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s5BatchVMa_0()
{
  return &_s5BatchVN_0;
}

Swift::Int sub_1005B286C()
{
  uint64_t v1 = v0;
  sub_1005E33F0();
  sub_1005E3450(*v0);
  sub_1005E3450(v0[1]);
  uint64_t v2 = v0[2];
  swift_bridgeObjectRetain();
  sub_1005B3444((uint64_t)v8, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = v1[3];
  swift_bridgeObjectRetain();
  sub_1005B3444((uint64_t)v8, v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = v1[4];
  swift_bridgeObjectRetain();
  sub_1005B32AC((uint64_t)v8, v4);
  swift_bridgeObjectRelease();
  Swift::UInt16 v5 = *((_WORD *)v1 + 21);
  Swift::UInt16 v6 = *((_WORD *)v1 + 22);
  sub_1005E3430(*((_WORD *)v1 + 20));
  sub_1005E3430(v5);
  sub_1005E3430(v6);
  sub_1005E3410(*((unsigned __int8 *)v1 + 46));
  return sub_1005E3470();
}

Swift::Int sub_1005B2960()
{
  Swift::UInt16 v1 = *v0;
  Swift::UInt16 v2 = v0[1];
  Swift::UInt16 v3 = v0[2];
  sub_1005E33F0();
  sub_1005E3430(v1);
  sub_1005E3430(v2);
  sub_1005E3430(v3);
  return sub_1005E3470();
}

void sub_1005B29D0()
{
  Swift::UInt16 v1 = v0[1];
  Swift::UInt16 v2 = v0[2];
  sub_1005E3430(*v0);
  sub_1005E3430(v1);
  sub_1005E3430(v2);
}

Swift::Int sub_1005B2A1C()
{
  Swift::UInt16 v1 = *v0;
  Swift::UInt16 v2 = v0[1];
  Swift::UInt16 v3 = v0[2];
  sub_1005E33F0();
  sub_1005E3430(v1);
  sub_1005E3430(v2);
  sub_1005E3430(v3);
  return sub_1005E3470();
}

BOOL sub_1005B2A88(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

void sub_1005B2AC4(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::UInt64 v4 = *(void *)(v2 + 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(v2 + 32);
  Swift::UInt v8 = *(unsigned __int8 *)(v2 + 46);
  Swift::UInt16 v9 = *(_WORD *)(v2 + 40);
  Swift::UInt16 v10 = *(_WORD *)(v2 + 42);
  Swift::UInt16 v11 = *(_WORD *)(v2 + 44);
  sub_1005E3450(*(void *)v2);
  sub_1005E3450(v4);
  swift_bridgeObjectRetain();
  sub_1005B3444(a1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1005B3444(a1, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1005B32AC(a1, v7);
  swift_bridgeObjectRelease();
  sub_1005E3430(v9);
  sub_1005E3430(v10);
  sub_1005E3430(v11);
  sub_1005E3410(v8);
}

Swift::Int sub_1005B2BA4()
{
  Swift::UInt64 v1 = *(void *)v0;
  Swift::UInt64 v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  Swift::UInt v6 = *(unsigned __int8 *)(v0 + 46);
  Swift::UInt16 v7 = *(_WORD *)(v0 + 40);
  Swift::UInt16 v8 = *(_WORD *)(v0 + 42);
  Swift::UInt16 v9 = *(_WORD *)(v0 + 44);
  sub_1005E33F0();
  sub_1005E3450(v1);
  sub_1005E3450(v2);
  swift_bridgeObjectRetain();
  sub_1005B3444((uint64_t)v11, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1005B3444((uint64_t)v11, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1005B32AC((uint64_t)v11, v5);
  swift_bridgeObjectRelease();
  sub_1005E3430(v7);
  sub_1005E3430(v8);
  sub_1005E3430(v9);
  sub_1005E3410(v6);
  return sub_1005E3470();
}

uint64_t sub_1005B2CB0(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 15) = *(long long *)((char *)a1 + 31);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 15) = *(long long *)((char *)a2 + 31);
  return sub_1005B35B0((uint64_t)&v5, (uint64_t)&v7) & 1;
}

unint64_t sub_1005B2D00()
{
  unint64_t result = qword_10071AA00;
  if (!qword_10071AA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AA00);
  }
  return result;
}

uint64_t sub_1005B2D54()
{
  sub_1005E2C80(38);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v2);
  swift_bridgeObjectRelease();
  sub_1005E1CE0();
  swift_bridgeObjectRelease();
  uint64_t v0 = os_transaction_create();
  uint64_t result = swift_release();
  if (v0) {
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005B2E20(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    uint64_t v14 = result;
    os_log_type_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_1005E33F0();
    swift_bridgeObjectRetain_n();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    Swift::Int v18 = sub_1005E3470();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    uint64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1005E3290() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1005E3290() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 4;
  if (v3 + 4 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_23;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

Swift::Int sub_1005B30B4(Swift::Int result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  Swift::Int v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  Swift::Int v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 3;
    if (v13 + 3 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v15 = v13 + 4;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_35;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_24;
        }
      }
    }
    int64_t v4 = v15;
LABEL_24:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_25:
    Swift::UInt64 v16 = *(void *)(*(void *)(v3 + 48) + 8 * v12);
    sub_1005E33F0();
    sub_1005E3450(v16);
    uint64_t result = sub_1005E3470();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(void *)(v19 + 8 * v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(void *)(v19 + 8 * v18) == v16) {
      goto LABEL_7;
    }
  }
}

void sub_1005B32AC(uint64_t a1, uint64_t a2)
{
  sub_1005E3470();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  Swift::UInt v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_19;
    }
    if (v9 >= v7)
    {
LABEL_17:
      swift_release();
      sub_1005E3410(v8);
      return;
    }
    uint64_t v12 = *(void *)(v3 + 8 * v9);
    if (!v12) {
      break;
    }
LABEL_16:
    uint64_t v6 = (v12 - 1) & v12;
LABEL_5:
    sub_1005E33F0();
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    Swift::Int v10 = sub_1005E3470();
    swift_bridgeObjectRelease();
    v8 ^= v10;
  }
  int64_t v13 = v9 + 1;
  if (v9 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v12 = *(void *)(v3 + 8 * v13);
  if (v12)
  {
    ++v9;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v9 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_17;
    }
    uint64_t v12 = *(void *)(v3 + 8 * v9);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

void sub_1005B3444(uint64_t a1, uint64_t a2)
{
  sub_1005E3470();
  Swift::UInt v3 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v4++, 1)) {
      goto LABEL_19;
    }
    if (v4 >= v9)
    {
LABEL_17:
      sub_1005E3410(v3);
      return;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (!v14) {
      break;
    }
LABEL_16:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_5:
    Swift::UInt64 v12 = *(void *)(*(void *)(a2 + 48) + 8 * v11);
    sub_1005E33F0();
    sub_1005E3450(v12);
    v3 ^= sub_1005E3470();
  }
  int64_t v15 = v4 + 1;
  if (v4 + 1 >= v9) {
    goto LABEL_17;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    ++v4;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      goto LABEL_17;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

uint64_t sub_1005B35B0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2
    && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    && (sub_1005B30B4(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) != 0
    && (sub_1005B30B4(*(void *)(a1 + 24), *(void *)(a2 + 24)) & 1) != 0
    && (sub_1005B2E20(*(void *)(a1 + 32), *(void *)(a2 + 32)) & 1) != 0
    && *(unsigned __int16 *)(a1 + 40) == *(unsigned __int16 *)(a2 + 40))
  {
    char v4 = 0;
    if (*(unsigned __int16 *)(a1 + 42) == *(unsigned __int16 *)(a2 + 42)
      && *(unsigned __int16 *)(a1 + 44) == *(unsigned __int16 *)(a2 + 44))
    {
      char v4 = *(unsigned char *)(a1 + 46) ^ *(unsigned char *)(a2 + 46) ^ 1;
    }
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

unsigned char *_s5BatchV10NextActionOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005B3740);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s5BatchV10NextActionOMa()
{
  return &_s5BatchV10NextActionON;
}

uint64_t _s5BatchV6CountsVwCP(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

ValueMetadata *_s5BatchV6CountsVMa()
{
  return &_s5BatchV6CountsVN;
}

unint64_t sub_1005B37A0()
{
  unint64_t result = qword_10071AA08;
  if (!qword_10071AA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AA08);
  }
  return result;
}

unint64_t sub_1005B37F8()
{
  unint64_t result = qword_10071AA10;
  if (!qword_10071AA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AA10);
  }
  return result;
}

uint64_t sub_1005B384C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a8 >> 62 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_unknownObjectRetain();
  }
  else if (!(a8 >> 62))
  {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t _s5StateOwxx_0(uint64_t a1)
{
  return sub_1005B3930(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56));
}

uint64_t sub_1005B3930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a8 >> 62 == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  else if (!(a8 >> 62))
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *_s5StateOwcp_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  unint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v13 = a2[9];
  sub_1005B384C(*a2, v4, v5, v6, v7, v8, v9, v10);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  return a1;
}

uint64_t *_s5StateOwca_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  unint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v21 = a2[9];
  sub_1005B384C(*a2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  uint64_t v17 = a1[5];
  uint64_t v18 = a1[6];
  unint64_t v19 = a1[7];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v21;
  sub_1005B3930(v12, v13, v14, v15, v16, v17, v18, v19);
  return a1;
}

__n128 _s5StateOwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t _s5StateOwta_0(uint64_t a1, _OWORD *a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  unint64_t v10 = *(void *)(a1 + 56);
  long long v11 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v11;
  long long v12 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v12;
  *(_OWORD *)(a1 + 64) = a2[4];
  sub_1005B3930(v3, v5, v4, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t _s5StateOwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 40) >> 49) & 0x7FFF | (*(_DWORD *)(a1 + 56) >> 1 << 15);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double _s5StateOwst(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 72) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      unint64_t v4 = -a2;
      double result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 32) = 0;
      *(void *)(a1 + 40) = v4 << 49;
      *(void *)(a1 + 48) = 0;
      *(void *)(a1 + 56) = (v4 >> 14) & 0x3FFFE;
      *(void *)(a1 + 64) = 0;
      *(void *)(a1 + 72) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1005B3C8C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 56) >> 62;
  if (v1 == 3) {
    return (*(_DWORD *)a1 + 3);
  }
  else {
    return v1;
  }
}

uint64_t sub_1005B3CA8(uint64_t result)
{
  *(void *)(result + 56) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1005B3CB8(uint64_t result, uint64_t a2)
{
  if (a2 < 3)
  {
    uint64_t v2 = *(void *)(result + 56) & 1 | (a2 << 62);
    *(void *)(result + 40) &= 0x1FFFFFFFFFFFFuLL;
    *(void *)(result + 56) = v2;
  }
  else
  {
    *(void *)double result = (a2 - 3);
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(void *)(result + 64) = 0;
    *(void *)(result + 72) = 0;
    *(void *)(result + 56) = 0xC000000000000000;
  }
  return result;
}

ValueMetadata *_s5StateOMa_0()
{
  return &_s5StateON_0;
}

void sub_1005B3D14(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  if ((a4 & 1) == 0)
  {
    uint64_t v8 = sub_1005E0EB0();
    os_log_type_t v9 = sub_1005E25C0();
    if (!os_log_type_enabled(v8, v9))
    {
LABEL_10:

      goto LABEL_11;
    }
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v10 = 134217984;
    BOOL v11 = __OFSUB__(a1, a3);
    if (a1 < a3)
    {
      if (__OFSUB__(a3, a1))
      {
        __break(1u);
        goto LABEL_17;
      }
      BOOL v11 = __OFSUB__(0, a3 - a1);
      if (!v11) {
        goto LABEL_9;
      }
      __break(1u);
    }
    if (!v11)
    {
LABEL_9:
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Did wait %f s for pausing.", v10, 0xCu);
      swift_slowDealloc();
      goto LABEL_10;
    }
LABEL_17:
    __break(1u);
    return;
  }
LABEL_11:
  uint64_t v12 = *(void *)(a5 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = a5 + 40;
    do
    {
      uint64_t v14 = *(void (**)(uint64_t))(v13 - 8);
      uint64_t v15 = swift_retain();
      v14(v15);
      swift_release();
      v13 += 16;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
}

__n128 sub_1005B3E6C(uint64_t a1, void (*a2)(__n128), uint64_t a3)
{
  uint64_t v4 = v3[2];
  uint64_t v5 = v3[5];
  __n128 v6 = *(__n128 *)(v3 + 3);
  uint64_t v7 = v3[6];
  unint64_t v8 = v3[7];
  os_log_type_t v9 = (void *)v3[8];
  uint64_t v10 = v3[9];
  switch(v8 >> 62)
  {
    case 1uLL:
    case 3uLL:
      a2(v6);
      break;
    case 2uLL:
      __n128 v32 = *(__n128 *)(v3 + 3);
      uint64_t v34 = v3[1];
      uint64_t v36 = *v3;
      uint64_t v24 = v9[2];
      BOOL v25 = v24 != 0;
      if (!v24) {
        uint64_t v7 = a1;
      }
      uint64_t v31 = v7;
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = a2;
      *(void *)(v26 + 24) = a3;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        os_log_type_t v9 = sub_100572068(0, v9[2] + 1, 1, v9);
      }
      uint64_t v27 = v8 & v25;
      unint64_t v29 = v9[2];
      unint64_t v28 = v9[3];
      if (v29 >= v28 >> 1) {
        os_log_type_t v9 = sub_100572068((void *)(v28 > 1), v29 + 1, 1, v9);
      }
      void v9[2] = v29 + 1;
      int64_t v30 = &v9[2 * v29];
      v30[4] = sub_100518600;
      v30[5] = v26;
      *int v3 = v36;
      v3[1] = v34;
      v3[2] = v4;
      __n128 result = v32;
      *(__n128 *)(v3 + 3) = v32;
      v3[5] = v5 & 0x1FFFFFFFFFFFFLL;
      void v3[6] = v31;
      v3[7] = v27 | 0x8000000000000000;
      _WORD v3[8] = (uint64_t)v9;
      v3[9] = v10;
      break;
    default:
      uint64_t v33 = v3[1];
      uint64_t v35 = *v3;
      unsigned int v14 = *(_OWORD *)(v3 + 3);
      uint64_t v15 = (void *)v3[4];
      uint64_t v16 = *(void *)(v6.n128_u64[1] + 16);
      BOOL v17 = v16 != 0;
      if (v16) {
        uint64_t v18 = v3[2];
      }
      else {
        uint64_t v18 = a1;
      }
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = a2;
      *(void *)(v19 + 24) = a3;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = sub_100572068(0, v15[2] + 1, 1, v15);
      }
      uint64_t v20 = v17 & v14;
      unint64_t v22 = v15[2];
      unint64_t v21 = v15[3];
      if (v22 >= v21 >> 1) {
        uint64_t v15 = sub_100572068((void *)(v21 > 1), v22 + 1, 1, v15);
      }
      id v15[2] = v22 + 1;
      BOOL v23 = &v15[2 * v22];
      v23[4] = sub_1005B477C;
      void v23[5] = v19;
      *int v3 = v35;
      v3[1] = v33;
      v3[2] = v18;
      v3[3] = v20;
      v3[4] = (uint64_t)v15;
      result.n128_u64[0] = 0;
      *(_OWORD *)(v3 + 5) = 0u;
      *(_OWORD *)(v3 + 7) = 0u;
      v3[9] = 0;
      break;
  }
  return result;
}

uint64_t sub_1005B40E4()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005B411C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v6 = type metadata accessor for PendingItem(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = sub_10000566C((uint64_t *)&unk_10071AA20);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!swift_unknownObjectWeakLoadStrong()) {
    return 1;
  }
  swift_retain();
  uint64_t v16 = sub_10055C410(&v32);
  swift_unknownObjectRelease();
  uint64_t v29 = v16;
  uint64_t v35 = v16;
  swift_release();
  if (!AssociatedTypeWitness) {
    return 1;
  }
  uint64_t v27 = a4;
  uint64_t v28 = a3;
  sub_100021BFC(&v32, (uint64_t)v36);
  BOOL v17 = sub_10003BCDC(v36, v36[3]);
  __chkstk_darwin(v17);
  (*(void (**)(char *))(v19 + 16))((char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_100021E04((uint64_t *)&v32);
  sub_1005E1F60();
  uint64_t v20 = _swiftEmptyArrayStorage;
  while (1)
  {
    sub_100057374((uint64_t)&v32, AssociatedTypeWitness);
    sub_1005E2950();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1) {
      break;
    }
    sub_1005B45A4((uint64_t)v15, (uint64_t)v12);
    unint64_t v21 = v20[2];
    if (v21 > 0x27)
    {
      sub_1005B4608((uint64_t)v12);
      break;
    }
    sub_1005B4664((uint64_t)v12, (uint64_t)v10);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v20 = (void *)sub_100572034(0, v21 + 1, 1, (unint64_t)v20);
    }
    unint64_t v23 = v20[2];
    unint64_t v22 = v20[3];
    if (v23 >= v22 >> 1) {
      uint64_t v20 = (void *)sub_100572034(v22 > 1, v23 + 1, 1, (unint64_t)v20);
    }
    void v20[2] = v23 + 1;
    sub_1005B45A4((uint64_t)v10, (uint64_t)v20+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v23);
    sub_1005B4608((uint64_t)v12);
  }
  uint64_t result = _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v32);
  uint64_t v25 = v20[2];
  if (!v25)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v36);
    return 1;
  }
  if (v25 >= v31)
  {
LABEL_26:
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v36);
    return (uint64_t)v20;
  }
  if (v25 != v28)
  {
    swift_bridgeObjectRelease();
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v36);
    return v25;
  }
  uint64_t v26 = v30 - v27;
  if (v30 >= v27)
  {
    if (!__OFSUB__(v30, v27)) {
      goto LABEL_24;
    }
  }
  else
  {
    if (!__OFSUB__(v27, v30))
    {
      uint64_t v26 = v30 - v27;
      if (!__OFSUB__(0, v27 - v30))
      {
LABEL_24:
        if ((double)v26 / 1000000000.0 < 4.0)
        {
          swift_bridgeObjectRelease();
          _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v36);
          return v28;
        }
        goto LABEL_26;
      }
      __break(1u);
      goto LABEL_20;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1005B45A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PendingItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005B4608(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PendingItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005B4664(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PendingItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s5StateO10WhenPausedVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5StateO10WhenPausedVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s5StateO10WhenPausedVMa()
{
  return &_s5StateO10WhenPausedVN;
}

ValueMetadata *_s5StateO4IdleVMa()
{
  return &_s5StateO4IdleVN;
}

uint64_t sub_1005B4780(uint64_t a1)
{
  uint64_t v3 = sub_1005E1680();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E16C0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = *(void *)(v1 + 32);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_1005B80D4;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046A1E4;
  aBlock[3] = &unk_1006FF308;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  sub_1005E16A0();
  v14[1] = _swiftEmptyArrayStorage;
  sub_10054007C();
  sub_10000566C((uint64_t *)&unk_100719780);
  sub_100007494((unint64_t *)&qword_100718A00, (uint64_t *)&unk_100719780);
  sub_1005E2AD0();
  sub_1005E2610();
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_1005B4A10()
{
  uint64_t v1 = sub_1005E1680();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E16C0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(void *)(v0 + 32);
  aBlock[4] = sub_1005B8094;
  uint64_t v13 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046A1E4;
  aBlock[3] = &unk_1006FF2B8;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_1005E16A0();
  v11[1] = _swiftEmptyArrayStorage;
  sub_10054007C();
  sub_10000566C((uint64_t *)&unk_100719780);
  sub_100007494((unint64_t *)&qword_100718A00, (uint64_t *)&unk_100719780);
  sub_1005E2AD0();
  sub_1005E2610();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_1005B4C84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005E1680();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005E16C0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)(v3 + 32);
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v3;
  void v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_1005B8070;
  void aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046A1E4;
  aBlock[3] = &unk_1006FF290;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1005E16A0();
  v17[1] = _swiftEmptyArrayStorage;
  sub_10054007C();
  sub_10000566C((uint64_t *)&unk_100719780);
  sub_100007494((unint64_t *)&qword_100718A00, (uint64_t *)&unk_100719780);
  sub_1005E2AD0();
  sub_1005E2610();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_1005B4F28()
{
  uint64_t v0 = sub_1005E0ED0();
  sub_10034E5B4(v0, qword_10071AA30);
  sub_1003461B0(v0, (uint64_t)qword_10071AA30);
  return sub_1005E0EC0();
}

uint64_t sub_1005B4FAC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    __uint64_t v1 = static MonotonicTime.now()();
    sub_1005B5234(v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1005B5008()
{
  swift_unknownObjectRelease();

  sub_1005B3930(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112));
  sub_1004836A4(v0 + 144);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1005B508C(uint64_t a1)
{
  uint64_t v3 = sub_1005E1850();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(v1 + 32);
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  id v8 = v7;
  LOBYTE(v7) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    uint64_t result = swift_beginAccess();
    unint64_t v10 = *(void *)(v1 + 112);
    if (v10 >> 62 == 3 && v10 == 0xC000000000000000)
    {
      int8x16_t v11 = vorrq_s8(vorrq_s8(*(int8x16_t *)(v1 + 120), *(int8x16_t *)(v1 + 80)), vorrq_s8(*(int8x16_t *)(v1 + 96), *(int8x16_t *)(v1 + 64)));
      int8x16_t v12 = vextq_s8(v11, v11, 8uLL);
      if (!(*(void *)&vorr_s8(*(int8x8_t *)v12.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL)) | *(void *)(v1 + 56)))
      {
        *(void *)(v1 + 56) = 0;
        *(void *)(v1 + 64) = a1;
        *(_OWORD *)(v1 + 72) = xmmword_1005F6750;
        *(void *)(v1 + 88) = _swiftEmptyArrayStorage;
        *(_OWORD *)(v1 + 96) = 0u;
        *(_OWORD *)(v1 + 112) = 0u;
        *(void *)(v1 + 128) = 0;
        return sub_1005B5234(a1);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005B5234(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005E1850();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v8 = (void *)v2[4];
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  uint64_t v10 = sub_1005E1860();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v11 = v2[6];
  swift_beginAccess();
  uint64_t v12 = v2[12];
  unint64_t v13 = v2[14];
  if (v13 >> 62) {
    return swift_endAccess();
  }
  uint64_t v14 = v2[7];
  uint64_t v16 = v2[8];
  uint64_t v15 = v2[9];
  unint64_t v55 = v2[10];
  uint64_t v56 = v15;
  uint64_t v17 = v2[11];
  uint64_t v57 = v2[13];
  uint64_t v53 = v2[15];
  uint64_t v54 = v17;
  swift_retain_n();
  uint64_t v18 = sub_1005B411C(a1, v11, v14, v16);
  uint64_t v21 = v18;
  unint64_t v22 = v19;
  if (!(v20 >> 6))
  {
    sub_1005B3930(v14, v16, v56, v55, v54, v12, v57, v13);
    swift_release();
    uint64_t v10 = v21;
    v2[7] = v21;
    v2[8] = v22;
    *(_OWORD *)(v2 + 9) = xmmword_1005F6750;
    v2[11] = _swiftEmptyArrayStorage;
    *((_OWORD *)v2 + 6) = 0u;
    *((_OWORD *)v2 + 7) = 0u;
    v2[16] = 0;
    swift_release();
    swift_endAccess();
    if (qword_1007187F8 == -1)
    {
LABEL_13:
      uint64_t v38 = sub_1005E0ED0();
      sub_1003461B0(v38, (uint64_t)qword_10071AA30);
      uint64_t v39 = sub_1005E0EB0();
      os_log_type_t v40 = sub_1005E25C0();
      if (os_log_type_enabled(v39, v40))
      {
        int v41 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)int v41 = 134217984;
        *(void *)&long long v58 = v10;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "Source only has %ld items. Waiting for more.", v41, 0xCu);
        swift_slowDealloc();
      }

      if (!v2[20])
      {
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      swift_retain();
      RestartableTimer.start()();
      return swift_release();
    }
LABEL_34:
    swift_once();
    goto LABEL_13;
  }
  if (v20 >> 6 != 1)
  {
    if (v20 == 128 && !(v18 | v19))
    {
      swift_release_n();
      return swift_endAccess();
    }
    swift_release_n();
    swift_endAccess();
    if (qword_1007187F8 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_1005E0ED0();
    sub_1003461B0(v43, (uint64_t)qword_10071AA30);
    unint64_t v44 = sub_1005E0EB0();
    os_log_type_t v45 = sub_1005E2590();
    if (os_log_type_enabled(v44, v45))
    {
      char v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Got no items from source. Not starting new batch.", v46, 2u);
      swift_slowDealloc();
    }

    if (!v2[20])
    {
LABEL_37:
      __break(1u);
      JUMPOUT(0x1005B580CLL);
    }
    swift_retain();
    RestartableTimer.stop()();
    return swift_release();
  }
  int v23 = v20;
  swift_release_n();
  swift_endAccess();
  LODWORD(v57) = v23;
  if ((v23 & 1) == 0)
  {
    if (v2[20])
    {
      swift_retain();
      RestartableTimer.stop()();
      swift_release();
      goto LABEL_8;
    }
    goto LABEL_36;
  }
LABEL_8:
  unint64_t v55 = v22;
  uint64_t v56 = v21;
  sub_1005B5D98(v21, v22, &v58);
  uint64_t v24 = v58;
  uint64_t v54 = v59;
  uint64_t v25 = v61;
  uint64_t v52 = *((void *)&v58 + 1);
  uint64_t v53 = v60;
  uint64_t v26 = v62;
  uint64_t v27 = v63;
  uint64_t v28 = v64;
  int v29 = v65;
  swift_beginAccess();
  uint64_t v31 = v2[9];
  uint64_t v30 = v2[10];
  uint64_t v32 = v2[11];
  switch(v2[14] >> 62)
  {
    case 1:
      sub_1005B94C8((uint64_t)&v58);
      uint64_t v33 = sub_1005B2D54();
      uint64_t v47 = 0x1000000000000;
      if (!v29) {
        uint64_t v47 = 0;
      }
      uint64_t v48 = v26 | (v27 << 16) | (v28 << 32) | v47;
      uint64_t v49 = v52;
      v2[7] = v24;
      v2[8] = v49;
      uint64_t v50 = v53;
      v2[9] = v54;
      v2[10] = v50;
      v2[11] = v25;
      v2[12] = v48;
      *(_OWORD *)(v2 + 13) = xmmword_10062A0C0;
      v2[15] = _swiftEmptyArrayStorage;
      goto LABEL_31;
    case 2:
    case 3:
      break;
    default:
      sub_1005B94C8((uint64_t)&v58);
      uint64_t v51 = v25;
      uint64_t v33 = sub_1005B2D54();
      uint64_t v35 = v51;
      uint64_t v34 = v52;
      v2[7] = v24;
      v2[8] = v34;
      uint64_t v36 = v53;
      v2[9] = v54;
      v2[10] = v36;
      uint64_t v37 = 0x1000000000000;
      if (!v29) {
        uint64_t v37 = 0;
      }
      v2[11] = v35;
      v2[12] = v26 | (v27 << 16) | (v28 << 32) | v37;
      v2[13] = v31;
      v2[14] = v30 & 1 | 0x8000000000000000;
      v2[15] = v32;
LABEL_31:
      v2[16] = v33;
      break;
  }
  swift_endAccess();
  sub_1005B9510(v56, v55, v57);
  return sub_1005B9524((uint64_t)&v58);
}

void sub_1005B581C(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v1 = sub_1005E0EB0();
    os_log_type_t v2 = sub_1005E25A0();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      uint64_t v4 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 138412290;
      swift_errorRetain();
      uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
      sub_1005E2960();
      *uint64_t v4 = v8;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to delete all searchable items: %@", v3, 0xCu);
      sub_10000566C(&qword_100718A08);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    osint log = sub_1005E0EB0();
    os_log_type_t v5 = sub_1005E25C0();
    if (os_log_type_enabled(oslog, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, "Did delete all searchable items.", v6, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1005B5A5C(uint64_t a1)
{
  [v1 setIndexDelegate:a1];
  return swift_unknownObjectRelease();
}

id sub_1005B5AA4()
{
  return [v0 beginIndexBatch];
}

void sub_1005B5AB4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  v7.super.Class isa = sub_1005E0890().super.isa;
  if (a3)
  {
    v8[4] = a3;
    void v8[5] = a4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    _OWORD v8[2] = sub_100588834;
    void v8[3] = &unk_1006FF5B0;
    a3 = _Block_copy(v8);
    swift_retain();
    swift_release();
  }
  [v4 endIndexBatchWithClientState:v7.super.isa completionHandler:a3];
  _Block_release(a3);
}

void sub_1005B5B88(uint64_t a1, void *a2, uint64_t a3)
{
  sub_10053EB74();
  v6.super.Class isa = sub_1005E20B0().super.isa;
  if (a2)
  {
    void v7[4] = a2;
    void v7[5] = a3;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    _OWORD v7[2] = sub_100588834;
    v7[3] = &unk_1006FF588;
    a2 = _Block_copy(v7);
    swift_retain();
    swift_release();
  }
  [v3 indexSearchableItems:v6.super.isa completionHandler:a2];
  _Block_release(a2);
}

void sub_1005B5C70(uint64_t a1, void *a2, uint64_t a3)
{
  v6.super.Class isa = sub_1005E20B0().super.isa;
  if (a2)
  {
    void v7[4] = a2;
    void v7[5] = a3;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    _OWORD v7[2] = sub_100588834;
    v7[3] = &unk_1006FF560;
    a2 = _Block_copy(v7);
    swift_retain();
    swift_release();
  }
  [v3 deleteSearchableItemsWithIdentifiers:v6.super.isa completionHandler:a2];
  _Block_release(a2);
}

uint64_t type metadata accessor for SpotlightIndexer()
{
  return self;
}

uint64_t sub_1005B5D70(uint64_t a1, uint64_t a2)
{
  return sub_1005B5234(a2);
}

void sub_1005B5D98(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = v4[3];
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v10 = v4[17];
  v4[17] = v10 + 1;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_1005B6338(v10, a2, a1, (uint64_t)sub_1005B95A4, v11, ObjectType, v8, (unint64_t *)&v17);
  swift_release_n();
  if (v4[20])
  {
    swift_retain();
    RestartableTimer.start()();
    swift_release();
    if (qword_1007187F8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1005E0ED0();
    sub_1003461B0(v12, (uint64_t)qword_10071AA30);
    sub_1005B94C8((uint64_t)&v17);
    unint64_t v13 = sub_1005E0EB0();
    os_log_type_t v14 = sub_1005E25C0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 134218752;
      sub_1005E2960();
      *(_WORD *)(v15 + 12) = 512;
      sub_1005E2960();
      *(_WORD *)(v15 + 16) = 512;
      sub_1005E2960();
      *(_WORD *)(v15 + 20) = 512;
      sub_1005E2960();
      sub_1005B9524((uint64_t)&v17);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Started batch ID %llu, adding %hu, updating %hu, deleting %hu message(s).", (uint8_t *)v15, 0x18u);
      swift_slowDealloc();
    }
    else
    {
      sub_1005B9524((uint64_t)&v17);
    }

    long long v16 = *(_OWORD *)v18;
    *a3 = v17;
    a3[1] = v16;
    *(_OWORD *)((char *)a3 + 31) = *(_OWORD *)&v18[15];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005B6008(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1005B6084(a1, a2, a3 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1005B6084(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1005E1680();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005E16C0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(void *)(v4 + 32);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v4;
  *(void *)(v16 + 24) = a1;
  *(void *)(v16 + 32) = a2;
  a3 &= 1u;
  *(unsigned char *)(v16 + 40) = a3;
  aBlock[4] = sub_1005B970C;
  void aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046A1E4;
  aBlock[3] = &unk_1006FF3A8;
  long long v17 = _Block_copy(aBlock);
  swift_retain();
  sub_1005B973C(a2, a3);
  sub_1005E16A0();
  v19[1] = _swiftEmptyArrayStorage;
  sub_10054007C();
  sub_10000566C((uint64_t *)&unk_100719780);
  sub_100007494((unint64_t *)&qword_100718A00, (uint64_t *)&unk_100719780);
  sub_1005E2AD0();
  sub_1005E2610();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_1005B6338@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t *a8@<X8>)
{
  uint64_t v141 = a7;
  uint64_t v140 = a6;
  uint64_t v134 = a5;
  uint64_t v133 = a4;
  unint64_t v135 = a2;
  unint64_t v138 = a1;
  unint64_t v136 = a8;
  uint64_t v9 = sub_1005E0970();
  __chkstk_darwin(v9 - 8);
  uint64_t v150 = (char *)v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_1005E0ED0();
  uint64_t v11 = *(void (***)(char *, uint64_t))(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v149 = (char *)v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PendingItem.AddMessage(0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v146 = (uint64_t)v130 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v152 = (void *)((char *)v130 - v16);
  uint64_t v17 = type metadata accessor for PendingItem.Info(0);
  uint64_t v18 = __chkstk_darwin(v17);
  int v20 = (unsigned __int8 *)v130 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v156 = (void *)((char *)v130 - v22);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)v130 - v23;
  uint64_t v157 = type metadata accessor for PendingItem(0);
  uint64_t v25 = __chkstk_darwin(v157);
  BOOL v151 = (char *)v130 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  int v29 = (char *)v130 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v32 = (char *)v130 - v31;
  __chkstk_darwin(v30);
  uint64_t v35 = (void *)((char *)v130 - v34);
  unint64_t v36 = *(void *)(a3 + 16);
  uint64_t v145 = a3;
  uint64_t v154 = v17;
  uint64_t v160 = v20;
  unint64_t v161 = (unint64_t)&_swiftEmptySetSingleton;
  unint64_t v159 = v36;
  uint64_t v147 = v33;
  unint64_t v148 = (unint64_t)v11;
  if (v36)
  {
    uint64_t v37 = a3 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
    uint64_t v38 = *(void *)(v33 + 72);
    swift_bridgeObjectRetain();
    uint64_t v39 = v37;
    unint64_t v40 = v36;
    do
    {
      sub_1005B95B0(v39, (uint64_t)v35, type metadata accessor for PendingItem);
      sub_1005A5160((Swift::UInt64 *)&v165, v35[1]);
      sub_1005B9618((uint64_t)v35, type metadata accessor for PendingItem);
      v39 += v38;
      --v40;
    }
    while (v40);
    swift_bridgeObjectRelease();
    unint64_t v143 = v161;
    unint64_t v161 = (unint64_t)&_swiftEmptySetSingleton;
    swift_bridgeObjectRetain();
    uint64_t v41 = v37;
    unint64_t v42 = v159;
    do
    {
      sub_1005B95B0(v41, (uint64_t)v35, type metadata accessor for PendingItem);
      sub_1005A5924((Swift::UInt64 *)&v165, *v35);
      sub_1005B9618((uint64_t)v35, type metadata accessor for PendingItem);
      v41 += v38;
      --v42;
    }
    while (v42);
    swift_bridgeObjectRelease();
    uint64_t v142 = (void *)v161;
    uint64_t v165 = (void (**)(char *, uint64_t))&_swiftEmptySetSingleton;
    swift_bridgeObjectRetain();
    uint64_t v43 = v37;
    unint64_t v44 = v159;
    do
    {
      sub_1005B95B0(v43, (uint64_t)v32, type metadata accessor for PendingItem);
      sub_1005B95B0((uint64_t)&v32[*(int *)(v157 + 24)], (uint64_t)v24, type metadata accessor for PendingItem.Info);
      if (!swift_getEnumCaseMultiPayload())
      {
        os_log_type_t v45 = v152;
        sub_100583584((uint64_t)v24, (uint64_t)v152);
        Swift::Int v47 = *v45;
        Swift::Int v46 = v45[1];
        swift_bridgeObjectRetain();
        sub_1005B9618((uint64_t)v45, type metadata accessor for PendingItem.AddMessage);
        sub_1005A4FA0((Swift::Int *)&v161, v47, v46);
        swift_bridgeObjectRelease();
      }
      sub_1005B9618((uint64_t)v32, type metadata accessor for PendingItem);
      v43 += v38;
      --v44;
    }
    while (v44);
    swift_bridgeObjectRelease();
    char v144 = v165;
    swift_bridgeObjectRetain();
    int v158 = 0;
    int v153 = 0;
    unint64_t v48 = v159;
    unint64_t v49 = v159;
    uint64_t v50 = v156;
    uint64_t v51 = v157;
    uint64_t v52 = v155;
    do
    {
      sub_1005B95B0(v37, (uint64_t)v29, type metadata accessor for PendingItem);
      sub_1005B95B0((uint64_t)&v29[*(int *)(v51 + 24)], (uint64_t)v50, type metadata accessor for PendingItem.Info);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload != 1) {
          LODWORD(v44) = v44 + 1;
        }
        int v54 = v158;
        if (EnumCaseMultiPayload == 1) {
          int v54 = v158 + 1;
        }
        int v158 = v54;
      }
      else
      {
        ++v153;
        sub_1005B9618((uint64_t)v156, type metadata accessor for PendingItem.Info);
      }
      sub_1005B9618((uint64_t)v29, type metadata accessor for PendingItem);
      v37 += v38;
      --v49;
    }
    while (v49);
    int v137 = v44;
    swift_bridgeObjectRelease();
    int v20 = v160;
    unint64_t v55 = (void *)v143;
    uint64_t v11 = (void (**)(char *, uint64_t))v148;
  }
  else
  {
    int v137 = 0;
    int v158 = 0;
    int v153 = 0;
    unint64_t v55 = &_swiftEmptySetSingleton;
    uint64_t v142 = &_swiftEmptySetSingleton;
    char v144 = (void (**)(char *, uint64_t))&_swiftEmptySetSingleton;
    uint64_t v51 = v157;
    unint64_t v48 = 0;
    uint64_t v52 = v155;
  }
  uint64_t v56 = v149;
  if (qword_1007187F8 != -1) {
    swift_once();
  }
  uint64_t v57 = sub_1003461B0(v52, (uint64_t)qword_10071AA30);
  ((void (*)(char *, uint64_t, uint64_t))v11[2])(v56, v57, v52);
  swift_bridgeObjectRetain_n();
  uint64_t v58 = (uint64_t)v142;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v59 = sub_1005E0EB0();
  LODWORD(v156) = sub_1005E25C0();
  BOOL v60 = os_log_type_enabled(v59, (os_log_type_t)v156);
  unint64_t v143 = (unint64_t)v55;
  if (!v60) {
    goto LABEL_28;
  }
  os_log_t v131 = v59;
  uint64_t v61 = swift_slowAlloc();
  uint64_t v11 = (void (**)(char *, uint64_t))swift_slowAlloc();
  uint64_t v165 = v11;
  *(_DWORD *)uint64_t v61 = 134219522;
  unint64_t v161 = v138;
  sub_1005E2960();
  *(_WORD *)(v61 + 12) = 2048;
  swift_bridgeObjectRelease();
  unint64_t v161 = v48;
  sub_1005E2960();
  swift_bridgeObjectRelease();
  uint64_t v132 = v61;
  *(_WORD *)(v61 + 22) = 2080;
  uint64_t v59 = 0;
  uint64_t v62 = sub_1005B9040(v58);
  uint64_t v51 = v58;
  v130[2] = v11;
  if (v63 & 1) != 0 || (uint64_t v56 = (char *)v62, v64 = sub_1005B9240(v58), (v65))
  {
    uint64_t v56 = 0;
    unint64_t v64 = 0;
    goto LABEL_30;
  }
  if (v64 >= (unint64_t)v56)
  {
LABEL_30:
    uint64_t v67 = v132;
    unint64_t v163 = v64;
    uint64_t v164 = v56;
    unint64_t v161 = 0;
    unint64_t v162 = 0xE000000000000000;
    sub_1005E2E90();
    v166._countAndFlagsBits = 3026478;
    v166._object = (void *)0xE300000000000000;
    sub_1005E1E30(v166);
    sub_1005E2E90();
    unint64_t v161 = sub_1005904BC(v161, v162, (uint64_t *)&v165);
    sub_1005E2960();
    uint64_t v68 = (uint64_t)v144;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v67 + 32) = 512;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOWORD(v161) = v153;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_WORD *)(v67 + 36) = 2080;
    swift_bridgeObjectRetain_n();
    uint64_t v69 = sub_1005A9014(v68);
    swift_bridgeObjectRelease();
    unint64_t v161 = (unint64_t)v69;
    sub_10054C314((uint64_t *)&v161);
    swift_bridgeObjectRelease();
    unint64_t v70 = v161;
    int64_t v71 = *(void *)(v161 + 16);
    if (v71)
    {
      unint64_t v161 = (unint64_t)_swiftEmptyArrayStorage;
      sub_100590C74(0, v71, 0);
      uint64_t v72 = (void *)v161;
      v130[1] = v70;
      unint64_t v73 = v70 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1005E1DF0();
        uint64_t v74 = sub_1005E1F50();
        uint64_t v76 = v75;
        uint64_t v78 = v77;
        uint64_t v80 = v79;
        swift_bridgeObjectRelease();
        unint64_t v161 = (unint64_t)v72;
        unint64_t v82 = v72[2];
        unint64_t v81 = v72[3];
        if (v82 >= v81 >> 1)
        {
          sub_100590C74(v81 > 1, v82 + 1, 1);
          uint64_t v72 = (void *)v161;
        }
        v73 += 16;
        v72[2] = v82 + 1;
        uint64_t v83 = &v72[4 * v82];
        v83[4] = v74;
        v83[5] = v76;
        id v83[6] = v78;
        v83[7] = v80;
        --v71;
      }
      while (v71);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v72 = _swiftEmptyArrayStorage;
    }
    uint64_t v84 = v132;
    unint64_t v161 = (unint64_t)v72;
    sub_10000566C(&qword_100718CE8);
    sub_100007494(&qword_100718CF0, &qword_100718CE8);
    sub_100550648();
    uint64_t v85 = sub_1005E2060();
    unint64_t v87 = v86;
    swift_bridgeObjectRelease();
    unint64_t v161 = sub_1005904BC(v85, v87, (uint64_t *)&v165);
    sub_1005E2960();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    unint64_t v55 = (void *)v143;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v84 + 46) = 512;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOWORD(v161) = v158;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_WORD *)(v84 + 50) = 512;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOWORD(v161) = v137;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_log_t v88 = v131;
    _os_log_impl((void *)&_mh_execute_header, v131, (os_log_type_t)v156, "Starting batch %llu with %ld items (%s). Adding %hu {%s}. Updating %hu. Deleting %hu.", (uint8_t *)v84, 0x36u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v148 + 8))(v149, v155);
    uint64_t v66 = v145;
    unint64_t v48 = v159;
    int v20 = v160;
    uint64_t v51 = v157;
    goto LABEL_38;
  }
  __break(1u);
LABEL_28:

  uint64_t v66 = v145;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  v11[1](v56, v155);
LABEL_38:
  (*(void (**)(uint64_t))(v141 + 32))(v140);
  uint64_t v89 = _swiftEmptyArrayStorage;
  unint64_t v161 = (unint64_t)_swiftEmptyArrayStorage;
  if (!v48)
  {
    id v121 = _swiftEmptyArrayStorage;
    goto LABEL_68;
  }
  uint64_t v90 = v66 + ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80));
  uint64_t v155 = *(void *)(v147 + 72);
  swift_bridgeObjectRetain();
  uint64_t v156 = _swiftEmptyArrayStorage;
  uint64_t v91 = (uint64_t)v151;
  do
  {
    sub_1005B95B0(v90, v91, type metadata accessor for PendingItem);
    sub_1005B95B0(v91 + *(int *)(v51 + 24), (uint64_t)v20, type metadata accessor for PendingItem.Info);
    int v96 = swift_getEnumCaseMultiPayload();
    if (!v96)
    {
      unint64_t v159 = v48;
      uint64_t v92 = (uint64_t)v152;
      sub_100583584((uint64_t)v20, (uint64_t)v152);
      sub_10053EB74();
      uint64_t v93 = *(void *)(v91 + 8);
      uint64_t v94 = v146;
      sub_1005B95B0(v92, v146, type metadata accessor for PendingItem.AddMessage);
      long long v95 = v150;
      sub_1005E0960();
      sub_1005AC36C(v93, v94, v95);
      sub_1005B9618(v92, type metadata accessor for PendingItem.AddMessage);
LABEL_41:
      sub_1005E20A0();
      unint64_t v48 = v159;
      if (*(void *)((v161 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v161 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1005E2110();
      }
      sub_1005E2170();
      sub_1005E20E0();
      uint64_t v91 = (uint64_t)v151;
      goto LABEL_44;
    }
    if (v96 == 1)
    {
      unint64_t v159 = v48;
      uint64_t v97 = *v20;
      int v98 = v20[1];
      int v99 = v160[2];
      int v100 = v160[3];
      int v101 = v160[4];
      uint64_t v102 = v91;
      int v103 = v160[5];
      unint64_t v148 = v160[6];
      LODWORD(v149) = v160[8];
      uint64_t v147 = v160[7];
      sub_10053EB74();
      uint64_t v104 = *(void *)(v102 + 8);
      uint64_t v105 = v150;
      sub_1005E0960();
      BOOL v106 = v98 == 0;
      uint64_t v51 = v157;
      uint64_t v107 = 256;
      if (v106) {
        uint64_t v107 = 0;
      }
      uint64_t v108 = v107 | v97;
      BOOL v106 = v99 == 0;
      int v20 = v160;
      uint64_t v109 = 0x10000;
      if (v106) {
        uint64_t v109 = 0;
      }
      uint64_t v110 = 0x1000000;
      if (!v100) {
        uint64_t v110 = 0;
      }
      uint64_t v111 = v108 | v109 | v110;
      NIOIMAPCore2::MailboxName v112 = &_mh_execute_header;
      if (!v101) {
        NIOIMAPCore2::MailboxName v112 = 0;
      }
      uint64_t v113 = 0x10000000000;
      if (!v103) {
        uint64_t v113 = 0;
      }
      sub_1005AC8A0(v104, v111 | (unint64_t)v112 | v113 | (v148 << 48) | (v147 << 56), v149, v105);
      goto LABEL_41;
    }
    uint64_t v165 = *(void (***)(char *, uint64_t))(v91 + 8);
    uint64_t v114 = sub_1005E3230();
    uint64_t v116 = v115;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      id v117 = v156;
    }
    else {
      id v117 = sub_100571D04(0, v156[2] + 1, 1, v156);
    }
    unint64_t v119 = v117[2];
    unint64_t v118 = v117[3];
    if (v119 >= v118 >> 1) {
      id v117 = sub_100571D04((void *)(v118 > 1), v119 + 1, 1, v117);
    }
    v117[2] = v119 + 1;
    uint64_t v156 = v117;
    char v120 = &v117[2 * v119];
    v120[4] = v114;
    v120[5] = v116;
LABEL_44:
    sub_1005B9618(v91, type metadata accessor for PendingItem);
    v90 += v155;
    --v48;
  }
  while (v48);
  swift_bridgeObjectRelease();
  uint64_t v89 = (void *)v161;
  unint64_t v55 = (void *)v143;
  id v121 = v156;
LABEL_68:
  uint64_t v122 = v141;
  uint64_t v123 = v139;
  uint64_t v124 = v140;
  (*(void (**)(void *, void, void, uint64_t, uint64_t))(v141 + 48))(v89, 0, 0, v140, v141);
  swift_bridgeObjectRelease();
  (*(void (**)(void *, void, void, uint64_t, uint64_t))(v122 + 56))(v121, 0, 0, v124, v122);
  swift_bridgeObjectRelease();
  unint64_t v125 = v138;
  uint64_t result = sub_1005B80FC(v138, v123, v133, v134, v124, v122);
  uint64_t v127 = v136;
  unint64_t v128 = v135;
  *unint64_t v136 = v125;
  v127[1] = v128;
  unint64_t v129 = (unint64_t)v142;
  v127[2] = (unint64_t)v55;
  v127[3] = v129;
  _OWORD v127[4] = (unint64_t)v144;
  *((_WORD *)v127 + 20) = v153;
  *((_WORD *)v127 + 21) = v158;
  *((_WORD *)v127 + 22) = v137;
  *((unsigned char *)v127 + 46) = 0;
  return result;
}

void sub_1005B7580(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v52 = a2;
  uint64_t v53 = a1;
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005E1850();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (void *)((char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = (void *)v4[4];
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  LOBYTE(v14) = sub_1005E1860();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  swift_beginAccess();
  if (v4[14] >> 62 != 2)
  {
    if (qword_1007187F8 == -1)
    {
LABEL_10:
      sub_1003461B0(v6, (uint64_t)qword_10071AA30);
      uint64_t v26 = sub_1005E0EB0();
      os_log_type_t v27 = sub_1005E25B0();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v28 = 134217984;
        uint64_t v54 = v53;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Did finish processing batch %llu, but not currently processing.", v28, 0xCu);
        swift_slowDealloc();
      }

      return;
    }
LABEL_31:
    swift_once();
    goto LABEL_10;
  }
  uint64_t v16 = v4[7];
  uint64_t v51 = v4[8];
  uint64_t v18 = v4[10];
  uint64_t v17 = v4[11];
  uint64_t v19 = v4[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16 == v53)
  {
    uint64_t v49 = v18;
    __uint64_t v50 = static MonotonicTime.now()();
    if (qword_1007187F8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1003461B0(v6, (uint64_t)qword_10071AA30);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v20, v6);
    swift_beginAccess();
    unint64_t v21 = v4[14];
    uint64_t v48 = v17;
    if (v21 >> 62 == 2)
    {
      uint64_t v22 = v4[13];
      uint64_t v46 = v4[15];
      uint64_t v47 = v19;
      uint64_t v23 = v4[12];
      uint64_t v24 = v21 & 1;
      v44[1] = v4[9];
      uint64_t v45 = v22;
      swift_unknownObjectRelease();
      if ((v23 & 0x1000000000000) != 0)
      {
        v44[0] = v4 + 15;
        __uint64_t v32 = static MonotonicTime.now()();
        sub_1005B3D14(v32, (uint64_t)v9, v45, v24 != 0, v46);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __uint64_t v33 = v50;
        v4[7] = 0;
        v4[8] = v33;
        *(_OWORD *)(v4 + 9) = 0u;
        *(_OWORD *)(v4 + 11) = 0u;
        v4[13] = 0;
        v4[14] = 0x4000000000000000;
        uint64_t v34 = v44[0];
        *(void *)v44[0] = 0;
        *(void *)(v34 + 8) = 0;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __uint64_t v25 = v50;
        v4[7] = 0;
        v4[8] = v25;
        v4[9] = v45;
        v4[10] = v24;
        v4[11] = v46;
        *((_OWORD *)v4 + 6) = 0u;
        *((_OWORD *)v4 + 7) = 0u;
        v4[16] = 0;
      }
    }
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (a3)
    {
      uint64_t v38 = v52;
      swift_errorRetain();
      uint64_t v35 = sub_1005E0EB0();
      os_log_type_t v39 = sub_1005E25A0();
      if (os_log_type_enabled(v35, v39))
      {
        uint64_t v40 = swift_slowAlloc();
        uint64_t v41 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 134218242;
        uint64_t v54 = v53;
        sub_1005E2960();
        *(_WORD *)(v40 + 12) = 2112;
        uint64_t v42 = sub_1005E06E0();
        uint64_t v54 = v42;
        sub_1005E2960();
        *uint64_t v41 = v42;
        _os_log_impl((void *)&_mh_execute_header, v35, v39, "Did fail processing batch %llu: %@", (uint8_t *)v40, 0x16u);
        sub_10000566C(&qword_100718A08);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_1005B9700(v38, 1);
LABEL_26:
        uint64_t v43 = v49;
        if (swift_unknownObjectWeakLoadStrong())
        {
          sub_10055C538(v43, v51);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1005B5234(v50);
        return;
      }
      sub_1005B9700(v38, 1);
    }
    else
    {
      uint64_t v35 = sub_1005E0EB0();
      os_log_type_t v36 = sub_1005E25C0();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v37 = 134217984;
        uint64_t v54 = v53;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Did finish processing batch %llu.", v37, 0xCu);
        swift_slowDealloc();
      }
    }

    goto LABEL_26;
  }
  if (qword_1007187F8 != -1) {
    swift_once();
  }
  sub_1003461B0(v6, (uint64_t)qword_10071AA30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v29 = sub_1005E0EB0();
  os_log_type_t v30 = sub_1005E25B0();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 134218240;
    uint64_t v54 = v53;
    sub_1005E2960();
    *(_WORD *)(v31 + 12) = 2048;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v54 = v16;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Did finish processing batch %llu, but currently processing batch %llu.", (uint8_t *)v31, 0x16u);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1005B7DB8(void *a1)
{
  uint64_t v2 = sub_1005E0ED0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  os_log_type_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007187F8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1003461B0(v2, (uint64_t)qword_10071AA30);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  swift_beginAccess();
  __uint64_t v7 = static MonotonicTime.now()();
  uint64_t v8 = a1[15];
  uint64_t v9 = a1[8];
  uint64_t v10 = a1[9];
  uint64_t v11 = a1[10];
  uint64_t v12 = a1[11];
  uint64_t v13 = a1[12];
  uint64_t v14 = a1[13];
  unint64_t v15 = a1[14];
  switch(v15 >> 62)
  {
    case 1uLL:
    case 3uLL:
      break;
    case 2uLL:
      a1[12] = v13 & 0xFFFFFFFFFFFFLL | 0x1000000000000;
      a1[14] = v15 & 1 | 0x8000000000000000;
      break;
    default:
      uint64_t v23 = a1[7];
      uint64_t v24 = v9;
      char v25 = v11 & 1;
      uint64_t v19 = v8;
      uint64_t v20 = v10;
      uint64_t v21 = v13;
      uint64_t v22 = v14;
      sub_1005B3D14(v7, (uint64_t)v5, v10, v11 & 1, v12);
      uint64_t v16 = v23;
      sub_1005B3930(v23, v24, v20, v11, v12, v21, v22, v15);
      uint64_t v17 = v24;
      a1[7] = v16;
      a1[8] = v17;
      *(_OWORD *)(a1 + 9) = 0u;
      *(_OWORD *)(a1 + 11) = 0u;
      a1[13] = 0;
      a1[14] = 0x4000000000000000;
      a1[15] = 0;
      a1[16] = 0;
      break;
  }
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1005B8004(uint64_t a1, void (*a2)(__n128), uint64_t a3)
{
  swift_beginAccess();
  __uint64_t v5 = static MonotonicTime.now()();
  sub_1005B3E6C(v5, a2, a3);
  return swift_endAccess();
}

uint64_t sub_1005B8070()
{
  return sub_1005B8004(*(void *)(v0 + 16), *(void (**)(__n128))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1005B807C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005B808C()
{
  return swift_release();
}

uint64_t sub_1005B8094()
{
  return sub_1005B7DB8(v0);
}

uint64_t sub_1005B809C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005B80D4()
{
  return sub_1005B508C(*(void *)(v0 + 24));
}

uint64_t sub_1005B80FC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v17 = bswap64(a1);
  uint64_t v11 = sub_100579428((uint64_t)&v17, (uint64_t)&v18);
  unint64_t v13 = v12;
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a3;
  void v14[3] = a4;
  v14[4] = a1;
  unint64_t v15 = *(void (**)(uint64_t, unint64_t, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(a6 + 40);
  swift_retain();
  v15(v11, v13, sub_1005B96B0, v14, a5, a6);
  swift_release();
  return sub_1000094D4(v11, v13);
}

uint64_t sub_1005B8220(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1007187F8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1005E0ED0();
  sub_1003461B0(v6, (uint64_t)qword_10071AA30);
  __uint64_t v7 = sub_1005E0EB0();
  os_log_type_t v8 = sub_1005E25A0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Spotlight is requesting a re-index of all items.", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v11 = result;
    unint64_t v12 = (void *)swift_allocObject();
    uint64_t v12[2] = v3;
    uint64_t v12[3] = a1;
    _DWORD v12[4] = a2;
    unint64_t v13 = *(void **)(v11 + 16);
    uint64_t v14 = (void *)swift_allocObject();
    void v14[2] = v11;
    void v14[3] = sub_1005B9844;
    v14[4] = v12;
    v16[4] = sub_1005B98CC;
    v16[5] = v14;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    void v16[2] = sub_10046A1E4;
    v16[3] = &unk_1006FF4E8;
    unint64_t v15 = _Block_copy(v16);
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    [v13 performBlock:v15];
    _Block_release(v15);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1005B8438(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (qword_1007187F8 != -1) {
    goto LABEL_86;
  }
  while (1)
  {
    uint64_t v7 = sub_1005E0ED0();
    sub_1003461B0(v7, (uint64_t)qword_10071AA30);
    swift_bridgeObjectRetain_n();
    os_log_type_t v8 = sub_1005E0EB0();
    os_log_type_t v9 = sub_1005E2580();
    uint64_t v62 = a2;
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136446210;
      sub_10000566C(&qword_100719428);
      sub_100007494(&qword_100719430, &qword_100719428);
      uint64_t v11 = sub_1005E1A80();
      sub_1005904BC(v11, v12, &aBlock);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Spotlight is requesting a re-index of %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v13 = a1[2];
      if (!v13) {
        break;
      }
      goto LABEL_4;
    }

    swift_bridgeObjectRelease_n();
    uint64_t v13 = a1[2];
    if (!v13) {
      break;
    }
LABEL_4:
    uint64_t v14 = a1 + 4;
    swift_bridgeObjectRetain();
    a2 = 0;
    a1 = _swiftEmptyArrayStorage;
    while (1)
    {
      unint64_t v15 = &v14[2 * a2];
      uint64_t v16 = *v15;
      unint64_t v17 = v15[1];
      uint64_t v18 = HIBYTE(v17) & 0xF;
      uint64_t v19 = v16 & 0xFFFFFFFFFFFFLL;
      if ((v17 & 0x2000000000000000) != 0) {
        uint64_t v20 = HIBYTE(v17) & 0xF;
      }
      else {
        uint64_t v20 = v16 & 0xFFFFFFFFFFFFLL;
      }
      if (!v20) {
        goto LABEL_6;
      }
      if ((v17 & 0x1000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        unint64_t v24 = sub_100567C60(v16, v17, 10);
        char v42 = v41;
        swift_bridgeObjectRelease();
        if ((v42 & 1) == 0) {
          goto LABEL_42;
        }
        goto LABEL_6;
      }
      if ((v17 & 0x2000000000000000) == 0)
      {
        if ((v16 & 0x1000000000000000) != 0) {
          uint64_t v21 = (unsigned __int8 *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else {
          uint64_t v21 = (unsigned __int8 *)sub_1005E2D30();
        }
        uint64_t v22 = sub_100567C48(v21, v19, 10);
        if ((v23 & 1) == 0)
        {
          unint64_t v24 = (unint64_t)v22;
LABEL_42:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            a1 = sub_100571E14(0, a1[2] + 1, 1, a1);
          }
          unint64_t v32 = a1[2];
          unint64_t v31 = a1[3];
          if (v32 >= v31 >> 1) {
            a1 = sub_100571E14((void *)(v31 > 1), v32 + 1, 1, a1);
          }
          a1[2] = v32 + 1;
          a1[v32 + 4] = v24;
          goto LABEL_6;
        }
        goto LABEL_6;
      }
      uint64_t aBlock = v16;
      uint64_t v64 = v17 & 0xFFFFFFFFFFFFFFLL;
      if (v16 == 43)
      {
        if (!v18) {
          goto LABEL_85;
        }
        if (v18 != 1 && (BYTE1(v16) - 48) <= 9u)
        {
          unint64_t v24 = (BYTE1(v16) - 48);
          if (v18 == 2) {
            goto LABEL_42;
          }
          if ((BYTE2(v16) - 48) <= 9u)
          {
            unint64_t v24 = 10 * (BYTE1(v16) - 48) + (BYTE2(v16) - 48);
            uint64_t v28 = v18 - 3;
            if (v18 != 3)
            {
              int v29 = (unsigned __int8 *)&aBlock + 3;
              while (1)
              {
                unsigned int v30 = *v29 - 48;
                if (v30 > 9) {
                  goto LABEL_6;
                }
                if (!is_mul_ok(v24, 0xAuLL)) {
                  goto LABEL_6;
                }
                BOOL v26 = __CFADD__(10 * v24, v30);
                unint64_t v24 = 10 * v24 + v30;
                if (v26) {
                  goto LABEL_6;
                }
                ++v29;
                if (!--v28) {
                  goto LABEL_42;
                }
              }
            }
            goto LABEL_42;
          }
        }
        goto LABEL_6;
      }
      if (v16 != 45)
      {
        if (v18 && (v16 - 48) <= 9u)
        {
          unint64_t v24 = (v16 - 48);
          if (v18 == 1) {
            goto LABEL_42;
          }
          if ((BYTE1(v16) - 48) <= 9u)
          {
            unint64_t v24 = 10 * (v16 - 48) + (BYTE1(v16) - 48);
            uint64_t v33 = v18 - 2;
            if (v18 != 2)
            {
              uint64_t v34 = (unsigned __int8 *)&aBlock + 2;
              while (1)
              {
                unsigned int v35 = *v34 - 48;
                if (v35 > 9) {
                  goto LABEL_6;
                }
                if (!is_mul_ok(v24, 0xAuLL)) {
                  goto LABEL_6;
                }
                BOOL v26 = __CFADD__(10 * v24, v35);
                unint64_t v24 = 10 * v24 + v35;
                if (v26) {
                  goto LABEL_6;
                }
                ++v34;
                if (!--v33) {
                  goto LABEL_42;
                }
              }
            }
            goto LABEL_42;
          }
        }
        goto LABEL_6;
      }
      if (!v18) {
        break;
      }
      if (v18 != 1)
      {
        unsigned __int8 v25 = BYTE1(v16) - 48;
        if ((BYTE1(v16) - 48) <= 9u)
        {
          BOOL v26 = v25 == 0;
          unint64_t v27 = -(uint64_t)v25;
          if (v26)
          {
            if (v18 == 2)
            {
              unint64_t v24 = v27;
              goto LABEL_42;
            }
            unsigned __int8 v36 = BYTE2(v16) - 48;
            if ((BYTE2(v16) - 48) <= 9u && is_mul_ok(v27, 0xAuLL))
            {
              unint64_t v37 = 10 * v27;
              unint64_t v24 = v37 - v36;
              if (v37 >= v36)
              {
                uint64_t v38 = v18 - 3;
                if (v18 != 3)
                {
                  os_log_type_t v39 = (unsigned __int8 *)&aBlock + 3;
                  while (1)
                  {
                    unsigned int v40 = *v39 - 48;
                    if (v40 > 9) {
                      goto LABEL_6;
                    }
                    if (!is_mul_ok(v24, 0xAuLL)) {
                      goto LABEL_6;
                    }
                    BOOL v26 = 10 * v24 >= v40;
                    unint64_t v24 = 10 * v24 - v40;
                    if (!v26) {
                      goto LABEL_6;
                    }
                    ++v39;
                    if (!--v38) {
                      goto LABEL_42;
                    }
                  }
                }
                goto LABEL_42;
              }
            }
          }
        }
      }
LABEL_6:
      if (++a2 == v13)
      {
        swift_bridgeObjectRelease();
        goto LABEL_72;
      }
    }
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    swift_once();
  }
  a1 = _swiftEmptyArrayStorage;
LABEL_72:
  uint64_t v43 = a1[2];
  if (v43 == v13)
  {
    swift_bridgeObjectRetain();
    unint64_t v44 = sub_1005E0EB0();
    os_log_type_t v45 = sub_1005E25A0();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 134217984;
      uint64_t aBlock = v13;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      uint64_t v47 = "Spotlight is requesting a re-index of %ld items.";
      uint64_t v48 = v44;
      os_log_type_t v49 = v45;
      __uint64_t v50 = v46;
      uint32_t v51 = 12;
      goto LABEL_77;
    }

LABEL_80:
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v44 = sub_1005E0EB0();
    os_log_type_t v52 = sub_1005E25A0();
    if (!os_log_type_enabled(v44, v52))
    {

      swift_bridgeObjectRelease();
      goto LABEL_80;
    }
    uint64_t v53 = swift_slowAlloc();
    *(_DWORD *)uint64_t v53 = 134218240;
    uint64_t aBlock = v13;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 12) = 2048;
    uint64_t aBlock = v43;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    uint64_t v47 = "Spotlight is requesting a re-index of %ld items, but only %ld identifiers were valid.";
    uint64_t v48 = v44;
    os_log_type_t v49 = v52;
    __uint64_t v50 = (uint8_t *)v53;
    uint32_t v51 = 22;
LABEL_77:
    _os_log_impl((void *)&_mh_execute_header, v48, v49, v47, v50, v51);
    swift_slowDealloc();
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v55 = Strong;
  uint64_t v56 = (void *)swift_allocObject();
  void v56[2] = v4;
  v56[3] = v62;
  uint64_t v56[4] = a3;
  uint64_t v57 = *(void **)(v55 + 16);
  uint64_t v58 = (void *)swift_allocObject();
  uint64_t v58[2] = v55;
  v58[3] = a1;
  v58[4] = sub_1005B974C;
  v58[5] = v56;
  uint64_t v67 = sub_1005B97D8;
  uint64_t v68 = v58;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v64 = 1107296256;
  char v65 = sub_10046A1E4;
  uint64_t v66 = &unk_1006FF420;
  uint64_t v59 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  [v57 performBlock:v59];
  _Block_release(v59);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_1005B8CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v20 = a6;
  uint64_t v9 = sub_1005E1680();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  unint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1005E16C0();
  uint64_t v13 = *(void *)(v21 - 8);
  __chkstk_darwin();
  unint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  aBlock[4] = a5;
  void aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046A1E4;
  aBlock[3] = v20;
  unint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  sub_1005E16A0();
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_10054007C();
  sub_10000566C((uint64_t *)&unk_100719780);
  sub_100007494((unint64_t *)&qword_100718A00, (uint64_t *)&unk_100719780);
  sub_1005E2AD0();
  sub_1005E2610();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v21);
  return swift_release();
}

uint64_t sub_1005B8F4C(uint64_t (*a1)(void), uint64_t a2, const char *a3)
{
  if (qword_1007187F8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1005E0ED0();
  sub_1003461B0(v5, (uint64_t)qword_10071AA30);
  uint64_t v6 = sub_1005E0EB0();
  os_log_type_t v7 = sub_1005E25C0();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, a3, v8, 2u);
    swift_slowDealloc();
  }

  return a1();
}

uint64_t sub_1005B9040(uint64_t result)
{
  uint64_t v1 = result + 56;
  char v2 = *(unsigned char *)(result + 32);
  uint64_t v3 = 1 << v2;
  uint64_t v4 = -1;
  if (1 << v2 < 64) {
    uint64_t v4 = ~(-1 << (1 << v2));
  }
  unint64_t v5 = v4 & *(void *)(result + 56);
  if (v5)
  {
    uint64_t v6 = 0;
    unint64_t v7 = __clz(__rbit64(v5));
    unint64_t v8 = (v5 - 1) & v5;
    int64_t v9 = (unint64_t)(v3 + 63) >> 6;
  }
  else
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 <= 6) {
      return 0;
    }
    int64_t v9 = (unint64_t)(v3 + 63) >> 6;
    unint64_t v18 = *(void *)(result + 64);
    if (v18)
    {
      uint64_t v6 = 1;
    }
    else
    {
      if (v6 < 8) {
        return 0;
      }
      unint64_t v18 = *(void *)(result + 72);
      if (v18)
      {
        uint64_t v6 = 2;
      }
      else
      {
        unint64_t v18 = *(void *)(result + 80);
        if (v18)
        {
          uint64_t v6 = 3;
        }
        else
        {
LABEL_37:
          if (v6 < 9) {
            return 0;
          }
          unint64_t v18 = *(void *)(result + 88);
          if (v18)
          {
            uint64_t v6 = 4;
          }
          else
          {
            unint64_t v18 = *(void *)(result + 96);
            if (!v18) {
              goto LABEL_43;
            }
            uint64_t v6 = 5;
          }
        }
      }
    }
LABEL_30:
    unint64_t v8 = (v18 - 1) & v18;
    unint64_t v7 = __clz(__rbit64(v18)) + (v6 << 6);
  }
  uint64_t v10 = *(void *)(result + 48);
  uint64_t result = *(void *)(v10 + 8 * v7);
  unint64_t v11 = result;
  while (v8)
  {
    unint64_t v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v13 = v12 | (v6 << 6);
LABEL_7:
    unint64_t v14 = *(void *)(v10 + 8 * v13);
    if (v14 < v11)
    {
      uint64_t result = v14;
      unint64_t v11 = v14;
    }
  }
  int64_t v15 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v15 >= v9) {
    return result;
  }
  unint64_t v16 = *(void *)(v1 + 8 * v15);
  ++v6;
  if (v16) {
    goto LABEL_25;
  }
  uint64_t v6 = v15 + 1;
  if (v15 + 1 >= v9) {
    return result;
  }
  unint64_t v16 = *(void *)(v1 + 8 * v6);
  if (v16) {
    goto LABEL_25;
  }
  uint64_t v6 = v15 + 2;
  if (v15 + 2 >= v9) {
    return result;
  }
  unint64_t v16 = *(void *)(v1 + 8 * v6);
  if (v16) {
    goto LABEL_25;
  }
  uint64_t v6 = v15 + 3;
  if (v15 + 3 >= v9) {
    return result;
  }
  unint64_t v16 = *(void *)(v1 + 8 * v6);
  if (v16)
  {
LABEL_25:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v6 << 6);
    goto LABEL_7;
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v9) {
    return result;
  }
  unint64_t v16 = *(void *)(v1 + 8 * v17);
  if (v16)
  {
    uint64_t v6 = v17;
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v6 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v6 >= v9) {
      return result;
    }
    unint64_t v16 = *(void *)(v1 + 8 * v6);
    ++v17;
    if (v16) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_43:
  uint64_t v19 = 0;
  uint64_t v20 = 6;
  if (v9 > 6) {
    uint64_t v20 = v9;
  }
  uint64_t v21 = v20 - 6;
  while (v21 != v19)
  {
    unint64_t v18 = *(void *)(result + 104 + 8 * v19++);
    if (v18)
    {
      uint64_t v6 = v19 + 5;
      goto LABEL_30;
    }
  }
  return 0;
}

uint64_t sub_1005B9240(uint64_t result)
{
  uint64_t v1 = result + 56;
  char v2 = *(unsigned char *)(result + 32);
  uint64_t v3 = 1 << v2;
  uint64_t v4 = -1;
  if (1 << v2 < 64) {
    uint64_t v4 = ~(-1 << (1 << v2));
  }
  unint64_t v5 = v4 & *(void *)(result + 56);
  if (v5)
  {
    uint64_t v6 = 0;
    unint64_t v7 = __clz(__rbit64(v5));
    unint64_t v8 = (v5 - 1) & v5;
    int64_t v9 = (unint64_t)(v3 + 63) >> 6;
  }
  else
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 <= 6) {
      return 0;
    }
    int64_t v9 = (unint64_t)(v3 + 63) >> 6;
    unint64_t v18 = *(void *)(result + 64);
    if (v18)
    {
      uint64_t v6 = 1;
    }
    else
    {
      if (v6 < 8) {
        return 0;
      }
      unint64_t v18 = *(void *)(result + 72);
      if (v18)
      {
        uint64_t v6 = 2;
      }
      else
      {
        unint64_t v18 = *(void *)(result + 80);
        if (v18)
        {
          uint64_t v6 = 3;
        }
        else
        {
LABEL_39:
          if (v6 < 9) {
            return 0;
          }
          unint64_t v18 = *(void *)(result + 88);
          if (v18)
          {
            uint64_t v6 = 4;
          }
          else
          {
            unint64_t v18 = *(void *)(result + 96);
            if (!v18) {
              goto LABEL_45;
            }
            uint64_t v6 = 5;
          }
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v18 - 1) & v18;
    unint64_t v7 = __clz(__rbit64(v18)) + (v6 << 6);
  }
  uint64_t v10 = *(void *)(result + 48);
  uint64_t result = *(void *)(v10 + 8 * v7);
  unint64_t v11 = result;
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_7;
    }
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v9) {
      return result;
    }
    unint64_t v16 = *(void *)(v1 + 8 * v15);
    ++v6;
    if (!v16)
    {
      uint64_t v6 = v15 + 1;
      if (v15 + 1 >= v9) {
        return result;
      }
      unint64_t v16 = *(void *)(v1 + 8 * v6);
      if (!v16)
      {
        uint64_t v6 = v15 + 2;
        if (v15 + 2 >= v9) {
          return result;
        }
        unint64_t v16 = *(void *)(v1 + 8 * v6);
        if (!v16)
        {
          uint64_t v6 = v15 + 3;
          if (v15 + 3 >= v9) {
            return result;
          }
          unint64_t v16 = *(void *)(v1 + 8 * v6);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v6 << 6);
LABEL_7:
    unint64_t v14 = *(void *)(v10 + 8 * v13);
    if (v11 < v14) {
      uint64_t result = v14;
    }
    if (v11 <= v14) {
      unint64_t v11 = v14;
    }
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v9) {
    return result;
  }
  unint64_t v16 = *(void *)(v1 + 8 * v17);
  if (v16)
  {
    uint64_t v6 = v17;
    goto LABEL_27;
  }
  while (1)
  {
    uint64_t v6 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v6 >= v9) {
      return result;
    }
    unint64_t v16 = *(void *)(v1 + 8 * v6);
    ++v17;
    if (v16) {
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_45:
  uint64_t v19 = 0;
  uint64_t v20 = 6;
  if (v9 > 6) {
    uint64_t v20 = v9;
  }
  uint64_t v21 = v20 - 6;
  while (v21 != v19)
  {
    unint64_t v18 = *(void *)(result + 104 + 8 * v19++);
    if (v18)
    {
      uint64_t v6 = v19 + 5;
      goto LABEL_32;
    }
  }
  return 0;
}

uint64_t sub_1005B9440(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  if (!a1) {
    return a2(a4, 0, 0);
  }
  swift_errorRetain();
  a2(a4, a1, 1);
  return swift_errorRelease();
}

uint64_t sub_1005B94C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005B9510(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 0xC0) == 0x40) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1005B9524(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005B956C()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005B95A4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1005B6008(a1, a2, a3 & 1);
}

uint64_t sub_1005B95B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005B9618(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005B9678()
{
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005B96B0(uint64_t a1)
{
  return sub_1005B9440(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1005B96BC()
{
  swift_release();
  sub_1005B9700(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_1005B9700(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

void sub_1005B970C()
{
  sub_1005B7580(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_1005B973C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_1005B974C()
{
  return sub_1005B8CC4(v0[2], v0[3], v0[4], (uint64_t)&unk_1006FF458, (uint64_t)sub_1005B981C, (uint64_t)&unk_1006FF470);
}

uint64_t sub_1005B9790()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005B97D8()
{
  return sub_10055D808(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(id))(v0 + 32));
}

uint64_t sub_1005B97E4()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005B981C()
{
  return sub_1005B8F4C(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), "Done marking items for re-indexing.");
}

uint64_t sub_1005B9844()
{
  return sub_1005B8CC4(v0[2], v0[3], v0[4], (uint64_t)&unk_1006FF520, (uint64_t)sub_1005B98D8, (uint64_t)&unk_1006FF538);
}

uint64_t sub_1005B988C()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005B98CC()
{
  return sub_10055CF8C(*(void *)(v0 + 16), *(uint64_t (**)(id))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1005B98D8()
{
  return sub_1005B8F4C(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), "Done marking all items for re-indexing.");
}

uint64_t _s13IndexDelegateCMa()
{
  return self;
}

uint64_t sub_1005B9B88()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005B9BC0()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

ValueMetadata *type metadata accessor for SpotlightMailboxID()
{
  return &type metadata for SpotlightMailboxID;
}

Swift::Int sub_1005B9BE8()
{
  uint64_t v1 = *v0;
  sub_1005E33F0();
  id v2 = v1;
  sub_1005E2850();

  return sub_1005E3470();
}

void sub_1005B9C38()
{
  id v1 = *v0;
  sub_1005E2850();
}

Swift::Int sub_1005B9C90()
{
  id v1 = *v0;
  sub_1005E33F0();
  id v2 = v1;
  sub_1005E2850();

  return sub_1005E3470();
}

uint64_t sub_1005B9CDC()
{
  return sub_1005E2840() & 1;
}

unint64_t sub_1005B9D24()
{
  unint64_t result = qword_10071ABC0;
  if (!qword_10071ABC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071ABC0);
  }
  return result;
}

void *sub_1005B9D78(void *a1)
{
  id v1 = a1;
  id v2 = [a1 entity];
  id v3 = [v2 name];

  if (!v3) {
    goto LABEL_10;
  }
  uint64_t v4 = sub_1005E1C00();
  uint64_t v6 = v5;

  if (v4 == 0x786F626C69616DLL && v6 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      goto LABEL_10;
    }
  }
  if ([v1 isTemporaryID])
  {
LABEL_10:

    return 0;
  }
  return v1;
}

id sub_1005B9E74@<X0>(id result@<X0>, void *a2@<X8>)
{
  if (result) {
    unint64_t result = [result longLongValue];
  }
  *a2 = result;
  return result;
}

void sub_1005B9EA8()
{
  if (qword_1007187C8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1005E0ED0();
  sub_1003461B0(v0, (uint64_t)qword_1007623A8);
  osint log = sub_1005E0EB0();
  os_log_type_t v1 = sub_1005E2590();
  if (os_log_type_enabled(oslog, v1))
  {
    id v2 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v2 = 134217984;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "Saving current Spotlight message ID %llu.", v2, 0xCu);
    swift_slowDealloc();
  }
  else
  {
  }
}

ValueMetadata *type metadata accessor for _SpotlightMessageID()
{
  return &type metadata for _SpotlightMessageID;
}

id sub_1005B9FF0(void *a1)
{
  if (a1[1])
  {
    swift_bridgeObjectRetain();
    NSString v2 = sub_1005E1BD0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v2 = 0;
  }
  id v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_10000566C(&qword_100719D50);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1005F6670;
  uint64_t v5 = a1[3];
  *(void *)(v4 + 32) = a1[2];
  *(void *)(v4 + 40) = v5;
  swift_bridgeObjectRetain();
  sub_1003BE574((uint64_t)a1);
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [v3 initWithDisplayName:v2 handles:isa handleIdentifier:CNContactEmailAddressesKey];

  return v7;
}

uint64_t sub_1005BA0EC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  uint64_t v34 = *(void *)(a1 + 16);
  sub_100590D64(0, v1, 0);
  uint64_t v3 = sub_1000B1E48(a1);
  uint64_t v4 = a1;
  uint64_t v5 = v34;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 64;
  uint64_t v8 = a1 + 80;
  uint64_t result = -2;
  while ((v3 & 0x8000000000000000) == 0 && v3 < 1 << *(unsigned char *)(v4 + 32))
  {
    unint64_t v11 = (unint64_t)v3 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v3 >> 6)) & (1 << v3)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v4 + 36) != v2) {
      goto LABEL_24;
    }
    uint64_t v12 = *(void *)(*(void *)(v4 + 48) + 8 * v3);
    uint64_t v13 = *(void *)(v4 + 56) + 72 * v3;
    long long v14 = *(_OWORD *)v13;
    long long v15 = *(_OWORD *)(v13 + 16);
    long long v16 = *(_OWORD *)(v13 + 32);
    long long v17 = *(_OWORD *)(v13 + 48);
    uint64_t v18 = *(void *)(v13 + 64);
    unint64_t v20 = _swiftEmptyArrayStorage[2];
    unint64_t v19 = _swiftEmptyArrayStorage[3];
    if (v20 >= v19 >> 1)
    {
      uint64_t v32 = v7;
      uint64_t v33 = v2;
      uint64_t v31 = v8;
      long long v29 = v15;
      long long v30 = v14;
      long long v27 = v17;
      long long v28 = v16;
      sub_100590D64(v19 > 1, v20 + 1, 1);
      long long v17 = v27;
      long long v16 = v28;
      long long v15 = v29;
      long long v14 = v30;
      uint64_t result = -2;
      uint64_t v8 = v31;
      uint64_t v7 = v32;
      uint64_t v2 = v33;
      uint64_t v5 = v34;
      uint64_t v4 = a1;
    }
    _swiftEmptyArrayStorage[2] = v20 + 1;
    uint64_t v21 = &_swiftEmptyArrayStorage[12 * v20];
    void v21[4] = v12;
    *(_OWORD *)(v21 + 5) = v14;
    *(_OWORD *)(v21 + 7) = v15;
    *(_OWORD *)(v21 + 9) = v16;
    *(_OWORD *)(v21 + 11) = v17;
    *((unsigned char *)v21 + 104) = 0;
    v21[14] = v18;
    *((unsigned char *)v21 + 120) = 0;
    int64_t v10 = 1 << *(unsigned char *)(v4 + 32);
    if (v3 >= v10) {
      goto LABEL_25;
    }
    uint64_t v22 = *(void *)(v7 + 8 * v11);
    if ((v22 & (1 << v3)) == 0) {
      goto LABEL_26;
    }
    if (*(_DWORD *)(v4 + 36) != v2) {
      goto LABEL_27;
    }
    unint64_t v23 = v22 & (-2 << (v3 & 0x3F));
    if (v23)
    {
      int64_t v10 = __clz(__rbit64(v23)) | v3 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v24 = v11 + 1;
      unint64_t v25 = (unint64_t)(v10 + 63) >> 6;
      if (v11 + 1 < v25)
      {
        unint64_t v26 = *(void *)(v7 + 8 * v24);
        if (v26)
        {
LABEL_20:
          int64_t v10 = __clz(__rbit64(v26)) + (v24 << 6);
        }
        else
        {
          while (v25 - 2 != v11)
          {
            unint64_t v26 = *(void *)(v8 + 8 * v11++);
            if (v26)
            {
              unint64_t v24 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v6;
    uint64_t v3 = v10;
    if (v6 == v5) {
      return (uint64_t)_swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1005BA33C(uint64_t a1, uint64_t a2, void *a3)
{
  void *(*v23)(uint64_t *__return_ptr, uint64_t *);
  int64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  uint64_t v3 = *(void *)(*a3 + 64);
  long long v27 = *a3 + 64;
  long long v28 = (uint64_t (*)(uint64_t *))a3[1];
  uint64_t v46 = *a3;
  uint64_t v31 = v46;
  uint64_t v4 = -1 << *(unsigned char *)(v46 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  uint64_t v33 = v5 & v3;
  unint64_t v23 = (void *(*)(uint64_t *__return_ptr, uint64_t *))a3[3];
  sub_10002292C((uint64_t)&v46);
  unint64_t v26 = (unint64_t)(63 - v4) >> 6;
  swift_retain();
  uint64_t result = swift_retain();
  uint64_t v32 = 0;
  while (1)
  {
    if (v33)
    {
      unint64_t v7 = __clz(__rbit64(v33));
      v33 &= v33 - 1;
      unint64_t v8 = v7 | (v32 << 6);
      goto LABEL_6;
    }
    int64_t v18 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v18 >= v26) {
      goto LABEL_32;
    }
    unint64_t v19 = *(void *)(v27 + 8 * v18);
    if (!v19) {
      break;
    }
LABEL_17:
    uint64_t v32 = v18;
    uint64_t v33 = (v19 - 1) & v19;
    unint64_t v8 = __clz(__rbit64(v19)) + (v18 << 6);
LABEL_6:
    int64_t v9 = (uint64_t *)(*(void *)(v31 + 56) + 72 * v8);
    uint64_t v10 = *v9;
    uint64_t v11 = v9[1];
    uint64_t v12 = v9[2];
    uint64_t v13 = v9[3];
    uint64_t v14 = v9[4];
    uint64_t v15 = v9[5];
    uint64_t v17 = v9[6];
    uint64_t v16 = v9[7];
    long long v29 = v9[8];
    long long v30 = *(void *)(*(void *)(v31 + 48) + 8 * v8);
    unsigned __int8 v36 = v30;
    unint64_t v37 = v10;
    uint64_t v38 = v11;
    os_log_type_t v39 = v12;
    unsigned int v40 = v13;
    char v41 = v14;
    char v42 = v15;
    uint64_t v43 = v17;
    unint64_t v44 = v16;
    os_log_type_t v45 = v29;
    uint64_t result = v28(&v36);
    if (result)
    {
      unsigned __int8 v36 = v30;
      unint64_t v37 = v10;
      uint64_t v38 = v11;
      os_log_type_t v39 = v12;
      unsigned int v40 = v13;
      char v41 = v14;
      char v42 = v15;
      uint64_t v43 = v17;
      unint64_t v44 = v16;
      os_log_type_t v45 = v29;
      uint64_t result = (uint64_t)v23(&v34, &v36);
      if (__OFADD__(a1, v34)) {
        goto LABEL_34;
      }
      a1 += v34;
      BOOL v22 = __OFADD__(a2, v35);
      a2 += v35;
      if (v22) {
        goto LABEL_35;
      }
    }
  }
  int64_t v20 = v32 + 2;
  if (v32 + 2 >= v26) {
    goto LABEL_32;
  }
  unint64_t v19 = *(void *)(v27 + 8 * v20);
  if (v19) {
    goto LABEL_13;
  }
  int64_t v21 = v32 + 3;
  if (v32 + 3 >= v26) {
    goto LABEL_32;
  }
  unint64_t v19 = *(void *)(v27 + 8 * v21);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v32 + 4;
  if (v32 + 4 >= v26) {
    goto LABEL_32;
  }
  unint64_t v19 = *(void *)(v27 + 8 * v20);
  if (v19) {
    goto LABEL_13;
  }
  int64_t v21 = v32 + 5;
  if (v32 + 5 >= v26) {
    goto LABEL_32;
  }
  unint64_t v19 = *(void *)(v27 + 8 * v21);
  if (v19)
  {
LABEL_16:
    int64_t v18 = v21;
    goto LABEL_17;
  }
  int64_t v20 = v32 + 6;
  if (v32 + 6 >= v26)
  {
LABEL_32:
    sub_10003BC80();
    swift_release();
    swift_release();
    return a1;
  }
  unint64_t v19 = *(void *)(v27 + 8 * v20);
  if (v19)
  {
LABEL_13:
    int64_t v18 = v20;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v18 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v18 >= v26) {
      goto LABEL_32;
    }
    unint64_t v19 = *(void *)(v27 + 8 * v18);
    ++v20;
    if (v19) {
      goto LABEL_17;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1005BA644(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E0970();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_1005E08F0();
  double v9 = round(v8 / 21600.0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((~*(void *)&v9 & 0x7FF0000000000000) == 0) {
    return 0;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  int64_t v11 = 0;
  uint64_t v12 = (uint64_t)v9;
  uint64_t v13 = a2 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(a2 + 64);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v18 = v12 - 3;
  BOOL v19 = __OFSUB__(v12, 3);
  BOOL v20 = __OFADD__(v12, 1);
  uint64_t v21 = v12 + 1;
  char v22 = v20;
  while (1)
  {
    if (v16)
    {
      unint64_t v23 = __clz(__rbit64(v16));
      uint64_t result = v16 - 1;
      v16 &= v16 - 1;
      unint64_t v24 = v23 | (v11 << 6);
      if (v19) {
        goto LABEL_44;
      }
      goto LABEL_34;
    }
    int64_t v25 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_47;
    }
    if (v25 >= v17) {
      return 0;
    }
    unint64_t v26 = *(void *)(v13 + 8 * v25);
    ++v11;
    if (!v26)
    {
      int64_t v11 = v25 + 1;
      if (v25 + 1 >= v17) {
        return 0;
      }
      unint64_t v26 = *(void *)(v13 + 8 * v11);
      if (!v26)
      {
        int64_t v11 = v25 + 2;
        if (v25 + 2 >= v17) {
          return 0;
        }
        unint64_t v26 = *(void *)(v13 + 8 * v11);
        if (!v26)
        {
          int64_t v11 = v25 + 3;
          if (v25 + 3 >= v17) {
            return 0;
          }
          unint64_t v26 = *(void *)(v13 + 8 * v11);
          if (!v26)
          {
            int64_t v11 = v25 + 4;
            if (v25 + 4 >= v17) {
              return 0;
            }
            unint64_t v26 = *(void *)(v13 + 8 * v11);
            if (!v26) {
              break;
            }
          }
        }
      }
    }
LABEL_33:
    uint64_t result = __clz(__rbit64(v26));
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v24 = result + (v11 << 6);
    if (v19)
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
LABEL_34:
    if (v22) {
      goto LABEL_45;
    }
    if (v21 <= v18) {
      goto LABEL_46;
    }
    uint64_t result = *(void *)(*(void *)(a2 + 48) + 8 * v24);
    uint64_t v28 = *(void *)(*(void *)(a2 + 56) + 72 * v24 + 64);
    if (result > v18 && v21 >= result && v28 >= 1) {
      return 1;
    }
  }
  int64_t v27 = v25 + 5;
  if (v27 >= v17) {
    return 0;
  }
  unint64_t v26 = *(void *)(v13 + 8 * v27);
  if (v26)
  {
    int64_t v11 = v27;
    goto LABEL_33;
  }
  while (1)
  {
    int64_t v11 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v11 >= v17) {
      return 0;
    }
    unint64_t v26 = *(void *)(v13 + 8 * v11);
    ++v27;
    if (v26) {
      goto LABEL_33;
    }
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_1005BA900()
{
  uint64_t v0 = sub_1005E0400();
  __chkstk_darwin(v0);
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_1005BA0EC(v1);
  swift_bridgeObjectRelease();
  uint64_t v7 = v2;
  swift_bridgeObjectRetain();
  sub_1005BE494(&v7);
  swift_bridgeObjectRelease();
  uint64_t v3 = v7;
  sub_1005E0480();
  swift_allocObject();
  sub_1005E0470();
  sub_10000566C(&qword_10071ABC8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1005F6670;
  sub_1005E03F0();
  uint64_t v7 = v4;
  sub_1005BF368();
  sub_10000566C(&qword_10071ABD8);
  sub_1005BF3C0();
  sub_1005E2AD0();
  sub_1005E0410();
  uint64_t v7 = v3;
  sub_10000566C(&qword_10071ABE8);
  sub_1005BFEAC(&qword_10071ABF0, &qword_10071ABE8, (void (*)(void))sub_1005BF41C);
  uint64_t v5 = sub_1005E0460();
  swift_release();
  swift_release();
  return v5;
}

Swift::Int sub_1005BACCC()
{
  uint64_t v1 = *v0;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_1005BF470((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_1005E3470();
}

uint64_t sub_1005BAD24(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1005BF470(a1, v3);
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1005BAD70()
{
  uint64_t v1 = *v0;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_1005BF470((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_1005E3470();
}

uint64_t sub_1005BADC4(uint64_t *a1, uint64_t *a2)
{
  return sub_10054C124(*a1, *a2);
}

uint64_t *sub_1005BADD8(uint64_t *result, uint64_t a2)
{
  uint64_t v2 = a2 - 4;
  if (__OFSUB__(a2, 4))
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v3 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v3 <= v2)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v4 = *result;
  if (*result > v2)
  {
    BOOL v6 = __OFSUB__(v3, v4);
    BOOL v5 = v3 - v4 < 0;
  }
  else
  {
    BOOL v6 = 0;
    BOOL v5 = 1;
  }
  return (uint64_t *)(v5 == v6);
}

__n128 sub_1005BAE10@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 72);
  long long v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 16) = v3;
  __n128 result = *(__n128 *)(a1 + 40);
  long long v5 = *(_OWORD *)(a1 + 56);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v5;
  *(void *)(a2 + 64) = v2;
  return result;
}

Swift::Int sub_1005BAE34()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  Swift::UInt v3 = v0[2];
  Swift::UInt v4 = v0[3];
  Swift::UInt v5 = v0[4];
  Swift::UInt v6 = v0[5];
  Swift::UInt v7 = v0[6];
  Swift::UInt v8 = v0[7];
  Swift::UInt v9 = v0[8];
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_1005E3410(v2);
  sub_1005E3410(v3);
  sub_1005E3410(v4);
  sub_1005E3410(v5);
  sub_1005E3410(v6);
  sub_1005E3410(v7);
  sub_1005E3410(v8);
  sub_1005E3410(v9);
  return sub_1005E3470();
}

void sub_1005BAF0C()
{
  Swift::UInt v1 = v0[1];
  Swift::UInt v2 = v0[2];
  Swift::UInt v3 = v0[3];
  Swift::UInt v4 = v0[4];
  Swift::UInt v5 = v0[5];
  Swift::UInt v6 = v0[6];
  Swift::UInt v7 = v0[7];
  Swift::UInt v8 = v0[8];
  sub_1005E3410(*v0);
  sub_1005E3410(v1);
  sub_1005E3410(v2);
  sub_1005E3410(v3);
  sub_1005E3410(v4);
  sub_1005E3410(v5);
  sub_1005E3410(v6);
  sub_1005E3410(v7);
  sub_1005E3410(v8);
}

Swift::Int sub_1005BAFA8()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  Swift::UInt v3 = v0[2];
  Swift::UInt v4 = v0[3];
  Swift::UInt v5 = v0[4];
  Swift::UInt v6 = v0[5];
  Swift::UInt v7 = v0[6];
  Swift::UInt v8 = v0[7];
  Swift::UInt v9 = v0[8];
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_1005E3410(v2);
  sub_1005E3410(v3);
  sub_1005E3410(v4);
  sub_1005E3410(v5);
  sub_1005E3410(v6);
  sub_1005E3410(v7);
  sub_1005E3410(v8);
  sub_1005E3410(v9);
  return sub_1005E3470();
}

BOOL sub_1005BB07C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  _OWORD v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  uint64_t v8 = *(void *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  void v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  uint64_t v10 = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1005BFFCC((uint64_t)v7, (uint64_t)v9);
}

Swift::Int sub_1005BB0E4()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  Swift::UInt v3 = v0[2];
  Swift::UInt v4 = v0[3];
  Swift::UInt v5 = v0[4];
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_1005E3410(v2);
  sub_1005E3410(v3);
  sub_1005E3410(v4);
  sub_1005E3410(v5);
  return sub_1005E3470();
}

void sub_1005BB174()
{
  Swift::UInt v1 = v0[1];
  Swift::UInt v2 = v0[2];
  Swift::UInt v3 = v0[3];
  Swift::UInt v4 = v0[4];
  sub_1005E3410(*v0);
  sub_1005E3410(v1);
  sub_1005E3410(v2);
  sub_1005E3410(v3);
  sub_1005E3410(v4);
}

Swift::Int sub_1005BB1D8()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  Swift::UInt v3 = v0[2];
  Swift::UInt v4 = v0[3];
  Swift::UInt v5 = v0[4];
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_1005E3410(v2);
  sub_1005E3410(v3);
  sub_1005E3410(v4);
  sub_1005E3410(v5);
  return sub_1005E3470();
}

BOOL sub_1005BB264(int64x2_t *a1, int64x2_t *a2)
{
  return (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(*a1, *a2), (int32x4_t)vceqq_s64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].i64[0] == a2[2].i64[0];
}

Swift::Int sub_1005BB2AC()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_1005E3410(v2);
  return sub_1005E3470();
}

void sub_1005BB308()
{
  Swift::UInt v1 = v0[1];
  sub_1005E3410(*v0);
  sub_1005E3410(v1);
}

Swift::Int sub_1005BB344()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_1005E3410(v2);
  return sub_1005E3470();
}

uint64_t sub_1005BB39C(uint64_t a1)
{
  Swift::UInt v2 = v1;
  uint64_t v3 = *v1;
  uint64_t v6 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1 + 64;
  uint64_t v4 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v4;
  unint64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = a1 - 4;
  BOOL v12 = __OFSUB__(a1, 4);
  uint64_t v13 = a1 + 1;
  BOOL v14 = __OFADD__(a1, 1);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = v10;
  uint64_t v17 = v5;
  int64_t v18 = 0;
  int64_t v39 = v16;
  while (1)
  {
    if (v9)
    {
      unint64_t v19 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v20 = v19 | (v18 << 6);
      if (v12) {
        goto LABEL_53;
      }
      goto LABEL_31;
    }
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      goto LABEL_56;
    }
    if (v21 >= v16) {
      break;
    }
    unint64_t v22 = *(void *)(v17 + 8 * v21);
    ++v18;
    if (!v22)
    {
      int64_t v18 = v21 + 1;
      if (v21 + 1 >= v16) {
        break;
      }
      unint64_t v22 = *(void *)(v17 + 8 * v18);
      if (!v22)
      {
        int64_t v18 = v21 + 2;
        if (v21 + 2 >= v16) {
          break;
        }
        unint64_t v22 = *(void *)(v17 + 8 * v18);
        if (!v22)
        {
          int64_t v18 = v21 + 3;
          if (v21 + 3 >= v16) {
            break;
          }
          unint64_t v22 = *(void *)(v17 + 8 * v18);
          if (!v22)
          {
            int64_t v18 = v21 + 4;
            if (v21 + 4 >= v16) {
              break;
            }
            unint64_t v22 = *(void *)(v17 + 8 * v18);
            if (!v22)
            {
              int64_t v23 = v21 + 5;
              if (v23 >= v16) {
                break;
              }
              unint64_t v22 = *(void *)(v17 + 8 * v23);
              if (!v22)
              {
                while (1)
                {
                  int64_t v18 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_57;
                  }
                  if (v18 >= v16) {
                    goto LABEL_43;
                  }
                  unint64_t v22 = *(void *)(v17 + 8 * v18);
                  ++v23;
                  if (v22) {
                    goto LABEL_30;
                  }
                }
              }
              int64_t v18 = v23;
            }
          }
        }
      }
    }
LABEL_30:
    unint64_t v9 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
    if (v12)
    {
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      return result;
    }
LABEL_31:
    if (v14) {
      goto LABEL_54;
    }
    if (v13 <= v11) {
      goto LABEL_55;
    }
    uint64_t v24 = *(void *)(*(void *)(v3 + 48) + 8 * v20);
    if (v24 <= v11 || v13 < v24)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = sub_100590C14(0, *((void *)&_swiftEmptyArrayStorage + 2) + 1, 1);
      }
      unint64_t v27 = *((void *)&_swiftEmptyArrayStorage + 2);
      unint64_t v26 = *((void *)&_swiftEmptyArrayStorage + 3);
      unint64_t v28 = v27 + 1;
      int64_t v16 = v39;
      uint64_t v17 = v5;
      if (v27 >= v26 >> 1)
      {
        unint64_t v37 = *((void *)&_swiftEmptyArrayStorage + 2);
        unint64_t v38 = v27 + 1;
        uint64_t result = sub_100590C14(v26 > 1, v27 + 1, 1);
        unint64_t v27 = v37;
        unint64_t v28 = v38;
        int64_t v16 = v39;
        uint64_t v17 = v5;
      }
      *((void *)&_swiftEmptyArrayStorage + 2) = v28;
      *((void *)&_swiftEmptyArrayStorage + v27 + 4) = v24;
    }
  }
LABEL_43:
  swift_release();
  uint64_t v29 = *((void *)&_swiftEmptyArrayStorage + 2);
  if (v29)
  {
    long long v30 = (Swift::UInt *)((char *)&_swiftEmptyArrayStorage + 32);
    do
    {
      Swift::UInt v31 = *v30++;
      unint64_t v32 = sub_1005A02A4(v31);
      if (v33)
      {
        unint64_t v34 = v32;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v36 = *v2;
        uint64_t v40 = *v2;
        *Swift::UInt v2 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1005A3820();
          uint64_t v36 = v40;
        }
        sub_10059A548(v34, v36);
        *Swift::UInt v2 = v36;
        swift_bridgeObjectRelease();
      }
      --v29;
    }
    while (v29);
  }
  return swift_release();
}

uint64_t sub_1005BB664(Swift::UInt a1, unint64_t *a2)
{
  Swift::UInt v50 = a1;
  uint64_t v3 = sub_1005E0970();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v48 = (char *)&v45 - v7;
  __chkstk_darwin();
  unint64_t v9 = (char *)&v45 - v8;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v45 - v10;
  unint64_t v12 = *a2;
  swift_bridgeObjectRetain();
  sub_1005E0960();
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v47(v9, v11, v3);
  sub_1005E08F0();
  double v14 = round(v13 / 21600.0);
  os_log_type_t v49 = *(void (**)(char *, uint64_t))(v4 + 8);
  v49(v9, v3);
  if ((~*(void *)&v14 & 0x7FF0000000000000) != 0)
  {
    if (v14 <= -9.22337204e18) {
      goto LABEL_29;
    }
    if (v14 >= 9.22337204e18) {
      goto LABEL_30;
    }
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = (uint64_t)v14;
    v53[0] = v12;
    v53[1] = sub_1005C0E94;
    _OWORD v53[2] = v15;
    v53[3] = sub_1005BADD4;
    v53[4] = 0;
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_1005BA33C(0, 0, v53);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v46 = 0;
  }
  v49(v11, v3);
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v52[0] = *a2;
  unint64_t v17 = v52[0];
  *a2 = 0x8000000000000000;
  unint64_t v12 = sub_1005A02A4(v50);
  uint64_t v19 = *(void *)(v17 + 16);
  BOOL v20 = (v18 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_28;
  }
  LOBYTE(v11) = v18;
  if (*(void *)(v17 + 24) < v21)
  {
    sub_1005A0F44(v21, isUniquelyReferenced_nonNull_native);
    unint64_t v17 = v52[0];
    unint64_t v22 = sub_1005A02A4(v50);
    if ((v11 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      goto LABEL_11;
    }
    goto LABEL_36;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_31;
  }
  while (1)
  {
LABEL_11:
    *a2 = v17;
    swift_bridgeObjectRelease();
    uint64_t v24 = (void *)*a2;
    if ((v11 & 1) == 0)
    {
      v24[(v12 >> 6) + 8] |= 1 << v12;
      *(void *)(v24[6] + 8 * v12) = v50;
      uint64_t v25 = v24[7] + 72 * v12;
      *(void *)(v25 + 64) = 0;
      *(_OWORD *)(v25 + 32) = 0u;
      *(_OWORD *)(v25 + 48) = 0u;
      *(_OWORD *)uint64_t v25 = 0u;
      *(_OWORD *)(v25 + 16) = 0u;
      uint64_t v26 = v24[2];
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (v27)
      {
        __break(1u);
        goto LABEL_33;
      }
      v24[2] = v28;
    }
    uint64_t v29 = v24[7] + 72 * v12;
    uint64_t v31 = *(void *)(v29 + 32);
    long long v30 = (void *)(v29 + 32);
    uint64_t v32 = v31 + 1;
    if (!__OFADD__(v31, 1)) {
      break;
    }
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    sub_1005A3820();
    unint64_t v17 = v52[0];
  }
  *long long v30 = v32;
  unint64_t v33 = *a2;
  swift_bridgeObjectRetain();
  unint64_t v34 = v48;
  sub_1005E0960();
  v47(v6, v34, v3);
  sub_1005E08F0();
  double v36 = round(v35 / 21600.0);
  v49(v6, v3);
  if ((~*(void *)&v36 & 0x7FF0000000000000) != 0)
  {
    if (v36 > -9.22337204e18)
    {
      if (v36 < 9.22337204e18)
      {
        uint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = (uint64_t)v36;
        v52[0] = v33;
        v52[1] = sub_1005BE464;
        v52[2] = v38;
        v52[3] = sub_1005BADD4;
        _OWORD v52[4] = 0;
        swift_bridgeObjectRetain();
        uint64_t v39 = sub_1005BA33C(0, 0, v52);
        swift_release();
        swift_bridgeObjectRelease();
        BOOL v37 = v39 < 1000000000;
        goto LABEL_20;
      }
      goto LABEL_34;
    }
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  BOOL v37 = 1;
LABEL_20:
  v49(v34, v3);
  swift_bridgeObjectRelease();
  if (v46 > 999999999 || v37) {
    return sub_1005BB39C(v50);
  }
  char v41 = sub_1005BD80C(v51, v50);
  if (*(unsigned char *)(v40 + 72))
  {
    ((void (*)(void *, void))v41)(v51, 0);
    return sub_1005BB39C(v50);
  }
  uint64_t v42 = *(void *)(v40 + 56);
  BOOL v27 = __OFADD__(v42, 1);
  uint64_t v43 = v42 + 1;
  if (!v27)
  {
    *(void *)(v40 + 56) = v43;
    ((void (*)(void *, void))v41)(v51, 0);
    return sub_1005BB39C(v50);
  }
LABEL_35:
  __break(1u);
LABEL_36:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

uint64_t sub_1005BBBF4(Swift::UInt a1, unint64_t *a2, void (*a3)(unint64_t), uint64_t a4)
{
  uint64_t v49 = a4;
  Swift::UInt v50 = a3;
  Swift::UInt v53 = a1;
  uint64_t v5 = sub_1005E0970();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint32_t v51 = (char *)&v46 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  double v14 = (char *)&v46 - v13;
  __chkstk_darwin(v12);
  int64_t v16 = (char *)&v46 - v15;
  unint64_t v17 = *a2;
  swift_bridgeObjectRetain();
  sub_1005E0960();
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v48(v14, v16, v5);
  sub_1005E08F0();
  double v19 = round(v18 / 21600.0);
  os_log_type_t v52 = *(void (**)(char *, uint64_t))(v6 + 8);
  v52(v14, v5);
  if ((~*(void *)&v19 & 0x7FF0000000000000) != 0)
  {
    if (v19 <= -9.22337204e18)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= 9.22337204e18)
    {
LABEL_28:
      __break(1u);
LABEL_29:
      sub_1005A3820();
      unint64_t v22 = v55[0];
LABEL_11:
      *a2 = v22;
      swift_bridgeObjectRelease();
      uint64_t v29 = (void *)*a2;
      if ((v16 & 1) == 0)
      {
        v29[(v17 >> 6) + 8] |= 1 << v17;
        *(void *)(v29[6] + 8 * v17) = v53;
        uint64_t v30 = v29[7] + 72 * v17;
        *(void *)(v30 + 64) = 0;
        *(_OWORD *)(v30 + 32) = 0u;
        *(_OWORD *)(v30 + 48) = 0u;
        *(_OWORD *)uint64_t v30 = 0u;
        *(_OWORD *)(v30 + 16) = 0u;
        uint64_t v31 = v29[2];
        BOOL v32 = __OFADD__(v31, 1);
        uint64_t v33 = v31 + 1;
        if (v32)
        {
          __break(1u);
          goto LABEL_31;
        }
        void v29[2] = v33;
      }
      v50(v29[7] + 72 * v17 + 16);
      unint64_t v34 = *a2;
      swift_bridgeObjectRetain();
      double v35 = v51;
      sub_1005E0960();
      v48(v9, v35, v5);
      sub_1005E08F0();
      double v37 = round(v36 / 21600.0);
      v52(v9, v5);
      if ((~*(void *)&v37 & 0x7FF0000000000000) == 0)
      {
        BOOL v38 = 1;
        goto LABEL_19;
      }
      if (v37 > -9.22337204e18)
      {
        if (v37 < 9.22337204e18)
        {
          uint64_t v39 = swift_allocObject();
          *(void *)(v39 + 16) = (uint64_t)v37;
          v55[0] = v34;
          v55[1] = sub_1005C0E94;
          v55[2] = v39;
          v55[3] = sub_1005BADD4;
          unsigned char v55[4] = 0;
          swift_bridgeObjectRetain();
          uint64_t v40 = sub_1005BA33C(0, 0, v55);
          swift_release();
          swift_bridgeObjectRelease();
          BOOL v38 = v40 < 1000000000;
LABEL_19:
          v52(v35, v5);
          swift_bridgeObjectRelease();
          if (v47 > 999999999 || v38) {
            return sub_1005BB39C(v53);
          }
          uint64_t v42 = sub_1005BD80C(v54, v53);
          if (*(unsigned char *)(v41 + 72))
          {
            ((void (*)(void *, void))v42)(v54, 0);
            return sub_1005BB39C(v53);
          }
          uint64_t v43 = *(void *)(v41 + 56);
          BOOL v32 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (!v32)
          {
            *(void *)(v41 + 56) = v44;
            ((void (*)(void *, void))v42)(v54, 0);
            return sub_1005BB39C(v53);
          }
          goto LABEL_33;
        }
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = (uint64_t)v19;
    v56[0] = v17;
    v56[1] = sub_1005C0E94;
    void v56[2] = v20;
    v56[3] = sub_1005BADD4;
    uint64_t v56[4] = 0;
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1005BA33C(0, 0, v56);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v47 = 0;
  }
  v52(v16, v5);
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v55[0] = *a2;
  unint64_t v22 = v55[0];
  *a2 = 0x8000000000000000;
  unint64_t v17 = sub_1005A02A4(v53);
  uint64_t v24 = *(void *)(v22 + 16);
  BOOL v25 = (v23 & 1) == 0;
  uint64_t v26 = v24 + v25;
  if (__OFADD__(v24, v25))
  {
    __break(1u);
    goto LABEL_27;
  }
  LOBYTE(v16) = v23;
  if (*(void *)(v22 + 24) >= v26)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
  sub_1005A0F44(v26, isUniquelyReferenced_nonNull_native);
  unint64_t v22 = v55[0];
  unint64_t v27 = sub_1005A02A4(v53);
  if ((v16 & 1) == (v28 & 1))
  {
    unint64_t v17 = v27;
    goto LABEL_11;
  }
LABEL_34:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

uint64_t sub_1005BC19C(Swift::UInt a1, unint64_t *a2)
{
  Swift::UInt v50 = a1;
  uint64_t v3 = sub_1005E0970();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v48 = (char *)&v45 - v7;
  __chkstk_darwin();
  unint64_t v9 = (char *)&v45 - v8;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v45 - v10;
  unint64_t v12 = *a2;
  swift_bridgeObjectRetain();
  sub_1005E0960();
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v47(v9, v11, v3);
  sub_1005E08F0();
  double v14 = round(v13 / 21600.0);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v4 + 8);
  v49(v9, v3);
  if ((~*(void *)&v14 & 0x7FF0000000000000) != 0)
  {
    if (v14 <= -9.22337204e18) {
      goto LABEL_29;
    }
    if (v14 >= 9.22337204e18) {
      goto LABEL_30;
    }
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = (uint64_t)v14;
    v53[0] = v12;
    v53[1] = sub_1005C0E94;
    _OWORD v53[2] = v15;
    v53[3] = sub_1005BADD4;
    v53[4] = 0;
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_1005BA33C(0, 0, v53);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v46 = 0;
  }
  v49(v11, v3);
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v52[0] = *a2;
  unint64_t v17 = v52[0];
  *a2 = 0x8000000000000000;
  unint64_t v12 = sub_1005A02A4(v50);
  uint64_t v19 = *(void *)(v17 + 16);
  BOOL v20 = (v18 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_28;
  }
  LOBYTE(v11) = v18;
  if (*(void *)(v17 + 24) < v21)
  {
    sub_1005A0F44(v21, isUniquelyReferenced_nonNull_native);
    unint64_t v17 = v52[0];
    unint64_t v22 = sub_1005A02A4(v50);
    if ((v11 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      goto LABEL_11;
    }
    goto LABEL_36;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_31;
  }
  while (1)
  {
LABEL_11:
    *a2 = v17;
    swift_bridgeObjectRelease();
    uint64_t v24 = (void *)*a2;
    if ((v11 & 1) == 0)
    {
      v24[(v12 >> 6) + 8] |= 1 << v12;
      *(void *)(v24[6] + 8 * v12) = v50;
      uint64_t v25 = v24[7] + 72 * v12;
      *(void *)(v25 + 64) = 0;
      *(_OWORD *)(v25 + 32) = 0u;
      *(_OWORD *)(v25 + 48) = 0u;
      *(_OWORD *)uint64_t v25 = 0u;
      *(_OWORD *)(v25 + 16) = 0u;
      uint64_t v26 = v24[2];
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (v27)
      {
        __break(1u);
        goto LABEL_33;
      }
      v24[2] = v28;
    }
    uint64_t v29 = v24[7] + 72 * v12;
    uint64_t v31 = *(void *)(v29 + 40);
    uint64_t v30 = (void *)(v29 + 40);
    uint64_t v32 = v31 + 1;
    if (!__OFADD__(v31, 1)) {
      break;
    }
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    sub_1005A3820();
    unint64_t v17 = v52[0];
  }
  *uint64_t v30 = v32;
  unint64_t v33 = *a2;
  swift_bridgeObjectRetain();
  unint64_t v34 = v48;
  sub_1005E0960();
  v47(v6, v34, v3);
  sub_1005E08F0();
  double v36 = round(v35 / 21600.0);
  v49(v6, v3);
  if ((~*(void *)&v36 & 0x7FF0000000000000) != 0)
  {
    if (v36 > -9.22337204e18)
    {
      if (v36 < 9.22337204e18)
      {
        uint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = (uint64_t)v36;
        v52[0] = v33;
        v52[1] = sub_1005C0E94;
        v52[2] = v38;
        v52[3] = sub_1005BADD4;
        _OWORD v52[4] = 0;
        swift_bridgeObjectRetain();
        uint64_t v39 = sub_1005BA33C(0, 0, v52);
        swift_release();
        swift_bridgeObjectRelease();
        BOOL v37 = v39 < 1000000000;
        goto LABEL_20;
      }
      goto LABEL_34;
    }
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  BOOL v37 = 1;
LABEL_20:
  v49(v34, v3);
  swift_bridgeObjectRelease();
  if (v46 > 999999999 || v37) {
    return sub_1005BB39C(v50);
  }
  uint64_t v41 = sub_1005BD80C(v51, v50);
  if (*(unsigned char *)(v40 + 72))
  {
    ((void (*)(void *, void))v41)(v51, 0);
    return sub_1005BB39C(v50);
  }
  uint64_t v42 = *(void *)(v40 + 56);
  BOOL v27 = __OFADD__(v42, 1);
  uint64_t v43 = v42 + 1;
  if (!v27)
  {
    *(void *)(v40 + 56) = v43;
    ((void (*)(void *, void))v41)(v51, 0);
    return sub_1005BB39C(v50);
  }
LABEL_35:
  __break(1u);
LABEL_36:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

uint64_t sub_1005BC72C(Swift::UInt a1, unint64_t *a2)
{
  Swift::UInt v50 = a1;
  uint64_t v3 = sub_1005E0970();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v48 = (char *)&v45 - v7;
  __chkstk_darwin();
  unint64_t v9 = (char *)&v45 - v8;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v45 - v10;
  unint64_t v12 = *a2;
  swift_bridgeObjectRetain();
  sub_1005E0960();
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v47(v9, v11, v3);
  sub_1005E08F0();
  double v14 = round(v13 / 21600.0);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v4 + 8);
  v49(v9, v3);
  if ((~*(void *)&v14 & 0x7FF0000000000000) != 0)
  {
    if (v14 <= -9.22337204e18) {
      goto LABEL_29;
    }
    if (v14 >= 9.22337204e18) {
      goto LABEL_30;
    }
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = (uint64_t)v14;
    v53[0] = v12;
    v53[1] = sub_1005C0E94;
    _OWORD v53[2] = v15;
    v53[3] = sub_1005BADD4;
    v53[4] = 0;
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_1005BA33C(0, 0, v53);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v46 = 0;
  }
  v49(v11, v3);
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v52[0] = *a2;
  unint64_t v17 = v52[0];
  *a2 = 0x8000000000000000;
  unint64_t v12 = sub_1005A02A4(v50);
  uint64_t v19 = *(void *)(v17 + 16);
  BOOL v20 = (v18 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_28;
  }
  LOBYTE(v11) = v18;
  if (*(void *)(v17 + 24) < v21)
  {
    sub_1005A0F44(v21, isUniquelyReferenced_nonNull_native);
    unint64_t v17 = v52[0];
    unint64_t v22 = sub_1005A02A4(v50);
    if ((v11 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      goto LABEL_11;
    }
    goto LABEL_36;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_31;
  }
  while (1)
  {
LABEL_11:
    *a2 = v17;
    swift_bridgeObjectRelease();
    uint64_t v24 = (void *)*a2;
    if ((v11 & 1) == 0)
    {
      v24[(v12 >> 6) + 8] |= 1 << v12;
      *(void *)(v24[6] + 8 * v12) = v50;
      uint64_t v25 = v24[7] + 72 * v12;
      *(void *)(v25 + 64) = 0;
      *(_OWORD *)(v25 + 32) = 0u;
      *(_OWORD *)(v25 + 48) = 0u;
      *(_OWORD *)uint64_t v25 = 0u;
      *(_OWORD *)(v25 + 16) = 0u;
      uint64_t v26 = v24[2];
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (v27)
      {
        __break(1u);
        goto LABEL_33;
      }
      v24[2] = v28;
    }
    uint64_t v29 = v24[7] + 72 * v12;
    uint64_t v31 = *(void *)(v29 + 16);
    uint64_t v30 = (void *)(v29 + 16);
    uint64_t v32 = v31 + 1;
    if (!__OFADD__(v31, 1)) {
      break;
    }
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    sub_1005A3820();
    unint64_t v17 = v52[0];
  }
  *uint64_t v30 = v32;
  unint64_t v33 = *a2;
  swift_bridgeObjectRetain();
  unint64_t v34 = v48;
  sub_1005E0960();
  v47(v6, v34, v3);
  sub_1005E08F0();
  double v36 = round(v35 / 21600.0);
  v49(v6, v3);
  if ((~*(void *)&v36 & 0x7FF0000000000000) != 0)
  {
    if (v36 > -9.22337204e18)
    {
      if (v36 < 9.22337204e18)
      {
        uint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = (uint64_t)v36;
        v52[0] = v33;
        v52[1] = sub_1005C0E94;
        v52[2] = v38;
        v52[3] = sub_1005BADD4;
        _OWORD v52[4] = 0;
        swift_bridgeObjectRetain();
        uint64_t v39 = sub_1005BA33C(0, 0, v52);
        swift_release();
        swift_bridgeObjectRelease();
        BOOL v37 = v39 < 1000000000;
        goto LABEL_20;
      }
      goto LABEL_34;
    }
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  BOOL v37 = 1;
LABEL_20:
  v49(v34, v3);
  swift_bridgeObjectRelease();
  if (v46 > 999999999 || v37) {
    return sub_1005BB39C(v50);
  }
  uint64_t v41 = sub_1005BD80C(v51, v50);
  if (*(unsigned char *)(v40 + 72))
  {
    ((void (*)(void *, void))v41)(v51, 0);
    return sub_1005BB39C(v50);
  }
  uint64_t v42 = *(void *)(v40 + 56);
  BOOL v27 = __OFADD__(v42, 1);
  uint64_t v43 = v42 + 1;
  if (!v27)
  {
    *(void *)(v40 + 56) = v43;
    ((void (*)(void *, void))v41)(v51, 0);
    return sub_1005BB39C(v50);
  }
LABEL_35:
  __break(1u);
LABEL_36:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

uint64_t sub_1005BCCBC(Swift::UInt a1, unint64_t *a2)
{
  Swift::UInt v50 = a1;
  uint64_t v3 = sub_1005E0970();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v48 = (char *)&v45 - v7;
  __chkstk_darwin();
  unint64_t v9 = (char *)&v45 - v8;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v45 - v10;
  unint64_t v12 = *a2;
  swift_bridgeObjectRetain();
  sub_1005E0960();
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v47(v9, v11, v3);
  sub_1005E08F0();
  double v14 = round(v13 / 21600.0);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v4 + 8);
  v49(v9, v3);
  if ((~*(void *)&v14 & 0x7FF0000000000000) != 0)
  {
    if (v14 <= -9.22337204e18) {
      goto LABEL_29;
    }
    if (v14 >= 9.22337204e18) {
      goto LABEL_30;
    }
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = (uint64_t)v14;
    v53[0] = v12;
    v53[1] = sub_1005C0E94;
    _OWORD v53[2] = v15;
    v53[3] = sub_1005BADD4;
    v53[4] = 0;
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_1005BA33C(0, 0, v53);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v46 = 0;
  }
  v49(v11, v3);
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v52[0] = *a2;
  unint64_t v17 = v52[0];
  *a2 = 0x8000000000000000;
  unint64_t v12 = sub_1005A02A4(v50);
  uint64_t v19 = *(void *)(v17 + 16);
  BOOL v20 = (v18 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_28;
  }
  LOBYTE(v11) = v18;
  if (*(void *)(v17 + 24) < v21)
  {
    sub_1005A0F44(v21, isUniquelyReferenced_nonNull_native);
    unint64_t v17 = v52[0];
    unint64_t v22 = sub_1005A02A4(v50);
    if ((v11 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      goto LABEL_11;
    }
    goto LABEL_36;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_31;
  }
  while (1)
  {
LABEL_11:
    *a2 = v17;
    swift_bridgeObjectRelease();
    uint64_t v24 = (void *)*a2;
    if ((v11 & 1) == 0)
    {
      v24[(v12 >> 6) + 8] |= 1 << v12;
      *(void *)(v24[6] + 8 * v12) = v50;
      uint64_t v25 = v24[7] + 72 * v12;
      *(void *)(v25 + 64) = 0;
      *(_OWORD *)(v25 + 32) = 0u;
      *(_OWORD *)(v25 + 48) = 0u;
      *(_OWORD *)uint64_t v25 = 0u;
      *(_OWORD *)(v25 + 16) = 0u;
      uint64_t v26 = v24[2];
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (v27)
      {
        __break(1u);
        goto LABEL_33;
      }
      v24[2] = v28;
    }
    uint64_t v29 = v24[7] + 72 * v12;
    uint64_t v31 = *(void *)(v29 + 64);
    uint64_t v30 = (void *)(v29 + 64);
    uint64_t v32 = v31 + 1;
    if (!__OFADD__(v31, 1)) {
      break;
    }
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    sub_1005A3820();
    unint64_t v17 = v52[0];
  }
  *uint64_t v30 = v32;
  unint64_t v33 = *a2;
  swift_bridgeObjectRetain();
  unint64_t v34 = v48;
  sub_1005E0960();
  v47(v6, v34, v3);
  sub_1005E08F0();
  double v36 = round(v35 / 21600.0);
  v49(v6, v3);
  if ((~*(void *)&v36 & 0x7FF0000000000000) != 0)
  {
    if (v36 > -9.22337204e18)
    {
      if (v36 < 9.22337204e18)
      {
        uint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = (uint64_t)v36;
        v52[0] = v33;
        v52[1] = sub_1005C0E94;
        v52[2] = v38;
        v52[3] = sub_1005BADD4;
        _OWORD v52[4] = 0;
        swift_bridgeObjectRetain();
        uint64_t v39 = sub_1005BA33C(0, 0, v52);
        swift_release();
        swift_bridgeObjectRelease();
        BOOL v37 = v39 < 1000000000;
        goto LABEL_20;
      }
      goto LABEL_34;
    }
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  BOOL v37 = 1;
LABEL_20:
  v49(v34, v3);
  swift_bridgeObjectRelease();
  if (v46 > 999999999 || v37) {
    return sub_1005BB39C(v50);
  }
  uint64_t v41 = sub_1005BD80C(v51, v50);
  if (*(unsigned char *)(v40 + 72))
  {
    ((void (*)(void *, void))v41)(v51, 0);
    return sub_1005BB39C(v50);
  }
  uint64_t v42 = *(void *)(v40 + 56);
  BOOL v27 = __OFADD__(v42, 1);
  uint64_t v43 = v42 + 1;
  if (!v27)
  {
    *(void *)(v40 + 56) = v43;
    ((void (*)(void *, void))v41)(v51, 0);
    return sub_1005BB39C(v50);
  }
LABEL_35:
  __break(1u);
LABEL_36:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

uint64_t sub_1005BD24C(Swift::UInt a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v51 = a3;
  Swift::UInt v53 = a1;
  uint64_t v5 = sub_1005E0970();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v49 = (char *)&v46 - v9;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v46 - v10;
  __chkstk_darwin();
  double v13 = (char *)&v46 - v12;
  unint64_t v14 = *a2;
  swift_bridgeObjectRetain();
  sub_1005E0960();
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v48(v11, v13, v5);
  sub_1005E08F0();
  double v16 = round(v15 / 21600.0);
  os_log_type_t v52 = *(void (**)(char *, uint64_t))(v6 + 8);
  v52(v11, v5);
  if ((~*(void *)&v16 & 0x7FF0000000000000) != 0)
  {
    if (v16 <= -9.22337204e18) {
      goto LABEL_31;
    }
    if (v16 >= 9.22337204e18) {
      goto LABEL_32;
    }
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = (uint64_t)v16;
    v56[0] = v14;
    v56[1] = sub_1005C0E94;
    void v56[2] = v17;
    v56[3] = sub_1005BADD4;
    uint64_t v56[4] = 0;
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1005BA33C(0, 0, v56);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v47 = 0;
  }
  v52(v13, v5);
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v55[0] = *a2;
  unint64_t v19 = v55[0];
  *a2 = 0x8000000000000000;
  unint64_t v14 = sub_1005A02A4(v53);
  uint64_t v21 = *(void *)(v19 + 16);
  BOOL v22 = (v20 & 1) == 0;
  uint64_t v23 = v21 + v22;
  if (__OFADD__(v21, v22))
  {
    __break(1u);
    goto LABEL_29;
  }
  LOBYTE(v13) = v20;
  if (*(void *)(v19 + 24) < v23)
  {
    sub_1005A0F44(v23, isUniquelyReferenced_nonNull_native);
    unint64_t v19 = v55[0];
    unint64_t v24 = sub_1005A02A4(v53);
    if ((v13 & 1) == (v25 & 1))
    {
      unint64_t v14 = v24;
      goto LABEL_11;
    }
    goto LABEL_38;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_33;
  }
  while (1)
  {
LABEL_11:
    *a2 = v19;
    swift_bridgeObjectRelease();
    uint64_t v26 = (void *)*a2;
    if ((v13 & 1) == 0)
    {
      v26[(v14 >> 6) + 8] |= 1 << v14;
      *(void *)(v26[6] + 8 * v14) = v53;
      uint64_t v27 = v26[7] + 72 * v14;
      *(void *)(v27 + 64) = 0;
      *(_OWORD *)(v27 + 32) = 0u;
      *(_OWORD *)(v27 + 48) = 0u;
      *(_OWORD *)uint64_t v27 = 0u;
      *(_OWORD *)(v27 + 16) = 0u;
      uint64_t v28 = v26[2];
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        goto LABEL_35;
      }
      _OWORD v26[2] = v30;
    }
    uint64_t v31 = (void *)(v26[7] + 72 * v14);
    if (__OFADD__(*v31, v51))
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    *v31 += v51;
    uint64_t v32 = v31[1];
    BOOL v29 = __OFADD__(v32, v50);
    uint64_t v33 = v32 + v50;
    if (!v29) {
      break;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    sub_1005A3820();
    unint64_t v19 = v55[0];
  }
  v31[1] = v33;
  unint64_t v34 = *a2;
  swift_bridgeObjectRetain();
  double v35 = v49;
  sub_1005E0960();
  v48(v8, v35, v5);
  sub_1005E08F0();
  double v37 = round(v36 / 21600.0);
  v52(v8, v5);
  if ((~*(void *)&v37 & 0x7FF0000000000000) != 0)
  {
    if (v37 > -9.22337204e18)
    {
      if (v37 < 9.22337204e18)
      {
        uint64_t v39 = swift_allocObject();
        *(void *)(v39 + 16) = (uint64_t)v37;
        v55[0] = v34;
        v55[1] = sub_1005C0E94;
        v55[2] = v39;
        v55[3] = sub_1005BADD4;
        unsigned char v55[4] = 0;
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_1005BA33C(0, 0, v55);
        swift_release();
        swift_bridgeObjectRelease();
        BOOL v38 = v40 < 1000000000;
        goto LABEL_21;
      }
      goto LABEL_36;
    }
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  BOOL v38 = 1;
LABEL_21:
  v52(v35, v5);
  swift_bridgeObjectRelease();
  if (v47 > 999999999 || v38) {
    return sub_1005BB39C(v53);
  }
  uint64_t v42 = sub_1005BD80C(v54, v53);
  if (*(unsigned char *)(v41 + 72))
  {
    ((void (*)(void *, void))v42)(v54, 0);
    return sub_1005BB39C(v53);
  }
  uint64_t v43 = *(void *)(v41 + 56);
  BOOL v29 = __OFADD__(v43, 1);
  uint64_t v44 = v43 + 1;
  if (!v29)
  {
    *(void *)(v41 + 56) = v44;
    ((void (*)(void *, void))v42)(v54, 0);
    return sub_1005BB39C(v53);
  }
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

void (*sub_1005BD80C(void *a1, Swift::UInt a2))(void *a1)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  void v4[4] = sub_1005BEF9C(v4, a2);
  return sub_1005BD86C;
}

void sub_1005BD86C(void *a1)
{
  Swift::UInt v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t sub_1005BD8B8(void *a1, uint64_t a2, uint64_t a3)
{
  v10[1] = a3;
  uint64_t v5 = sub_10000566C(&qword_10071AC68);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005C08F0();
  sub_1005E3500();
  char v13 = 0;
  sub_1005E31B0();
  if (!v3)
  {
    char v12 = 1;
    sub_1005E31B0();
    char v11 = 2;
    sub_1005E31B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1005BDA50(char *a1, char *a2)
{
  return sub_100579718(*a1, *a2);
}

Swift::Int sub_1005BDA5C()
{
  return sub_1005E3470();
}

uint64_t sub_1005BDAB8()
{
  sub_1005E1DB0();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1005BDAF8()
{
  return sub_1005E3470();
}

uint64_t sub_1005BDB50@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1005C0354(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1005BDB80(void *a1@<X8>)
{
  *a1 = qword_10062C270[*v1];
  a1[1] = 0xE100000000000000;
}

uint64_t sub_1005BDB9C()
{
  return qword_10062C270[*v0];
}

uint64_t sub_1005BDBB4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005C0354(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005BDBDC(uint64_t a1)
{
  unint64_t v2 = sub_1005C08F0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005BDC18(uint64_t a1)
{
  unint64_t v2 = sub_1005C08F0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005BDC54@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1005C03A0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1005BDC84(void *a1)
{
  return sub_1005BD8B8(a1, *v1, v1[1]);
}

uint64_t sub_1005BDCA4(char a1)
{
  return qword_10062C288[a1];
}

uint64_t sub_1005BDCBC(void *a1)
{
  uint64_t v3 = sub_10000566C(&qword_10071AC40);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003BCDC(a1, a1[3]);
  sub_1005C0300();
  sub_1005E3500();
  v8[15] = 0;
  sub_1005E31B0();
  if (!v1)
  {
    v8[14] = 1;
    sub_1005E31B0();
    v8[13] = 2;
    sub_1005E31B0();
    v8[12] = 3;
    sub_1005E31B0();
    v8[11] = 4;
    sub_1005E31B0();
    v8[10] = 5;
    sub_1005E31B0();
    v8[9] = 6;
    sub_1005E31B0();
    v8[8] = 7;
    sub_1005E31B0();
    v8[7] = 8;
    sub_1005E3150();
    void v8[6] = 9;
    sub_1005E3150();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1005BDF64(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1005BDCA4(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1005BDCA4(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1005E3290();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1005BDFF0()
{
  char v1 = *v0;
  sub_1005E33F0();
  sub_1005BDCA4(v1);
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  return sub_1005E3470();
}

uint64_t sub_1005BE054()
{
  sub_1005BDCA4(*v0);
  sub_1005E1DB0();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1005BE0A8()
{
  char v1 = *v0;
  sub_1005E33F0();
  sub_1005BDCA4(v1);
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  return sub_1005E3470();
}

uint64_t sub_1005BE108@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1005C056C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1005BE138@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1005BDCA4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1005BE164()
{
  return sub_1005BDCA4(*v0);
}

uint64_t sub_1005BE16C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005C056C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005BE194(uint64_t a1)
{
  unint64_t v2 = sub_1005C0300();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005BE1D0(uint64_t a1)
{
  unint64_t v2 = sub_1005C0300();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_1005BE20C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1005C05B8(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    a2[2] = v7[2];
    a2[3] = v5;
    a2[4] = v8[0];
    *(_OWORD *)((char *)a2 + 73) = *(_OWORD *)((char *)v8 + 9);
    double result = *(double *)v7;
    long long v6 = v7[1];
    *a2 = v7[0];
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_1005BE260(void *a1)
{
  return sub_1005BDCBC(a1);
}

unint64_t sub_1005BE2AC(unint64_t result, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  long long v5 = (void *)(a5[6] + 16 * result);
  *long long v5 = a2;
  v5[1] = a3;
  *(unsigned char *)(a5[7] + result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_1005BE2F4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void *a7)
{
  a7[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a7[6] + 32 * a1;
  *(void *)uint64_t v10 = a2;
  *(void *)(v10 + 8) = a3;
  *(void *)(v10 + 16) = a4;
  *(_DWORD *)(v10 + 24) = a5;
  uint64_t v11 = a7[7];
  uint64_t v12 = sub_10000566C((uint64_t *)&unk_100719790);
  uint64_t result = sub_100566740(a6, v11 + *(void *)(*(void *)(v12 - 8) + 72) * a1);
  uint64_t v14 = a7[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a7[2] = v16;
  }
  return result;
}

unint64_t sub_1005BE398(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  *(void *)(a6[6] + 8 * result) = a2;
  uint64_t v6 = (void *)(a6[7] + 24 * result);
  *uint64_t v6 = a3;
  v6[1] = a4;
  _OWORD v6[2] = a5;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a6[2] = v9;
  }
  return result;
}

_OWORD *sub_1005BE3E8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_100353CB8(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1005BE454()
{
  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1005BE464(uint64_t *a1)
{
  return (unint64_t)sub_1005BADD8(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1005BE484()
{
  return _swift_deallocObject(v0, 24, 7);
}

Swift::Int sub_1005BE494(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1005ABD90(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1005BE500(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_1005BE500(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1005E3210(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v94 = (long long *)*a1;
      uint64_t v95 = -1;
      uint64_t v96 = 1;
      uint64_t v97 = (long long *)*a1;
      do
      {
        uint64_t v98 = v95;
        int v99 = v97;
        do
        {
          int v100 = v99 + 6;
          uint64_t v101 = *((void *)v99 + 12);
          if (v101 >= *(void *)v99) {
            break;
          }
          if (!v94) {
            goto LABEL_142;
          }
          char v102 = *((unsigned char *)v99 + 168);
          uint64_t v103 = *((void *)v99 + 22);
          char v104 = *((unsigned char *)v99 + 184);
          long long v105 = *(long long *)((char *)v99 + 104);
          long long v106 = *(long long *)((char *)v99 + 120);
          long long v107 = *(long long *)((char *)v99 + 136);
          long long v108 = *(long long *)((char *)v99 + 152);
          long long v109 = v99[3];
          v99[8] = v99[2];
          v99[9] = v109;
          long long v110 = v99[5];
          v99[10] = v99[4];
          v99[11] = v110;
          long long v111 = *v99;
          long long v112 = v99[1];
          *(long long *)((char *)v99 + 8) = v105;
          *(void *)int v99 = v101;
          *(long long *)((char *)v99 + 24) = v106;
          *(long long *)((char *)v99 + 40) = v107;
          *(long long *)((char *)v99 + 56) = v108;
          *((unsigned char *)v99 + 72) = v102;
          *((void *)v99 + 10) = v103;
          *((unsigned char *)v99 + 88) = v104;
          v99 -= 6;
          *int v100 = v111;
          v100[1] = v112;
        }
        while (!__CFADD__(v98++, 1));
        ++v96;
        v97 += 6;
        --v95;
      }
      while (v96 != v3);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_147;
  }
  Swift::Int v127 = result;
  uint64_t v124 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    unint64_t v135 = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_104:
      uint64_t v114 = v11;
      uint64_t v126 = v8;
      if (v12 >= 2)
      {
        uint64_t v115 = *v124;
        do
        {
          unint64_t v116 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_133;
          }
          if (!v115) {
            goto LABEL_146;
          }
          id v117 = v114;
          uint64_t v118 = *(void *)&v114[16 * v116 + 32];
          uint64_t v119 = *(void *)&v114[16 * v12 + 24];
          sub_1005BECEC((char *)(v115 + 96 * v118), (char *)(v115 + 96 * *(void *)&v114[16 * v12 + 16]), v115 + 96 * v119, v135);
          if (v1) {
            break;
          }
          if (v119 < v118) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v117 = sub_1005AAE8C((uint64_t)v117);
          }
          if (v116 >= *((void *)v117 + 2)) {
            goto LABEL_135;
          }
          char v120 = &v117[16 * v116 + 32];
          *(void *)char v120 = v118;
          *((void *)v120 + 1) = v119;
          unint64_t v121 = *((void *)v117 + 2);
          if (v12 > v121) {
            goto LABEL_136;
          }
          memmove(&v117[16 * v12 + 16], &v117[16 * v12 + 32], 16 * (v121 - v12));
          uint64_t v114 = v117;
          *((void *)v117 + 2) = v121 - 1;
          unint64_t v12 = v121 - 1;
        }
        while (v121 > 2);
      }
LABEL_94:
      swift_bridgeObjectRelease();
      v126[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v126 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1005E2150();
    *(void *)(v7 + 16) = v6;
    uint64_t v126 = (void *)v7;
    unint64_t v135 = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v125 = *a1 + 96;
  uint64_t v123 = *a1 - 96;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v128 = v3;
  uint64_t v136 = v10;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 < v3)
    {
      uint64_t v14 = *(void *)(v10 + 96 * v9);
      uint64_t v15 = *(void *)(v10 + 96 * v13);
      Swift::Int v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        uint64_t v16 = (void *)(v125 + 96 * v13);
        uint64_t v17 = v16;
        while (1)
        {
          uint64_t v18 = v17[12];
          v17 += 12;
          if (v14 < v15 == v18 >= *v16) {
            break;
          }
          ++v9;
          uint64_t v16 = v17;
          if (v3 == v9)
          {
            Swift::Int v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_139;
        }
        if (v13 < v9)
        {
          uint64_t v19 = 96 * v9;
          uint64_t v20 = 96 * v13;
          Swift::Int v21 = v9;
          Swift::Int v122 = v13;
          do
          {
            if (v13 != --v21)
            {
              if (!v10) {
                goto LABEL_145;
              }
              BOOL v22 = v11;
              uint64_t v23 = v10 + v19;
              uint64_t v24 = *(void *)(v10 + v20 + 64);
              char v25 = *(unsigned char *)(v10 + v20 + 72);
              uint64_t v134 = *(void *)(v10 + v20 + 80);
              char v133 = *(unsigned char *)(v10 + v20 + 88);
              long long v131 = *(_OWORD *)(v10 + v20 + 16);
              long long v132 = *(_OWORD *)(v10 + v20);
              long long v129 = *(_OWORD *)(v10 + v20 + 48);
              long long v130 = *(_OWORD *)(v10 + v20 + 32);
              memmove((void *)(v10 + v20), (const void *)(v10 + v19 - 96), 0x60uLL);
              uint64_t v10 = v136;
              *(_OWORD *)(v23 - 96) = v132;
              *(_OWORD *)(v23 - 80) = v131;
              *(_OWORD *)(v23 - 64) = v130;
              *(_OWORD *)(v23 - 48) = v129;
              *(void *)(v23 - 32) = v24;
              *(unsigned char *)(v23 - 24) = v25;
              *(void *)(v23 - 16) = v134;
              *(unsigned char *)(v23 - 8) = v133;
              uint64_t v11 = v22;
            }
            ++v13;
            v19 -= 96;
            v20 += 96;
          }
          while (v13 < v21);
          Swift::Int v3 = v128;
          Swift::Int v13 = v122;
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_137;
    }
    if (v9 - v13 >= v127) {
      goto LABEL_47;
    }
    Swift::Int v26 = v13 + v127;
    if (__OFADD__(v13, v127)) {
      goto LABEL_140;
    }
    if (v26 >= v3) {
      Swift::Int v26 = v3;
    }
    if (v26 < v13) {
      break;
    }
    if (v9 != v26)
    {
      uint64_t v27 = v123 + 96 * v9;
      do
      {
        Swift::Int v28 = v13;
        uint64_t v29 = v27;
        do
        {
          uint64_t v30 = (_OWORD *)(v29 + 96);
          uint64_t v31 = *(void *)(v29 + 96);
          if (v31 >= *(void *)v29) {
            break;
          }
          if (!v10) {
            goto LABEL_143;
          }
          char v32 = *(unsigned char *)(v29 + 168);
          uint64_t v33 = *(void *)(v29 + 176);
          char v34 = *(unsigned char *)(v29 + 184);
          long long v35 = *(_OWORD *)(v29 + 104);
          long long v36 = *(_OWORD *)(v29 + 120);
          long long v37 = *(_OWORD *)(v29 + 136);
          long long v38 = *(_OWORD *)(v29 + 152);
          long long v39 = *(_OWORD *)(v29 + 48);
          *(_OWORD *)(v29 + 128) = *(_OWORD *)(v29 + 32);
          *(_OWORD *)(v29 + 144) = v39;
          long long v40 = *(_OWORD *)(v29 + 80);
          *(_OWORD *)(v29 + 160) = *(_OWORD *)(v29 + 64);
          *(_OWORD *)(v29 + 176) = v40;
          long long v41 = *(_OWORD *)v29;
          long long v42 = *(_OWORD *)(v29 + 16);
          *(_OWORD *)(v29 + 8) = v35;
          *(void *)uint64_t v29 = v31;
          *(_OWORD *)(v29 + 24) = v36;
          *(_OWORD *)(v29 + 40) = v37;
          *(_OWORD *)(v29 + 56) = v38;
          *(unsigned char *)(v29 + 72) = v32;
          *(void *)(v29 + 80) = v33;
          *(unsigned char *)(v29 + 88) = v34;
          v29 -= 96;
          ++v28;
          *uint64_t v30 = v41;
          v30[1] = v42;
        }
        while (v9 != v28);
        ++v9;
        v27 += 96;
      }
      while (v9 != v26);
      Swift::Int v9 = v26;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_132;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1005AACC4(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v44 = *((void *)v11 + 2);
    unint64_t v43 = *((void *)v11 + 3);
    unint64_t v12 = v44 + 1;
    uint64_t v10 = v136;
    if (v44 >= v43 >> 1)
    {
      uint64_t v93 = sub_1005AACC4((char *)(v43 > 1), v44 + 1, 1, v11);
      uint64_t v10 = v136;
      uint64_t v11 = v93;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v45 = v11 + 32;
    uint64_t v46 = &v11[16 * v44 + 32];
    *(void *)uint64_t v46 = v13;
    *((void *)v46 + 1) = v9;
    if (v44)
    {
      while (1)
      {
        unint64_t v47 = v12 - 1;
        if (v12 >= 4)
        {
          os_log_type_t v52 = &v45[16 * v12];
          uint64_t v53 = *((void *)v52 - 8);
          uint64_t v54 = *((void *)v52 - 7);
          BOOL v58 = __OFSUB__(v54, v53);
          uint64_t v55 = v54 - v53;
          if (v58) {
            goto LABEL_121;
          }
          uint64_t v57 = *((void *)v52 - 6);
          uint64_t v56 = *((void *)v52 - 5);
          BOOL v58 = __OFSUB__(v56, v57);
          uint64_t v50 = v56 - v57;
          char v51 = v58;
          if (v58) {
            goto LABEL_122;
          }
          unint64_t v59 = v12 - 2;
          BOOL v60 = &v45[16 * v12 - 32];
          uint64_t v62 = *(void *)v60;
          uint64_t v61 = *((void *)v60 + 1);
          BOOL v58 = __OFSUB__(v61, v62);
          uint64_t v63 = v61 - v62;
          if (v58) {
            goto LABEL_124;
          }
          BOOL v58 = __OFADD__(v50, v63);
          uint64_t v64 = v50 + v63;
          if (v58) {
            goto LABEL_127;
          }
          if (v64 >= v55)
          {
            unint64_t v82 = &v45[16 * v47];
            uint64_t v84 = *(void *)v82;
            uint64_t v83 = *((void *)v82 + 1);
            BOOL v58 = __OFSUB__(v83, v84);
            uint64_t v85 = v83 - v84;
            if (v58) {
              goto LABEL_131;
            }
            BOOL v75 = v50 < v85;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v76 = *((void *)v11 + 4);
            uint64_t v77 = *((void *)v11 + 5);
            BOOL v58 = __OFSUB__(v77, v76);
            uint64_t v69 = v77 - v76;
            char v70 = v58;
            goto LABEL_78;
          }
          uint64_t v49 = *((void *)v11 + 4);
          uint64_t v48 = *((void *)v11 + 5);
          BOOL v58 = __OFSUB__(v48, v49);
          uint64_t v50 = v48 - v49;
          char v51 = v58;
        }
        if (v51) {
          goto LABEL_123;
        }
        unint64_t v59 = v12 - 2;
        char v65 = &v45[16 * v12 - 32];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v68 = __OFSUB__(v66, v67);
        uint64_t v69 = v66 - v67;
        char v70 = v68;
        if (v68) {
          goto LABEL_126;
        }
        int64_t v71 = &v45[16 * v47];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v58 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v58) {
          goto LABEL_129;
        }
        if (__OFADD__(v69, v74)) {
          goto LABEL_130;
        }
        if (v69 + v74 >= v50)
        {
          BOOL v75 = v50 < v74;
LABEL_84:
          if (v75) {
            unint64_t v47 = v59;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v70) {
          goto LABEL_125;
        }
        uint64_t v78 = &v45[16 * v47];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v58 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v58) {
          goto LABEL_128;
        }
        if (v81 < v69) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v86 = v47 - 1;
        if (v47 - 1 >= v12)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!v10) {
          goto LABEL_144;
        }
        unint64_t v87 = v11;
        os_log_t v88 = &v45[16 * v86];
        uint64_t v89 = *(void *)v88;
        uint64_t v90 = &v45[16 * v47];
        uint64_t v91 = *((void *)v90 + 1);
        sub_1005BECEC((char *)(v10 + 96 * *(void *)v88), (char *)(v10 + 96 * *(void *)v90), v10 + 96 * v91, v135);
        if (v1) {
          goto LABEL_94;
        }
        if (v91 < v89) {
          goto LABEL_118;
        }
        if (v47 > *((void *)v87 + 2)) {
          goto LABEL_119;
        }
        *(void *)os_log_t v88 = v89;
        *(void *)&v45[16 * v86 + 8] = v91;
        unint64_t v92 = *((void *)v87 + 2);
        if (v47 >= v92) {
          goto LABEL_120;
        }
        uint64_t v11 = v87;
        unint64_t v12 = v92 - 1;
        memmove(&v45[16 * v47], v90 + 16, 16 * (v92 - 1 - v47));
        *((void *)v87 + 2) = v92 - 1;
        uint64_t v10 = v136;
        if (v92 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v128;
    if (v9 >= v128)
    {
      uint64_t v8 = v126;
      goto LABEL_104;
    }
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  Swift::Int result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_1005BECEC(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 96;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 96;
  uint64_t v24 = __dst;
  uint64_t v23 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -95)
    {
      uint64_t v15 = 96 * v11;
      if (a4 != __src || &__src[v15] <= a4) {
        memmove(a4, __src, 96 * v11);
      }
      uint64_t v16 = &v4[v15];
      BOOL v22 = &v4[v15];
      uint64_t v24 = v6;
      if (v7 < v6 && v10 >= 96)
      {
        uint64_t v17 = (char *)(a3 - 96);
        uint64_t v18 = v6;
        while (1)
        {
          uint64_t v19 = v17 + 96;
          uint64_t v20 = *((void *)v18 - 12);
          v18 -= 96;
          if (*((void *)v16 - 12) >= v20)
          {
            BOOL v22 = v16 - 96;
            if (v19 < v16 || v17 >= v16 || v19 != v16) {
              memmove(v17, v16 - 96, 0x60uLL);
            }
            uint64_t v18 = v6;
            v16 -= 96;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v19 != v6 || v17 >= v6) {
              memmove(v17, v18, 0x60uLL);
            }
            uint64_t v24 = v18;
            if (v18 <= v7) {
              goto LABEL_38;
            }
          }
          v17 -= 96;
          uint64_t v6 = v18;
          if (v16 <= v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -95)
  {
    size_t v12 = 96 * v9;
    if (a4 != __dst || &__dst[v12] <= a4) {
      memmove(a4, __dst, v12);
    }
    Swift::Int v13 = &v4[v12];
    BOOL v22 = v13;
    if ((unint64_t)v6 < a3 && v8 >= 96)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4) {
            memmove(v7, v4, 0x60uLL);
          }
          v4 += 96;
          uint64_t v23 = v4;
          uint64_t v14 = v6;
        }
        else
        {
          uint64_t v14 = v6 + 96;
          if (v7 < v6 || v7 >= v14 || v7 != v6) {
            memmove(v7, v6, 0x60uLL);
          }
        }
        v7 += 96;
        if (v4 >= v13) {
          break;
        }
        uint64_t v6 = v14;
      }
      while ((unint64_t)v14 < a3);
      uint64_t v24 = v7;
    }
LABEL_38:
    sub_1005AADC0((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

void (*sub_1005BEF9C(void *a1, Swift::UInt a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_100084C04(v4);
  v4[9] = sub_1005BF08C(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_1005BF02C;
}

void sub_1005BF02C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);
  free(v1);
}

void (*sub_1005BF08C(void *a1, Swift::UInt a2, char a3))(uint64_t **a1, char a2)
{
  uint64_t v4 = v3;
  int64_t v8 = malloc(0x68uLL);
  *a1 = v8;
  v8[10] = a2;
  v8[11] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_1005A02A4(a2);
  *((unsigned char *)v8 + 73) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  char v13 = v10 ^ 1;
  uint64_t v14 = v12 + ((v10 ^ 1) & 1);
  if (__OFADD__(v12, (v10 ^ 1) & 1))
  {
    __break(1u);
  }
  else
  {
    unsigned __int8 v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[12] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*v4 + 56) + 72 * v11;
        long long v18 = *(_OWORD *)v17;
        long long v19 = *(_OWORD *)(v17 + 16);
        long long v20 = *(_OWORD *)(v17 + 32);
        long long v21 = *(_OWORD *)(v17 + 48);
        uint64_t v22 = *(void *)(v17 + 64);
LABEL_12:
        *(_OWORD *)int64_t v8 = v18;
        *((_OWORD *)v8 + 1) = v19;
        *((_OWORD *)v8 + 2) = v20;
        *((_OWORD *)v8 + 3) = v21;
        v8[8] = v22;
        *((unsigned char *)v8 + 72) = v13 & 1;
        return sub_1005BF1F4;
      }
LABEL_11:
      uint64_t v22 = 0;
      long long v18 = 0uLL;
      long long v19 = 0uLL;
      long long v20 = 0uLL;
      long long v21 = 0uLL;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_1005A3820();
      goto LABEL_7;
    }
    sub_1005A0F44(v14, a3 & 1);
    unint64_t v23 = sub_1005A02A4(a2);
    if ((v15 & 1) == (v24 & 1))
    {
      unint64_t v11 = v23;
      v8[12] = v23;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **, char))sub_1005E3380();
  __break(1u);
  return result;
}

void sub_1005BF1F4(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  LOBYTE(v3) = *((unsigned char *)*a1 + 72);
  LOBYTE(v4) = *((unsigned char *)*a1 + 73);
  if (a2)
  {
    if ((*a1)[9]) {
      goto LABEL_8;
    }
    uint64_t v6 = v2[7];
    uint64_t v5 = v2[8];
    uint64_t v8 = v2[5];
    uint64_t v7 = v2[6];
    uint64_t v10 = v2[3];
    uint64_t v9 = v2[4];
    uint64_t v12 = v2[1];
    uint64_t v11 = v2[2];
    uint64_t v13 = *v2;
    unint64_t v14 = v2[12];
    unsigned __int8 v15 = *(void **)v2[11];
    if (v4) {
      goto LABEL_11;
    }
    uint64_t v16 = v2[10];
    v15[(v14 >> 6) + 8] |= 1 << v14;
    *(void *)(v15[6] + 8 * v14) = v16;
    uint64_t v4 = v15[7] + 72 * v14;
    *(void *)uint64_t v4 = v13;
    *(void *)(v4 + 8) = v12;
    *(void *)(v4 + 16) = v11;
    *(void *)(v4 + 24) = v10;
    *(void *)(v4 + 32) = v9;
    *(void *)(v4 + 40) = v8;
    *(void *)(v4 + 48) = v7;
    *(void *)(v4 + 56) = v6;
    *(void *)(v4 + 64) = v5;
    uint64_t v17 = v15[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v3 = v17 + 1;
    if (!v18)
    {
LABEL_13:
      id v15[2] = v3;
      goto LABEL_14;
    }
    __break(1u);
  }
  if (v3)
  {
LABEL_8:
    if (v4) {
      sub_10059A548(v2[12], *(void *)v2[11]);
    }
    goto LABEL_14;
  }
  uint64_t v6 = v2[7];
  uint64_t v5 = v2[8];
  uint64_t v8 = v2[5];
  uint64_t v7 = v2[6];
  uint64_t v10 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v12 = v2[1];
  uint64_t v11 = v2[2];
  uint64_t v13 = *v2;
  unint64_t v14 = v2[12];
  unsigned __int8 v15 = *(void **)v2[11];
  if ((v4 & 1) == 0)
  {
    uint64_t v20 = v2[10];
    v15[(v14 >> 6) + 8] |= 1 << v14;
    *(void *)(v15[6] + 8 * v14) = v20;
    long long v21 = (void *)(v15[7] + 72 * v14);
    *long long v21 = v13;
    v21[1] = v12;
    _OWORD v21[2] = v11;
    uint64_t v21[3] = v10;
    void v21[4] = v9;
    v21[5] = v8;
    v21[6] = v7;
    v21[7] = v6;
    v21[8] = v5;
    uint64_t v22 = v15[2];
    BOOL v18 = __OFADD__(v22, 1);
    uint64_t v3 = v22 + 1;
    if (v18)
    {
      __break(1u);
      return;
    }
    goto LABEL_13;
  }
LABEL_11:
  long long v19 = (void *)(v15[7] + 72 * v14);
  *long long v19 = v13;
  v19[1] = v12;
  void v19[2] = v11;
  v19[3] = v10;
  id v19[4] = v9;
  v19[5] = v8;
  v19[6] = v7;
  v19[7] = v6;
  v19[8] = v5;
LABEL_14:
  free(v2);
}

unint64_t sub_1005BF368()
{
  unint64_t result = qword_10071ABD0;
  if (!qword_10071ABD0)
  {
    sub_1005E0400();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071ABD0);
  }
  return result;
}

unint64_t sub_1005BF3C0()
{
  unint64_t result = qword_10071ABE0;
  if (!qword_10071ABE0)
  {
    sub_10000744C(&qword_10071ABD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071ABE0);
  }
  return result;
}

unint64_t sub_1005BF41C()
{
  unint64_t result = qword_10071ABF8;
  if (!qword_10071ABF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071ABF8);
  }
  return result;
}

void sub_1005BF470(uint64_t a1, void *a2)
{
  Swift::UInt v2 = 0;
  int64_t v3 = 0;
  uint64_t v6 = a2[8];
  uint64_t v4 = a2 + 8;
  uint64_t v5 = v6;
  uint64_t v7 = 1 << *((unsigned char *)v4 - 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v5;
  int64_t v26 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v27 = v4;
  while (1)
  {
    Swift::UInt v31 = v2;
    if (v9)
    {
      unint64_t v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      int64_t v29 = v3;
      unint64_t v11 = v10 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v22 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v22 >= v26) {
      goto LABEL_19;
    }
    unint64_t v23 = v27[v22];
    int64_t v24 = v3 + 1;
    if (!v23)
    {
      int64_t v24 = v22 + 1;
      if (v22 + 1 >= v26) {
        goto LABEL_19;
      }
      unint64_t v23 = v27[v24];
      if (!v23) {
        break;
      }
    }
LABEL_18:
    unint64_t v9 = (v23 - 1) & v23;
    int64_t v29 = v24;
    unint64_t v11 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_5:
    Swift::UInt v12 = *(void *)(a2[6] + 8 * v11);
    uint64_t v13 = (Swift::UInt *)(a2[7] + 72 * v11);
    Swift::UInt v14 = *v13;
    Swift::UInt v15 = v13[1];
    Swift::UInt v16 = v13[2];
    Swift::UInt v17 = v13[3];
    Swift::UInt v18 = v13[4];
    Swift::UInt v19 = v13[5];
    Swift::UInt v20 = v13[6];
    Swift::UInt v21 = v13[7];
    Swift::UInt v30 = v13[8];
    sub_1005E3410(v12);
    sub_1005E3410(v14);
    sub_1005E3410(v15);
    sub_1005E3410(v16);
    sub_1005E3410(v17);
    sub_1005E3410(v18);
    sub_1005E3410(v19);
    sub_1005E3410(v20);
    sub_1005E3410(v21);
    sub_1005E3410(v30);
    Swift::UInt v2 = sub_1005E3470() ^ v31;
    int64_t v3 = v29;
  }
  int64_t v25 = v22 + 2;
  if (v25 >= v26)
  {
LABEL_19:
    sub_1005E3410(v2);
    return;
  }
  unint64_t v23 = v27[v25];
  if (v23)
  {
    int64_t v24 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v26) {
      goto LABEL_19;
    }
    unint64_t v23 = v27[v24];
    ++v25;
    if (v23) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
}

uint64_t sub_1005BF67C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = sub_1005E0970();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  BOOL v58 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E03E0();
  swift_allocObject();
  uint64_t v9 = sub_1005E03D0();
  sub_1005E0370();
  unint64_t v10 = (void *)sub_100592604((uint64_t)_swiftEmptyArrayStorage);
  sub_10000566C(&qword_10071ABE8);
  sub_1005BFEAC(&qword_10071AC00, &qword_10071ABE8, (void (*)(void))sub_1005BFE58);
  sub_1005E03C0();
  v52[1] = v9;
  uint64_t v53 = a1;
  uint64_t v54 = v7;
  uint64_t v55 = v6;
  uint64_t v56 = a2;
  unint64_t v57 = a3;
  uint64_t v21 = v66[2];
  v52[0] = v66;
  if (v21)
  {
    int64_t v22 = v66 + 8;
    do
    {
      uint64_t v59 = v21;
      Swift::UInt v24 = *(v22 - 4);
      uint64_t v25 = *(v22 - 2);
      uint64_t v61 = *(v22 - 3);
      uint64_t v62 = v25;
      uint64_t v26 = *v22;
      uint64_t v64 = *(v22 - 1);
      uint64_t v65 = v26;
      uint64_t v20 = v22[2];
      uint64_t v63 = v22[1];
      uint64_t v27 = v22[3];
      if (*((unsigned char *)v22 + 40)) {
        uint64_t v28 = 0;
      }
      else {
        uint64_t v28 = v22[4];
      }
      if (*((unsigned char *)v22 + 56)) {
        uint64_t v18 = 0;
      }
      else {
        uint64_t v18 = v22[6];
      }
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v66 = v10;
      Swift::UInt v60 = v24;
      unint64_t v30 = sub_1005A02A4(v24);
      uint64_t v31 = v10[2];
      BOOL v32 = (v29 & 1) == 0;
      uint64_t v33 = v31 + v32;
      if (__OFADD__(v31, v32))
      {
        __break(1u);
        __break(1u);
LABEL_32:
        __break(1u);
        __break(1u);
        goto LABEL_33;
      }
      a3 = v29;
      if (v10[3] >= v33)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1005A3820();
        }
      }
      else
      {
        sub_1005A0F44(v33, isUniquelyReferenced_nonNull_native);
        unint64_t v34 = sub_1005A02A4(v60);
        if ((a3 & 1) != (v35 & 1))
        {
          uint64_t result = sub_1005E3380();
          __break(1u);
          return result;
        }
        unint64_t v30 = v34;
      }
      uint64_t v37 = v63;
      uint64_t v36 = v64;
      uint64_t v38 = v65;
      uint64_t v40 = v61;
      uint64_t v39 = v62;
      unint64_t v10 = v66;
      if (a3)
      {
        unint64_t v23 = (void *)(v66[7] + 72 * v30);
        *unint64_t v23 = v61;
        v23[1] = v39;
        v23[2] = v36;
        void v23[3] = v38;
        v23[4] = v37;
        void v23[5] = v20;
        v23[6] = v27;
        v23[7] = v28;
        v23[8] = v18;
      }
      else
      {
        v66[(v30 >> 6) + 8] |= 1 << v30;
        *(void *)(v10[6] + 8 * v30) = v60;
        long long v41 = (void *)(v10[7] + 72 * v30);
        *long long v41 = v40;
        v41[1] = v39;
        v41[2] = v36;
        id v41[3] = v38;
        v41[4] = v37;
        v41[5] = v20;
        v41[6] = v27;
        void v41[7] = v28;
        v41[8] = v18;
        uint64_t v42 = v10[2];
        BOOL v43 = __OFADD__(v42, 1);
        uint64_t v44 = v42 + 1;
        if (v43) {
          goto LABEL_32;
        }
        void v10[2] = v44;
      }
      swift_bridgeObjectRelease();
      v22 += 12;
      uint64_t v21 = v59 - 1;
    }
    while (v59 != 1);
  }
  swift_bridgeObjectRelease();
  uint64_t v66 = v10;
  uint64_t v27 = v53;
  uint64_t v18 = v54;
  uint64_t isUniquelyReferenced_nonNull_native = v56;
  a3 = v57;
  uint64_t v20 = v55;
  uint64_t v45 = v58;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v45, v27, v20);
    sub_1005E08F0();
    double v48 = round(v47 / 21600.0);
    uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v18 += 8;
    uint64_t v49 = v50;
    v50((uint64_t)v45, v20);
    if ((~*(void *)&v48 & 0x7FF0000000000000) == 0) {
      break;
    }
    if (v48 <= -9.22337204e18)
    {
LABEL_33:
      __break(1u);
    }
    else if (v48 < 9.22337204e18)
    {
      sub_1005BB39C((uint64_t)v48);
      break;
    }
    __break(1u);
    swift_once();
    uint64_t v11 = sub_1005E0ED0();
    sub_1003461B0(v11, (uint64_t)qword_1007623A8);
    swift_errorRetain();
    swift_errorRetain();
    Swift::UInt v12 = sub_1005E0EB0();
    os_log_type_t v13 = sub_1005E25A0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v54 = v18;
      Swift::UInt v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v55 = v20;
      uint64_t v56 = isUniquelyReferenced_nonNull_native;
      unint64_t v57 = a3;
      Swift::UInt v16 = (void *)v15;
      *(_DWORD *)Swift::UInt v14 = 138412290;
      swift_errorRetain();
      uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v66 = (void *)v17;
      sub_1005E2960();
      void *v16 = v17;
      uint64_t v18 = v54;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Unable to decode serialized Statistics data: %@", v14, 0xCu);
      sub_10000566C(&qword_100718A08);
      swift_arrayDestroy();
      uint64_t isUniquelyReferenced_nonNull_native = v56;
      a3 = v57;
      uint64_t v20 = v55;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v45 = v58;

    unint64_t v46 = sub_100592604((uint64_t)_swiftEmptyArrayStorage);
    swift_errorRelease();
    swift_errorRelease();
    uint64_t v66 = (void *)v46;
  }
  swift_release();
  sub_1000094D4(isUniquelyReferenced_nonNull_native, a3);
  v49(v27, v20);
  return (uint64_t)v66;
}

unint64_t sub_1005BFE58()
{
  unint64_t result = qword_10071AC08;
  if (!qword_10071AC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AC08);
  }
  return result;
}

uint64_t sub_1005BFEAC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000744C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1005BFF18()
{
  unint64_t result = qword_10071AC20;
  if (!qword_10071AC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AC20);
  }
  return result;
}

uint64_t sub_1005BFF6C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005BFF7C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005BFF8C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005BFF9C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005BFFAC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005BFFBC()
{
  return _swift_deallocObject(v0, 24, 7);
}

BOOL sub_1005BFFCC(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2
      && *(void *)(a1 + 8) == *(void *)(a2 + 8)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16)
      && (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 24), *(int64x2_t *)(a2 + 24)), (int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 40), *(int64x2_t *)(a2 + 40)))), 0xFuLL))) & 1) != 0&& *(void *)(a1 + 56) == *(void *)(a2 + 56)&& *(void *)(a1 + 64) == *(void *)(a2 + 64);
}

uint64_t sub_1005C0060()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005C0070()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005C0080()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005C0090()
{
  return _swift_deallocObject(v0, 24, 7);
}

ValueMetadata *type metadata accessor for Statistics.Version1Format()
{
  return &type metadata for Statistics.Version1Format;
}

__n128 initializeWithCopy for Statistics.Version2Format(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Statistics.Version2Format(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 89)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Statistics.Version2Format(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 89) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Statistics.Version2Format()
{
  return &type metadata for Statistics.Version2Format;
}

__n128 initializeWithCopy for Statistics.Value(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Statistics.Value(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Statistics.Value(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 72) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Statistics.Value()
{
  return &type metadata for Statistics.Value;
}

ValueMetadata *type metadata accessor for Statistics.TimeIntervalIndex()
{
  return &type metadata for Statistics.TimeIntervalIndex;
}

ValueMetadata *type metadata accessor for Statistics()
{
  return &type metadata for Statistics;
}

unint64_t sub_1005C01FC()
{
  unint64_t result = qword_10071AC28;
  if (!qword_10071AC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AC28);
  }
  return result;
}

unint64_t sub_1005C0254()
{
  unint64_t result = qword_10071AC30;
  if (!qword_10071AC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AC30);
  }
  return result;
}

unint64_t sub_1005C02AC()
{
  unint64_t result = qword_10071AC38;
  if (!qword_10071AC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AC38);
  }
  return result;
}

unint64_t sub_1005C0300()
{
  unint64_t result = qword_10071AC48;
  if (!qword_10071AC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AC48);
  }
  return result;
}

uint64_t sub_1005C0354(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._uint64_t rawValue = &off_1006FC6D0;
  v6._object = a2;
  unint64_t v4 = sub_1005E3050(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_1005C03A0(void *a1)
{
  uint64_t v2 = sub_10000566C(&qword_10071AC58);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  long long v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003BCDC(a1, a1[3]);
  sub_1005C08F0();
  sub_1005E34E0();
  v8[15] = 0;
  uint64_t v6 = sub_1005E30D0();
  v8[14] = 1;
  sub_1005E30D0();
  v8[13] = 2;
  sub_1005E30D0();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
  return v6;
}

uint64_t sub_1005C056C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._uint64_t rawValue = &off_1006FC738;
  v6._object = a2;
  unint64_t v4 = sub_1005E3050(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xA) {
    return 10;
  }
  else {
    return v4;
  }
}

uint64_t sub_1005C05B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000566C(&qword_10071AC50);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005C0300();
  sub_1005E34E0();
  if (v2) {
    return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
  }
  char v38 = 0;
  uint64_t v9 = sub_1005E30D0();
  char v37 = 1;
  uint64_t v10 = sub_1005E30D0();
  char v36 = 2;
  uint64_t v28 = sub_1005E30D0();
  char v35 = 3;
  uint64_t v27 = sub_1005E30D0();
  char v34 = 4;
  uint64_t v26 = sub_1005E30D0();
  char v33 = 5;
  uint64_t v25 = sub_1005E30D0();
  char v32 = 6;
  uint64_t v24 = sub_1005E30D0();
  char v31 = 7;
  uint64_t v23 = sub_1005E30D0();
  char v30 = 8;
  uint64_t v22 = sub_1005E3090();
  int v21 = v11;
  char v29 = 9;
  uint64_t v12 = sub_1005E3090();
  int v20 = v13;
  uint64_t v14 = v12;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  uint64_t v16 = v27;
  *(void *)(a2 + 16) = v28;
  *(void *)(a2 + 24) = v16;
  uint64_t v17 = v25;
  *(void *)(a2 + 32) = v26;
  *(void *)(a2 + 40) = v17;
  uint64_t v18 = v23;
  *(void *)(a2 + 48) = v24;
  *(void *)(a2 + 56) = v18;
  *(void *)(a2 + 64) = v22;
  *(unsigned char *)(a2 + 72) = v21 & 1;
  *(void *)(a2 + 80) = v14;
  *(unsigned char *)(a2 + 88) = v20 & 1;
  return result;
}

unint64_t sub_1005C08F0()
{
  unint64_t result = qword_10071AC60;
  if (!qword_10071AC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AC60);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Statistics.Version1Format.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005C0A10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Statistics.Version1Format.CodingKeys()
{
  return &type metadata for Statistics.Version1Format.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Statistics.Version2Format.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005C0B14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Statistics.Version2Format.CodingKeys()
{
  return &type metadata for Statistics.Version2Format.CodingKeys;
}

ValueMetadata *type metadata accessor for Statistics.Errors()
{
  return &type metadata for Statistics.Errors;
}

ValueMetadata *type metadata accessor for Statistics.Spotlight()
{
  return &type metadata for Statistics.Spotlight;
}

ValueMetadata *type metadata accessor for Statistics.DataUsage()
{
  return &type metadata for Statistics.DataUsage;
}

unint64_t sub_1005C0B80()
{
  unint64_t result = qword_10071AC70;
  if (!qword_10071AC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AC70);
  }
  return result;
}

unint64_t sub_1005C0BD8()
{
  unint64_t result = qword_10071AC78;
  if (!qword_10071AC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AC78);
  }
  return result;
}

unint64_t sub_1005C0C30()
{
  unint64_t result = qword_10071AC80;
  if (!qword_10071AC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AC80);
  }
  return result;
}

unint64_t sub_1005C0C88()
{
  unint64_t result = qword_10071AC88;
  if (!qword_10071AC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AC88);
  }
  return result;
}

unint64_t sub_1005C0CE0()
{
  unint64_t result = qword_10071AC90;
  if (!qword_10071AC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AC90);
  }
  return result;
}

unint64_t sub_1005C0D38()
{
  unint64_t result = qword_10071AC98;
  if (!qword_10071AC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AC98);
  }
  return result;
}

unint64_t sub_1005C0D90()
{
  unint64_t result = qword_10071ACA0;
  if (!qword_10071ACA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071ACA0);
  }
  return result;
}

unint64_t sub_1005C0DE8()
{
  unint64_t result = qword_10071ACA8;
  if (!qword_10071ACA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071ACA8);
  }
  return result;
}

unint64_t sub_1005C0E40()
{
  unint64_t result = qword_10071ACB0;
  if (!qword_10071ACB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071ACB0);
  }
  return result;
}

uint64_t sub_1005C0E9C()
{
  return swift_initClassMetadata2();
}

void sub_1005C0EE0(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v4 = v3;
  v25[0] = a3;
  uint64_t v7 = sub_1005E28C0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)v25 - v9;
  id v11 = [v3 userInfo];
  long long v29 = *(_OWORD *)a1;
  v26[0] = *(_OWORD *)a1;
  swift_bridgeObjectRetain_n();
  id v12 = objc_msgSend(v11, "__swift_objectForKeyedSubscript:", sub_1005E3350());
  swift_unknownObjectRelease();

  if (v12)
  {
    sub_1005E2A70();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v26, 0, sizeof(v26));
  }
  sub_10053A5B0((uint64_t)v26, (uint64_t)&v27);
  if (v28)
  {
    sub_1003C8730(0, (unint64_t *)&qword_1007195E8);
    if (swift_dynamicCast())
    {
      int v13 = (void *)v25[1];
      sub_10002A77C((uint64_t)&v29);
      uint64_t v14 = (void (*)(void *))a1[6];
      id v15 = v13;
      v14(v13);

      return;
    }
    sub_10002A77C((uint64_t)&v29);
  }
  else
  {
    sub_10002A77C((uint64_t)&v29);
    sub_10053A618((uint64_t)&v27);
  }
  id v16 = objc_msgSend(v4, "persistentStoreCoordinator", v25[0]);
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(v10, 1, 1, a2);
    goto LABEL_13;
  }
  uint64_t v17 = v16;
  sub_1005C1D04(a1, a2, (uint64_t)v10);

  uint64_t v18 = *(void *)(a2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 1, a2) == 1)
  {
LABEL_13:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v23 = v25[0];
    ((void (*)(void))a1[6])(0);
    id v20 = [v4 userInfo];
    int v21 = (uint64_t (*)(uint64_t))a1[4];
    swift_bridgeObjectRetain();
    uint64_t v22 = v23;
    goto LABEL_14;
  }
  uint64_t v19 = v25[0];
  (*(void (**)(void, char *, uint64_t))(v18 + 32))(v25[0], v10, a2);
  id v20 = [v4 userInfo];
  int v21 = (uint64_t (*)(uint64_t))a1[4];
  swift_bridgeObjectRetain();
  uint64_t v22 = v19;
LABEL_14:
  uint64_t v24 = (void *)v21(v22);
  long long v27 = v29;
  swift_bridgeObjectRetain();
  objc_msgSend(v20, "__swift_setObject:forKeyedSubscript:", v24, sub_1005E3350());

  swift_unknownObjectRelease();
  sub_10002A77C((uint64_t)&v29);
}

uint64_t sub_1005C12B4()
{
  uint64_t v1 = *(void *)((swift_isaMask & *v0) + 0x50);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  unsigned int v4 = (char *)&v11 - v3;
  sub_1005E0510();
  if (*((void *)&v14 + 1))
  {
    sub_1003C8730(0, &qword_10071A0C8);
    if (swift_dynamicCast())
    {
      id v5 = v12;
      id v6 = [v12 persistentStoreCoordinator];
      if (v6)
      {
        uint64_t v7 = v6;
        long long v8 = *(_OWORD *)((char *)v0 + qword_10071ACB8 + 48);
        long long v15 = *(_OWORD *)((char *)v0 + qword_10071ACB8 + 32);
        long long v16 = v8;
        long long v17 = *(_OWORD *)((char *)v0 + qword_10071ACB8 + 64);
        long long v9 = *(_OWORD *)((char *)v0 + qword_10071ACB8 + 16);
        long long v13 = *(_OWORD *)((char *)v0 + qword_10071ACB8);
        long long v14 = v9;
        sub_1005C0EE0((uint64_t *)&v13, v1, (uint64_t)v4);
        sub_1005C1504((uint64_t)v4, (uint64_t)&v13);

        return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      }
    }
  }
  else
  {
    sub_10053A618((uint64_t)&v13);
  }
  uint64_t result = sub_1005E2F20();
  __break(1u);
  return result;
}

void sub_1005C1504(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = [v2 persistentStores];
  sub_1003C8730(0, &qword_10071A0D0);
  unint64_t v7 = sub_1005E20C0();

  if (!(v7 >> 62))
  {
    long long v8 = *(void **)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_3;
    }
LABEL_22:
    swift_bridgeObjectRelease();
LABEL_27:
    sub_1005E2F20();
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  long long v8 = (void *)sub_1005E2FB0();
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_22;
  }
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
  {
    id v9 = (id)sub_1005E2CF0();
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_26:

      goto LABEL_27;
    }
    id v9 = *(id *)(v7 + 32);
  }
  long long v8 = v9;
  swift_bridgeObjectRelease();
  id v10 = [v2 persistentStores];
  unint64_t v11 = sub_1005E20C0();

  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v12 != 1) {
    goto LABEL_26;
  }
  id v13 = [v3 metadataForPersistentStore:v8];
  uint64_t v14 = sub_1005E1970();

  long long v15 = *(uint64_t (**)(uint64_t))(a2 + 32);
  swift_bridgeObjectRetain();
  long long v16 = (void *)v15(a1);
  uint64_t v18 = *(void *)a2;
  uint64_t v17 = *(void *)(a2 + 8);
  if (!*(void *)(v14 + 16))
  {
    long long v30 = 0u;
    long long v31 = 0u;
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  unint64_t v19 = sub_100024668(v18, v17);
  if ((v20 & 1) == 0)
  {
    long long v30 = 0u;
    long long v31 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  sub_1000D65AC(*(void *)(v14 + 56) + 32 * v19, (uint64_t)&v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v31 + 1))
  {
    sub_1003C8730(0, (unint64_t *)&qword_1007195E8);
    if (swift_dynamicCast())
    {
      uint64_t v28 = a1;
      id v21 = v16;
      id v22 = *(id *)&v29[0];
      char v23 = sub_1005E2840();

      long long v27 = v21;
      a1 = v28;
      if (v23)
      {

        swift_bridgeObjectRelease();
        return;
      }
    }
    goto LABEL_19;
  }
LABEL_18:
  sub_10053A618((uint64_t)&v30);
LABEL_19:
  (*(void (**)(uint64_t))(a2 + 64))(a1);
  *((void *)&v31 + 1) = sub_1003C8730(0, (unint64_t *)&qword_1007195E8);
  *(void *)&long long v30 = v16;
  sub_100353CB8(&v30, v29);
  swift_bridgeObjectRetain();
  id v24 = v16;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10059AB80(v29, v18, v17, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Class isa = sub_1005E1950().super.isa;
  swift_bridgeObjectRelease();
  [v3 setMetadata:isa forPersistentStore:v8];
}

uint64_t sub_1005C192C(void *a1)
{
  uint64_t v2 = sub_1005E0520();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  id v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E0500();
  id v6 = a1;
  sub_1005C12B4();

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1005C1A14()
{
}

uint64_t sub_1005C1A3C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for StoreMetadataHelper.SaveObserver()
{
  return sub_1000DAF2C();
}

uint64_t sub_1005C1AC8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1005C1B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1005C1BB4(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[7];
  a1[6] = a2[6];
  a1[7] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[9];
  a1[8] = a2[8];
  a1[9] = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1005C1C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v5;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for StoreMetadataHelper()
{
  return sub_1000DAF2C();
}

uint64_t sub_1005C1D04@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v7 = [v3 persistentStores];
  sub_1003C8730(0, &qword_10071A0D0);
  unint64_t v8 = sub_1005E20C0();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    id v9 = (void *)sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (v9)
    {
LABEL_3:
      if ((v8 & 0xC000000000000001) != 0)
      {
        id v10 = (id)sub_1005E2CF0();
      }
      else
      {
        if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_26:

          goto LABEL_27;
        }
        id v10 = *(id *)(v8 + 32);
      }
      id v9 = v10;
      swift_bridgeObjectRelease();
      id v11 = [v3 persistentStores];
      unint64_t v12 = sub_1005E20C0();

      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = sub_1005E2FB0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v13 == 1)
      {
        id v14 = [v3 metadataForPersistentStore:v9];
        uint64_t v15 = sub_1005E1970();

        if (*(void *)(v15 + 16))
        {
          uint64_t v17 = *a1;
          uint64_t v16 = a1[1];
          swift_bridgeObjectRetain();
          unint64_t v18 = sub_100024668(v17, v16);
          if (v19)
          {
            sub_1000D65AC(*(void *)(v15 + 56) + 32 * v18, (uint64_t)&v25);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*((void *)&v26 + 1))
            {
              sub_1003C8730(0, (unint64_t *)&qword_1007195E8);
              if (swift_dynamicCast())
              {
                char v20 = (void (*)())a1[6];
                id v21 = v24;
                v20();

                uint64_t v22 = 0;
                return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, v22, 1, a2);
              }

LABEL_18:
              uint64_t v22 = 1;
              return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, v22, 1, a2);
            }
LABEL_17:

            sub_10053A618((uint64_t)&v25);
            goto LABEL_18;
          }
          long long v25 = 0u;
          long long v26 = 0u;
          swift_bridgeObjectRelease();
        }
        else
        {
          long long v25 = 0u;
          long long v26 = 0u;
        }
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      goto LABEL_26;
    }
  }
  else
  {
    id v9 = *(void **)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
LABEL_27:
  uint64_t result = sub_1005E2F20();
  __break(1u);
  return result;
}

void sub_1005C204C()
{
}

id sub_1005C207C()
{
  sub_10000566C(&qword_100718A50);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v38 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10000566C(&qword_10071ADC0) - 8;
  __chkstk_darwin();
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v38 - v5;
  unint64_t v7 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v44 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v45 = (unint64_t)_swiftEmptyArrayStorage;
  sub_10000566C((uint64_t *)&unk_100719790);
  MessageIdentifierSet.ranges.getter((uint64_t)v1);
  sub_1005C2744((uint64_t)v1, (uint64_t)v4);
  sub_10000566C(&qword_100718A78);
  uint64_t v8 = sub_1005E35B0();
  sub_100007A48((uint64_t)v1, &qword_100718A50);
  *(void *)&v4[*(int *)(v2 + 44)] = v8;
  sub_1005C27AC((uint64_t)v4, (uint64_t)v6);
  uint64_t v9 = *(int *)(v2 + 44);
  uint64_t v10 = *(void *)&v6[v9];
  if (v10 != sub_1005E35E0())
  {
    uint64_t v39 = v9;
    uint64_t v40 = (void *)0x80000001005ED600;
    while (1)
    {
      MessageIdentifierSet.RangeView.subscript.getter();
      uint64_t v17 = v42;
      uint64_t v16 = HIDWORD(v42);
      uint64_t v18 = sub_1005E35B0();
      uint64_t v19 = sub_1005E35E0();
      if (v10 < v18 || v10 >= v19) {
        break;
      }
      if (v16 - v17 <= 1)
      {
        while (1)
        {
          if (v16 == v17)
          {
            int v20 = 0;
          }
          else
          {
            int v20 = v17 + 1;
            if (v17 == -1)
            {
              __break(1u);
              goto LABEL_25;
            }
          }
          sub_1005E34C0();
          sub_1005E20A0();
          if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1005E2110();
          }
          sub_1005E2170();
          sub_1005E20E0();
          BOOL v21 = v16 == v17;
          LODWORD(v17) = v20;
          if (v21) {
            goto LABEL_6;
          }
        }
      }
      uint64_t v42 = 0;
      unint64_t v43 = 0xE000000000000000;
      sub_1005E2C80(23);
      int v41 = v17;
      uint64_t v11 = sub_1005E3230();
      unint64_t v13 = v12;
      swift_bridgeObjectRelease();
      uint64_t v42 = v11;
      unint64_t v43 = v13;
      v47._countAndFlagsBits = 0xD000000000000013;
      v47._object = v40;
      sub_1005E1E30(v47);
      int v41 = v16;
      v48._countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v48);
      swift_bridgeObjectRelease();
      NSString v14 = sub_1005E1BD0();
      swift_bridgeObjectRelease();
      id v15 = [self predicateWithFormat:v14 argumentArray:0];

      sub_1005E20A0();
      if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1005E2110();
      }
      sub_1005E2170();
      sub_1005E20E0();
LABEL_6:
      if (++v10 == sub_1005E35E0())
      {
        *(void *)&v6[v39] = v10;
        unint64_t v7 = v45;
        goto LABEL_19;
      }
    }
LABEL_25:
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (!v27) {
      goto LABEL_27;
    }
    goto LABEL_21;
  }
LABEL_19:
  sub_100007A48((uint64_t)v6, &qword_10071ADC0);
  if (v7 >> 62) {
    goto LABEL_26;
  }
  if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_27:
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
LABEL_21:
  sub_10000566C(&qword_100719060);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1005F6670;
  sub_1003C8730(0, (unint64_t *)&qword_1007195E8);
  Class isa = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  *(void *)(v22 + 56) = sub_1003C8730(0, &qword_10071A780);
  *(void *)(v22 + 32) = isa;
  NSString v24 = sub_1005E1BD0();
  Class v25 = sub_1005E20B0().super.isa;
  swift_bridgeObjectRelease();
  id v26 = [self predicateWithFormat:v24 argumentArray:v25];

  sub_1005E20A0();
  if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1005E2110();
  }
  sub_1005E2170();
  sub_1005E20E0();
LABEL_28:
  unint64_t v28 = v44;
  if (v44 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (v33)
    {
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_1005E2FB0();
      swift_bridgeObjectRelease();
      if (v34 == 1)
      {
        swift_bridgeObjectRetain();
        id result = (id)sub_1005E2FB0();
        if (result) {
          goto LABEL_32;
        }
        swift_bridgeObjectRelease();
      }
LABEL_40:
      sub_1003C8730(0, &qword_100719080);
      Class v35 = sub_1005E20B0().super.isa;
      swift_bridgeObjectRelease();
      id v36 = [self orPredicateWithSubpredicates:v35];

      return v36;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    id v37 = [self predicateWithValue:0];
    return v37;
  }
  uint64_t v29 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v29) {
    goto LABEL_41;
  }
  if (v29 != 1) {
    goto LABEL_40;
  }
  id result = (id)swift_bridgeObjectRetain();
LABEL_32:
  if ((v28 & 0xC000000000000001) != 0)
  {
    id v31 = (id)sub_1005E2CF0();
    goto LABEL_35;
  }
  if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v31 = *(id *)(v28 + 32);
LABEL_35:
    id v32 = v31;
    swift_bridgeObjectRelease_n();
    return v32;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005C2744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100718A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005C27AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10071ADC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

IMAPSearchIndexerXPC::AccountID_optional __swiftcall AccountID.init(rawValue:)(IMAPSearchIndexerXPC::AccountID_optional rawValue)
{
  uint64_t v1 = HIBYTE(rawValue.value.rawValue._object) & 0xF;
  if (((uint64_t)rawValue.value.rawValue._object & 0x2000000000000000) == 0) {
    uint64_t v1 = rawValue.value.rawValue._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (!v1)
  {
    swift_bridgeObjectRelease();
    rawValue.value.rawValue._countAndFlagsBits = 0;
    rawValue.value.rawValue._object = 0;
  }
  return rawValue;
}

uint64_t sub_1005C2854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005C43AC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1005C2880(uint64_t a1)
{
  unint64_t v2 = sub_1005C2A34();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005C28BC(uint64_t a1)
{
  unint64_t v2 = sub_1005C2A34();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AccountID.encode(to:)(void *a1)
{
  uint64_t v2 = sub_10000566C(&qword_10071ADE0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005C2A34();
  sub_1005E3500();
  sub_1005E3190();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1005C2A34()
{
  unint64_t result = qword_10071ADE8;
  if (!qword_10071ADE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071ADE8);
  }
  return result;
}

uint64_t AccountID.init(from:)(void *a1)
{
  uint64_t v3 = sub_10000566C(&qword_10071ADF0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t)sub_10003BCDC(a1, a1[3]);
  sub_1005C2A34();
  sub_1005E34E0();
  if (!v1)
  {
    uint64_t v7 = sub_1005E30C0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
  return v7;
}

uint64_t sub_1005C2BE0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10000566C(&qword_10071ADF0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005C2A34();
  sub_1005E34E0();
  if (v2) {
    return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
  }
  uint64_t v9 = sub_1005E30C0();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_1005C2D58(void *a1)
{
  uint64_t v2 = sub_10000566C(&qword_10071ADE0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005C2A34();
  sub_1005E3500();
  sub_1005E3190();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t AccountConfiguration.endpoint.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountConfiguration.endpoint.setter(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(_WORD *)(v3 + 32) = a3;
  return result;
}

uint64_t AccountConfiguration.Endpoint.port.setter(uint64_t result)
{
  *(_WORD *)(v1 + 16) = result;
  return result;
}

BOOL static AccountConfiguration.Endpoint.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  if (a1 == a4 && a2 == a5) {
    return a3 == a6;
  }
  char v8 = sub_1005E3290();
  BOOL result = 0;
  if (v8) {
    return a3 == a6;
  }
  return result;
}

uint64_t sub_1005C2F74(char a1)
{
  if (a1) {
    return 1953656688;
  }
  else {
    return 1953722216;
  }
}

uint64_t sub_1005C2F94()
{
  return sub_1005C2F74(*v0);
}

uint64_t sub_1005C2F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005C4434(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005C2FC4(uint64_t a1)
{
  unint64_t v2 = sub_1005C31AC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005C3000(uint64_t a1)
{
  unint64_t v2 = sub_1005C31AC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AccountConfiguration.Endpoint.encode(to:)(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v12 = a4;
  uint64_t v6 = sub_10000566C(&qword_10071ADF8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005C31AC();
  sub_1005E3500();
  char v14 = 0;
  sub_1005E3190();
  if (!v4)
  {
    char v13 = 1;
    sub_1005E31D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1005C31AC()
{
  unint64_t result = qword_10071AE00;
  if (!qword_10071AE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AE00);
  }
  return result;
}

uint64_t AccountConfiguration.Endpoint.init(from:)(void *a1)
{
  uint64_t result = sub_1005C4500(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_1005C3224@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1005C4500(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(_WORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1005C3254(void *a1)
{
  return AccountConfiguration.Endpoint.encode(to:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int16 *)(v1 + 16));
}

BOOL sub_1005C3274(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int16 *)(a1 + 16);
  int v3 = *(unsigned __int16 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_1005E3290();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t AccountConfiguration.transportLayerSecurity.getter()
{
  return *(unsigned __int8 *)(v0 + 34);
}

uint64_t AccountConfiguration.transportLayerSecurity.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 34) = result;
  return result;
}

Swift::UInt32 (__swiftcall *AccountConfiguration.transportLayerSecurity.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t sub_1005C3304(char a1)
{
  return *(void *)&aInsecurestartt[8 * a1];
}

uint64_t sub_1005C3324()
{
  return sub_1005C3304(*v0);
}

uint64_t sub_1005C332C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005C4890(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005C3354(uint64_t a1)
{
  unint64_t v2 = sub_1005C46EC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005C3390(uint64_t a1)
{
  unint64_t v2 = sub_1005C46EC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005C33CC()
{
  return 0;
}

uint64_t sub_1005C33D8(uint64_t a1)
{
  unint64_t v2 = sub_1005C483C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005C3414(uint64_t a1)
{
  unint64_t v2 = sub_1005C483C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005C3454(uint64_t a1)
{
  unint64_t v2 = sub_1005C47E8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005C3490(uint64_t a1)
{
  unint64_t v2 = sub_1005C47E8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005C34CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005C49C8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1005C34F8(uint64_t a1)
{
  unint64_t v2 = sub_1005C4740();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005C3534(uint64_t a1)
{
  unint64_t v2 = sub_1005C4740();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AccountConfiguration.TransportLayerSecurity.encode(to:)(void *a1, int a2)
{
  int v27 = a2;
  uint64_t v3 = sub_10000566C(&qword_10071AE08);
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  __chkstk_darwin();
  NSString v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_10071AE10);
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  __chkstk_darwin();
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_10071AE18);
  uint64_t v21 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000566C(&qword_10071AE20);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  char v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005C46EC();
  unsigned __int8 v15 = v27;
  sub_1005E3500();
  if (!(v15 >> 6))
  {
    char v30 = 1;
    sub_1005C47E8();
    sub_1005E3120();
    unsigned __int8 v29 = v15;
    sub_1005C4794();
    uint64_t v19 = v23;
    sub_1005E31C0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (v15 >> 6 == 1)
  {
    char v16 = v15 & 0x3F;
    char v32 = 2;
    sub_1005C4740();
    uint64_t v17 = v24;
    sub_1005E3120();
    char v31 = v16;
    sub_1005C4794();
    uint64_t v18 = v26;
    sub_1005E31C0();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  char v28 = 0;
  sub_1005C483C();
  sub_1005E3120();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t AccountConfiguration.TransportLayerSecurity.init(from:)(void *a1)
{
  return sub_1005C4A38(a1);
}

uint64_t sub_1005C3988@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1005C4A38(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1005C39B4(void *a1)
{
  return AccountConfiguration.TransportLayerSecurity.encode(to:)(a1, *v1);
}

uint64_t sub_1005C39D0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1005C3A00(uint64_t a1)
{
  unint64_t v2 = sub_1005C507C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005C3A3C(uint64_t a1)
{
  unint64_t v2 = sub_1005C507C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005C3A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005C52D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005C3AA0(uint64_t a1)
{
  unint64_t v2 = sub_1005C5028();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005C3ADC(uint64_t a1)
{
  unint64_t v2 = sub_1005C5028();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005C3B18(uint64_t a1)
{
  unint64_t v2 = sub_1005C5124();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005C3B54(uint64_t a1)
{
  unint64_t v2 = sub_1005C5124();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005C3B90(uint64_t a1)
{
  unint64_t v2 = sub_1005C50D0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005C3BCC(uint64_t a1)
{
  unint64_t v2 = sub_1005C50D0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AccountConfiguration.CertificateTrustPolicy.encode(to:)(void *a1, int a2)
{
  int v24 = a2;
  uint64_t v3 = sub_10000566C(&qword_10071AE50);
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  __chkstk_darwin();
  uint64_t v21 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_10071AE58);
  uint64_t v19 = *(void *)(v5 - 8);
  uint64_t v20 = v5;
  __chkstk_darwin();
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_10071AE60);
  uint64_t v18 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000566C(&qword_10071AE68);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  char v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005C5028();
  sub_1005E3500();
  if ((_BYTE)v24)
  {
    if (v24 == 1)
    {
      char v26 = 1;
      sub_1005C50D0();
      sub_1005E3120();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v20);
    }
    else
    {
      char v27 = 2;
      sub_1005C507C();
      unsigned __int8 v15 = v21;
      sub_1005E3120();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v23);
    }
  }
  else
  {
    char v25 = 0;
    sub_1005C5124();
    sub_1005E3120();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

void *AccountConfiguration.CertificateTrustPolicy.init(from:)(void *a1)
{
  return sub_1005C5414(a1);
}

void *sub_1005C3F8C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1005C5414(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_1005C3FB8(void *a1)
{
  return AccountConfiguration.CertificateTrustPolicy.encode(to:)(a1, *v1);
}

uint64_t AccountConfiguration.init(accountID:endpoint:transportLayerSecurity:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __int16 a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(_WORD *)(a7 + 32) = a5;
  *(unsigned char *)(a7 + 34) = a6;
  return result;
}

uint64_t sub_1005C3FEC(char a1)
{
  if (!a1) {
    return 0x49746E756F636361;
  }
  if (a1 == 1) {
    return 0x746E696F70646E65;
  }
  return 0xD000000000000016;
}

uint64_t sub_1005C404C()
{
  return sub_1005C3FEC(*v0);
}

uint64_t sub_1005C4054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005C5AE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005C407C(uint64_t a1)
{
  unint64_t v2 = sub_1005C5984();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005C40B8(uint64_t a1)
{
  unint64_t v2 = sub_1005C5984();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AccountConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000566C(&qword_10071AE90);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005C5984();
  sub_1005E3500();
  long long v10 = *v3;
  char v12 = 0;
  sub_1005C59D8();
  sub_1005E31C0();
  if (!v2)
  {
    long long v10 = v3[1];
    __int16 v11 = *((_WORD *)v3 + 16);
    char v12 = 1;
    sub_1005C5A2C();
    sub_1005E31C0();
    sub_1005C5A80((unsigned char *)v3 + 34, &v13);
    sub_1005C5A80(&v13, &v10);
    char v12 = 2;
    sub_1005C5A90();
    sub_1005E31C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double AccountConfiguration.init(from:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1005C5C30(a1, (uint64_t)&v6);
  if (!v2)
  {
    double result = *(double *)&v6;
    long long v5 = *(_OWORD *)v7;
    *(_OWORD *)a2 = v6;
    *(_OWORD *)(a2 + 16) = v5;
    *(_DWORD *)(a2 + 31) = *(_DWORD *)&v7[15];
  }
  return result;
}

uint64_t sub_1005C4324(void *a1)
{
  return AccountConfiguration.encode(to:)(a1);
}

BOOL sub_1005C4360(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(_DWORD *)((char *)v6 + 15) = *(_DWORD *)((char *)a1 + 31);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(_DWORD *)((char *)v8 + 15) = *(_DWORD *)((char *)a2 + 31);
  return _s20IMAPSearchIndexerXPC20AccountConfigurationV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)&v5, (uint64_t)&v7);
}

uint64_t sub_1005C43AC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1005E3290();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1005C4434(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1953722216 && a2 == 0xE400000000000000;
  if (v3 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953656688 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1005C4500(void *a1)
{
  uint64_t v3 = sub_10000566C(&qword_10071B020);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[4];
  sub_10003BCDC(a1, a1[3]);
  sub_1005C31AC();
  sub_1005E34E0();
  if (v1)
  {
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
  }
  else
  {
    v9[15] = 0;
    uint64_t v7 = sub_1005E30C0();
    v9[14] = 1;
    swift_bridgeObjectRetain();
    sub_1005E30F0();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1005C46EC()
{
  unint64_t result = qword_10071AE28;
  if (!qword_10071AE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AE28);
  }
  return result;
}

unint64_t sub_1005C4740()
{
  unint64_t result = qword_10071AE30;
  if (!qword_10071AE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AE30);
  }
  return result;
}

unint64_t sub_1005C4794()
{
  unint64_t result = qword_10071AE38;
  if (!qword_10071AE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AE38);
  }
  return result;
}

unint64_t sub_1005C47E8()
{
  unint64_t result = qword_10071AE40;
  if (!qword_10071AE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AE40);
  }
  return result;
}

unint64_t sub_1005C483C()
{
  unint64_t result = qword_10071AE48;
  if (!qword_10071AE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AE48);
  }
  return result;
}

uint64_t sub_1005C4890(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6572756365736E69 && a2 == 0xE800000000000000;
  if (v3 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x534C547472617473 && a2 == 0xE800000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7564404 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1005C49C8(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1005E3290();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1005C4A38(void *a1)
{
  uint64_t v28 = sub_10000566C(&qword_10071AFF8);
  uint64_t v30 = *(void *)(v28 - 8);
  __chkstk_darwin();
  char v32 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10000566C(&qword_10071B000);
  uint64_t v29 = *(void *)(v27 - 8);
  __chkstk_darwin();
  char v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_10071B008);
  uint64_t v31 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_10071B010);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  __int16 v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v33 = a1;
  uint64_t v13 = (uint64_t)sub_10003BCDC(a1, v12);
  sub_1005C46EC();
  uint64_t v14 = v34;
  sub_1005E34E0();
  if (!v14)
  {
    uint64_t v26 = v5;
    uint64_t v16 = v31;
    unsigned __int8 v15 = v32;
    uint64_t v34 = v9;
    uint64_t v17 = sub_1005E3110();
    if (*(void *)(v17 + 16) == 1)
    {
      if (*(unsigned char *)(v17 + 32))
      {
        if (*(unsigned char *)(v17 + 32) == 1)
        {
          char v37 = 1;
          sub_1005C47E8();
          sub_1005E3060();
          sub_1005C72B0();
          uint64_t v18 = v27;
          sub_1005E30E0();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v18);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v8);
          uint64_t v13 = v36;
        }
        else
        {
          char v39 = 2;
          sub_1005C4740();
          sub_1005E3060();
          sub_1005C72B0();
          uint64_t v23 = v28;
          sub_1005E30E0();
          uint64_t v24 = v34;
          (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v23);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v8);
          uint64_t v13 = v38 | 0x40u;
        }
      }
      else
      {
        char v35 = 0;
        sub_1005C483C();
        sub_1005E3060();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v26);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v8);
        uint64_t v13 = 128;
      }
    }
    else
    {
      uint64_t v19 = sub_1005E2D20();
      swift_allocError();
      uint64_t v21 = v20;
      sub_10000566C(&qword_10071AFF0);
      *uint64_t v21 = &type metadata for AccountConfiguration.TransportLayerSecurity;
      uint64_t v13 = (uint64_t)v11;
      sub_1005E3070();
      sub_1005E2D10();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, enum case for DecodingError.typeMismatch(_:), v19);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v8);
    }
  }
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v33);
  return v13;
}

unint64_t sub_1005C5028()
{
  unint64_t result = qword_10071AE70;
  if (!qword_10071AE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AE70);
  }
  return result;
}

unint64_t sub_1005C507C()
{
  unint64_t result = qword_10071AE78;
  if (!qword_10071AE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AE78);
  }
  return result;
}

unint64_t sub_1005C50D0()
{
  unint64_t result = qword_10071AE80;
  if (!qword_10071AE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AE80);
  }
  return result;
}

unint64_t sub_1005C5124()
{
  unint64_t result = qword_10071AE88;
  if (!qword_10071AE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AE88);
  }
  return result;
}

BOOL _s20IMAPSearchIndexerXPC20AccountConfigurationV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = sub_1005E3290(), result = 0, (v5 & 1) != 0))
  {
    int v7 = *(unsigned __int16 *)(a1 + 32);
    int v8 = *(unsigned __int16 *)(a2 + 32);
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24))
    {
      if (v7 != v8) {
        return 0;
      }
    }
    else
    {
      char v10 = sub_1005E3290();
      BOOL result = 0;
      if ((v10 & 1) == 0 || v7 != v8) {
        return result;
      }
    }
    sub_1005C5A80((unsigned char *)(a1 + 34), &v15);
    sub_1005C5A80((unsigned char *)(a2 + 34), &v14);
    sub_1005C5A80(&v15, &v16);
    int v11 = v16 >> 6;
    if (!v11)
    {
      int v13 = v16 & 0x3F;
      v16 &= 0x3Fu;
      sub_1005C5A80(&v14, &v18);
      return v18 <= 0x3Fu && v13 == v18;
    }
    if (v11 == 1)
    {
      int v12 = v16 & 0x3F;
      v16 &= 0x3Fu;
      sub_1005C5A80(&v14, &v17);
      return (v17 & 0xC0) == 0x40 && v12 == (v17 & 0x3F);
    }
    sub_1005C5A80(&v14, &v19);
    return v19 == 128;
  }
  return result;
}

uint64_t sub_1005C52D4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000001005EA3C0 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001005EA3A0 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001005EA380)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_1005C5414(void *a1)
{
  uint64_t v2 = sub_10000566C(&qword_10071AFD0);
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  __chkstk_darwin();
  uint64_t v29 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10000566C(&qword_10071AFD8);
  uint64_t v24 = *(void *)(v27 - 8);
  __chkstk_darwin();
  char v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000566C(&qword_10071AFE0);
  uint64_t v23 = *(void *)(v6 - 8);
  __chkstk_darwin();
  int v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000566C(&qword_10071AFE8);
  uint64_t v28 = *(void *)(v9 - 8);
  __chkstk_darwin();
  int v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10003BCDC(a1, a1[3]);
  sub_1005C5028();
  uint64_t v12 = (uint64_t)v30;
  sub_1005E34E0();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v22 = v6;
  int v13 = v29;
  uint64_t v30 = a1;
  char v14 = v11;
  uint64_t v15 = sub_1005E3110();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v17 = sub_1005E2D20();
    swift_allocError();
    int v11 = v18;
    sub_10000566C(&qword_10071AFF0);
    *int v11 = &type metadata for AccountConfiguration.CertificateTrustPolicy;
    sub_1005E3070();
    sub_1005E2D10();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v11, enum case for DecodingError.typeMismatch(_:), v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v28 + 8))(v14, v9);
    a1 = v30;
LABEL_7:
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
    return v11;
  }
  int v11 = (void *)*(unsigned __int8 *)(v15 + 32);
  if (*(unsigned char *)(v15 + 32))
  {
    if (v11 == 1)
    {
      char v32 = 1;
      sub_1005C50D0();
      sub_1005E3060();
      uint64_t v16 = v28;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v27);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v16 + 8))(v14, v9);
    }
    else
    {
      char v33 = 2;
      sub_1005C507C();
      sub_1005E3060();
      uint64_t v20 = v28;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v20 + 8))(v14, v9);
    }
  }
  else
  {
    char v31 = 0;
    sub_1005C5124();
    sub_1005E3060();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v28 + 8))(v14, v9);
  }
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v30);
  return v11;
}

unint64_t sub_1005C5984()
{
  unint64_t result = qword_10071AE98;
  if (!qword_10071AE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AE98);
  }
  return result;
}

unint64_t sub_1005C59D8()
{
  unint64_t result = qword_10071AEA0;
  if (!qword_10071AEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AEA0);
  }
  return result;
}

unint64_t sub_1005C5A2C()
{
  unint64_t result = qword_10071AEA8;
  if (!qword_10071AEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AEA8);
  }
  return result;
}

unsigned char *sub_1005C5A80(unsigned char *a1, unsigned char *a2)
{
  *a2 = *a1;
  return a2;
}

unint64_t sub_1005C5A90()
{
  unint64_t result = qword_10071AEB0;
  if (!qword_10071AEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AEB0);
  }
  return result;
}

uint64_t sub_1005C5AE4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x49746E756F636361 && a2 == 0xE900000000000044;
  if (v3 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xE800000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001005ED620)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1005C5C30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000566C(&qword_10071AFB0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  int v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005C5984();
  sub_1005E34E0();
  if (v2) {
    return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
  }
  char v20 = 0;
  sub_1005C71B4();
  sub_1005E30E0();
  uint64_t v9 = v17;
  uint64_t v15 = v16;
  char v20 = 1;
  sub_1005C7208();
  swift_bridgeObjectRetain();
  sub_1005E30E0();
  uint64_t v10 = v17;
  uint64_t v13 = v16;
  int v19 = v18;
  char v20 = 2;
  sub_1005C725C();
  uint64_t v14 = v10;
  swift_bridgeObjectRetain();
  sub_1005E30E0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v10) = v16;
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
  uint64_t v11 = v14;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = v13;
  *(void *)(a2 + 24) = v11;
  *(_WORD *)(a2 + 32) = v19;
  *(unsigned char *)(a2 + 34) = v10;
  return result;
}

unint64_t sub_1005C5F00()
{
  unint64_t result = qword_10071AEB8;
  if (!qword_10071AEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AEB8);
  }
  return result;
}

unint64_t sub_1005C5F58()
{
  unint64_t result = qword_10071AEC0;
  if (!qword_10071AEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AEC0);
  }
  return result;
}

__n128 initializeWithTake for AccountID(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

ValueMetadata *type metadata accessor for AccountID()
{
  return &type metadata for AccountID;
}

uint64_t initializeWithCopy for AccountConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccountConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  return a1;
}

__n128 initializeWithTake for AccountConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AccountConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 35)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 35) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 35) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountConfiguration()
{
  return &type metadata for AccountConfiguration;
}

uint64_t sub_1005C61A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccountConfiguration.Endpoint(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for AccountConfiguration.Endpoint(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AccountConfiguration.Endpoint(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountConfiguration.Endpoint(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 18)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountConfiguration.Endpoint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountConfiguration.Endpoint()
{
  return &type metadata for AccountConfiguration.Endpoint;
}

unsigned char *initializeBufferWithCopyOfBuffer for AccountConfiguration.CertificateTrustPolicy(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

unsigned char *storeEnumTagSinglePayload for AccountConfiguration.TransportLayerSecurity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 194 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 194) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x3E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x3D)
  {
    unsigned int v6 = ((a2 - 62) >> 8) + 1;
    *__n128 result = a2 - 62;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005C640CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountConfiguration.TransportLayerSecurity()
{
  return &type metadata for AccountConfiguration.TransportLayerSecurity;
}

ValueMetadata *type metadata accessor for AccountConfiguration.CertificateTrustPolicy()
{
  return &type metadata for AccountConfiguration.CertificateTrustPolicy;
}

ValueMetadata *type metadata accessor for AccountConfiguration.CodingKeys()
{
  return &type metadata for AccountConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for AccountConfiguration.CertificateTrustPolicy.CodingKeys()
{
  return &type metadata for AccountConfiguration.CertificateTrustPolicy.CodingKeys;
}

ValueMetadata *type metadata accessor for AccountConfiguration.CertificateTrustPolicy.RequireTrustedTLS12CodingKeys()
{
  return &type metadata for AccountConfiguration.CertificateTrustPolicy.RequireTrustedTLS12CodingKeys;
}

ValueMetadata *type metadata accessor for AccountConfiguration.CertificateTrustPolicy.RequireTrustedTLS13CodingKeys()
{
  return &type metadata for AccountConfiguration.CertificateTrustPolicy.RequireTrustedTLS13CodingKeys;
}

ValueMetadata *type metadata accessor for AccountConfiguration.CertificateTrustPolicy.AllowUserOverrideCodingKeys()
{
  return &type metadata for AccountConfiguration.CertificateTrustPolicy.AllowUserOverrideCodingKeys;
}

unsigned char *_s20IMAPSearchIndexerXPC20AccountConfigurationV22CertificateTrustPolicyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005C6574);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountConfiguration.TransportLayerSecurity.CodingKeys()
{
  return &type metadata for AccountConfiguration.TransportLayerSecurity.CodingKeys;
}

ValueMetadata *type metadata accessor for AccountConfiguration.TransportLayerSecurity.InsecureCodingKeys()
{
  return &type metadata for AccountConfiguration.TransportLayerSecurity.InsecureCodingKeys;
}

ValueMetadata *type metadata accessor for AccountConfiguration.TransportLayerSecurity.StartTLSCodingKeys()
{
  return &type metadata for AccountConfiguration.TransportLayerSecurity.StartTLSCodingKeys;
}

ValueMetadata *type metadata accessor for AccountConfiguration.TransportLayerSecurity.TlsCodingKeys()
{
  return &type metadata for AccountConfiguration.TransportLayerSecurity.TlsCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AccountConfiguration.Endpoint.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005C66B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountConfiguration.Endpoint.CodingKeys()
{
  return &type metadata for AccountConfiguration.Endpoint.CodingKeys;
}

unsigned char *_s20IMAPSearchIndexerXPC20AccountConfigurationV22TransportLayerSecurityO18StartTLSCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1005C6784);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountID.CodingKeys()
{
  return &type metadata for AccountID.CodingKeys;
}

unint64_t sub_1005C67C0()
{
  unint64_t result = qword_10071AEC8;
  if (!qword_10071AEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AEC8);
  }
  return result;
}

unint64_t sub_1005C6818()
{
  unint64_t result = qword_10071AED0;
  if (!qword_10071AED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AED0);
  }
  return result;
}

unint64_t sub_1005C6870()
{
  unint64_t result = qword_10071AED8;
  if (!qword_10071AED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AED8);
  }
  return result;
}

unint64_t sub_1005C68C8()
{
  unint64_t result = qword_10071AEE0;
  if (!qword_10071AEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AEE0);
  }
  return result;
}

unint64_t sub_1005C6920()
{
  unint64_t result = qword_10071AEE8;
  if (!qword_10071AEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AEE8);
  }
  return result;
}

unint64_t sub_1005C6978()
{
  unint64_t result = qword_10071AEF0;
  if (!qword_10071AEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AEF0);
  }
  return result;
}

unint64_t sub_1005C69D0()
{
  unint64_t result = qword_10071AEF8;
  if (!qword_10071AEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AEF8);
  }
  return result;
}

unint64_t sub_1005C6A28()
{
  unint64_t result = qword_10071AF00;
  if (!qword_10071AF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF00);
  }
  return result;
}

unint64_t sub_1005C6A80()
{
  unint64_t result = qword_10071AF08;
  if (!qword_10071AF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF08);
  }
  return result;
}

unint64_t sub_1005C6AD8()
{
  unint64_t result = qword_10071AF10;
  if (!qword_10071AF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF10);
  }
  return result;
}

unint64_t sub_1005C6B30()
{
  unint64_t result = qword_10071AF18;
  if (!qword_10071AF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF18);
  }
  return result;
}

unint64_t sub_1005C6B88()
{
  unint64_t result = qword_10071AF20;
  if (!qword_10071AF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF20);
  }
  return result;
}

unint64_t sub_1005C6BE0()
{
  unint64_t result = qword_10071AF28;
  if (!qword_10071AF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF28);
  }
  return result;
}

unint64_t sub_1005C6C38()
{
  unint64_t result = qword_10071AF30;
  if (!qword_10071AF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF30);
  }
  return result;
}

unint64_t sub_1005C6C90()
{
  unint64_t result = qword_10071AF38;
  if (!qword_10071AF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF38);
  }
  return result;
}

unint64_t sub_1005C6CE8()
{
  unint64_t result = qword_10071AF40;
  if (!qword_10071AF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF40);
  }
  return result;
}

unint64_t sub_1005C6D40()
{
  unint64_t result = qword_10071AF48;
  if (!qword_10071AF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF48);
  }
  return result;
}

unint64_t sub_1005C6D98()
{
  unint64_t result = qword_10071AF50;
  if (!qword_10071AF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF50);
  }
  return result;
}

unint64_t sub_1005C6DF0()
{
  unint64_t result = qword_10071AF58;
  if (!qword_10071AF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF58);
  }
  return result;
}

unint64_t sub_1005C6E48()
{
  unint64_t result = qword_10071AF60;
  if (!qword_10071AF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF60);
  }
  return result;
}

unint64_t sub_1005C6EA0()
{
  unint64_t result = qword_10071AF68;
  if (!qword_10071AF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF68);
  }
  return result;
}

unint64_t sub_1005C6EF8()
{
  unint64_t result = qword_10071AF70;
  if (!qword_10071AF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF70);
  }
  return result;
}

unint64_t sub_1005C6F50()
{
  unint64_t result = qword_10071AF78;
  if (!qword_10071AF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF78);
  }
  return result;
}

unint64_t sub_1005C6FA8()
{
  unint64_t result = qword_10071AF80;
  if (!qword_10071AF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF80);
  }
  return result;
}

unint64_t sub_1005C7000()
{
  unint64_t result = qword_10071AF88;
  if (!qword_10071AF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF88);
  }
  return result;
}

unint64_t sub_1005C7058()
{
  unint64_t result = qword_10071AF90;
  if (!qword_10071AF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF90);
  }
  return result;
}

unint64_t sub_1005C70B0()
{
  unint64_t result = qword_10071AF98;
  if (!qword_10071AF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AF98);
  }
  return result;
}

unint64_t sub_1005C7108()
{
  unint64_t result = qword_10071AFA0;
  if (!qword_10071AFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AFA0);
  }
  return result;
}

unint64_t sub_1005C7160()
{
  unint64_t result = qword_10071AFA8;
  if (!qword_10071AFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AFA8);
  }
  return result;
}

unint64_t sub_1005C71B4()
{
  unint64_t result = qword_10071AFB8;
  if (!qword_10071AFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AFB8);
  }
  return result;
}

unint64_t sub_1005C7208()
{
  unint64_t result = qword_10071AFC0;
  if (!qword_10071AFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AFC0);
  }
  return result;
}

unint64_t sub_1005C725C()
{
  unint64_t result = qword_10071AFC8;
  if (!qword_10071AFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AFC8);
  }
  return result;
}

unint64_t sub_1005C72B0()
{
  unint64_t result = qword_10071B018;
  if (!qword_10071B018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B018);
  }
  return result;
}

void _s3__C16os_unfair_lock_sVMa_1()
{
  if (!qword_10071B028)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_10071B028);
    }
  }
}

uint64_t sub_1005C7368(char a1)
{
  return *(void *)&aPersonidtoken[8 * a1];
}

uint64_t sub_1005C7388(char a1)
{
  return *(void *)&aUsernameapplet[8 * a1];
}

uint64_t sub_1005C73A8(char a1)
{
  if (a1) {
    return 0x6F54737365636361;
  }
  else {
    return 0x656D616E72657375;
  }
}

uint64_t sub_1005C73E8(char a1)
{
  if (a1) {
    return 0x64726F7773736170;
  }
  else {
    return 12383;
  }
}

uint64_t sub_1005C7418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005C9BE0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1005C7444(uint64_t a1)
{
  unint64_t v2 = sub_1005C9A90();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005C7480(uint64_t a1)
{
  unint64_t v2 = sub_1005C9A90();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005C74BC()
{
  return sub_1005C7368(*v0);
}

uint64_t sub_1005C74C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005C9C74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005C74EC(uint64_t a1)
{
  unint64_t v2 = sub_1005C9B38();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005C7528(uint64_t a1)
{
  unint64_t v2 = sub_1005C9B38();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005C7564()
{
  return sub_1005C7388(*v0);
}

uint64_t sub_1005C756C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005C9E94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005C7594(uint64_t a1)
{
  unint64_t v2 = sub_1005C9994();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005C75D0(uint64_t a1)
{
  unint64_t v2 = sub_1005C9994();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005C760C()
{
  return sub_1005C73A8(*v0);
}

uint64_t sub_1005C7614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005CA0A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005C763C(uint64_t a1)
{
  unint64_t v2 = sub_1005C9A3C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005C7678(uint64_t a1)
{
  unint64_t v2 = sub_1005C9A3C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005C76B4(uint64_t a1)
{
  unint64_t v2 = sub_1005C99E8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005C76F0(uint64_t a1)
{
  unint64_t v2 = sub_1005C99E8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005C772C()
{
  return sub_1005C73E8(*v0);
}

uint64_t sub_1005C7734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005CA1A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005C775C(uint64_t a1)
{
  unint64_t v2 = sub_1005C9B8C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005C7798(uint64_t a1)
{
  unint64_t v2 = sub_1005C9B8C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Credentials.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  sub_100400248(v2, &v75);
  *((void *)&v61 + 1) = *((void *)&v75 + 1);
  unint64_t v62 = v75;
  uint64_t v63 = sub_10000566C(&qword_10071B030);
  *(void *)&long long v61 = *(void *)(v63 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_10000566C(&qword_10071B038);
  unint64_t v59 = *(void *)(v65 - 8);
  __chkstk_darwin();
  uint64_t v64 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10000566C(&qword_10071B040);
  unint64_t v69 = *(void *)(v60 - 8);
  __chkstk_darwin();
  int v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v67 = sub_10000566C(&qword_10071B048);
  uint64_t v58 = *(void *)(v67 - 8);
  __chkstk_darwin();
  uint64_t v66 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000566C(&qword_10071B050);
  uint64_t v68 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10000566C(&qword_10071B058);
  uint64_t v70 = *(void *)(v84 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005C9994();
  uint64_t v72 = v14;
  sub_1005E3500();
  sub_100400248(v2, &v76);
  switch((v83 >> 59) & 6 | ((v82[0] & 0x2000000000000000) != 0))
  {
    case 1uLL:
      v82[0] &= ~0x2000000000000000uLL;
      unint64_t v22 = v82[0];
      v83 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v23 = v83;
      long long v24 = v76;
      uint64_t v25 = v77;
      unint64_t v26 = v78;
      uint64_t v27 = v79;
      unint64_t v28 = v80;
      uint64_t v63 = v81;
      uint64_t v29 = v82[1];
      LOBYTE(v74) = 1;
      sub_100008D24(v76, *((unint64_t *)&v76 + 1));
      uint64_t v65 = v25;
      unint64_t v69 = v26;
      sub_100008D24(v25, v26);
      uint64_t v68 = v27;
      uint64_t v30 = v27;
      uint64_t v31 = v63;
      unint64_t v62 = v28;
      sub_100008D24(v30, v28);
      sub_100008D24(v31, v22);
      uint64_t v64 = v29;
      sub_100008D24(v29, v23);
      sub_1005C9B38();
      char v32 = v66;
      uint64_t v33 = v84;
      uint64_t v34 = v72;
      sub_1005E3120();
      long long v61 = v24;
      long long v74 = v24;
      char v73 = 0;
      unint64_t v35 = sub_1005C9AE4();
      unint64_t v36 = v67;
      uint64_t v60 = v35;
      unint64_t v37 = v71;
      sub_1005E31C0();
      if (v37)
      {
        sub_1000094D4(v31, v22);
        sub_1000094D4(v68, v62);
        sub_1000094D4(v65, v69);
        sub_1000094D4(v64, v23);
        (*(void (**)(char *, unint64_t))(v58 + 8))(v32, v36);
        (*(void (**)(char *, uint64_t))(v70 + 8))(v34, v33);
        uint64_t v38 = v61;
        char v39 = v82;
        goto LABEL_12;
      }
      uint64_t v52 = v31;
      unint64_t v53 = v62;
      unint64_t v71 = v23;
      *(void *)&long long v74 = v65;
      *((void *)&v74 + 1) = v69;
      char v73 = 1;
      uint64_t v54 = v32;
      sub_1005E31C0();
      *(void *)&long long v74 = v68;
      *((void *)&v74 + 1) = v53;
      char v73 = 2;
      sub_1005E31C0();
      *(void *)&long long v74 = v52;
      unint64_t v59 = v22;
      *((void *)&v74 + 1) = v22;
      char v73 = 3;
      sub_1005E31C0();
      *(void *)&long long v74 = v64;
      unint64_t v55 = v71;
      *((void *)&v74 + 1) = v71;
      char v73 = 4;
      sub_1005E31C0();
      unint64_t v56 = *((void *)&v61 + 1);
      uint64_t v57 = v61;
      sub_1000094D4(v52, v22);
      sub_1000094D4(v68, v53);
      sub_1000094D4(v65, v69);
      sub_1000094D4(v57, v56);
      (*(void (**)(char *, unint64_t))(v58 + 8))(v54, v36);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v84);
      uint64_t v38 = v64;
      unint64_t v51 = v55;
      goto LABEL_13;
    case 2uLL:
      v82[0] &= ~0x2000000000000000uLL;
      v83 &= 0xCFFFFFFFFFFFFFFFLL;
      long long v40 = v76;
      LOBYTE(v74) = 2;
      sub_100008D24(v62, *((unint64_t *)&v61 + 1));
      sub_1005C9A90();
      uint64_t v41 = v84;
      uint64_t v42 = v72;
      sub_1005E3120();
      long long v74 = v40;
      sub_1005C9AE4();
      uint64_t v43 = v60;
      sub_1005E31C0();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v8, v43);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v42, v41);
      uint64_t result = sub_1005CB0A4((uint64_t)v2);
      break;
    case 3uLL:
      v82[0] &= ~0x2000000000000000uLL;
      v83 &= 0xCFFFFFFFFFFFFFFFLL;
      LOBYTE(v74) = 3;
      sub_1005C9A3C();
      uint64_t v44 = v64;
      uint64_t v45 = v84;
      unint64_t v46 = v72;
      sub_1005E3120();
      LOBYTE(v74) = 0;
      uint64_t v47 = v65;
      unint64_t v48 = v71;
      sub_1005E3190();
      if (!v48)
      {
        LOBYTE(v74) = 1;
        sub_1005E3190();
      }
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v44, v47);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v46, v45);
      break;
    case 4uLL:
      LOBYTE(v74) = 4;
      sub_1005C99E8();
      uint64_t v49 = v84;
      uint64_t v50 = v72;
      sub_1005E3120();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v5, v63);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v50, v49);
      break;
    default:
      v82[0] &= ~0x2000000000000000uLL;
      v83 &= 0xCFFFFFFFFFFFFFFFLL;
      long long v15 = v76;
      uint64_t v16 = v77;
      unint64_t v17 = v78;
      LOBYTE(v74) = 0;
      sub_100008D24(v76, *((unint64_t *)&v76 + 1));
      unint64_t v69 = v16;
      unint64_t v67 = v17;
      sub_100008D24(v16, v17);
      sub_1005C9B8C();
      uint64_t v18 = v84;
      int v19 = v72;
      sub_1005E3120();
      long long v74 = v15;
      char v73 = 0;
      sub_1005C9AE4();
      unint64_t v20 = v71;
      sub_1005E31C0();
      if (v20)
      {
        sub_1000094D4(v69, v67);
        (*(void (**)(char *, uint64_t))(v68 + 8))(v12, v10);
        (*(void (**)(char *, uint64_t))(v70 + 8))(v19, v18);
        uint64_t result = sub_1000094D4(v15, *((unint64_t *)&v15 + 1));
      }
      else
      {
        *(void *)&long long v74 = v69;
        *((void *)&v74 + 1) = v67;
        char v73 = 1;
        sub_1005E31C0();
        sub_1000094D4(v15, *((unint64_t *)&v15 + 1));
        (*(void (**)(char *, uint64_t))(v68 + 8))(v12, v10);
        (*(void (**)(char *, uint64_t))(v70 + 8))(v19, v18);
        uint64_t v38 = v69;
        char v39 = &v85;
LABEL_12:
        unint64_t v51 = *(v39 - 32);
LABEL_13:
        uint64_t result = sub_1000094D4(v38, v51);
      }
      break;
  }
  return result;
}

_OWORD *Credentials.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = (_OWORD *)sub_1005CA274(a1, (uint64_t *)v5);
  if (!v2) {
    return sub_100400248(v5, a2);
  }
  return result;
}

uint64_t sub_1005C8654(_OWORD *a1, _OWORD *a2)
{
  sub_100400248(a1, v4);
  sub_100400248(a2, v5);
  return _s20IMAPSearchIndexerXPC11CredentialsO21__derived_enum_equalsySbAC_ACtFZ_0(v4, v5) & 1;
}

uint64_t sub_1005C86A0(void *a1)
{
  sub_100400248(v1, v4);
  return Credentials.encode(to:)(a1);
}

uint64_t Credentials.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005C8720(a1, (uint64_t (*)(uint64_t, uint64_t *))sub_1004526AC, a2);
}

{
  return sub_1005C8720(a1, (uint64_t (*)(uint64_t, uint64_t *))sub_100400248, a2);
}

uint64_t sub_1005C8720@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t *)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(a1, &v21);
  unint64_t v5 = v28;
  unint64_t v6 = 0x2000000000000000;
  uint64_t v7 = 0;
  unint64_t v8 = 0;
  uint64_t v9 = 0;
  unint64_t v10 = 0;
  uint64_t v11 = 0;
  unint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  switch((v30 >> 59) & 6 | ((v28 & 0x2000000000000000) != 0))
  {
    case 1uLL:
      v28 &= ~0x2000000000000000uLL;
      unint64_t v18 = v28;
      v30 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v6 = v30;
      uint64_t v7 = v21;
      unint64_t v8 = v22;
      unint64_t v10 = v24;
      uint64_t v19 = v23;
      uint64_t v11 = v25;
      unint64_t v12 = v26;
      uint64_t v13 = v27;
      uint64_t v15 = v29;
      sub_100008D24(v21, v22);
      sub_100008D24(v19, v10);
      sub_100008D24(v11, v12);
      sub_100008D24(v13, v18);
      sub_100008D24(v15, v6);
      uint64_t result = sub_1005CB0A4(a1);
      uint64_t v9 = v19;
      uint64_t v14 = v5 | 0x2000000000000000;
      break;
    case 2uLL:
      uint64_t v9 = 0;
      unint64_t v10 = 0;
      uint64_t v11 = 0;
      unint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v7 = v21;
      unint64_t v8 = v22;
      unint64_t v6 = 0x1000000000000000;
      break;
    case 3uLL:
      v28 &= ~0x2000000000000000uLL;
      v30 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v7 = v21;
      unint64_t v8 = v22;
      uint64_t v17 = v23;
      unint64_t v10 = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_1005CB0A4(a1);
      uint64_t v9 = v17;
      uint64_t v11 = 0;
      unint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v15 = 0;
      unint64_t v6 = 0x1000000000000000;
      uint64_t v14 = 0x2000000000000000;
      break;
    case 4uLL:
      break;
    default:
      v28 &= ~0x2000000000000000uLL;
      v30 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v7 = v21;
      unint64_t v8 = v22;
      uint64_t v16 = v23;
      unint64_t v10 = v24;
      sub_100008D24(v21, v22);
      sub_100008D24(v16, v10);
      uint64_t result = sub_1005CB0A4(a1);
      uint64_t v9 = v16;
      uint64_t v11 = 0;
      unint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      unint64_t v6 = 0;
      break;
  }
  *a3 = v7;
  a3[1] = v8;
  a3[2] = v9;
  a3[3] = v10;
  a3[4] = v11;
  a3[5] = v12;
  a3[6] = v13;
  a3[7] = v14;
  a3[8] = v15;
  a3[9] = v6;
  return result;
}

uint64_t sub_1005C894C@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_100008D24(a2, a3);
      unint64_t v10 = (char *)sub_1005E0550();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1005E0580();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1005E0570();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1005C8BB0);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_1000094D4(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1005E0550();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1005E0580();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1005E0570();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1005C8BC0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_100008D24(a1, a2);
      char v5 = sub_1005C8DF0((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      sub_1000094D4(a1, a2);
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v5 = sub_1005C8DF0(v11, v12, v10, a3, a4);
      swift_release();
      swift_release();
LABEL_6:
      sub_1000094D4(a3, a4);
      return v5 & 1;
    case 3uLL:
      memset(__s1, 0, 14);
      goto LABEL_8;
    default:
      __s1[0] = a1;
      LOWORD(__s1[1]) = a2;
      BYTE2(__s1[1]) = BYTE2(a2);
      BYTE3(__s1[1]) = BYTE3(a2);
      BYTE4(__s1[1]) = BYTE4(a2);
      BYTE5(__s1[1]) = BYTE5(a2);
LABEL_8:
      sub_1005C894C((uint64_t)__s1, a3, a4, &v14);
      sub_1000094D4(a3, a4);
      if (!v4) {
        char v5 = v14;
      }
      return v5 & 1;
  }
}

uint64_t sub_1005C8DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1005E0550();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1005E0580();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1005E0570();
  sub_1005C894C(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1005C8EA8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x1005C8FE4);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_20;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v15 = 1;
            }
            else
            {
              sub_100008D24(a3, a4);
              char v15 = sub_1005C8BC0(a1, a2, a3, a4);
            }
          }
          else
          {
            char v15 = 0;
          }
          return v15 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_21;
        case 3uLL:
          char v15 = v8 == 0;
          return v15 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_19;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t _s20IMAPSearchIndexerXPC11CredentialsO21__derived_enum_equalsySbAC_ACtFZ_0(_OWORD *a1, _OWORD *a2)
{
  sub_100400248(a1, &v61);
  long long v4 = v61;
  sub_100400248(a1, &v69);
  switch((v77 >> 59) & 6 | ((v75 & 0x2000000000000000) != 0))
  {
    case 1uLL:
      unint64_t v13 = v75 & 0xDFFFFFFFFFFFFFFFLL;
      unint64_t v14 = v77 & 0xCFFFFFFFFFFFFFFFLL;
      v75 &= ~0x2000000000000000uLL;
      v77 &= 0xCFFFFFFFFFFFFFFFLL;
      long long v15 = v69;
      uint64_t v17 = v70;
      unint64_t v16 = v71;
      uint64_t v19 = v72;
      unint64_t v18 = v73;
      uint64_t v20 = v74;
      uint64_t v60 = v76;
      sub_100400248(a2, &v62);
      if (((v68 >> 59) & 6 | ((v66 & 0x2000000000000000) != 0)) != 1) {
        goto LABEL_61;
      }
      unint64_t v56 = v14;
      unint64_t v57 = v18;
      v66 &= ~0x2000000000000000uLL;
      unint64_t v54 = v66;
      v68 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v21 = v68;
      int8x16_t v22 = v62;
      unint64_t v58 = v63.u64[1];
      uint64_t v59 = v63.i64[0];
      int8x16_t v55 = v64;
      uint64_t v52 = v65;
      unint64_t v53 = v62.u64[1];
      uint64_t v23 = v67;
      sub_100008D24(v15, *((unint64_t *)&v15 + 1));
      sub_100008D24(v22.i64[0], v22.u64[1]);
      sub_100008D24(v17, v16);
      sub_100008D24(v19, v57);
      sub_100008D24(v20, v13);
      sub_100008D24(v60, v56);
      sub_100008D24(v59, v58);
      sub_100008D24(v55.i64[0], v55.u64[1]);
      sub_100008D24(v52, v54);
      sub_100008D24(v23, v21);
      if ((sub_1005C8EA8(v15, *((unint64_t *)&v15 + 1), v22.i64[0], v53) & 1) != 0
        && (sub_1005C8EA8(v17, v16, v59, v58) & 1) != 0
        && (sub_1005C8EA8(v19, v57, v55.i64[0], v55.u64[1]) & 1) != 0
        && (sub_1005C8EA8(v20, v13, v52, v54) & 1) != 0)
      {
        char v24 = sub_1005C8EA8(v60, v56, v23, v21);
        sub_1000094D4(v23, v21);
        sub_1000094D4(v52, v54);
        sub_1000094D4(v55.i64[0], v55.u64[1]);
        sub_1000094D4(v59, v58);
        sub_1000094D4(v60, v56);
        sub_1000094D4(v20, v13);
        sub_1000094D4(v19, v57);
        sub_1000094D4(v17, v16);
        sub_1000094D4(v22.i64[0], v53);
        sub_1000094D4(v15, *((unint64_t *)&v15 + 1));
        return v24 & 1;
      }
      sub_1000094D4(v23, v21);
      sub_1000094D4(v52, v54);
      sub_1000094D4(v55.i64[0], v55.u64[1]);
      sub_1000094D4(v59, v58);
      sub_1000094D4(v60, v56);
      sub_1000094D4(v20, v13);
      sub_1000094D4(v19, v57);
      sub_1000094D4(v17, v16);
      sub_1000094D4(v22.i64[0], v53);
      unint64_t v50 = *((void *)&v15 + 1);
      uint64_t v49 = v15;
      goto LABEL_60;
    case 2uLL:
      v75 &= ~0x2000000000000000uLL;
      v77 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v26 = *((void *)&v69 + 1);
      uint64_t v25 = v69;
      sub_100400248(a2, &v62);
      if (((v68 >> 59) & 6 | ((v66 & 0x2000000000000000) != 0)) == 2)
      {
        v66 &= ~0x2000000000000000uLL;
        v68 &= 0xCFFFFFFFFFFFFFFFLL;
        unint64_t v28 = v62.u64[1];
        uint64_t v27 = v62.i64[0];
        uint64_t v29 = 0;
        switch(v26 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v25), v25))
            {
              __break(1u);
LABEL_64:
              __break(1u);
LABEL_65:
              __break(1u);
LABEL_66:
              __break(1u);
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
LABEL_69:
              __break(1u);
LABEL_70:
              __break(1u);
              JUMPOUT(0x1005C9940);
            }
            uint64_t v29 = HIDWORD(v25) - (int)v25;
LABEL_28:
            sub_100008D24(v4, *((unint64_t *)&v4 + 1));
LABEL_29:
            switch(v28 >> 62)
            {
              case 1uLL:
                LODWORD(v39) = HIDWORD(v27) - v27;
                if (__OFSUB__(HIDWORD(v27), v27)) {
                  goto LABEL_65;
                }
                uint64_t v39 = (int)v39;
LABEL_34:
                if (v29 != v39)
                {
LABEL_39:
                  sub_1005CB0A4((uint64_t)a1);
                  goto LABEL_61;
                }
                if (v29 < 1)
                {
LABEL_40:
                  sub_1005CB0A4((uint64_t)a1);
                  goto LABEL_41;
                }
                sub_100008D24(v27, v28);
                char v43 = sub_1005C8BC0(v25, v26, v27, v28);
                sub_1005CB0A4((uint64_t)a1);
                if (v43) {
                  goto LABEL_41;
                }
                break;
              case 2uLL:
                uint64_t v41 = *(void *)(v27 + 16);
                uint64_t v40 = *(void *)(v27 + 24);
                BOOL v42 = __OFSUB__(v40, v41);
                uint64_t v39 = v40 - v41;
                if (!v42) {
                  goto LABEL_34;
                }
                goto LABEL_66;
              case 3uLL:
                if (v29) {
                  goto LABEL_39;
                }
                goto LABEL_40;
              default:
                uint64_t v39 = BYTE6(v28);
                goto LABEL_34;
            }
            break;
          case 2uLL:
            uint64_t v38 = *(void *)(v25 + 16);
            uint64_t v37 = *(void *)(v25 + 24);
            uint64_t v29 = v37 - v38;
            if (!__OFSUB__(v37, v38)) {
              goto LABEL_28;
            }
            goto LABEL_64;
          case 3uLL:
            goto LABEL_29;
          default:
            uint64_t v29 = BYTE6(v26);
            goto LABEL_29;
        }
      }
      goto LABEL_61;
    case 3uLL:
      v75 &= ~0x2000000000000000uLL;
      v77 &= 0xCFFFFFFFFFFFFFFFLL;
      long long v30 = v69;
      uint64_t v31 = v70;
      unint64_t v32 = v71;
      sub_100400248(a2, &v62);
      if (((v68 >> 59) & 6 | ((v66 & 0x2000000000000000) != 0)) != 3) {
        goto LABEL_61;
      }
      v66 &= ~0x2000000000000000uLL;
      v68 &= 0xCFFFFFFFFFFFFFFFLL;
      int8x16_t v33 = v63;
      if (v30 == *(_OWORD *)&v62 || (char v24 = 0, (sub_1005E3290() & 1) != 0))
      {
        if (__PAIR128__(v32, v31) == *(_OWORD *)&v33) {
LABEL_41:
        }
          char v24 = 1;
        else {
          char v24 = sub_1005E3290();
        }
      }
      return v24 & 1;
    case 4uLL:
      sub_100400248(a2, &v62);
      if (((v68 >> 59) & 6 | ((v66 & 0x2000000000000000) != 0)) != 4) {
        goto LABEL_61;
      }
      if (v68 != 0x2000000000000000) {
        goto LABEL_61;
      }
      v34.i64[0] = v65;
      v34.i64[1] = v67;
      int8x16_t v35 = vorrq_s8(v64, v62);
      int8x16_t v36 = vorrq_s8(v34, vorrq_s8(vextq_s8(v63, v63, 8uLL), vextq_s8(v35, v35, 8uLL)));
      if (*(void *)&vorr_s8(*(int8x8_t *)v36.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v36, v36, 8uLL)) | v66) {
        goto LABEL_61;
      }
      goto LABEL_41;
    default:
      v75 &= ~0x2000000000000000uLL;
      v77 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v5 = *((void *)&v69 + 1);
      uint64_t v6 = v69;
      uint64_t v8 = v70;
      unint64_t v7 = v71;
      sub_100400248(a2, &v62);
      if ((v68 >> 59) & 6 | ((v66 & 0x2000000000000000) != 0)) {
        goto LABEL_61;
      }
      v66 &= ~0x2000000000000000uLL;
      v68 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v9 = v62.u64[1];
      uint64_t v10 = v62.i64[0];
      int8x16_t v11 = v63;
      uint64_t v12 = 0;
      switch(v5 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v6), v6)) {
            goto LABEL_67;
          }
          uint64_t v12 = HIDWORD(v6) - (int)v6;
LABEL_45:
          sub_100008D24(v6, v5);
          break;
        case 2uLL:
          uint64_t v45 = *(void *)(v6 + 16);
          uint64_t v44 = *(void *)(v6 + 24);
          uint64_t v12 = v44 - v45;
          if (!__OFSUB__(v44, v45)) {
            goto LABEL_45;
          }
          goto LABEL_68;
        case 3uLL:
          goto LABEL_46;
        default:
          uint64_t v12 = BYTE6(v5);
          goto LABEL_46;
      }
      break;
  }
LABEL_46:
  switch(v9 >> 62)
  {
    case 1uLL:
      LODWORD(v46) = HIDWORD(v10) - v10;
      if (__OFSUB__(HIDWORD(v10), v10)) {
        goto LABEL_69;
      }
      uint64_t v46 = (int)v46;
LABEL_51:
      if (v12 != v46) {
        goto LABEL_56;
      }
      if (v12 < 1)
      {
LABEL_57:
        sub_100008D24(v10, v9);
        sub_100008D24(v8, v7);
        sub_100008D24(v11.i64[0], v11.u64[1]);
        goto LABEL_58;
      }
      sub_100008D24(v10, v9);
      sub_100008D24(v10, v9);
      sub_100008D24(v8, v7);
      sub_100008D24(v11.i64[0], v11.u64[1]);
      if (sub_1005C8BC0(v6, v5, v10, v9))
      {
LABEL_58:
        char v24 = sub_1005C8EA8(v8, v7, v11.i64[0], v11.u64[1]);
        sub_1000094D4(v11.i64[0], v11.u64[1]);
        sub_1000094D4(v8, v7);
        sub_1000094D4(v10, v9);
        sub_1000094D4(v6, v5);
        return v24 & 1;
      }
      sub_1000094D4(v11.i64[0], v11.u64[1]);
      sub_1000094D4(v8, v7);
      sub_1000094D4(v10, v9);
LABEL_56:
      uint64_t v49 = v6;
      unint64_t v50 = v5;
LABEL_60:
      sub_1000094D4(v49, v50);
LABEL_61:
      char v24 = 0;
      return v24 & 1;
    case 2uLL:
      uint64_t v48 = *(void *)(v10 + 16);
      uint64_t v47 = *(void *)(v10 + 24);
      BOOL v42 = __OFSUB__(v47, v48);
      uint64_t v46 = v47 - v48;
      if (!v42) {
        goto LABEL_51;
      }
      goto LABEL_70;
    case 3uLL:
      if (v12) {
        goto LABEL_56;
      }
      goto LABEL_57;
    default:
      uint64_t v46 = BYTE6(v9);
      goto LABEL_51;
  }
}

unint64_t sub_1005C9994()
{
  unint64_t result = qword_10071B060;
  if (!qword_10071B060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B060);
  }
  return result;
}

unint64_t sub_1005C99E8()
{
  unint64_t result = qword_10071B068;
  if (!qword_10071B068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B068);
  }
  return result;
}

unint64_t sub_1005C9A3C()
{
  unint64_t result = qword_10071B070;
  if (!qword_10071B070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B070);
  }
  return result;
}

unint64_t sub_1005C9A90()
{
  unint64_t result = qword_10071B078;
  if (!qword_10071B078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B078);
  }
  return result;
}

unint64_t sub_1005C9AE4()
{
  unint64_t result = qword_10071B080;
  if (!qword_10071B080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B080);
  }
  return result;
}

unint64_t sub_1005C9B38()
{
  unint64_t result = qword_10071B088;
  if (!qword_10071B088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B088);
  }
  return result;
}

unint64_t sub_1005C9B8C()
{
  unint64_t result = qword_10071B090;
  if (!qword_10071B090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B090);
  }
  return result;
}

uint64_t sub_1005C9BE0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E656B6F74 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1005E3290();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1005C9C60()
{
  return 0x6E656B6F74;
}

uint64_t sub_1005C9C74(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x44496E6F73726570 && a2 == 0xE800000000000000;
  if (v3 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656B6F74 && a2 == 0xE500000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49656E696863616DLL && a2 == 0xE900000000000044 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x50656D6954656E6FLL && a2 == 0xEF64726F77737361 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E49746E65696C63 && a2 == 0xEA00000000006F66)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1005C9E94(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x656D616E72657375 && a2 == 0xE800000000000000;
  if (v3 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B6F54656C707061 && a2 == 0xEA00000000006E65 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B6F54656C707061 && a2 == 0xEB00000000326E65 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B6F54687475416FLL && a2 == 0xEA00000000006E65 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x68747541657270 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1005CA0A4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x656D616E72657375 && a2 == 0xE800000000000000;
  if (v3 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F54737365636361 && a2 == 0xEB000000006E656BLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1005CA1A0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v3 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64726F7773736170 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1005CA274@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v77 = a2;
  uint64_t v70 = sub_10000566C(&qword_10071B120);
  uint64_t v73 = *(void *)(v70 - 8);
  __chkstk_darwin();
  unint64_t v80 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000566C(&qword_10071B128);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v74 = v4;
  uint64_t v75 = v5;
  __chkstk_darwin();
  uint64_t v79 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_10000566C(&qword_10071B130);
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin();
  unint64_t v78 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10000566C(&qword_10071B138);
  uint64_t v76 = *(void *)(v69 - 8);
  __chkstk_darwin();
  unint64_t v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000566C(&qword_10071B140);
  uint64_t v68 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000566C(&qword_10071B148);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  unint64_t v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v81 = a1;
  sub_10003BCDC(a1, v17);
  sub_1005C9994();
  uint64_t v18 = v82;
  sub_1005E34E0();
  if (v18)
  {
LABEL_13:
    uint64_t v40 = (uint64_t)v81;
    return _s13IMAP2Behavior4TaskOwxx_0(v40);
  }
  uint64_t v19 = v78;
  uint64_t v66 = v10;
  uint64_t v20 = v80;
  uint64_t v67 = 0;
  unint64_t v21 = v79;
  uint64_t v82 = v14;
  uint64_t v22 = sub_1005E3110();
  uint64_t v23 = (char *)v22;
  if (*(void *)(v22 + 16) != 1)
  {
    uint64_t v29 = sub_1005E2D20();
    swift_allocError();
    uint64_t v31 = v30;
    sub_10000566C(&qword_10071AFF0);
    *uint64_t v31 = &type metadata for Credentials;
    sub_1005E3070();
    sub_1005E2D10();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, enum case for DecodingError.typeMismatch(_:), v29);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v16, v13);
    goto LABEL_13;
  }
  switch(*(unsigned char *)(v22 + 32))
  {
    case 1:
      LOBYTE(v91) = 1;
      sub_1005C9B38();
      unint64_t v32 = v9;
      uint64_t v33 = v67;
      sub_1005E3060();
      if (v33) {
        goto LABEL_12;
      }
      unint64_t v78 = v23;
      LOBYTE(v89) = 0;
      sub_1005CBE88();
      uint64_t v34 = v69;
      int8x16_t v35 = v32;
      sub_1005E30E0();
      uint64_t v47 = v92;
      uint64_t v75 = v91;
      LOBYTE(v87) = 1;
      sub_1005E30E0();
      uint64_t v73 = v47;
      uint64_t v57 = v90;
      unint64_t v80 = v89;
      LOBYTE(v85) = 2;
      sub_1005E30E0();
      uint64_t v71 = v57;
      uint64_t v72 = (uint64_t)v16;
      uint64_t v74 = v13;
      int8x16_t v62 = v87;
      uint64_t v63 = v88;
      LOBYTE(v83) = 3;
      sub_1005E30E0();
      uint64_t v52 = v85;
      uint64_t v64 = v86;
      char v93 = 4;
      sub_1005E30E0();
      uint64_t v67 = 0;
      uint64_t v79 = v62;
      (*(void (**)(char *, uint64_t))(v76 + 8))(v35, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v72, v74);
      uint64_t v54 = v83;
      uint64_t v55 = v84;
      uint64_t v53 = v64 | 0x2000000000000000;
      uint64_t v65 = v73;
      uint64_t v28 = v75;
      uint64_t v56 = v71;
      uint64_t v51 = v63;
      goto LABEL_20;
    case 2:
      LOBYTE(v91) = 2;
      sub_1005C9A90();
      uint64_t v36 = v67;
      sub_1005E3060();
      if (v36) {
        goto LABEL_12;
      }
      sub_1005CBE88();
      uint64_t v37 = v72;
      sub_1005E30E0();
      uint64_t v56 = 0;
      uint64_t v38 = v82;
      uint64_t v67 = 0;
      (*(void (**)(char *, uint64_t))(v71 + 8))(v19, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v13);
      uint64_t v79 = 0;
      unint64_t v80 = 0;
      uint64_t v51 = 0;
      uint64_t v52 = 0;
      uint64_t v53 = 0;
      uint64_t v54 = 0;
      uint64_t v28 = v91;
      uint64_t v65 = v92;
      uint64_t v55 = 0x1000000000000000;
      goto LABEL_20;
    case 3:
      LOBYTE(v91) = 3;
      sub_1005C9A3C();
      uint64_t v39 = v67;
      sub_1005E3060();
      if (v39) {
        goto LABEL_12;
      }
      LOBYTE(v91) = 0;
      uint64_t v43 = v74;
      uint64_t v44 = v21;
      uint64_t v45 = sub_1005E30C0();
      uint64_t v46 = v82;
      uint64_t v48 = v45;
      uint64_t v73 = v49;
      LOBYTE(v91) = 1;
      uint64_t v50 = sub_1005E30C0();
      uint64_t v67 = 0;
      unint64_t v58 = *(void (**)(char *, uint64_t))(v75 + 8);
      unint64_t v80 = (char *)v50;
      uint64_t v59 = v44;
      uint64_t v56 = v60;
      v58(v59, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v13);
      uint64_t v79 = 0;
      uint64_t v28 = v48;
      uint64_t v51 = 0;
      uint64_t v52 = 0;
      uint64_t v54 = 0;
      uint64_t v55 = 0x1000000000000000;
      uint64_t v53 = 0x2000000000000000;
      goto LABEL_19;
    case 4:
      LOBYTE(v91) = 4;
      sub_1005C99E8();
      uint64_t v42 = v67;
      sub_1005E3060();
      uint64_t v51 = v42;
      if (v42)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v16, v13);
        uint64_t v40 = (uint64_t)v81;
        return _s13IMAP2Behavior4TaskOwxx_0(v40);
      }
      (*(void (**)(char *, uint64_t))(v73 + 8))(v20, v70);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v16, v13);
      uint64_t v28 = 0;
      uint64_t v65 = 0;
      uint64_t v79 = 0;
      unint64_t v80 = 0;
      uint64_t v56 = 0;
      uint64_t v52 = 0;
      uint64_t v53 = 0;
      uint64_t v54 = 0;
      uint64_t v55 = 0x2000000000000000;
      uint64_t v67 = 0;
      goto LABEL_20;
    default:
      LOBYTE(v91) = 0;
      sub_1005C9B8C();
      char v24 = v12;
      uint64_t v25 = v67;
      sub_1005E3060();
      if (v25)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v16, v13);
        goto LABEL_13;
      }
      LOBYTE(v89) = 0;
      sub_1005CBE88();
      uint64_t v26 = v66;
      sub_1005E30E0();
      uint64_t v27 = v82;
      uint64_t v28 = v91;
      uint64_t v73 = v92;
      LOBYTE(v87) = 1;
      sub_1005E30E0();
      uint64_t v67 = 0;
      (*(void (**)(char *, uint64_t))(v68 + 8))(v24, v26);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v13);
      uint64_t v51 = 0;
      uint64_t v52 = 0;
      uint64_t v53 = 0;
      uint64_t v54 = 0;
      uint64_t v55 = 0;
      uint64_t v56 = v90;
      uint64_t v79 = 0;
      unint64_t v80 = v89;
LABEL_19:
      uint64_t v65 = v73;
LABEL_20:
      uint64_t result = _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v81);
      long long v61 = v77;
      uint64_t *v77 = v28;
      v61[1] = v65;
      v61[2] = (uint64_t)v80;
      v61[3] = v56;
      unsigned char v61[4] = (uint64_t)v79;
      unint64_t v61[5] = v51;
      v61[6] = v52;
      v61[7] = v53;
      v61[8] = v54;
      v61[9] = v55;
      break;
  }
  return result;
}

uint64_t sub_1005CB0A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005CB0F0(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
      sub_1000094D4(result, a2);
      uint64_t result = a3;
      a2 = a4;
      goto LABEL_4;
    case 1uLL:
      unint64_t v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_1000094D4(result, a2);
      sub_1000094D4(a3, a4);
      sub_1000094D4(a5, a6);
      sub_1000094D4(a7, v15);
      uint64_t result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_4;
    case 2uLL:
LABEL_4:
      uint64_t result = sub_1000094D4(result, a2);
      break;
    case 3uLL:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1005CB22C(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
      sub_100008D24(result, a2);
      uint64_t result = a3;
      a2 = a4;
      goto LABEL_4;
    case 1uLL:
      unint64_t v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_100008D24(result, a2);
      sub_100008D24(a3, a4);
      sub_100008D24(a5, a6);
      sub_100008D24(a7, v15);
      uint64_t result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_4;
    case 2uLL:
LABEL_4:
      uint64_t result = sub_100008D24(result, a2);
      break;
    case 3uLL:
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Credentials.CodingKeys()
{
  return &type metadata for Credentials.CodingKeys;
}

ValueMetadata *type metadata accessor for Credentials.UsernameCodingKeys()
{
  return &type metadata for Credentials.UsernameCodingKeys;
}

unsigned char *_s20IMAPSearchIndexerXPC11CredentialsO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005CB690);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Credentials.AppleTokenCodingKeys()
{
  return &type metadata for Credentials.AppleTokenCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Credentials.AppleToken2CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1005CB764);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Credentials.AppleToken2CodingKeys()
{
  return &type metadata for Credentials.AppleToken2CodingKeys;
}

unsigned char *_s20IMAPSearchIndexerXPC11CredentialsO18UsernameCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005CB868);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Credentials.OAuthTokenCodingKeys()
{
  return &type metadata for Credentials.OAuthTokenCodingKeys;
}

ValueMetadata *type metadata accessor for Credentials.PreAuthCodingKeys()
{
  return &type metadata for Credentials.PreAuthCodingKeys;
}

unint64_t sub_1005CB8B4()
{
  unint64_t result = qword_10071B098;
  if (!qword_10071B098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B098);
  }
  return result;
}

unint64_t sub_1005CB90C()
{
  unint64_t result = qword_10071B0A0;
  if (!qword_10071B0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B0A0);
  }
  return result;
}

unint64_t sub_1005CB964()
{
  unint64_t result = qword_10071B0A8;
  if (!qword_10071B0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B0A8);
  }
  return result;
}

unint64_t sub_1005CB9BC()
{
  unint64_t result = qword_10071B0B0;
  if (!qword_10071B0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B0B0);
  }
  return result;
}

unint64_t sub_1005CBA14()
{
  unint64_t result = qword_10071B0B8;
  if (!qword_10071B0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B0B8);
  }
  return result;
}

unint64_t sub_1005CBA6C()
{
  unint64_t result = qword_10071B0C0;
  if (!qword_10071B0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B0C0);
  }
  return result;
}

unint64_t sub_1005CBAC4()
{
  unint64_t result = qword_10071B0C8;
  if (!qword_10071B0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B0C8);
  }
  return result;
}

unint64_t sub_1005CBB1C()
{
  unint64_t result = qword_10071B0D0;
  if (!qword_10071B0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B0D0);
  }
  return result;
}

unint64_t sub_1005CBB74()
{
  unint64_t result = qword_10071B0D8;
  if (!qword_10071B0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B0D8);
  }
  return result;
}

unint64_t sub_1005CBBCC()
{
  unint64_t result = qword_10071B0E0;
  if (!qword_10071B0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B0E0);
  }
  return result;
}

unint64_t sub_1005CBC24()
{
  unint64_t result = qword_10071B0E8;
  if (!qword_10071B0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B0E8);
  }
  return result;
}

unint64_t sub_1005CBC7C()
{
  unint64_t result = qword_10071B0F0;
  if (!qword_10071B0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B0F0);
  }
  return result;
}

unint64_t sub_1005CBCD4()
{
  unint64_t result = qword_10071B0F8;
  if (!qword_10071B0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B0F8);
  }
  return result;
}

unint64_t sub_1005CBD2C()
{
  unint64_t result = qword_10071B100;
  if (!qword_10071B100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B100);
  }
  return result;
}

unint64_t sub_1005CBD84()
{
  unint64_t result = qword_10071B108;
  if (!qword_10071B108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B108);
  }
  return result;
}

unint64_t sub_1005CBDDC()
{
  unint64_t result = qword_10071B110;
  if (!qword_10071B110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B110);
  }
  return result;
}

unint64_t sub_1005CBE34()
{
  unint64_t result = qword_10071B118;
  if (!qword_10071B118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B118);
  }
  return result;
}

unint64_t sub_1005CBE88()
{
  unint64_t result = qword_10071B150;
  if (!qword_10071B150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B150);
  }
  return result;
}

uint64_t static DownloadRequest.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a3) {
    return a6 & (a1 == a4);
  }
  uint64_t result = 0;
  if ((a6 & 1) == 0 && a1 == a4) {
    return sub_1005CDF08(a2, a5);
  }
  return result;
}

uint64_t sub_1005CBF1C(char a1)
{
  return *(void *)&aDownloadsearch[8 * a1];
}

uint64_t sub_1005CBF3C()
{
  return sub_1005CBF1C(*v0);
}

uint64_t sub_1005CBF44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005D0BA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005CBF6C(uint64_t a1)
{
  unint64_t v2 = sub_1005D07B8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CBFA8(uint64_t a1)
{
  unint64_t v2 = sub_1005D07B8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CBFE4(uint64_t a1)
{
  unint64_t v2 = sub_1005D080C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CC020(uint64_t a1)
{
  unint64_t v2 = sub_1005D080C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CC05C(uint64_t a1)
{
  unint64_t v2 = sub_1005D095C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CC098(uint64_t a1)
{
  unint64_t v2 = sub_1005D095C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CC0D4(uint64_t a1)
{
  unint64_t v2 = sub_1005D08B4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CC110(uint64_t a1)
{
  unint64_t v2 = sub_1005D08B4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t MessageToSearchIndexer.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  sub_1003DC26C(v2, (uint64_t)v34);
  uint64_t v26 = (void *)v34[0];
  uint64_t v25 = v34[1];
  uint64_t v24 = v34[2];
  uint64_t v23 = v34[3];
  int v22 = v35;
  uint64_t v30 = sub_10000566C(&qword_10071B158);
  uint64_t v29 = *(void *)(v30 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10000566C(&qword_10071B160);
  uint64_t v27 = *(void *)(v28 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_10071B168);
  uint64_t v21 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10000566C(&qword_10071B170);
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005D07B8();
  sub_1005E3500();
  sub_1003DC26C(v2, (uint64_t)v36);
  int v13 = v37 >> 6;
  if (v13)
  {
    v37 &= 0x3Fu;
    if (v13 == 1)
    {
      sub_1003DC26C(v36, (uint64_t)&v39);
      LOBYTE(v33[0]) = 1;
      sub_1005B1DEC(v26, v25, v24, v23, v22 & 0x3F);
      sub_1005D08B4();
      uint64_t v14 = v31;
      sub_1005E3120();
      sub_1003DC26C(&v39, (uint64_t)v33);
      sub_1005D0908();
      uint64_t v15 = v28;
      sub_1005E31C0();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v15);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v14);
      return sub_1005D8AC4((uint64_t)v2, (void (*)(void, void, void, void, void))sub_1005B1D40);
    }
    else
    {
      sub_1004010F8(v36, &v40);
      LOBYTE(v33[0]) = 2;
      sub_1005D080C();
      uint64_t v18 = v31;
      sub_1005E3120();
      sub_1004010F8(&v40, v33);
      sub_1005D0860();
      uint64_t v19 = v30;
      sub_1005E31C0();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v19);
      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v12, v18);
    }
  }
  else
  {
    v37 &= 0x3Fu;
    sub_10042C9B0(v36, (uint64_t)&v38);
    LOBYTE(v33[0]) = 0;
    sub_1005D095C();
    uint64_t v17 = v31;
    sub_1005E3120();
    sub_10042C9B0(&v38, (uint64_t)v33);
    sub_1005D09B0();
    sub_1005E31C0();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v12, v17);
  }
}

void MessageToSearchIndexer.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1005D0CF4(a1, v4);
  if (!v2) {
    sub_1003DC26C((long long *)v4, a2);
  }
}

uint64_t sub_1005CC740(void *a1)
{
  sub_1003DC26C(v1, (uint64_t)v4);
  return MessageToSearchIndexer.encode(to:)(a1);
}

uint64_t sub_1005CC790(long long *a1, long long *a2)
{
  sub_1003DC26C(a1, (uint64_t)v4);
  sub_1003DC26C(a2, (uint64_t)v5);
  return _s20IMAPSearchIndexerXPC015MessageToSearchB0O21__derived_enum_equalsySbAC_ACtFZ_0(v4, v5) & 1;
}

unint64_t sub_1005CC7E4(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x686372616573;
      break;
    case 2:
      unint64_t result = 0x69746E6564657263;
      break;
    case 3:
      return result;
    default:
      unint64_t result = 0x64616F6C6E776F64;
      break;
  }
  return result;
}

unint64_t sub_1005CC880()
{
  return sub_1005CC7E4(*v0);
}

uint64_t sub_1005CC888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005D1654(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005CC8B0(uint64_t a1)
{
  unint64_t v2 = sub_1005D1360();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CC8EC(uint64_t a1)
{
  unint64_t v2 = sub_1005D1360();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CC928(uint64_t a1)
{
  unint64_t v2 = sub_1005D145C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CC964(uint64_t a1)
{
  unint64_t v2 = sub_1005D145C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CC9A0(uint64_t a1)
{
  unint64_t v2 = sub_1005D15AC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CC9DC(uint64_t a1)
{
  unint64_t v2 = sub_1005D15AC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CCA18(uint64_t a1)
{
  unint64_t v2 = sub_1005D13B4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CCA54(uint64_t a1)
{
  unint64_t v2 = sub_1005D13B4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CCA90(uint64_t a1)
{
  unint64_t v2 = sub_1005D1504();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CCACC(uint64_t a1)
{
  unint64_t v2 = sub_1005D1504();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t MessageFromSearchIndexer.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v42 = a5;
  uint64_t v34 = a4;
  uint64_t v35 = a3;
  uint64_t v36 = a2;
  uint64_t v6 = sub_10000566C(&qword_10071B1B0);
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  __chkstk_darwin();
  uint64_t v31 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_10071B1B8);
  uint64_t v29 = *(void *)(v8 - 8);
  uint64_t v30 = v8;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000566C(&qword_10071B1C0);
  uint64_t v27 = *(void *)(v11 - 8);
  uint64_t v28 = v11;
  __chkstk_darwin();
  int v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000566C(&qword_10071B1C8);
  uint64_t v26 = *(void *)(v14 - 8);
  __chkstk_darwin();
  unint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000566C(&qword_10071B1D0);
  uint64_t v37 = *(void *)(v17 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005D1360();
  sub_1005E3500();
  switch(v42 >> 6)
  {
    case 1:
      char v22 = v42 & 0x3F;
      LOBYTE(v38) = 1;
      sub_1005D1504();
      sub_1005E3120();
      uint64_t v38 = v36;
      uint64_t v39 = v35;
      uint64_t v40 = v34;
      char v41 = v22;
      sub_1005D1558();
      uint64_t v23 = v28;
      sub_1005E31C0();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v23);
      break;
    case 2:
      LOBYTE(v38) = 2;
      sub_1005D145C();
      sub_1005E3120();
      uint64_t v38 = v36;
      uint64_t v39 = v35;
      sub_1005D14B0();
      uint64_t v20 = v30;
      sub_1005E31C0();
      uint64_t v21 = v29;
      goto LABEL_5;
    case 3:
      LOBYTE(v38) = 3;
      sub_1005D13B4();
      uint64_t v10 = v31;
      sub_1005E3120();
      uint64_t v38 = v36;
      uint64_t v39 = v35;
      uint64_t v40 = v34;
      sub_1005D1408();
      uint64_t v20 = v33;
      sub_1005E31C0();
      uint64_t v21 = v32;
LABEL_5:
      (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v20);
      break;
    default:
      LOBYTE(v38) = 0;
      sub_1005D15AC();
      sub_1005E3120();
      LOBYTE(v38) = v36;
      sub_1005D1600();
      sub_1005E31C0();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v14);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v19, v17);
}

uint64_t MessageFromSearchIndexer.init(from:)(uint64_t a1)
{
  return sub_1005D0288(a1, (uint64_t (*)(void))sub_1005D17FC);
}

uint64_t sub_1005CD07C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1005D17FC(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_1005CD0B0(void *a1)
{
  return MessageFromSearchIndexer.encode(to:)(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1005CD0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1005D0324(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void))_s20IMAPSearchIndexerXPC017MessageFromSearchB0O21__derived_enum_equalsySbAC_ACtFZ_0);
}

uint64_t XPCSession.sendToSearchIndexer(_:replyHandler:)(long long *a1, uint64_t a2, uint64_t a3)
{
  sub_1003DC26C(a1, (uint64_t)v7);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  sub_1005D20B8();
  sub_1005D210C();
  swift_retain();
  sub_1005E0F30();
  return swift_release();
}

uint64_t sub_1005CD1AC(uint64_t a1, uint64_t (*a2)(void, void, void, void))
{
  return a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24) | (*(unsigned __int8 *)(a1 + 25) << 8));
}

uint64_t XPCSession.sendToSearchIndexer(_:)(long long *a1)
{
  sub_1003DC26C(a1, (uint64_t)v2);
  sub_1005D20B8();
  return sub_1005E0F40();
}

uint64_t XPCSession.sendToMaild(_:replyHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a5;
  *(void *)(v8 + 24) = a6;
  sub_1005D219C();
  sub_1005D21F0();
  swift_retain();
  sub_1005E0F30();
  return swift_release();
}

uint64_t XPCSession.sendToMaild(_:)()
{
  return sub_1005E0F40();
}

unint64_t sub_1005CD358(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F43746F4E646964;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x6C706D6F43646964;
      break;
    case 4:
      unint64_t result = 0x6572756C696166;
      break;
    default:
      unint64_t result = 0x7265666544646964;
      break;
  }
  return result;
}

unint64_t sub_1005CD420()
{
  return sub_1005CD358(*v0);
}

uint64_t sub_1005CD428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005D243C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005CD450(uint64_t a1)
{
  unint64_t v2 = sub_1005D2244();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CD48C(uint64_t a1)
{
  unint64_t v2 = sub_1005D2244();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CD4C8(uint64_t a1)
{
  unint64_t v2 = sub_1005D2340();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CD504(uint64_t a1)
{
  unint64_t v2 = sub_1005D2340();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CD540(uint64_t a1)
{
  unint64_t v2 = sub_1005D22EC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CD57C(uint64_t a1)
{
  unint64_t v2 = sub_1005D22EC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CD5B8(uint64_t a1)
{
  unint64_t v2 = sub_1005D23E8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CD5F4(uint64_t a1)
{
  unint64_t v2 = sub_1005D23E8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CD630(uint64_t a1)
{
  unint64_t v2 = sub_1005D2394();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CD66C(uint64_t a1)
{
  unint64_t v2 = sub_1005D2394();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CD6A8(uint64_t a1)
{
  unint64_t v2 = sub_1005D2298();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CD6E4(uint64_t a1)
{
  unint64_t v2 = sub_1005D2298();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DownloadRequest.Response.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v3 = sub_10000566C(&qword_10071B240);
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  __chkstk_darwin();
  uint64_t v32 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_10071B248);
  uint64_t v30 = *(void *)(v5 - 8);
  uint64_t v31 = v5;
  __chkstk_darwin();
  uint64_t v29 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_10071B250);
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  __chkstk_darwin();
  uint64_t v26 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000566C(&qword_10071B258);
  uint64_t v24 = *(void *)(v9 - 8);
  uint64_t v25 = v9;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000566C(&qword_10071B260);
  uint64_t v23 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000566C(&qword_10071B268);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005D2244();
  sub_1005E3500();
  switch((char)v35)
  {
    case 1:
      char v37 = 1;
      sub_1005D2394();
      sub_1005E3120();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v25);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    case 2:
      char v38 = 2;
      sub_1005D2340();
      uint64_t v19 = v26;
      sub_1005E3120();
      uint64_t v21 = v27;
      uint64_t v20 = v28;
      goto LABEL_7;
    case 3:
      char v39 = 3;
      sub_1005D22EC();
      uint64_t v19 = v29;
      sub_1005E3120();
      uint64_t v21 = v30;
      uint64_t v20 = v31;
      goto LABEL_7;
    case 4:
      char v40 = 4;
      sub_1005D2298();
      uint64_t v19 = v32;
      sub_1005E3120();
      uint64_t v21 = v33;
      uint64_t v20 = v34;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
      break;
    default:
      char v36 = 0;
      sub_1005D23E8();
      sub_1005E3120();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v12);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t DownloadRequest.Response.init(from:)(void *a1)
{
  return sub_1005D2664(a1);
}

uint64_t sub_1005CDC3C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1005D2664(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1005CDC68(void *a1)
{
  return DownloadRequest.Response.encode(to:)(a1, *v1);
}

uint64_t _s20IMAPSearchIndexerXPC18CredentialResponseO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v6 = 1;
    }
    else
    {
      uint64_t v3 = (_OWORD *)(a1 + 32);
      uint64_t v4 = (_OWORD *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        sub_100400248(v3, v10);
        sub_100400248(v4, v11);
        sub_1005D88DC(v10, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1005CB22C);
        sub_1005D88DC(v11, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1005CB22C);
        char v6 = _s20IMAPSearchIndexerXPC11CredentialsO21__derived_enum_equalsySbAC_ACtFZ_0(v10, v11);
        sub_1005D88DC(v11, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1005D8930);
        sub_1005D88DC(v10, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1005D8930);
        BOOL v8 = v5-- != 0;
        if ((v6 & 1) == 0) {
          break;
        }
        v3 += 5;
        v4 += 5;
      }
      while (v8);
    }
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

BOOL sub_1005CDD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 36);
  uint64_t v4 = (int *)(a2 + 36);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    int v8 = *v3++;
    int v7 = v8;
    int v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1005CDDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = a1 + 32;
    uint64_t v5 = a2 + 32;
    while (1)
    {
      char v6 = (unsigned __int8 **)(v4 + 24 * v3);
      int v7 = *v6;
      int v8 = (unsigned __int8 **)(v5 + 24 * v3);
      int v9 = *v8;
      uint64_t v10 = *((void *)*v6 + 2);
      if (v10 != *((void *)*v8 + 2)) {
        break;
      }
      uint64_t v11 = v6[1];
      uint64_t v12 = v6[2];
      if (v10) {
        BOOL v13 = v7 == v9;
      }
      else {
        BOOL v13 = 1;
      }
      if (!v13)
      {
        if (v7[32] != v9[32]) {
          return 0;
        }
        if (v10 != 1)
        {
          if (v7[33] != v9[33]) {
            return 0;
          }
          uint64_t v14 = v7 + 34;
          uint64_t v15 = v9 + 34;
          for (uint64_t i = v10 - 2; i; --i)
          {
            int v18 = *v14++;
            int v17 = v18;
            int v19 = *v15++;
            if (v17 != v19) {
              return 0;
            }
          }
        }
      }
      if ((v11 != v8[1] || v12 != v8[2]) && (sub_1005E3290() & 1) == 0) {
        break;
      }
      if (++v3 == v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1005CDF08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2)
  {
    uint64_t v3 = a2;
    if (a1 != a2)
    {
      uint64_t v4 = 0;
      uint64_t v19 = a1;
      while (1)
      {
        uint64_t v5 = *(void *)(a1 + v4 + 48);
        uint64_t v6 = *(void *)(a1 + v4 + 56);
        int v7 = *(unsigned __int16 *)(a1 + v4 + 64);
        unsigned int v8 = *(unsigned __int8 *)(a1 + v4 + 66);
        uint64_t v9 = *(void *)(v3 + v4 + 48);
        uint64_t v10 = *(void *)(v3 + v4 + 56);
        int v11 = *(unsigned __int16 *)(v3 + v4 + 64);
        unsigned int v12 = *(unsigned __int8 *)(v3 + v4 + 66);
        BOOL v13 = *(void *)(a1 + v4 + 32) == *(void *)(v3 + v4 + 32)
           && *(void *)(a1 + v4 + 40) == *(void *)(v3 + v4 + 40);
        if (!v13 && (sub_1005E3290() & 1) == 0) {
          break;
        }
        if (v5 == v9 && v6 == v10)
        {
          if (v7 != v11) {
            return 0;
          }
        }
        else
        {
          char v15 = sub_1005E3290();
          uint64_t result = 0;
          if ((v15 & 1) == 0 || v7 != v11) {
            return result;
          }
        }
        if (v8 >> 6)
        {
          if (v8 >> 6 == 1)
          {
            if ((v12 & 0xC0) != 0x40 || ((v12 ^ v8) & 0x3F) != 0) {
              return 0;
            }
          }
          else if (v12 != 128)
          {
            return 0;
          }
        }
        else if (v12 > 0x3F || v8 != v12)
        {
          return 0;
        }
        v4 += 40;
        --v2;
        a1 = v19;
        uint64_t v3 = a2;
        if (!v2) {
          return 1;
        }
      }
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1005CE058(char a1)
{
  if (a1) {
    return 1886352499;
  }
  else {
    return 0x7472617473;
  }
}

uint64_t sub_1005CE084()
{
  return sub_1005CE058(*v0);
}

uint64_t sub_1005CE08C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005D2F50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005CE0B4(uint64_t a1)
{
  unint64_t v2 = sub_1005D2DAC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CE0F0(uint64_t a1)
{
  unint64_t v2 = sub_1005D2DAC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CE12C(uint64_t a1)
{
  unint64_t v2 = sub_1005D2EA8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CE168(uint64_t a1)
{
  unint64_t v2 = sub_1005D2EA8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CE1A4(uint64_t a1)
{
  unint64_t v2 = sub_1005D2E00();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CE1E0(uint64_t a1)
{
  unint64_t v2 = sub_1005D2E00();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DownloadRequest.encode(to:)(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v23 = a2;
  int v22 = a4;
  uint64_t v18 = a3;
  uint64_t v5 = sub_10000566C(&qword_10071B2A0);
  uint64_t v19 = *(void *)(v5 - 8);
  __chkstk_darwin();
  int v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_10071B2A8);
  uint64_t v20 = *(void *)(v8 - 8);
  uint64_t v21 = v8;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000566C(&qword_10071B2B0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005D2DAC();
  sub_1005E3500();
  if (v22)
  {
    LOBYTE(v26) = 1;
    sub_1005D2E00();
    sub_1005E3120();
    uint64_t v26 = v23;
    sub_1005D2E54();
    sub_1005E31C0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v5);
  }
  else
  {
    LOBYTE(v26) = 0;
    sub_1005D2EA8();
    sub_1005E3120();
    uint64_t v26 = v23;
    char v25 = 0;
    sub_1005D2E54();
    uint64_t v15 = v21;
    uint64_t v16 = v24;
    sub_1005E31C0();
    if (!v16)
    {
      uint64_t v26 = v18;
      char v25 = 1;
      sub_10000566C(&qword_10071B2D8);
      sub_1005D85BC(&qword_10071B2E0, &qword_10071B2D8, (void (*)(void))sub_1005D2EFC);
      sub_1005E31C0();
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

void *DownloadRequest.init(from:)(void *a1)
{
  uint64_t result = sub_1005D3024(a1);
  if (v1) {
    return (void *)v3;
  }
  return result;
}

void *sub_1005CE5E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1005D3024(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_1005CE614(void *a1)
{
  return DownloadRequest.encode(to:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_1005CE634(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a1 == *(void *)a2) {
      return *(unsigned __int8 *)(a2 + 16);
    }
    else {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 == *(void *)a2) {
      char v3 = *(unsigned char *)(a2 + 16);
    }
    else {
      char v3 = 1;
    }
    if (v3) {
      return 0;
    }
    else {
      return sub_1005CDF08(*(void *)(a1 + 8), *(void *)(a2 + 8));
    }
  }
}

void DownloadRequest.ID.hash(into:)(uint64_t a1, Swift::UInt a2)
{
}

Swift::Int DownloadRequest.ID.hashValue.getter(Swift::UInt a1)
{
  return sub_1005E3470();
}

uint64_t DownloadRequest.ID.init(from:)(uint64_t a1)
{
  sub_100021C34(a1, (uint64_t)v4);
  uint64_t v2 = sub_1005E22F0();
  _s13IMAP2Behavior4TaskOwxx_0(a1);
  return v2;
}

uint64_t DownloadRequest.ID.encode(to:)()
{
  return sub_1005E2300();
}

uint64_t sub_1005CE758@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100021C34(a1, (uint64_t)v7);
  uint64_t v5 = sub_1005E22F0();
  uint64_t result = _s13IMAP2Behavior4TaskOwxx_0(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1005CE7C0()
{
  return sub_1005E2300();
}

uint64_t DownloadRequest.ID.description.getter()
{
  return sub_1005E3230();
}

uint64_t sub_1005CE81C()
{
  return sub_1005E3230();
}

uint64_t sub_1005CE864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005D36C4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1005CE890(uint64_t a1)
{
  unint64_t v2 = sub_1005D361C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CE8CC(uint64_t a1)
{
  unint64_t v2 = sub_1005D361C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CE908(uint64_t a1)
{
  unint64_t v2 = sub_1005D3670();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CE944(uint64_t a1)
{
  unint64_t v2 = sub_1005D3670();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CredentialRequest.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a2;
  uint64_t v14 = a3;
  uint64_t v4 = sub_10000566C(&qword_10071B2F0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  int v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_10071B2F8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005D361C();
  sub_1005E3500();
  sub_1005D3670();
  sub_1005E3120();
  uint64_t v15 = v13;
  uint64_t v16 = v14;
  sub_1005C59D8();
  sub_1005E31C0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void *CredentialRequest.init(from:)(void *a1)
{
  return sub_1005D3788(a1);
}

void *sub_1005CEBA4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1005D3788(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1005CEBD0(void *a1)
{
  return CredentialRequest.encode(to:)(a1, *v1, v1[1]);
}

uint64_t sub_1005CEBF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005D3C00(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1005CEC1C(uint64_t a1)
{
  unint64_t v2 = sub_1005D3B04();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CEC58(uint64_t a1)
{
  unint64_t v2 = sub_1005D3B04();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CEC94(uint64_t a1)
{
  unint64_t v2 = sub_1005D3B58();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CECD0(uint64_t a1)
{
  unint64_t v2 = sub_1005D3B58();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CredentialResponse.encode(to:)(void *a1, uint64_t a2)
{
  v13[0] = sub_10000566C(&qword_10071B310);
  uint64_t v4 = *(void *)(v13[0] - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_10071B318);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005D3B04();
  sub_1005E3500();
  sub_1005D3B58();
  sub_1005E3120();
  v13[3] = a2;
  sub_10000566C(&qword_10071B330);
  sub_1005D85BC(&qword_10071B338, &qword_10071B330, (void (*)(void))sub_1005D3BAC);
  uint64_t v11 = v13[0];
  sub_1005E31C0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void *CredentialResponse.init(from:)(void *a1)
{
  return sub_1005D3CB8(a1);
}

void *sub_1005CEF6C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1005D3CB8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1005CEF98(void *a1)
{
  return CredentialResponse.encode(to:)(a1, *v1);
}

uint64_t sub_1005CEFB4(uint64_t *a1, uint64_t *a2)
{
  return _s20IMAPSearchIndexerXPC18CredentialResponseO21__derived_enum_equalsySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1005CEFC0(char a1)
{
  if (!a1) {
    return 0x686372616573;
  }
  if (a1 == 1) {
    return 0xD000000000000015;
  }
  return 0xD000000000000012;
}

uint64_t sub_1005CF018(char a1)
{
  if (a1) {
    return 12639;
  }
  else {
    return 12383;
  }
}

uint64_t sub_1005CF030()
{
  return sub_1005CEFC0(*v0);
}

uint64_t sub_1005CF038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005D42C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005CF060(uint64_t a1)
{
  unint64_t v2 = sub_1005D407C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CF09C(uint64_t a1)
{
  unint64_t v2 = sub_1005D407C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CF0D8()
{
  return sub_1005CF018(*v0);
}

uint64_t sub_1005CF0E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005D4408(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005CF108(uint64_t a1)
{
  unint64_t v2 = sub_1005D40D0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CF144(uint64_t a1)
{
  unint64_t v2 = sub_1005D40D0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CF180(uint64_t a1)
{
  unint64_t v2 = sub_1005D41CC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CF1BC(uint64_t a1)
{
  unint64_t v2 = sub_1005D41CC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CF1F8(uint64_t a1)
{
  unint64_t v2 = sub_1005D4220();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CF234(uint64_t a1)
{
  unint64_t v2 = sub_1005D4220();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchRequest.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  sub_1003DC26C(v2, (uint64_t)v36);
  id v26 = (id)v36[0];
  *(void *)&long long v27 = v36[2];
  uint64_t v30 = sub_10000566C(&qword_10071B348);
  uint64_t v29 = *(void *)(v30 - 8);
  __chkstk_darwin();
  uint64_t v28 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_10071B350);
  uint64_t v24 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_10071B358);
  uint64_t v25 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10000566C(&qword_10071B360);
  uint64_t v31 = *(void *)(v32 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005D407C();
  sub_1005E3500();
  sub_1003DC26C(v2, (uint64_t)&v37);
  if (v40)
  {
    if (v40 == 1)
    {
      long long v27 = v37;
      uint64_t v14 = v38;
      uint64_t v13 = v39;
      LOBYTE(v34) = 2;
      sub_1005D40D0();
      uint64_t v15 = v28;
      uint64_t v16 = v32;
      sub_1005E3120();
      long long v34 = v27;
      uint64_t v35 = v14;
      char v33 = 0;
      sub_1005D4124();
      uint64_t v17 = v30;
      uint64_t v18 = v43;
      sub_1005E31C0();
      if (!v18)
      {
        *(void *)&long long v34 = v13;
        char v33 = 1;
        sub_10000566C(&qword_10071B380);
        sub_1005D85BC(&qword_10071B388, &qword_10071B380, (void (*)(void))sub_1005D4178);
        sub_1005E31C0();
      }
      (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v17);
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v12, v16);
    }
    else
    {
      LOBYTE(v34) = 1;
      sub_1005D41CC();
      uint64_t v22 = v32;
      sub_1005E3120();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v5);
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v12, v22);
    }
  }
  else
  {
    long long v41 = v37;
    uint64_t v42 = v38;
    LOBYTE(v34) = 0;
    sub_1005D4220();
    id v20 = v26;
    swift_bridgeObjectRetain();
    uint64_t v21 = v32;
    sub_1005E3120();
    long long v34 = v41;
    uint64_t v35 = v42;
    sub_1005D4274();
    sub_1005E31C0();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v21);
    return sub_1005D8AC4((uint64_t)v2, (void (*)(void, void, void, void, void))sub_1005B1D80);
  }
}

uint64_t SearchRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1005D44C4(a1, (uint64_t)v5);
  if (!v2) {
    return sub_1003DC26C(v5, a2);
  }
  return result;
}

uint64_t sub_1005CF858(void *a1)
{
  sub_1003DC26C(v1, (uint64_t)v4);
  return SearchRequest.encode(to:)(a1);
}

BOOL sub_1005CF8A8(long long *a1, long long *a2)
{
  sub_1003DC26C(a1, (uint64_t)v4);
  sub_1003DC26C(a2, (uint64_t)v5);
  return _s20IMAPSearchIndexerXPC13SearchRequestO21__derived_enum_equalsySbAC_ACtFZ_0(v4, v5);
}

uint64_t sub_1005CF8F4(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v30 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v10 = v9 | (v4 << 6);
LABEL_25:
    uint64_t v14 = (uint64_t *)(*(void *)(v3 + 48) + 24 * v10);
    uint64_t v16 = *v14;
    uint64_t v15 = (unsigned __int8 *)v14[1];
    uint64_t v17 = (unsigned __int8 *)v14[2];
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1005DB4D0(v16, v15, v17);
    char v21 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0
      || (uint64_t v22 = *(void *)(*(void *)(a2 + 56) + 8 * v19), v23 = *(void *)(v22 + 16), v23 != *(void *)(v18 + 16)))
    {
LABEL_37:
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v23) {
      BOOL v24 = v22 == v18;
    }
    else {
      BOOL v24 = 1;
    }
    if (!v24)
    {
      if (*(_DWORD *)(v22 + 32) != *(_DWORD *)(v18 + 32)) {
        goto LABEL_37;
      }
      if (v23 != 1)
      {
        if (*(_DWORD *)(v22 + 36) != *(_DWORD *)(v18 + 36)) {
          goto LABEL_37;
        }
        uint64_t v25 = 0;
        uint64_t v26 = v22 + 40;
        uint64_t v27 = v23 - 2;
        while (v27 != v25)
        {
          int v28 = *(_DWORD *)(v26 + 4 * v25);
          int v29 = *(_DWORD *)(v18 + 4 * v25++ + 40);
          if (v28 != v29) {
            goto LABEL_37;
          }
        }
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  if (v11 >= v30) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v11);
  ++v4;
  if (v12) {
    goto LABEL_24;
  }
  int64_t v4 = v11 + 1;
  if (v11 + 1 >= v30) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v4);
  if (v12) {
    goto LABEL_24;
  }
  int64_t v4 = v11 + 2;
  if (v11 + 2 >= v30) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v4);
  if (v12) {
    goto LABEL_24;
  }
  int64_t v4 = v11 + 3;
  if (v11 + 3 >= v30) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v4);
  if (v12)
  {
LABEL_24:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_25;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v30) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v30) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1005CFB68(char a1)
{
  if (!a1) {
    return 0x6552686372616573;
  }
  if (a1 == 1) {
    return 0xD000000000000012;
  }
  return 0x646564756C637865;
}

uint64_t sub_1005CFBD8()
{
  return sub_1005CFB68(*v0);
}

uint64_t sub_1005CFBE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005D4DF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005CFC08(uint64_t a1)
{
  unint64_t v2 = sub_1005D4BF0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CFC44(uint64_t a1)
{
  unint64_t v2 = sub_1005D4BF0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CFC80(uint64_t a1)
{
  unint64_t v2 = sub_1005D4C44();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CFCBC(uint64_t a1)
{
  unint64_t v2 = sub_1005D4C44();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CFCF8(uint64_t a1)
{
  unint64_t v2 = sub_1005D4C98();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CFD34(uint64_t a1)
{
  unint64_t v2 = sub_1005D4C98();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CFD70(uint64_t a1)
{
  unint64_t v2 = sub_1005D4CEC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CFDAC(uint64_t a1)
{
  unint64_t v2 = sub_1005D4CEC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchResponse.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v31 = a5;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v32 = a2;
  uint64_t v6 = sub_10000566C(&qword_10071B3B0);
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v30 = v6;
  __chkstk_darwin();
  unint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000566C(&qword_10071B3B8);
  uint64_t v25 = *(void *)(v9 - 8);
  uint64_t v26 = v9;
  __chkstk_darwin();
  int64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000566C(&qword_10071B3C0);
  uint64_t v24 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000566C(&qword_10071B3C8);
  uint64_t v33 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005D4BF0();
  sub_1005E3500();
  if ((_BYTE)v31)
  {
    if (v31 == 1)
    {
      LOBYTE(v34) = 1;
      sub_1005D4C98();
      uint64_t v18 = v15;
      sub_1005E3120();
      uint64_t v34 = v32;
      uint64_t v35 = v27;
      uint64_t v36 = v28;
      sub_1005D1408();
      uint64_t v19 = v26;
      sub_1005E31C0();
      char v20 = *(void (**)(char *, uint64_t))(v25 + 8);
      char v21 = v11;
    }
    else
    {
      LOBYTE(v34) = 2;
      sub_1005D4C44();
      uint64_t v18 = v15;
      sub_1005E3120();
      uint64_t v34 = v32;
      sub_10000566C(&qword_10071B380);
      sub_1005D85BC(&qword_10071B388, &qword_10071B380, (void (*)(void))sub_1005D4178);
      uint64_t v19 = v30;
      sub_1005E31C0();
      char v20 = *(void (**)(char *, uint64_t))(v29 + 8);
      char v21 = v8;
    }
    v20(v21, v19);
  }
  else
  {
    LOBYTE(v34) = 0;
    sub_1005D4CEC();
    uint64_t v18 = v15;
    sub_1005E3120();
    uint64_t v34 = v32;
    sub_10000566C(&qword_10071B3F0);
    sub_1005D4D40();
    sub_1005E31C0();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v12);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v17, v18);
}

uint64_t SearchResponse.init(from:)(uint64_t a1)
{
  return sub_1005D0288(a1, (uint64_t (*)(void))sub_1005D4F64);
}

uint64_t sub_1005D0288(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t result = a2();
  if (v2) {
    return v4;
  }
  return result;
}

uint64_t sub_1005D02B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1005D4F64(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_1005D02E8(void *a1)
{
  return SearchResponse.encode(to:)(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1005D030C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1005D0324(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void))_s20IMAPSearchIndexerXPC14SearchResponseO21__derived_enum_equalsySbAC_ACtFZ_0);
}

uint64_t sub_1005D0324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void, void, void))
{
  return a5(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned __int8 *)(a2 + 24));
}

BOOL _s20IMAPSearchIndexerXPC13SearchRequestO21__derived_enum_equalsySbAC_ACtFZ_0(long long *a1, long long *a2)
{
  sub_1003DC26C(a1, (uint64_t)&v33);
  if (!v37)
  {
    int64_t v11 = v33;
    uint64_t v12 = v34;
    uint64_t v13 = v35;
    sub_1003DC26C(a2, (uint64_t)&v30);
    if (v32) {
      return 0;
    }
    int8x16_t v14 = v30;
    uint64_t v15 = v31.i64[0];
    id v38 = v11;
    uint64_t v39 = v30.i64[0];
    sub_1005D8A6C(&v38);
    swift_bridgeObjectRetain();
    sub_1005D8A6C((id *)&v39);
    swift_bridgeObjectRetain();
    id v16 = [v11 uniqueIdentifier];
    uint64_t v17 = sub_1005E1C00();
    uint64_t v19 = v18;

    id v20 = [(id)v14.i64[0] uniqueIdentifier];
    uint64_t v21 = sub_1005E1C00();
    uint64_t v23 = v22;

    if (v17 == v21 && v19 == v23)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v27 = sub_1005E3290();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0) {
        goto LABEL_23;
      }
    }
    if (v12 == v14.i64[1])
    {
      char v28 = sub_1005CDDF8(v13, v15);
      sub_1005D8A98((id *)&v39);
      swift_bridgeObjectRelease();
      sub_1005D8A98(&v38);
      swift_bridgeObjectRelease();
      return (v28 & 1) != 0;
    }
LABEL_23:
    sub_1005D8A98((id *)&v39);
    swift_bridgeObjectRelease();
    sub_1005D8A98(&v38);
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v37 != 1)
  {
    sub_1003DC26C(a2, (uint64_t)&v30);
    int8x16_t v24 = vorrq_s8(v30, v31);
    int8x8_t v25 = vorr_s8(*(int8x8_t *)v24.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v24, v24, 8uLL));
    return v32 == 2 && *(void *)&v25 == 0;
  }
  uint64_t v4 = (uint64_t)v33;
  uint64_t v3 = v34;
  uint64_t v6 = v35;
  uint64_t v5 = v36;
  sub_1003DC26C(a2, (uint64_t)&v30);
  if (v32 != 1) {
    return 0;
  }
  uint64_t v7 = v30.i64[1];
  int8x16_t v8 = v31;
  if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(v4, v30.i64[0])) {
    return 0;
  }
  if (v3 == v7 && v6 == v8.i64[0]) {
    return sub_1005CDD8C(v5, v8.i64[1]);
  }
  char v9 = sub_1005E3290();
  BOOL v10 = 0;
  if (v9) {
    return sub_1005CDD8C(v5, v8.i64[1]);
  }
  return v10;
}

uint64_t _s20IMAPSearchIndexerXPC015MessageToSearchB0O21__derived_enum_equalsySbAC_ACtFZ_0(long long *a1, long long *a2)
{
  sub_1003DC26C(a1, (uint64_t)v17);
  int v4 = v18 >> 6;
  if (!v4)
  {
    v18 &= 0x3Fu;
    sub_10042C9B0(v17, (uint64_t)v13);
    sub_1003DC26C(a2, (uint64_t)v19);
    if (v20 <= 0x3Fu)
    {
      sub_10042C9B0(v19, (uint64_t)&v10);
      sub_10042C9B0(v13, (uint64_t)&v15);
      uint64_t v6 = v15;
      if (v16)
      {
        sub_10042C9B0(&v10, (uint64_t)v11);
        if (v12 != 1 || v6 != v11[0]) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v8 = *((void *)&v15 + 1);
        sub_10042C9B0(&v10, (uint64_t)v11);
        if ((v12 & 1) != 0 || v6 != v11[0] || (sub_1005CDF08(v8, v11[1]) & 1) == 0) {
          goto LABEL_16;
        }
      }
      char v5 = 1;
      return v5 & 1;
    }
LABEL_16:
    char v5 = 0;
    return v5 & 1;
  }
  if (v4 != 1)
  {
    v18 &= 0x3Fu;
    uint64_t v7 = *(void *)&v17[0];
    sub_1003DC26C(a2, (uint64_t)v19);
    if ((v20 & 0xC0) == 0x80)
    {
      v20 &= 0x3Fu;
      char v5 = _s20IMAPSearchIndexerXPC18CredentialResponseO21__derived_enum_equalsySbAC_ACtFZ_0(v7, *(uint64_t *)&v19[0]);
      return v5 & 1;
    }
    goto LABEL_16;
  }
  v18 &= 0x3Fu;
  sub_1003DC26C(v17, (uint64_t)v19);
  sub_1003DC26C(a2, (uint64_t)v13);
  if ((v14 & 0xC0) != 0x40) {
    goto LABEL_16;
  }
  v14 &= 0x3Fu;
  sub_1003DC26C(v13, (uint64_t)&v15);
  sub_1005D8AC4((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1005B21A8);
  sub_1005D8AC4((uint64_t)a2, (void (*)(void, void, void, void, void))sub_1005B21A8);
  char v5 = _s20IMAPSearchIndexerXPC13SearchRequestO21__derived_enum_equalsySbAC_ACtFZ_0(v19, &v15);
  sub_1005D8AC4((uint64_t)a2, (void (*)(void, void, void, void, void))sub_1005B1D40);
  sub_1005D8AC4((uint64_t)a1, (void (*)(void, void, void, void, void))sub_1005B1D40);
  return v5 & 1;
}

unint64_t sub_1005D07B8()
{
  unint64_t result = qword_10071B178;
  if (!qword_10071B178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B178);
  }
  return result;
}

unint64_t sub_1005D080C()
{
  unint64_t result = qword_10071B180;
  if (!qword_10071B180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B180);
  }
  return result;
}

unint64_t sub_1005D0860()
{
  unint64_t result = qword_10071B188;
  if (!qword_10071B188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B188);
  }
  return result;
}

unint64_t sub_1005D08B4()
{
  unint64_t result = qword_10071B190;
  if (!qword_10071B190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B190);
  }
  return result;
}

unint64_t sub_1005D0908()
{
  unint64_t result = qword_10071B198;
  if (!qword_10071B198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B198);
  }
  return result;
}

unint64_t sub_1005D095C()
{
  unint64_t result = qword_10071B1A0;
  if (!qword_10071B1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B1A0);
  }
  return result;
}

unint64_t sub_1005D09B0()
{
  unint64_t result = qword_10071B1A8;
  if (!qword_10071B1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B1A8);
  }
  return result;
}

uint64_t _s20IMAPSearchIndexerXPC017MessageFromSearchB0O21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  switch(a4 >> 6)
  {
    case 1:
      if ((a8 & 0xC0) != 0x40) {
        goto LABEL_39;
      }
      int v9 = a8 & 0x3F;
      if ((a4 & 0x3F) != 0)
      {
        if ((a4 & 0x3F) == 1)
        {
          if (v9 == 1 && a1 == a5 && a2 == a6 && a3 == a7) {
            goto LABEL_9;
          }
        }
        else if (v9 == 2 && sub_1005CDD8C(a1, a5))
        {
          goto LABEL_9;
        }
      }
      else if (a8 & 0x3F) == 0 && (sub_1005CF8F4(a1, a5))
      {
        goto LABEL_9;
      }
      goto LABEL_39;
    case 2:
      if ((a8 & 0xC0) == 0x80)
      {
        if (a1 == a5 && a2 == a6)
        {
LABEL_9:
          uint64_t result = 1;
        }
        else
        {
          uint64_t result = sub_1005E3290();
        }
      }
      else
      {
LABEL_39:
        uint64_t result = 0;
      }
      break;
    case 3:
      BOOL v12 = a1 == a5 && a2 == a6 && a3 == a7;
      uint64_t result = a8 > 0xBFu && v12;
      break;
    default:
      uint64_t result = a8 < 0x40u && a5 == a1;
      break;
  }
  return result;
}

uint64_t _s20IMAPSearchIndexerXPC14SearchResponseO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (!a4)
  {
    if (!a8) {
      return sub_1005CF8F4(a1, a5);
    }
    return 0;
  }
  if (a4 != 1)
  {
    if (a8 == 2) {
      return sub_1005CDD8C(a1, a5);
    }
    return 0;
  }
  BOOL v10 = a1 == a5 && a2 == a6 && a3 == a7;
  return a8 == 1 && v10;
}

uint64_t sub_1005D0BA4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x64616F6C6E776F64 && a2 == 0xE800000000000000;
  if (v3 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x686372616573 && a2 == 0xE600000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69746E6564657263 && a2 == 0xEB00000000736C61)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

double sub_1005D0CF4@<D0>(void *a1@<X0>, __n128 *a2@<X8>)
{
  id v38 = a2;
  uint64_t v33 = sub_10000566C(&qword_10071B7F8);
  uint64_t v37 = *(void *)(v33 - 8);
  __chkstk_darwin();
  uint64_t v39 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000566C(&qword_10071B800);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  uint64_t v36 = v5;
  __chkstk_darwin();
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_10071B808);
  uint64_t v34 = *(void *)(v8 - 8);
  __chkstk_darwin();
  BOOL v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000566C(&qword_10071B810);
  unint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  char v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v45 = a1;
  sub_10003BCDC(a1, v15);
  sub_1005D07B8();
  unint64_t v16 = v40.n128_u64[0];
  sub_1005E34E0();
  if (v16) {
    goto LABEL_9;
  }
  uint64_t v17 = v39;
  v40.n128_u64[0] = v12;
  uint64_t v18 = sub_1005E3110();
  if (*(void *)(v18 + 16) != 1)
  {
    uint64_t v23 = sub_1005E2D20();
    swift_allocError();
    int8x16_t v24 = v14;
    uint64_t v26 = v25;
    sub_10000566C(&qword_10071AFF0);
    *uint64_t v26 = &type metadata for MessageToSearchIndexer;
    sub_1005E3070();
    sub_1005E2D10();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v26, enum case for DecodingError.typeMismatch(_:), v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40.n128_u64[0] + 8))(v24, v11);
LABEL_9:
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v45);
    return result;
  }
  if (*(unsigned char *)(v18 + 32))
  {
    if (*(unsigned char *)(v18 + 32) == 1)
    {
      v41.n128_u8[0] = 1;
      sub_1005D08B4();
      sub_1005E3060();
      sub_1005D8834();
      uint64_t v19 = v35;
      sub_1005E30E0();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v19);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40.n128_u64[0] + 8))(v14, v11);
      __n128 v40 = v41;
      unint64_t v21 = v42;
      unint64_t v20 = v43;
      char v22 = v44 | 0x40;
    }
    else
    {
      v41.n128_u8[0] = 2;
      sub_1005D080C();
      sub_1005E3060();
      sub_1005D87E0();
      uint64_t v28 = v33;
      sub_1005E30E0();
      unint64_t v29 = v40.n128_u64[0];
      (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v28);
      swift_bridgeObjectRelease();
      __n128 v30 = ((__n128 (*)(char *, uint64_t))*(void *)(v29 + 8))(v14, v11);
      unint64_t v21 = 0;
      unint64_t v20 = 0;
      v30.n128_u64[0] = v41.n128_u64[0];
      __n128 v40 = v30;
      char v22 = 0x80;
    }
  }
  else
  {
    v41.n128_u8[0] = 0;
    sub_1005D095C();
    sub_1005E3060();
    sub_1005D8888();
    sub_1005E30E0();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v8);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40.n128_u64[0] + 8))(v14, v11);
    unint64_t v20 = 0;
    char v22 = 0;
    __n128 v40 = v41;
    unint64_t v21 = v42;
  }
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v45);
  int8x16_t v31 = v38;
  double result = v40.n128_f64[0];
  *id v38 = v40;
  v31[1].n128_u64[0] = v21;
  v31[1].n128_u64[1] = v20;
  v31[2].n128_u8[0] = v22;
  return result;
}

unint64_t sub_1005D1360()
{
  unint64_t result = qword_10071B1D8;
  if (!qword_10071B1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B1D8);
  }
  return result;
}

unint64_t sub_1005D13B4()
{
  unint64_t result = qword_10071B1E0;
  if (!qword_10071B1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B1E0);
  }
  return result;
}

unint64_t sub_1005D1408()
{
  unint64_t result = qword_10071B1E8;
  if (!qword_10071B1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B1E8);
  }
  return result;
}

unint64_t sub_1005D145C()
{
  unint64_t result = qword_10071B1F0;
  if (!qword_10071B1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B1F0);
  }
  return result;
}

unint64_t sub_1005D14B0()
{
  unint64_t result = qword_10071B1F8;
  if (!qword_10071B1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B1F8);
  }
  return result;
}

unint64_t sub_1005D1504()
{
  unint64_t result = qword_10071B200;
  if (!qword_10071B200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B200);
  }
  return result;
}

unint64_t sub_1005D1558()
{
  unint64_t result = qword_10071B208;
  if (!qword_10071B208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B208);
  }
  return result;
}

unint64_t sub_1005D15AC()
{
  unint64_t result = qword_10071B210;
  if (!qword_10071B210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B210);
  }
  return result;
}

unint64_t sub_1005D1600()
{
  unint64_t result = qword_10071B218;
  if (!qword_10071B218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B218);
  }
  return result;
}

uint64_t sub_1005D1654(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x64616F6C6E776F64 && a2 == 0xE800000000000000;
  if (v3 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x686372616573 && a2 == 0xE600000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69746E6564657263 && a2 == 0xEB00000000736C61 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001005ED670)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1005D17FC(void *a1)
{
  uint64_t v44 = sub_10000566C(&qword_10071B7B8);
  uint64_t v48 = *(void *)(v44 - 8);
  __chkstk_darwin();
  uint64_t v47 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_10000566C(&qword_10071B7C0);
  uint64_t v45 = *(void *)(v43 - 8);
  __chkstk_darwin();
  uint64_t v46 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000566C(&qword_10071B7C8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  uint64_t v42 = v5;
  __chkstk_darwin();
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_10071B7D0);
  uint64_t v40 = *(void *)(v8 - 8);
  __chkstk_darwin();
  BOOL v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000566C(&qword_10071B7D8);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  char v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v15 = a1[4];
  uint64_t v49 = a1;
  sub_10003BCDC(a1, v16);
  sub_1005D1360();
  uint64_t v17 = v51;
  sub_1005E34E0();
  if (!v17)
  {
    uint64_t v18 = v10;
    uint64_t v38 = v8;
    uint64_t v39 = 0;
    uint64_t v19 = v46;
    unint64_t v20 = v47;
    uint64_t v21 = v48;
    uint64_t v51 = v12;
    uint64_t v22 = sub_1005E3110();
    if (*(void *)(v22 + 16) == 1)
    {
      switch(*(unsigned char *)(v22 + 32))
      {
        case 1:
          LOBYTE(v50) = 1;
          sub_1005D1504();
          uint64_t v28 = v39;
          sub_1005E3060();
          uint64_t v15 = v28;
          if (v28) {
            goto LABEL_12;
          }
          sub_1005D8738();
          uint64_t v29 = v41;
          sub_1005E30E0();
          (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v29);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v11);
          uint64_t v15 = v50;
          break;
        case 2:
          LOBYTE(v50) = 2;
          sub_1005D145C();
          __n128 v30 = v19;
          uint64_t v31 = v39;
          sub_1005E3060();
          uint64_t v15 = v31;
          if (v31) {
            goto LABEL_12;
          }
          sub_1005D86E4();
          uint64_t v32 = v43;
          sub_1005E30E0();
          uint64_t v33 = v51;
          (*(void (**)(char *, uint64_t))(v45 + 8))(v30, v32);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v11);
          uint64_t v15 = v50;
          break;
        case 3:
          LOBYTE(v50) = 3;
          sub_1005D13B4();
          uint64_t v34 = v39;
          sub_1005E3060();
          uint64_t v15 = v34;
          if (v34) {
            goto LABEL_12;
          }
          sub_1005D8364();
          uint64_t v36 = v44;
          sub_1005E30E0();
          uint64_t v37 = v51;
          (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v36);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v11);
          uint64_t v15 = v50;
          break;
        default:
          LOBYTE(v50) = 0;
          sub_1005D15AC();
          uint64_t v23 = v18;
          uint64_t v24 = v39;
          sub_1005E3060();
          uint64_t v15 = v24;
          if (v24)
          {
LABEL_12:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v11);
          }
          else
          {
            sub_1005D878C();
            uint64_t v25 = v38;
            sub_1005E30E0();
            (*(void (**)(char *, uint64_t))(v40 + 8))(v23, v25);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v11);
            uint64_t v15 = v50;
          }
          break;
      }
    }
    else
    {
      uint64_t v15 = sub_1005E2D20();
      swift_allocError();
      char v27 = v26;
      sub_10000566C(&qword_10071AFF0);
      *char v27 = &type metadata for MessageFromSearchIndexer;
      sub_1005E3070();
      sub_1005E2D10();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v27, enum case for DecodingError.typeMismatch(_:), v15);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v11);
    }
  }
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v49);
  return v15;
}

uint64_t sub_1005D2038()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005D2070(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(v1 + 16))(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24) | (*(unsigned __int8 *)(a1 + 25) << 8));
}

unint64_t sub_1005D20B8()
{
  unint64_t result = qword_10071B220;
  if (!qword_10071B220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B220);
  }
  return result;
}

unint64_t sub_1005D210C()
{
  unint64_t result = qword_10071B228;
  if (!qword_10071B228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B228);
  }
  return result;
}

uint64_t sub_1005D2160(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(unsigned char *))(v1 + 16);
  sub_1005D867C(a1, (uint64_t)v4);
  return v2(v4);
}

unint64_t sub_1005D219C()
{
  unint64_t result = qword_10071B230;
  if (!qword_10071B230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B230);
  }
  return result;
}

unint64_t sub_1005D21F0()
{
  unint64_t result = qword_10071B238;
  if (!qword_10071B238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B238);
  }
  return result;
}

unint64_t sub_1005D2244()
{
  unint64_t result = qword_10071B270;
  if (!qword_10071B270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B270);
  }
  return result;
}

unint64_t sub_1005D2298()
{
  unint64_t result = qword_10071B278;
  if (!qword_10071B278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B278);
  }
  return result;
}

unint64_t sub_1005D22EC()
{
  unint64_t result = qword_10071B280;
  if (!qword_10071B280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B280);
  }
  return result;
}

unint64_t sub_1005D2340()
{
  unint64_t result = qword_10071B288;
  if (!qword_10071B288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B288);
  }
  return result;
}

unint64_t sub_1005D2394()
{
  unint64_t result = qword_10071B290;
  if (!qword_10071B290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B290);
  }
  return result;
}

unint64_t sub_1005D23E8()
{
  unint64_t result = qword_10071B298;
  if (!qword_10071B298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B298);
  }
  return result;
}

uint64_t sub_1005D243C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7265666544646964 && a2 == 0xE800000000000000;
  if (v3 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F43746F4E646964 && a2 == 0xEE006574656C706DLL || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001005ED690 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C706D6F43646964 && a2 == 0xEB00000000657465 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1005D2664(void *a1)
{
  uint64_t v41 = sub_10000566C(&qword_10071B780);
  uint64_t v34 = *(void *)(v41 - 8);
  __chkstk_darwin();
  uint64_t v44 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10000566C(&qword_10071B788);
  uint64_t v40 = *(void *)(v37 - 8);
  __chkstk_darwin();
  uint64_t v43 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000566C(&qword_10071B790);
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  __chkstk_darwin();
  uint64_t v42 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000566C(&qword_10071B798);
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  __chkstk_darwin();
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000566C(&qword_10071B7A0);
  uint64_t v33 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000566C(&qword_10071B7A8);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v15 = (uint64_t)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v45 = a1;
  sub_10003BCDC(a1, v16);
  sub_1005D2244();
  uint64_t v17 = v46;
  sub_1005E34E0();
  if (!v17)
  {
    uint64_t v46 = v11;
    uint64_t v31 = v9;
    uint64_t v32 = v13;
    uint64_t v18 = v8;
    unint64_t v20 = v42;
    uint64_t v19 = v43;
    uint64_t v21 = v44;
    uint64_t v22 = v15;
    uint64_t v23 = sub_1005E3110();
    if (*(void *)(v23 + 16) == 1)
    {
      uint64_t v15 = *(unsigned __int8 *)(v23 + 32);
      switch(*(unsigned char *)(v23 + 32))
      {
        case 1:
          uint64_t v30 = v32;
          char v48 = 1;
          sub_1005D2394();
          sub_1005E3060();
          (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v36);
          goto LABEL_12;
        case 2:
          uint64_t v30 = v32;
          char v49 = 2;
          sub_1005D2340();
          sub_1005E3060();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v39);
LABEL_12:
          swift_bridgeObjectRelease();
          uint64_t v24 = v30;
          goto LABEL_10;
        case 3:
          uint64_t v24 = v32;
          char v50 = 3;
          sub_1005D22EC();
          sub_1005E3060();
          (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v37);
          goto LABEL_13;
        case 4:
          char v51 = 4;
          sub_1005D2298();
          sub_1005E3060();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v41);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v22, v12);
          break;
        default:
          uint64_t v24 = v32;
          char v47 = 0;
          sub_1005D23E8();
          uint64_t v25 = v46;
          sub_1005E3060();
          (*(void (**)(char *, uint64_t))(v33 + 8))(v25, v31);
LABEL_13:
          swift_bridgeObjectRelease();
LABEL_10:
          (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v12);
          break;
      }
    }
    else
    {
      uint64_t v26 = sub_1005E2D20();
      uint64_t v15 = swift_allocError();
      uint64_t v28 = v27;
      sub_10000566C(&qword_10071AFF0);
      *uint64_t v28 = &type metadata for DownloadRequest.Response;
      sub_1005E3070();
      sub_1005E2D10();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, enum case for DecodingError.typeMismatch(_:), v26);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v22, v12);
    }
  }
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v45);
  return v15;
}

unint64_t sub_1005D2DAC()
{
  unint64_t result = qword_10071B2B8;
  if (!qword_10071B2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B2B8);
  }
  return result;
}

unint64_t sub_1005D2E00()
{
  unint64_t result = qword_10071B2C0;
  if (!qword_10071B2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B2C0);
  }
  return result;
}

unint64_t sub_1005D2E54()
{
  unint64_t result = qword_10071B2C8;
  if (!qword_10071B2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B2C8);
  }
  return result;
}

unint64_t sub_1005D2EA8()
{
  unint64_t result = qword_10071B2D0;
  if (!qword_10071B2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B2D0);
  }
  return result;
}

unint64_t sub_1005D2EFC()
{
  unint64_t result = qword_10071B2E8;
  if (!qword_10071B2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B2E8);
  }
  return result;
}

uint64_t sub_1005D2F50(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7472617473 && a2 == 0xE500000000000000;
  if (v3 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1886352499 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_1005D3024(void *a1)
{
  uint64_t v2 = sub_10000566C(&qword_10071B750);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  uint64_t v28 = v3;
  __chkstk_darwin();
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = (void *)sub_10000566C(&qword_10071B758);
  uint64_t v29 = *(v6 - 1);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000566C(&qword_10071B760);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v30 = a1;
  sub_10003BCDC(a1, v13);
  sub_1005D2DAC();
  uint64_t v14 = v31;
  sub_1005E34E0();
  if (v14) {
    goto LABEL_7;
  }
  uint64_t v31 = v10;
  uint64_t v15 = sub_1005E3110();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v18 = sub_1005E2D20();
    swift_allocError();
    char v6 = v19;
    sub_10000566C(&qword_10071AFF0);
    *char v6 = &type metadata for DownloadRequest;
    sub_1005E3070();
    sub_1005E2D10();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v6, enum case for DecodingError.typeMismatch(_:), v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v9);
LABEL_7:
    uint64_t v23 = (uint64_t)v30;
    goto LABEL_8;
  }
  int v16 = *(unsigned __int8 *)(v15 + 32);
  if (v16)
  {
    LOBYTE(v34) = 1;
    sub_1005D2E00();
    uint64_t v17 = v5;
    sub_1005E3060();
    sub_1005D8568();
    uint64_t v22 = v27;
    sub_1005E30E0();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v9);
    char v6 = v34;
  }
  else
  {
    LOBYTE(v34) = 0;
    sub_1005D2EA8();
    sub_1005E3060();
    LOBYTE(v33) = 0;
    sub_1005D8568();
    uint64_t v21 = v8;
    sub_1005E30E0();
    LODWORD(v28) = v16;
    uint64_t v24 = v6;
    char v6 = v34;
    sub_10000566C(&qword_10071B2D8);
    char v32 = 1;
    sub_1005D85BC(&qword_10071B770, &qword_10071B2D8, (void (*)(void))sub_1005D8628);
    sub_1005E30E0();
    uint64_t v25 = v31;
    (*(void (**)(char *, void *))(v29 + 8))(v21, v24);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v9);
  }
  uint64_t v23 = (uint64_t)v30;
LABEL_8:
  _s13IMAP2Behavior4TaskOwxx_0(v23);
  return v6;
}

unint64_t sub_1005D361C()
{
  unint64_t result = qword_10071B300;
  if (!qword_10071B300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B300);
  }
  return result;
}

unint64_t sub_1005D3670()
{
  unint64_t result = qword_10071B308;
  if (!qword_10071B308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B308);
  }
  return result;
}

uint64_t sub_1005D36C4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x64657243656B616DLL && a2 == 0xEF736C6169746E65)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1005E3290();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1005D3764()
{
  return 0x64657243656B616DLL;
}

void *sub_1005D3788(void *a1)
{
  uint64_t v3 = sub_10000566C(&qword_10071B740);
  uint64_t v20 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10000566C(&qword_10071B748);
  uint64_t v6 = *(void *)(v22 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003BCDC(a1, a1[3]);
  sub_1005D361C();
  sub_1005E34E0();
  if (v1) {
    goto LABEL_5;
  }
  uint64_t v18 = a1;
  uint64_t v19 = v6;
  uint64_t v10 = v22;
  if (*(void *)(sub_1005E3110() + 16) != 1)
  {
    uint64_t v12 = v10;
    uint64_t v13 = sub_1005E2D20();
    swift_allocError();
    uint64_t v15 = v14;
    sub_10000566C(&qword_10071AFF0);
    *uint64_t v15 = &type metadata for CredentialRequest;
    uint64_t v9 = v8;
    sub_1005E3070();
    sub_1005E2D10();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v13 - 8) + 104))(v15, enum case for DecodingError.typeMismatch(_:), v13);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v12);
    a1 = v18;
LABEL_5:
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
    return v9;
  }
  sub_1005D3670();
  sub_1005E3060();
  uint64_t v11 = v19;
  sub_1005C71B4();
  sub_1005E30E0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  uint64_t v9 = v21;
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v18);
  return v9;
}

unint64_t sub_1005D3B04()
{
  unint64_t result = qword_10071B320;
  if (!qword_10071B320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B320);
  }
  return result;
}

unint64_t sub_1005D3B58()
{
  unint64_t result = qword_10071B328;
  if (!qword_10071B328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B328);
  }
  return result;
}

unint64_t sub_1005D3BAC()
{
  unint64_t result = qword_10071B340;
  if (!qword_10071B340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B340);
  }
  return result;
}

uint64_t sub_1005D3C00(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x69746E6564657263 && a2 == 0xEB00000000736C61)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1005E3290();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1005D3C98()
{
  return 0x69746E6564657263;
}

void *sub_1005D3CB8(void *a1)
{
  uint64_t v3 = sub_10000566C(&qword_10071B720);
  uint64_t v18 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000566C(&qword_10071B728);
  uint64_t v6 = *(void *)(v19 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003BCDC(a1, a1[3]);
  sub_1005D3B04();
  sub_1005E34E0();
  if (v1) {
    goto LABEL_5;
  }
  int v16 = a1;
  uint64_t v17 = v6;
  uint64_t v10 = v19;
  if (*(void *)(sub_1005E3110() + 16) != 1)
  {
    uint64_t v12 = sub_1005E2D20();
    swift_allocError();
    uint64_t v14 = v13;
    sub_10000566C(&qword_10071AFF0);
    *uint64_t v14 = &type metadata for CredentialResponse;
    uint64_t v9 = v8;
    sub_1005E3070();
    sub_1005E2D10();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v12 - 8) + 104))(v14, enum case for DecodingError.typeMismatch(_:), v12);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v10);
    a1 = v16;
LABEL_5:
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
    return v9;
  }
  sub_1005D3B58();
  sub_1005E3060();
  uint64_t v11 = v17;
  sub_10000566C(&qword_10071B330);
  sub_1005D85BC(&qword_10071B730, &qword_10071B330, (void (*)(void))sub_1005D8514);
  sub_1005E30E0();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v3);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  uint64_t v9 = v20;
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v16);
  return v9;
}

unint64_t sub_1005D407C()
{
  unint64_t result = qword_10071B368;
  if (!qword_10071B368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B368);
  }
  return result;
}

unint64_t sub_1005D40D0()
{
  unint64_t result = qword_10071B370;
  if (!qword_10071B370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B370);
  }
  return result;
}

unint64_t sub_1005D4124()
{
  unint64_t result = qword_10071B378;
  if (!qword_10071B378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B378);
  }
  return result;
}

unint64_t sub_1005D4178()
{
  unint64_t result = qword_10071B390;
  if (!qword_10071B390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B390);
  }
  return result;
}

unint64_t sub_1005D41CC()
{
  unint64_t result = qword_10071B398;
  if (!qword_10071B398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B398);
  }
  return result;
}

unint64_t sub_1005D4220()
{
  unint64_t result = qword_10071B3A0;
  if (!qword_10071B3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B3A0);
  }
  return result;
}

unint64_t sub_1005D4274()
{
  unint64_t result = qword_10071B3A8;
  if (!qword_10071B3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B3A8);
  }
  return result;
}

uint64_t sub_1005D42C8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x686372616573 && a2 == 0xE600000000000000;
  if (v3 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001005ED6B0 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001005ED6D0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1005D4408(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v3 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1005D44C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = sub_10000566C(&qword_10071B6F8);
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  __chkstk_darwin();
  uint64_t v41 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_10000566C(&qword_10071B700);
  uint64_t v40 = *(char **)(v35 - 8);
  __chkstk_darwin();
  char v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_10071B708);
  uint64_t v36 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000566C(&qword_10071B710);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v42 = a1;
  sub_10003BCDC(a1, v14);
  sub_1005D407C();
  uint64_t v15 = v43;
  sub_1005E34E0();
  if (v15) {
    return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v42);
  }
  uint64_t v34 = v7;
  uint64_t v17 = v40;
  int v16 = v41;
  uint64_t v43 = v11;
  uint64_t v18 = sub_1005E3110();
  uint64_t v19 = v18;
  if (*(void *)(v18 + 16) != 1)
  {
    uint64_t v25 = sub_1005E2D20();
    swift_allocError();
    uint64_t v27 = v26;
    sub_10000566C(&qword_10071AFF0);
    *uint64_t v27 = &type metadata for SearchRequest;
    sub_1005E3070();
    sub_1005E2D10();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, enum case for DecodingError.typeMismatch(_:), v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v10);
    return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v42);
  }
  if (*(unsigned char *)(v18 + 32))
  {
    if (*(unsigned char *)(v18 + 32) == 1)
    {
      LOBYTE(v45) = 1;
      sub_1005D41CC();
      sub_1005E3060();
      (*((void (**)(char *, uint64_t))v17 + 1))(v6, v35);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v10);
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      char v24 = 2;
    }
    else
    {
      LOBYTE(v45) = 2;
      sub_1005D40D0();
      sub_1005E3060();
      LOBYTE(v48) = 0;
      sub_1005D846C();
      uint64_t v30 = v16;
      sub_1005E30E0();
      uint64_t v36 = v19;
      uint64_t v40 = v13;
      uint64_t v20 = v45;
      uint64_t v21 = v46;
      uint64_t v22 = v47;
      sub_10000566C(&qword_10071B380);
      char v44 = 1;
      uint64_t v31 = v38;
      sub_1005D85BC(&qword_10071B6D0, &qword_10071B380, (void (*)(void))sub_1005D8310);
      sub_1005E30E0();
      uint64_t v32 = v43;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v31);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v40, v10);
      uint64_t v23 = v48;
      char v24 = 1;
    }
  }
  else
  {
    LOBYTE(v45) = 0;
    sub_1005D4220();
    sub_1005E3060();
    sub_1005D84C0();
    uint64_t v28 = v34;
    sub_1005E30E0();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v10);
    uint64_t v23 = 0;
    char v24 = 0;
    uint64_t v20 = v45;
    uint64_t v21 = v46;
    uint64_t v22 = v47;
  }
  uint64_t v33 = v39;
  uint64_t result = _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v42);
  *(void *)uint64_t v33 = v20;
  *(void *)(v33 + 8) = v21;
  *(void *)(v33 + 16) = v22;
  *(void *)(v33 + 24) = v23;
  *(unsigned char *)(v33 + 32) = v24;
  return result;
}

unint64_t sub_1005D4BF0()
{
  unint64_t result = qword_10071B3D0;
  if (!qword_10071B3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B3D0);
  }
  return result;
}

unint64_t sub_1005D4C44()
{
  unint64_t result = qword_10071B3D8;
  if (!qword_10071B3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B3D8);
  }
  return result;
}

unint64_t sub_1005D4C98()
{
  unint64_t result = qword_10071B3E0;
  if (!qword_10071B3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B3E0);
  }
  return result;
}

unint64_t sub_1005D4CEC()
{
  unint64_t result = qword_10071B3E8;
  if (!qword_10071B3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B3E8);
  }
  return result;
}

unint64_t sub_1005D4D40()
{
  unint64_t result = qword_10071B3F8;
  if (!qword_10071B3F8)
  {
    sub_10000744C(&qword_10071B3F0);
    sub_1005D4124();
    sub_1005D85BC(&qword_10071B388, &qword_10071B380, (void (*)(void))sub_1005D4178);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B3F8);
  }
  return result;
}

uint64_t sub_1005D4DF4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6552686372616573 && a2 == 0xED000073746C7573;
  if (v3 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001005ED6F0 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646564756C637865 && a2 == 0xEC00000073444955)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1005D4F64(void *a1)
{
  uint64_t v30 = sub_10000566C(&qword_10071B6B0);
  uint64_t v28 = *(void *)(v30 - 8);
  __chkstk_darwin();
  uint64_t v32 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10000566C(&qword_10071B6B8);
  uint64_t v27 = *(void *)(v31 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_10071B6C0);
  uint64_t v29 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_10071B6C8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v33 = a1;
  sub_10003BCDC(a1, v12);
  sub_1005D4BF0();
  uint64_t v13 = v35;
  sub_1005E34E0();
  if (!v13)
  {
    uint64_t v26 = v5;
    uint64_t v14 = v31;
    uint64_t v15 = v32;
    uint64_t v35 = v9;
    uint64_t v16 = sub_1005E3110();
    if (*(void *)(v16 + 16) != 1)
    {
      uint64_t v5 = sub_1005E2D20();
      swift_allocError();
      uint64_t v20 = v19;
      sub_10000566C(&qword_10071AFF0);
      *uint64_t v20 = &type metadata for SearchResponse;
      sub_1005E3070();
      sub_1005E2D10();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v5 - 8) + 104))(v20, enum case for DecodingError.typeMismatch(_:), v5);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v8);
      goto LABEL_7;
    }
    int v17 = *(unsigned __int8 *)(v16 + 32);
    v25[1] = v17;
    if (v17)
    {
      if (v17 == 1)
      {
        LOBYTE(v34) = 1;
        sub_1005D4C98();
        sub_1005E3060();
        sub_1005D8364();
        sub_1005E30E0();
        uint64_t v18 = v35;
        (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v14);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v8);
        uint64_t v5 = v34;
        goto LABEL_7;
      }
      LOBYTE(v34) = 2;
      sub_1005D4C44();
      sub_1005E3060();
      sub_10000566C(&qword_10071B380);
      sub_1005D85BC(&qword_10071B6D0, &qword_10071B380, (void (*)(void))sub_1005D8310);
      uint64_t v24 = v30;
      sub_1005E30E0();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v24);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v8);
    }
    else
    {
      LOBYTE(v34) = 0;
      sub_1005D4CEC();
      uint64_t v22 = v7;
      sub_1005E3060();
      sub_10000566C(&qword_10071B3F0);
      sub_1005D83B8();
      uint64_t v23 = v26;
      sub_1005E30E0();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v23);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v8);
    }
    uint64_t v5 = v34;
  }
LABEL_7:
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v33);
  return v5;
}

unint64_t sub_1005D560C()
{
  unint64_t result = qword_10071B400;
  if (!qword_10071B400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B400);
  }
  return result;
}

unint64_t sub_1005D5664()
{
  unint64_t result = qword_10071B408;
  if (!qword_10071B408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B408);
  }
  return result;
}

uint64_t destroy for MessageToSearchIndexer(uint64_t a1, uint64_t a2)
{
  return sub_1005D5C1C(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_1005B1D40);
}

uint64_t initializeWithCopy for MessageToSearchIndexer(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1005D5C50(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1005B21A8);
}

uint64_t *assignWithCopy for MessageToSearchIndexer(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1005D5CE8(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1005B21A8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1005B1D40);
}

__n128 initializeWithTake for SearchRequest(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for MessageToSearchIndexer(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1005D5D8C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1005B1D40);
}

uint64_t getEnumTagSinglePayload for MessageToSearchIndexer(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3E && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 62);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 32) & 0x3C | (*(unsigned __int8 *)(a1 + 32) >> 6)) ^ 0x3F;
  if (v3 >= 0x3D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for MessageToSearchIndexer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 62;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1005D57EC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 6;
}

uint64_t sub_1005D57F8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for MessageToSearchIndexer()
{
  return &type metadata for MessageToSearchIndexer;
}

uint64_t sub_1005D581C(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  int v4 = a4 >> 6;
  if (v4 == 2) {
    return swift_bridgeObjectRetain();
  }
  if (v4 == 1) {
    return sub_1005D5844(result, a2, a3, a4 & 0x3F);
  }
  return result;
}

uint64_t sub_1005D5844(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if ((a4 | 2) == 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for MessageFromSearchIndexer(uint64_t a1)
{
  return sub_1005D5870(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_1005D5870(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  int v4 = a4 >> 6;
  if (v4 == 2) {
    return swift_bridgeObjectRelease();
  }
  if (v4 == 1) {
    return sub_1005D5898(result, a2, a3, a4 & 0x3F);
  }
  return result;
}

uint64_t sub_1005D5898(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if ((a4 | 2) == 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MessageFromSearchIndexer(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1005D5E1C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1005D581C);
}

uint64_t *assignWithCopy for MessageFromSearchIndexer(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1005D5EB0(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1005D581C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005D5870);
}

__n128 initializeWithTake for SearchResponse(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t *assignWithTake for MessageFromSearchIndexer(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1005D5F48(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005D5870);
}

uint64_t getEnumTagSinglePayload for MessageFromSearchIndexer(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3D && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 61);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 24) & 0x3C | (*(unsigned __int8 *)(a1 + 24) >> 6)) ^ 0x3F;
  if (v3 >= 0x3C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for MessageFromSearchIndexer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3C)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 61;
    if (a3 >= 0x3D) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3D) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1005D59CC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24) >> 6;
}

uint64_t sub_1005D59D8(uint64_t result)
{
  *(unsigned char *)(result + 24) &= 0x3Fu;
  return result;
}

uint64_t sub_1005D59E8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = *(unsigned char *)(result + 24) & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for MessageFromSearchIndexer()
{
  return &type metadata for MessageFromSearchIndexer;
}

uint64_t _s20IMAPSearchIndexerXPC15DownloadRequestOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1005B1F04(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

__n128 initializeWithTake for DownloadRequest(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for DownloadRequest.Response()
{
  return &type metadata for DownloadRequest.Response;
}

ValueMetadata *type metadata accessor for CredentialRequest()
{
  return &type metadata for CredentialRequest;
}

void *initializeWithTake for CredentialResponse(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for CredentialResponse(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 8)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CredentialResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CredentialResponse()
{
  return &type metadata for CredentialResponse;
}

uint64_t destroy for SearchRequest(uint64_t a1, uint64_t a2)
{
  return sub_1005D5C1C(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_1005B1D80);
}

uint64_t sub_1005D5C1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void))
{
  return a3(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
}

uint64_t initializeWithCopy for SearchRequest(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1005D5C50(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1005B1DEC);
}

uint64_t sub_1005D5C50(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = *((unsigned __int8 *)a2 + 32);
  a4(*a2, v6, v7, v8, v9);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  return a1;
}

uint64_t *assignWithCopy for SearchRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1005D5CE8(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1005B1DEC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1005B1D80);
}

uint64_t *sub_1005D5CE8(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  uint64_t v11 = *((unsigned __int8 *)a2 + 32);
  a4(*a2, v8, v9, v10, v11);
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  uint64_t v15 = a1[3];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = v10;
  uint64_t v16 = *((unsigned __int8 *)a1 + 32);
  *((unsigned char *)a1 + 32) = v11;
  a5(v12, v13, v14, v15, v16);
  return a1;
}

uint64_t *assignWithTake for SearchRequest(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1005D5D8C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1005B1D80);
}

uint64_t *sub_1005D5D8C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = a1[3];
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  uint64_t v12 = *((unsigned __int8 *)a1 + 32);
  *((unsigned char *)a1 + 32) = v6;
  a4(v7, v9, v8, v10, v12);
  return a1;
}

uint64_t destroy for SearchResponse(uint64_t a1)
{
  return sub_1005D5898(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for SearchResponse(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1005D5E1C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1005D5844);
}

uint64_t sub_1005D5E1C(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = *((unsigned __int8 *)a2 + 24);
  a4(*a2, v6, v7, v8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  return a1;
}

uint64_t *assignWithCopy for SearchResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1005D5EB0(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1005D5844, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005D5898);
}

uint64_t *sub_1005D5EB0(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = *((unsigned __int8 *)a2 + 24);
  a4(*a2, v8, v9, v10);
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = a1[2];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  uint64_t v14 = *((unsigned __int8 *)a1 + 24);
  *((unsigned char *)a1 + 24) = v10;
  a5(v11, v12, v13, v14);
  return a1;
}

uint64_t *assignWithTake for SearchResponse(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1005D5F48(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005D5898);
}

uint64_t *sub_1005D5F48(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v9 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v6;
  uint64_t v11 = *((unsigned __int8 *)a1 + 24);
  *((unsigned char *)a1 + 24) = v7;
  a4(v8, v10, v9, v11);
  return a1;
}

ValueMetadata *type metadata accessor for SearchResponse()
{
  return &type metadata for SearchResponse;
}

ValueMetadata *type metadata accessor for SearchResponse.CodingKeys()
{
  return &type metadata for SearchResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchResponse.SearchResultsCodingKeys()
{
  return &type metadata for SearchResponse.SearchResultsCodingKeys;
}

ValueMetadata *type metadata accessor for SearchResponse.IndexingStatisticsCodingKeys()
{
  return &type metadata for SearchResponse.IndexingStatisticsCodingKeys;
}

ValueMetadata *type metadata accessor for SearchResponse.ExcludedUIDsCodingKeys()
{
  return &type metadata for SearchResponse.ExcludedUIDsCodingKeys;
}

ValueMetadata *type metadata accessor for SearchRequest.CodingKeys()
{
  return &type metadata for SearchRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchRequest.SearchCodingKeys()
{
  return &type metadata for SearchRequest.SearchCodingKeys;
}

ValueMetadata *type metadata accessor for SearchRequest.GetIndexingStatisticsCodingKeys()
{
  return &type metadata for SearchRequest.GetIndexingStatisticsCodingKeys;
}

ValueMetadata *type metadata accessor for SearchRequest.ExcludeIndexedUIDsCodingKeys()
{
  return &type metadata for SearchRequest.ExcludeIndexedUIDsCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialResponse.CodingKeys()
{
  return &type metadata for CredentialResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for CredentialResponse.CredentialsCodingKeys()
{
  return &type metadata for CredentialResponse.CredentialsCodingKeys;
}

ValueMetadata *type metadata accessor for CredentialRequest.CodingKeys()
{
  return &type metadata for CredentialRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for CredentialRequest.MakeCredentialsCodingKeys()
{
  return &type metadata for CredentialRequest.MakeCredentialsCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadRequest.CodingKeys()
{
  return &type metadata for DownloadRequest.CodingKeys;
}

unsigned char *_s20IMAPSearchIndexerXPC13SearchRequestO28ExcludeIndexedUIDsCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005D6158);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadRequest.StartCodingKeys()
{
  return &type metadata for DownloadRequest.StartCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadRequest.StopCodingKeys()
{
  return &type metadata for DownloadRequest.StopCodingKeys;
}

unsigned char *_s20IMAPSearchIndexerXPC15DownloadRequestO8ResponseOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005D626CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadRequest.Response.CodingKeys()
{
  return &type metadata for DownloadRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for DownloadRequest.Response.DidDeferCodingKeys()
{
  return &type metadata for DownloadRequest.Response.DidDeferCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadRequest.Response.DidNotCompleteCodingKeys()
{
  return &type metadata for DownloadRequest.Response.DidNotCompleteCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadRequest.Response.CurrentlyUnavailableCodingKeys()
{
  return &type metadata for DownloadRequest.Response.CurrentlyUnavailableCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadRequest.Response.DidCompleteCodingKeys()
{
  return &type metadata for DownloadRequest.Response.DidCompleteCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadRequest.Response.FailureCodingKeys()
{
  return &type metadata for DownloadRequest.Response.FailureCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for MessageFromSearchIndexer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005D63C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageFromSearchIndexer.CodingKeys()
{
  return &type metadata for MessageFromSearchIndexer.CodingKeys;
}

ValueMetadata *type metadata accessor for MessageFromSearchIndexer.DownloadCodingKeys()
{
  return &type metadata for MessageFromSearchIndexer.DownloadCodingKeys;
}

ValueMetadata *type metadata accessor for MessageFromSearchIndexer.SearchCodingKeys()
{
  return &type metadata for MessageFromSearchIndexer.SearchCodingKeys;
}

ValueMetadata *type metadata accessor for MessageFromSearchIndexer.CredentialsCodingKeys()
{
  return &type metadata for MessageFromSearchIndexer.CredentialsCodingKeys;
}

ValueMetadata *type metadata accessor for MessageFromSearchIndexer.IndexingStatisticsUpdateCodingKeys()
{
  return &type metadata for MessageFromSearchIndexer.IndexingStatisticsUpdateCodingKeys;
}

unsigned char *_s20IMAPSearchIndexerXPC14SearchResponseO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005D6504);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageToSearchIndexer.CodingKeys()
{
  return &type metadata for MessageToSearchIndexer.CodingKeys;
}

ValueMetadata *type metadata accessor for MessageToSearchIndexer.DownloadCodingKeys()
{
  return &type metadata for MessageToSearchIndexer.DownloadCodingKeys;
}

ValueMetadata *type metadata accessor for MessageToSearchIndexer.SearchCodingKeys()
{
  return &type metadata for MessageToSearchIndexer.SearchCodingKeys;
}

unsigned char *_s20IMAPSearchIndexerXPC14SearchResponseO23SearchResultsCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1005D65F8);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageToSearchIndexer.CredentialsCodingKeys()
{
  return &type metadata for MessageToSearchIndexer.CredentialsCodingKeys;
}

unint64_t sub_1005D6634()
{
  unint64_t result = qword_10071B410;
  if (!qword_10071B410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B410);
  }
  return result;
}

unint64_t sub_1005D668C()
{
  unint64_t result = qword_10071B418;
  if (!qword_10071B418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B418);
  }
  return result;
}

unint64_t sub_1005D66E4()
{
  unint64_t result = qword_10071B420;
  if (!qword_10071B420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B420);
  }
  return result;
}

unint64_t sub_1005D673C()
{
  unint64_t result = qword_10071B428;
  if (!qword_10071B428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B428);
  }
  return result;
}

unint64_t sub_1005D6794()
{
  unint64_t result = qword_10071B430;
  if (!qword_10071B430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B430);
  }
  return result;
}

unint64_t sub_1005D67EC()
{
  unint64_t result = qword_10071B438;
  if (!qword_10071B438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B438);
  }
  return result;
}

unint64_t sub_1005D6844()
{
  unint64_t result = qword_10071B440;
  if (!qword_10071B440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B440);
  }
  return result;
}

unint64_t sub_1005D689C()
{
  unint64_t result = qword_10071B448;
  if (!qword_10071B448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B448);
  }
  return result;
}

unint64_t sub_1005D68F4()
{
  unint64_t result = qword_10071B450;
  if (!qword_10071B450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B450);
  }
  return result;
}

unint64_t sub_1005D694C()
{
  unint64_t result = qword_10071B458;
  if (!qword_10071B458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B458);
  }
  return result;
}

unint64_t sub_1005D69A4()
{
  unint64_t result = qword_10071B460;
  if (!qword_10071B460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B460);
  }
  return result;
}

unint64_t sub_1005D69FC()
{
  unint64_t result = qword_10071B468;
  if (!qword_10071B468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B468);
  }
  return result;
}

unint64_t sub_1005D6A54()
{
  unint64_t result = qword_10071B470;
  if (!qword_10071B470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B470);
  }
  return result;
}

unint64_t sub_1005D6AAC()
{
  unint64_t result = qword_10071B478;
  if (!qword_10071B478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B478);
  }
  return result;
}

unint64_t sub_1005D6B04()
{
  unint64_t result = qword_10071B480;
  if (!qword_10071B480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B480);
  }
  return result;
}

unint64_t sub_1005D6B5C()
{
  unint64_t result = qword_10071B488;
  if (!qword_10071B488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B488);
  }
  return result;
}

unint64_t sub_1005D6BB4()
{
  unint64_t result = qword_10071B490;
  if (!qword_10071B490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B490);
  }
  return result;
}

unint64_t sub_1005D6C0C()
{
  unint64_t result = qword_10071B498;
  if (!qword_10071B498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B498);
  }
  return result;
}

unint64_t sub_1005D6C64()
{
  unint64_t result = qword_10071B4A0;
  if (!qword_10071B4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B4A0);
  }
  return result;
}

unint64_t sub_1005D6CBC()
{
  unint64_t result = qword_10071B4A8;
  if (!qword_10071B4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B4A8);
  }
  return result;
}

unint64_t sub_1005D6D14()
{
  unint64_t result = qword_10071B4B0;
  if (!qword_10071B4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B4B0);
  }
  return result;
}

unint64_t sub_1005D6D6C()
{
  unint64_t result = qword_10071B4B8;
  if (!qword_10071B4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B4B8);
  }
  return result;
}

unint64_t sub_1005D6DC4()
{
  unint64_t result = qword_10071B4C0;
  if (!qword_10071B4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B4C0);
  }
  return result;
}

unint64_t sub_1005D6E1C()
{
  unint64_t result = qword_10071B4C8;
  if (!qword_10071B4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B4C8);
  }
  return result;
}

unint64_t sub_1005D6E74()
{
  unint64_t result = qword_10071B4D0;
  if (!qword_10071B4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B4D0);
  }
  return result;
}

unint64_t sub_1005D6ECC()
{
  unint64_t result = qword_10071B4D8;
  if (!qword_10071B4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B4D8);
  }
  return result;
}

unint64_t sub_1005D6F24()
{
  unint64_t result = qword_10071B4E0;
  if (!qword_10071B4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B4E0);
  }
  return result;
}

unint64_t sub_1005D6F7C()
{
  unint64_t result = qword_10071B4E8;
  if (!qword_10071B4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B4E8);
  }
  return result;
}

unint64_t sub_1005D6FD4()
{
  unint64_t result = qword_10071B4F0;
  if (!qword_10071B4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B4F0);
  }
  return result;
}

unint64_t sub_1005D702C()
{
  unint64_t result = qword_10071B4F8;
  if (!qword_10071B4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B4F8);
  }
  return result;
}

unint64_t sub_1005D7084()
{
  unint64_t result = qword_10071B500;
  if (!qword_10071B500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B500);
  }
  return result;
}

unint64_t sub_1005D70DC()
{
  unint64_t result = qword_10071B508;
  if (!qword_10071B508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B508);
  }
  return result;
}

unint64_t sub_1005D7134()
{
  unint64_t result = qword_10071B510;
  if (!qword_10071B510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B510);
  }
  return result;
}

unint64_t sub_1005D718C()
{
  unint64_t result = qword_10071B518;
  if (!qword_10071B518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B518);
  }
  return result;
}

unint64_t sub_1005D71E4()
{
  unint64_t result = qword_10071B520;
  if (!qword_10071B520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B520);
  }
  return result;
}

unint64_t sub_1005D723C()
{
  unint64_t result = qword_10071B528;
  if (!qword_10071B528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B528);
  }
  return result;
}

unint64_t sub_1005D7294()
{
  unint64_t result = qword_10071B530;
  if (!qword_10071B530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B530);
  }
  return result;
}

unint64_t sub_1005D72EC()
{
  unint64_t result = qword_10071B538;
  if (!qword_10071B538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B538);
  }
  return result;
}

unint64_t sub_1005D7344()
{
  unint64_t result = qword_10071B540;
  if (!qword_10071B540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B540);
  }
  return result;
}

unint64_t sub_1005D739C()
{
  unint64_t result = qword_10071B548;
  if (!qword_10071B548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B548);
  }
  return result;
}

unint64_t sub_1005D73F4()
{
  unint64_t result = qword_10071B550;
  if (!qword_10071B550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B550);
  }
  return result;
}

unint64_t sub_1005D744C()
{
  unint64_t result = qword_10071B558;
  if (!qword_10071B558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B558);
  }
  return result;
}

unint64_t sub_1005D74A4()
{
  unint64_t result = qword_10071B560;
  if (!qword_10071B560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B560);
  }
  return result;
}

unint64_t sub_1005D74FC()
{
  unint64_t result = qword_10071B568;
  if (!qword_10071B568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B568);
  }
  return result;
}

unint64_t sub_1005D7554()
{
  unint64_t result = qword_10071B570;
  if (!qword_10071B570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B570);
  }
  return result;
}

unint64_t sub_1005D75AC()
{
  unint64_t result = qword_10071B578;
  if (!qword_10071B578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B578);
  }
  return result;
}

unint64_t sub_1005D7604()
{
  unint64_t result = qword_10071B580;
  if (!qword_10071B580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B580);
  }
  return result;
}

unint64_t sub_1005D765C()
{
  unint64_t result = qword_10071B588;
  if (!qword_10071B588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B588);
  }
  return result;
}

unint64_t sub_1005D76B4()
{
  unint64_t result = qword_10071B590;
  if (!qword_10071B590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B590);
  }
  return result;
}

unint64_t sub_1005D770C()
{
  unint64_t result = qword_10071B598;
  if (!qword_10071B598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B598);
  }
  return result;
}

unint64_t sub_1005D7764()
{
  unint64_t result = qword_10071B5A0;
  if (!qword_10071B5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B5A0);
  }
  return result;
}

unint64_t sub_1005D77BC()
{
  unint64_t result = qword_10071B5A8;
  if (!qword_10071B5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B5A8);
  }
  return result;
}

unint64_t sub_1005D7814()
{
  unint64_t result = qword_10071B5B0;
  if (!qword_10071B5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B5B0);
  }
  return result;
}

unint64_t sub_1005D786C()
{
  unint64_t result = qword_10071B5B8;
  if (!qword_10071B5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B5B8);
  }
  return result;
}

unint64_t sub_1005D78C4()
{
  unint64_t result = qword_10071B5C0;
  if (!qword_10071B5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B5C0);
  }
  return result;
}

unint64_t sub_1005D791C()
{
  unint64_t result = qword_10071B5C8;
  if (!qword_10071B5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B5C8);
  }
  return result;
}

unint64_t sub_1005D7974()
{
  unint64_t result = qword_10071B5D0;
  if (!qword_10071B5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B5D0);
  }
  return result;
}

unint64_t sub_1005D79CC()
{
  unint64_t result = qword_10071B5D8;
  if (!qword_10071B5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B5D8);
  }
  return result;
}

unint64_t sub_1005D7A24()
{
  unint64_t result = qword_10071B5E0;
  if (!qword_10071B5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B5E0);
  }
  return result;
}

unint64_t sub_1005D7A7C()
{
  unint64_t result = qword_10071B5E8;
  if (!qword_10071B5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B5E8);
  }
  return result;
}

unint64_t sub_1005D7AD4()
{
  unint64_t result = qword_10071B5F0;
  if (!qword_10071B5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B5F0);
  }
  return result;
}

unint64_t sub_1005D7B2C()
{
  unint64_t result = qword_10071B5F8;
  if (!qword_10071B5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B5F8);
  }
  return result;
}

unint64_t sub_1005D7B84()
{
  unint64_t result = qword_10071B600;
  if (!qword_10071B600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B600);
  }
  return result;
}

unint64_t sub_1005D7BDC()
{
  unint64_t result = qword_10071B608;
  if (!qword_10071B608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B608);
  }
  return result;
}

unint64_t sub_1005D7C34()
{
  unint64_t result = qword_10071B610;
  if (!qword_10071B610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B610);
  }
  return result;
}

unint64_t sub_1005D7C8C()
{
  unint64_t result = qword_10071B618;
  if (!qword_10071B618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B618);
  }
  return result;
}

unint64_t sub_1005D7CE4()
{
  unint64_t result = qword_10071B620;
  if (!qword_10071B620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B620);
  }
  return result;
}

unint64_t sub_1005D7D3C()
{
  unint64_t result = qword_10071B628;
  if (!qword_10071B628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B628);
  }
  return result;
}

unint64_t sub_1005D7D94()
{
  unint64_t result = qword_10071B630;
  if (!qword_10071B630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B630);
  }
  return result;
}

unint64_t sub_1005D7DEC()
{
  unint64_t result = qword_10071B638;
  if (!qword_10071B638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B638);
  }
  return result;
}

unint64_t sub_1005D7E44()
{
  unint64_t result = qword_10071B640;
  if (!qword_10071B640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B640);
  }
  return result;
}

unint64_t sub_1005D7E9C()
{
  unint64_t result = qword_10071B648;
  if (!qword_10071B648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B648);
  }
  return result;
}

unint64_t sub_1005D7EF4()
{
  unint64_t result = qword_10071B650;
  if (!qword_10071B650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B650);
  }
  return result;
}

unint64_t sub_1005D7F4C()
{
  unint64_t result = qword_10071B658;
  if (!qword_10071B658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B658);
  }
  return result;
}

unint64_t sub_1005D7FA4()
{
  unint64_t result = qword_10071B660;
  if (!qword_10071B660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B660);
  }
  return result;
}

unint64_t sub_1005D7FFC()
{
  unint64_t result = qword_10071B668;
  if (!qword_10071B668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B668);
  }
  return result;
}

unint64_t sub_1005D8054()
{
  unint64_t result = qword_10071B670;
  if (!qword_10071B670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B670);
  }
  return result;
}

unint64_t sub_1005D80AC()
{
  unint64_t result = qword_10071B678;
  if (!qword_10071B678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B678);
  }
  return result;
}

unint64_t sub_1005D8104()
{
  unint64_t result = qword_10071B680;
  if (!qword_10071B680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B680);
  }
  return result;
}

unint64_t sub_1005D815C()
{
  unint64_t result = qword_10071B688;
  if (!qword_10071B688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B688);
  }
  return result;
}

unint64_t sub_1005D81B4()
{
  unint64_t result = qword_10071B690;
  if (!qword_10071B690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B690);
  }
  return result;
}

unint64_t sub_1005D820C()
{
  unint64_t result = qword_10071B698;
  if (!qword_10071B698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B698);
  }
  return result;
}

unint64_t sub_1005D8264()
{
  unint64_t result = qword_10071B6A0;
  if (!qword_10071B6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B6A0);
  }
  return result;
}

unint64_t sub_1005D82BC()
{
  unint64_t result = qword_10071B6A8;
  if (!qword_10071B6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B6A8);
  }
  return result;
}

unint64_t sub_1005D8310()
{
  unint64_t result = qword_10071B6D8;
  if (!qword_10071B6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B6D8);
  }
  return result;
}

unint64_t sub_1005D8364()
{
  unint64_t result = qword_10071B6E0;
  if (!qword_10071B6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B6E0);
  }
  return result;
}

unint64_t sub_1005D83B8()
{
  unint64_t result = qword_10071B6E8;
  if (!qword_10071B6E8)
  {
    sub_10000744C(&qword_10071B3F0);
    sub_1005D846C();
    sub_1005D85BC(&qword_10071B6D0, &qword_10071B380, (void (*)(void))sub_1005D8310);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B6E8);
  }
  return result;
}

unint64_t sub_1005D846C()
{
  unint64_t result = qword_10071B6F0;
  if (!qword_10071B6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B6F0);
  }
  return result;
}

unint64_t sub_1005D84C0()
{
  unint64_t result = qword_10071B718;
  if (!qword_10071B718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B718);
  }
  return result;
}

unint64_t sub_1005D8514()
{
  unint64_t result = qword_10071B738;
  if (!qword_10071B738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B738);
  }
  return result;
}

unint64_t sub_1005D8568()
{
  unint64_t result = qword_10071B768;
  if (!qword_10071B768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B768);
  }
  return result;
}

uint64_t sub_1005D85BC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000744C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1005D8628()
{
  unint64_t result = qword_10071B778;
  if (!qword_10071B778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B778);
  }
  return result;
}

uint64_t sub_1005D867C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10071B7B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1005D86E4()
{
  unint64_t result = qword_10071B7E0;
  if (!qword_10071B7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B7E0);
  }
  return result;
}

unint64_t sub_1005D8738()
{
  unint64_t result = qword_10071B7E8;
  if (!qword_10071B7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B7E8);
  }
  return result;
}

unint64_t sub_1005D878C()
{
  unint64_t result = qword_10071B7F0;
  if (!qword_10071B7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B7F0);
  }
  return result;
}

unint64_t sub_1005D87E0()
{
  unint64_t result = qword_10071B818;
  if (!qword_10071B818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B818);
  }
  return result;
}

unint64_t sub_1005D8834()
{
  unint64_t result = qword_10071B820;
  if (!qword_10071B820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B820);
  }
  return result;
}

unint64_t sub_1005D8888()
{
  unint64_t result = qword_10071B828;
  if (!qword_10071B828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B828);
  }
  return result;
}

void *sub_1005D88DC(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1005D8930(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
      sub_1000094D4(result, a2);
      unint64_t result = a3;
      a2 = a4;
      goto LABEL_4;
    case 1uLL:
      unint64_t v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_1000094D4(result, a2);
      sub_1000094D4(a3, a4);
      sub_1000094D4(a5, a6);
      sub_1000094D4(a7, v15);
      unint64_t result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_4;
    case 2uLL:
LABEL_4:
      unint64_t result = sub_1000094D4(result, a2);
      break;
    case 3uLL:
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

id *sub_1005D8A6C(id *a1)
{
  id v2 = *a1;
  return a1;
}

id *sub_1005D8A98(id *a1)
{
  return a1;
}

uint64_t sub_1005D8AC4(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

void *SearchIndexerXPC.serviceName.unsafeMutableAddressor()
{
  return &static SearchIndexerXPC.serviceName;
}

unint64_t static SearchIndexerXPC.serviceName.getter()
{
  return 0xD00000000000001DLL;
}

ValueMetadata *type metadata accessor for SearchIndexerXPC()
{
  return &type metadata for SearchIndexerXPC;
}

uint64_t sub_1005D8B48()
{
  uint64_t v0 = sub_1005E0ED0();
  sub_10034E5B4(v0, qword_10071B830);
  sub_1003461B0(v0, (uint64_t)qword_10071B830);
  return sub_1005E0EC0();
}

uint64_t SearchSession.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  SearchSession.init()();
  return v0;
}

uint64_t SearchSession.init()()
{
  sub_1005E0F00();
  __chkstk_darwin();
  sub_1005E0F70();
  sub_10000566C(&qword_10071B848);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1005F6670;
  sub_1005E0EF0();
  sub_1005D8DF4();
  sub_10000566C(&qword_10071B858);
  sub_1005D8E4C();
  sub_1005E2AD0();
  uint64_t v2 = sub_1005E0EE0();
  if (v1) {
    swift_deallocPartialClassInstance();
  }
  else {
    *(void *)(v0 + 16) = v2;
  }
  return v0;
}

unint64_t sub_1005D8DF4()
{
  unint64_t result = qword_10071B850;
  if (!qword_10071B850)
  {
    sub_1005E0F00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B850);
  }
  return result;
}

unint64_t sub_1005D8E4C()
{
  unint64_t result = qword_10071B860;
  if (!qword_10071B860)
  {
    sub_10000744C(&qword_10071B858);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B860);
  }
  return result;
}

uint64_t SearchSession.deinit()
{
  sub_1005E0F50();
  swift_release();
  return v0;
}

uint64_t SearchSession.__deallocating_deinit()
{
  sub_1005E0F50();
  swift_release();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SearchSession.activate()()
{
}

Swift::Void __swiftcall SearchSession.cancel(reason:)(Swift::String reason)
{
  if (qword_10071ADC8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1005E0ED0();
  sub_1003461B0(v1, (uint64_t)qword_10071B830);
  uint64_t v2 = sub_1005E0EB0();
  os_log_type_t v3 = sub_1005E25C0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "cancel", v4, 2u);
    swift_slowDealloc();
  }

  sub_1005E0F50();
}

uint64_t SearchSession.perform(query:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_10071ADC8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1005E0ED0();
  sub_1003461B0(v10, (uint64_t)qword_10071B830);
  id v11 = a1;
  swift_bridgeObjectRetain_n();
  id v12 = v11;
  uint64_t v13 = sub_1005E0EB0();
  os_log_type_t v14 = sub_1005E25C0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v22 = a2;
    unint64_t v15 = (uint8_t *)swift_slowAlloc();
    v23[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v15 = 136315138;
    uint64_t v16 = SearchQuery.debugDescription.getter();
    sub_1005DADA4(v16, v17, v23);
    sub_1005E2960();
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Sending search %s to SearchIndexer.", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a2 = v22;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = v12;
  _OWORD v18[3] = a2;
  void v18[4] = a3;
  v18[5] = a4;
  void v18[6] = a5;
  v23[0] = (uint64_t)v12;
  v23[1] = a2;
  v23[2] = a3;
  void v23[3] = 0;
  char v24 = 64;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1005DAD68;
  *(void *)(v19 + 24) = v18;
  sub_1005D20B8();
  sub_1005D210C();
  id v20 = v12;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1005E0F30();
  swift_release();
  return swift_release();
}

uint64_t sub_1005D94B4(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, char *a5, uint64_t a6, uint64_t a7, void (*a8)(void))
{
  LOBYTE(v9) = a4;
  if ((a4 & 0x100) != 0)
  {
    swift_errorRetain();
    if (qword_10071ADC8 == -1)
    {
LABEL_32:
      uint64_t v34 = sub_1005E0ED0();
      sub_1003461B0(v34, (uint64_t)qword_10071B830);
      sub_1005DB6FC(a1, a2, a3, v9, 1);
      uint64_t v35 = a5;
      swift_bridgeObjectRetain();
      sub_1005DB6FC(a1, a2, a3, v9, 1);
      uint64_t v36 = v35;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1005E0EB0();
      os_log_type_t v38 = sub_1005E25A0();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = swift_slowAlloc();
        char v50 = (void *)swift_slowAlloc();
        uint64_t v53 = swift_slowAlloc();
        *(_DWORD *)uint64_t v39 = 136315394;
        uint64_t v40 = SearchQuery.debugDescription.getter();
        sub_1005DADA4(v40, v41, &v53);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();

        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 12) = 2112;
        uint64_t v52 = sub_1005E06E0();
        sub_1005E2960();
        *char v50 = v52;
        sub_1005DB4C4(a1, a2, a3, v9, 1);
        sub_1005DB4C4(a1, a2, a3, v9, 1);
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Search %s failed: %@", (uint8_t *)v39, 0x16u);
        sub_10000566C(&qword_10071B868);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();

        sub_1005DB4C4(a1, a2, a3, v9, 1);
        sub_1005DB4C4(a1, a2, a3, v9, 1);
      }

      sub_1005D9D60((uint64_t)_swiftEmptyArrayStorage);
      a8();
      swift_bridgeObjectRelease();
      return sub_1005DB4C4(a1, a2, a3, v9, 1);
    }
LABEL_47:
    swift_once();
    goto LABEL_32;
  }
  if (a4 == 64)
  {
    if (qword_10071ADC8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1005E0ED0();
    sub_1003461B0(v13, (uint64_t)qword_10071B830);
    os_log_type_t v14 = a5;
    swift_bridgeObjectRetain();
    sub_1005DB6FC(a1, a2, a3, 0x40u, 0);
    unint64_t v15 = v14;
    swift_bridgeObjectRetain();
    sub_1005DB6FC(a1, a2, a3, 0x40u, 0);
    uint64_t v16 = sub_1005E0EB0();
    os_log_type_t v17 = sub_1005E25C0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315394;
      uint64_t v18 = SearchQuery.debugDescription.getter();
      sub_1005DADA4(v18, v19, &v53);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();

      uint64_t result = swift_bridgeObjectRelease();
      int64_t v21 = 0;
      a5 = 0;
      *(_WORD *)(v9 + 12) = 2048;
      uint64_t v22 = a1 + 64;
      uint64_t v23 = 1 << *(unsigned char *)(a1 + 32);
      if (v23 < 64) {
        uint64_t v24 = ~(-1 << v23);
      }
      else {
        uint64_t v24 = -1;
      }
      unint64_t v25 = v24 & *(void *)(a1 + 64);
      int64_t v26 = (unint64_t)(v23 + 63) >> 6;
      do
      {
        if (v25)
        {
          unint64_t v27 = __clz(__rbit64(v25));
          v25 &= v25 - 1;
          unint64_t v28 = v27 | (v21 << 6);
        }
        else
        {
          int64_t v31 = v21 + 1;
          if (__OFADD__(v21, 1)) {
            goto LABEL_46;
          }
          if (v31 >= v26)
          {
LABEL_43:
            swift_release();
            sub_1005E2960();
            sub_1005DB4C4(a1, a2, a3, 0x40u, 0);
            _os_log_impl((void *)&_mh_execute_header, v16, v17, "Received response for search %s with %ld) results.", (uint8_t *)v9, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            goto LABEL_44;
          }
          unint64_t v32 = *(void *)(v22 + 8 * v31);
          ++v21;
          if (!v32)
          {
            int64_t v21 = v31 + 1;
            if (v31 + 1 >= v26) {
              goto LABEL_43;
            }
            unint64_t v32 = *(void *)(v22 + 8 * v21);
            if (!v32)
            {
              int64_t v21 = v31 + 2;
              if (v31 + 2 >= v26) {
                goto LABEL_43;
              }
              unint64_t v32 = *(void *)(v22 + 8 * v21);
              if (!v32)
              {
                int64_t v21 = v31 + 3;
                if (v31 + 3 >= v26) {
                  goto LABEL_43;
                }
                unint64_t v32 = *(void *)(v22 + 8 * v21);
                if (!v32)
                {
                  int64_t v21 = v31 + 4;
                  if (v31 + 4 >= v26) {
                    goto LABEL_43;
                  }
                  unint64_t v32 = *(void *)(v22 + 8 * v21);
                  if (!v32)
                  {
                    int64_t v33 = v31 + 5;
                    if (v33 >= v26) {
                      goto LABEL_43;
                    }
                    unint64_t v32 = *(void *)(v22 + 8 * v33);
                    if (!v32)
                    {
                      while (1)
                      {
                        int64_t v21 = v33 + 1;
                        if (__OFADD__(v33, 1)) {
                          break;
                        }
                        if (v21 >= v26) {
                          goto LABEL_43;
                        }
                        unint64_t v32 = *(void *)(v22 + 8 * v21);
                        ++v33;
                        if (v32) {
                          goto LABEL_30;
                        }
                      }
                      __break(1u);
                      return result;
                    }
                    int64_t v21 = v33;
                  }
                }
              }
            }
          }
LABEL_30:
          unint64_t v25 = (v32 - 1) & v32;
          unint64_t v28 = __clz(__rbit64(v32)) + (v21 << 6);
        }
        uint64_t v29 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8 * v28) + 16);
        BOOL v30 = __OFADD__(a5, v29);
        a5 += v29;
      }
      while (!v30);
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    sub_1005DB4C4(a1, a2, a3, 0x40u, 0);
    swift_bridgeObjectRelease_n();

    sub_1005DB4C4(a1, a2, a3, 0x40u, 0);
LABEL_44:

    return ((uint64_t (*)(uint64_t))a8)(a1);
  }
  else
  {
    if (qword_10071ADC8 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1005E0ED0();
    sub_1003461B0(v42, (uint64_t)qword_10071B830);
    uint64_t v43 = a5;
    swift_bridgeObjectRetain_n();
    char v44 = v43;
    uint64_t v45 = sub_1005E0EB0();
    os_log_type_t v46 = sub_1005E25A0();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136315138;
      uint64_t v48 = SearchQuery.debugDescription.getter();
      sub_1005DADA4(v48, v49, &v53);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Invalid response for %s", v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1005D9D60((uint64_t)_swiftEmptyArrayStorage);
    a8();
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_1005D9D60(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000566C(&qword_10071B920);
  uint64_t v2 = (void *)sub_1005E2FF0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    unsigned int v6 = (unsigned __int8 *)*(v4 - 2);
    uint64_t v8 = (unsigned __int8 *)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1005DB4D0(v5, v6, v8);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v11 = (uint64_t *)(v2[6] + 24 * result);
    *id v11 = v5;
    v11[1] = (uint64_t)v6;
    void v11[2] = (uint64_t)v8;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 4;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t SearchSession.getIndexingStatistics(_:)(uint64_t a1, uint64_t a2)
{
  if (qword_10071ADC8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1005E0ED0();
  sub_1003461B0(v4, (uint64_t)qword_10071B830);
  uint64_t v5 = sub_1005E0EB0();
  os_log_type_t v6 = sub_1005E25C0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Sending request for indexing statistics to SearchIndexer.", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1005DB3FC;
  *(void *)(v9 + 24) = v8;
  sub_1005D20B8();
  sub_1005D210C();
  swift_retain();
  swift_retain();
  sub_1005E0F30();
  swift_release();
  return swift_release();
}

uint64_t sub_1005DA1BC(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, void (*a5)(void, void, void))
{
  unsigned __int8 v6 = a4;
  if ((a4 & 0x100) != 0)
  {
    swift_errorRetain();
    if (qword_10071ADC8 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1005E0ED0();
    sub_1003461B0(v17, (uint64_t)qword_10071B830);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v18 = sub_1005E0EB0();
    os_log_type_t v19 = sub_1005E25A0();
    if (os_log_type_enabled(v18, v19))
    {
      unint64_t v27 = a5;
      id v20 = (uint8_t *)swift_slowAlloc();
      int64_t v26 = (void *)swift_slowAlloc();
      *(_DWORD *)id v20 = 138412290;
      swift_errorRetain();
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      sub_1005E2960();
      *int64_t v26 = v28;
      sub_1005DB4C4(a1, a2, a3, v6, 1);
      sub_1005DB4C4(a1, a2, a3, v6, 1);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Requesting statistics failed with error %@", v20, 0xCu);
      sub_10000566C(&qword_10071B868);
      swift_arrayDestroy();
      swift_slowDealloc();
      a5 = v27;
      swift_slowDealloc();
    }
    else
    {
      sub_1005DB4C4(a1, a2, a3, v6, 1);
      sub_1005DB4C4(a1, a2, a3, v6, 1);
    }

    a5(0, 0, 0);
    return sub_1005DB4C4(a1, a2, a3, v6, 1);
  }
  else
  {
    if (a4 == 65)
    {
      if (qword_10071ADC8 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1005E0ED0();
      sub_1003461B0(v10, (uint64_t)qword_10071B830);
      id v11 = sub_1005E0EB0();
      os_log_type_t v12 = sub_1005E25C0();
      if (os_log_type_enabled(v11, v12))
      {
        BOOL v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)BOOL v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "Received a response when requesting statistics", v13, 2u);
        swift_slowDealloc();
      }

      uint64_t v14 = a1;
      uint64_t v15 = a2;
      uint64_t v16 = a3;
    }
    else
    {
      if (qword_10071ADC8 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_1005E0ED0();
      sub_1003461B0(v21, (uint64_t)qword_10071B830);
      uint64_t v22 = sub_1005E0EB0();
      os_log_type_t v23 = sub_1005E25A0();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Invalid response when requesting statistics", v24, 2u);
        swift_slowDealloc();
      }

      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
    }
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))a5)(v14, v15, v16);
  }
}

uint64_t SearchSession.excludeIndexedUIDs(in:from:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (qword_10071ADC8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1005E0ED0();
  sub_1003461B0(v9, (uint64_t)qword_10071B830);
  uint64_t v10 = sub_1005E0EB0();
  os_log_type_t v11 = sub_1005E25C0();
  if (os_log_type_enabled(v10, v11))
  {
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Sending request to exclude indexed UIDs to SearchIndexer.", v12, 2u);
    swift_slowDealloc();
  }

  BOOL v13 = (void *)swift_allocObject();
  long long v13[2] = a5;
  v13[3] = a6;
  void v13[4] = a4;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1005DB450;
  *(void *)(v14 + 24) = v13;
  sub_1005D20B8();
  sub_1005D210C();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1005E0F30();
  swift_release();
  return swift_release();
}

uint64_t sub_1005DA92C(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, void (*a5)(void), uint64_t a6, uint64_t a7)
{
  unsigned __int8 v9 = a4;
  if ((a4 & 0x100) != 0)
  {
    swift_errorRetain();
    if (qword_10071ADC8 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1005E0ED0();
    sub_1003461B0(v18, (uint64_t)qword_10071B830);
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v19 = sub_1005E0EB0();
    os_log_type_t v20 = sub_1005E25A0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v28 = a5;
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      unint64_t v27 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412290;
      swift_errorRetain();
      uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
      sub_1005E2960();
      *unint64_t v27 = v29;
      sub_1005DB4C4(a1, a2, a3, v9, 1);
      sub_1005DB4C4(a1, a2, a3, v9, 1);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Request to exclude indexed UIDs failed with error %@", v21, 0xCu);
      sub_10000566C(&qword_10071B868);
      swift_arrayDestroy();
      swift_slowDealloc();
      a5 = v28;
      swift_slowDealloc();
    }
    else
    {
      sub_1005DB4C4(a1, a2, a3, v9, 1);
      sub_1005DB4C4(a1, a2, a3, v9, 1);
    }

    a5(a7);
    return sub_1005DB4C4(a1, a2, a3, v9, 1);
  }
  else
  {
    if (a4 == 66)
    {
      if (qword_10071ADC8 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_1005E0ED0();
      sub_1003461B0(v11, (uint64_t)qword_10071B830);
      os_log_type_t v12 = sub_1005E0EB0();
      os_log_type_t v13 = sub_1005E25C0();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Received a response when requesting to exclude indexed UIDs", v14, 2u);
        swift_slowDealloc();
      }

      uint64_t v15 = a1;
    }
    else
    {
      if (qword_10071ADC8 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_1005E0ED0();
      sub_1003461B0(v22, (uint64_t)qword_10071B830);
      os_log_type_t v23 = sub_1005E0EB0();
      os_log_type_t v24 = sub_1005E25A0();
      if (os_log_type_enabled(v23, v24))
      {
        unint64_t v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Invalid response when requesting to exclude indexed UIDs", v25, 2u);
        swift_slowDealloc();
      }

      uint64_t v15 = a7;
    }
    return ((uint64_t (*)(uint64_t))a5)(v15);
  }
}

uint64_t sub_1005DAD20()
{
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1005DAD68(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  return sub_1005D94B4(a1, a2, a3, a4 & 0x1FF, *(char **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void (**)(void))(v4 + 40));
}

uint64_t sub_1005DAD9C(uint64_t a1)
{
  return sub_1005CD1AC(a1, *(uint64_t (**)(void, void, void, void))(v1 + 16));
}

uint64_t sub_1005DADA4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1005DAE78(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1000D65AC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000D65AC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1005DAE78(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1005E2970();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1005DB034(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1005E2D30();
  if (!v8)
  {
    sub_1005E2F10();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1005E3000();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1005DB034(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_1005DB0CC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1005DB2AC(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1005DB2AC(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_1005DB0CC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1005DB244(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1005E2C90();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1005E2F10();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1005E1E80();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    sub_1005E3000();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1005E2F10();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1005DB244(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000566C(&qword_10071B918);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  long long v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1005DB2AC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10071B918);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  os_log_type_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1005DB3FC(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  return sub_1005DA1BC(a1, a2, a3, a4 & 0x1FF, *(void (**)(void, void, void))(v4 + 16));
}

uint64_t sub_1005DB410()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005DB450(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  return sub_1005DA92C(a1, a2, a3, a4 & 0x1FF, *(void (**)(void))(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32));
}

uint64_t sub_1005DB468()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t type metadata accessor for SearchSession()
{
  return self;
}

uint64_t sub_1005DB4C4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, char a5)
{
  if (a5) {
    return swift_errorRelease();
  }
  else {
    return sub_1005D5870(a1, a2, a3, a4);
  }
}

unint64_t sub_1005DB4D0(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  sub_1005E33F0();
  Swift::UInt v6 = *(void *)(a1 + 16);
  sub_1005E3410(v6);
  if (v6)
  {
    int64_t v7 = (Swift::UInt8 *)(a1 + 32);
    do
    {
      Swift::UInt8 v8 = *v7++;
      sub_1005E3420(v8);
      --v6;
    }
    while (v6);
  }
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  Swift::Int v9 = sub_1005E3470();
  return sub_1005DB59C(a1, a2, a3, v9);
}

unint64_t sub_1005DB59C(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v11 = ~v6;
    uint64_t v12 = *(void *)(a1 + 16);
    uint64_t v13 = *(void *)(v4 + 48);
    unint64_t v25 = (unsigned __int8 *)(a1 + 34);
    do
    {
      uint64_t v14 = (unsigned __int8 **)(v13 + 24 * v7);
      uint64_t v15 = *v14;
      if (*((void *)*v14 + 2) == v12)
      {
        uint64_t v16 = v14[1];
        uint64_t v17 = v14[2];
        if (v12 && v15 != (unsigned __int8 *)a1)
        {
          if (v15[32] != *(unsigned __int8 *)(a1 + 32)) {
            goto LABEL_4;
          }
          if (v12 != 1)
          {
            if (v15[33] != *(unsigned __int8 *)(a1 + 33)) {
              goto LABEL_4;
            }
            uint64_t v18 = v15 + 34;
            uint64_t v19 = v12 - 2;
            os_log_type_t v20 = v25;
            while (v19)
            {
              int v22 = *v18++;
              int v21 = v22;
              int v23 = *v20++;
              --v19;
              if (v21 != v23) {
                goto LABEL_4;
              }
            }
          }
        }
        if (v16 == a2 && v17 == a3 || (sub_1005E3290() & 1) != 0) {
          return v7;
        }
      }
LABEL_4:
      unint64_t v7 = (v7 + 1) & v11;
    }
    while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

uint64_t sub_1005DB6FC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, char a5)
{
  if (a5) {
    return swift_errorRetain();
  }
  else {
    return sub_1005D581C(a1, a2, a3, a4);
  }
}

uint64_t sub_1005DB720(void **a1, void **a2)
{
  return _s20IMAPSearchIndexerXPC10SuggestionV2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t Suggestion.init(from:)(void *a1)
{
  return sub_1005DBDB8(a1);
}

uint64_t Suggestion.encode(to:)(void *a1, uint64_t a2)
{
  id v4 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
  [v4 setOutputFormat:200];
  NSString v5 = sub_1005E1BD0();
  [v4 encodeObject:a2 forKey:v5];

  id v6 = [v4 encodedData];
  uint64_t v7 = sub_1005E08A0();
  unint64_t v9 = v8;

  sub_10003BCDC(a1, a1[3]);
  sub_1005E34F0();
  sub_100057374((uint64_t)v11, v12);
  sub_1005C9AE4();
  sub_1005E32E0();

  sub_1000094D4(v7, v9);
  return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v11);
}

uint64_t sub_1005DB894@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1005DBDB8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1005DB8C0(void *a1)
{
  return Suggestion.encode(to:)(a1, *v1);
}

uint64_t SearchQuery.id.getter(void *a1)
{
  id v1 = a1;
  id v2 = [v1 uniqueIdentifier];
  uint64_t v3 = sub_1005E1C00();

  return v3;
}

IMAPSearchIndexerXPC::Suggestion::ID __swiftcall Suggestion.ID.init(_:)(CSSuggestion a1)
{
  id v2 = [(objc_class *)a1.super.isa uniqueIdentifier];
  uint64_t v3 = sub_1005E1C00();
  NSString v5 = v4;

  uint64_t v6 = v3;
  uint64_t v7 = v5;
  result.underlying._object = v7;
  result.underlying._countAndFlagsBits = v6;
  return result;
}

void sub_1005DB998(uint64_t *a1@<X8>)
{
  id v3 = *v1;
  id v4 = [v3 uniqueIdentifier];
  uint64_t v5 = sub_1005E1C00();
  uint64_t v7 = v6;

  *a1 = v5;
  a1[1] = v7;
}

uint64_t _s20IMAPSearchIndexerXPC10SuggestionV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  id v3 = [a1 uniqueIdentifier];
  uint64_t v4 = sub_1005E1C00();
  uint64_t v6 = v5;

  id v7 = [a2 uniqueIdentifier];
  uint64_t v8 = sub_1005E1C00();
  uint64_t v10 = v9;

  if (v4 == v8 && v6 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1005E3290();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

id sub_1005DBCF8()
{
  Class isa = sub_1005E0890().super.isa;
  id v6 = 0;
  id v2 = [v0 initForReadingFromData:isa error:&v6];

  if (v2)
  {
    id v3 = v6;
  }
  else
  {
    id v4 = v6;
    sub_1005E06F0();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1005DBDB8(void *a1)
{
  sub_10003BCDC(a1, a1[3]);
  sub_1005E34D0();
  if (!v1)
  {
    sub_10003BCDC(v10, v10[3]);
    sub_1005CBE88();
    sub_1005E32C0();
    id v4 = objc_allocWithZone((Class)NSKeyedUnarchiver);
    sub_100008D24(v8, v9);
    id v5 = sub_1005DBCF8();
    sub_1000094D4(v8, v9);
    [v5 setRequiresSecureCoding:1];
    sub_1005DC0E8();
    uint64_t v7 = sub_1005E2820();
    if (v7)
    {
      uint64_t v2 = v7;

      sub_1000094D4(v8, v9);
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v10);
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
      return v2;
    }
    sub_1005DC128();
    swift_allocError();
    swift_willThrow();

    sub_1000094D4(v8, v9);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v10);
  }
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
  return v2;
}

uint64_t sub_1005DBF58()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005DBF90()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1005DBFB8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1005DC01C()
{
  unint64_t result = qword_10071B928;
  if (!qword_10071B928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B928);
  }
  return result;
}

unint64_t sub_1005DC074()
{
  unint64_t result = qword_10071B930;
  if (!qword_10071B930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B930);
  }
  return result;
}

ValueMetadata *type metadata accessor for Suggestion()
{
  return &type metadata for Suggestion;
}

ValueMetadata *type metadata accessor for Suggestion.ID()
{
  return &type metadata for Suggestion.ID;
}

unint64_t sub_1005DC0E8()
{
  unint64_t result = qword_10071B938;
  if (!qword_10071B938)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10071B938);
  }
  return result;
}

unint64_t sub_1005DC128()
{
  unint64_t result = qword_10071B940;
  if (!qword_10071B940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B940);
  }
  return result;
}

ValueMetadata *type metadata accessor for Suggestion.WrongObject()
{
  return &type metadata for Suggestion.WrongObject;
}

uint64_t sub_1005DC18C()
{
  uint64_t v0 = sub_1005E0ED0();
  sub_10034E5B4(v0, qword_10071B948);
  sub_1003461B0(v0, (uint64_t)qword_10071B948);
  return sub_1005E0EC0();
}

uint64_t sub_1005DC214()
{
  sub_10000566C(&qword_10071BA30);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = 1;
  qword_10071B960 = result;
  return result;
}

uint64_t *SyncSession.__allocating_init(generateCredentials:updateIndexingStatistics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = a2;
  uint64_t v16 = a1;
  uint64_t v26 = a4;
  uint64_t v17 = a3;
  uint64_t v23 = sub_1005E0F00();
  uint64_t v20 = *(void *)(v23 - 8);
  uint64_t v21 = v20;
  __chkstk_darwin();
  int v22 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1005E2600();
  uint64_t v5 = *(void *)(v19 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E25F0();
  __chkstk_darwin();
  sub_1005E16C0();
  __chkstk_darwin();
  unint64_t v18 = sub_1005DC690();
  sub_1005E16A0();
  unint64_t v27 = _swiftEmptyArrayStorage;
  sub_1005DDCC4(&qword_10071B970, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000566C(&qword_10071B978);
  sub_100057E98(&qword_10071B980, &qword_10071B978);
  sub_1005E2AD0();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v19);
  uint64_t v8 = (void *)sub_1005E2620();
  sub_1005E0F70();
  sub_10000566C(&qword_10071B848);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1005F6670;
  id v10 = v8;
  sub_1005E0EF0();
  unint64_t v27 = (void *)v9;
  sub_1005DDCC4((unint64_t *)&qword_10071B850, (void (*)(uint64_t))&type metadata accessor for XPCSession.InitializationOptions);
  sub_10000566C(&qword_10071B858);
  sub_100057E98((unint64_t *)&qword_10071B860, &qword_10071B858);
  sub_1005E2AD0();
  uint64_t v11 = v24;
  uint64_t v12 = sub_1005E0EE0();
  if (v11)
  {

    swift_release();
    return (uint64_t *)swift_release();
  }
  else
  {
    uint64_t v14 = v12;
    swift_allocObject();
    return sub_1005DC6D0(v14, v10, v16, v25, v17, v26);
  }
}

unint64_t sub_1005DC690()
{
  unint64_t result = qword_10071B968;
  if (!qword_10071B968)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10071B968);
  }
  return result;
}

uint64_t *sub_1005DC6D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v13 = *v7;
  _OWORD v7[2] = (uint64_t)a2;
  v7[3] = a1;
  uint64_t v14 = v13;
  uint64_t v15 = (void *)swift_allocObject();
  id v15[2] = v14;
  v15[3] = a3;
  _OWORD v15[4] = a4;
  v15[5] = a5;
  v15[6] = a6;
  swift_retain_n();
  id v16 = a2;
  swift_retain();
  swift_retain();
  sub_1005E0F20();
  swift_release();
  swift_release();
  swift_retain();
  sub_1005E0F10();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  return v7;
}

void sub_1005DC81C(uint64_t a1)
{
  uint64_t v2 = sub_1005E0FD0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)v15 - v6;
  if (qword_10071ADD0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1005E0ED0();
  sub_1003461B0(v8, (uint64_t)qword_10071B948);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9(v7, a1, v2);
  id v10 = sub_1005E0EB0();
  os_log_type_t v11 = sub_1005E25A0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    id v16 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 138412290;
    v15[1] = v12 + 4;
    v9(v5, (uint64_t)v7, v2);
    sub_1005DDCC4(&qword_10071BA38, (void (*)(uint64_t))&type metadata accessor for XPCRichError);
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v13, v5, v2);
    uint64_t v14 = sub_1005E06E0();
    swift_errorRelease();
    uint64_t v17 = v14;
    sub_1005E2960();
    void *v16 = v14;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "cancelled: %@", v12, 0xCu);
    sub_10000566C(&qword_10071B868);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
  }
}

uint64_t SyncSession.deinit()
{
  uint64_t v1 = v0;
  if (qword_10071ADD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1005E0ED0();
  sub_1003461B0(v2, (uint64_t)qword_10071B948);
  uint64_t v3 = sub_1005E0EB0();
  os_log_type_t v4 = sub_1005E25C0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "deinit", v5, 2u);
    swift_slowDealloc();
  }

  sub_1005E0F50();
  swift_release();
  return v1;
}

uint64_t SyncSession.__deallocating_deinit()
{
  SyncSession.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1005DCC58@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, unint64_t, uint64_t (*)(), uint64_t)@<X2>, uint64_t a3@<X3>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t)@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v20 = a5;
  uint64_t v21 = a4;
  int v22 = a2;
  uint64_t v23 = a3;
  uint64_t v8 = sub_1005E1010();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin();
  os_log_type_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005D210C();
  sub_1005E1000();
  uint64_t v13 = v24;
  uint64_t v12 = v25;
  uint64_t v14 = v26;
  unsigned __int8 v15 = v27;
  int v16 = v27 >> 6;
  if (v16 == 3)
  {
    uint64_t result = v21(v24, v25, v26);
LABEL_5:
    *(void *)(a6 + 32) = 0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
    return result;
  }
  if (v16 == 2)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
    unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v19 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19 + v18, v11, v8);
    sub_1005DDE28(v13, v12, (uint64_t)sub_1005DDD9C, v19, v22);
    sub_1005D5870(v13, v12, v14, v15);
    uint64_t result = swift_release();
    goto LABEL_5;
  }
  sub_1005D5870(v24, v25, v26, v27);
  uint64_t result = sub_1005E2F20();
  __break(1u);
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SyncSession.activate()()
{
  sub_1005E0F60();
  if (v0)
  {
    if (qword_10071ADD0 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1005E0ED0();
    sub_1003461B0(v1, (uint64_t)qword_10071B948);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v2 = sub_1005E0EB0();
    os_log_type_t v3 = sub_1005E25B0();
    if (os_log_type_enabled(v2, v3))
    {
      os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v4 = 138412290;
      swift_errorRetain();
      uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
      sub_1005E2960();
      *uint64_t v5 = v10;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Could not activate XPCSession due to %@.", v4, 0xCu);
      sub_10000566C(&qword_10071B868);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_willThrow();
  }
  else
  {
    if (qword_10071ADD0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1005E0ED0();
    sub_1003461B0(v6, (uint64_t)qword_10071B948);
    uint64_t v7 = sub_1005E0EB0();
    os_log_type_t v8 = sub_1005E25C0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Activated XPCSession", v9, 2u);
      swift_slowDealloc();
    }
  }
}

Swift::Void __swiftcall SyncSession.cancel(reason:)(Swift::String reason)
{
  sub_1005E0F50();
  if (qword_10071ADD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1005E0ED0();
  sub_1003461B0(v1, (uint64_t)qword_10071B948);
  osint log = sub_1005E0EB0();
  os_log_type_t v2 = sub_1005E25C0();
  if (os_log_type_enabled(oslog, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Cancelled XPCSession", v3, 2u);
    swift_slowDealloc();
  }
}

uint64_t SyncSession.start(configurations:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_10071ADD8 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)(qword_10071B960 + 16);
  uint64_t v7 = (os_unfair_lock_s *)(qword_10071B960 + 24);
  swift_retain();
  os_unfair_lock_lock(v7);
  sub_1005DDBE8(v6, v12);
  os_unfair_lock_unlock(v7);
  uint64_t v8 = v12[0];
  swift_release();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  v12[0] = v8;
  v12[1] = a1;
  uint64_t v12[2] = 0;
  uint64_t v12[3] = 0;
  char v13 = 0;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1005DDC3C;
  *(void *)(v10 + 24) = v9;
  sub_1005D20B8();
  sub_1005D210C();
  swift_retain();
  swift_retain();
  sub_1005E0F30();
  swift_release();
  return swift_release();
}

uint64_t sub_1005DD5C8(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, void (*a5)(void))
{
  unsigned __int8 v6 = a4;
  if ((a4 & 0x100) != 0)
  {
    swift_errorRetain();
    if (qword_10071ADD0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1005E0ED0();
    sub_1003461B0(v15, (uint64_t)qword_10071B948);
    swift_errorRetain();
    int v16 = sub_1005E0EB0();
    os_log_type_t v17 = sub_1005E25A0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v25 = a5;
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v18 = 138412290;
      uint64_t v26 = sub_1005E06E0();
      sub_1005E2960();
      *uint64_t v24 = v26;
      sub_1005DB4C4(a1, a2, a3, v6, 1);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Start download request failed: %@", v18, 0xCu);
      sub_10000566C(&qword_10071B868);
      swift_arrayDestroy();
      swift_slowDealloc();
      a5 = v25;
      swift_slowDealloc();
    }
    else
    {
      sub_1005DB4C4(a1, a2, a3, v6, 1);
    }

    a5(4);
    return sub_1005DB4C4(a1, a2, a3, v6, 1);
  }
  else
  {
    if (a4 > 0x3Fu)
    {
      if (qword_10071ADD0 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_1005E0ED0();
      sub_1003461B0(v19, (uint64_t)qword_10071B948);
      uint64_t v20 = sub_1005E0EB0();
      os_log_type_t v21 = sub_1005E25A0();
      if (os_log_type_enabled(v20, v21))
      {
        int v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v22 = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "Invalid response for start download request.", v22, 2u);
        swift_slowDealloc();
      }

      uint64_t v12 = 4;
    }
    else
    {
      if (qword_10071ADD0 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_1005E0ED0();
      sub_1003461B0(v8, (uint64_t)qword_10071B948);
      uint64_t v9 = sub_1005E0EB0();
      os_log_type_t v10 = sub_1005E25C0();
      if (os_log_type_enabled(v9, v10))
      {
        os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Received response for start download request.", v11, 2u);
        swift_slowDealloc();
      }

      uint64_t v12 = a1;
    }
    return ((uint64_t (*)(uint64_t))a5)(v12);
  }
}

Swift::Void __swiftcall SyncSession.stop()()
{
  if (qword_10071ADD8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)(qword_10071B960 + 16);
  uint64_t v1 = (os_unfair_lock_s *)(qword_10071B960 + 24);
  swift_retain();
  os_unfair_lock_lock(v1);
  sub_1005DDBE8(v0, &v3);
  os_unfair_lock_unlock(v1);
  uint64_t v2 = v3;
  swift_release();
  uint64_t v3 = v2;
  long long v4 = xmmword_1005F6750;
  uint64_t v5 = 0;
  char v6 = 0;
  sub_1005D20B8();
  sub_1005E0F40();
}

void *sub_1005DDBE8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *result;
  if (__OFADD__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    ++*result;
    *a2 = v2;
  }
  return result;
}

uint64_t sub_1005DDC04()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005DDC3C(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  return sub_1005DD5C8(a1, a2, a3, a4 & 0x1FF, *(void (**)(void))(v4 + 16));
}

uint64_t type metadata accessor for SyncSession()
{
  return self;
}

uint64_t sub_1005DDC74()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1005DDCB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005DCC58(a1, *(void (**)(uint64_t, unint64_t, uint64_t (*)(), uint64_t))(v2 + 24), *(void *)(v2 + 32), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 40), *(void *)(v2 + 48), a2);
}

uint64_t sub_1005DDCC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005DDD0C()
{
  uint64_t v1 = sub_1005E1010();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005DDD9C()
{
  return sub_1005E0FF0();
}

uint64_t sub_1005DDE28(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, unint64_t, uint64_t (*)(), uint64_t))
{
  if (qword_10071ADD0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1005E0ED0();
  sub_1003461B0(v9, (uint64_t)qword_10071B948);
  swift_bridgeObjectRetain_n();
  os_log_type_t v10 = sub_1005E0EB0();
  os_log_type_t v11 = sub_1005E25C0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    swift_bridgeObjectRetain();
    sub_1005DADA4(a1, a2, &v16);
    sub_1005E2960();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Responding to credential request for account %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = a4;
  swift_retain();
  a5(a1, a2, sub_1005DE054, v13);
  return swift_release();
}

uint64_t sub_1005DE054()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t SearchQuery.debugDescription.getter()
{
  sub_1005E2E90();
  v1._countAndFlagsBits = 544106784;
  v1._object = (void *)0xE400000000000000;
  sub_1005E1E30(v1);
  swift_bridgeObjectRetain();
  v2._countAndFlagsBits = sub_1005E20D0();
  sub_1005E1E30(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1005DE130()
{
  return sub_1005E2090();
}

uint64_t sub_1005DE190()
{
  return sub_1005E2080();
}

uint64_t Mailbox.hash(into:)(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1005E3410(v3);
  if (v3)
  {
    uint64_t v4 = (Swift::UInt8 *)(a2 + 32);
    do
    {
      Swift::UInt8 v5 = *v4++;
      sub_1005E3420(v5);
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1005DE26C(char a1)
{
  if (a1) {
    return 0x49746E756F636361;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1005DE2A0()
{
  return sub_1005DE26C(*v0);
}

uint64_t sub_1005DE2A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005DEFCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005DE2D0(uint64_t a1)
{
  unint64_t v2 = sub_1005DEF78();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005DE30C(uint64_t a1)
{
  unint64_t v2 = sub_1005DEF78();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Mailbox.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = a4;
  uint64_t v8 = sub_10000566C(&qword_10071BA48);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  os_log_type_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005DEF78();
  sub_1005E3500();
  uint64_t v15 = a2;
  char v17 = 0;
  sub_10000566C(&qword_10071BA58);
  sub_1005E02EC(&qword_10071BA60);
  sub_1005E31C0();
  if (!v4)
  {
    uint64_t v15 = a3;
    uint64_t v16 = v14;
    char v17 = 1;
    sub_1005C59D8();
    sub_1005E31C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

Swift::Int Mailbox.hashValue.getter(uint64_t a1)
{
  sub_1005E33F0();
  Swift::UInt v2 = *(void *)(a1 + 16);
  sub_1005E3410(v2);
  if (v2)
  {
    Swift::UInt v3 = (Swift::UInt8 *)(a1 + 32);
    do
    {
      Swift::UInt8 v4 = *v3++;
      sub_1005E3420(v4);
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  return sub_1005E3470();
}

uint64_t Mailbox.init(from:)(uint64_t a1)
{
  return sub_1005DED2C(a1, (uint64_t (*)(void))sub_1005DF0B0);
}

uint64_t sub_1005DE5E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1005DF0B0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1005DE610(void *a1)
{
  return Mailbox.encode(to:)(a1, *v1, v1[1], v1[2]);
}

Swift::Int sub_1005DE630()
{
  return Mailbox.hashValue.getter(*v0);
}

uint64_t sub_1005DE63C(uint64_t a1)
{
  return Mailbox.hash(into:)(a1, *v1);
}

Swift::Int sub_1005DE648()
{
  uint64_t v1 = *v0;
  sub_1005E33F0();
  Swift::UInt v2 = *(void *)(v1 + 16);
  sub_1005E3410(v2);
  if (v2)
  {
    Swift::UInt v3 = (Swift::UInt8 *)(v1 + 32);
    do
    {
      Swift::UInt8 v4 = *v3++;
      sub_1005E3420(v4);
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  return sub_1005E3470();
}

uint64_t sub_1005DE6E0(char a1)
{
  return *(void *)&aSuggestilimit[8 * a1];
}

uint64_t sub_1005DE700()
{
  return sub_1005DE6E0(*v0);
}

uint64_t sub_1005DE708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005DF39C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005DE730(uint64_t a1)
{
  unint64_t v2 = sub_1005DF2F4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005DE76C(uint64_t a1)
{
  unint64_t v2 = sub_1005DF2F4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SearchQuery.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = a3;
  uint64_t v8 = sub_10000566C(&qword_10071BA68);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  os_log_type_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005DF2F4();
  sub_1005E3500();
  uint64_t v15 = a2;
  char v14 = 0;
  sub_1005DF348();
  sub_1005E31C0();
  if (!v4)
  {
    LOBYTE(v15) = 1;
    sub_1005E31B0();
    uint64_t v15 = a4;
    char v14 = 2;
    sub_10000566C(&qword_10071BA80);
    sub_1005E027C(&qword_10071BA88, (void (*)(void))sub_1005D4124);
    sub_1005E31C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t SearchQuery.init(from:)(uint64_t a1)
{
  return sub_1005DED2C(a1, (uint64_t (*)(void))sub_1005DF4EC);
}

id sub_1005DE9D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id result = sub_1005DF4EC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1005DEA00(void *a1)
{
  return SearchQuery.encode(to:)(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1005DEA20(uint64_t a1, uint64_t a2)
{
  return _s20IMAPSearchIndexerXPC11SearchQueryV23__derived_struct_equalsySbAC_ACtFZ_0(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void **)a2, *(void *)(a2 + 8), *(void *)(a2 + 16));
}

uint64_t IndexingStatistics.messagesNotIndexed.getter(uint64_t a1, uint64_t a2)
{
  BOOL v2 = __OFSUB__(a1, a2);
  uint64_t result = a1 - a2;
  if (v2) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005DEA4C(char a1)
{
  if (!a1) {
    return 0x73654D6C61746F74;
  }
  if (a1 == 1) {
    return 0x736567617373656DLL;
  }
  return 0xD000000000000018;
}

uint64_t sub_1005DEAC0()
{
  return sub_1005DEA4C(*v0);
}

uint64_t sub_1005DEAC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005DF7C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005DEAF0(uint64_t a1)
{
  unint64_t v2 = sub_1005DF770();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005DEB2C(uint64_t a1)
{
  unint64_t v2 = sub_1005DF770();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t IndexingStatistics.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  v10[1] = a3;
  uint64_t v5 = sub_10000566C(&qword_10071BA90);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1005DF770();
  sub_1005E3500();
  char v13 = 0;
  sub_1005E31B0();
  if (!v3)
  {
    char v12 = 1;
    sub_1005E31B0();
    char v11 = 2;
    sub_1005E31B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t IndexingStatistics.init(from:)(uint64_t a1)
{
  return sub_1005DED2C(a1, (uint64_t (*)(void))sub_1005DF938);
}

uint64_t sub_1005DED2C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t result = a2();
  if (v2) {
    return v4;
  }
  return result;
}

uint64_t sub_1005DED58@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1005DF938(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1005DED88(void *a1)
{
  return IndexingStatistics.encode(to:)(a1, *v1, v1[1]);
}

double IndexingStatistics.fractionCompleted.getter(uint64_t a1, uint64_t a2)
{
  if (a1 < 1) {
    return 0.0;
  }
  else {
    return (double)a2 / (double)a1;
  }
}

uint64_t IndexingStatistics.fractionCompletedAsInt.getter(uint64_t result, uint64_t a2)
{
  if (result < 1) {
    double v2 = 0.0;
  }
  else {
    double v2 = (double)a2 / (double)result * 100.0;
  }
  double v3 = round(v2);
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 < 9.22337204e18) {
    return (uint64_t)v3;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1005DEE3C()
{
  return SearchQuery.debugDescription.getter();
}

uint64_t _s20IMAPSearchIndexerXPC11SearchQueryV23__derived_struct_equalsySbAC_ACtFZ_0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v11 = [a1 uniqueIdentifier];
  uint64_t v12 = sub_1005E1C00();
  uint64_t v14 = v13;

  id v15 = [a4 uniqueIdentifier];
  uint64_t v16 = sub_1005E1C00();
  uint64_t v18 = v17;

  if (v12 == v16 && v14 == v18)
  {
    swift_bridgeObjectRelease_n();
    if (a2 == a5) {
      goto LABEL_7;
    }
    return 0;
  }
  char v20 = sub_1005E3290();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0 || a2 != a5) {
    return 0;
  }
LABEL_7:
  return sub_1005CDDF8(a3, a6);
}

unint64_t sub_1005DEF78()
{
  unint64_t result = qword_10071BA50;
  if (!qword_10071BA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BA50);
  }
  return result;
}

uint64_t sub_1005DEFCC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v3 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49746E756F636361 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1005DF0B0(void *a1)
{
  uint64_t v3 = sub_10000566C(&qword_10071BB18);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  char v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  sub_10003BCDC(a1, v7);
  sub_1005DEF78();
  sub_1005E34E0();
  if (v1)
  {
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
  }
  else
  {
    sub_10000566C(&qword_10071BA58);
    char v10 = 0;
    sub_1005E02EC((unint64_t *)&unk_10071BB20);
    sub_1005E30E0();
    uint64_t v7 = v9[1];
    char v10 = 1;
    sub_1005C71B4();
    swift_bridgeObjectRetain();
    sub_1005E30E0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1005DF2F4()
{
  unint64_t result = qword_10071BA70;
  if (!qword_10071BA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BA70);
  }
  return result;
}

unint64_t sub_1005DF348()
{
  unint64_t result = qword_10071BA78;
  if (!qword_10071BA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BA78);
  }
  return result;
}

uint64_t sub_1005DF39C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6974736567677573 && a2 == 0xEA00000000006E6FLL;
  if (v3 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74696D696CLL && a2 == 0xE500000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65786F626C69616DLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

id sub_1005DF4EC(void *a1)
{
  uint64_t v3 = sub_10000566C(&qword_10071BB00);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  char v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = (id)a1[3];
  sub_10003BCDC(a1, (uint64_t)v7);
  sub_1005DF2F4();
  sub_1005E34E0();
  if (v1)
  {
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
  }
  else
  {
    HIBYTE(v10) = 0;
    sub_1005E0228();
    sub_1005E30E0();
    uint64_t v9 = v11;
    LOBYTE(v11) = 1;
    id v7 = v9;
    sub_1005E30D0();
    sub_10000566C(&qword_10071BA80);
    HIBYTE(v10) = 2;
    sub_1005E027C(&qword_10071BB10, (void (*)(void))sub_1005D846C);
    sub_1005E30E0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1005DF770()
{
  unint64_t result = qword_10071BA98;
  if (!qword_10071BA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BA98);
  }
  return result;
}

uint64_t sub_1005DF7C4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x73654D6C61746F74 && a2 == 0xED00007365676173;
  if (v3 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736567617373656DLL && a2 == 0xEF64657865646E49 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001005ED810)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1005DF938(void *a1)
{
  uint64_t v2 = sub_10000566C(&qword_10071BAF8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003BCDC(a1, a1[3]);
  sub_1005DF770();
  sub_1005E34E0();
  v8[15] = 0;
  uint64_t v6 = sub_1005E30D0();
  v8[14] = 1;
  sub_1005E30D0();
  v8[13] = 2;
  sub_1005E30D0();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
  return v6;
}

unint64_t sub_1005DFB08()
{
  unint64_t result = qword_10071BAA0;
  if (!qword_10071BAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BAA0);
  }
  return result;
}

__n128 initializeBufferWithCopyOfBuffer for IndexingStatistics(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for Mailbox()
{
  return &type metadata for Mailbox;
}

void *sub_1005DFB94(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SearchQuery(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SearchQuery()
{
  return &type metadata for SearchQuery;
}

ValueMetadata *type metadata accessor for IndexingStatistics()
{
  return &type metadata for IndexingStatistics;
}

ValueMetadata *type metadata accessor for IndexingStatistics.CodingKeys()
{
  return &type metadata for IndexingStatistics.CodingKeys;
}

unsigned char *_s20IMAPSearchIndexerXPC18IndexingStatisticsV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005DFD80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchQuery.CodingKeys()
{
  return &type metadata for SearchQuery.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Mailbox.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005DFE84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Mailbox.CodingKeys()
{
  return &type metadata for Mailbox.CodingKeys;
}

unint64_t sub_1005DFEC0()
{
  unint64_t result = qword_10071BAA8;
  if (!qword_10071BAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BAA8);
  }
  return result;
}

unint64_t sub_1005DFF18()
{
  unint64_t result = qword_10071BAB0;
  if (!qword_10071BAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BAB0);
  }
  return result;
}

unint64_t sub_1005DFF70()
{
  unint64_t result = qword_10071BAB8;
  if (!qword_10071BAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BAB8);
  }
  return result;
}

unint64_t sub_1005DFFC8()
{
  unint64_t result = qword_10071BAC0;
  if (!qword_10071BAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BAC0);
  }
  return result;
}

unint64_t sub_1005E0020()
{
  unint64_t result = qword_10071BAC8;
  if (!qword_10071BAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BAC8);
  }
  return result;
}

unint64_t sub_1005E0078()
{
  unint64_t result = qword_10071BAD0;
  if (!qword_10071BAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BAD0);
  }
  return result;
}

unint64_t sub_1005E00D0()
{
  unint64_t result = qword_10071BAD8;
  if (!qword_10071BAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BAD8);
  }
  return result;
}

unint64_t sub_1005E0128()
{
  unint64_t result = qword_10071BAE0;
  if (!qword_10071BAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BAE0);
  }
  return result;
}

unint64_t sub_1005E0180()
{
  unint64_t result = qword_10071BAE8;
  if (!qword_10071BAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BAE8);
  }
  return result;
}

unint64_t sub_1005E01D4()
{
  unint64_t result = qword_10071BAF0;
  if (!qword_10071BAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BAF0);
  }
  return result;
}

unint64_t sub_1005E0228()
{
  unint64_t result = qword_10071BB08;
  if (!qword_10071BB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BB08);
  }
  return result;
}

uint64_t sub_1005E027C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000744C(&qword_10071BA80);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005E02EC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000744C(&qword_10071BA58);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005E0350()
{
  return POSIXError._nsError.getter();
}

uint64_t sub_1005E0360()
{
  return type metadata accessor for POSIXError();
}

uint64_t sub_1005E0370()
{
  return dispatch thunk of JSONDecoder.allowsJSON5.setter();
}

uint64_t sub_1005E0380()
{
  return type metadata accessor for JSONDecoder.DataDecodingStrategy();
}

uint64_t sub_1005E0390()
{
  return type metadata accessor for JSONDecoder.DateDecodingStrategy();
}

uint64_t sub_1005E03A0()
{
  return dispatch thunk of JSONDecoder.dataDecodingStrategy.setter();
}

uint64_t sub_1005E03B0()
{
  return dispatch thunk of JSONDecoder.dateDecodingStrategy.setter();
}

uint64_t sub_1005E03C0()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t sub_1005E03D0()
{
  return JSONDecoder.init()();
}

uint64_t sub_1005E03E0()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t sub_1005E03F0()
{
  return static JSONEncoder.OutputFormatting.sortedKeys.getter();
}

uint64_t sub_1005E0400()
{
  return type metadata accessor for JSONEncoder.OutputFormatting();
}

uint64_t sub_1005E0410()
{
  return dispatch thunk of JSONEncoder.outputFormatting.setter();
}

uint64_t sub_1005E0420()
{
  return type metadata accessor for JSONEncoder.DataEncodingStrategy();
}

uint64_t sub_1005E0430()
{
  return type metadata accessor for JSONEncoder.DateEncodingStrategy();
}

uint64_t sub_1005E0440()
{
  return dispatch thunk of JSONEncoder.dataEncodingStrategy.setter();
}

uint64_t sub_1005E0450()
{
  return dispatch thunk of JSONEncoder.dateEncodingStrategy.setter();
}

uint64_t sub_1005E0460()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t sub_1005E0470()
{
  return JSONEncoder.init()();
}

uint64_t sub_1005E0480()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t sub_1005E0490()
{
  return static CharacterSet.whitespaces.getter();
}

uint64_t sub_1005E04A0()
{
  return CharacterSet.init(charactersIn:)();
}

uint64_t sub_1005E04B0()
{
  return static CharacterSet.uppercaseLetters.getter();
}

uint64_t sub_1005E04C0()
{
  return static CharacterSet.whitespacesAndNewlines.getter();
}

uint64_t sub_1005E04D0()
{
  return CharacterSet.inverted.getter();
}

uint64_t sub_1005E04E0()
{
  return type metadata accessor for CharacterSet();
}

uint64_t sub_1005E04F0()
{
  return DataProtocol.copyBytes(to:)();
}

uint64_t sub_1005E0500()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1005E0510()
{
  return Notification.object.getter();
}

uint64_t sub_1005E0520()
{
  return type metadata accessor for Notification();
}

uint64_t sub_1005E0530()
{
  return __DataStorage.init(bytes:length:copy:deallocator:offset:)();
}

uint64_t sub_1005E0540()
{
  return __DataStorage.init(bytes:length:)();
}

uint64_t sub_1005E0550()
{
  return __DataStorage._bytes.getter();
}

uint64_t sub_1005E0560()
{
  return __DataStorage.init(length:)();
}

uint64_t sub_1005E0570()
{
  return __DataStorage._length.getter();
}

uint64_t sub_1005E0580()
{
  return __DataStorage._offset.getter();
}

uint64_t sub_1005E0590()
{
  return type metadata accessor for __DataStorage();
}

uint64_t sub_1005E05A0()
{
  return DateComponents.day.getter();
}

uint64_t sub_1005E05B0()
{
  return DateComponents.hour.getter();
}

uint64_t sub_1005E05C0()
{
  return DateComponents.year.getter();
}

uint64_t sub_1005E05D0()
{
  return DateComponents.month.getter();
}

uint64_t sub_1005E05E0()
{
  return DateComponents.minute.getter();
}

uint64_t sub_1005E05F0()
{
  return DateComponents.second.getter();
}

uint64_t sub_1005E0600()
{
  return DateComponents.weekday.getter();
}

uint64_t sub_1005E0610()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t sub_1005E0620()
{
  return DateComponents.timeZone.getter();
}

uint64_t sub_1005E0630()
{
  return type metadata accessor for DateComponents();
}

uint64_t sub_1005E0640()
{
  return dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
}

uint64_t sub_1005E0650()
{
  return URLResourceValues.volumeAvailableCapacity.getter();
}

uint64_t sub_1005E0660()
{
  return URLResourceValues.volumeAvailableCapacityForOpportunisticUsage.getter();
}

uint64_t sub_1005E0670()
{
  return URLResourceValues.volume.getter();
}

uint64_t sub_1005E0680()
{
  return type metadata accessor for URLResourceValues();
}

uint64_t sub_1005E0690()
{
  return dispatch thunk of PropertyListEncoder.outputFormat.setter();
}

uint64_t sub_1005E06A0()
{
  return dispatch thunk of PropertyListEncoder.encode<A>(_:)();
}

uint64_t sub_1005E06B0()
{
  return PropertyListEncoder.init()();
}

uint64_t sub_1005E06C0()
{
  return type metadata accessor for PropertyListEncoder();
}

uint64_t sub_1005E06D0()
{
  return _BridgedStoredNSError.init(_:userInfo:)();
}

uint64_t sub_1005E06E0()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_1005E06F0()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_1005E0700()
{
  return URL.absoluteURL.getter();
}

uint64_t sub_1005E0710()
{
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t sub_1005E0720()
{
  return URL.pathExtension.getter();
}

uint64_t sub_1005E0730()
{
  return URL.absoluteString.getter();
}

uint64_t sub_1005E0740()
{
  return URL.resourceValues(forKeys:)();
}

uint64_t sub_1005E0750()
{
  return URL.init(dataRepresentation:relativeTo:isAbsolute:)();
}

uint64_t sub_1005E0760()
{
  return URL.dataRepresentation.getter();
}

void sub_1005E0770(NSURL *retstr@<X8>)
{
}

uint64_t sub_1005E0780()
{
  return URL.appendingPathComponent(_:isDirectory:)();
}

uint64_t sub_1005E0790()
{
  return URL.appendingPathExtension(_:)();
}

uint64_t sub_1005E07A0()
{
  return URL.withUnsafeFileSystemRepresentation<A>(_:)();
}

uint64_t sub_1005E07B0()
{
  return URL.init(fileURLWithFileSystemRepresentation:isDirectory:relativeTo:)();
}

uint64_t sub_1005E07C0()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1005E07D0()
{
  return URL.path.getter();
}

uint64_t sub_1005E07E0()
{
  return URL.appending<A>(component:directoryHint:)();
}

uint64_t sub_1005E07F0()
{
  return type metadata accessor for URL();
}

uint64_t sub_1005E0800()
{
  return Data.base64EncodedData(options:)();
}

void sub_1005E0810()
{
}

void sub_1005E0820()
{
}

uint64_t sub_1005E0830()
{
  return Data._copyContents(initializing:)();
}

uint64_t sub_1005E0840()
{
  return type metadata accessor for Data.RangeReference();
}

uint64_t sub_1005E0850()
{
  return Data._Representation.replaceSubrange(_:with:count:)();
}

uint64_t sub_1005E0860()
{
  return Data._Representation.count.setter();
}

uint64_t sub_1005E0870()
{
  return Data._Representation.append(contentsOf:)();
}

uint64_t sub_1005E0880()
{
  return Data.withUnsafeBytes<A>(_:)();
}

NSData sub_1005E0890()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_1005E08A0()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1005E08B0()
{
  return Data.hash(into:)();
}

uint64_t sub_1005E08C0()
{
  return Data.append(_:)();
}

uint64_t sub_1005E08D0()
{
  return type metadata accessor for Data.Iterator();
}

uint64_t sub_1005E08E0()
{
  return Date.init(timeIntervalSinceReferenceDate:)();
}

uint64_t sub_1005E08F0()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t sub_1005E0900()
{
  return Date.addingTimeInterval(_:)();
}

NSDate sub_1005E0910()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_1005E0920()
{
  return Date.init(timeIntervalSince1970:)();
}

uint64_t sub_1005E0930()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t sub_1005E0940()
{
  return static Date.== infix(_:_:)();
}

uint64_t sub_1005E0950()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1005E0960()
{
  return Date.init()();
}

uint64_t sub_1005E0970()
{
  return type metadata accessor for Date();
}

uint64_t sub_1005E0980()
{
  return UUID.init(uuidString:)();
}

uint64_t sub_1005E0990()
{
  return UUID.uuid.getter();
}

uint64_t sub_1005E09A0()
{
  return type metadata accessor for UUID();
}

uint64_t sub_1005E09B0()
{
  return Locale.init(identifier:)();
}

NSLocale sub_1005E09C0()
{
  return Locale._bridgeToObjectiveC()();
}

uint64_t sub_1005E09D0()
{
  return type metadata accessor for Locale();
}

uint64_t sub_1005E09E0()
{
  return type metadata accessor for Calendar.Identifier();
}

uint64_t sub_1005E09F0()
{
  return Calendar.init(identifier:)();
}

uint64_t sub_1005E0A00()
{
  return Calendar.dateComponents(_:from:)();
}

uint64_t sub_1005E0A10()
{
  return Calendar.date(from:)();
}

uint64_t sub_1005E0A20()
{
  return Calendar.timeZone.setter();
}

uint64_t sub_1005E0A30()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_1005E0A40()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_1005E0A50()
{
  return IndexSet.init(integersIn:)();
}

uint64_t sub_1005E0A60()
{
  return IndexSet.intersection(_:)();
}

uint64_t sub_1005E0A70()
{
  return static IndexSet.== infix(_:_:)();
}

uint64_t sub_1005E0A80()
{
  return IndexSet.insert(integersIn:)();
}

uint64_t sub_1005E0A90()
{
  return IndexSet.contains(integersIn:)();
}

uint64_t sub_1005E0AA0()
{
  return type metadata accessor for IndexSet.RangeView();
}

uint64_t sub_1005E0AB0()
{
  return IndexSet.rangeView.getter();
}

uint64_t sub_1005E0AC0()
{
  return IndexSet.init()();
}

uint64_t sub_1005E0AD0()
{
  return type metadata accessor for IndexSet();
}

uint64_t sub_1005E0AE0()
{
  return TimeZone.init(abbreviation:)();
}

uint64_t sub_1005E0AF0()
{
  return TimeZone.secondsFromGMT(for:)();
}

uint64_t sub_1005E0B00()
{
  return TimeZone.init(secondsFromGMT:)();
}

NSTimeZone sub_1005E0B10()
{
  return TimeZone._bridgeToObjectiveC()();
}

uint64_t sub_1005E0B20()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_1005E0B30()
{
  return Selector.init(_:)();
}

uint64_t sub_1005E0B40()
{
  return _HashTable.UnsafeHandle._startIterator(bucket:)();
}

uint64_t sub_1005E0B50()
{
  return _HashTable.UnsafeHandle.firstOccupiedBucketInChain(with:)();
}

uint64_t sub_1005E0B60()
{
  return _HashTable.UnsafeHandle.subscript.setter();
}

uint64_t sub_1005E0B70()
{
  return _HashTable.BucketIterator.currentValue.getter();
}

uint64_t sub_1005E0B80()
{
  return _HashTable.BucketIterator.currentValue.setter();
}

void sub_1005E0B90()
{
}

uint64_t sub_1005E0BA0()
{
  return static _HashTable.maximumCapacity(forScale:)();
}

uint64_t sub_1005E0BB0()
{
  return static _HashTable.minimumCapacity(forScale:)();
}

uint64_t sub_1005E0BC0()
{
  return _HashTable.copy()();
}

uint64_t sub_1005E0BD0()
{
  return static _HashTable.scale(forCapacity:)();
}

uint64_t sub_1005E0BE0()
{
  return _HashTable.init(scale:reservedScale:)();
}

uint64_t sub_1005E0BF0()
{
  return _emptyDequeStorage.unsafeMutableAddressor();
}

Swift::Int sub_1005E0C00(Swift::Int to, Swift::Bool linearly)
{
  return Deque._Storage._growCapacity(to:linearly:)(to, linearly);
}

uint64_t sub_1005E0C10()
{
  return UTType.init(mimeType:conformingTo:)();
}

uint64_t sub_1005E0C20()
{
  return UTType.identifier.getter();
}

uint64_t sub_1005E0C30()
{
  return static UTType.emailMessage.getter();
}

uint64_t sub_1005E0C40()
{
  return UTType.init(filenameExtension:conformingTo:)();
}

UTType sub_1005E0C50()
{
  return UTType._bridgeToObjectiveC()();
}

uint64_t sub_1005E0C60()
{
  return static UTType.data.getter();
}

uint64_t sub_1005E0C70()
{
  return static UTType.package.getter();
}

uint64_t sub_1005E0C80()
{
  return UTType.conforms(to:)();
}

uint64_t sub_1005E0C90()
{
  return static UTType.directory.getter();
}

uint64_t sub_1005E0CA0()
{
  return UTType.isDynamic.getter();
}

uint64_t sub_1005E0CB0()
{
  return type metadata accessor for UTType();
}

uint64_t sub_1005E0CC0()
{
  return type metadata accessor for OSLogPrivacy.Mask();
}

uint64_t sub_1005E0CD0()
{
  return static OSLogPrivacy.auto.getter();
}

uint64_t sub_1005E0CE0()
{
  return static OSLogPrivacy.mail(_:)();
}

uint64_t sub_1005E0CF0()
{
  return static OSLogPrivacy.public.getter();
}

uint64_t sub_1005E0D00()
{
  return type metadata accessor for OSLogPrivacy._MailMask();
}

uint64_t sub_1005E0D10()
{
  return static OSLogPrivacy.sensitive(mask:)();
}

uint64_t sub_1005E0D20()
{
  return type metadata accessor for OSLogPrivacy();
}

uint64_t sub_1005E0D30()
{
  return OSSignpostID.rawValue.getter();
}

uint64_t sub_1005E0D40()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t sub_1005E0D60()
{
  return OSSignposter.init(logHandle:)();
}

uint64_t sub_1005E0D70()
{
  return OSSignposter.logHandle.getter();
}

uint64_t sub_1005E0D80()
{
  return type metadata accessor for OSSignposter();
}

uint64_t sub_1005E0D90()
{
  return type metadata accessor for OSLogBoolFormat();
}

uint64_t sub_1005E0DA0()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t sub_1005E0DB0()
{
  return OSLogInterpolation.appendInterpolation(_:align:privacy:)();
}

uint64_t sub_1005E0DC0()
{
  return OSLogInterpolation.appendInterpolation(_:format:align:privacy:)();
}

uint64_t sub_1005E0DD0()
{
  return OSLogInterpolation.appendInterpolation(_:format:align:privacy:)();
}

uint64_t sub_1005E0DE0()
{
  return OSLogInterpolation.appendInterpolation(_:format:align:privacy:)();
}

uint64_t sub_1005E0DF0()
{
  return OSLogInterpolation.appendInterpolation(_:format:align:privacy:)();
}

uint64_t sub_1005E0E00()
{
  return OSLogInterpolation.appendInterpolation(_:format:privacy:)();
}

void sub_1005E0E10(Swift::String a1)
{
}

uint64_t sub_1005E0E20()
{
  return static OSLogStringAlignment.none.getter();
}

uint64_t sub_1005E0E30()
{
  return type metadata accessor for OSLogStringAlignment();
}

uint64_t sub_1005E0E40()
{
  return static OSLogIntegerFormatting.hex(explicitPositiveSign:includePrefix:uppercase:minDigits:)();
}

uint64_t sub_1005E0E50()
{
  return static OSLogIntegerFormatting.hex(explicitPositiveSign:includePrefix:uppercase:)();
}

uint64_t sub_1005E0E60()
{
  return static OSLogIntegerFormatting.decimal.getter();
}

uint64_t sub_1005E0E70()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t sub_1005E0E80()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t sub_1005E0E90()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t sub_1005E0EA0()
{
  return checkForErrorAndConsumeState(state:)();
}

uint64_t sub_1005E0EB0()
{
  return Logger.logObject.getter();
}

uint64_t sub_1005E0EC0()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1005E0ED0()
{
  return type metadata accessor for Logger();
}

uint64_t sub_1005E0EE0()
{
  return XPCSession.__allocating_init(xpcService:targetQueue:options:cancellationHandler:)();
}

uint64_t sub_1005E0EF0()
{
  return static XPCSession.InitializationOptions.inactive.getter();
}

uint64_t sub_1005E0F00()
{
  return type metadata accessor for XPCSession.InitializationOptions();
}

uint64_t sub_1005E0F10()
{
  return dispatch thunk of XPCSession.setCancellationHandler(_:)();
}

uint64_t sub_1005E0F20()
{
  return dispatch thunk of XPCSession.setIncomingMessageHandler(_:)();
}

uint64_t sub_1005E0F30()
{
  return dispatch thunk of XPCSession.send<A, B>(_:replyHandler:)();
}

uint64_t sub_1005E0F40()
{
  return dispatch thunk of XPCSession.send<A>(_:)();
}

uint64_t sub_1005E0F50()
{
  return dispatch thunk of XPCSession.cancel(reason:)();
}

uint64_t sub_1005E0F60()
{
  return dispatch thunk of XPCSession.activate()();
}

uint64_t sub_1005E0F70()
{
  return type metadata accessor for XPCSession();
}

uint64_t sub_1005E0F80()
{
  return static XPCListener.InitializationOptions.none.getter();
}

uint64_t sub_1005E0F90()
{
  return type metadata accessor for XPCListener.InitializationOptions();
}

uint64_t sub_1005E0FA0()
{
  return dispatch thunk of XPCListener.IncomingSessionRequest.accept<A>(_:)();
}

uint64_t sub_1005E0FB0()
{
  return XPCListener.init(service:targetQueue:options:incomingSessionHandler:)();
}

uint64_t sub_1005E0FC0()
{
  return type metadata accessor for XPCListener();
}

uint64_t sub_1005E0FD0()
{
  return type metadata accessor for XPCRichError();
}

uint64_t sub_1005E0FE0()
{
  return XPCReceivedMessage.expectsReply.getter();
}

uint64_t sub_1005E0FF0()
{
  return XPCReceivedMessage.reply<A>(_:)();
}

uint64_t sub_1005E1000()
{
  return XPCReceivedMessage.decode<A>(as:)();
}

uint64_t sub_1005E1010()
{
  return type metadata accessor for XPCReceivedMessage();
}

uint64_t sub_1005E1020()
{
  return MAP_FAILED.getter();
}

uint64_t sub_1005E1030()
{
  return POSIXErrorCode.init(rawValue:)();
}

uint64_t sub_1005E1040()
{
  return POSIXErrorCode.rawValue.getter();
}

uint64_t sub_1005E1050()
{
  return errno.getter();
}

uint64_t sub_1005E1060(Swift::Int32 a1, Swift::Int32 a2, Swift::Int32 a3)
{
  return fcntl(_:_:_:)(a1, a2, a3);
}

uint64_t sub_1005E1070()
{
  return snprintf(ptr:_:_:_:)();
}

uint64_t sub_1005E1080()
{
  return FileDescriptor._close()();
}

uint64_t sub_1005E1090()
{
  return FileDescriptor._writeAll<A>(_:)();
}

uint64_t sub_1005E10A0()
{
  return type metadata accessor for NWEndpoint.Host();
}

uint64_t sub_1005E10B0()
{
  return NWEndpoint.Host.init(_:)();
}

uint64_t sub_1005E10C0()
{
  return NWEndpoint.Port.init(rawValue:)();
}

uint64_t sub_1005E10D0()
{
  return type metadata accessor for NWEndpoint.Port();
}

uint64_t sub_1005E10E0()
{
  return type metadata accessor for NWEndpoint();
}

uint64_t sub_1005E10F0()
{
  return type metadata accessor for NWInterface.InterfaceType();
}

uint64_t sub_1005E1100()
{
  return NWInterface.name.getter();
}

uint64_t sub_1005E1110()
{
  return NWInterface.type.getter();
}

uint64_t sub_1005E1120()
{
  return type metadata accessor for NWInterface();
}

uint64_t sub_1005E1130()
{
  return NWConnection.identifier.getter();
}

uint64_t sub_1005E1140()
{
  return NWConnection.currentPath.getter();
}

void sub_1005E1150()
{
}

uint64_t sub_1005E1160()
{
  return NWConnection.ContentContext.init(identifier:expiration:priority:isFinal:antecedent:metadata:)();
}

uint64_t sub_1005E1170()
{
  return dispatch thunk of NWConnection.ContentContext.protocolMetadata(definition:)();
}

uint64_t sub_1005E1180()
{
  return dispatch thunk of NWConnection.ContentContext.protocolMetadata.getter();
}

uint64_t sub_1005E1190()
{
  return type metadata accessor for NWConnection.ContentContext();
}

uint64_t sub_1005E11A0()
{
  return type metadata accessor for NWConnection.SendCompletion();
}

uint64_t sub_1005E11B0()
{
  return NWConnection.receiveMessage(completion:)();
}

uint64_t sub_1005E11C0()
{
  return NWConnection.pathUpdateHandler.setter();
}

uint64_t sub_1005E11D0()
{
  return NWConnection.DataTransferReport.aggregatePathReport.getter();
}

uint64_t sub_1005E11E0()
{
  return NWConnection.DataTransferReport.PathReport.sentTransportByteCount.getter();
}

uint64_t sub_1005E11F0()
{
  return NWConnection.DataTransferReport.PathReport.receivedTransportByteCount.getter();
}

uint64_t sub_1005E1200()
{
  return type metadata accessor for NWConnection.DataTransferReport.PathReport();
}

uint64_t sub_1005E1210()
{
  return NWConnection.DataTransferReport.duration.getter();
}

uint64_t sub_1005E1220()
{
  return type metadata accessor for NWConnection.DataTransferReport();
}

uint64_t sub_1005E1230()
{
  return NWConnection.stateUpdateHandler.setter();
}

uint64_t sub_1005E1240()
{
  return NWConnection.viabilityUpdateHandler.setter();
}

uint64_t sub_1005E1250()
{
  return NWConnection.betterPathUpdateHandler.setter();
}

uint64_t sub_1005E1260()
{
  return NWConnection.startDataTransferReport()();
}

uint64_t sub_1005E1270()
{
  return dispatch thunk of NWConnection.PendingDataTransferReport.collect(queue:completion:)();
}

uint64_t sub_1005E1280()
{
  return dispatch thunk of NWConnection.__allocating_init(to:using:)();
}

uint64_t sub_1005E1290()
{
  return NWConnection.send(discontiguousContent:contentContext:isComplete:completion:)();
}

uint64_t sub_1005E12A0()
{
  return NWConnection.send(content:contentContext:isComplete:completion:)();
}

uint64_t sub_1005E12B0()
{
  return static NWConnection.State.== infix(_:_:)();
}

uint64_t sub_1005E12C0()
{
  return type metadata accessor for NWConnection.State();
}

uint64_t sub_1005E12D0()
{
  return NWConnection.start(queue:)();
}

uint64_t sub_1005E12E0()
{
  return NWConnection.state.getter();
}

void sub_1005E12F0()
{
}

uint64_t sub_1005E1300()
{
  return NWConnection.endpoint.getter();
}

uint64_t sub_1005E1310()
{
  return NWConnection.metadata(definition:)();
}

uint64_t sub_1005E1320()
{
  return type metadata accessor for NWConnection();
}

uint64_t sub_1005E1330()
{
  return type metadata accessor for NWParameters.Attribution();
}

uint64_t sub_1005E1340()
{
  return NWParameters.attribution.setter();
}

uint64_t sub_1005E1350()
{
  return dispatch thunk of NWParameters.ProtocolStack.applicationProtocols.modify();
}

uint64_t sub_1005E1360()
{
  return NWParameters.defaultProtocolStack.getter();
}

uint64_t sub_1005E1370()
{
  return NWParameters.prohibitConstrainedPaths.setter();
}

uint64_t sub_1005E1380()
{
  return NWParameters.prohibitedInterfaceTypes.setter();
}

uint64_t sub_1005E1390()
{
  return NWParameters.sourceApplicationBundleID.setter();
}

uint64_t sub_1005E13A0()
{
  return NWParameters.__allocating_init(tls:tcp:)();
}

uint64_t sub_1005E13B0()
{
  return NWParameters.accountID.setter();
}

uint64_t sub_1005E13C0()
{
  return type metadata accessor for NWParameters();
}

uint64_t sub_1005E13D0()
{
  return dispatch thunk of NWProtocolTCP.Options.noDelay.setter();
}

uint64_t sub_1005E13E0()
{
  return NWProtocolTCP.Options.init()();
}

uint64_t sub_1005E13F0()
{
  return type metadata accessor for NWProtocolTCP.Options();
}

uint64_t sub_1005E1400()
{
  return static NWProtocolTLS.definition.getter();
}

uint64_t sub_1005E1410()
{
  return dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter();
}

uint64_t sub_1005E1420()
{
  return NWProtocolTLS.Options.init()();
}

uint64_t sub_1005E1430()
{
  return type metadata accessor for NWProtocolTLS.Options();
}

uint64_t sub_1005E1440()
{
  return dispatch thunk of NWProtocolTLS.Metadata.securityProtocolMetadata.getter();
}

uint64_t sub_1005E1450()
{
  return type metadata accessor for NWProtocolTLS.Metadata();
}

uint64_t sub_1005E1460()
{
  return type metadata accessor for NWProtocolTLS();
}

uint64_t sub_1005E1470()
{
  return NWProtocolFramer.Definition.init(implementation:)();
}

uint64_t sub_1005E1480()
{
  return type metadata accessor for NWProtocolFramer.Definition();
}

uint64_t sub_1005E1490()
{
  return type metadata accessor for NWProtocolFramer.StartResult();
}

uint64_t sub_1005E14A0()
{
  return NWProtocolFramer.Message.init(definition:)();
}

uint64_t sub_1005E14B0()
{
  return dispatch thunk of NWProtocolFramer.Message.__allocating_init(instance:)();
}

uint64_t sub_1005E14C0()
{
  return type metadata accessor for NWProtocolFramer.Message();
}

uint64_t sub_1005E14D0()
{
  return dispatch thunk of NWProtocolFramer.Message.subscript.getter();
}

uint64_t sub_1005E14E0()
{
  return dispatch thunk of NWProtocolFramer.Message.subscript.setter();
}

uint64_t sub_1005E14F0()
{
  return NWProtocolFramer.Options.init(definition:)();
}

uint64_t sub_1005E1500()
{
  return type metadata accessor for NWProtocolFramer.Options();
}

uint64_t sub_1005E1510()
{
  return dispatch thunk of NWProtocolFramer.Options.subscript.getter();
}

uint64_t sub_1005E1520()
{
  return dispatch thunk of NWProtocolFramer.Options.subscript.setter();
}

uint64_t sub_1005E1530()
{
  return NWProtocolFramer.Instance.markFailed(error:)();
}

uint64_t sub_1005E1540()
{
  return NWProtocolFramer.Instance.parseInput(minimumIncompleteLength:maximumLength:parse:)();
}

uint64_t sub_1005E1550()
{
  return NWProtocolFramer.Instance.writeOutput(discontiguousData:)();
}

void sub_1005E1560()
{
}

void sub_1005E1570()
{
}

void sub_1005E1580(Swift::Int length)
{
}

uint64_t sub_1005E1590()
{
  return NWProtocolFramer.Instance.deliverInputNoCopy(length:message:isComplete:)();
}

uint64_t sub_1005E15A0()
{
  return NWProtocolFramer.Instance.prependApplicationProtocolUnsafe(options:)();
}

uint64_t sub_1005E15B0()
{
  return NWProtocolFramer.Instance.options.getter();
}

void sub_1005E15C0()
{
}

uint64_t sub_1005E15D0()
{
  return type metadata accessor for NWProtocolOptions();
}

uint64_t sub_1005E15E0()
{
  return NWPath.supportsIPv4.getter();
}

uint64_t sub_1005E15F0()
{
  return NWPath.supportsIPv6.getter();
}

uint64_t sub_1005E1600()
{
  return NWPath.isConstrained.getter();
}

uint64_t sub_1005E1610()
{
  return NWPath.availableInterfaces.getter();
}

uint64_t sub_1005E1620()
{
  return type metadata accessor for NWPath();
}

uint64_t sub_1005E1630()
{
  return NWError.debugDescription.getter();
}

uint64_t sub_1005E1640()
{
  return static NWError.== infix(_:_:)();
}

uint64_t sub_1005E1650()
{
  return type metadata accessor for NWError();
}

uint64_t sub_1005E1660()
{
  return type metadata accessor for DispatchDataIterator();
}

uint64_t sub_1005E1670()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t sub_1005E1680()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_1005E1690()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t sub_1005E16A0()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_1005E16B0()
{
  return static DispatchQoS.utility.getter();
}

uint64_t sub_1005E16C0()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_1005E16D0()
{
  return DispatchData.Region.startIndex.getter();
}

uint64_t sub_1005E16E0()
{
  return DispatchData.Region.withUnsafeBytes<A>(_:)();
}

uint64_t sub_1005E16F0()
{
  return DispatchData.Region.endIndex.getter();
}

uint64_t sub_1005E1700()
{
  return type metadata accessor for DispatchData.Region();
}

uint64_t sub_1005E1710()
{
  return DispatchData.regions.getter();
}

uint64_t sub_1005E1720()
{
  return type metadata accessor for DispatchData.Deallocator();
}

uint64_t sub_1005E1730()
{
  return DispatchData.init(bytesNoCopy:deallocator:)();
}

uint64_t sub_1005E1740()
{
  return DispatchData.makeIterator()();
}

uint64_t sub_1005E1750()
{
  return DispatchData.enumerateBytes(_:)();
}

uint64_t sub_1005E1760()
{
  return DispatchData.withUnsafeBytes<A, B>(body:)();
}

uint64_t sub_1005E1770()
{
  return DispatchData.init(bytes:)();
}

uint64_t _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0()
{
  return DispatchData.count.getter();
}

uint64_t sub_1005E1790()
{
  return static DispatchData.empty.getter();
}

uint64_t sub_1005E17A0()
{
  return DispatchData.append(_:)();
}

uint64_t sub_1005E17B0()
{
  return DispatchData.subdata(in:)();
}

uint64_t sub_1005E17C0()
{
  return DispatchData.copyBytes<A>(to:from:)();
}

uint64_t sub_1005E17D0()
{
  return DispatchData.copyBytes(to:count:)();
}

uint64_t sub_1005E17E0()
{
  return type metadata accessor for DispatchData();
}

uint64_t sub_1005E17F0()
{
  return static DispatchTime.now()();
}

uint64_t sub_1005E1800()
{
  return DispatchTime.advanced(by:)();
}

uint64_t sub_1005E1810()
{
  return type metadata accessor for DispatchTime();
}

uint64_t sub_1005E1820()
{
  return DispatchWorkItem.init(qos:flags:block:)();
}

uint64_t sub_1005E1830()
{
  return dispatch thunk of DispatchWorkItem.cancel()();
}

uint64_t sub_1005E1840()
{
  return type metadata accessor for DispatchWorkItem();
}

uint64_t sub_1005E1850()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t sub_1005E1860()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t sub_1005E1870()
{
  return dispatch thunk of HashFunction.update(bufferPointer:)();
}

uint64_t sub_1005E1880()
{
  return dispatch thunk of HashFunction.finalize()();
}

uint64_t sub_1005E1890()
{
  return dispatch thunk of HashFunction.init()();
}

uint64_t sub_1005E18A0()
{
  return SHA512Digest.withUnsafeBytes<A>(_:)();
}

uint64_t sub_1005E18B0()
{
  return type metadata accessor for SHA512Digest();
}

uint64_t sub_1005E18C0()
{
  return SymmetricKey.init<A>(data:)();
}

uint64_t sub_1005E18D0()
{
  return type metadata accessor for SymmetricKey();
}

uint64_t sub_1005E18E0()
{
  return static HMAC.authenticationCode<A>(for:using:)();
}

uint64_t sub_1005E18F0()
{
  return SHA512.update(bufferPointer:)();
}

uint64_t sub_1005E1900()
{
  return SHA512.finalize()();
}

uint64_t sub_1005E1910()
{
  return SHA512.init()();
}

uint64_t sub_1005E1920()
{
  return type metadata accessor for SHA512();
}

uint64_t sub_1005E1930()
{
  return type metadata accessor for Insecure.MD5();
}

uint64_t sub_1005E1940()
{
  return type metadata accessor for Insecure.MD5Digest();
}

NSDictionary sub_1005E1950()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_1005E1960()
{
  return static Dictionary._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_1005E1970()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1005E1980()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_1005E1990()
{
  return Dictionary<>.hash(into:)();
}

uint64_t sub_1005E19A0()
{
  return static Dictionary<>.== infix(_:_:)();
}

uint64_t sub_1005E19B0()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_1005E19C0()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_1005E19D0()
{
  return type metadata accessor for DefaultIndices();
}

uint64_t sub_1005E19E0()
{
  return Character.asciiValue.getter();
}

uint64_t sub_1005E19F0()
{
  return Character.isWhitespace.getter();
}

uint64_t sub_1005E1A00()
{
  return Character._isSingleScalar.getter();
}

uint64_t sub_1005E1A10()
{
  return Character.hash(into:)();
}

uint64_t sub_1005E1A20()
{
  return Character.write<A>(to:)();
}

uint64_t sub_1005E1A30()
{
  return dispatch thunk of BidirectionalCollection.index(before:)();
}

uint64_t sub_1005E1A40()
{
  return BidirectionalCollection.last.getter();
}

uint64_t sub_1005E1A50()
{
  return BidirectionalCollection.index(_:offsetBy:limitedBy:)();
}

uint64_t sub_1005E1A60()
{
  return BidirectionalCollection.suffix(_:)();
}

uint64_t sub_1005E1A70()
{
  return BidirectionalCollection.reversed()();
}

uint64_t sub_1005E1A80()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_1005E1A90()
{
  return dispatch thunk of static Comparable.> infix(_:_:)();
}

uint64_t sub_1005E1AA0()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t sub_1005E1AB0()
{
  return dispatch thunk of static Comparable.>= infix(_:_:)();
}

uint64_t sub_1005E1AC0()
{
  return dispatch thunk of static Comparable.<= infix(_:_:)();
}

uint64_t sub_1005E1AD0()
{
  return static Comparable.> infix(_:_:)();
}

uint64_t sub_1005E1AE0()
{
  return static Comparable.>= infix(_:_:)();
}

uint64_t sub_1005E1AF0()
{
  return static Comparable.<= infix(_:_:)();
}

uint64_t sub_1005E1B00()
{
  return MutableCollection.withContiguousMutableStorageIfAvailable<A>(_:)();
}

uint64_t sub_1005E1B10()
{
  return MutableCollection._withUnsafeMutableBufferPointerIfSupported<A>(_:)();
}

uint64_t sub_1005E1B20()
{
  return MutableCollection.swapAt(_:_:)();
}

uint64_t sub_1005E1B30()
{
  return MutableCollection.subscript.getter();
}

uint64_t sub_1005E1B40()
{
  return MutableCollection.subscript.getter();
}

uint64_t sub_1005E1B50()
{
  return MutableCollection<>.partition(by:)();
}

uint64_t sub_1005E1B60()
{
  return MutableCollection<>.sort(by:)();
}

uint64_t sub_1005E1B70()
{
  return dispatch thunk of MutableCollection.subscript.modify();
}

uint64_t sub_1005E1BA0()
{
  return type metadata accessor for ClosedRange();
}

uint64_t sub_1005E1BC0()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_1005E1BD0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_1005E1BE0()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_1005E1BF0()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_1005E1C00()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1005E1C10()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t sub_1005E1C20()
{
  return String.init(data:encoding:)();
}

uint64_t sub_1005E1C30()
{
  return String.init<A>(bytes:encoding:)();
}

uint64_t sub_1005E1C40()
{
  return String.init(format:_:)();
}

uint64_t sub_1005E1C50()
{
  return String.init(cString:encoding:)();
}

uint64_t sub_1005E1C60()
{
  return static String.Encoding.nonLossyASCII.getter();
}

uint64_t sub_1005E1C70()
{
  return static String.Encoding.utf8.getter();
}

uint64_t sub_1005E1C80()
{
  return static String.Encoding.ascii.getter();
}

uint64_t sub_1005E1C90()
{
  return type metadata accessor for String.Encoding();
}

uint64_t sub_1005E1CA0()
{
  return String.init<A>(describing:)();
}

uint64_t sub_1005E1CB0()
{
  return String.lowercased()()._countAndFlagsBits;
}

uint64_t sub_1005E1CC0()
{
  return String.init<A>(reflecting:)();
}

uint64_t sub_1005E1CD0()
{
  return String.uppercased()()._countAndFlagsBits;
}

uint64_t sub_1005E1CE0()
{
  return String.utf8CString.getter();
}

uint64_t sub_1005E1CF0()
{
  return static String._fromCodeUnits<A, B>(_:encoding:repair:)();
}

uint64_t sub_1005E1D00()
{
  return static String._fromSubstring(_:)();
}

void sub_1005E1D10(Swift::Int a1)
{
}

uint64_t sub_1005E1D20()
{
  return String.UnicodeScalarView._foreignIndex(after:)();
}

uint64_t sub_1005E1D30()
{
  return String.UnicodeScalarView._foreignIndex(before:)();
}

void sub_1005E1D40(Swift::Int a1)
{
}

uint64_t sub_1005E1D50()
{
  return String.UnicodeScalarView.append<A>(contentsOf:)();
}

uint64_t sub_1005E1D60()
{
  return String.UnicodeScalarView.append(_:)();
}

uint64_t sub_1005E1D70()
{
  return static String._fromUTF8Repairing(_:)();
}

uint64_t sub_1005E1D80()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_1005E1D90(Builtin::RawPointer _builtinStringLiteral, Builtin::Word utf8CodeUnitCount, Builtin::Int1 isASCII)
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(_builtinStringLiteral, utf8CodeUnitCount, isASCII)._countAndFlagsBits;
}

uint64_t sub_1005E1DA0()
{
  return String.init(unsafeUninitializedCapacity:initializingUTF8With:)();
}

uint64_t sub_1005E1DB0()
{
  return String.hash(into:)();
}

uint64_t sub_1005E1DC0()
{
  return String.count.getter();
}

uint64_t sub_1005E1DD0()
{
  return String.index(after:)();
}

uint64_t sub_1005E1DE0()
{
  return String.index(before:)();
}

uint64_t sub_1005E1DF0()
{
  return String.index(_:offsetBy:limitedBy:)();
}

uint64_t sub_1005E1E00()
{
  return String.index(_:offsetBy:)();
}

void sub_1005E1E10(Swift::String contentsOf)
{
}

void sub_1005E1E20(Swift::String a1)
{
}

void sub_1005E1E30(Swift::String a1)
{
}

uint64_t sub_1005E1E40()
{
  return String.insert(_:at:)();
}

uint64_t sub_1005E1E50()
{
  return String.init(cString:)();
}

uint64_t sub_1005E1E60()
{
  return String.init(cString:)();
}

uint64_t sub_1005E1E70()
{
  return String.Iterator.next()().value._countAndFlagsBits;
}

Swift::Int sub_1005E1E80()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_1005E1E90()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t sub_1005E1EA0()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t sub_1005E1EB0()
{
  return String.UTF8View._foreignDistance(from:to:)();
}

uint64_t sub_1005E1EC0()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t sub_1005E1ED0()
{
  return String.UTF16View.index(_:offsetBy:)();
}

uint64_t sub_1005E1EE0()
{
  *(Swift::UInt16_optional *)&uint64_t result = String.UTF16View.Iterator.next()();
  return result;
}

BOOL sub_1005E1EF0(Swift::String a1)
{
  return String.hasPrefix(_:)(a1);
}

uint64_t sub_1005E1F00()
{
  return String.hashValue.getter();
}

uint64_t sub_1005E1F10(Swift::String repeating, Swift::Int count)
{
  return String.init(repeating:count:)(repeating, count)._countAndFlagsBits;
}

uint64_t sub_1005E1F20()
{
  return String.init<A>(_:radix:uppercase:)();
}

uint64_t sub_1005E1F30()
{
  return String.subscript.getter();
}

uint64_t sub_1005E1F40()
{
  return String.init<A>(_:)();
}

uint64_t sub_1005E1F50()
{
  return String.subscript.getter();
}

uint64_t sub_1005E1F60()
{
  return dispatch thunk of Sequence.makeIterator()();
}

uint64_t sub_1005E1F70()
{
  return dispatch thunk of Sequence._copyContents(initializing:)();
}

uint64_t sub_1005E1F80()
{
  return dispatch thunk of Sequence.underestimatedCount.getter();
}

uint64_t sub_1005E1F90()
{
  return dispatch thunk of Sequence.withContiguousStorageIfAvailable<A>(_:)();
}

uint64_t sub_1005E1FA0()
{
  return Sequence.allSatisfy(_:)();
}

uint64_t sub_1005E1FB0()
{
  return Sequence.enumerated()();
}

uint64_t sub_1005E1FC0()
{
  return Sequence._copyContents(initializing:)();
}

uint64_t sub_1005E1FD0()
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)();
}

uint64_t sub_1005E1FE0()
{
  return Sequence.lazy.getter();
}

uint64_t sub_1005E1FF0()
{
  return Sequence.first(where:)();
}

uint64_t sub_1005E2000()
{
  return Sequence.filter(_:)();
}

uint64_t sub_1005E2010()
{
  return Sequence.reduce<A>(into:_:)();
}

uint64_t sub_1005E2020()
{
  return Sequence.forEach(_:)();
}

uint64_t sub_1005E2030()
{
  return Sequence.contains(where:)();
}

uint64_t sub_1005E2040()
{
  return Sequence<>.elementsEqual<A>(_:)();
}

uint64_t sub_1005E2050()
{
  return Sequence<>.contains(_:)();
}

uint64_t sub_1005E2060()
{
  return Sequence<>.joined(separator:)();
}

uint64_t sub_1005E2070()
{
  return UnsafeRawBufferPointer.init<A>(_:)();
}

uint64_t sub_1005E2080()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1005E2090()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1005E20A0()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_1005E20B0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_1005E20C0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1005E20D0()
{
  return Array.description.getter();
}

uint64_t sub_1005E20E0()
{
  return specialized Array._endMutation()();
}

uint64_t sub_1005E20F0()
{
  return Array._checkSubscript(_:wasNativeTypeChecked:)();
}

void sub_1005E2100(Swift::Int a1)
{
}

uint64_t sub_1005E2110()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void sub_1005E2120()
{
}

uint64_t sub_1005E2130()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t sub_1005E2140()
{
  return Array.withUnsafeBufferPointer<A>(_:)();
}

uint64_t sub_1005E2150()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

BOOL sub_1005E2160()
{
  return Array._hoistableIsNativeTypeChecked()();
}

uint64_t sub_1005E2170()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_1005E2180()
{
  return Array.count.getter();
}

uint64_t sub_1005E2190()
{
  return Array.append<A>(contentsOf:)();
}

uint64_t sub_1005E21A0()
{
  return Array.append(_:)();
}

uint64_t sub_1005E21B0()
{
  return Array.remove(at:)();
}

uint64_t sub_1005E21C0()
{
  return Array.endIndex.getter();
}

Swift::Int sub_1005E21D0()
{
  return Array._getCount()();
}

void sub_1005E21E0(Swift::Bool keepingCapacity)
{
}

uint64_t sub_1005E21F0()
{
  return type metadata accessor for Array();
}

uint64_t sub_1005E2200()
{
  return static Array<A>.== infix(_:_:)();
}

uint64_t sub_1005E2210()
{
  return Array.init<A>(_:)();
}

uint64_t sub_1005E2220()
{
  return Array.subscript.getter();
}

uint64_t sub_1005E2230()
{
  return Array.subscript.getter();
}

NSNumber sub_1005E2240()
{
  return Bool._bridgeToObjectiveC()();
}

uint64_t sub_1005E2250()
{
  return Double.write<A>(to:)();
}

uint64_t sub_1005E2260()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1005E2270()
{
  return Set.description.getter();
}

uint64_t sub_1005E2280()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_1005E2290()
{
  return static Set.== infix(_:_:)();
}

uint64_t sub_1005E22A0()
{
  return Set.hash(into:)();
}

uint64_t sub_1005E22B0()
{
  return Set.Index._asCocoa.modify();
}

uint64_t sub_1005E22C0()
{
  return Set.insert(_:)();
}

uint64_t sub_1005E22D0()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t sub_1005E22E0()
{
  return type metadata accessor for Set();
}

uint64_t sub_1005E22F0()
{
  return Int.init(from:)();
}

uint64_t sub_1005E2300()
{
  return Int.encode(to:)();
}

uint64_t sub_1005E2310()
{
  return dispatch thunk of RandomAccessCollection.index(_:offsetBy:)();
}

uint64_t sub_1005E2320()
{
  return dispatch thunk of RandomAccessCollection.distance(from:to:)();
}

uint64_t sub_1005E2330()
{
  return RandomAccessCollection.index(_:offsetBy:limitedBy:)();
}

uint64_t sub_1005E2350()
{
  return RandomAccessCollection<>.index(before:)();
}

uint64_t sub_1005E2390()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t sub_1005E23A0()
{
  return dispatch thunk of Collection._failEarlyRangeCheck(_:bounds:)();
}

uint64_t sub_1005E23B0()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t sub_1005E23C0()
{
  return dispatch thunk of Collection.index(after:)();
}

uint64_t sub_1005E23D0()
{
  return dispatch thunk of Collection.isEmpty.getter();
}

uint64_t sub_1005E23E0()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t sub_1005E23F0()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t sub_1005E2400()
{
  return Collection<>.popFirst()();
}

uint64_t sub_1005E2410()
{
  return Collection.firstIndex(where:)();
}

uint64_t sub_1005E2430()
{
  return Collection._failEarlyRangeCheck(_:bounds:)();
}

uint64_t sub_1005E2440()
{
  return Collection._failEarlyRangeCheck(_:bounds:)();
}

uint64_t sub_1005E2450()
{
  return Collection._failEarlyRangeCheck(_:bounds:)();
}

uint64_t sub_1005E2470()
{
  return Collection.count.getter();
}

uint64_t sub_1005E2480()
{
  return Collection.first.getter();
}

uint64_t sub_1005E2490()
{
  return Collection.prefix(_:)();
}

uint64_t sub_1005E24A0()
{
  return Collection.isEmpty.getter();
}

uint64_t sub_1005E24B0()
{
  return Collection<>.indices.getter();
}

uint64_t sub_1005E24C0()
{
  return Collection<>.subscript.getter();
}

uint64_t sub_1005E24D0()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t sub_1005E2500()
{
  return RangeReplaceableCollection.insert(_:at:)();
}

uint64_t sub_1005E2510()
{
  return RangeReplaceableCollection.init(repeating:count:)();
}

uint64_t sub_1005E2520()
{
  return RangeReplaceableCollection.init<A>(_:)();
}

uint64_t sub_1005E2550()
{
  return RangeReplaceableCollection<>.removeAll(where:)();
}

uint64_t sub_1005E2560()
{
  return Range.isEmpty.getter();
}

uint64_t sub_1005E2570()
{
  return type metadata accessor for Range();
}

uint64_t sub_1005E2580()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_1005E2590()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_1005E25A0()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_1005E25B0()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_1005E25C0()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_1005E25D0()
{
  return static NSPersistentStore.StoreType.sqlite.getter();
}

uint64_t sub_1005E25E0()
{
  return type metadata accessor for NSPersistentStore.StoreType();
}

uint64_t sub_1005E25F0()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t sub_1005E2600()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t sub_1005E2610()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_1005E2620()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_1005E2630()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t sub_1005E2640()
{
  return type metadata accessor for OS_dispatch_source.TimerFlags();
}

uint64_t sub_1005E2650()
{
  return static OS_dispatch_source.makeTimerSource(flags:queue:)();
}

uint64_t sub_1005E2660()
{
  return OS_dispatch_source.setEventHandler(qos:flags:handler:)();
}

uint64_t sub_1005E2670()
{
  return OS_dispatch_source.setEventHandler(handler:)();
}

uint64_t sub_1005E2680()
{
  return OS_dispatch_source.setCancelHandler(qos:flags:handler:)();
}

uint64_t sub_1005E2690()
{
  return OS_dispatch_source.setRegistrationHandler(qos:flags:handler:)();
}

void sub_1005E26A0()
{
}

void sub_1005E26B0()
{
}

void sub_1005E26C0()
{
}

uint64_t sub_1005E26D0()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t sub_1005E26E0()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t sub_1005E26F0()
{
  return static os_signpost_type_t.event.getter();
}

uint64_t sub_1005E2700()
{
  return type metadata accessor for OS_dispatch_workloop.Attributes();
}

uint64_t sub_1005E2710()
{
  return OS_dispatch_workloop.init(label:attributes:autoreleaseFrequency:osWorkgroup:)();
}

uint64_t sub_1005E2720()
{
  return static NSAttributeDescription.AttributeType.binaryData.getter();
}

uint64_t sub_1005E2730()
{
  return static NSAttributeDescription.AttributeType.date.getter();
}

uint64_t sub_1005E2740()
{
  return static NSAttributeDescription.AttributeType.string.getter();
}

uint64_t sub_1005E2750()
{
  return static NSAttributeDescription.AttributeType.integer64.getter();
}

uint64_t sub_1005E2760()
{
  return static NSAttributeDescription.AttributeType.undefined.getter();
}

uint64_t sub_1005E2770()
{
  return type metadata accessor for NSAttributeDescription.AttributeType();
}

uint64_t sub_1005E2780()
{
  return NSAttributeDescription.type.setter();
}

uint64_t sub_1005E2790()
{
  return NSManagedObjectContext.performAndWait<A>(_:)();
}

uint64_t sub_1005E27A0()
{
  return static NSManagedObjectContext.willSaveObjectsNotification.getter();
}

uint64_t sub_1005E27B0()
{
  return NSManagedObjectContext.fetch<A>(_:)();
}

uint64_t sub_1005E27C0()
{
  return OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
}

uint64_t sub_1005E27D0()
{
  return NSPersistentStoreCoordinator.addPersistentStore(type:configuration:at:options:)();
}

uint64_t sub_1005E27E0()
{
  return NSPersistentStoreCoordinator.destroyPersistentStore(at:type:options:)();
}

uint64_t sub_1005E27F0()
{
  return NSData.startIndex.getter();
}

uint64_t sub_1005E2800()
{
  return NSData.endIndex.getter();
}

uint64_t sub_1005E2810()
{
  return NSData.subscript.getter();
}

uint64_t sub_1005E2820()
{
  return NSCoder.decodeObject<A>(of:forKey:)();
}

NSNumber sub_1005E2830(Swift::Bool BOOLeanLiteral)
{
  return NSNumber.init(BOOLeanLiteral:)(BOOLeanLiteral);
}

uint64_t sub_1005E2840()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_1005E2850()
{
  return NSObject.hash(into:)();
}

uint64_t sub_1005E2860()
{
  return NSString.init(stringLiteral:)();
}

uint64_t sub_1005E2870(Swift::String a1)
{
  return NSScanner.scanString(_:)(a1).value._countAndFlagsBits;
}

uint64_t sub_1005E2880()
{
  return NSScanner.scanCharacters(from:)();
}

uint64_t sub_1005E2890(Swift::String a1)
{
  return NSScanner.scanUpToString(_:)(a1).value._countAndFlagsBits;
}

uint64_t sub_1005E28A0()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t sub_1005E28B0()
{
  return OS_os_log.init(subsystem:category:)();
}

uint64_t sub_1005E28C0()
{
  return type metadata accessor for Optional();
}

uint64_t sub_1005E28D0()
{
  return UnsafeMutableBufferPointer.initialize<A>(from:)();
}

uint64_t sub_1005E28E0()
{
  return UnsafeMutableBufferPointer.startIndex.getter();
}

uint64_t sub_1005E28F0()
{
  return UnsafeMutableBufferPointer.baseAddress.getter();
}

uint64_t sub_1005E2900()
{
  return Substring.index(after:)();
}

uint64_t sub_1005E2910()
{
  return Substring.index(before:)();
}

uint64_t sub_1005E2920()
{
  return Substring.index(_:offsetBy:limitedBy:)();
}

uint64_t sub_1005E2930()
{
  return Substring.subscript.getter();
}

uint64_t sub_1005E2940()
{
  return Substring.subscript.getter();
}

uint64_t sub_1005E2950()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t sub_1005E2960()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1005E2970()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_1005E2980()
{
  return dispatch thunk of Strideable.advanced(by:)();
}

uint64_t sub_1005E2990()
{
  return StringProtocol.rangeOfCharacter(from:options:range:)();
}

uint64_t sub_1005E29A0()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t sub_1005E29B0()
{
  return StringProtocol.compare<A>(_:options:range:locale:)();
}

uint64_t sub_1005E29C0()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t sub_1005E29E0()
{
  return dispatch thunk of static BinaryInteger.& infix(_:_:)();
}

uint64_t sub_1005E29F0()
{
  return dispatch thunk of static BinaryInteger.| infix(_:_:)();
}

uint64_t sub_1005E2A00()
{
  return dispatch thunk of static BinaryInteger.>> infix<A>(_:_:)();
}

uint64_t sub_1005E2A10()
{
  return dispatch thunk of static BinaryInteger.<< infix<A>(_:_:)();
}

uint64_t sub_1005E2A20()
{
  return dispatch thunk of BinaryInteger._lowWord.getter();
}

uint64_t sub_1005E2A30()
{
  return dispatch thunk of BinaryInteger.bitWidth.getter();
}

uint64_t sub_1005E2A50()
{
  return BinaryInteger.description.getter();
}

uint64_t sub_1005E2A60()
{
  return dispatch thunk of BinaryInteger.init<A>(_:)();
}

uint64_t sub_1005E2A70()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_1005E2A80()
{
  return type metadata accessor for ArraySlice();
}

uint64_t sub_1005E2A90()
{
  return dispatch thunk of SetAlgebra.formIntersection(_:)();
}

uint64_t sub_1005E2AA0()
{
  return dispatch thunk of SetAlgebra.symmetricDifference(_:)();
}

uint64_t sub_1005E2AB0()
{
  return SetAlgebra.isDisjoint(with:)();
}

uint64_t sub_1005E2AD0()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_1005E2AE0()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_1005E2AF0()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t sub_1005E2B00()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t sub_1005E2B10()
{
  return __CocoaSet.makeIterator()();
}

uint64_t sub_1005E2B20()
{
  return __CocoaSet.Index.handleBitPattern.getter();
}

uint64_t sub_1005E2B30()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t sub_1005E2B40()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t sub_1005E2B50()
{
  return __CocoaSet.count.getter();
}

uint64_t sub_1005E2B60()
{
  return __CocoaSet.member(for:)();
}

uint64_t sub_1005E2B70()
{
  return __CocoaSet.element(at:)();
}

uint64_t sub_1005E2B80()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t sub_1005E2B90()
{
  return __CocoaSet.contains(_:)();
}

uint64_t sub_1005E2BA0()
{
  return __CocoaSet.formIndex(after:isUnique:)();
}

uint64_t sub_1005E2BB0()
{
  return AnyHashable.description.getter();
}

Swift::Int sub_1005E2BC0(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_1005E2BD0()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_1005E2BE0()
{
  return AnyHashable.hash(into:)();
}

uint64_t sub_1005E2BF0()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_1005E2C00()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_1005E2C10()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_1005E2C20()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t sub_1005E2C30()
{
  return static _SetStorage.allocate(capacity:)();
}

uint64_t sub_1005E2C40()
{
  return type metadata accessor for _SetStorage();
}

uint64_t sub_1005E2C50()
{
  return _StringGuts._slowWithCString<A>(_:)();
}

uint64_t sub_1005E2C70()
{
  return _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
}

void sub_1005E2C80(Swift::Int a1)
{
}

uint64_t sub_1005E2C90()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_1005E2CA0()
{
  return type metadata accessor for LazySequence();
}

uint64_t sub_1005E2CB0()
{
  return StaticString.description.getter();
}

uint64_t sub_1005E2CC0()
{
  return type metadata accessor for Zip2Sequence();
}

void sub_1005E2CD0(Swift::Int a1)
{
}

uint64_t sub_1005E2CE0()
{
  return _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_1005E2CF0()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_1005E2D00()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_1005E2D10()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t sub_1005E2D20()
{
  return type metadata accessor for DecodingError();
}

uint64_t sub_1005E2D30()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_1005E2D40()
{
  return _decodeScalar(_:startingAt:)();
}

uint64_t sub_1005E2D50()
{
  return repeatElement<A>(_:count:)();
}

uint64_t sub_1005E2D60()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_1005E2D70()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_1005E2D80()
{
  return ContiguousArray.init(arrayLiteral:)();
}

void sub_1005E2D90(Swift::Int a1)
{
}

uint64_t sub_1005E2DA0()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

void sub_1005E2DB0()
{
}

uint64_t sub_1005E2DC0()
{
  return static ContiguousArray._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t sub_1005E2DD0()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_1005E2DE0()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_1005E2DF0()
{
  return ContiguousArray.count.getter();
}

uint64_t sub_1005E2E00()
{
  return ContiguousArray.append<A>(contentsOf:)();
}

uint64_t sub_1005E2E10()
{
  return ContiguousArray.append(_:)();
}

void sub_1005E2E20(Swift::Bool keepingCapacity)
{
}

uint64_t sub_1005E2E30()
{
  return ContiguousArray.init(repeating:count:)();
}

uint64_t sub_1005E2E40()
{
  return ContiguousArray.init()();
}

uint64_t sub_1005E2E50()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t sub_1005E2E60()
{
  return ContiguousArray.subscript.getter();
}

uint64_t sub_1005E2E70()
{
  return ContiguousArray.subscript.getter();
}

uint64_t sub_1005E2E80()
{
  return type metadata accessor for LazyMapSequence();
}

uint64_t sub_1005E2E90()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_1005E2EA0()
{
  return type metadata accessor for IndexingIterator();
}

uint64_t sub_1005E2EB0()
{
  return type metadata accessor for PartialRangeFrom();
}

uint64_t sub_1005E2EC0()
{
  return dispatch thunk of static FixedWidthInteger.bitWidth.getter();
}

uint64_t sub_1005E2ED0()
{
  return dispatch thunk of FixedWidthInteger.littleEndian.getter();
}

uint64_t sub_1005E2EE0()
{
  return dispatch thunk of FixedWidthInteger.leadingZeroBitCount.getter();
}

uint64_t sub_1005E2EF0()
{
  return dispatch thunk of static FixedWidthInteger.max.getter();
}

uint64_t sub_1005E2F00()
{
  return dispatch thunk of FixedWidthInteger.bigEndian.getter();
}

uint64_t sub_1005E2F10()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1005E2F20()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1005E2F30()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t sub_1005E2F40()
{
  return dispatch thunk of static AdditiveArithmetic.- infix(_:_:)();
}

uint64_t sub_1005E2F50()
{
  return EnumeratedSequence.makeIterator()();
}

uint64_t sub_1005E2F60()
{
  return EnumeratedSequence.Iterator.next()();
}

uint64_t sub_1005E2F70()
{
  return type metadata accessor for EnumeratedSequence.Iterator();
}

uint64_t sub_1005E2F80()
{
  return type metadata accessor for EnumeratedSequence();
}

uint64_t sub_1005E2F90()
{
  return type metadata accessor for ReversedCollection.Iterator();
}

uint64_t sub_1005E2FA0()
{
  return type metadata accessor for ReversedCollection();
}

uint64_t sub_1005E2FB0()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_1005E2FC0()
{
  return _CocoaArrayWrapper.subscript.getter();
}

uint64_t sub_1005E2FD0()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_1005E2FE0()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_1005E2FF0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_1005E3000()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_1005E3010()
{
  return type metadata accessor for PartialRangeThrough();
}

uint64_t sub_1005E3020()
{
  return dispatch thunk of _AnyIteratorBoxBase.next()();
}

uint64_t sub_1005E3030()
{
  return LazySequenceProtocol.map<A>(_:)();
}

Swift::Int sub_1005E3050(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_1005E3060()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_1005E3070()
{
  return KeyedDecodingContainer.codingPath.getter();
}

uint64_t sub_1005E3080()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1005E3090()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1005E30A0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1005E30B0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1005E30C0()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1005E30D0()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1005E30E0()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1005E30F0()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1005E3100()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1005E3110()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t sub_1005E3120()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_1005E3130()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1005E3140()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1005E3150()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1005E3160()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_1005E3170()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1005E3180()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1005E3190()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1005E31A0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1005E31B0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1005E31C0()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1005E31D0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1005E31E0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1005E31F0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

Swift::Int sub_1005E3210(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_1005E3220()
{
  return _stringCompareInternal(_:_:_:_:expecting:)();
}

uint64_t sub_1005E3230()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_1005E3240()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:)();
}

uint64_t sub_1005E3250()
{
  return dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
}

uint64_t sub_1005E3260()
{
  return _allocateUninitializedArray<A>(_:)();
}

uint64_t sub_1005E3270()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_1005E3280()
{
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t sub_1005E3290()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1005E32A0()
{
  return dispatch thunk of CustomDebugStringConvertible.debugDescription.getter();
}

uint64_t sub_1005E32B0()
{
  return dispatch thunk of SingleValueDecodingContainer.decode(_:)();
}

uint64_t sub_1005E32C0()
{
  return dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)();
}

uint64_t sub_1005E32D0()
{
  return dispatch thunk of SingleValueEncodingContainer.encode(_:)();
}

uint64_t sub_1005E32E0()
{
  return dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)();
}

uint64_t sub_1005E32F0()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t sub_1005E3300()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t sub_1005E3310()
{
  return _copySequenceToContiguousArray<A>(_:)();
}

uint64_t sub_1005E3320()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t sub_1005E3330()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t sub_1005E3340()
{
  return dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
}

uint64_t sub_1005E3350()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t sub_1005E3360()
{
  return zip<A, B>(_:_:)();
}

uint64_t sub_1005E3370()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1005E3380()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1005E3390()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_1005E33A0()
{
  return Error._code.getter();
}

uint64_t sub_1005E33B0()
{
  return Error._domain.getter();
}

uint64_t sub_1005E33C0()
{
  return Error._userInfo.getter();
}

uint64_t sub_1005E33D0()
{
  return type metadata accessor for Slice();
}

uint64_t sub_1005E33E0()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t sub_1005E33F0()
{
  return Hasher.init(_seed:)();
}

uint64_t sub_1005E3400()
{
  return Hasher.combine(bytes:)();
}

void sub_1005E3410(Swift::UInt a1)
{
}

void sub_1005E3420(Swift::UInt8 a1)
{
}

void sub_1005E3430(Swift::UInt16 a1)
{
}

void sub_1005E3440(Swift::UInt32 a1)
{
}

void sub_1005E3450(Swift::UInt64 a1)
{
}

Swift::Int sub_1005E3460()
{
  return Hasher.finalize()();
}

Swift::Int sub_1005E3470()
{
  return Hasher._finalize()();
}

uint64_t sub_1005E3480()
{
  return Hasher.init()();
}

uint64_t sub_1005E3490()
{
  return type metadata accessor for Mirror.DisplayStyle();
}

uint64_t sub_1005E34A0()
{
  return type metadata accessor for Mirror.AncestorRepresentation();
}

uint64_t sub_1005E34B0()
{
  return Mirror.init<A>(_:children:displayStyle:ancestorRepresentation:)();
}

NSNumber sub_1005E34C0()
{
  return UInt32._bridgeToObjectiveC()();
}

uint64_t sub_1005E34D0()
{
  return dispatch thunk of Decoder.singleValueContainer()();
}

uint64_t sub_1005E34E0()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_1005E34F0()
{
  return dispatch thunk of Encoder.singleValueContainer()();
}

uint64_t sub_1005E3500()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_1005E3510()
{
  return Unicode.UTF8.ForwardParser._invalidLength()();
}

uint64_t sub_1005E3520()
{
  return Unicode.Scalar.Properties.isPatternWhitespace.getter();
}

uint64_t sub_1005E3530()
{
  return type metadata accessor for Unicode.Scalar.Properties();
}

uint64_t sub_1005E3540()
{
  return Unicode.Scalar.properties.getter();
}

uint64_t sub_1005E3550()
{
  return Unicode.Scalar.UTF16View.subscript.getter();
}

uint64_t sub_1005E35A0()
{
  return static RangeSet.== infix(_:_:)();
}

uint64_t sub_1005E35B0()
{
  return RangeSet.Ranges.startIndex.getter();
}

uint64_t sub_1005E35C0()
{
  return RangeSet.Ranges.count.getter();
}

uint64_t sub_1005E35D0()
{
  return RangeSet.Ranges._insert(contentsOf:)();
}

uint64_t sub_1005E35E0()
{
  return RangeSet.Ranges.endIndex.getter();
}

uint64_t sub_1005E35F0()
{
  return RangeSet.Ranges.subscript.getter();
}

uint64_t sub_1005E3600()
{
  return RangeSet.ranges.getter();
}

uint64_t sub_1005E3610()
{
  return RangeSet.remove(contentsOf:)();
}

uint64_t sub_1005E3620()
{
  return RangeSet._ranges.modify();
}

uint64_t sub_1005E3630()
{
  return RangeSet.isEmpty.getter();
}

uint64_t sub_1005E3640()
{
  return RangeSet.contains(_:)();
}

uint64_t sub_1005E3650()
{
  return RangeSet.isSubset(of:)();
}

uint64_t sub_1005E3660()
{
  return RangeSet.subtract(_:)();
}

uint64_t sub_1005E3670()
{
  return RangeSet.formUnion(_:)();
}

uint64_t sub_1005E3680()
{
  return RangeSet.init()();
}

uint64_t sub_1005E3690()
{
  return type metadata accessor for RangeSet();
}

uint64_t sub_1005E36A0()
{
  return RangeSet.init(_:)();
}

uint64_t sub_1005E36B0()
{
  return type metadata accessor for Repeated();
}

uint64_t sub_1005E36E0()
{
  return _typeName(_:qualified:)();
}

CCCryptorStatus CCCrypt(CCOperation op, CCAlgorithm alg, CCOptions options, const void *key, size_t keyLength, const void *iv, const void *dataIn, size_t dataInLength, void *dataOut, size_t dataOutAvailable, size_t *dataOutMoved)
{
  return _CCCrypt(op, alg, options, key, keyLength, iv, dataIn, dataInLength, dataOut, dataOutAvailable, dataOutMoved);
}

CCRNGStatus CCRandomGenerateBytes(void *bytes, size_t count)
{
  return _CCRandomGenerateBytes(bytes, count);
}

uint64_t MGGetStringAnswer()
{
  return _MGGetStringAnswer();
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

uint64_t PPSCreateTelemetryIdentifier()
{
  return _PPSCreateTelemetryIdentifier();
}

uint64_t PPSSendTelemetry()
{
  return _PPSSendTelemetry();
}

OSStatus SecTrustEvaluateAsyncWithError(SecTrustRef trust, dispatch_queue_t queue, SecTrustWithErrorCallback result)
{
  return _SecTrustEvaluateAsyncWithError(trust, queue, result);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return std::logic_error::logic_error(this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return std::bad_array_new_length::bad_array_new_length(this);
}

size_t std::__next_prime(size_t __n)
{
  return std::__next_prime(__n);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string::value_type *__s)
{
  return std::string::assign(this, __s);
}

std::string *__cdecl std::string::basic_string(std::string *this, const std::string *__str, std::string::size_type __pos, std::string::size_type __n, std::allocator<char> *__a)
{
  return std::string::basic_string(this, __str, __pos, __n, __a);
}

void operator delete[]()
{
  while (1)
    ;
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator new[]()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return ___cxa_allocate_exception(thrown_size);
}

int __cxa_atexit(void (*lpfunc)(void *), void *obj, void *lpdso_handle)
{
  return ___cxa_atexit(lpfunc, obj, lpdso_handle);
}

void __cxa_free_exception(void *a1)
{
}

int __cxa_guard_acquire(__guard *a1)
{
  return ___cxa_guard_acquire((uint64_t *)a1);
}

void __cxa_guard_release(__guard *a1)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

int __maskrune(__darwin_ct_rune_t a1, unint64_t a2)
{
  return ___maskrune(a1, a2);
}

__darwin_ct_rune_t __tolower(__darwin_ct_rune_t a1)
{
  return ___tolower(a1);
}

{
}

{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _set_user_dir_suffix()
{
  return __set_user_dir_suffix();
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return __swift_isClassOrObjCExistentialType();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

Method class_getClassMethod(Class cls, SEL name)
{
  return _class_getClassMethod(cls, name);
}

Method class_getInstanceMethod(Class cls, SEL name)
{
  return _class_getInstanceMethod(cls, name);
}

__uint64_t clock_gettime_nsec_np(clockid_t __clock_id)
{
  return _clock_gettime_nsec_np(__clock_id);
}

int deflate(z_streamp strm, int flush)
{
  return _deflate(strm, flush);
}

uLong deflateBound(z_streamp strm, uLong sourceLen)
{
  return _deflateBound(strm, sourceLen);
}

int deflateEnd(z_streamp strm)
{
  return _deflateEnd(strm);
}

int deflateInit2_(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, const char *version, int stream_size)
{
  return _deflateInit2_(strm, level, method, windowBits, memLevel, strategy, version, stream_size);
}

int deflateParams(z_streamp strm, int level, int strategy)
{
  return _deflateParams(strm, level, strategy);
}

int deflatePending(z_streamp strm, unsigned int *pending, int *bits)
{
  return _deflatePending(strm, pending, bits);
}

void dispatch_activate(dispatch_object_t object)
{
}

void dispatch_main(void)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return _dlsym(__handle, __symbol);
}

void exit(int a1)
{
}

long double exp2(long double __x)
{
  return _exp2(__x);
}

int fprintf(FILE *a1, const char *a2, ...)
{
  return _fprintf(a1, a2);
}

int fputs(const char *a1, FILE *a2)
{
  return _fputs(a1, a2);
}

void free(void *a1)
{
}

void freeaddrinfo(addrinfo *a1)
{
}

void freeifaddrs(ifaddrs *a1)
{
}

size_t fwrite(const void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return _fwrite(__ptr, __size, __nitems, __stream);
}

int getaddrinfo(const char *a1, const char *a2, const addrinfo *a3, addrinfo **a4)
{
  return _getaddrinfo(a1, a2, a3, a4);
}

int getifaddrs(ifaddrs **a1)
{
  return _getifaddrs(a1);
}

unsigned int if_nametoindex(const char *a1)
{
  return _if_nametoindex(a1);
}

const char *__cdecl inet_ntop(int a1, const void *a2, char *a3, socklen_t a4)
{
  return _inet_ntop(a1, a2, a3, a4);
}

int inet_pton(int a1, const char *a2, void *a3)
{
  return _inet_pton(a1, a2, a3);
}

int inflate(z_streamp strm, int flush)
{
  return _inflate(strm, flush);
}

int inflateEnd(z_streamp strm)
{
  return _inflateEnd(strm);
}

int inflateInit2_(z_streamp strm, int windowBits, const char *version, int stream_size)
{
  return _inflateInit2_(strm, windowBits, version, stream_size);
}

int isalnum(int _c)
{
  return _isalnum(_c);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memchr(void *__s, int __c, size_t __n)
{
  return _memchr(__s, __c, __n);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmem(const void *__big, size_t __big_len, const void *__little, size_t __little_len)
{
  return _memmem(__big, __big_len, __little, __little_len);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return _memset(__b, __c, __len);
}

IMP method_getImplementation(Method m)
{
  return _method_getImplementation(m);
}

int mkstemps(char *a1, int a2)
{
  return _mkstemps(a1, a2);
}

time_t mktime(tm *a1)
{
  return _mktime(a1);
}

void *__cdecl mmap(void *a1, size_t a2, int a3, int a4, int a5, off_t a6)
{
  return _mmap(a1, a2, a3, a4, a5, a6);
}

locale_t newlocale(int a1, const char *a2, locale_t a3)
{
  return _newlocale(a1, a2, a3);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_enumerationMutation(id obj)
{
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t os_transaction_create()
{
  return _os_transaction_create();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

int printf(const char *a1, ...)
{
  return _printf(a1);
}

int putchar(int a1)
{
  return _putchar(a1);
}

qos_class_t qos_class_self(void)
{
  return _qos_class_self();
}

void *__cdecl realloc(void *__ptr, size_t __size)
{
  return _realloc(__ptr, __size);
}

tls_ciphersuite_t sec_protocol_metadata_get_negotiated_tls_ciphersuite(sec_protocol_metadata_t metadata)
{
  return _sec_protocol_metadata_get_negotiated_tls_ciphersuite(metadata);
}

tls_protocol_version_t sec_protocol_metadata_get_negotiated_tls_protocol_version(sec_protocol_metadata_t metadata)
{
  return _sec_protocol_metadata_get_negotiated_tls_protocol_version(metadata);
}

const char *__cdecl sec_protocol_metadata_get_server_name(sec_protocol_metadata_t metadata)
{
  return _sec_protocol_metadata_get_server_name(metadata);
}

void sec_protocol_options_add_tls_application_protocol(sec_protocol_options_t options, const char *application_protocol)
{
}

void sec_protocol_options_set_min_tls_protocol_version(sec_protocol_options_t options, tls_protocol_version_t version)
{
}

void sec_protocol_options_set_verify_block(sec_protocol_options_t options, sec_protocol_verify_t verify_block, dispatch_queue_t verify_block_queue)
{
}

SecTrustRef sec_trust_copy_ref(sec_trust_t trust)
{
  return _sec_trust_copy_ref(trust);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return _snprintf(__str, __size, __format);
}

int strcasecmp(const char *a1, const char *a2)
{
  return _strcasecmp(a1, a2);
}

char *__cdecl strchr(char *__s, int __c)
{
  return _strchr(__s, __c);
}

char *__cdecl strerror(int __errnum)
{
  return _strerror(__errnum);
}

size_t strftime_l(char *a1, size_t a2, const char *a3, const tm *a4, locale_t a5)
{
  return _strftime_l(a1, a2, a3, a4, a5);
}

size_t strlen(const char *__s)
{
  return _strlen(__s);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return _strncmp(__s1, __s2, __n);
}

char *__cdecl strncpy(char *__dst, const char *__src, size_t __n)
{
  return _strncpy(__dst, __src, __n);
}

size_t strnlen(const char *__s1, size_t __n)
{
  return _strnlen(__s1, __n);
}

char *__cdecl strptime_l(const char *a1, const char *a2, tm *a3, locale_t a4)
{
  return _strptime_l(a1, a2, a3, a4);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_deallocBox()
{
  return _swift_deallocBox();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_deallocUninitializedObject()
{
  return _swift_deallocUninitializedObject();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return _swift_dynamicCastClassUnconditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorInMain()
{
  return _swift_errorInMain();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getMetatypeMetadata()
{
  return _swift_getMetatypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout()
{
  return _swift_getTupleTypeLayout();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTupleTypeLayout3()
{
  return _swift_getTupleTypeLayout3();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return _swift_initEnumMetadataSinglePayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return _swift_isUniquelyReferenced_native();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_stdlib_random()
{
  return _swift_stdlib_random();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_unexpectedError()
{
  return _swift_unexpectedError();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakAssign()
{
  return _swift_weakAssign();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t swift_willThrowTypedImpl()
{
  return _swift_willThrowTypedImpl();
}

uint64_t sysconf(int a1)
{
  return _sysconf(a1);
}

int sysctl(int *a1, u_int a2, void *a3, size_t *a4, void *a5, size_t a6)
{
  return _sysctl(a1, a2, a3, a4, a5, a6);
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return _sysctlbyname(a1, a2, a3, a4, a5);
}

uint64_t ucnv_close()
{
  return _ucnv_close();
}

uint64_t ucnv_compareNames()
{
  return _ucnv_compareNames();
}

uint64_t ucnv_countAliases()
{
  return _ucnv_countAliases();
}

uint64_t ucnv_countAvailable()
{
  return _ucnv_countAvailable();
}

uint64_t ucnv_getAliases()
{
  return _ucnv_getAliases();
}

uint64_t ucnv_getAvailableName()
{
  return _ucnv_getAvailableName();
}

uint64_t ucnv_getCanonicalName()
{
  return _ucnv_getCanonicalName();
}

uint64_t ucnv_getMinCharSize()
{
  return _ucnv_getMinCharSize();
}

uint64_t ucnv_open()
{
  return _ucnv_open();
}

uint64_t ucnv_reset()
{
  return _ucnv_reset();
}

uint64_t ucnv_setFallback()
{
  return _ucnv_setFallback();
}

uint64_t ucnv_toUnicode()
{
  return _ucnv_toUnicode();
}

void uidna_close(UIDNA *idna)
{
}

int32_t uidna_nameToASCII_UTF8(const UIDNA *idna, const char *name, int32_t length, char *dest, int32_t capacity, UIDNAInfo *pInfo, UErrorCode *pErrorCode)
{
  return _uidna_nameToASCII_UTF8(idna, name, length, dest, capacity, pInfo, pErrorCode);
}

UIDNA *__cdecl uidna_openUTS46(uint32_t options, UErrorCode *pErrorCode)
{
  return _uidna_openUTS46(options, pErrorCode);
}

uint64_t unorm2_getNFCInstance()
{
  return _unorm2_getNFCInstance();
}

uint64_t unorm2_normalizeSecondAndAppend()
{
  return _unorm2_normalizeSecondAndAppend();
}

uint64_t unorm2_spanQuickCheckYes()
{
  return _unorm2_spanQuickCheckYes();
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addressListFromHeaderValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addressListFromHeaderValue:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_emailAddressValue(void *a1, const char *a2, ...)
{
  return _[a1 emailAddressValue];
}