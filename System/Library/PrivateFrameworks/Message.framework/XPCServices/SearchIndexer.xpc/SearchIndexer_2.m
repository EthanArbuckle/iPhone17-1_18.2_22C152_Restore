uint64_t sub_1000EEAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(void *)v9;
  v11 = *(void *)(v9 + 8);
  v12 = *(void *)(v9 + 16);
  v13 = *(void *)(v9 + 24);
  v14 = *(void *)(v9 + 32);
  v15 = *(_DWORD *)(v9 + 40);
  sub_1000E8260(*(void *)v9, v11, v12, v13);
  *(void *)v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v12;
  *(void *)(v8 + 24) = v13;
  *(void *)(v8 + 32) = v14;
  *(_DWORD *)(v8 + 40) = v15;
  return a1;
}

uint64_t sub_1000EEBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v13 = *(void *)(v9 + 24);
  uint64_t v14 = *(void *)(v9 + 32);
  int v15 = *(_DWORD *)(v9 + 40);
  sub_1000E8260(*(void *)v9, v11, v12, v13);
  uint64_t v16 = *(void *)v8;
  uint64_t v17 = *(void *)(v8 + 8);
  uint64_t v18 = *(void *)(v8 + 16);
  uint64_t v19 = *(void *)(v8 + 24);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v12;
  *(void *)(v8 + 24) = v13;
  *(void *)(v8 + 32) = v14;
  *(_DWORD *)(v8 + 40) = v15;
  sub_1000E82B0(v16, v17, v18, v19);
  return a1;
}

uint64_t sub_1000EEC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  *(_OWORD *)((char *)v8 + 28) = *(_OWORD *)((char *)v9 + 28);
  return a1;
}

uint64_t sub_1000EED08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 32);
  int v11 = *(_DWORD *)(v9 + 40);
  uint64_t v12 = *(void *)v8;
  uint64_t v13 = *(void *)(v8 + 8);
  uint64_t v14 = *(void *)(v8 + 16);
  uint64_t v15 = *(void *)(v8 + 24);
  long long v16 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v16;
  *(void *)(v8 + 32) = v10;
  *(_DWORD *)(v8 + 40) = v11;
  sub_1000E82B0(v12, v13, v14, v15);
  return a1;
}

uint64_t sub_1000EEDB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000EEDC4);
}

uint64_t sub_1000EEDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(_DWORD *)(a1 + *(int *)(a3 + 20) + 1);
    if (v10 > 0x80000000) {
      return -v10;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1000EEE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000EEE98);
}

double sub_1000EEE98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1005E0ED0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    *(void *)uint64_t v12 = (unint64_t)-(int)a2 << 8;
    double result = 0.0;
    *(_OWORD *)(v12 + 8) = 0u;
    *(_OWORD *)(v12 + 24) = 0u;
    *(_DWORD *)(v12 + 40) = 0;
  }
  return result;
}

uint64_t sub_1000EEF6C()
{
  uint64_t result = sub_1005E0ED0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeWithCopy for Task(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    char v5 = 1;
  }
  else
  {
    char v5 = 0;
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
  }
  (**(void (***)(uint64_t))(v4 - 8))(a1);
  *(unsigned char *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for Task(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    _s13IMAP2Behavior4TaskOwxx_0(a1);
    unsigned int v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a2 + 2;
    }
    if (v4 == 1)
    {
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      char v6 = 1;
    }
    else
    {
      char v6 = 0;
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(unsigned char *)(a1 + 40) = v6;
  }
  return a1;
}

uint64_t assignWithTake for Task(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    _s13IMAP2Behavior4TaskOwxx_0(a1);
    unsigned int v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a2 + 2;
    }
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = v4 == 1;
  }
  return a1;
}

ValueMetadata *type metadata accessor for Task()
{
  return &type metadata for Task;
}

uint64_t destroy for Task.Logger.ID(uint64_t *a1)
{
  return sub_1000E82B0(*a1, a1[1], a1[2], a1[3]);
}

uint64_t initializeWithCopy for Task.Logger.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  int v8 = *(_DWORD *)(a2 + 40);
  sub_1000E8260(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(_DWORD *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for Task.Logger.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  int v8 = *(_DWORD *)(a2 + 40);
  sub_1000E8260(*(void *)a2, v4, v5, v6);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(_DWORD *)(a1 + 40) = v8;
  sub_1000E82B0(v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for Task.Logger.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  int v4 = *(_DWORD *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(void *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 40) = v4;
  sub_1000E82B0(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Task.Logger.ID(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 44)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 1);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for Task.Logger.ID(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_DWORD *)(a1 + 40) = 0;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 44) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)a1 = (unint64_t)-a2 << 8;
      double result = 0.0;
      *(_OWORD *)(a1 + 8) = 0u;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_DWORD *)(a1 + 40) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 44) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1000EF3E4(uint64_t a1)
{
  return *(void *)(a1 + 24) >> 63;
}

uint64_t sub_1000EF3F0(uint64_t result)
{
  *(void *)(result + 24) &= ~0x8000000000000000;
  return result;
}

unsigned __int8 *sub_1000EF400(unsigned __int8 *result, uint64_t a2)
{
  unint64_t v2 = *((unsigned __int16 *)result + 12) | (unint64_t)(a2 << 63);
  *(void *)double result = *result;
  *((void *)result + 3) = v2;
  return result;
}

ValueMetadata *type metadata accessor for Task.Logger.ID()
{
  return &type metadata for Task.Logger.ID;
}

uint64_t sub_1000EF428@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000EF8E0(a1, (uint64_t (*)(uint64_t))sub_1000933DC, _s19UserInitiatedSearchVMa, _s19UserInitiatedSearchVMa, a2);
}

uint64_t sub_1000EF468@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_100093440(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = &v5[22 * a1];
    long long v8 = v7[11];
    unint64_t v9 = v6 - 1;
    a2[8] = v7[10];
    a2[9] = v8;
    a2[10] = v7[12];
    long long v10 = v7[7];
    a2[4] = v7[6];
    a2[5] = v10;
    long long v11 = v7[9];
    a2[6] = v7[8];
    a2[7] = v11;
    long long v12 = v7[3];
    *a2 = v7[2];
    a2[1] = v12;
    long long v13 = v7[5];
    a2[2] = v7[4];
    a2[3] = v13;
    uint64_t v14 = v6 - 1 - a1;
    if (v14 >= 0)
    {
      uint64_t result = (uint64_t)memmove(v7 + 2, v7 + 13, 176 * v14);
      v5[2] = v9;
      *unint64_t v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000EF57C(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    unint64_t v3 = sub_1000934A4(v3);
    *unint64_t v1 = v3;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 8 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(void *)(v5 + 16) = v7;
      sub_1005E20E0();
      return v10;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000EF660@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_100093520(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = &v5[30 * a1];
    long long v8 = v7[15];
    unint64_t v9 = v6 - 1;
    a2[12] = v7[14];
    a2[13] = v8;
    *(_OWORD *)((char *)a2 + 217) = *(_OWORD *)((char *)v7 + 249);
    long long v10 = v7[11];
    a2[8] = v7[10];
    a2[9] = v10;
    long long v11 = v7[13];
    a2[10] = v7[12];
    a2[11] = v11;
    long long v12 = v7[7];
    a2[4] = v7[6];
    a2[5] = v12;
    long long v13 = v7[9];
    a2[6] = v7[8];
    a2[7] = v13;
    long long v14 = v7[3];
    *a2 = v7[2];
    a2[1] = v14;
    long long v15 = v7[5];
    a2[2] = v7[4];
    a2[3] = v15;
    uint64_t v16 = v6 - 1 - a1;
    if (v16 >= 0)
    {
      uint64_t result = (uint64_t)memmove(v7 + 2, v7 + 17, 240 * v16);
      v5[2] = v9;
      *unint64_t v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000EF784@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_100093548(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = &v5[24 * a1];
    long long v8 = v7[11];
    unint64_t v9 = v6 - 1;
    a2[8] = v7[10];
    a2[9] = v8;
    a2[10] = v7[12];
    *(_OWORD *)((char *)a2 + 169) = *(_OWORD *)((char *)v7 + 201);
    long long v10 = v7[7];
    a2[4] = v7[6];
    a2[5] = v10;
    long long v11 = v7[9];
    a2[6] = v7[8];
    a2[7] = v11;
    long long v12 = v7[3];
    *a2 = v7[2];
    a2[1] = v12;
    long long v13 = v7[5];
    a2[2] = v7[4];
    a2[3] = v13;
    uint64_t v14 = v6 - 1 - a1;
    if (v14 >= 0)
    {
      uint64_t result = (uint64_t)memmove(v7 + 2, v7 + 14, 192 * v14);
      v5[2] = v9;
      *unint64_t v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000EF8A0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000EF8E0(a1, (uint64_t (*)(uint64_t))sub_100093490, _s25MessageSectionsToDownloadVMa, _s25MessageSectionsToDownloadVMa, a2);
}

uint64_t sub_1000EF8E0@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = *v5;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v11 = a2(v11);
  }
  unint64_t v12 = *(void *)(v11 + 16);
  if (v12 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v13 = v12 - 1;
  uint64_t v14 = *(void *)(a3(0) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)) + v15 * a1;
  uint64_t result = sub_1000F1F30(v16, a5, a4);
  if ((uint64_t)(v13 - a1) < 0)
  {
LABEL_15:
    uint64_t result = sub_1005E3000();
    __break(1u);
    return result;
  }
  if (v15 > 0 || v16 >= v16 + v15 + v15 * (v13 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v15)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v11 + 16) = v13;
  *uint64_t v5 = v11;
  return result;
}

uint64_t sub_1000EFA74(unint64_t a1)
{
  unint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_100093584(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      unint64_t v7 = &v3[3 * a1];
      unsigned int v8 = *((_DWORD *)v7 + 8);
      memmove(v7 + 4, v7 + 7, 24 * v6);
      v3[2] = v5;
      *unint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

void *sub_1000EFB64(void (*a1)(void *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000EFBBC(a1, a2, a3, a4, type metadata accessor for TaskHistory.Running);
}

void *sub_1000EFB90(void (*a1)(void *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000EFBBC(a1, a2, a3, a4, type metadata accessor for TaskHistory.Previous);
}

void *sub_1000EFBBC(void (*a1)(void *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = v5;
  int64_t v7 = *(void *)(a3 + 16);
  unsigned int v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    v22 = _swiftEmptyArrayStorage;
    sub_10001A574(0, v7, 0);
    unsigned int v8 = _swiftEmptyArrayStorage;
    uint64_t v11 = *(void *)(a5(0) - 8);
    uint64_t v12 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v19 = *(void *)(v11 + 72);
    while (1)
    {
      a1(v21, v12);
      if (v6) {
        break;
      }
      uint64_t v6 = 0;
      uint64_t v13 = v21[0];
      uint64_t v14 = v21[1];
      v22 = v8;
      unint64_t v16 = v8[2];
      unint64_t v15 = v8[3];
      if (v16 >= v15 >> 1)
      {
        sub_10001A574(v15 > 1, v16 + 1, 1);
        unsigned int v8 = v22;
      }
      v8[2] = v16 + 1;
      uint64_t v17 = &v8[2 * v16];
      v17[4] = v13;
      v17[5] = v14;
      v12 += v19;
      if (!--v7) {
        return v8;
      }
    }
    swift_release();
  }
  return v8;
}

void *sub_1000EFD28(void (*a1)(long long *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v25 = _swiftEmptyArrayStorage;
    sub_10001AB94(0, v5, 0);
    uint64_t v6 = _swiftEmptyArrayStorage;
    for (i = (uint64_t *)(a3 + 32); ; ++i)
    {
      uint64_t v20 = *i;
      a1(&v21, &v20);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      long long v9 = v21;
      long long v10 = v22;
      uint64_t v11 = v24;
      uint64_t v12 = v23;
      v25 = v6;
      unint64_t v14 = v6[2];
      unint64_t v13 = v6[3];
      if (v14 >= v13 >> 1)
      {
        long long v17 = v22;
        long long v18 = v21;
        sub_10001AB94(v13 > 1, v14 + 1, 1);
        long long v10 = v17;
        long long v9 = v18;
        uint64_t v6 = v25;
      }
      v6[2] = v14 + 1;
      unint64_t v15 = &v6[5 * v14];
      *((_OWORD *)v15 + 2) = v9;
      *((_OWORD *)v15 + 3) = v10;
      *((unsigned char *)v15 + 68) = (v12 | (unint64_t)(v11 << 32)) >> 32;
      *((_DWORD *)v15 + 16) = v12;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1000EFE5C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ClientCommand(0);
  __chkstk_darwin(v5 - 8);
  int64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v36 - v11);
  __chkstk_darwin(v10);
  unint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = *v2;
  uint64_t v18 = *(void *)(*v2 + 16);
  if (!v18)
  {
LABEL_10:
    uint64_t v26 = sub_10000566C(&qword_10070C3B8);
    v27 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    v28 = a2;
    return v27(v28, 1, 1, v26);
  }
  uint64_t v38 = v14;
  v39 = v2;
  v37 = v7;
  v40 = a2;
  uint64_t v41 = v17;
  uint64_t v19 = v17 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v20 = *(void *)(v13 + 72);
  swift_bridgeObjectRetain();
  unint64_t v21 = 0;
  uint64_t v22 = a1;
  while (1)
  {
    sub_1000F1E68(v19, (uint64_t)v16, type metadata accessor for TaskHistory.Running);
    sub_1000F1E68((uint64_t)v16, (uint64_t)v12, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_1000F1ED0((uint64_t)v12, type metadata accessor for TaskHistory.Running);
LABEL_4:
    sub_1000F1ED0((uint64_t)v16, type metadata accessor for TaskHistory.Running);
    ++v21;
    v19 += v20;
    if (v18 == v21)
    {
      swift_bridgeObjectRelease();
      a2 = v40;
      goto LABEL_10;
    }
  }
  uint64_t v23 = *v12;
  uint64_t v24 = (uint64_t)v12 + *(int *)(sub_10000566C(&qword_10070B6A0) + 64);
  LOBYTE(v23) = static DownloadRequest.ID.__derived_struct_equals(_:_:)(v22, v23);
  sub_1000F1ED0(v24, type metadata accessor for ClientCommand);
  if ((v23 & 1) == 0) {
    goto LABEL_4;
  }
  sub_1000F1ED0((uint64_t)v16, type metadata accessor for TaskHistory.Running);
  swift_bridgeObjectRelease();
  uint64_t v25 = v38;
  sub_1000EF8E0(v21, (uint64_t (*)(uint64_t))sub_100093468, type metadata accessor for TaskHistory.Running, type metadata accessor for TaskHistory.Running, v38);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000F1ED0(v25, type metadata accessor for TaskHistory.Running);
    uint64_t v26 = sub_10000566C(&qword_10070C3B8);
    v27 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    v28 = v40;
    return v27(v28, 1, 1, v26);
  }
  int v30 = *(_DWORD *)(v25 + 8);
  uint64_t v31 = sub_10000566C(&qword_10070B6A0);
  uint64_t v32 = (uint64_t)v37;
  sub_1000F1F30(v25 + *(int *)(v31 + 64), (uint64_t)v37, type metadata accessor for ClientCommand);
  uint64_t v33 = sub_10000566C(&qword_10070C3B8);
  v34 = v40;
  uint64_t v35 = (uint64_t)v40 + *(int *)(v33 + 48);
  _DWORD *v40 = v30;
  sub_1000F1F30(v32, v35, type metadata accessor for ClientCommand);
  return (*(uint64_t (**)(_DWORD *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v34, 0, 1, v33);
}

uint64_t sub_1000F0274(int a1)
{
  uint64_t v3 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v5 = __chkstk_darwin(v4);
  int64_t v7 = (char *)&v20 - v6;
  __chkstk_darwin(v5);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = *v1;
  uint64_t v13 = *(void *)(*v1 + 16);
  if (!v13) {
    return 0;
  }
  uint64_t v20 = v1;
  uint64_t v21 = v9;
  uint64_t v14 = v12 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v15 = *(void *)(v8 + 72);
  swift_bridgeObjectRetain();
  unint64_t v16 = 0;
  while (1)
  {
    sub_1000F1E68(v14, (uint64_t)v11, type metadata accessor for TaskHistory.Running);
    sub_1000F1E68((uint64_t)v11, (uint64_t)v7, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_1000F1ED0((uint64_t)v7, type metadata accessor for TaskHistory.Running);
LABEL_4:
    sub_1000F1ED0((uint64_t)v11, type metadata accessor for TaskHistory.Running);
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  int v17 = *(_DWORD *)v7;
  sub_10007C4A4(*((void *)v7 + 1));
  if (v17 != a1) {
    goto LABEL_4;
  }
  sub_1000F1ED0((uint64_t)v11, type metadata accessor for TaskHistory.Running);
  swift_bridgeObjectRelease();
  uint64_t v18 = v21;
  sub_1000EF8E0(v16, (uint64_t (*)(uint64_t))sub_100093468, type metadata accessor for TaskHistory.Running, type metadata accessor for TaskHistory.Running, v21);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return *(unsigned int *)(v18 + 4);
  }
  sub_1000F1ED0(v18, type metadata accessor for TaskHistory.Running);
  return 0;
}

uint64_t sub_1000F050C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  uint64_t v33 = v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v31 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000566C(&qword_10070C0B8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ClientCommand(0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F1F98(a1, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1) {
    return sub_100007A48((uint64_t)v15, &qword_10070C0B8);
  }
  sub_1000F1F30((uint64_t)v15, (uint64_t)v19, type metadata accessor for ClientCommand);
  uint64_t v21 = (uint64_t)&v12[*(int *)(sub_10000566C(&qword_10070B6A0) + 64)];
  *(void *)uint64_t v12 = a2;
  *((_DWORD *)v12 + 2) = a3;
  sub_1000F1E68((uint64_t)v19, v21, type metadata accessor for ClientCommand);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = v30;
  unint64_t v23 = *v30;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v23 = sub_10001758C(0, *(void *)(v23 + 16) + 1, 1, v23);
  }
  unint64_t v25 = *(void *)(v23 + 16);
  unint64_t v24 = *(void *)(v23 + 24);
  if (v25 >= v24 >> 1) {
    unint64_t v23 = sub_10001758C(v24 > 1, v25 + 1, 1, v23);
  }
  *(void *)(v23 + 16) = v25 + 1;
  sub_1000F1F30((uint64_t)v12, v23+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v25, type metadata accessor for TaskHistory.Running);
  unint64_t *v22 = v23;
  uint64_t v26 = *(int *)(sub_10000566C(&qword_10070B308) + 48);
  sub_1000F1E68((uint64_t)v19, (uint64_t)v9, type metadata accessor for ClientCommand);
  *(_DWORD *)&v9[v26] = a3;
  swift_storeEnumTagMultiPayload();
  unint64_t v27 = v22[1];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v27 = sub_10001844C(0, *(void *)(v27 + 16) + 1, 1, v27);
  }
  unint64_t v29 = *(void *)(v27 + 16);
  unint64_t v28 = *(void *)(v27 + 24);
  if (v29 >= v28 >> 1) {
    unint64_t v27 = sub_10001844C(v28 > 1, v29 + 1, 1, v27);
  }
  *(void *)(v27 + 16) = v29 + 1;
  sub_1000F1F30((uint64_t)v9, v27+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v29, type metadata accessor for TaskHistory.Previous);
  v22[1] = v27;
  return sub_1000F1ED0((uint64_t)v19, type metadata accessor for ClientCommand);
}

uint64_t sub_1000F0960(unint64_t a1, int a2, int a3)
{
  uint64_t v7 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v22 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)uint64_t v13 = a2;
  *((_DWORD *)v13 + 1) = a3;
  *((void *)v13 + 1) = a1;
  swift_storeEnumTagMultiPayload();
  unint64_t v14 = *v3;
  sub_1000E55A4(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v14 = sub_10001758C(0, *(void *)(v14 + 16) + 1, 1, v14);
  }
  unint64_t v16 = *(void *)(v14 + 16);
  unint64_t v15 = *(void *)(v14 + 24);
  if (v16 >= v15 >> 1) {
    unint64_t v14 = sub_10001758C(v15 > 1, v16 + 1, 1, v14);
  }
  *(void *)(v14 + 16) = v16 + 1;
  sub_1000F1F30((uint64_t)v13, v14+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v16, type metadata accessor for TaskHistory.Running);
  *uint64_t v3 = v14;
  *(void *)uint64_t v9 = a1;
  *((_DWORD *)v9 + 2) = a3;
  swift_storeEnumTagMultiPayload();
  unint64_t v17 = v3[1];
  sub_1000E55A4(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v17 = sub_10001844C(0, *(void *)(v17 + 16) + 1, 1, v17);
  }
  unint64_t v19 = *(void *)(v17 + 16);
  unint64_t v18 = *(void *)(v17 + 24);
  if (v19 >= v18 >> 1) {
    unint64_t v17 = sub_10001844C(v18 > 1, v19 + 1, 1, v17);
  }
  *(void *)(v17 + 16) = v19 + 1;
  uint64_t result = sub_1000F1F30((uint64_t)v9, v17+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v19, type metadata accessor for TaskHistory.Previous);
  v3[1] = v17;
  return result;
}

uint64_t sub_1000F0C18()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TaskHistory.Running(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000F1E68(v1, (uint64_t)v4, type metadata accessor for TaskHistory.Running);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = *(unsigned int *)v4;
    sub_10007C4A4(v4[1]);
  }
  else
  {
    uint64_t v5 = *v4;
    uint64_t v6 = sub_10000566C(&qword_10070B6A0);
    sub_1000F1ED0((uint64_t)v4 + *(int *)(v6 + 64), type metadata accessor for ClientCommand);
  }
  return v5;
}

uint64_t sub_1000F0D1C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_100079BA8(*a1, *a2) & 1) == 0) {
    return 0;
  }
  return sub_100079D48(v2, v3);
}

uint64_t sub_1000F0D78(uint64_t a1, uint64_t a2)
{
  uint64_t v49 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v43 = *(void *)(v49 - 8);
  uint64_t v4 = __chkstk_darwin(v49);
  uint64_t v48 = (uint64_t)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v47 = (uint64_t)v42 - v6;
  uint64_t v46 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v7 = *(void *)(v46 - 8);
  uint64_t v8 = __chkstk_darwin(v46);
  uint64_t v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v42 - v11;
  uint64_t v51 = 0;
  unint64_t v52 = 0xE000000000000000;
  sub_1005E2C80(40);
  swift_bridgeObjectRelease();
  uint64_t v51 = 0x20676E696E6E7572;
  unint64_t v52 = 0xE900000000000028;
  v50 = *(void **)(a1 + 16);
  int64_t v13 = (int64_t)v50;
  v53._countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v53);
  swift_bridgeObjectRelease();
  v54._countAndFlagsBits = 2065709609;
  v54._object = (void *)0xE400000000000000;
  sub_1005E1E30(v54);
  unint64_t v14 = _swiftEmptyArrayStorage;
  uint64_t v44 = a2;
  if (v13)
  {
    v50 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10001A574(0, v13, 0);
    uint64_t v15 = *(unsigned __int8 *)(v7 + 80);
    v42[1] = a1;
    uint64_t v16 = a1 + ((v15 + 32) & ~v15);
    uint64_t v45 = *(void *)(v7 + 72);
    do
    {
      sub_1000F1E68(v16, (uint64_t)v12, type metadata accessor for TaskHistory.Running);
      sub_1000F1E68((uint64_t)v12, (uint64_t)v10, type metadata accessor for TaskHistory.Running);
      uint64_t v17 = sub_1005E1CC0();
      uint64_t v19 = v18;
      sub_1000F1ED0((uint64_t)v12, type metadata accessor for TaskHistory.Running);
      unint64_t v14 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10001A574(0, v14[2] + 1, 1);
        unint64_t v14 = v50;
      }
      unint64_t v21 = v14[2];
      unint64_t v20 = v14[3];
      if (v21 >= v20 >> 1)
      {
        sub_10001A574(v20 > 1, v21 + 1, 1);
        unint64_t v14 = v50;
      }
      v14[2] = v21 + 1;
      uint64_t v22 = &v14[2 * v21];
      v22[4] = v17;
      v22[5] = v19;
      v16 += v45;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    a2 = v44;
  }
  v50 = v14;
  uint64_t v23 = sub_10000566C(&qword_100709F58);
  sub_10001C548();
  uint64_t v24 = sub_1005E1A80();
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  v55._countAndFlagsBits = v24;
  v55._object = v26;
  sub_1005E1E30(v55);
  swift_bridgeObjectRelease();
  v56._countAndFlagsBits = 0x6976657270202C7DLL;
  v56._object = (void *)0xEE0028203A73756FLL;
  sub_1005E1E30(v56);
  v50 = *(void **)(a2 + 16);
  int64_t v27 = (int64_t)v50;
  v57._countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v57);
  swift_bridgeObjectRelease();
  v58._countAndFlagsBits = 2065709609;
  v58._object = (void *)0xE400000000000000;
  sub_1005E1E30(v58);
  unint64_t v28 = _swiftEmptyArrayStorage;
  if (v27)
  {
    uint64_t v46 = v23;
    v50 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10001A574(0, v27, 0);
    uint64_t v29 = a2 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
    uint64_t v30 = *(void *)(v43 + 72);
    do
    {
      uint64_t v31 = v47;
      sub_1000F1E68(v29, v47, type metadata accessor for TaskHistory.Previous);
      sub_1000F1E68(v31, v48, type metadata accessor for TaskHistory.Previous);
      uint64_t v32 = sub_1005E1CC0();
      uint64_t v34 = v33;
      sub_1000F1ED0(v31, type metadata accessor for TaskHistory.Previous);
      unint64_t v28 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10001A574(0, v28[2] + 1, 1);
        unint64_t v28 = v50;
      }
      unint64_t v36 = v28[2];
      unint64_t v35 = v28[3];
      if (v36 >= v35 >> 1)
      {
        sub_10001A574(v35 > 1, v36 + 1, 1);
        unint64_t v28 = v50;
      }
      v28[2] = v36 + 1;
      v37 = &v28[2 * v36];
      v37[4] = v32;
      v37[5] = v34;
      v29 += v30;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
  }
  v50 = v28;
  uint64_t v38 = sub_1005E1A80();
  v40 = v39;
  swift_bridgeObjectRelease();
  v59._countAndFlagsBits = v38;
  v59._object = v40;
  sub_1005E1E30(v59);
  swift_bridgeObjectRelease();
  v60._countAndFlagsBits = 125;
  v60._object = (void *)0xE100000000000000;
  sub_1005E1E30(v60);
  return v51;
}

uint64_t sub_1000F12E0()
{
  return sub_1000F0D78(*v0, v0[1]);
}

uint64_t sub_1000F12E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ClientCommand(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for TaskHistory.Running(0);
  __chkstk_darwin(v5);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000F1E68(v1, (uint64_t)v7, type metadata accessor for TaskHistory.Running);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    int v8 = *((_DWORD *)v7 + 1);
    unint64_t v9 = *((void *)v7 + 1);
    int v20 = *(_DWORD *)v7;
    uint64_t v21 = sub_1005E3230();
    uint64_t v22 = v10;
    v23._countAndFlagsBits = 2304032;
    v23._object = (void *)0xE300000000000000;
    sub_1005E1E30(v23);
    int v20 = v8;
    v24._countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v24);
    swift_bridgeObjectRelease();
    v25._countAndFlagsBits = 8233;
    v25._object = (void *)0xE200000000000000;
    sub_1005E1E30(v25);
    char v11 = Action.kind.getter(v9);
    v26._countAndFlagsBits = Action.Kind.description.getter(v11);
    sub_1005E1E30(v26);
    swift_bridgeObjectRelease();
    sub_10007C4A4(v9);
    return v21;
  }
  else
  {
    uint64_t v13 = *(void *)v7;
    int v14 = *((_DWORD *)v7 + 2);
    uint64_t v15 = sub_10000566C(&qword_10070B6A0);
    sub_1000F1F30((uint64_t)&v7[*(int *)(v15 + 64)], (uint64_t)v4, type metadata accessor for ClientCommand);
    unint64_t v16 = CommandID.tag.getter(v13);
    LOBYTE(v21) = v16;
    HIDWORD(v21) = HIDWORD(v16);
    uint64_t v21 = sub_1005E1CA0();
    uint64_t v22 = v17;
    v27._countAndFlagsBits = 2304032;
    v27._object = (void *)0xE300000000000000;
    sub_1005E1E30(v27);
    int v20 = v14;
    v28._countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v28);
    swift_bridgeObjectRelease();
    v29._countAndFlagsBits = 8233;
    v29._object = (void *)0xE200000000000000;
    sub_1005E1E30(v29);
    v30._countAndFlagsBits = ClientCommand.logIdentifier.getter();
    sub_1005E1E30(v30);
    swift_bridgeObjectRelease();
    uint64_t v12 = v21;
    sub_1000F1ED0((uint64_t)v4, type metadata accessor for ClientCommand);
  }
  return v12;
}

unint64_t sub_1000F1580()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ClientCommand(0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (unint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000F1E68(v1, (uint64_t)v7, type metadata accessor for TaskHistory.Previous);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v8 = *v7;
    char v9 = Action.kind.getter(*v7);
    unint64_t v10 = Action.Kind.description.getter(v9);
    sub_10007C4A4(v8);
  }
  else
  {
    sub_1000F1F30((uint64_t)v7, (uint64_t)v5, type metadata accessor for ClientCommand);
    unint64_t v10 = ClientCommand.logIdentifier.getter();
    sub_1000F1ED0((uint64_t)v5, type metadata accessor for ClientCommand);
  }
  return v10;
}

uint64_t type metadata accessor for TaskHistory.Previous(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070C6E8);
}

uint64_t type metadata accessor for TaskHistory.Running(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070C640);
}

IMAP2Protocol::Tag sub_1000F171C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  v40 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  int v14 = (char *)&v36 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v36 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v36 - v18;
  uint64_t v20 = *a1;
  uint64_t v21 = (void *)a1[1];
  swift_bridgeObjectRetain();
  v22._countAndFlagsBits = v20;
  v22._object = v21;
  IMAP2Protocol::Tag_optional v43 = Tag.init(_:)(v22);
  if (v43.is_nil)
  {
    LODWORD(v23) = 0;
    char v30 = 1;
LABEL_18:
    *(_DWORD *)a3 = v23;
    *(unsigned char *)(a3 + 4) = v30;
    goto LABEL_22;
  }
  v37 = v14;
  unint64_t v23 = *(void *)(a2 + 16);
  if (!v23)
  {
    char v30 = 1;
    goto LABEL_18;
  }
  uint64_t v38 = a3;
  uint64_t v39 = v4;
  unsigned int connectionIdentifier = v43.value.connectionIdentifier;
  uint64_t v41 = HIDWORD(*(void *)&v43.value);
  uint64_t v24 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v25 = *(void *)(v9 + 72);
  swift_bridgeObjectRetain();
  unint64_t v26 = 0;
  while (1)
  {
    sub_1000F1E68(v24, (uint64_t)v19, type metadata accessor for TaskHistory.Running);
    sub_1000F1E68((uint64_t)v19, (uint64_t)v17, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    swift_bridgeObjectRetain();
    sub_1000F1ED0((uint64_t)v17, type metadata accessor for TaskHistory.Running);
LABEL_5:
    sub_1000F1ED0((uint64_t)v19, type metadata accessor for TaskHistory.Running);
    swift_bridgeObjectRelease();
    ++v26;
    v24 += v25;
    if (v23 == v26)
    {
      LODWORD(v23) = 0;
      char v30 = 1;
      a3 = v38;
      goto LABEL_17;
    }
  }
  uint64_t v27 = *(void *)v17;
  uint64_t v28 = (uint64_t)&v17[*(int *)(sub_10000566C(&qword_10070B6A0) + 64)];
  swift_bridgeObjectRetain();
  sub_1000F1ED0(v28, type metadata accessor for ClientCommand);
  unint64_t v29 = CommandID.tag.getter(v27);
  if (__PAIR64__(HIDWORD(v29), v29) != __PAIR64__(v41, connectionIdentifier)) {
    goto LABEL_5;
  }
  sub_1000F1ED0((uint64_t)v19, type metadata accessor for TaskHistory.Running);
  swift_bridgeObjectRelease();
  if (v23 == v26)
  {
    LODWORD(v23) = 0;
    char v30 = 1;
    a3 = v38;
LABEL_17:
    v43.value = (IMAP2Protocol::Tag)swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  a3 = v38;
  if (v26 >= v23)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v31 = (uint64_t)v37;
  sub_1000F1E68(v24, (uint64_t)v37, type metadata accessor for TaskHistory.Running);
  uint64_t v17 = v40;
  sub_1000F1E68(v31, (uint64_t)v40, type metadata accessor for TaskHistory.Running);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
LABEL_20:
    sub_1000F1ED0((uint64_t)v17, type metadata accessor for TaskHistory.Running);
    goto LABEL_21;
  }
  uint64_t v32 = *(void *)v17;
  LODWORD(v23) = *((_DWORD *)v17 + 2);
  uint64_t v33 = sub_10000566C(&qword_10070B6A0);
  sub_1000F1ED0((uint64_t)&v17[*(int *)(v33 + 64)], type metadata accessor for ClientCommand);
  unint64_t v34 = CommandID.tag.getter(v32);
  if (__PAIR64__(HIDWORD(v34), v34) == __PAIR64__(v41, connectionIdentifier))
  {
    sub_1000F1ED0((uint64_t)v37, type metadata accessor for TaskHistory.Running);
    char v30 = 0;
    goto LABEL_17;
  }
LABEL_21:
  v43.value = (IMAP2Protocol::Tag)sub_1000F1ED0((uint64_t)v37, type metadata accessor for TaskHistory.Running);
  __break(1u);
LABEL_22:
  IMAP2Protocol::Tag result = v43.value;
  *((unsigned char *)&result + 8) = v43.is_nil;
  return result;
}

BOOL sub_1000F1B38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)a2;
  char v6 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8)) {
    return (v6 & 1) != 0 && v4 == v5;
  }
  else {
    return (v6 & 1) == 0 && static DownloadRequest.ID.__derived_struct_equals(_:_:)(v4, v5);
  }
}

uint64_t sub_1000F1B78(uint64_t a1, unint64_t *a2)
{
  uint64_t v4 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F1E68(a1, (uint64_t)v7, type metadata accessor for TaskHistory.Running);
  unint64_t v8 = *a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v8 = sub_10001758C(0, *(void *)(v8 + 16) + 1, 1, v8);
    *a2 = v8;
  }
  unint64_t v11 = *(void *)(v8 + 16);
  unint64_t v10 = *(void *)(v8 + 24);
  if (v11 >= v10 >> 1)
  {
    unint64_t v8 = sub_10001758C(v10 > 1, v11 + 1, 1, v8);
    *a2 = v8;
  }
  *(void *)(v8 + 16) = v11 + 1;
  return sub_1000F1F30((uint64_t)v7, v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v11, type metadata accessor for TaskHistory.Running);
}

uint64_t sub_1000F1CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TaskHistory.Running(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000F1E68(a1, (uint64_t)v6, type metadata accessor for TaskHistory.Running);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = *(unsigned int *)v6;
    sub_10007C4A4(v6[1]);
  }
  else
  {
    uint64_t v8 = *v6;
    uint64_t v9 = sub_10000566C(&qword_10070B6A0);
    sub_1000F1ED0((uint64_t)v6 + *(int *)(v9 + 64), type metadata accessor for ClientCommand);
  }
  unint64_t v10 = *(void **)(a2 + 8);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 8) = v10;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100018480(0, v10[2] + 1, 1, v10);
    unint64_t v10 = (void *)result;
    *(void *)(a2 + 8) = result;
  }
  unint64_t v13 = v10[2];
  unint64_t v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    uint64_t result = (uint64_t)sub_100018480((void *)(v12 > 1), v13 + 1, 1, v10);
    unint64_t v10 = (void *)result;
  }
  v10[2] = v13 + 1;
  int v14 = (char *)v10 + 12 * v13;
  *((void *)v14 + 4) = v8;
  v14[40] = EnumCaseMultiPayload == 1;
  *(void *)(a2 + 8) = v10;
  return result;
}

uint64_t sub_1000F1E68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000F1ED0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000F1F30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000F1F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070C0B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for TaskHistory.RemovedID(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for TaskHistory.RemovedID()
{
  return &type metadata for TaskHistory.RemovedID;
}

ValueMetadata *type metadata accessor for TaskHistory()
{
  return &type metadata for TaskHistory;
}

void *sub_1000F2034(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (void *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      unint64_t v6 = a2[1];
      sub_1000E55A4(v6);
      a1[1] = v6;
    }
    else
    {
      *a1 = *a2;
      *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
      uint64_t v8 = *(int *)(sub_10000566C(&qword_10070B6A0) + 64);
      uint64_t v9 = (char *)a1 + v8;
      unint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v12 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v12;
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((void *)v9 + 3) = *((void *)v10 + 3);
          *((_DWORD *)v9 + 8) = *((_DWORD *)v10 + 8);
          *(_DWORD *)(v9 + 35) = *(_DWORD *)(v10 + 35);
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_24;
        case 1u:
          uint64_t v13 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v13;
          uint64_t v14 = *((void *)v10 + 2);
          uint64_t v15 = *((void *)v10 + 3);
          *((void *)v9 + 2) = v14;
          *((void *)v9 + 3) = v15;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 2u:
        case 8u:
          *(void *)uint64_t v9 = *(void *)v10;
          *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 3u:
        case 4u:
        case 5u:
          *(void *)uint64_t v9 = *(void *)v10;
          *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 6u:
          *(void *)uint64_t v9 = *(void *)v10;
          *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((_DWORD *)v9 + 6) = *((_DWORD *)v10 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 7u:
          *(void *)uint64_t v9 = *(void *)v10;
          *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          *((_DWORD *)v9 + 6) = *((_DWORD *)v10 + 6);
          *((void *)v9 + 4) = *((void *)v10 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 9u:
          *(void *)uint64_t v9 = *(void *)v10;
          *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
          *((void *)v9 + 2) = *((void *)v10 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v16 = sub_10000566C(&qword_100709E50);
          uint64_t v17 = *(int *)(v16 + 64);
          uint64_t v18 = &v9[v17];
          uint64_t v19 = &v10[v17];
          uint64_t v20 = sub_1005E0970();
          uint64_t v21 = *(void *)(v20 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
          {
            uint64_t v22 = sub_10000566C(&qword_100709E58);
            memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
          }
          uint64_t v44 = *(int *)(v16 + 80);
          uint64_t v45 = (uint64_t *)&v9[v44];
          uint64_t v46 = (uint64_t *)&v10[v44];
          uint64_t v47 = *v46;
          unint64_t v48 = v46[1];
          sub_100008D24(*v46, v48);
          *uint64_t v45 = v47;
          v45[1] = v48;
          goto LABEL_24;
        case 0xAu:
        case 0xCu:
          unint64_t v23 = *(void *)v10;
          sub_100008D7C(v23);
          *(void *)uint64_t v9 = v23;
          goto LABEL_24;
        case 0xBu:
        case 0xDu:
          unint64_t v24 = *(void *)v10;
          sub_100008D7C(*(void *)v10);
          uint64_t v25 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = v24;
          *((void *)v9 + 1) = v25;
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 0xEu:
          uint64_t v26 = sub_10000566C(&qword_100709E60);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v9, v10, v26);
          uint64_t v27 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
          uint64_t v28 = &v9[v27];
          unint64_t v29 = &v10[v27];
          v28[16] = v29[16];
          uint64_t v30 = *(void *)v29;
          uint64_t v31 = *((void *)v29 + 1);
          *(void *)uint64_t v28 = v30;
          *((void *)v28 + 1) = v31;
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 0xFu:
          uint64_t v32 = sub_10000566C(&qword_100709E60);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v9, v10, v32);
          uint64_t v33 = *(int *)(sub_10000566C(&qword_100709E70) + 48);
          unint64_t v34 = &v9[v33];
          unint64_t v35 = &v10[v33];
          *(_WORD *)unint64_t v34 = *(_WORD *)v35;
          *((void *)v34 + 1) = *((void *)v35 + 1);
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 0x10u:
        case 0x11u:
          uint64_t v36 = sub_10000566C(&qword_100709E60);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v9, v10, v36);
          uint64_t v37 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
          uint64_t v38 = &v9[v37];
          uint64_t v39 = &v10[v37];
          *(void *)uint64_t v38 = *(void *)v39;
          *((_DWORD *)v38 + 2) = *((_DWORD *)v39 + 2);
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 0x12u:
          uint64_t v40 = *((void *)v10 + 1);
          *(void *)uint64_t v9 = *(void *)v10;
          *((void *)v9 + 1) = v40;
          *((void *)v9 + 2) = *((void *)v10 + 2);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_24;
        case 0x13u:
          *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
          uint64_t v41 = *((void *)v10 + 2);
          *((void *)v9 + 1) = *((void *)v10 + 1);
          *((void *)v9 + 2) = v41;
          uint64_t v42 = *((void *)v10 + 4);
          *((void *)v9 + 3) = *((void *)v10 + 3);
          *((void *)v9 + 4) = v42;
          uint64_t v43 = *((void *)v10 + 6);
          *((void *)v9 + 5) = *((void *)v10 + 5);
          *((void *)v9 + 6) = v43;
          *((void *)v9 + 7) = *((void *)v10 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_24:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unint64_t sub_1000F280C(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v2 = *(void *)(a1 + 8);
    return sub_10007C4A4(v2);
  }
  else
  {
    uint64_t v4 = (unint64_t *)(a1 + *(int *)(sub_10000566C(&qword_10070B6A0) + 64));
    type metadata accessor for ClientCommand(0);
    unint64_t result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
        swift_bridgeObjectRelease();
        goto LABEL_23;
      case 1:
      case 2:
      case 6:
      case 8:
        swift_bridgeObjectRelease();
        goto LABEL_27;
      case 3:
      case 4:
      case 5:
        goto LABEL_27;
      case 7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      case 9:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v8 = sub_10000566C(&qword_100709E50);
        uint64_t v9 = (char *)v4 + *(int *)(v8 + 64);
        uint64_t v10 = sub_1005E0970();
        uint64_t v11 = *(void *)(v10 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
          (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
        }
        uint64_t v12 = (uint64_t *)((char *)v4 + *(int *)(v8 + 80));
        uint64_t v13 = *v12;
        unint64_t v14 = v12[1];
        return sub_1000094D4(v13, v14);
      case 10:
      case 12:
        unint64_t v5 = *v4;
        return sub_10000952C(v5);
      case 11:
      case 13:
        sub_10000952C(*v4);
        goto LABEL_27;
      case 14:
        uint64_t v15 = sub_10000566C(&qword_100709E60);
        (*(void (**)(unint64_t *, uint64_t))(*(void *)(v15 - 8) + 8))(v4, v15);
        uint64_t v7 = &qword_100709E68;
        goto LABEL_20;
      case 15:
        uint64_t v16 = sub_10000566C(&qword_100709E60);
        (*(void (**)(unint64_t *, uint64_t))(*(void *)(v16 - 8) + 8))(v4, v16);
        sub_10000566C(&qword_100709E70);
        goto LABEL_27;
      case 16:
      case 17:
        uint64_t v6 = sub_10000566C(&qword_100709E60);
        (*(void (**)(unint64_t *, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
        uint64_t v7 = &qword_100709E78;
LABEL_20:
        sub_10000566C(v7);
        goto LABEL_27;
      case 18:
        swift_release();
        swift_release();
LABEL_23:
        return swift_release();
      case 19:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_27:
        unint64_t result = swift_bridgeObjectRelease();
        break;
      default:
        return result;
    }
  }
  return result;
}

void *sub_1000F2BD0(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    unint64_t v4 = a2[1];
    sub_1000E55A4(v4);
    a1[1] = v4;
  }
  else
  {
    *a1 = *a2;
    *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
    uint64_t v5 = *(int *)(sub_10000566C(&qword_10070B6A0) + 64);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v9 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v9;
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((void *)v6 + 3) = *((void *)v7 + 3);
        *((_DWORD *)v6 + 8) = *((_DWORD *)v7 + 8);
        *(_DWORD *)(v6 + 35) = *(_DWORD *)(v7 + 35);
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_22;
      case 1u:
        uint64_t v10 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v10;
        uint64_t v11 = *((void *)v7 + 2);
        uint64_t v12 = *((void *)v7 + 3);
        *((void *)v6 + 2) = v11;
        *((void *)v6 + 3) = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 2u:
      case 8u:
        *(void *)uint64_t v6 = *(void *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 3u:
      case 4u:
      case 5u:
        *(void *)uint64_t v6 = *(void *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 6u:
        *(void *)uint64_t v6 = *(void *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((_DWORD *)v6 + 6) = *((_DWORD *)v7 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 7u:
        *(void *)uint64_t v6 = *(void *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        *((_DWORD *)v6 + 6) = *((_DWORD *)v7 + 6);
        *((void *)v6 + 4) = *((void *)v7 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 9u:
        *(void *)uint64_t v6 = *(void *)v7;
        *((_DWORD *)v6 + 2) = *((_DWORD *)v7 + 2);
        *((void *)v6 + 2) = *((void *)v7 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v13 = sub_10000566C(&qword_100709E50);
        uint64_t v14 = *(int *)(v13 + 64);
        uint64_t v15 = &v6[v14];
        uint64_t v16 = &v7[v14];
        uint64_t v17 = sub_1005E0970();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          uint64_t v19 = sub_10000566C(&qword_100709E58);
          memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        uint64_t v41 = *(int *)(v13 + 80);
        uint64_t v42 = (uint64_t *)&v6[v41];
        uint64_t v43 = (uint64_t *)&v7[v41];
        uint64_t v44 = *v43;
        unint64_t v45 = v43[1];
        sub_100008D24(*v43, v45);
        *uint64_t v42 = v44;
        v42[1] = v45;
        goto LABEL_22;
      case 0xAu:
      case 0xCu:
        unint64_t v20 = *(void *)v7;
        sub_100008D7C(v20);
        *(void *)uint64_t v6 = v20;
        goto LABEL_22;
      case 0xBu:
      case 0xDu:
        unint64_t v21 = *(void *)v7;
        sub_100008D7C(*(void *)v7);
        uint64_t v22 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = v21;
        *((void *)v6 + 1) = v22;
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 0xEu:
        uint64_t v23 = sub_10000566C(&qword_100709E60);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v6, v7, v23);
        uint64_t v24 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
        uint64_t v25 = &v6[v24];
        uint64_t v26 = &v7[v24];
        v25[16] = v26[16];
        uint64_t v27 = *(void *)v26;
        uint64_t v28 = *((void *)v26 + 1);
        *(void *)uint64_t v25 = v27;
        *((void *)v25 + 1) = v28;
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 0xFu:
        uint64_t v29 = sub_10000566C(&qword_100709E60);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v6, v7, v29);
        uint64_t v30 = *(int *)(sub_10000566C(&qword_100709E70) + 48);
        uint64_t v31 = &v6[v30];
        uint64_t v32 = &v7[v30];
        *(_WORD *)uint64_t v31 = *(_WORD *)v32;
        *((void *)v31 + 1) = *((void *)v32 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 0x10u:
      case 0x11u:
        uint64_t v33 = sub_10000566C(&qword_100709E60);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v6, v7, v33);
        uint64_t v34 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
        unint64_t v35 = &v6[v34];
        uint64_t v36 = &v7[v34];
        *(void *)unint64_t v35 = *(void *)v36;
        *((_DWORD *)v35 + 2) = *((_DWORD *)v36 + 2);
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 0x12u:
        uint64_t v37 = *((void *)v7 + 1);
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = v37;
        *((void *)v6 + 2) = *((void *)v7 + 2);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_22;
      case 0x13u:
        *(_DWORD *)uint64_t v6 = *(_DWORD *)v7;
        uint64_t v38 = *((void *)v7 + 2);
        *((void *)v6 + 1) = *((void *)v7 + 1);
        *((void *)v6 + 2) = v38;
        uint64_t v39 = *((void *)v7 + 4);
        *((void *)v6 + 3) = *((void *)v7 + 3);
        *((void *)v6 + 4) = v39;
        uint64_t v40 = *((void *)v7 + 6);
        *((void *)v6 + 5) = *((void *)v7 + 5);
        *((void *)v6 + 6) = v40;
        *((void *)v6 + 7) = *((void *)v7 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_22:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
        break;
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1000F3350(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1000F1ED0(a1, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
      unint64_t v4 = *(void *)(a2 + 8);
      sub_1000E55A4(v4);
      *(void *)(a1 + 8) = v4;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
      uint64_t v5 = *(int *)(sub_10000566C(&qword_10070B6A0) + 64);
      uint64_t v6 = (char *)(a1 + v5);
      uint64_t v7 = a2 + v5;
      uint64_t v8 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(void *)uint64_t v6 = *(void *)v7;
          *((void *)v6 + 1) = *(void *)(v7 + 8);
          *((void *)v6 + 2) = *(void *)(v7 + 16);
          *((_DWORD *)v6 + 6) = *(_DWORD *)(v7 + 24);
          *((_DWORD *)v6 + 7) = *(_DWORD *)(v7 + 28);
          int v9 = *(_DWORD *)(v7 + 32);
          *(_DWORD *)(v6 + 35) = *(_DWORD *)(v7 + 35);
          *((_DWORD *)v6 + 8) = v9;
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_23;
        case 1u:
          *(void *)uint64_t v6 = *(void *)v7;
          *((void *)v6 + 1) = *(void *)(v7 + 8);
          *((void *)v6 + 2) = *(void *)(v7 + 16);
          *((void *)v6 + 3) = *(void *)(v7 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 2u:
        case 8u:
          *(void *)uint64_t v6 = *(void *)v7;
          *((_DWORD *)v6 + 2) = *(_DWORD *)(v7 + 8);
          *((void *)v6 + 2) = *(void *)(v7 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 3u:
        case 4u:
        case 5u:
          *(void *)uint64_t v6 = *(void *)v7;
          *((_DWORD *)v6 + 2) = *(_DWORD *)(v7 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 6u:
          *(void *)uint64_t v6 = *(void *)v7;
          *((_DWORD *)v6 + 2) = *(_DWORD *)(v7 + 8);
          *((void *)v6 + 2) = *(void *)(v7 + 16);
          *((_DWORD *)v6 + 6) = *(_DWORD *)(v7 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 7u:
          *(void *)uint64_t v6 = *(void *)v7;
          *((_DWORD *)v6 + 2) = *(_DWORD *)(v7 + 8);
          *((void *)v6 + 2) = *(void *)(v7 + 16);
          *((_DWORD *)v6 + 6) = *(_DWORD *)(v7 + 24);
          *((void *)v6 + 4) = *(void *)(v7 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 9u:
          *(void *)uint64_t v6 = *(void *)v7;
          *((_DWORD *)v6 + 2) = *(_DWORD *)(v7 + 8);
          *((void *)v6 + 2) = *(void *)(v7 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v10 = sub_10000566C(&qword_100709E50);
          uint64_t v11 = *(int *)(v10 + 64);
          uint64_t v12 = &v6[v11];
          uint64_t v13 = (const void *)(v7 + v11);
          uint64_t v14 = sub_1005E0970();
          uint64_t v15 = *(void *)(v14 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
          {
            uint64_t v16 = sub_10000566C(&qword_100709E58);
            memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
          }
          uint64_t v32 = *(int *)(v10 + 80);
          uint64_t v33 = (uint64_t *)&v6[v32];
          uint64_t v34 = (uint64_t *)(v7 + v32);
          uint64_t v35 = *v34;
          unint64_t v36 = v34[1];
          sub_100008D24(*v34, v36);
          *uint64_t v33 = v35;
          v33[1] = v36;
          goto LABEL_23;
        case 0xAu:
        case 0xCu:
          unint64_t v17 = *(void *)v7;
          sub_100008D7C(v17);
          *(void *)uint64_t v6 = v17;
          goto LABEL_23;
        case 0xBu:
        case 0xDu:
          unint64_t v18 = *(void *)v7;
          sub_100008D7C(*(void *)v7);
          *(void *)uint64_t v6 = v18;
          *((void *)v6 + 1) = *(void *)(v7 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 0xEu:
          uint64_t v19 = sub_10000566C(&qword_100709E60);
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v6, v7, v19);
          uint64_t v20 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
          unint64_t v21 = &v6[v20];
          uint64_t v22 = v7 + v20;
          *(void *)unint64_t v21 = *(void *)v22;
          uint64_t v23 = *(void *)(v22 + 8);
          v21[16] = *(unsigned char *)(v22 + 16);
          *((void *)v21 + 1) = v23;
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 0xFu:
          uint64_t v24 = sub_10000566C(&qword_100709E60);
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v6, v7, v24);
          uint64_t v25 = *(int *)(sub_10000566C(&qword_100709E70) + 48);
          uint64_t v26 = &v6[v25];
          uint64_t v27 = (char *)(v7 + v25);
          *uint64_t v26 = *v27;
          v26[1] = v27[1];
          *((void *)v26 + 1) = *((void *)v27 + 1);
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 0x10u:
        case 0x11u:
          uint64_t v28 = sub_10000566C(&qword_100709E60);
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v6, v7, v28);
          uint64_t v29 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
          uint64_t v30 = &v6[v29];
          uint64_t v31 = v7 + v29;
          *(void *)uint64_t v30 = *(void *)v31;
          *((_DWORD *)v30 + 2) = *(_DWORD *)(v31 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 0x12u:
          *(void *)uint64_t v6 = *(void *)v7;
          *((void *)v6 + 1) = *(void *)(v7 + 8);
          *((void *)v6 + 2) = *(void *)(v7 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_23;
        case 0x13u:
          *(_DWORD *)uint64_t v6 = *(_DWORD *)v7;
          *((void *)v6 + 1) = *(void *)(v7 + 8);
          *((void *)v6 + 2) = *(void *)(v7 + 16);
          *((void *)v6 + 3) = *(void *)(v7 + 24);
          *((void *)v6 + 4) = *(void *)(v7 + 32);
          *((void *)v6 + 5) = *(void *)(v7 + 40);
          *((void *)v6 + 6) = *(void *)(v7 + 48);
          *((void *)v6 + 7) = *(void *)(v7 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_23:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v6, (const void *)v7, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_DWORD *sub_1000F3B54(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(sub_10000566C(&qword_10070B6A0) + 64);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 9u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((_DWORD *)v7 + 2) = *((_DWORD *)v8 + 2);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        uint64_t v10 = sub_10000566C(&qword_100709E50);
        uint64_t v11 = *(int *)(v10 + 64);
        uint64_t v12 = &v7[v11];
        uint64_t v13 = &v8[v11];
        uint64_t v14 = sub_1005E0970();
        uint64_t v15 = *(void *)(v14 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        {
          uint64_t v16 = sub_10000566C(&qword_100709E58);
          memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
        }
        *(_OWORD *)&v7[*(int *)(v10 + 80)] = *(_OWORD *)&v8[*(int *)(v10 + 80)];
        goto LABEL_12;
      case 0xEu:
        uint64_t v17 = sub_10000566C(&qword_100709E60);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v7, v8, v17);
        uint64_t v18 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
        uint64_t v19 = &v7[v18];
        uint64_t v20 = &v8[v18];
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        v19[16] = v20[16];
        goto LABEL_12;
      case 0xFu:
        uint64_t v21 = sub_10000566C(&qword_100709E60);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v7, v8, v21);
        uint64_t v22 = sub_10000566C(&qword_100709E70);
        *(_OWORD *)&v7[*(int *)(v22 + 48)] = *(_OWORD *)&v8[*(int *)(v22 + 48)];
        goto LABEL_12;
      case 0x10u:
      case 0x11u:
        uint64_t v23 = sub_10000566C(&qword_100709E60);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v7, v8, v23);
        uint64_t v24 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
        uint64_t v25 = &v7[v24];
        uint64_t v26 = &v8[v24];
        *(void *)uint64_t v25 = *(void *)v26;
        *((_DWORD *)v25 + 2) = *((_DWORD *)v26 + 2);
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_DWORD *sub_1000F3F84(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000F1ED0((uint64_t)a1, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      a1[2] = a2[2];
      uint64_t v6 = *(int *)(sub_10000566C(&qword_10070B6A0) + 64);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 9u:
          *(void *)uint64_t v7 = *(void *)v8;
          *((_DWORD *)v7 + 2) = *((_DWORD *)v8 + 2);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          uint64_t v10 = sub_10000566C(&qword_100709E50);
          uint64_t v11 = *(int *)(v10 + 64);
          uint64_t v12 = &v7[v11];
          uint64_t v13 = &v8[v11];
          uint64_t v14 = sub_1005E0970();
          uint64_t v15 = *(void *)(v14 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
          {
            uint64_t v16 = sub_10000566C(&qword_100709E58);
            memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
          }
          *(_OWORD *)&v7[*(int *)(v10 + 80)] = *(_OWORD *)&v8[*(int *)(v10 + 80)];
          goto LABEL_13;
        case 0xEu:
          uint64_t v17 = sub_10000566C(&qword_100709E60);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v7, v8, v17);
          uint64_t v18 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
          uint64_t v19 = &v7[v18];
          uint64_t v20 = &v8[v18];
          *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          v19[16] = v20[16];
          goto LABEL_13;
        case 0xFu:
          uint64_t v21 = sub_10000566C(&qword_100709E60);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v7, v8, v21);
          uint64_t v22 = sub_10000566C(&qword_100709E70);
          *(_OWORD *)&v7[*(int *)(v22 + 48)] = *(_OWORD *)&v8[*(int *)(v22 + 48)];
          goto LABEL_13;
        case 0x10u:
        case 0x11u:
          uint64_t v23 = sub_10000566C(&qword_100709E60);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v7, v8, v23);
          uint64_t v24 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
          uint64_t v25 = &v7[v24];
          uint64_t v26 = &v8[v24];
          *(void *)uint64_t v25 = *(void *)v26;
          *((_DWORD *)v25 + 2) = *((_DWORD *)v26 + 2);
LABEL_13:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1000F43D8()
{
  uint64_t result = type metadata accessor for ClientCommand(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[4] = v2;
    v2[5] = &unk_1005F2CA0;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_DWORD *sub_1000F4488(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v7 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (_DWORD *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unint64_t v6 = *(void *)a2;
      sub_1000E55A4(*(void *)a2);
      *(void *)a1 = v6;
      a1[2] = *(_DWORD *)(a2 + 8);
    }
    else
    {
      uint64_t v8 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v9 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v9;
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          *((void *)a1 + 3) = *(void *)(a2 + 24);
          a1[8] = *(_DWORD *)(a2 + 32);
          *(_DWORD *)((char *)a1 + 35) = *(_DWORD *)(a2 + 35);
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_24;
        case 1u:
          uint64_t v10 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v10;
          uint64_t v11 = *(void *)(a2 + 24);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          *((void *)a1 + 3) = v11;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 2u:
        case 8u:
          *(void *)a1 = *(void *)a2;
          a1[2] = *(_DWORD *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 3u:
        case 4u:
        case 5u:
          *(void *)a1 = *(void *)a2;
          a1[2] = *(_DWORD *)(a2 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 6u:
          *(void *)a1 = *(void *)a2;
          a1[2] = *(_DWORD *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          a1[6] = *(_DWORD *)(a2 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 7u:
          *(void *)a1 = *(void *)a2;
          a1[2] = *(_DWORD *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          a1[6] = *(_DWORD *)(a2 + 24);
          *((void *)a1 + 4) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 9u:
          *(void *)a1 = *(void *)a2;
          a1[2] = *(_DWORD *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v12 = sub_10000566C(&qword_100709E50);
          uint64_t v13 = *(int *)(v12 + 64);
          uint64_t v14 = (char *)a1 + v13;
          uint64_t v15 = (const void *)(a2 + v13);
          uint64_t v16 = sub_1005E0970();
          uint64_t v17 = *(void *)(v16 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
          {
            uint64_t v18 = sub_10000566C(&qword_100709E58);
            memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
          }
          uint64_t v40 = *(int *)(v12 + 80);
          uint64_t v41 = (uint64_t *)((char *)a1 + v40);
          uint64_t v42 = (uint64_t *)(a2 + v40);
          uint64_t v43 = *v42;
          unint64_t v44 = v42[1];
          sub_100008D24(*v42, v44);
          *uint64_t v41 = v43;
          v41[1] = v44;
          goto LABEL_24;
        case 0xAu:
        case 0xCu:
          unint64_t v19 = *(void *)a2;
          sub_100008D7C(*(void *)a2);
          *(void *)a1 = v19;
          goto LABEL_24;
        case 0xBu:
        case 0xDu:
          unint64_t v20 = *(void *)a2;
          sub_100008D7C(*(void *)a2);
          uint64_t v21 = *(void *)(a2 + 8);
          *(void *)a1 = v20;
          *((void *)a1 + 1) = v21;
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 0xEu:
          uint64_t v22 = sub_10000566C(&qword_100709E60);
          (*(void (**)(_DWORD *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
          uint64_t v23 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
          uint64_t v24 = (char *)a1 + v23;
          uint64_t v25 = (uint64_t *)(a2 + v23);
          v24[16] = *((unsigned char *)v25 + 16);
          uint64_t v26 = *v25;
          uint64_t v27 = v25[1];
          *(void *)uint64_t v24 = v26;
          *((void *)v24 + 1) = v27;
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 0xFu:
          uint64_t v28 = sub_10000566C(&qword_100709E60);
          (*(void (**)(_DWORD *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
          uint64_t v29 = *(int *)(sub_10000566C(&qword_100709E70) + 48);
          uint64_t v30 = (char *)a1 + v29;
          uint64_t v31 = a2 + v29;
          *(_WORD *)uint64_t v30 = *(_WORD *)v31;
          *((void *)v30 + 1) = *(void *)(v31 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 0x10u:
        case 0x11u:
          uint64_t v32 = sub_10000566C(&qword_100709E60);
          (*(void (**)(_DWORD *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
          uint64_t v33 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
          uint64_t v34 = (char *)a1 + v33;
          uint64_t v35 = a2 + v33;
          *(void *)uint64_t v34 = *(void *)v35;
          *((_DWORD *)v34 + 2) = *(_DWORD *)(v35 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 0x12u:
          uint64_t v36 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v36;
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_24;
        case 0x13u:
          *a1 = *(_DWORD *)a2;
          uint64_t v37 = *(void *)(a2 + 16);
          *((void *)a1 + 1) = *(void *)(a2 + 8);
          *((void *)a1 + 2) = v37;
          uint64_t v38 = *(void *)(a2 + 32);
          *((void *)a1 + 3) = *(void *)(a2 + 24);
          *((void *)a1 + 4) = v38;
          uint64_t v39 = *(void *)(a2 + 48);
          *((void *)a1 + 5) = *(void *)(a2 + 40);
          *((void *)a1 + 6) = v39;
          *((void *)a1 + 7) = *(void *)(a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_24:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, (const void *)a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
      uint64_t v45 = sub_10000566C(&qword_10070B308);
      *(_DWORD *)((char *)a1 + *(int *)(v45 + 48)) = *(_DWORD *)(a2 + *(int *)(v45 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unint64_t sub_1000F4C50(unint64_t *a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v2 = *a1;
    return sub_10007C4A4(v2);
  }
  else
  {
    type metadata accessor for ClientCommand(0);
    unint64_t result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
        swift_bridgeObjectRelease();
        goto LABEL_23;
      case 1:
      case 2:
      case 6:
      case 8:
        swift_bridgeObjectRelease();
        goto LABEL_27;
      case 3:
      case 4:
      case 5:
        goto LABEL_27;
      case 7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      case 9:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v7 = sub_10000566C(&qword_100709E50);
        uint64_t v8 = (char *)a1 + *(int *)(v7 + 64);
        uint64_t v9 = sub_1005E0970();
        uint64_t v10 = *(void *)(v9 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
          (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
        }
        uint64_t v11 = (uint64_t *)((char *)a1 + *(int *)(v7 + 80));
        uint64_t v12 = *v11;
        unint64_t v13 = v11[1];
        return sub_1000094D4(v12, v13);
      case 10:
      case 12:
        unint64_t v4 = *a1;
        return sub_10000952C(v4);
      case 11:
      case 13:
        sub_10000952C(*a1);
        goto LABEL_27;
      case 14:
        uint64_t v14 = sub_10000566C(&qword_100709E60);
        (*(void (**)(unint64_t *, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
        unint64_t v6 = &qword_100709E68;
        goto LABEL_20;
      case 15:
        uint64_t v15 = sub_10000566C(&qword_100709E60);
        (*(void (**)(unint64_t *, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
        sub_10000566C(&qword_100709E70);
        goto LABEL_27;
      case 16:
      case 17:
        uint64_t v5 = sub_10000566C(&qword_100709E60);
        (*(void (**)(unint64_t *, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
        unint64_t v6 = &qword_100709E78;
LABEL_20:
        sub_10000566C(v6);
        goto LABEL_27;
      case 18:
        swift_release();
        swift_release();
LABEL_23:
        return swift_release();
      case 19:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_27:
        unint64_t result = swift_bridgeObjectRelease();
        break;
      default:
        return result;
    }
  }
  return result;
}

_DWORD *sub_1000F5000(_DWORD *a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v4 = *(void *)a2;
    sub_1000E55A4(*(void *)a2);
    *(void *)a1 = v4;
    a1[2] = *(_DWORD *)(a2 + 8);
  }
  else
  {
    uint64_t v5 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v6;
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        a1[8] = *(_DWORD *)(a2 + 32);
        *(_DWORD *)((char *)a1 + 35) = *(_DWORD *)(a2 + 35);
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_22;
      case 1u:
        uint64_t v7 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v7;
        uint64_t v8 = *(void *)(a2 + 24);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((void *)a1 + 3) = v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 2u:
      case 8u:
        *(void *)a1 = *(void *)a2;
        a1[2] = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 3u:
      case 4u:
      case 5u:
        *(void *)a1 = *(void *)a2;
        a1[2] = *(_DWORD *)(a2 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 6u:
        *(void *)a1 = *(void *)a2;
        a1[2] = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        a1[6] = *(_DWORD *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 7u:
        *(void *)a1 = *(void *)a2;
        a1[2] = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        a1[6] = *(_DWORD *)(a2 + 24);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 9u:
        *(void *)a1 = *(void *)a2;
        a1[2] = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_10000566C(&qword_100709E50);
        uint64_t v10 = *(int *)(v9 + 64);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (const void *)(a2 + v10);
        uint64_t v13 = sub_1005E0970();
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        {
          uint64_t v15 = sub_10000566C(&qword_100709E58);
          memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
        uint64_t v37 = *(int *)(v9 + 80);
        uint64_t v38 = (uint64_t *)((char *)a1 + v37);
        uint64_t v39 = (uint64_t *)(a2 + v37);
        uint64_t v40 = *v39;
        unint64_t v41 = v39[1];
        sub_100008D24(*v39, v41);
        *uint64_t v38 = v40;
        v38[1] = v41;
        goto LABEL_22;
      case 0xAu:
      case 0xCu:
        unint64_t v16 = *(void *)a2;
        sub_100008D7C(*(void *)a2);
        *(void *)a1 = v16;
        goto LABEL_22;
      case 0xBu:
      case 0xDu:
        unint64_t v17 = *(void *)a2;
        sub_100008D7C(*(void *)a2);
        uint64_t v18 = *(void *)(a2 + 8);
        *(void *)a1 = v17;
        *((void *)a1 + 1) = v18;
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 0xEu:
        uint64_t v19 = sub_10000566C(&qword_100709E60);
        (*(void (**)(_DWORD *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        uint64_t v20 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (uint64_t *)(a2 + v20);
        v21[16] = *((unsigned char *)v22 + 16);
        uint64_t v23 = *v22;
        uint64_t v24 = v22[1];
        *(void *)uint64_t v21 = v23;
        *((void *)v21 + 1) = v24;
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 0xFu:
        uint64_t v25 = sub_10000566C(&qword_100709E60);
        (*(void (**)(_DWORD *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
        uint64_t v26 = *(int *)(sub_10000566C(&qword_100709E70) + 48);
        uint64_t v27 = (char *)a1 + v26;
        uint64_t v28 = a2 + v26;
        *(_WORD *)uint64_t v27 = *(_WORD *)v28;
        *((void *)v27 + 1) = *(void *)(v28 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 0x10u:
      case 0x11u:
        uint64_t v29 = sub_10000566C(&qword_100709E60);
        (*(void (**)(_DWORD *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
        uint64_t v30 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
        uint64_t v31 = (char *)a1 + v30;
        uint64_t v32 = a2 + v30;
        *(void *)uint64_t v31 = *(void *)v32;
        *((_DWORD *)v31 + 2) = *(_DWORD *)(v32 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 0x12u:
        uint64_t v33 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v33;
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_22;
      case 0x13u:
        *a1 = *(_DWORD *)a2;
        uint64_t v34 = *(void *)(a2 + 16);
        *((void *)a1 + 1) = *(void *)(a2 + 8);
        *((void *)a1 + 2) = v34;
        uint64_t v35 = *(void *)(a2 + 32);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((void *)a1 + 4) = v35;
        uint64_t v36 = *(void *)(a2 + 48);
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        *((void *)a1 + 6) = v36;
        *((void *)a1 + 7) = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_22:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(void *)(*(void *)(v5 - 8) + 64));
        break;
    }
    uint64_t v42 = sub_10000566C(&qword_10070B308);
    *(_DWORD *)((char *)a1 + *(int *)(v42 + 48)) = *(_DWORD *)(a2 + *(int *)(v42 + 48));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_DWORD *sub_1000F5778(_DWORD *a1, uint64_t a2)
{
  if (a1 != (_DWORD *)a2)
  {
    sub_1000F1ED0((uint64_t)a1, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unint64_t v4 = *(void *)a2;
      sub_1000E55A4(*(void *)a2);
      *(void *)a1 = v4;
      a1[2] = *(_DWORD *)(a2 + 8);
    }
    else
    {
      uint64_t v5 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *(void *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          a1[6] = *(_DWORD *)(a2 + 24);
          a1[7] = *(_DWORD *)(a2 + 28);
          int v6 = *(_DWORD *)(a2 + 32);
          *(_DWORD *)((char *)a1 + 35) = *(_DWORD *)(a2 + 35);
          a1[8] = v6;
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_23;
        case 1u:
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *(void *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          *((void *)a1 + 3) = *(void *)(a2 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 2u:
        case 8u:
          *(void *)a1 = *(void *)a2;
          a1[2] = *(_DWORD *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 3u:
        case 4u:
        case 5u:
          *(void *)a1 = *(void *)a2;
          a1[2] = *(_DWORD *)(a2 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 6u:
          *(void *)a1 = *(void *)a2;
          a1[2] = *(_DWORD *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          a1[6] = *(_DWORD *)(a2 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 7u:
          *(void *)a1 = *(void *)a2;
          a1[2] = *(_DWORD *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          a1[6] = *(_DWORD *)(a2 + 24);
          *((void *)a1 + 4) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 9u:
          *(void *)a1 = *(void *)a2;
          a1[2] = *(_DWORD *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v7 = sub_10000566C(&qword_100709E50);
          uint64_t v8 = *(int *)(v7 + 64);
          uint64_t v9 = (char *)a1 + v8;
          uint64_t v10 = (const void *)(a2 + v8);
          uint64_t v11 = sub_1005E0970();
          uint64_t v12 = *(void *)(v11 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
          {
            uint64_t v13 = sub_10000566C(&qword_100709E58);
            memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
          }
          uint64_t v29 = *(int *)(v7 + 80);
          uint64_t v30 = (uint64_t *)((char *)a1 + v29);
          uint64_t v31 = (uint64_t *)(a2 + v29);
          uint64_t v32 = *v31;
          unint64_t v33 = v31[1];
          sub_100008D24(*v31, v33);
          *uint64_t v30 = v32;
          v30[1] = v33;
          goto LABEL_23;
        case 0xAu:
        case 0xCu:
          unint64_t v14 = *(void *)a2;
          sub_100008D7C(*(void *)a2);
          *(void *)a1 = v14;
          goto LABEL_23;
        case 0xBu:
        case 0xDu:
          unint64_t v15 = *(void *)a2;
          sub_100008D7C(*(void *)a2);
          *(void *)a1 = v15;
          *((void *)a1 + 1) = *(void *)(a2 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 0xEu:
          uint64_t v16 = sub_10000566C(&qword_100709E60);
          (*(void (**)(_DWORD *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
          uint64_t v17 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
          uint64_t v18 = (char *)a1 + v17;
          uint64_t v19 = a2 + v17;
          *(void *)uint64_t v18 = *(void *)v19;
          uint64_t v20 = *(void *)(v19 + 8);
          v18[16] = *(unsigned char *)(v19 + 16);
          *((void *)v18 + 1) = v20;
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 0xFu:
          uint64_t v21 = sub_10000566C(&qword_100709E60);
          (*(void (**)(_DWORD *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
          uint64_t v22 = *(int *)(sub_10000566C(&qword_100709E70) + 48);
          uint64_t v23 = (char *)a1 + v22;
          uint64_t v24 = (char *)(a2 + v22);
          *uint64_t v23 = *v24;
          v23[1] = v24[1];
          *((void *)v23 + 1) = *((void *)v24 + 1);
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 0x10u:
        case 0x11u:
          uint64_t v25 = sub_10000566C(&qword_100709E60);
          (*(void (**)(_DWORD *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
          uint64_t v26 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
          uint64_t v27 = (char *)a1 + v26;
          uint64_t v28 = a2 + v26;
          *(void *)uint64_t v27 = *(void *)v28;
          *((_DWORD *)v27 + 2) = *(_DWORD *)(v28 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 0x12u:
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *(void *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_23;
        case 0x13u:
          *a1 = *(_DWORD *)a2;
          *((void *)a1 + 1) = *(void *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          *((void *)a1 + 3) = *(void *)(a2 + 24);
          *((void *)a1 + 4) = *(void *)(a2 + 32);
          *((void *)a1 + 5) = *(void *)(a2 + 40);
          *((void *)a1 + 6) = *(void *)(a2 + 48);
          *((void *)a1 + 7) = *(void *)(a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_23:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, (const void *)a2, *(void *)(*(void *)(v5 - 8) + 64));
          break;
      }
      uint64_t v34 = sub_10000566C(&qword_10070B308);
      *(_DWORD *)((char *)a1 + *(int *)(v34 + 48)) = *(_DWORD *)(a2 + *(int *)(v34 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1000F5F64(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 9u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        a1[2] = a2[2];
        uint64_t v7 = sub_10000566C(&qword_100709E50);
        uint64_t v8 = *(int *)(v7 + 64);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_1005E0970();
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          uint64_t v13 = sub_10000566C(&qword_100709E58);
          memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        *(_OWORD *)((char *)a1 + *(int *)(v7 + 80)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 80));
        goto LABEL_12;
      case 0xEu:
        uint64_t v14 = sub_10000566C(&qword_100709E60);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        uint64_t v15 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        v16[16] = v17[16];
        goto LABEL_12;
      case 0xFu:
        uint64_t v18 = sub_10000566C(&qword_100709E60);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
        uint64_t v19 = sub_10000566C(&qword_100709E70);
        *(_OWORD *)((char *)a1 + *(int *)(v19 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v19 + 48));
        goto LABEL_12;
      case 0x10u:
      case 0x11u:
        uint64_t v20 = sub_10000566C(&qword_100709E60);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
        uint64_t v21 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        *(void *)uint64_t v22 = *(void *)v23;
        *((_DWORD *)v22 + 2) = *((_DWORD *)v23 + 2);
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
    uint64_t v24 = sub_10000566C(&qword_10070B308);
    *(_DWORD *)((char *)a1 + *(int *)(v24 + 48)) = *(_DWORD *)((char *)a2 + *(int *)(v24 + 48));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1000F6384(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000F1ED0((uint64_t)a1, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 9u:
          *a1 = *a2;
          *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
          a1[2] = a2[2];
          uint64_t v7 = sub_10000566C(&qword_100709E50);
          uint64_t v8 = *(int *)(v7 + 64);
          uint64_t v9 = (char *)a1 + v8;
          uint64_t v10 = (char *)a2 + v8;
          uint64_t v11 = sub_1005E0970();
          uint64_t v12 = *(void *)(v11 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
          {
            uint64_t v13 = sub_10000566C(&qword_100709E58);
            memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
          }
          *(_OWORD *)((char *)a1 + *(int *)(v7 + 80)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 80));
          goto LABEL_13;
        case 0xEu:
          uint64_t v14 = sub_10000566C(&qword_100709E60);
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
          uint64_t v15 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
          uint64_t v16 = (char *)a1 + v15;
          uint64_t v17 = (char *)a2 + v15;
          *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
          v16[16] = v17[16];
          goto LABEL_13;
        case 0xFu:
          uint64_t v18 = sub_10000566C(&qword_100709E60);
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
          uint64_t v19 = sub_10000566C(&qword_100709E70);
          *(_OWORD *)((char *)a1 + *(int *)(v19 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v19 + 48));
          goto LABEL_13;
        case 0x10u:
        case 0x11u:
          uint64_t v20 = sub_10000566C(&qword_100709E60);
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
          uint64_t v21 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
          uint64_t v22 = (char *)a1 + v21;
          uint64_t v23 = (char *)a2 + v21;
          *(void *)uint64_t v22 = *(void *)v23;
          *((_DWORD *)v22 + 2) = *((_DWORD *)v23 + 2);
LABEL_13:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
          break;
      }
      uint64_t v24 = sub_10000566C(&qword_10070B308);
      *(_DWORD *)((char *)a1 + *(int *)(v24 + 48)) = *(_DWORD *)((char *)a2 + *(int *)(v24 + 48));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1000F67C8()
{
  uint64_t result = type metadata accessor for ClientCommand(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[4] = v2;
    v2[5] = &unk_1005F2CC8;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1000F6870(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientCommand(0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v16 = sub_10000566C(qword_10070C720);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 56)];
  sub_1000F1E68(a1, (uint64_t)v19, type metadata accessor for TaskHistory.Running);
  sub_1000F1E68(a2, v20, type metadata accessor for TaskHistory.Running);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1000F1E68((uint64_t)v19, (uint64_t)v15, type metadata accessor for TaskHistory.Running);
    int v25 = *((_DWORD *)v15 + 2);
    uint64_t v26 = *(int *)(sub_10000566C(&qword_10070B6A0) + 64);
    uint64_t v27 = (uint64_t)&v15[v26];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v28 = *(void *)v15;
      uint64_t v29 = *(void *)v20;
      int v30 = *(_DWORD *)(v20 + 8);
      sub_1000F1F30(v27, (uint64_t)v9, type metadata accessor for ClientCommand);
      sub_1000F1F30(v20 + v26, (uint64_t)v7, type metadata accessor for ClientCommand);
      if (static DownloadRequest.ID.__derived_struct_equals(_:_:)(v28, v29) && v25 == v30)
      {
        char v24 = static ClientCommand.__derived_enum_equals(_:_:)(v9, v7);
        sub_1000F1ED0((uint64_t)v7, type metadata accessor for ClientCommand);
        sub_1000F1ED0((uint64_t)v9, type metadata accessor for ClientCommand);
        goto LABEL_13;
      }
      sub_1000F1ED0((uint64_t)v7, type metadata accessor for ClientCommand);
      sub_1000F1ED0((uint64_t)v9, type metadata accessor for ClientCommand);
      goto LABEL_16;
    }
    sub_1000F1ED0((uint64_t)&v15[v26], type metadata accessor for ClientCommand);
LABEL_9:
    sub_100007A48((uint64_t)v19, qword_10070C720);
LABEL_17:
    char v24 = 0;
    return v24 & 1;
  }
  sub_1000F1E68((uint64_t)v19, (uint64_t)v13, type metadata accessor for TaskHistory.Running);
  int v21 = *((_DWORD *)v13 + 1);
  unint64_t v22 = *((void *)v13 + 1);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10007C4A4(v22);
    goto LABEL_9;
  }
  unint64_t v23 = *(void *)(v20 + 8);
  if (*(_DWORD *)v13 != *(_DWORD *)v20 || v21 != *(_DWORD *)(v20 + 4))
  {
    sub_10007C4A4(*(void *)(v20 + 8));
    sub_10007C4A4(v22);
LABEL_16:
    sub_1000F1ED0((uint64_t)v19, type metadata accessor for TaskHistory.Running);
    goto LABEL_17;
  }
  char v24 = static Action.__derived_enum_equals(_:_:)(v22, *(void *)(v20 + 8));
  sub_10007C4A4(v23);
  sub_10007C4A4(v22);
LABEL_13:
  sub_1000F1ED0((uint64_t)v19, type metadata accessor for TaskHistory.Running);
  return v24 & 1;
}

uint64_t sub_1000F6C44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientCommand(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = sub_10000566C(&qword_10070B300);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t)&v16[*(int *)(v14 + 56)];
  sub_1000F1E68(a1, (uint64_t)v16, type metadata accessor for TaskHistory.Previous);
  sub_1000F1E68(a2, v17, type metadata accessor for TaskHistory.Previous);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1000F1E68((uint64_t)v16, (uint64_t)v12, type metadata accessor for TaskHistory.Previous);
    uint64_t v24 = *(int *)(sub_10000566C(&qword_10070B308) + 48);
    int v25 = *(_DWORD *)&v12[v24];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      int v26 = *(_DWORD *)(v17 + v24);
      sub_1000F1F30(v17, (uint64_t)v6, type metadata accessor for ClientCommand);
      char v27 = static ClientCommand.__derived_enum_equals(_:_:)(v12, v6);
      sub_1000F1ED0((uint64_t)v6, type metadata accessor for ClientCommand);
      sub_1000F1ED0((uint64_t)v12, type metadata accessor for ClientCommand);
      if (v27)
      {
        BOOL v23 = v25 == v26;
        goto LABEL_11;
      }
      goto LABEL_15;
    }
    sub_1000F1ED0((uint64_t)v12, type metadata accessor for ClientCommand);
LABEL_8:
    sub_100007A48((uint64_t)v16, &qword_10070B300);
    return 0;
  }
  sub_1000F1E68((uint64_t)v16, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
  unint64_t v18 = *(void *)v10;
  int v19 = *((_DWORD *)v10 + 2);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10007C4A4(v18);
    goto LABEL_8;
  }
  unint64_t v20 = *(void *)v17;
  int v21 = *(_DWORD *)(v17 + 8);
  char v22 = static Action.__derived_enum_equals(_:_:)(v18, v20);
  sub_10007C4A4(v20);
  sub_10007C4A4(v18);
  if ((v22 & 1) == 0)
  {
LABEL_15:
    sub_1000F1ED0((uint64_t)v16, type metadata accessor for TaskHistory.Previous);
    return 0;
  }
  BOOL v23 = v19 == v21;
LABEL_11:
  uint64_t v28 = v23;
  sub_1000F1ED0((uint64_t)v16, type metadata accessor for TaskHistory.Previous);
  return v28;
}

uint64_t sub_1000F6F78@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  char v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v10);
  unint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t sub_1000F7220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v9[3];
  uint64_t v11 = v9[4];
  uint64_t v12 = v9[5];
  uint64_t v19 = v5;
  uint64_t v20 = v10;
  uint64_t v21 = v11;
  uint64_t v22 = v12;
  uint64_t v13 = type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Command();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  *(_DWORD *)uint64_t v15 = v4;
  uint64_t v19 = v5;
  uint64_t v20 = v10;
  uint64_t v21 = v11;
  uint64_t v22 = v12;
  uint64_t v16 = type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Command();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v15[*(int *)(v16 + 52)], v8, v5);
  sub_1005E21F0();
  return sub_1005E21A0();
}

uint64_t sub_1000F73B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = a1;
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v10[4];
  uint64_t v11 = v10[5];
  uint64_t v19 = v10[2];
  uint64_t v9 = v19;
  uint64_t v20 = v5;
  uint64_t v21 = v12;
  uint64_t v22 = v11;
  uint64_t v13 = type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Action();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  *(_DWORD *)uint64_t v15 = v4;
  uint64_t v19 = v9;
  uint64_t v20 = v5;
  uint64_t v21 = v12;
  uint64_t v22 = v11;
  uint64_t v16 = type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Action();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v15[*(int *)(v16 + 52)], v8, v5);
  sub_1005E21F0();
  return sub_1005E21A0();
}

uint64_t sub_1000F7544@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v25 = a7;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v13 = type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Command();
  uint64_t v14 = sub_1005E28C0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v24 - v16;
  uint64_t v31 = a2;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  int v30 = a1;
  sub_1005E21F0();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1005E1FF0();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v13) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v19 = *(void *)(a3 - 8);
    uint64_t v20 = 1;
    uint64_t v21 = v25;
  }
  else
  {
    uint64_t v19 = *(void *)(a3 - 8);
    uint64_t v22 = v25;
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 16))(v25, &v17[*(int *)(v13 + 52)], a3);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v13);
    uint64_t v20 = 0;
    uint64_t v21 = v22;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v21, v20, 1, a3);
}

uint64_t sub_1000F77F4@<X0>(int a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v25 = a7;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v13 = type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Action();
  uint64_t v14 = sub_1005E28C0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v24 - v16;
  uint64_t v31 = a2;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  int v30 = a1;
  sub_1005E21F0();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1005E1FF0();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v13) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v19 = *(void *)(a4 - 8);
    uint64_t v20 = 1;
    uint64_t v21 = v25;
  }
  else
  {
    uint64_t v19 = *(void *)(a4 - 8);
    uint64_t v22 = v25;
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 16))(v25, &v17[*(int *)(v13 + 52)], a4);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v13);
    uint64_t v20 = 0;
    uint64_t v21 = v22;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v21, v20, 1, a4);
}

uint64_t sub_1000F7AA4(_DWORD *a1, _DWORD *a2)
{
  if (*a1 == *a2)
  {
    type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Command();
    char v2 = sub_1005E1BC0();
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

uint64_t sub_1000F7B28(_DWORD *a1, _DWORD *a2)
{
  if (*a1 == *a2)
  {
    type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Action();
    char v2 = sub_1005E1BC0();
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

uint64_t sub_1000F7BAC(_DWORD *a1, _DWORD *a2)
{
  return sub_1000F7AA4(a1, a2);
}

uint64_t sub_1000F7BBC(_DWORD *a1, _DWORD *a2)
{
  return sub_1000F7B28(a1, a2);
}

uint64_t sub_1000F7BCC()
{
  type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Command();
  swift_getWitnessTable();
  if (sub_1005E2200())
  {
    type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Action();
    swift_getWitnessTable();
    char v0 = sub_1005E2200();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t sub_1000F7CD0()
{
  return sub_1000F7BCC();
}

uint64_t sub_1000F7CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a7;
  uint64_t v30 = a8;
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1000EFB64((void (*)(void *__return_ptr, uint64_t))sub_1000F88C4, (uint64_t)v26, a1, (uint64_t)v39);
  swift_bridgeObjectRelease();
  v25[2] = a5;
  v25[3] = a6;
  v25[4] = a7;
  v25[5] = a8;
  v25[6] = a1;
  v25[7] = a2;
  v25[8] = a3;
  v25[9] = a4;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1000EFB90((void (*)(void *__return_ptr, uint64_t))sub_1000F88F0, (uint64_t)v25, a2, (uint64_t)v38);
  swift_bridgeObjectRelease();
  uint64_t v36 = 0;
  unint64_t v37 = 0xE000000000000000;
  sub_1005E2C80(39);
  swift_bridgeObjectRelease();
  uint64_t v36 = 0x20676E696E6E7572;
  unint64_t v37 = 0xE900000000000028;
  uint64_t v35 = *(void **)(a1 + 16);
  v40._countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v40);
  swift_bridgeObjectRelease();
  v41._countAndFlagsBits = 2065709609;
  v41._object = (void *)0xE400000000000000;
  sub_1005E1E30(v41);
  uint64_t v35 = v16;
  sub_10000566C(&qword_100709F58);
  sub_10001C548();
  uint64_t v18 = sub_1005E1A80();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  v42._countAndFlagsBits = v18;
  v42._object = v20;
  sub_1005E1E30(v42);
  swift_bridgeObjectRelease();
  v43._countAndFlagsBits = 0x7472617473202C7DLL;
  v43._object = (void *)0xED000028203A6465;
  sub_1005E1E30(v43);
  uint64_t v35 = *(void **)(a2 + 16);
  v44._countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v44);
  swift_bridgeObjectRelease();
  v45._countAndFlagsBits = 2065709609;
  v45._object = (void *)0xE400000000000000;
  sub_1005E1E30(v45);
  uint64_t v35 = v17;
  uint64_t v21 = sub_1005E1A80();
  BOOL v23 = v22;
  swift_bridgeObjectRelease();
  v46._countAndFlagsBits = v21;
  v46._object = v23;
  sub_1005E1E30(v46);
  swift_bridgeObjectRelease();
  v47._countAndFlagsBits = 125;
  v47._object = (void *)0xE100000000000000;
  sub_1005E1E30(v47);
  return v36;
}

uint64_t sub_1000F7F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t *a7@<X8>, uint64_t a8)
{
  uint64_t v48 = a6;
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v49 = a7;
  uint64_t v47 = a8;
  uint64_t v11 = sub_1005E28C0();
  uint64_t v45 = *(void *)(v11 - 8);
  uint64_t v46 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v14 = sub_1005E28C0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v43 - v16;
  uint64_t v18 = type metadata accessor for TaskHistory.Running(0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F8A2C(a1, (uint64_t)v20, type metadata accessor for TaskHistory.Running);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    int v21 = *(_DWORD *)v20;
    int v22 = *((_DWORD *)v20 + 1);
    sub_10007C4A4(*((void *)v20 + 1));
    uint64_t v24 = v47;
    uint64_t v23 = v48;
    uint64_t v25 = sub_1000F77F4(v22, v44, a4, a5, v48, v47, (uint64_t)v13);
    __chkstk_darwin(v25);
    *(&v43 - 4) = a4;
    *(&v43 - 3) = a5;
    *(&v43 - 2) = v23;
    *(&v43 - 1) = v24;
    uint64_t v26 = v46;
    sub_1000F6F78((void (*)(char *, char *))sub_1000F895C, (uint64_t)(&v43 - 6), (uint64_t)&type metadata for Never, (uint64_t)&type metadata for String, v27, (uint64_t)&v50);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v26);
    if (v51) {
      uint64_t v28 = v50;
    }
    else {
      uint64_t v28 = 15932;
    }
    if (v51) {
      uint64_t v29 = (void *)v51;
    }
    else {
      uint64_t v29 = (void *)0xE200000000000000;
    }
    int v52 = v21;
    uint64_t v50 = sub_1005E3230();
    unint64_t v51 = v30;
    v54._countAndFlagsBits = 2304032;
    v54._object = (void *)0xE300000000000000;
    sub_1005E1E30(v54);
    int v52 = v22;
    v55._countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v55);
    swift_bridgeObjectRelease();
    v56._countAndFlagsBits = 8233;
    v56._object = (void *)0xE200000000000000;
    sub_1005E1E30(v56);
    v57._countAndFlagsBits = v28;
    v57._object = v29;
    sub_1005E1E30(v57);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v32 = v50;
    unint64_t v33 = v51;
  }
  else
  {
    uint64_t v45 = *(void *)v20;
    LODWORD(v46) = *((_DWORD *)v20 + 2);
    uint64_t v34 = v47;
    uint64_t v35 = v48;
    uint64_t v36 = sub_1000F7544(v46, v43, a4, a5, v48, v47, (uint64_t)v17);
    __chkstk_darwin(v36);
    *(&v43 - 4) = a4;
    *(&v43 - 3) = a5;
    *(&v43 - 2) = v35;
    *(&v43 - 1) = v34;
    sub_1000F6F78((void (*)(char *, char *))sub_1000F8974, (uint64_t)(&v43 - 6), (uint64_t)&type metadata for Never, (uint64_t)&type metadata for String, v37, (uint64_t)&v50);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if (v51) {
      uint64_t v38 = v50;
    }
    else {
      uint64_t v38 = 15932;
    }
    if (v51) {
      uint64_t v39 = (void *)v51;
    }
    else {
      uint64_t v39 = (void *)0xE200000000000000;
    }
    uint64_t v40 = (uint64_t)&v20[*(int *)(sub_10000566C(&qword_10070B6A0) + 64)];
    uint64_t v50 = 0;
    unint64_t v51 = 0xE000000000000000;
    unint64_t v41 = CommandID.tag.getter(v45);
    LOBYTE(v52) = v41;
    int v53 = HIDWORD(v41);
    sub_1005E2E90();
    v58._countAndFlagsBits = 2304032;
    v58._object = (void *)0xE300000000000000;
    sub_1005E1E30(v58);
    int v52 = v46;
    v59._countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v59);
    swift_bridgeObjectRelease();
    v60._countAndFlagsBits = 8233;
    v60._object = (void *)0xE200000000000000;
    sub_1005E1E30(v60);
    v61._countAndFlagsBits = v38;
    v61._object = v39;
    sub_1005E1E30(v61);
    swift_bridgeObjectRelease();
    uint64_t v32 = v50;
    unint64_t v33 = v51;
    uint64_t result = sub_1000F898C(v40);
  }
  Swift::String v42 = v49;
  *uint64_t v49 = v32;
  v42[1] = v33;
  return result;
}

uint64_t sub_1000F8454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t *a7@<X8>, uint64_t a8)
{
  uint64_t v43 = a6;
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v44 = a7;
  uint64_t v42 = a8;
  uint64_t v11 = sub_1005E28C0();
  uint64_t v41 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t v14 = sub_1005E28C0();
  uint64_t v40 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v38 - v15;
  uint64_t v17 = type metadata accessor for TaskHistory.Previous(0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F8A2C(a1, (uint64_t)v19, type metadata accessor for TaskHistory.Previous);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    int v20 = *((_DWORD *)v19 + 2);
    sub_10007C4A4(*(void *)v19);
    uint64_t v22 = v42;
    uint64_t v21 = v43;
    uint64_t v23 = sub_1000F77F4(v20, v38, a4, a5, v43, v42, (uint64_t)v13);
    __chkstk_darwin(v23);
    *(&v38 - 4) = a4;
    *(&v38 - 3) = a5;
    *(&v38 - 2) = v21;
    *(&v38 - 1) = v22;
    sub_1000F6F78((void (*)(char *, char *))sub_1000F895C, (uint64_t)(&v38 - 6), (uint64_t)&type metadata for Never, (uint64_t)&type metadata for String, v24, (uint64_t)&v45);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v11);
    if (v46) {
      uint64_t v25 = v45;
    }
    else {
      uint64_t v25 = 15932;
    }
    if (v46) {
      uint64_t v26 = (void *)v46;
    }
    else {
      uint64_t v26 = (void *)0xE200000000000000;
    }
    uint64_t v45 = 9000;
    unint64_t v46 = 0xE200000000000000;
    int v47 = v20;
    v48._countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v48);
    swift_bridgeObjectRelease();
    v49._countAndFlagsBits = 8233;
    v49._object = (void *)0xE200000000000000;
    sub_1005E1E30(v49);
    v50._countAndFlagsBits = v25;
    v50._object = v26;
    sub_1005E1E30(v50);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v28 = v45;
    unint64_t v29 = v46;
  }
  else
  {
    int v30 = *(_DWORD *)&v19[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
    uint64_t v32 = v42;
    uint64_t v31 = v43;
    uint64_t v33 = sub_1000F7544(v30, v39, a4, a5, v43, v42, (uint64_t)v16);
    __chkstk_darwin(v33);
    *(&v38 - 4) = a4;
    *(&v38 - 3) = a5;
    *(&v38 - 2) = v31;
    *(&v38 - 1) = v32;
    sub_1000F6F78((void (*)(char *, char *))sub_1000F8974, (uint64_t)(&v38 - 6), (uint64_t)&type metadata for Never, (uint64_t)&type metadata for String, v34, (uint64_t)&v45);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v14);
    if (v46) {
      uint64_t v35 = v45;
    }
    else {
      uint64_t v35 = 15932;
    }
    if (v46) {
      uint64_t v36 = (void *)v46;
    }
    else {
      uint64_t v36 = (void *)0xE200000000000000;
    }
    uint64_t v45 = 9000;
    unint64_t v46 = 0xE200000000000000;
    int v47 = v30;
    v51._countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v51);
    swift_bridgeObjectRelease();
    v52._countAndFlagsBits = 8233;
    v52._object = (void *)0xE200000000000000;
    sub_1005E1E30(v52);
    v53._countAndFlagsBits = v35;
    v53._object = v36;
    sub_1005E1E30(v53);
    swift_bridgeObjectRelease();
    uint64_t v28 = v45;
    unint64_t v29 = v46;
    uint64_t result = sub_1000F898C((uint64_t)v19);
  }
  uint64_t v37 = v44;
  *uint64_t v44 = v28;
  v37[1] = v29;
  return result;
}

uint64_t sub_1000F88AC(uint64_t *a1)
{
  return sub_1000F7CF0(*v1, v1[1], v1[2], v1[3], a1[2], a1[3], a1[4], a1[5]);
}

uint64_t sub_1000F88C4(uint64_t a1, uint64_t a2)
{
  return sub_1000F891C(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, uint64_t))sub_1000F7F78);
}

uint64_t sub_1000F88F0(uint64_t a1, uint64_t a2)
{
  return sub_1000F891C(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, uint64_t))sub_1000F8454);
}

uint64_t sub_1000F891C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, void, void, void, void, void, uint64_t))
{
  return a3(a1, v3[6], v3[7], v3[8], v3[9], v3[2], v3[3], v3[4], v3[5], a2);
}

uint64_t sub_1000F895C@<X0>(void *a1@<X8>)
{
  return sub_1000F8A94(a1);
}

uint64_t sub_1000F8974@<X0>(void *a1@<X8>)
{
  return sub_1000F8AE8(a1);
}

uint64_t sub_1000F898C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClientCommand(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Command()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap.Action()
{
  return swift_getGenericMetadata();
}

BOOL sub_1000F8A18(_DWORD *a1)
{
  return *a1 == *(_DWORD *)(v1 + 48);
}

uint64_t sub_1000F8A2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000F8A94@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1005E3240();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1000F8AE8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1005E3240();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1000F8B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_1000F8B44()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1000F8BE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if ((v5 | 3uLL) > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 4) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) > 0x18)
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~(v5 | 3)));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 4) & ~v5, ((unint64_t)a2 + v5 + 4) & ~v5);
  }
  return v3;
}

uint64_t sub_1000F8CCC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((a1 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));
}

_DWORD *sub_1000F8D08(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_DWORD *sub_1000F8D78(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_DWORD *sub_1000F8DE8(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_DWORD *sub_1000F8E58(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1000F8EC8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = ((v6 + 4) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 4) & ~v6);
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_1000F9044(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  size_t v9 = ((v8 + 4) & ~v8) + *(void *)(v6 + 64);
  BOOL v10 = a3 >= v7;
  unsigned int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v9 < 4)
    {
      int v14 = (v13 >> (8 * v9)) + 1;
      if (v9)
      {
        int v16 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v9] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1000F9278);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v17 = (unint64_t)&a1[v8 + 4] & ~v8;
        uint64_t v18 = *(void (**)(unint64_t))(v6 + 56);
        v18(v17);
      }
      return;
  }
}

uint64_t sub_1000F92A0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1000F9340(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if ((v5 | 3uLL) > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 4) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 0x18)
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~(v5 | 3)));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 4) & ~v5, ((unint64_t)a2 + v5 + 4) & ~v5);
  }
  return v3;
}

uint64_t sub_1000F9428(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

_DWORD *sub_1000F9464(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_DWORD *sub_1000F94D4(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_DWORD *sub_1000F9544(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_DWORD *sub_1000F95B4(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1000F9624(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = ((v6 + 4) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 4) & ~v6);
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_1000F97A0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  size_t v9 = ((v8 + 4) & ~v8) + *(void *)(v6 + 64);
  BOOL v10 = a3 >= v7;
  unsigned int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v9 < 4)
    {
      int v14 = (v13 >> (8 * v9)) + 1;
      if (v9)
      {
        int v16 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v9] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1000F99D4);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v17 = (unint64_t)&a1[v8 + 4] & ~v8;
        uint64_t v18 = *(void (**)(unint64_t))(v6 + 56);
        v18(v17);
      }
      return;
  }
}

uint64_t sub_1000F99FC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1000F9A48(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1000F9AA0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1000F9B30(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for TaskHistoryWithCustomIDs()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for TaskHistoryWithCustomIDs.CustomIDMap()
{
  return swift_getGenericMetadata();
}

BOOL sub_1000F9BB8(_DWORD *a1)
{
  return sub_1000F8A18(a1);
}

uint64_t getEnumTagSinglePayload for TaskScheduling.Item(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TaskScheduling.Item(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TaskScheduling.Item()
{
  return &type metadata for TaskScheduling.Item;
}

ValueMetadata *type metadata accessor for TaskScheduling()
{
  return &type metadata for TaskScheduling;
}

uint64_t getEnumTagSinglePayload for PCG32Random(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PCG32Random(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TaskScheduling.IndexAndWeight()
{
  return &type metadata for TaskScheduling.IndexAndWeight;
}

Swift::Int sub_1000F9C98()
{
  Swift::UInt v1 = *v0;
  Swift::UInt64 v2 = v0[1];
  sub_1005E33F0();
  sub_1005E3410(v1);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v2;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_1005E3450(v3);
  return sub_1005E3470();
}

void sub_1000F9CF8()
{
  Swift::UInt64 v1 = v0[1];
  sub_1005E3410(*v0);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v1;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_1005E3450(v2);
}

Swift::Int sub_1000F9D38()
{
  Swift::UInt v1 = *v0;
  Swift::UInt64 v2 = v0[1];
  sub_1005E33F0();
  sub_1005E3410(v1);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v2;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_1005E3450(v3);
  return sub_1005E3470();
}

BOOL sub_1000F9D94(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

unint64_t sub_1000F9DC4()
{
  unint64_t result = qword_10070C928;
  if (!qword_10070C928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C928);
  }
  return result;
}

uint64_t sub_1000F9E18@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, __int16 a5@<W4>, uint64_t a6@<X8>)
{
  *(void *)a6 = sub_10009A7D4((uint64_t)&off_1006BA600);
  *(unsigned char *)(a6 + 8) = 0;
  *(void *)(a6 + 128) = 0;
  *(unsigned char *)(a6 + 136) = 1;
  int v12 = *(_DWORD *)(a1 + 32);
  long long v13 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a6 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(a6 + 32) = v13;
  *(_DWORD *)(a6 + 48) = v12;
  *(void *)(a6 + 56) = &type metadata for CountUnreadMessages;
  sub_10003BC88();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1005E2BF0();
  *(_DWORD *)(a6 + 104) = a2;
  *(void *)(a6 + 112) = a3;
  *(unsigned char *)(a6 + 120) = a4 & 1;
  *(unsigned char *)(a6 + 121) = a5 & 1;
  *(unsigned char *)(a6 + 122) = HIBYTE(a5) & 1;
  return result;
}

Swift::Int sub_1000F9F00()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA420);
  qword_100761710 = result;
  return result;
}

uint64_t sub_1000F9F28()
{
  if (*(_DWORD *)(v0 + 104) < 2u
    || *(unsigned char *)(v0 + 122) == 1 && ((*(unsigned char *)(v0 + 120) & 1) != 0 || *(uint64_t *)(v0 + 112) > 2843))
  {
    return 0;
  }
  sub_100063E18();
  static MessageIdentifier.... infix(_:_:)();
  return v2;
}

uint64_t sub_1000F9FBC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v51 - v7;
  uint64_t v9 = sub_1005E0ED0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  long long v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unsigned int v15 = (char *)&v51 - v14;
  uint64_t v16 = sub_1000F9F28();
  unint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  if ((v18 & 1) == 0)
  {
    uint64_t v19 = v16;
    v17(v15, a1, v9);
    sub_1000FCDE0(a1, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_10003C004(v1, (uint64_t)&v60);
    int v20 = sub_1005E0EB0();
    os_log_type_t v21 = sub_1005E25C0();
    int v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v59 = v55;
      *(_DWORD *)uint64_t v23 = 68159747;
      LODWORD(v57) = 2;
      LODWORD(v54) = v22;
      os_log_t v53 = v20;
      sub_1005E2960();
      *(_WORD *)(v23 + 8) = 256;
      uint64_t v24 = *(int *)(v3 + 20);
      uint64_t v56 = v9;
      uint64_t v25 = &v8[v24];
      LOBYTE(v57) = v8[v24];
      sub_1005E2960();
      *(_WORD *)(v23 + 11) = 2082;
      uint64_t v52 = v19;
      uint64_t v27 = *((void *)v25 + 1);
      unint64_t v26 = *((void *)v25 + 2);
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_1000C6914(v27, v26, &v59);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 21) = 1040;
      LODWORD(v57) = 2;
      sub_1005E2960();
      *(_WORD *)(v23 + 27) = 512;
      LOWORD(v57) = *((_WORD *)v25 + 12);
      sub_1005E2960();
      *(_WORD *)(v23 + 31) = 2160;
      uint64_t v57 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v23 + 41) = 2085;
      int v28 = *((_DWORD *)v25 + 10);
      uint64_t v57 = *((void *)v25 + 4);
      int v58 = v28;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1005E1CC0();
      uint64_t v57 = sub_1000C6914(v29, v30, &v59);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1000FCE48((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v23 + 51) = 2082;
      uint64_t v57 = v52;
      uint64_t v31 = sub_10000566C(&qword_10070A9B8);
      uint64_t v32 = MessageIdentifierRange.debugDescription.getter(v31);
      uint64_t v57 = sub_1000C6914(v32, v33, &v59);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 61) = 2048;
      if (v63) {
        uint64_t v34 = 0;
      }
      else {
        uint64_t v34 = v62;
      }
      sub_10003C060((uint64_t)&v60);
      uint64_t v57 = v34;
      sub_1005E2960();
      os_log_t v35 = v53;
      _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v54, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task querying in UIDs %{public}s. Server unread count %ld", (uint8_t *)v23, 0x47u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v36 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
      uint64_t v37 = v15;
      goto LABEL_9;
    }
    sub_10003C060((uint64_t)&v60);
    sub_1000FCE48((uint64_t)v8, type metadata accessor for MailboxTaskLogger);

    uint64_t v36 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    uint64_t v37 = v15;
LABEL_12:
    uint64_t v49 = v9;
    return v36(v37, v49);
  }
  v17(v13, a1, v9);
  sub_1000FCDE0(a1, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v38 = sub_1005E0EB0();
  os_log_type_t v39 = sub_1005E25C0();
  int v40 = v39;
  if (!os_log_type_enabled(v38, v39))
  {
    sub_1000FCE48((uint64_t)v6, type metadata accessor for MailboxTaskLogger);

    uint64_t v36 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    uint64_t v37 = v13;
    goto LABEL_12;
  }
  uint64_t v41 = swift_slowAlloc();
  LODWORD(v55) = v40;
  uint64_t v42 = v41;
  uint64_t v54 = swift_slowAlloc();
  uint64_t v57 = v54;
  *(_DWORD *)uint64_t v42 = 68159235;
  LODWORD(v60) = 2;
  uint64_t v56 = v9;
  sub_1005E2960();
  *(_WORD *)(v42 + 8) = 256;
  uint64_t v43 = &v6[*(int *)(v3 + 20)];
  LOBYTE(v60) = *v43;
  sub_1005E2960();
  *(_WORD *)(v42 + 11) = 2082;
  uint64_t v45 = *((void *)v43 + 1);
  unint64_t v44 = *((void *)v43 + 2);
  swift_bridgeObjectRetain();
  uint64_t v60 = sub_1000C6914(v45, v44, &v57);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  *(_WORD *)(v42 + 21) = 1040;
  LODWORD(v60) = 2;
  sub_1005E2960();
  *(_WORD *)(v42 + 27) = 512;
  LOWORD(v60) = *((_WORD *)v43 + 12);
  sub_1005E2960();
  *(_WORD *)(v42 + 31) = 2160;
  uint64_t v60 = 0x786F626C69616DLL;
  sub_1005E2960();
  *(_WORD *)(v42 + 41) = 2085;
  int v46 = *((_DWORD *)v43 + 10);
  uint64_t v60 = *((void *)v43 + 4);
  int v61 = v46;
  swift_bridgeObjectRetain();
  uint64_t v47 = sub_1005E1CC0();
  uint64_t v60 = sub_1000C6914(v47, v48, &v57);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  sub_1000FCE48((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
  _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v55, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. Not querying server.", (uint8_t *)v42, 0x33u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  uint64_t v36 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  uint64_t v37 = v13;
LABEL_9:
  uint64_t v49 = v56;
  return v36(v37, v49);
}

uint64_t sub_1000FA7D4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v37 - v13;
  unsigned int v15 = *(_DWORD *)(v3 + 104);
  if (v15 < 2 || *(unsigned char *)(v3 + 122) == 1 && ((*(unsigned char *)(v3 + 120) & 1) != 0 || *(uint64_t *)(v3 + 112) > 2843))
  {
LABEL_16:
    uint64_t v25 = sub_10000566C(&qword_10070CA00);
    return (*(uint64_t (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a3, 1, 1, v25);
  }
  else
  {
    unsigned int v47 = v15 - 1;
    int v48 = 1;
    unint64_t v41 = sub_100063E18();
    static MessageIdentifier.... infix(_:_:)();
    uint64_t v16 = v49;
    unint64_t v17 = sub_1001A9E5C(a2);
    uint64_t v18 = v17[2];
    if (v18)
    {
      uint64_t v38 = v3;
      os_log_type_t v39 = v17;
      int v40 = a3;
      uint64_t v19 = 0;
      uint64_t v45 = v17 + 4;
      uint64_t v46 = a1;
      uint64_t v20 = *(void *)(a1 + 16);
      uint64_t v43 = v18;
      uint64_t v44 = v9;
      uint64_t v42 = v20;
      do
      {
        if (v20)
        {
          int v21 = *((_DWORD *)v45 + v19);
          uint64_t v22 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
          swift_bridgeObjectRetain();
          uint64_t v23 = *(void *)(v9 + 72);
          while (1)
          {
            sub_1000FCDE0(v22, (uint64_t)v14, type metadata accessor for TaskHistory.Previous);
            sub_1000FCDE0((uint64_t)v14, (uint64_t)v12, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              sub_1000FCE48((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
            }
            else
            {
              int v24 = *(_DWORD *)&v12[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
              sub_1000FCE48((uint64_t)v12, type metadata accessor for ClientCommand);
              if (v24 == v21)
              {
                sub_1000FCE48((uint64_t)v14, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                a3 = v40;
                goto LABEL_16;
              }
            }
            sub_1000FCE48((uint64_t)v14, type metadata accessor for TaskHistory.Previous);
            v22 += v23;
            if (!--v20)
            {
              a1 = v46;
              swift_bridgeObjectRelease();
              uint64_t v18 = v43;
              uint64_t v9 = v44;
              uint64_t v20 = v42;
              break;
            }
          }
        }
        ++v19;
      }
      while (v19 != v18);
      swift_bridgeObjectRelease();
      a3 = v40;
      uint64_t v4 = v38;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v27 = swift_allocObject();
    sub_10000566C(&qword_10070A048);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1005F66F0;
    sub_10000566C(&qword_10070CA08);
    uint64_t v29 = swift_allocBox();
    uint64_t v31 = v30;
    uint64_t v49 = v16;
    Range<>.init<A>(_:)((uint64_t)&v49, (uint64_t)&type metadata for UID);
    uint64_t v49 = v32;
    sub_10001FC6C();
    sub_1005E36A0();
    uint64_t v33 = sub_10000566C(&qword_100709E30);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v31, 0, 1, v33);
    *(void *)(v28 + 32) = v29 | 0xA000000000000000;
    *(_OWORD *)(v28 + 40) = xmmword_1005F6700;
    *(void *)(v27 + 16) = v28;
    unint64_t v34 = v27 | 0xC000000000000000;
    if (*(unsigned char *)(v4 + 122))
    {
      *a3 = v34;
    }
    else
    {
      sub_10000566C(&qword_10070CA10);
      type metadata accessor for SearchReturnOption();
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_1005F6670;
      swift_storeEnumTagMultiPayload();
      *a3 = v34;
      a3[1] = v35;
    }
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = sub_10000566C(&qword_10070CA00);
    return (*(uint64_t (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a3, 0, 1, v36);
  }
}

unint64_t sub_1000FAD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v74 = a1;
  uint64_t v82 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v72 = *(void *)(v82 - 8);
  uint64_t v7 = __chkstk_darwin(v82);
  uint64_t v81 = (uint64_t)v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v83 = (uint64_t)v70 - v9;
  uint64_t v10 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v80 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v84 = (uint64_t)v70 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)v70 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v70 - v19;
  int v21 = sub_100105480(a4);
  uint64_t v22 = (void *)v21[2];
  if (v22)
  {
    uint64_t v71 = a3;
    uint64_t v23 = 0;
    v73 = v21;
    v78 = v21 + 4;
    uint64_t v79 = a2;
    int v24 = *(void **)(a2 + 16);
    v76 = v24;
    v77 = v22;
    do
    {
      if (v24)
      {
        int v25 = *((_DWORD *)v78 + (void)v23);
        uint64_t v26 = v80;
        uint64_t v27 = a2 + ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80));
        swift_bridgeObjectRetain_n();
        uint64_t v28 = *(void *)(v26 + 72);
        uint64_t v29 = v24;
        do
        {
          sub_1000FCDE0(v27, (uint64_t)v20, type metadata accessor for TaskHistory.Previous);
          sub_1000FCDE0((uint64_t)v20, (uint64_t)v18, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            int v30 = *((_DWORD *)v18 + 2);
            sub_10007C4A4(*(void *)v18);
            if (v30 == v25)
            {
              sub_1000FCE48((uint64_t)v20, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              return 0xF000000000000007;
            }
          }
          else
          {
            sub_1000FCE48((uint64_t)v18, type metadata accessor for TaskHistory.Previous);
          }
          sub_1000FCE48((uint64_t)v20, type metadata accessor for TaskHistory.Previous);
          v27 += v28;
          uint64_t v29 = (void *)((char *)v29 - 1);
        }
        while (v29);
        a2 = v79;
        swift_bridgeObjectRelease_n();
        int v24 = v76;
        uint64_t v22 = v77;
      }
      uint64_t v23 = (void *)((char *)v23 + 1);
    }
    while (v23 != v22);
    swift_bridgeObjectRelease();
    uint64_t v32 = v75;
    uint64_t v33 = v83;
    a3 = v71;
    uint64_t v34 = sub_1000F9F28();
    if (v60)
    {
LABEL_35:
      uint64_t v61 = swift_allocObject();
      uint64_t v62 = *(void *)(v32 + 24);
      *(void *)(v61 + 16) = *(void *)(v32 + 16);
      *(void *)(v61 + 24) = v62;
      BOOL v63 = *(_DWORD *)(v32 + 104) == 1;
      *(void *)(v61 + 40) = 0;
      *(void *)(v61 + 48) = 0;
      *(void *)(v61 + 32) = v63;
      *(_WORD *)(v61 + 56) = 256;
      goto LABEL_38;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = v75;
    uint64_t v33 = v83;
    uint64_t v34 = sub_1000F9F28();
    if (v35) {
      goto LABEL_35;
    }
  }
  v70[1] = v34;
  uint64_t v36 = sub_1001A9E5C(a3);
  uint64_t v37 = (void *)v36[2];
  if (!v37)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    return 0xF000000000000007;
  }
  uint64_t v38 = 0;
  v76 = v36;
  v77 = v36 + 4;
  uint64_t v39 = *(void *)(a2 + 16);
  v73 = v37;
  uint64_t v71 = v39;
  while (!v39)
  {
LABEL_16:
    uint64_t v38 = (void *)((char *)v38 + 1);
    if (v38 == v37) {
      goto LABEL_33;
    }
  }
  v78 = v38;
  int v40 = *((_DWORD *)v77 + (void)v38);
  uint64_t v41 = v80;
  uint64_t v42 = a2 + ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80));
  swift_bridgeObjectRetain();
  uint64_t v43 = *(void *)(v41 + 72);
  uint64_t v44 = v84;
  while (1)
  {
    sub_1000FCDE0(v42, v44, type metadata accessor for TaskHistory.Previous);
    sub_1000FCDE0(v44, (uint64_t)v13, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_1000FCE48((uint64_t)v13, type metadata accessor for TaskHistory.Previous);
LABEL_20:
    uint64_t v44 = v84;
    sub_1000FCE48(v84, type metadata accessor for TaskHistory.Previous);
    v42 += v43;
    if (!--v39)
    {
LABEL_15:
      uint64_t v37 = v73;
      uint64_t v38 = v78;
      uint64_t v39 = v71;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  int v45 = *(_DWORD *)&v13[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
  sub_1000FCE48((uint64_t)v13, type metadata accessor for ClientCommand);
  if (v45 != v40) {
    goto LABEL_20;
  }
  sub_1000FCE48(v84, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void *)(v74 + 16);
  if (v46)
  {
    uint64_t v47 = v72;
    uint64_t v48 = v74 + ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80));
    swift_bridgeObjectRetain();
    uint64_t v49 = *(void *)(v47 + 72);
    do
    {
      sub_1000FCDE0(v48, v33, type metadata accessor for TaskHistory.Running);
      uint64_t v50 = v33;
      uint64_t v51 = v81;
      sub_1000FCDE0(v50, v81, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1000FCE48(v51, type metadata accessor for TaskHistory.Running);
      }
      else
      {
        int v52 = *(_DWORD *)(v51 + 8);
        uint64_t v53 = sub_10000566C(&qword_10070B6A0);
        sub_1000FCE48(v51 + *(int *)(v53 + 64), type metadata accessor for ClientCommand);
        if (v52 == v40)
        {
          uint64_t v33 = v83;
          sub_1000FCE48(v83, type metadata accessor for TaskHistory.Running);
          goto LABEL_15;
        }
      }
      uint64_t v33 = v83;
      sub_1000FCE48(v83, type metadata accessor for TaskHistory.Running);
      v48 += v49;
      --v46;
    }
    while (v46);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v54 = v75;
  char v55 = *(unsigned char *)(v75 + 136);
  if (v55)
  {
    uint64_t v56 = 0;
    uint64_t v57 = 0;
    uint64_t v58 = 0;
    char v59 = 0;
  }
  else
  {
    Action.UnreadCountOutsideWindowOfInterest.Count.init(count:range:serverUnreadCount:)();
    uint64_t v56 = v64;
    uint64_t v57 = v65;
    uint64_t v58 = v66;
    char v59 = v67 & 1;
  }
  uint64_t v61 = swift_allocObject();
  uint64_t v68 = *(void *)(v54 + 24);
  *(void *)(v61 + 16) = *(void *)(v54 + 16);
  *(void *)(v61 + 24) = v68;
  *(void *)(v61 + 32) = v56;
  *(void *)(v61 + 40) = v57;
  *(void *)(v61 + 48) = v58;
  *(unsigned char *)(v61 + 56) = v59;
  *(unsigned char *)(v61 + 57) = v55;
LABEL_38:
  uint64_t v31 = v61 | 0x3000000000000004;
  swift_bridgeObjectRetain();
  return v31;
}

uint64_t sub_1000FB3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v100 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v4 = __chkstk_darwin(v100);
  v98 = &v93[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __chkstk_darwin(v4);
  v97 = &v93[-v7];
  uint64_t v8 = __chkstk_darwin(v6);
  v96 = &v93[-v9];
  __chkstk_darwin(v8);
  uint64_t v11 = &v93[-v10];
  uint64_t v12 = sub_1005E0ED0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = &v93[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = &v93[-v18];
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = &v93[-v21];
  __chkstk_darwin(v20);
  int v24 = &v93[-v23];
  v99 = *(unsigned char **)(v2 + 128);
  char v25 = *(unsigned char *)(v2 + 136);
  uint64_t v26 = (unsigned char *)sub_1000F9F28();
  uint64_t v101 = v13;
  uint64_t v28 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16);
  if ((v25 & 1) == 0)
  {
    if (v27)
    {
      v28(v22, a2, v12);
      v76 = v96;
      sub_1000FCDE0(a2, (uint64_t)v96, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      sub_10003C004(v2, (uint64_t)v105);
      v77 = sub_1005E0EB0();
      os_log_type_t v78 = sub_1005E25C0();
      int v79 = v78;
      if (os_log_type_enabled(v77, v78))
      {
        uint64_t v80 = swift_slowAlloc();
        LODWORD(v98) = v79;
        uint64_t v81 = v80;
        v97 = (unsigned char *)swift_slowAlloc();
        v104 = v97;
        *(_DWORD *)uint64_t v81 = 68159747;
        LODWORD(v102) = 2;
        sub_1005E2960();
        *(_WORD *)(v81 + 8) = 256;
        uint64_t v82 = *(int *)(v100 + 20);
        uint64_t v95 = v12;
        uint64_t v83 = &v76[v82];
        LOBYTE(v102) = v76[v82];
        sub_1005E2960();
        *(_WORD *)(v81 + 11) = 2082;
        uint64_t v84 = *((void *)v83 + 1);
        unint64_t v85 = *((void *)v83 + 2);
        swift_bridgeObjectRetain();
        uint64_t v102 = sub_1000C6914(v84, v85, (uint64_t *)&v104);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v81 + 21) = 1040;
        LODWORD(v102) = 2;
        sub_1005E2960();
        *(_WORD *)(v81 + 27) = 512;
        LOWORD(v102) = *((_WORD *)v83 + 12);
        sub_1005E2960();
        *(_WORD *)(v81 + 31) = 2160;
        uint64_t v102 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v81 + 41) = 2085;
        int v86 = *((_DWORD *)v83 + 10);
        uint64_t v102 = *((void *)v83 + 4);
        int v103 = v86;
        swift_bridgeObjectRetain();
        uint64_t v87 = sub_1005E1CC0();
        uint64_t v102 = sub_1000C6914(v87, v88, (uint64_t *)&v104);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1000FCE48((uint64_t)v76, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v81 + 51) = 2048;
        uint64_t v102 = (uint64_t)v99;
        sub_1005E2960();
        *(_WORD *)(v81 + 61) = 2048;
        v89 = v22;
        if (v107) {
          uint64_t v90 = 0;
        }
        else {
          uint64_t v90 = v106;
        }
        sub_10003C060((uint64_t)v105);
        uint64_t v102 = v90;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v77, (os_log_type_t)v98, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld unread messages. Server unread count %ld.", (uint8_t *)v81, 0x47u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        int v45 = *(uint64_t (**)(unsigned char *, uint64_t))(v101 + 8);
        uint64_t v46 = v89;
        goto LABEL_24;
      }
      sub_10003C060((uint64_t)v105);
      sub_1000FCE48((uint64_t)v76, type metadata accessor for MailboxTaskLogger);

      int v45 = *(uint64_t (**)(unsigned char *, uint64_t))(v101 + 8);
      uint64_t v46 = v22;
LABEL_31:
      uint64_t v91 = v12;
      return v45(v46, v91);
    }
    v98 = v26;
    uint64_t v47 = v12;
    v28(v24, a2, v12);
    sub_1000FCDE0(a2, (uint64_t)v11, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_10003C004(v2, (uint64_t)v105);
    uint64_t v48 = sub_1005E0EB0();
    os_log_type_t v49 = sub_1005E25C0();
    int v50 = v49;
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v51 = swift_slowAlloc();
      v97 = v24;
      uint64_t v52 = v51;
      v96 = (unsigned char *)swift_slowAlloc();
      v104 = v96;
      *(_DWORD *)uint64_t v52 = 68160003;
      LODWORD(v102) = 2;
      LODWORD(v95) = v50;
      sub_1005E2960();
      *(_WORD *)(v52 + 8) = 256;
      uint64_t v53 = &v11[*(int *)(v100 + 20)];
      LOBYTE(v102) = *v53;
      sub_1005E2960();
      *(_WORD *)(v52 + 11) = 2082;
      uint64_t v54 = *((void *)v53 + 1);
      unint64_t v55 = *((void *)v53 + 2);
      swift_bridgeObjectRetain();
      uint64_t v102 = sub_1000C6914(v54, v55, (uint64_t *)&v104);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 21) = 1040;
      LODWORD(v102) = 2;
      sub_1005E2960();
      *(_WORD *)(v52 + 27) = 512;
      LOWORD(v102) = *((_WORD *)v53 + 12);
      sub_1005E2960();
      *(_WORD *)(v52 + 31) = 2160;
      uint64_t v102 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v52 + 41) = 2085;
      int v56 = *((_DWORD *)v53 + 10);
      uint64_t v102 = *((void *)v53 + 4);
      int v103 = v56;
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_1005E1CC0();
      uint64_t v102 = sub_1000C6914(v57, v58, (uint64_t *)&v104);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1000FCE48((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v52 + 51) = 2048;
      uint64_t v102 = (uint64_t)v99;
      sub_1005E2960();
      *(_WORD *)(v52 + 61) = 2082;
      uint64_t v102 = (uint64_t)v98;
      uint64_t v59 = sub_10000566C(&qword_10070A9B8);
      uint64_t v60 = MessageIdentifierRange.debugDescription.getter(v59);
      uint64_t v102 = sub_1000C6914(v60, v61, (uint64_t *)&v104);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 71) = 2048;
      if (v107) {
        uint64_t v62 = 0;
      }
      else {
        uint64_t v62 = v106;
      }
      sub_10003C060((uint64_t)v105);
      uint64_t v102 = v62;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v48, (os_log_type_t)v95, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld unread messages in UIDs %{public}s. Server unread count %ld.", (uint8_t *)v52, 0x51u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      int v45 = *(uint64_t (**)(unsigned char *, uint64_t))(v101 + 8);
      uint64_t v46 = v97;
      goto LABEL_29;
    }
    sub_10003C060((uint64_t)v105);
    sub_1000FCE48((uint64_t)v11, type metadata accessor for MailboxTaskLogger);

LABEL_28:
    int v45 = *(uint64_t (**)(unsigned char *, uint64_t))(v101 + 8);
    uint64_t v46 = v24;
LABEL_29:
    uint64_t v91 = v47;
    return v45(v46, v91);
  }
  if (v27)
  {
    int v24 = v16;
    uint64_t v47 = v12;
    v28(v16, a2, v12);
    BOOL v63 = v98;
    sub_1000FCDE0(a2, (uint64_t)v98, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_10003C004(v2, (uint64_t)v105);
    uint64_t v64 = sub_1005E0EB0();
    os_log_type_t v65 = sub_1005E25C0();
    int v66 = v65;
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v67 = swift_slowAlloc();
      LODWORD(v99) = v66;
      uint64_t v68 = v67;
      v97 = (unsigned char *)swift_slowAlloc();
      v104 = v97;
      *(_DWORD *)uint64_t v68 = 68159491;
      LODWORD(v102) = 2;
      sub_1005E2960();
      *(_WORD *)(v68 + 8) = 256;
      v69 = &v63[*(int *)(v100 + 20)];
      LOBYTE(v102) = *v69;
      sub_1005E2960();
      *(_WORD *)(v68 + 11) = 2082;
      uint64_t v95 = v47;
      uint64_t v70 = *((void *)v69 + 1);
      unint64_t v71 = *((void *)v69 + 2);
      swift_bridgeObjectRetain();
      uint64_t v102 = sub_1000C6914(v70, v71, (uint64_t *)&v104);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 21) = 1040;
      LODWORD(v102) = 2;
      sub_1005E2960();
      *(_WORD *)(v68 + 27) = 512;
      LOWORD(v102) = *((_WORD *)v69 + 12);
      sub_1005E2960();
      *(_WORD *)(v68 + 31) = 2160;
      uint64_t v102 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v68 + 41) = 2085;
      int v72 = *((_DWORD *)v69 + 10);
      uint64_t v102 = *((void *)v69 + 4);
      int v103 = v72;
      swift_bridgeObjectRetain();
      uint64_t v73 = sub_1005E1CC0();
      uint64_t v102 = sub_1000C6914(v73, v74, (uint64_t *)&v104);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1000FCE48((uint64_t)v63, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v68 + 51) = 2048;
      if (v107) {
        uint64_t v75 = 0;
      }
      else {
        uint64_t v75 = v106;
      }
      sub_10003C060((uint64_t)v105);
      uint64_t v102 = v75;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v99, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Did not search for unread messages. Server unread count %ld.", (uint8_t *)v68, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      int v45 = *(uint64_t (**)(unsigned char *, uint64_t))(v101 + 8);
      uint64_t v46 = v24;
      goto LABEL_24;
    }
    sub_10003C060((uint64_t)v105);
    sub_1000FCE48((uint64_t)v63, type metadata accessor for MailboxTaskLogger);

    goto LABEL_28;
  }
  v98 = v26;
  v28(v19, a2, v12);
  uint64_t v29 = v97;
  sub_1000FCDE0(a2, (uint64_t)v97, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_10003C004(v2, (uint64_t)v105);
  int v30 = sub_1005E0EB0();
  os_log_type_t v31 = sub_1005E25C0();
  int v32 = v31;
  if (!os_log_type_enabled(v30, v31))
  {
    sub_10003C060((uint64_t)v105);
    sub_1000FCE48((uint64_t)v29, type metadata accessor for MailboxTaskLogger);

    int v45 = *(uint64_t (**)(unsigned char *, uint64_t))(v101 + 8);
    uint64_t v46 = v19;
    goto LABEL_31;
  }
  uint64_t v33 = swift_slowAlloc();
  v99 = v19;
  uint64_t v34 = v33;
  v96 = (unsigned char *)swift_slowAlloc();
  v104 = v96;
  *(_DWORD *)uint64_t v34 = 68159747;
  LODWORD(v102) = 2;
  uint64_t v95 = v12;
  int v94 = v32;
  sub_1005E2960();
  *(_WORD *)(v34 + 8) = 256;
  char v35 = &v29[*(int *)(v100 + 20)];
  LOBYTE(v102) = *v35;
  sub_1005E2960();
  *(_WORD *)(v34 + 11) = 2082;
  uint64_t v36 = *((void *)v35 + 1);
  unint64_t v37 = *((void *)v35 + 2);
  swift_bridgeObjectRetain();
  uint64_t v102 = sub_1000C6914(v36, v37, (uint64_t *)&v104);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  *(_WORD *)(v34 + 21) = 1040;
  LODWORD(v102) = 2;
  sub_1005E2960();
  *(_WORD *)(v34 + 27) = 512;
  LOWORD(v102) = *((_WORD *)v35 + 12);
  sub_1005E2960();
  *(_WORD *)(v34 + 31) = 2160;
  uint64_t v102 = 0x786F626C69616DLL;
  sub_1005E2960();
  *(_WORD *)(v34 + 41) = 2085;
  int v38 = *((_DWORD *)v35 + 10);
  uint64_t v102 = *((void *)v35 + 4);
  int v103 = v38;
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_1005E1CC0();
  uint64_t v102 = sub_1000C6914(v39, v40, (uint64_t *)&v104);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  sub_1000FCE48((uint64_t)v29, type metadata accessor for MailboxTaskLogger);
  *(_WORD *)(v34 + 51) = 2082;
  uint64_t v102 = (uint64_t)v98;
  uint64_t v41 = sub_10000566C(&qword_10070A9B8);
  uint64_t v42 = MessageIdentifierRange.debugDescription.getter(v41);
  uint64_t v102 = sub_1000C6914(v42, v43, (uint64_t *)&v104);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  *(_WORD *)(v34 + 61) = 2048;
  if (v107) {
    uint64_t v44 = 0;
  }
  else {
    uint64_t v44 = v106;
  }
  sub_10003C060((uint64_t)v105);
  uint64_t v102 = v44;
  sub_1005E2960();
  _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v94, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Failed to find unread messages (UIDs %{public}s). Server unread count %ld.", (uint8_t *)v34, 0x47u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  int v45 = *(uint64_t (**)(unsigned char *, uint64_t))(v101 + 8);
  uint64_t v46 = v99;
LABEL_24:
  uint64_t v91 = v95;
  return v45(v46, v91);
}

uint64_t sub_1000FC4C4@<X0>(uint64_t a1@<X8>)
{
  return sub_10003C94C(v1 + 56, a1);
}

uint64_t sub_1000FC4D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  __int16 v3 = *(_WORD *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  int v5 = *(_DWORD *)(v1 + 48);
  *(void *)a1 = *(void *)(v1 + 16);
  *(void *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000FC524()
{
  if (qword_100709D48 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t UnsafeExtractedAttachment.part.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000FC588()
{
  return *(unsigned __int8 *)(v0 + 8);
}

unint64_t sub_1000FC598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  unint64_t result = sub_1000FAD08(a1, a2, a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_1000FC5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000FCB30(a1, a2, a3, a4);
}

void sub_1000FC5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    *(void *)(v5 + 128) = 0;
    *(unsigned char *)(v5 + 136) = 1;
  }
}

uint64_t sub_1000FC5E8()
{
  return 0x726E55746E756F43;
}

uint64_t destroy for CountUnreadMessages(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
}

uint64_t initializeWithCopy for CountUnreadMessages(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = a2 + 64;
  long long v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 64, v5, v7);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_WORD *)(a1 + 121) = *(_WORD *)(a2 + 121);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  return a1;
}

uint64_t assignWithCopy for CountUnreadMessages(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_100022498((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  uint64_t v4 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v4;
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  *(unsigned char *)(a1 + 122) = *(unsigned char *)(a2 + 122);
  uint64_t v5 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = v5;
  return a1;
}

__n128 initializeWithTake for CountUnreadMessages(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for CountUnreadMessages(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  *(unsigned char *)(a1 + 122) = *(unsigned char *)(a2 + 122);
  uint64_t v5 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for CountUnreadMessages(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 137)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CountUnreadMessages(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 136) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 137) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 137) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CountUnreadMessages()
{
  return &type metadata for CountUnreadMessages;
}

unint64_t sub_1000FCA08()
{
  unint64_t result = qword_10070C930;
  if (!qword_10070C930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C930);
  }
  return result;
}

unint64_t sub_1000FCA60()
{
  unint64_t result = qword_10070C938;
  if (!qword_10070C938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C938);
  }
  return result;
}

unint64_t sub_1000FCAB4(uint64_t a1)
{
  unint64_t result = sub_1000FCADC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1000FCADC()
{
  unint64_t result = qword_10070C9F0;
  if (!qword_10070C9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C9F0);
  }
  return result;
}

uint64_t sub_1000FCB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_10000566C(&qword_10070C9F8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1001A9E5C(a4);
  uint64_t v14 = v13[2];
  if (v14)
  {
    uint64_t v15 = 0;
    while ((sub_100149D30(*((_DWORD *)v13 + v15 + 8), a2, a3) & 1) == 0)
    {
      if (v14 == ++v15) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    char v17 = *(unsigned char *)(v5 + 122);
    uint64_t v18 = &v12[*(int *)(v10 + 48)];
    *uint64_t v12 = v17;
    sub_1000FCDE0(a1, (uint64_t)v18, type metadata accessor for UntaggedResponse);
    type metadata accessor for UntaggedResponse(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (v17)
    {
      if (EnumCaseMultiPayload == 11)
      {
        uint64_t v20 = *(void *)(*(void *)v18 + 16);
        uint64_t result = swift_bridgeObjectRelease();
        *(void *)(v5 + 128) = v20;
        *(unsigned char *)(v5 + 136) = 0;
        return result;
      }
    }
    else if (EnumCaseMultiPayload == 12)
    {
      long long v21 = v18[1];
      v27[0] = *v18;
      v27[1] = v21;
      v27[2] = v18[2];
      ExtendedSearchResponse.count.getter();
      uint64_t v23 = v22;
      char v25 = v24;
      uint64_t result = (uint64_t)sub_1000FCD64((uint64_t *)v27);
      *(void *)(v5 + 128) = v23;
      *(unsigned char *)(v5 + 136) = v25 & 1;
      return result;
    }
    return sub_1000FCD04((uint64_t)v12);
  }
  else
  {
LABEL_5:
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000FCD04(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_10070C9F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1000FCD64(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1000FCDA8()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 58, 7);
}

uint64_t sub_1000FCDE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000FCE48(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000FCEA8()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

ValueMetadata *type metadata accessor for CountUnreadMessages.CommandID()
{
  return &type metadata for CountUnreadMessages.CommandID;
}

unsigned char *_s13IMAP2Behavior19CountUnreadMessagesV9CommandIDOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000FCF90);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CountUnreadMessages.ActionID()
{
  return &type metadata for CountUnreadMessages.ActionID;
}

uint64_t destroy for CreateMailboxes(uint64_t a1)
{
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CreateMailboxes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CreateMailboxes(void *a1, void *a2)
{
  *a1 = *a2;
  sub_100022498(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CreateMailboxes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateMailboxes(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CreateMailboxes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateMailboxes()
{
  return &type metadata for CreateMailboxes;
}

BOOL sub_1000FD258(uint64_t a1, uint64_t a2)
{
  return sub_1000FF99C(*(void *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), *(void *)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32));
}

BOOL sub_1000FD298(uint64_t *a1, uint64_t *a2)
{
  return a1[1] == a2[1] && sub_1000255D4(*a1, *a2);
}

uint64_t sub_1000FD2DC(uint64_t a1)
{
  uint64_t v65 = type metadata accessor for Task.Logger(0);
  uint64_t v3 = __chkstk_darwin(v65);
  uint64_t v64 = (uint64_t)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v61 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v61 - v8;
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  char v17 = (char *)&v61 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v61 - v18;
  uint64_t v20 = *(void *)(v1 + 64);
  if (*(void *)(v20 + 16) == 1 && (uint64_t v21 = sub_1001CB558(*(void *)(v1 + 64)), v63 = v23, v21))
  {
    LODWORD(v64) = v22;
    swift_bridgeObjectRelease();
    uint64_t v24 = v11;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v19, a1, v10);
    sub_100100BCC(a1, (uint64_t)v9, type metadata accessor for Task.Logger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_bridgeObjectRetain();
    char v25 = sub_1005E0EB0();
    os_log_type_t v26 = sub_1005E25C0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      uint64_t v66 = v62;
      *(_DWORD *)uint64_t v27 = 68158723;
      LODWORD(v69) = 2;
      sub_1005E2960();
      *(_WORD *)(v27 + 8) = 256;
      uint64_t v28 = &v9[*(int *)(v65 + 20)];
      uint64_t v65 = v10;
      uint64_t v29 = *((void *)v28 + 1);
      unint64_t v30 = *((void *)v28 + 2);
      LOBYTE(v69) = *(void *)v28;
      sub_1005E2960();
      *(_WORD *)(v27 + 11) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_1000C6914(v29, v30, &v66);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100100C34((uint64_t)v9, type metadata accessor for Task.Logger);
      *(_WORD *)(v27 + 21) = 2160;
      uint64_t v69 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v27 + 31) = 2085;
      uint64_t v69 = v63;
      int v70 = v64;
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1005E1CC0();
      uint64_t v69 = sub_1000C6914(v31, v32, &v66);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "[%.*hhx-%{public}s] Created task for '%{sensitive,mask.mailbox}s'", (uint8_t *)v27, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v19, v65);
    }
    else
    {
      sub_100100C34((uint64_t)v9, type metadata accessor for Task.Logger);

      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v19, v10);
    }
  }
  else if (sub_1001CB558(v20))
  {
    uint64_t v36 = v34;
    LODWORD(v64) = v35;
    swift_bridgeObjectRelease();
    uint64_t v37 = v11;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v17, a1, v10);
    sub_100100BCC(a1, (uint64_t)v7, type metadata accessor for Task.Logger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_10009B410(v1, (uint64_t)&v69);
    swift_bridgeObjectRetain();
    int v38 = sub_1005E0EB0();
    os_log_type_t v39 = sub_1005E25C0();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v63 = (uint64_t)v17;
      uint64_t v41 = v40;
      uint64_t v68 = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 68158979;
      LODWORD(v66) = 2;
      sub_1005E2960();
      *(_WORD *)(v41 + 8) = 256;
      uint64_t v42 = &v7[*(int *)(v65 + 20)];
      uint64_t v43 = *(void *)v42;
      uint64_t v44 = *((void *)v42 + 1);
      uint64_t v65 = v10;
      unint64_t v45 = *((void *)v42 + 2);
      LOBYTE(v66) = v43;
      sub_1005E2960();
      *(_WORD *)(v41 + 11) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v62 = v37;
      uint64_t v66 = sub_1000C6914(v44, v45, &v68);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100100C34((uint64_t)v7, type metadata accessor for Task.Logger);
      *(_WORD *)(v41 + 21) = 2048;
      uint64_t v46 = *(void *)(v71 + 16);
      sub_10009B46C((uint64_t)&v69);
      uint64_t v66 = v46;
      sub_1005E2960();
      *(_WORD *)(v41 + 31) = 2160;
      uint64_t v66 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v41 + 41) = 2085;
      uint64_t v66 = v36;
      int v67 = v64;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1005E1CC0();
      uint64_t v66 = sub_1000C6914(v47, v48, &v68);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "[%.*hhx-%{public}s] Created task for %ld mailboxes, first: '%{sensitive,mask.mailbox}s'.", (uint8_t *)v41, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 8))(v63, v65);
    }
    else
    {
      sub_10009B46C((uint64_t)&v69);
      sub_100100C34((uint64_t)v7, type metadata accessor for Task.Logger);

      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    }
  }
  else
  {
    uint64_t v49 = v11;
    int v50 = v14;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1, v10);
    uint64_t v51 = v64;
    sub_100100BCC(a1, v64, type metadata accessor for Task.Logger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_10009B410(v1, (uint64_t)&v69);
    uint64_t v52 = sub_1005E0EB0();
    os_log_type_t v53 = sub_1005E25C0();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      uint64_t v66 = v63;
      *(_DWORD *)uint64_t v54 = 68158466;
      LODWORD(v68) = 2;
      sub_1005E2960();
      *(_WORD *)(v54 + 8) = 256;
      unint64_t v55 = (uint64_t *)(v51 + *(int *)(v65 + 20));
      uint64_t v56 = *v55;
      uint64_t v57 = v55[1];
      uint64_t v65 = v10;
      uint64_t v58 = v49;
      unint64_t v59 = v55[2];
      LOBYTE(v68) = v56;
      sub_1005E2960();
      *(_WORD *)(v54 + 11) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v68 = sub_1000C6914(v57, v59, &v66);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100100C34(v51, type metadata accessor for Task.Logger);
      *(_WORD *)(v54 + 21) = 2048;
      uint64_t v60 = *(void *)(v71 + 16);
      sub_10009B46C((uint64_t)&v69);
      uint64_t v68 = v60;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "[%.*hhx-%{public}s] Created task for %ld mailboxes.", (uint8_t *)v54, 0x1Fu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v50, v65);
    }
    else
    {
      sub_10009B46C((uint64_t)&v69);
      sub_100100C34(v51, type metadata accessor for Task.Logger);

      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v50, v10);
    }
  }
}

uint64_t sub_1000FDD00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1000FFBA0(v8, a2, a3);
  int v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
    uint64_t v12 = sub_10000566C(&qword_10070CAA8);
    uint64_t v13 = a4 + *(int *)(v12 + 48);
    *(void *)a4 = v9;
    *(_DWORD *)(a4 + 8) = v11;
    *(unsigned char *)(a4 + 12) = 0;
    *(void *)uint64_t v13 = v9;
    *(_DWORD *)(v13 + 8) = v11;
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a4, 0, 1, v12);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_100100504(v14, a1, a2, a3);
    int v17 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15)
    {
      uint64_t v18 = sub_10000566C(&qword_10070CAA8);
      uint64_t v19 = a4 + *(int *)(v18 + 48);
      *(void *)a4 = v15;
      *(_DWORD *)(a4 + 8) = v17;
      *(unsigned char *)(a4 + 12) = 1;
      *(void *)uint64_t v19 = 0;
      *(_DWORD *)(v19 + 8) = 0;
      *(void *)(v19 + 16) = v15;
      *(_DWORD *)(v19 + 24) = v17;
      *(void *)(v19 + 32) = _swiftEmptyArrayStorage;
      type metadata accessor for ClientCommand(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a4, 0, 1, v18);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v21 = sub_10000566C(&qword_10070CAA8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a4, 1, 1, v21);
    }
  }
  return swift_bridgeObjectRetain();
}

NSObject *sub_1000FDF94(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v63 = a1;
  uint64_t v13 = type metadata accessor for Task.Logger(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1005E0ED0();
  __chkstk_darwin(v64);
  unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
  if ((a2 & 0x100000000) != 0)
  {
    uint64_t v26 = v65;
    uint64_t result = sub_1001DAC80(a7, a3, a4, a5, a6);
    if (v26) {
      return swift_errorRelease();
    }
  }
  else
  {
    uint64_t v58 = v13;
    unint64_t v59 = v15;
    uint64_t v19 = (char *)v55 - v18;
    uint64_t v61 = v16;
    uint64_t v20 = v63;
    uint64_t v21 = a2;
    Mailbox.name.getter(v63, a2, 0);
    uint64_t v60 = a3;
    int v22 = a3;
    uint64_t v23 = a4;
    unsigned __int8 v24 = a6;
    uint64_t v25 = v65;
    sub_1001DAC80(a7, v22, a4, a5, a6);
    uint64_t v62 = v21;
    if (v25) {
      swift_errorRelease();
    }
    uint64_t v65 = 0;
    uint64_t v28 = v19;
    uint64_t v29 = v20;
    uint64_t v30 = (uint64_t)v59;
    unsigned __int8 v31 = v24;
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v28, a7, v64);
    sub_100100BCC(a7, v30, type metadata accessor for Task.Logger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    if (v24)
    {
      uint64_t v32 = 20302;
      if (v24 != 1) {
        uint64_t v32 = 4473154;
      }
      uint64_t v63 = v32;
      if (v24 == 1) {
        unint64_t v33 = 0xE200000000000000;
      }
      else {
        unint64_t v33 = 0xE300000000000000;
      }
    }
    else
    {
      unint64_t v33 = 0xE200000000000000;
      uint64_t v63 = 19279;
    }
    swift_bridgeObjectRetain();
    unint64_t v34 = (unint64_t)v60;
    sub_100086918((unint64_t)v60);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100086918(v34);
    swift_bridgeObjectRetain();
    Mailbox.name.getter(v20, v62, 0);
    swift_bridgeObjectRetain();
    sub_100086918(v34);
    swift_bridgeObjectRetain();
    sub_1000E84F4(v34, v23, a5, v31);
    int v35 = v28;
    uint64_t v36 = sub_1005E0EB0();
    os_log_type_t v37 = sub_1005E25C0();
    uint64_t v38 = v23;
    int v39 = v37;
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v40 = swift_slowAlloc();
      unint64_t v59 = v35;
      os_log_t v56 = v36;
      uint64_t v41 = v40;
      uint64_t v57 = swift_slowAlloc();
      uint64_t v68 = v57;
      *(_DWORD *)uint64_t v41 = 68159235;
      LODWORD(v66) = 2;
      sub_1005E2960();
      *(_WORD *)(v41 + 8) = 256;
      uint64_t v42 = (uint64_t *)(v30 + *(int *)(v58 + 20));
      uint64_t v43 = *v42;
      uint64_t v44 = v42[1];
      LODWORD(v58) = v39;
      unint64_t v45 = v42[2];
      LOBYTE(v66) = v43;
      sub_1005E2960();
      *(_WORD *)(v41 + 11) = 2082;
      swift_bridgeObjectRetain();
      v55[1] = v38;
      uint64_t v66 = sub_1000C6914(v44, v45, &v68);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100100C34(v30, type metadata accessor for Task.Logger);
      *(_WORD *)(v41 + 21) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_1000C6914(v63, v33, &v68);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      sub_1000869F0(v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000869F0(v34);
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 31) = 2082;
      sub_100086918(v34);
      swift_bridgeObjectRetain();
      ResponseText.debugDescription.getter(v34);
      uint64_t v47 = v46;
      unint64_t v49 = v48;
      sub_1000869F0(v34);
      swift_bridgeObjectRelease();
      uint64_t v66 = sub_1000C6914(v47, v49, &v68);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000869F0(v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000869F0(v34);
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 41) = 2160;
      uint64_t v66 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v41 + 51) = 2085;
      uint64_t v66 = v29;
      uint64_t v50 = v62;
      int v67 = v62;
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_1005E1CC0();
      uint64_t v66 = sub_1000C6914(v51, v52, &v68);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      j__swift_bridgeObjectRelease(v29, v50, 0);
      j__swift_bridgeObjectRelease(v29, v50, 0);
      os_log_t v53 = v56;
      _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v58, "[%.*hhx-%{public}s] Received '%{public}s %{public}s' for '%{sensitive,mask.mailbox}s'.", (uint8_t *)v41, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v59, v64);
    }
    else
    {
      sub_100100C34(v30, type metadata accessor for Task.Logger);
      swift_bridgeObjectRelease();
      sub_1000869F0(v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000869F0(v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000869F0(v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000869F0(v34);
      swift_bridgeObjectRelease();
      uint64_t v54 = v62;
      j__swift_bridgeObjectRelease(v29, v62, 0);
      j__swift_bridgeObjectRelease(v29, v54, 0);

      return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v35, v64);
    }
  }
  return result;
}

uint64_t sub_1000FE690()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_100100724(v0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100100B60);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v1;
    *(void *)(v4 + 24) = v3;
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t sub_1000FE758(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v79 = a8;
  uint64_t v91 = a5;
  uint64_t v78 = a2;
  uint64_t v83 = a1;
  uint64_t v98 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v95 = *(void *)(v98 - 8);
  uint64_t v13 = __chkstk_darwin(v98);
  v96 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v76 - v15;
  uint64_t v97 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v90 = *(void *)(v97 - 8);
  uint64_t v17 = __chkstk_darwin(v97);
  uint64_t v19 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  int v22 = (char *)&v76 - v21;
  __chkstk_darwin(v20);
  unsigned __int8 v24 = (char *)&v76 - v23;
  uint64_t v25 = swift_bridgeObjectRetain();
  char v101 = 0;
  unsigned int v82 = a4;
  uint64_t v84 = a4;
  uint64_t v85 = a7;
  uint64_t v26 = sub_1001A93FC(v25, a4, a7);
  uint64_t v27 = (void *)v26[2];
  if (!v27) {
    goto LABEL_54;
  }
  uint64_t v86 = a3;
  uint64_t v28 = 0;
  uint64_t v77 = a9;
  uint64_t v80 = v26;
  v89 = v26 + 4;
  uint64_t v99 = *(void *)(a6 + 16);
  uint64_t v93 = a6;
  int v94 = v19;
  uint64_t v87 = v27;
LABEL_6:
  if (!v99) {
    goto LABEL_5;
  }
  v92 = v28;
  uint64_t v29 = v90;
  int v30 = *((_DWORD *)v89 + (void)v28);
  unint64_t v88 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
  uint64_t v31 = a6 + v88;
  swift_bridgeObjectRetain();
  uint64_t v32 = *(void *)(v29 + 72);
  uint64_t v33 = v99;
  while (1)
  {
    sub_100100BCC(v31, (uint64_t)v24, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_100100C34((uint64_t)v24, type metadata accessor for TaskHistory.Previous);
LABEL_9:
    v31 += v32;
    if (!--v33)
    {
      a6 = v93;
      goto LABEL_4;
    }
  }
  uint64_t v34 = sub_10000566C(&qword_10070B308);
  int v35 = *(_DWORD *)&v24[*(int *)(v34 + 48)];
  sub_100100C34((uint64_t)v24, type metadata accessor for ClientCommand);
  if (v35 != v30) {
    goto LABEL_9;
  }
  uint64_t v36 = v93;
  swift_bridgeObjectRelease();
  uint64_t v37 = *(void *)(v91 + 16);
  if (v37)
  {
    uint64_t v38 = v95;
    uint64_t v39 = v91 + ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80));
    swift_bridgeObjectRetain_n();
    uint64_t v40 = *(void *)(v38 + 72);
    uint64_t v81 = v37;
    do
    {
      sub_100100BCC(v39, (uint64_t)v16, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_100100C34((uint64_t)v16, type metadata accessor for TaskHistory.Running);
      }
      else
      {
        int v41 = *((_DWORD *)v16 + 2);
        uint64_t v42 = sub_10000566C(&qword_10070B6A0);
        sub_100100C34((uint64_t)&v16[*(int *)(v42 + 64)], type metadata accessor for ClientCommand);
        if (v41 == v30)
        {
          swift_bridgeObjectRelease();
          a6 = v93;
LABEL_4:
          uint64_t v27 = v87;
          uint64_t v28 = v92;
          swift_bridgeObjectRelease();
LABEL_5:
          uint64_t v28 = (void *)((char *)v28 + 1);
          if (v28 != v27) {
            goto LABEL_6;
          }
LABEL_54:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      v39 += v40;
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = v93;
    uint64_t v37 = v81;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = swift_bridgeObjectRetain();
  char v100 = 1;
  uint64_t v44 = sub_1001A93FC(v43, v84 | 0x100000000, v85);
  v89 = (void *)v44[2];
  if (!v89) {
    goto LABEL_54;
  }
  uint64_t v45 = v37;
  uint64_t v46 = 0;
  uint64_t v87 = v44;
  v92 = v44 + 4;
  uint64_t v90 = v36 + v88;
  while (2)
  {
    int v47 = *((_DWORD *)v92 + (void)v46);
    uint64_t v46 = (void *)((char *)v46 + 1);
    swift_bridgeObjectRetain();
    uint64_t v48 = 0;
    uint64_t v49 = v90;
    uint64_t v50 = v97;
LABEL_25:
    uint64_t v51 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      goto LABEL_59;
    }
    sub_100100BCC(v49, (uint64_t)v22, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100100C34((uint64_t)v22, type metadata accessor for TaskHistory.Previous);
      goto LABEL_24;
    }
    int v52 = *(_DWORD *)&v22[*(int *)(v34 + 48)];
    sub_100100C34((uint64_t)v22, type metadata accessor for ClientCommand);
    BOOL v53 = v52 == v47;
    uint64_t v50 = v97;
    if (!v53)
    {
LABEL_24:
      ++v48;
      v49 += v32;
      if (v51 == v99)
      {
LABEL_38:
        swift_bridgeObjectRelease();
        if (v46 != v89) {
          continue;
        }
        goto LABEL_54;
      }
      goto LABEL_25;
    }
    break;
  }
  uint64_t v50 = v93;
  swift_bridgeObjectRelease();
  if (v45)
  {
    uint64_t v54 = v91 + ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80));
    uint64_t result = swift_bridgeObjectRetain_n();
    uint64_t v56 = 0;
    uint64_t v57 = (uint64_t)v96;
    while (1)
    {
      uint64_t v58 = v56 + 1;
      if (__OFADD__(v56, 1)) {
        break;
      }
      sub_100100BCC(v54 + *(void *)(v95 + 72) * v56, v57, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t result = sub_100100C34(v57, type metadata accessor for TaskHistory.Running);
      }
      else
      {
        int v59 = *((_DWORD *)v96 + 2);
        uint64_t v60 = sub_10000566C(&qword_10070B6A0);
        uint64_t result = sub_100100C34((uint64_t)&v96[*(int *)(v60 + 64)], type metadata accessor for ClientCommand);
        BOOL v53 = v59 == v47;
        uint64_t v57 = (uint64_t)v96;
        if (v53)
        {
          swift_bridgeObjectRelease();
          goto LABEL_38;
        }
      }
      ++v56;
      if (v58 == v45)
      {
        uint64_t v61 = v86;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v50 = v93;
        goto LABEL_42;
      }
    }
    __break(1u);
LABEL_62:
    __break(1u);
    return result;
  }
LABEL_59:
  uint64_t v61 = v86;
LABEL_42:
  unsigned int v62 = v82;
  uint64_t v63 = v77;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((sub_100010004(v61, v62, *(void *)(v63 + 72)) & 1) == 0)
  {
    uint64_t v64 = swift_bridgeObjectRetain();
    uint64_t v65 = sub_100105BCC(v64, v78, v79);
    uint64_t v98 = v65[2];
    if (!v98)
    {
LABEL_56:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 1;
    }
    uint64_t v66 = 0;
    v96 = (char *)v65;
    int v67 = v65 + 4;
    uint64_t v68 = v50 + v88;
    uint64_t v69 = (uint64_t)v94;
LABEL_47:
    int v70 = v67;
    int v71 = *((_DWORD *)v67 + v66++);
    uint64_t result = swift_bridgeObjectRetain_n();
    uint64_t v72 = 0;
    uint64_t v73 = v68;
    while (1)
    {
      uint64_t v74 = v72 + 1;
      if (__OFADD__(v72, 1)) {
        goto LABEL_62;
      }
      sub_100100BCC(v68, v69, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        int v75 = *(_DWORD *)(v69 + 8);
        uint64_t result = sub_10007C4A4(*(void *)v69);
        if (v75 == v71)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 0;
        }
      }
      else
      {
        uint64_t result = sub_100100C34(v69, type metadata accessor for TaskHistory.Previous);
      }
      ++v72;
      v68 += v32;
      if (v74 == v99)
      {
        swift_bridgeObjectRelease_n();
        int v67 = v70;
        uint64_t v68 = v73;
        if (v66 == v98) {
          goto LABEL_56;
        }
        goto LABEL_47;
      }
    }
  }
  return 0;
}

uint64_t sub_1000FEFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v58[0] = a1;
  uint64_t v64 = type metadata accessor for Task.Logger(0);
  uint64_t v5 = __chkstk_darwin(v64);
  uint64_t v7 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v58 - v8;
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v60 = (char *)v58 - v15;
  uint64_t v16 = *(void *)(v3 + 64);
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v67 = v16 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(v16 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  uint64_t v21 = (void (**)(void, void, void))(v14 + 16);
  int64_t v68 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v69 = (uint64_t (**)(char *, uint64_t))(v14 + 8);
  uint64_t v71 = v16;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v23 = 0;
  *(void *)&long long v24 = 68158723;
  long long v59 = v24;
  v58[1] = (char *)&type metadata for Any + 8;
  uint64_t v65 = a2;
  uint64_t v66 = v3;
  unsigned int v62 = v9;
  uint64_t v63 = v7;
  int v70 = v21;
  uint64_t v61 = v13;
  while (1)
  {
    if (v20)
    {
      uint64_t v72 = (v20 - 1) & v20;
      unint64_t v25 = __clz(__rbit64(v20)) | (v23 << 6);
      goto LABEL_25;
    }
    int64_t v26 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v26 >= v68) {
      goto LABEL_32;
    }
    unint64_t v27 = *(void *)(v67 + 8 * v26);
    ++v23;
    if (!v27)
    {
      int64_t v23 = v26 + 1;
      if (v26 + 1 >= v68) {
        goto LABEL_32;
      }
      unint64_t v27 = *(void *)(v67 + 8 * v23);
      if (!v27)
      {
        int64_t v23 = v26 + 2;
        if (v26 + 2 >= v68) {
          goto LABEL_32;
        }
        unint64_t v27 = *(void *)(v67 + 8 * v23);
        if (!v27)
        {
          int64_t v23 = v26 + 3;
          if (v26 + 3 >= v68) {
            goto LABEL_32;
          }
          unint64_t v27 = *(void *)(v67 + 8 * v23);
          if (!v27) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v72 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v23 << 6);
LABEL_25:
    uint64_t v29 = *(void *)(v71 + 56) + 16 * v25;
    uint64_t v30 = *(void *)v29;
    unsigned int v31 = *(_DWORD *)(v29 + 8);
    char v32 = sub_100010004(*(void *)v29, v31, *(void *)(v3 + 72));
    uint64_t v33 = (void (*)(char *, uint64_t, uint64_t))*v21;
    int64_t v73 = v23;
    if (v32)
    {
      uint64_t v34 = v60;
      v33(v60, a2, v10);
      sub_100100BCC(a2, (uint64_t)v9, type metadata accessor for Task.Logger);
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain();
      uint64_t v35 = v10;
      uint64_t v36 = sub_1005E0EB0();
      os_log_type_t v37 = sub_1005E25C0();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = swift_slowAlloc();
        v76[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v38 = v59;
        *(_DWORD *)(v38 + 4) = 2;
        *(_WORD *)(v38 + 8) = 256;
        uint64_t v39 = &v9[*(int *)(v64 + 20)];
        uint64_t v40 = *((void *)v39 + 1);
        unint64_t v41 = *((void *)v39 + 2);
        *(unsigned char *)(v38 + 10) = *(void *)v39;
        *(_WORD *)(v38 + 11) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v42 = v40;
        uint64_t v7 = v63;
        *(void *)(v38 + 13) = sub_1000C6914(v42, v41, v76);
        uint64_t v9 = v62;
        swift_bridgeObjectRelease();
        sub_100100C34((uint64_t)v9, type metadata accessor for Task.Logger);
        *(_WORD *)(v38 + 21) = 2160;
        *(void *)(v38 + 23) = 0x786F626C69616DLL;
        *(_WORD *)(v38 + 31) = 2085;
        uint64_t v74 = v30;
        unsigned int v75 = v31;
        swift_bridgeObjectRetain();
        uint64_t v43 = sub_1005E1CC0();
        *(void *)(v38 + 33) = sub_1000C6914(v43, v44, v76);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "[%.*hhx-%{public}s] Did create '%{sensitive,mask.mailbox}s'.", (uint8_t *)v38, 0x29u);
        swift_arrayDestroy();
        a2 = v65;
        swift_slowDealloc();
        uint64_t v3 = v66;
        swift_slowDealloc();
      }
      else
      {
        sub_100100C34((uint64_t)v9, type metadata accessor for Task.Logger);

        swift_bridgeObjectRelease_n();
      }
      uint64_t result = (*v69)(v34, v35);
      uint64_t v10 = v35;
      uint64_t v13 = v61;
    }
    else
    {
      v33(v13, a2, v10);
      sub_100100BCC(a2, (uint64_t)v7, type metadata accessor for Task.Logger);
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain();
      uint64_t v45 = v10;
      uint64_t v46 = sub_1005E0EB0();
      int v47 = v13;
      os_log_type_t v48 = sub_1005E25A0();
      if (os_log_type_enabled(v46, v48))
      {
        uint64_t v49 = swift_slowAlloc();
        v76[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v49 = v59;
        *(_DWORD *)(v49 + 4) = 2;
        *(_WORD *)(v49 + 8) = 256;
        uint64_t v50 = &v7[*(int *)(v64 + 20)];
        uint64_t v51 = *((void *)v50 + 1);
        unint64_t v52 = *((void *)v50 + 2);
        *(unsigned char *)(v49 + 10) = *(void *)v50;
        *(_WORD *)(v49 + 11) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v53 = v51;
        uint64_t v7 = v63;
        *(void *)(v49 + 13) = sub_1000C6914(v53, v52, v76);
        uint64_t v9 = v62;
        swift_bridgeObjectRelease();
        sub_100100C34((uint64_t)v7, type metadata accessor for Task.Logger);
        *(_WORD *)(v49 + 21) = 2160;
        *(void *)(v49 + 23) = 0x786F626C69616DLL;
        *(_WORD *)(v49 + 31) = 2085;
        uint64_t v74 = v30;
        unsigned int v75 = v31;
        swift_bridgeObjectRetain();
        uint64_t v54 = sub_1005E1CC0();
        *(void *)(v49 + 33) = sub_1000C6914(v54, v55, v76);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v46, v48, "[%.*hhx-%{public}s] Failed to create '%{sensitive,mask.mailbox}s'.", (uint8_t *)v49, 0x29u);
        swift_arrayDestroy();
        a2 = v65;
        swift_slowDealloc();
        uint64_t v3 = v66;
        swift_slowDealloc();
      }
      else
      {
        sub_100100C34((uint64_t)v7, type metadata accessor for Task.Logger);

        swift_bridgeObjectRelease_n();
      }
      uint64_t result = (*v69)(v47, v45);
      uint64_t v10 = v45;
      uint64_t v13 = v47;
    }
    uint64_t v21 = v70;
    unint64_t v20 = v72;
    int64_t v23 = v73;
  }
  int64_t v28 = v26 + 4;
  if (v28 >= v68)
  {
LABEL_32:
    swift_release();
    uint64_t v56 = v58[0];
    uint64_t v57 = swift_bridgeObjectRetain();
    sub_1001A7710(v57);
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(v56 + 129) = 1;
    return result;
  }
  unint64_t v27 = *(void *)(v67 + 8 * v28);
  if (v27)
  {
    int64_t v23 = v28;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v23 >= v68) {
      goto LABEL_32;
    }
    unint64_t v27 = *(void *)(v67 + 8 * v23);
    ++v28;
    if (v27) {
      goto LABEL_24;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1000FF7A8@<X0>(uint64_t a1@<X8>)
{
  return sub_10003C94C(v1, a1);
}

uint64_t sub_1000FF7BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000FE690();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

NSObject *sub_1000FF7EC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  return sub_1000FDF94(*(void *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), a2, a3, a4, a5, a6);
}

uint64_t ServerID.osVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1000FF874()
{
  unint64_t result = qword_10070CA18;
  if (!qword_10070CA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070CA18);
  }
  return result;
}

unint64_t sub_1000FF8CC()
{
  unint64_t result = qword_10070CA20;
  if (!qword_10070CA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070CA20);
  }
  return result;
}

unint64_t sub_1000FF920(uint64_t a1)
{
  unint64_t result = sub_1000FF948();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1000FF948()
{
  unint64_t result = qword_10070CAA0;
  if (!qword_10070CAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070CAA0);
  }
  return result;
}

BOOL sub_1000FF99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a2 & 0x100000000) != 0)
  {
    if ((a4 & 0x100000000) == 0 || a2 != a4) {
      return 0;
    }
  }
  else if ((a4 & 0x100000000) != 0 || a2 != a4)
  {
    return 0;
  }
  return sub_1000255D4(a1, a3);
}

uint64_t sub_1000FF9EC(uint64_t result, uint64_t a2)
{
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
LABEL_4:
  while (v6)
  {
    unint64_t v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v9 = v8 | (v2 << 6);
LABEL_19:
    uint64_t v14 = *(void *)(result + 56) + 16 * v9;
    if ((*(unsigned int *)(v14 + 8) | ((unint64_t)*(unsigned int *)(v14 + 8) << 32)) == (*(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned int *)(a2 + 16) << 32)))
    {
      uint64_t v15 = *(void *)v14;
      uint64_t v16 = *(void *)(a2 + 8);
      uint64_t v17 = *(void *)(v15 + 16);
      if (v17 == *(void *)(v16 + 16))
      {
        if (!v17 || v15 == v16) {
          return 1;
        }
        if (*(unsigned __int8 *)(v15 + 32) == *(unsigned __int8 *)(v16 + 32))
        {
          if (v17 == 1) {
            return 1;
          }
          if (*(unsigned __int8 *)(v15 + 33) == *(unsigned __int8 *)(v16 + 33))
          {
            if (v17 == 2) {
              return 1;
            }
            if (*(unsigned __int8 *)(v15 + 34) == *(unsigned __int8 *)(v16 + 34))
            {
              uint64_t v18 = (unsigned __int8 *)(v15 + 35);
              uint64_t v19 = (unsigned __int8 *)(v16 + 35);
              uint64_t v20 = v17 - 3;
              while (v20)
              {
                int v22 = *v18++;
                int v21 = v22;
                int v23 = *v19++;
                --v20;
                if (v21 != v23) {
                  goto LABEL_4;
                }
              }
              return 1;
            }
          }
        }
      }
    }
  }
  if (__OFADD__(v2++, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v2 >= v7) {
    return 0;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v2);
  if (v11)
  {
LABEL_18:
    unint64_t v13 = __clz(__rbit64(v11));
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = v13 + (v2 << 6);
    goto LABEL_19;
  }
  int64_t v12 = v2 + 1;
  if (v2 + 1 >= v7) {
    return 0;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11) {
    goto LABEL_17;
  }
  int64_t v12 = v2 + 2;
  if (v2 + 2 >= v7) {
    return 0;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11) {
    goto LABEL_17;
  }
  int64_t v12 = v2 + 3;
  if (v2 + 3 >= v7) {
    return 0;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11) {
    goto LABEL_17;
  }
  int64_t v12 = v2 + 4;
  if (v2 + 4 >= v7) {
    return 0;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11)
  {
LABEL_17:
    int64_t v2 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v2 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v2 >= v7) {
      return 0;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v2);
    ++v12;
    if (v11) {
      goto LABEL_18;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1000FFBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v43 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v33 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v34 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  uint64_t v42 = a2;
  if (v11) {
    goto LABEL_4;
  }
LABEL_5:
  int64_t v17 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
LABEL_38:
    __break(1u);
    return result;
  }
  if (v17 >= v34) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v33 + 8 * v17);
  ++v13;
  if (!v18)
  {
    int64_t v13 = v17 + 1;
    if (v17 + 1 >= v34) {
      goto LABEL_36;
    }
    unint64_t v18 = *(void *)(v33 + 8 * v13);
    if (!v18)
    {
      int64_t v13 = v17 + 2;
      if (v17 + 2 >= v34) {
        goto LABEL_36;
      }
      unint64_t v18 = *(void *)(v33 + 8 * v13);
      if (!v18)
      {
        int64_t v13 = v17 + 3;
        if (v17 + 3 >= v34) {
          goto LABEL_36;
        }
        unint64_t v18 = *(void *)(v33 + 8 * v13);
        if (!v18)
        {
          int64_t v19 = v17 + 4;
          if (v19 < v34)
          {
            unint64_t v18 = *(void *)(v33 + 8 * v19);
            int64_t v13 = v19;
            if (!v18)
            {
              while (1)
              {
                int64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_38;
                }
                if (v13 >= v34) {
                  goto LABEL_36;
                }
                unint64_t v18 = *(void *)(v33 + 8 * v13);
                ++v19;
                if (v18) {
                  goto LABEL_19;
                }
              }
            }
            goto LABEL_19;
          }
LABEL_36:
          swift_release();
          return 0;
        }
      }
    }
  }
LABEL_19:
  uint64_t v15 = (v18 - 1) & v18;
  for (unint64_t i = __clz(__rbit64(v18)) + (v13 << 6); ; unint64_t i = v14 | (v13 << 6))
  {
    uint64_t v20 = *(void *)(v37 + 56) + 16 * i;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(unsigned int *)(v20 + 8);
    swift_bridgeObjectRetain_n();
    char v46 = 0;
    int v23 = sub_1001A93FC(v21, v22, v36);
    uint64_t v45 = v23[2];
    if (!v45) {
      break;
    }
    uint64_t v35 = v22;
    uint64_t v40 = v23;
    uint64_t v41 = v21;
    unint64_t v38 = v15;
    int64_t v39 = v13;
    uint64_t v24 = 0;
    unint64_t v44 = v23 + 4;
    uint64_t v25 = *(void *)(a2 + 16);
    while (!v25)
    {
LABEL_23:
      if (++v24 == v45)
      {
        uint64_t v21 = v41;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_34;
      }
    }
    uint64_t v26 = v43;
    int v27 = *((_DWORD *)v44 + v24);
    uint64_t v28 = a2 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
    swift_bridgeObjectRetain_n();
    uint64_t v29 = *(void *)(v26 + 72);
    uint64_t v30 = v25;
    while (1)
    {
      sub_100100BCC(v28, (uint64_t)v7, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() != 1) {
        break;
      }
      sub_100100C34((uint64_t)v7, type metadata accessor for TaskHistory.Previous);
LABEL_27:
      v28 += v29;
      if (!--v30)
      {
        a2 = v42;
        swift_bridgeObjectRelease_n();
        goto LABEL_23;
      }
    }
    int v31 = *(_DWORD *)&v7[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
    sub_100100C34((uint64_t)v7, type metadata accessor for ClientCommand);
    if (v31 != v27) {
      goto LABEL_27;
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    a2 = v42;
    uint64_t result = swift_bridgeObjectRelease_n();
    unint64_t v11 = v38;
    int64_t v13 = v39;
    if (!v38) {
      goto LABEL_5;
    }
LABEL_4:
    unint64_t v14 = __clz(__rbit64(v11));
    uint64_t v15 = (v11 - 1) & v11;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_34:
  swift_release();
  return v21;
}

uint64_t sub_1000FFF80(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v53 = a2;
  uint64_t v59 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v51 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v56 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  int64_t v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)v47 - v13;
  uint64_t v15 = *a1;
  uint64_t v16 = *((unsigned int *)a1 + 2);
  uint64_t v17 = swift_bridgeObjectRetain();
  char v64 = 0;
  uint64_t v48 = v16;
  uint64_t v49 = a4;
  unint64_t v18 = sub_1001A93FC(v17, v16, a4);
  int64_t v19 = (void *)v18[2];
  if (!v19)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v50 = v15;
  uint64_t v20 = 0;
  v47[1] = v18;
  unint64_t v55 = v18 + 4;
  uint64_t v21 = *(void *)(a3 + 16);
  uint64_t v61 = v12;
  uint64_t v62 = v21;
  uint64_t v60 = v9;
  uint64_t v58 = a3;
  unint64_t v52 = v19;
  while (!v62)
  {
LABEL_5:
    uint64_t v20 = (void *)((char *)v20 + 1);
    if (v20 == v19) {
      goto LABEL_32;
    }
  }
  uint64_t v57 = v20;
  uint64_t v22 = v56;
  int v23 = *((_DWORD *)v55 + (void)v20);
  unint64_t v54 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  uint64_t v24 = a3 + v54;
  swift_bridgeObjectRetain();
  uint64_t v25 = *(void *)(v22 + 72);
  uint64_t v26 = v62;
  while (1)
  {
    sub_100100BCC(v24, (uint64_t)v14, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_100100C34((uint64_t)v14, type metadata accessor for TaskHistory.Previous);
LABEL_9:
    v24 += v25;
    if (!--v26)
    {
      a3 = v58;
LABEL_4:
      int64_t v19 = v52;
      uint64_t v20 = v57;
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
  }
  uint64_t v27 = sub_10000566C(&qword_10070B308);
  int v28 = *(_DWORD *)&v14[*(int *)(v27 + 48)];
  sub_100100C34((uint64_t)v14, type metadata accessor for ClientCommand);
  if (v28 != v23) {
    goto LABEL_9;
  }
  uint64_t v29 = v58;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v53 + 16);
  if (v30)
  {
    uint64_t v31 = v51;
    uint64_t v32 = v53 + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
    swift_bridgeObjectRetain_n();
    uint64_t v33 = *(void *)(v31 + 72);
    do
    {
      sub_100100BCC(v32, (uint64_t)v8, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_100100C34((uint64_t)v8, type metadata accessor for TaskHistory.Running);
      }
      else
      {
        int v34 = *((_DWORD *)v8 + 2);
        uint64_t v35 = sub_10000566C(&qword_10070B6A0);
        sub_100100C34((uint64_t)&v8[*(int *)(v35 + 64)], type metadata accessor for ClientCommand);
        if (v34 == v23)
        {
          swift_bridgeObjectRelease();
          a3 = v58;
          goto LABEL_4;
        }
      }
      v32 += v33;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = v58;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v36 = swift_bridgeObjectRetain();
  char v63 = 1;
  uint64_t v37 = sub_1001A93FC(v36, v48 | 0x100000000, v49);
  uint64_t v59 = v37[2];
  if (v59)
  {
    uint64_t v38 = 0;
    int64_t v39 = v37 + 4;
    uint64_t v40 = v29 + v54;
    uint64_t v57 = v37 + 4;
    unint64_t v55 = v37;
    uint64_t v56 = v29 + v54;
    uint64_t v41 = (uint64_t)v61;
LABEL_23:
    int v42 = *((_DWORD *)v39 + v38++);
    uint64_t result = swift_bridgeObjectRetain_n();
    uint64_t v44 = 0;
    while (1)
    {
      uint64_t v45 = v44 + 1;
      if (__OFADD__(v44, 1)) {
        break;
      }
      sub_100100BCC(v40, v41, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t result = sub_100100C34(v41, type metadata accessor for TaskHistory.Previous);
      }
      else
      {
        int v46 = *(_DWORD *)(v41 + *(int *)(v27 + 48));
        uint64_t result = sub_100100C34(v41, type metadata accessor for ClientCommand);
        if (v46 == v42)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 0;
        }
      }
      ++v44;
      v40 += v25;
      if (v45 == v62)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v40 = v56;
        int64_t v39 = v57;
        if (v38 == v59) {
          goto LABEL_31;
        }
        goto LABEL_23;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  return result;
}

uint64_t sub_100100504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v11) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    uint64_t v19 = *(void *)(a1 + 56) + 16 * i;
    uint64_t v20 = *(void *)v19;
    int v21 = *(_DWORD *)(v19 + 8);
    uint64_t v25 = *(void *)v19;
    int v26 = v21;
    swift_bridgeObjectRetain();
    char v22 = sub_1000FFF80(&v25, a2, a3, a4);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v20;
    }
    if (v22)
    {
      swift_release();
      return v20;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v13++, 1)) {
      break;
    }
    if (v13 >= v27) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v24 + 8 * v13);
    if (!v17)
    {
      int64_t v18 = v13 + 1;
      if (v13 + 1 >= v27) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v24 + 8 * v18);
      if (v17) {
        goto LABEL_14;
      }
      int64_t v18 = v13 + 2;
      if (v13 + 2 >= v27) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v24 + 8 * v18);
      if (v17) {
        goto LABEL_14;
      }
      int64_t v18 = v13 + 3;
      if (v13 + 3 >= v27) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v24 + 8 * v18);
      if (v17)
      {
LABEL_14:
        int64_t v13 = v18;
        goto LABEL_15;
      }
      int64_t v23 = v13 + 4;
      if (v13 + 4 >= v27)
      {
LABEL_28:
        swift_release();
        return 0;
      }
      unint64_t v17 = *(void *)(v24 + 8 * v23);
      for (v13 += 4; !v17; ++v23)
      {
        int64_t v13 = v23 + 1;
        if (__OFADD__(v23, 1)) {
          goto LABEL_31;
        }
        if (v13 >= v27) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v24 + 8 * v13);
      }
    }
LABEL_15:
    unint64_t v11 = (v17 - 1) & v17;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_100100724(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t j = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (j << 6); ; unint64_t i = __clz(__rbit64(v12)) + (j << 6))
  {
    uint64_t v14 = 16 * i;
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = *(void *)(a1 + 56) + v14;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(unsigned int *)(v18 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (a2(v16, v17, v19, v20))
    {
      swift_release();
      return v16;
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = j + 1;
    if (__OFADD__(j, 1)) {
      break;
    }
    if (v11 >= v22) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v21 + 8 * v11);
    ++j;
    if (v12) {
      goto LABEL_19;
    }
    int64_t j = v11 + 1;
    if (v11 + 1 >= v22) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v21 + 8 * j);
    if (v12) {
      goto LABEL_19;
    }
    int64_t j = v11 + 2;
    if (v11 + 2 >= v22) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v21 + 8 * j);
    if (v12) {
      goto LABEL_19;
    }
    int64_t j = v11 + 3;
    if (v11 + 3 >= v22) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v21 + 8 * j);
    if (v12) {
      goto LABEL_19;
    }
    int64_t v13 = v11 + 4;
    if (v13 >= v22)
    {
LABEL_24:
      swift_release();
      return 0;
    }
    unint64_t v12 = *(void *)(v21 + 8 * v13);
    for (int64_t j = v13; !v12; ++v13)
    {
      int64_t j = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_27;
      }
      if (j >= v22) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v21 + 8 * j);
    }
LABEL_19:
    unint64_t v6 = (v12 - 1) & v12;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100100940(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (long long *)((char *)&v12[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100100BCC(a1, (uint64_t)v4, type metadata accessor for UntaggedResponse);
  if (swift_getEnumCaseMultiPayload() != 7) {
    return sub_100100C34((uint64_t)v4, type metadata accessor for UntaggedResponse);
  }
  long long v5 = v4[1];
  long long v13 = *v4;
  long long v14 = v5;
  long long v15 = v4[2];
  sub_100100A98((uint64_t)&v13);
  uint64_t v6 = swift_bridgeObjectRetain();
  char v7 = sub_1000FF9EC(v6, (uint64_t)&v13);
  sub_100100AFC((uint64_t)&v13);
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0) {
    return sub_100100AFC((uint64_t)&v13);
  }
  uint64_t v8 = *((void *)&v13 + 1);
  unsigned int v9 = v14;
  swift_bridgeObjectRetain();
  sub_1000187DC((uint64_t)v12, v8, v9);
  sub_100100AFC((uint64_t)&v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100100A98(uint64_t a1)
{
  return a1;
}

uint64_t sub_100100AFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100100B60(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return sub_1000FE758(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5], v4[6]) & 1;
}

uint64_t sub_100100B94()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100100BCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100100C34(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for CreateMailboxes.CommandID(uint64_t a1)
{
  return j__swift_bridgeObjectRelease(*(void *)a1, *(unsigned int *)(a1 + 8), *(unsigned __int8 *)(a1 + 12));
}

uint64_t _s13IMAP2Behavior15CreateMailboxesV9CommandIDOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unsigned int v4 = *((_DWORD *)a2 + 2);
  uint64_t v5 = *((unsigned __int8 *)a2 + 12);
  Mailbox.name.getter(*a2, v4, v5);
  *(void *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 12) = v5;
  return a1;
}

uint64_t *assignWithCopy for CreateMailboxes.CommandID(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unsigned int v4 = *((_DWORD *)a2 + 2);
  uint64_t v5 = *((unsigned __int8 *)a2 + 12);
  Mailbox.name.getter(*a2, v4, v5);
  uint64_t v6 = *a1;
  uint64_t v7 = *((unsigned int *)a1 + 2);
  uint64_t v8 = *((unsigned __int8 *)a1 + 12);
  *a1 = v3;
  *((_DWORD *)a1 + 2) = v4;
  *((unsigned char *)a1 + 12) = v5;
  j__swift_bridgeObjectRelease(v6, v7, v8);
  return a1;
}

void *initializeWithTake for CreateMailboxes.CommandID(void *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)((char *)result + 5) = *(uint64_t *)((char *)a2 + 5);
  *uint64_t result = v2;
  return result;
}

uint64_t *assignWithTake for CreateMailboxes.CommandID(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  int v4 = *((_DWORD *)a2 + 2);
  char v5 = *((unsigned char *)a2 + 12);
  uint64_t v6 = *a1;
  uint64_t v7 = *((unsigned int *)a1 + 2);
  uint64_t v8 = *((unsigned __int8 *)a1 + 12);
  *a1 = v3;
  *((_DWORD *)a1 + 2) = v4;
  *((unsigned char *)a1 + 12) = v5;
  j__swift_bridgeObjectRelease(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateMailboxes.CommandID(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 13)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 12);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CreateMailboxes.CommandID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 13) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 13) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 12) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100100E54(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 12);
}

uint64_t sub_100100E5C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 12) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CreateMailboxes.CommandID()
{
  return &type metadata for CreateMailboxes.CommandID;
}

ValueMetadata *type metadata accessor for CreateMailboxes.ActionID()
{
  return &type metadata for CreateMailboxes.ActionID;
}

void *sub_100100E88(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = a1;
  sub_10001A814(0, v1, 0);
  uint64_t result = (void *)sub_1000B1E48(v2);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = v2 + 64;
  uint64_t v24 = v2 + 80;
  int64_t v25 = v1;
  int v26 = v4;
  uint64_t v27 = v2 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(v2 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v2 + 36) != v4) {
      goto LABEL_24;
    }
    uint64_t v28 = v6;
    int64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v5);
    uint64_t v12 = *v11;
    uint64_t v29 = v11[1];
    uint64_t v13 = *(void *)(v2 + 56) + 16 * v5;
    uint64_t v14 = *(void *)v13;
    int v30 = *(_DWORD *)(v13 + 8);
    uint64_t v15 = v2;
    unint64_t v17 = _swiftEmptyArrayStorage[2];
    unint64_t v16 = _swiftEmptyArrayStorage[3];
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v17 >= v16 >> 1) {
      uint64_t result = (void *)sub_10001A814(v16 > 1, v17 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v17 + 1;
    uint64_t v18 = &_swiftEmptyArrayStorage[4 * v17];
    v18[4] = v12;
    v18[5] = v29;
    v18[6] = v14;
    *((_DWORD *)v18 + 14) = v30;
    int64_t v8 = 1 << *(unsigned char *)(v15 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = v27;
    uint64_t v19 = *(void *)(v27 + 8 * v10);
    if ((v19 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    uint64_t v2 = v15;
    int v4 = v26;
    if (*(_DWORD *)(v15 + 36) != v26) {
      goto LABEL_27;
    }
    unint64_t v20 = v19 & (-2 << (v5 & 0x3F));
    if (v20)
    {
      int64_t v8 = __clz(__rbit64(v20)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v25;
    }
    else
    {
      unint64_t v21 = v10 + 1;
      unint64_t v22 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v25;
      if (v10 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v27 + 8 * v21);
        if (v23)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v10)
          {
            unint64_t v23 = *(void *)(v24 + 8 * v10++);
            if (v23)
            {
              unint64_t v21 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v6 = v28 + 1;
    uint64_t v5 = v8;
    if (v28 + 1 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1001010CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a1;
  uint64_t v6 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    uint64_t v18 = *(void *)(a2 + 48) + 16 * i;
    uint64_t v19 = *(void *)v18;
    LODWORD(v18) = *(_DWORD *)(v18 + 8);
    char v20 = *(unsigned char *)(*(void *)(a2 + 56) + i);
    uint64_t v21 = v19;
    int v22 = v18;
    char v23 = v20;
    swift_bridgeObjectRetain();
    sub_100101FAC(&v24, &v21, a3);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    }
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v10) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v16 - 1) & v16;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10)
  {
LABEL_26:
    swift_release();
    return v24;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    int64_t v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10010129C(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v3 = v1;
    int v4 = (unsigned int *)(swift_bridgeObjectRetain() + 40);
    do
    {
      if (*(void *)(v3 + 48))
      {
        unint64_t v5 = sub_100024264(*((void *)v4 - 1), *v4);
        if (v6)
        {
          unint64_t v7 = v5;
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v9 = *(void *)(v3 + 48);
          *(void *)(v3 + 48) = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_100097B14();
          }
          swift_bridgeObjectRelease();
          sub_1000962B0(v7, v9);
          *(void *)(v3 + 48) = v9;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      v4 += 4;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001013DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  int v4 = (void *)sub_1000D5108((uint64_t)_swiftEmptyArrayStorage);
  a2[7] = v4;
  a2[9] = &_swiftEmptySetSingleton;
  uint64_t v31 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v32 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v8 << 6);
    }
    else
    {
      int64_t v11 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_38;
      }
      if (v11 >= v32)
      {
LABEL_35:
        swift_release();
        a2[6] = sub_100100E88(a1);
        a2[8] = a1;
        *a2 = &type metadata for DeleteMailboxes;
        return sub_1005E2BF0();
      }
      unint64_t v12 = *(void *)(v31 + 8 * v11);
      ++v8;
      if (!v12)
      {
        int64_t v8 = v11 + 1;
        if (v11 + 1 >= v32) {
          goto LABEL_35;
        }
        unint64_t v12 = *(void *)(v31 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 2;
          if (v11 + 2 >= v32) {
            goto LABEL_35;
          }
          unint64_t v12 = *(void *)(v31 + 8 * v8);
          if (!v12)
          {
            int64_t v8 = v11 + 3;
            if (v11 + 3 >= v32) {
              goto LABEL_35;
            }
            unint64_t v12 = *(void *)(v31 + 8 * v8);
            if (!v12)
            {
              int64_t v13 = v11 + 4;
              if (v13 >= v32) {
                goto LABEL_35;
              }
              unint64_t v12 = *(void *)(v31 + 8 * v13);
              if (!v12)
              {
                while (1)
                {
                  int64_t v8 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    goto LABEL_39;
                  }
                  if (v8 >= v32) {
                    goto LABEL_35;
                  }
                  unint64_t v12 = *(void *)(v31 + 8 * v8);
                  ++v13;
                  if (v12) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v8 = v13;
            }
          }
        }
      }
LABEL_23:
      unint64_t v7 = (v12 - 1) & v12;
      unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    }
    uint64_t v14 = *(void *)(a1 + 56) + 16 * v10;
    uint64_t v15 = *(void *)v14;
    unsigned int v16 = *(_DWORD *)(v14 + 8);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    a2[7] = 0x8000000000000000;
    unint64_t v19 = sub_100024264(v15, v16);
    uint64_t v20 = v4[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      break;
    }
    char v23 = v18;
    if (v4[3] >= v22)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v18) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_100097D28();
        if (v23) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_100050AEC(v22, isUniquelyReferenced_nonNull_native);
      unint64_t v24 = sub_100024264(v15, v16);
      if ((v23 & 1) != (v25 & 1)) {
        goto LABEL_40;
      }
      unint64_t v19 = v24;
      if (v23)
      {
LABEL_4:
        *(unsigned char *)(v4[7] + v19) = 0;
        goto LABEL_5;
      }
    }
    v4[(v19 >> 6) + 8] |= 1 << v19;
    uint64_t v26 = v4[6] + 16 * v19;
    *(void *)uint64_t v26 = v15;
    *(_DWORD *)(v26 + 8) = v16;
    *(unsigned char *)(v4[7] + v19) = 0;
    uint64_t v27 = v4[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_37;
    }
    v4[2] = v29;
    swift_bridgeObjectRetain();
LABEL_5:
    a2[7] = v4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

BOOL sub_10010171C(uint64_t a1, uint64_t a2)
{
  return (*(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned int *)(a1 + 8) << 32)) == (*(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned int *)(a2 + 8) << 32))
      && sub_1000255D4(*(void *)a1, *(void *)a2);
}

BOOL sub_100101768(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  if (!v4) {
    return v5 == 0;
  }
  return v5 && a1[1] == a2[1] && sub_1000255D4(v4, v5);
}

uint64_t sub_1001017CC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Task.Logger(0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = &v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  int64_t v8 = &v37[-v7];
  uint64_t v9 = sub_1005E0ED0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  int64_t v13 = &v37[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v15 = &v37[-v14];
  uint64_t v16 = *(void *)(v1 + 56);
  if (*(void *)(v16 + 16) == 1 && (int64_t v17 = sub_1001CB5EC(v16)) != 0)
  {
    unint64_t v19 = v17;
    uint64_t v41 = v18;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16))(v15, a1, v9);
    sub_100105E38(a1, (uint64_t)v8, type metadata accessor for Task.Logger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1005E0EB0();
    os_log_type_t v21 = sub_1005E25C0();
    int v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v43 = v40;
      *(_DWORD *)uint64_t v23 = 68158723;
      LODWORD(v44) = 2;
      sub_1005E2960();
      *(_WORD *)(v23 + 8) = 256;
      unint64_t v24 = &v8[*(int *)(v3 + 20)];
      int v38 = v22;
      uint64_t v25 = v24[1];
      unint64_t v26 = v24[2];
      LOBYTE(v44) = *v24;
      sub_1005E2960();
      *(_WORD *)(v23 + 11) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v39 = v10;
      uint64_t v44 = sub_1000C6914(v25, v26, &v43);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100105288((uint64_t)v8, type metadata accessor for Task.Logger);
      *(_WORD *)(v23 + 21) = 2160;
      uint64_t v44 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v23 + 31) = 2085;
      uint64_t v44 = (uint64_t)v19;
      int v45 = v41;
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_1005E1CC0();
      uint64_t v44 = sub_1000C6914(v27, v28, &v43);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v38, "[%.*hhx-%{public}s] Created task for '%{sensitive,mask.mailbox}s'", (uint8_t *)v23, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v39 + 8))(v15, v9);
    }
    else
    {
      sub_100105288((uint64_t)v8, type metadata accessor for Task.Logger);

      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v15, v9);
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
    sub_100105E38(a1, (uint64_t)v6, type metadata accessor for Task.Logger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_10009B528(v1, (uint64_t)&v44);
    int v30 = sub_1005E0EB0();
    os_log_type_t v31 = sub_1005E25C0();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v43 = v40;
      *(_DWORD *)uint64_t v32 = 68158466;
      LODWORD(v42) = 2;
      uint64_t v41 = v9;
      sub_1005E2960();
      *(_WORD *)(v32 + 8) = 256;
      uint64_t v33 = &v6[*(int *)(v3 + 20)];
      uint64_t v34 = v33[1];
      unint64_t v35 = v33[2];
      LOBYTE(v42) = *v33;
      sub_1005E2960();
      *(_WORD *)(v32 + 11) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_1000C6914(v34, v35, &v43);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100105288((uint64_t)v6, type metadata accessor for Task.Logger);
      *(_WORD *)(v32 + 21) = 2048;
      uint64_t v36 = *(void *)(v46 + 16);
      sub_10009B584((uint64_t)&v44);
      uint64_t v42 = v36;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "[%.*hhx-%{public}s] Created task for %ld mailboxes.", (uint8_t *)v32, 0x1Fu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v41);
    }
    else
    {
      sub_10009B584((uint64_t)&v44);
      sub_100105288((uint64_t)v6, type metadata accessor for Task.Logger);

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
    }
  }
}

uint64_t sub_100101E50@<X0>(uint64_t a1@<X8>)
{
  if (*(void *)(*(void *)(v1 + 72) + 16))
  {
    uint64_t v3 = sub_1001A9060();
    uint64_t v5 = v4;
    char v7 = v6 & 1;
    uint64_t v8 = sub_1001A90EC(v3, v4);
    int v10 = v9;
    sub_100060FF0(v3, v5, v7);
    uint64_t v11 = sub_10000566C(&qword_10070CB48);
    uint64_t v12 = a1 + *(int *)(v11 + 48);
    *(void *)uint64_t v12 = v8;
    *(_DWORD *)(v12 + 8) = v10;
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    *(void *)a1 = v8;
    *(_DWORD *)(a1 + 8) = v10;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 0, 1, v11);
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v14 = sub_10000566C(&qword_10070CB48);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    return v15(a1, 1, 1, v14);
  }
}

uint64_t sub_100101FAC(void **a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *((unsigned int *)a2 + 2);
  sub_10009B528(a3, (uint64_t)v25);
  uint64_t v6 = *(void *)(v26 + 16);
  if (!v6) {
    return sub_10009B584((uint64_t)v25);
  }
  uint64_t v7 = 0;
  while (1)
  {
    uint64_t v8 = v26 + 32 + 32 * v7;
    if ((*(unsigned int *)(v8 + 24) | ((unint64_t)*(unsigned int *)(v8 + 24) << 32)) == (v5 | (v5 << 32)))
    {
      uint64_t v9 = *(void *)(v8 + 16);
      uint64_t v10 = *(void *)(v9 + 16);
      if (v10 == *(void *)(v4 + 16))
      {
        if (v10) {
          BOOL v11 = v9 == v4;
        }
        else {
          BOOL v11 = 1;
        }
        if (v11) {
          goto LABEL_20;
        }
        if (*(unsigned __int8 *)(v9 + 32) == *(unsigned __int8 *)(v4 + 32))
        {
          if (v10 == 1) {
            goto LABEL_20;
          }
          if (*(unsigned __int8 *)(v9 + 33) == *(unsigned __int8 *)(v4 + 33))
          {
            if (v10 == 2) {
              goto LABEL_20;
            }
            if (*(unsigned __int8 *)(v9 + 34) == *(unsigned __int8 *)(v4 + 34)) {
              break;
            }
          }
        }
      }
    }
LABEL_3:
    if (++v7 == v6) {
      return sub_10009B584((uint64_t)v25);
    }
  }
  uint64_t v12 = (unsigned __int8 *)(v9 + 35);
  uint64_t v13 = v10 - 3;
  uint64_t v14 = (unsigned __int8 *)(v4 + 35);
  while (v13)
  {
    int v16 = *v12++;
    int v15 = v16;
    int v17 = *v14++;
    --v13;
    if (v15 != v17) {
      goto LABEL_3;
    }
  }
LABEL_20:
  uint64_t v19 = *(void *)v8;
  uint64_t v20 = *(void *)(v8 + 8);
  swift_bridgeObjectRetain();
  sub_10009B584((uint64_t)v25);
  os_log_type_t v21 = *a1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1000185AC(0, v21[2] + 1, 1, v21);
    os_log_type_t v21 = (void *)result;
  }
  unint64_t v23 = v21[2];
  unint64_t v22 = v21[3];
  if (v23 >= v22 >> 1)
  {
    uint64_t result = (uint64_t)sub_1000185AC((void *)(v22 > 1), v23 + 1, 1, v21);
    os_log_type_t v21 = (void *)result;
  }
  void v21[2] = v23 + 1;
  unint64_t v24 = &v21[2 * v23];
  v24[4] = v19;
  v24[5] = v20;
  *a1 = v21;
  return result;
}

uint64_t sub_100102160(char *a1, uint64_t a2)
{
  uint64_t v91 = a1;
  uint64_t v98 = type metadata accessor for Task.Logger(0);
  uint64_t v4 = __chkstk_darwin(v98);
  uint64_t v6 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v89 - v8;
  __chkstk_darwin(v7);
  BOOL v11 = (char *)&v89 - v10;
  uint64_t v12 = sub_1005E0ED0();
  uint64_t v13 = __chkstk_darwin(v12);
  int v15 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v95 = (char *)&v89 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v89 - v19;
  uint64_t v90 = v2;
  uint64_t v21 = *(void *)(v2 + 56);
  uint64_t v22 = *(void *)(v21 + 64);
  uint64_t v101 = v21 + 64;
  uint64_t v23 = 1 << *(unsigned char *)(v21 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v22;
  int64_t v102 = (unint64_t)(v23 + 63) >> 6;
  v104 = (void (**)(char *, uint64_t))(v18 + 8);
  v105 = (void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v106 = v21;
  swift_bridgeObjectRetain();
  int64_t v26 = 0;
  *(void *)&long long v27 = 68158723;
  long long v93 = v27;
  v92 = (char *)&type metadata for Any + 8;
  uint64_t v99 = a2;
  char v100 = v9;
  v96 = v15;
  uint64_t v97 = v6;
  int v103 = v11;
  int v94 = v20;
  if (v25)
  {
    while (2)
    {
      unint64_t v28 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      int64_t v108 = v26;
      unint64_t v29 = v28 | (v26 << 6);
LABEL_19:
      uint64_t v34 = *(void *)(v106 + 56);
      uint64_t v35 = *(void *)(v106 + 48) + 16 * v29;
      uint64_t v36 = *(void *)v35;
      int v107 = *(_DWORD *)(v35 + 8);
      switch(*(unsigned char *)(v34 + v29))
      {
        case 1:
          (*v105)(v20, a2, v12);
          sub_100105E38(a2, (uint64_t)v11, type metadata accessor for Task.Logger);
          swift_bridgeObjectRetain();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          swift_bridgeObjectRetain();
          uint64_t v46 = sub_1005E0EB0();
          uint64_t v47 = v12;
          os_log_type_t v48 = sub_1005E25C0();
          if (os_log_type_enabled(v46, v48))
          {
            uint64_t v49 = swift_slowAlloc();
            v111[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v49 = v93;
            *(_DWORD *)(v49 + 4) = 2;
            *(_WORD *)(v49 + 8) = 256;
            uint64_t v50 = &v103[*(int *)(v98 + 20)];
            uint64_t v51 = *((void *)v50 + 1);
            unint64_t v52 = *((void *)v50 + 2);
            *(unsigned char *)(v49 + 10) = *(void *)v50;
            *(_WORD *)(v49 + 11) = 2082;
            swift_bridgeObjectRetain();
            *(void *)(v49 + 13) = sub_1000C6914(v51, v52, v111);
            uint64_t v6 = v97;
            swift_bridgeObjectRelease();
            sub_100105288((uint64_t)v103, type metadata accessor for Task.Logger);
            *(_WORD *)(v49 + 21) = 2160;
            *(void *)(v49 + 23) = 0x786F626C69616DLL;
            *(_WORD *)(v49 + 31) = 2085;
            uint64_t v109 = v36;
            int v110 = v107;
            swift_bridgeObjectRetain();
            uint64_t v53 = sub_1005E1CC0();
            *(void *)(v49 + 33) = sub_1000C6914(v53, v54, v111);
            swift_bridgeObjectRelease_n();
            uint64_t v9 = v100;
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v46, v48, "[%.*hhx-%{public}s] Skipped deleting '%{sensitive,mask.mailbox}s' because it's in use.", (uint8_t *)v49, 0x29u);
            swift_arrayDestroy();
            a2 = v99;
            swift_slowDealloc();
            BOOL v11 = v103;
            swift_slowDealloc();
          }
          else
          {
            sub_100105288((uint64_t)v11, type metadata accessor for Task.Logger);

            swift_bridgeObjectRelease_n();
          }
          (*v104)(v20, v47);
          goto LABEL_33;
        case 3:
          (*v105)(v95, a2, v12);
          sub_100105E38(a2, (uint64_t)v9, type metadata accessor for Task.Logger);
          swift_bridgeObjectRetain();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          swift_bridgeObjectRetain();
          unint64_t v55 = sub_1005E0EB0();
          uint64_t v47 = v12;
          os_log_type_t v56 = sub_1005E25C0();
          if (os_log_type_enabled(v55, v56))
          {
            uint64_t v57 = swift_slowAlloc();
            v111[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v57 = v93;
            *(_DWORD *)(v57 + 4) = 2;
            *(_WORD *)(v57 + 8) = 256;
            uint64_t v58 = &v9[*(int *)(v98 + 20)];
            uint64_t v59 = *((void *)v58 + 1);
            unint64_t v60 = *((void *)v58 + 2);
            *(unsigned char *)(v57 + 10) = *(void *)v58;
            *(_WORD *)(v57 + 11) = 2082;
            swift_bridgeObjectRetain();
            *(void *)(v57 + 13) = sub_1000C6914(v59, v60, v111);
            uint64_t v6 = v97;
            swift_bridgeObjectRelease();
            sub_100105288((uint64_t)v100, type metadata accessor for Task.Logger);
            *(_WORD *)(v57 + 21) = 2160;
            *(void *)(v57 + 23) = 0x786F626C69616DLL;
            *(_WORD *)(v57 + 31) = 2085;
            uint64_t v109 = v36;
            int v110 = v107;
            swift_bridgeObjectRetain();
            uint64_t v61 = sub_1005E1CC0();
            *(void *)(v57 + 33) = sub_1000C6914(v61, v62, v111);
            swift_bridgeObjectRelease_n();
            uint64_t v9 = v100;
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v55, v56, "[%.*hhx-%{public}s] Did delete '%{sensitive,mask.mailbox}s'.", (uint8_t *)v57, 0x29u);
            swift_arrayDestroy();
            a2 = v99;
            swift_slowDealloc();
            BOOL v11 = v103;
            swift_slowDealloc();
          }
          else
          {
            sub_100105288((uint64_t)v9, type metadata accessor for Task.Logger);

            swift_bridgeObjectRelease_n();
          }
          (*v104)(v95, v47);
LABEL_33:
          uint64_t v12 = v47;
          int v15 = v96;
          int64_t v26 = v108;
          if (!v25) {
            break;
          }
          continue;
        default:
          (*v105)(v15, a2, v12);
          sub_100105E38(a2, (uint64_t)v6, type metadata accessor for Task.Logger);
          swift_bridgeObjectRetain();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          swift_bridgeObjectRetain();
          uint64_t v37 = sub_1005E0EB0();
          uint64_t v38 = v12;
          os_log_type_t v39 = sub_1005E25C0();
          if (os_log_type_enabled(v37, v39))
          {
            uint64_t v40 = swift_slowAlloc();
            v111[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v40 = v93;
            *(_DWORD *)(v40 + 4) = 2;
            *(_WORD *)(v40 + 8) = 256;
            uint64_t v41 = &v6[*(int *)(v98 + 20)];
            uint64_t v42 = *((void *)v41 + 1);
            unint64_t v43 = *((void *)v41 + 2);
            *(unsigned char *)(v40 + 10) = *(void *)v41;
            *(_WORD *)(v40 + 11) = 2082;
            swift_bridgeObjectRetain();
            *(void *)(v40 + 13) = sub_1000C6914(v42, v43, v111);
            uint64_t v6 = v97;
            swift_bridgeObjectRelease();
            sub_100105288((uint64_t)v6, type metadata accessor for Task.Logger);
            *(_WORD *)(v40 + 21) = 2160;
            *(void *)(v40 + 23) = 0x786F626C69616DLL;
            *(_WORD *)(v40 + 31) = 2085;
            uint64_t v109 = v36;
            int v110 = v107;
            swift_bridgeObjectRetain();
            uint64_t v44 = sub_1005E1CC0();
            *(void *)(v40 + 33) = sub_1000C6914(v44, v45, v111);
            swift_bridgeObjectRelease_n();
            uint64_t v9 = v100;
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v37, v39, "[%.*hhx-%{public}s] Failed to delete '%{sensitive,mask.mailbox}s'.", (uint8_t *)v40, 0x29u);
            swift_arrayDestroy();
            a2 = v99;
            swift_slowDealloc();
            BOOL v11 = v103;
            swift_slowDealloc();
          }
          else
          {
            sub_100105288((uint64_t)v6, type metadata accessor for Task.Logger);

            swift_bridgeObjectRelease_n();
          }
          (*v104)(v15, v38);
          uint64_t v12 = v38;
          uint64_t v20 = v94;
          int64_t v26 = v108;
          if (v25) {
            continue;
          }
          goto LABEL_5;
      }
      break;
    }
  }
LABEL_5:
  int64_t v30 = v26 + 1;
  if (__OFADD__(v26, 1))
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    uint64_t result = (uint64_t)sub_1000176D0(0, *(void *)(a2 + 16) + 1, 1, (void *)a2);
    a2 = result;
    goto LABEL_65;
  }
  if (v30 < v102)
  {
    unint64_t v31 = *(void *)(v101 + 8 * v30);
    int64_t v32 = v26 + 1;
    if (v31) {
      goto LABEL_18;
    }
    int64_t v32 = v26 + 2;
    if (v26 + 2 >= v102) {
      goto LABEL_35;
    }
    unint64_t v31 = *(void *)(v101 + 8 * v32);
    if (v31) {
      goto LABEL_18;
    }
    int64_t v32 = v26 + 3;
    if (v26 + 3 >= v102) {
      goto LABEL_35;
    }
    unint64_t v31 = *(void *)(v101 + 8 * v32);
    if (v31)
    {
LABEL_18:
      unint64_t v25 = (v31 - 1) & v31;
      int64_t v108 = v32;
      unint64_t v29 = __clz(__rbit64(v31)) + (v32 << 6);
      goto LABEL_19;
    }
    uint64_t v33 = v26 + 4;
    if (v26 + 4 < v102)
    {
      unint64_t v31 = *(void *)(v101 + 8 * v33);
      if (v31)
      {
        int64_t v32 = v26 + 4;
        goto LABEL_18;
      }
      while (1)
      {
        int64_t v32 = v33 + 1;
        if (__OFADD__(v33, 1)) {
          goto LABEL_71;
        }
        if (v32 >= v102) {
          break;
        }
        unint64_t v31 = *(void *)(v101 + 8 * v32);
        ++v33;
        if (v31) {
          goto LABEL_18;
        }
      }
    }
  }
LABEL_35:
  swift_release();
  a2 = *(void *)(v90 + 56);
  uint64_t v63 = swift_bridgeObjectRetain();
  uint64_t v64 = sub_100103BCC(v63, (uint64_t (*)(char *, unint64_t, uint64_t))sub_100103E88);
  swift_bridgeObjectRelease();
  uint64_t v65 = sub_100038F98(v64);
  swift_release();
  uint64_t v66 = v91;
  sub_10010129C((uint64_t)v65);
  uint64_t v69 = *((void *)v66 + 21);
  int64_t v68 = v66 + 168;
  uint64_t v67 = v69;
  if (v68[16] == 1)
  {
    uint64_t v71 = *((void *)v68 + 1);
    uint64_t v109 = *((void *)v68 - 1);
    uint64_t v70 = v109;
    swift_retain();
    sub_10005636C(v70, v67, v71, 1);
    uint64_t v72 = sub_100104968((uint64_t)&v109, (uint64_t)v65);
    swift_release();
    int64_t v73 = *(void *)(v109 + 16);
    if (v73 < v72)
    {
      __break(1u);
      goto LABEL_74;
    }
    sub_1000D550C(v72, v73);
    sub_10000F0D4(v70, v67, v71, 1);
    uint64_t result = swift_release();
    int v15 = v91;
    *((void *)v91 + 20) = v109;
    *(void *)int64_t v68 = 0;
    *((void *)v68 + 1) = 0;
    v15[184] = 1;
  }
  else
  {
    uint64_t result = swift_release();
    int v15 = v91;
  }
  int64_t v75 = 0;
  v15[129] = 1;
  uint64_t v76 = a2 + 64;
  uint64_t v77 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v78 = -1;
  if (v77 < 64) {
    uint64_t v78 = ~(-1 << v77);
  }
  unint64_t v79 = v78 & *(void *)(a2 + 64);
  int64_t v80 = (unint64_t)(v77 + 63) >> 6;
  do
  {
    if (v79)
    {
      unint64_t v81 = __clz(__rbit64(v79));
      v79 &= v79 - 1;
      unint64_t v82 = v81 | (v75 << 6);
    }
    else
    {
      if (__OFADD__(v75++, 1)) {
        goto LABEL_70;
      }
      if (v75 >= v80) {
        return result;
      }
      unint64_t v84 = *(void *)(v76 + 8 * v75);
      if (!v84)
      {
        int64_t v85 = v75 + 1;
        if (v75 + 1 >= v80) {
          return result;
        }
        unint64_t v84 = *(void *)(v76 + 8 * v85);
        if (!v84)
        {
          int64_t v85 = v75 + 2;
          if (v75 + 2 >= v80) {
            return result;
          }
          unint64_t v84 = *(void *)(v76 + 8 * v85);
          if (!v84)
          {
            int64_t v85 = v75 + 3;
            if (v75 + 3 >= v80) {
              return result;
            }
            unint64_t v84 = *(void *)(v76 + 8 * v85);
            if (!v84)
            {
              int64_t v85 = v75 + 4;
              if (v75 + 4 >= v80) {
                return result;
              }
              unint64_t v84 = *(void *)(v76 + 8 * v85);
              if (!v84)
              {
                int64_t v85 = v75 + 5;
                if (v75 + 5 >= v80) {
                  return result;
                }
                unint64_t v84 = *(void *)(v76 + 8 * v85);
                if (!v84)
                {
                  while (1)
                  {
                    int64_t v75 = v85 + 1;
                    if (__OFADD__(v85, 1)) {
                      break;
                    }
                    if (v75 >= v80) {
                      return result;
                    }
                    unint64_t v84 = *(void *)(v76 + 8 * v75);
                    ++v85;
                    if (v84) {
                      goto LABEL_59;
                    }
                  }
LABEL_74:
                  __break(1u);
                  JUMPOUT(0x100102E58);
                }
              }
            }
          }
        }
        int64_t v75 = v85;
      }
LABEL_59:
      unint64_t v86 = __clz(__rbit64(v84));
      unint64_t v79 = (v84 - 1) & v84;
      unint64_t v82 = v86 + (v75 << 6);
    }
  }
  while (*(unsigned char *)(*(void *)(a2 + 56) + v82) != 1);
  a2 = *((void *)v15 + 30);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_72;
  }
LABEL_65:
  unint64_t v88 = *(void *)(a2 + 16);
  unint64_t v87 = *(void *)(a2 + 24);
  if (v88 >= v87 >> 1)
  {
    uint64_t result = (uint64_t)sub_1000176D0((void *)(v87 > 1), v88 + 1, 1, (void *)a2);
    a2 = result;
  }
  *(void *)(a2 + 16) = v88 + 1;
  *(unsigned char *)(a2 + v88 + 32) = 3;
  *((void *)v15 + 30) = a2;
  return result;
}

uint64_t sub_100102E70@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_100104EB0(a1, a2);
  *a3 = result;
  a3[1] = v5;
  a3[2] = v6;
  return result;
}

uint64_t sub_100102EA8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v8 = v6;
  uint64_t v14 = *(void *)a1;
  unsigned int v15 = *(_DWORD *)(a1 + 8);
  swift_bridgeObjectRetain();
  sub_1001DAC80(a6, a2, a3, a4, a5);
  if (v7) {
    swift_errorRelease();
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *(void *)(v8 + 56);
  *(void *)(v8 + 56) = 0x8000000000000000;
  sub_10010361C(3, v14, v15, isUniquelyReferenced_nonNull_native);
  *(void *)(v8 + 56) = v18;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_100102F8C()
{
  return 0xD000000000000010;
}

unint64_t sub_100102FA8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_100102FF0(unint64_t result, uint64_t a2, int a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = a5[6] + 16 * result;
  *(void *)uint64_t v5 = a2;
  *(_DWORD *)(v5 + 8) = a3;
  uint64_t v6 = a5[7] + 72 * result;
  *(_WORD *)(v6 + 64) = *(_WORD *)(a4 + 64);
  long long v7 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v6 + 48) = v7;
  long long v8 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v8;
  uint64_t v9 = a5[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a5[2] = v11;
  }
  return result;
}

uint64_t sub_100103058(unint64_t a1, uint64_t a2, int a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a5[6] + 16 * a1;
  *(void *)uint64_t v8 = a2;
  *(_DWORD *)(v8 + 8) = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = sub_10000566C(&qword_100709E38);
  uint64_t result = sub_10006B1BC(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

unint64_t sub_1001030F8(unint64_t result, uint64_t a2, int a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = a5[6] + 16 * result;
  *(void *)uint64_t v5 = a2;
  *(_DWORD *)(v5 + 8) = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_100103144(unint64_t a1, uint64_t a2, char a3, void *a4)
{
  char v7 = a3 & 1;
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t result = sub_10001FEC4(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1);
  *(unsigned char *)(a4[7] + a1) = v7;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_1001031E4(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

unint64_t sub_10010322C(unint64_t result, int a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(_DWORD *)(a4[6] + 4 * result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

uint64_t sub_100103270(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = sub_10000566C(&qword_100709E38);
  uint64_t result = sub_10006B1BC(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_10010330C(char a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_100024260(a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= result && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= result && (a5 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100097798();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 24 * v14;
      uint64_t result = swift_bridgeObjectRelease();
      *(unsigned char *)uint64_t v21 = a1;
      *(void *)(v21 + 8) = a2;
      *(unsigned char *)(v21 + 16) = a3 & 1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    *(_DWORD *)(v20[6] + 4 * v14) = a4;
    uint64_t v23 = v20[7] + 24 * v14;
    *(unsigned char *)uint64_t v23 = a1;
    *(void *)(v23 + 8) = a2;
    *(unsigned char *)(v23 + 16) = a3 & 1;
    uint64_t v24 = v20[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (!v25)
    {
      v20[2] = v26;
      return result;
    }
    goto LABEL_14;
  }
  sub_100050168(result, a5 & 1);
  uint64_t result = sub_100024260(a4);
  if ((v18 & 1) == (v22 & 1))
  {
    unint64_t v14 = result;
    uint64_t v20 = (void *)*v6;
    if (v18) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

uint64_t sub_100103478(uint64_t a1, uint64_t a2, unsigned int a3, char a4)
{
  BOOL v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100024264(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100097B14();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 72 * v12;
      return sub_100104468(a1, v19);
    }
    goto LABEL_13;
  }
  sub_100050768(v15, a4 & 1);
  unint64_t v21 = sub_100024264(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_1005E3380();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = v18[6] + 16 * v12;
  *(void *)uint64_t v23 = a2;
  *(_DWORD *)(v23 + 8) = a3;
  uint64_t v24 = v18[7] + 72 * v12;
  *(_OWORD *)uint64_t v24 = *(_OWORD *)a1;
  long long v25 = *(_OWORD *)(a1 + 16);
  long long v26 = *(_OWORD *)(a1 + 32);
  long long v27 = *(_OWORD *)(a1 + 48);
  *(_WORD *)(v24 + 64) = *(_WORD *)(a1 + 64);
  *(_OWORD *)(v24 + 32) = v26;
  *(_OWORD *)(v24 + 48) = v27;
  *(_OWORD *)(v24 + 16) = v25;
  uint64_t v28 = v18[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18[2] = v30;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10010361C(char a1, uint64_t a2, unsigned int a3, char a4)
{
  BOOL v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100024264(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100097D28();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(unsigned char *)(v18[7] + v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100050AEC(result, a4 & 1);
  uint64_t result = sub_100024264(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_1005E3380();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v20 = v18[6] + 16 * v12;
  *(void *)uint64_t v20 = a2;
  *(_DWORD *)(v20 + 8) = a3;
  *(unsigned char *)(v18[7] + v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v23;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100103784(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_100024260(a5);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= result && (a6 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= result && (a6 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100098098();
LABEL_7:
    BOOL v22 = (void *)*v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7] + 32 * v16;
      uint64_t result = swift_bridgeObjectRelease();
      *(unsigned char *)uint64_t v23 = a1;
      *(void *)(v23 + 8) = a2;
      *(unsigned char *)(v23 + 16) = a3 & 1;
      *(void *)(v23 + 24) = a4;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    *(_DWORD *)(v22[6] + 4 * v16) = a5;
    uint64_t v25 = v22[7] + 32 * v16;
    *(unsigned char *)uint64_t v25 = a1;
    *(void *)(v25 + 8) = a2;
    *(unsigned char *)(v25 + 16) = a3 & 1;
    *(void *)(v25 + 24) = a4;
    uint64_t v26 = v22[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (!v27)
    {
      v22[2] = v28;
      return result;
    }
    goto LABEL_14;
  }
  sub_100051410(result, a6 & 1);
  uint64_t result = sub_100024260(a5);
  if ((v20 & 1) == (v24 & 1))
  {
    unint64_t v16 = result;
    BOOL v22 = (void *)*v7;
    if (v20) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

uint64_t sub_1001038F4(char a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for MoveAndCopyMessages.CommandID();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (void *)*v3;
  unint64_t v13 = sub_1000244EC(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t result = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= result && (a3 & 1) != 0) {
    goto LABEL_9;
  }
  if (v18 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100098BD4();
    goto LABEL_9;
  }
  sub_1000529F8(result, a3 & 1);
  uint64_t result = sub_1000244EC(a2);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_14:
    uint64_t result = sub_1005E3380();
    __break(1u);
    return result;
  }
  unint64_t v13 = result;
LABEL_9:
  char v20 = *v4;
  if (v17)
  {
    *(unsigned char *)(v20[7] + v13) = a1 & 1;
  }
  else
  {
    sub_100105E38(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    return sub_100103144(v13, (uint64_t)v10, a1 & 1, v20);
  }
  return result;
}

uint64_t sub_100103A68(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_100024260(a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= result && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= result && (a5 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1000998DC();
LABEL_7:
    char v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 24 * v14;
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)uint64_t v21 = a1;
      *(unsigned char *)(v21 + 8) = a2;
      *(void *)(v21 + 16) = a3;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    *(_DWORD *)(v20[6] + 4 * v14) = a4;
    uint64_t v23 = v20[7] + 24 * v14;
    *(void *)uint64_t v23 = a1;
    *(unsigned char *)(v23 + 8) = a2;
    *(void *)(v23 + 16) = a3;
    uint64_t v24 = v20[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (!v25)
    {
      v20[2] = v26;
      return result;
    }
    goto LABEL_14;
  }
  sub_1000544A4(result, a5 & 1);
  uint64_t result = sub_100024260(a4);
  if ((v18 & 1) == (v22 & 1))
  {
    unint64_t v14 = result;
    char v20 = (void *)*v6;
    if (v18) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

uint64_t sub_100103BCC(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = v2;
  uint64_t v5 = isStackAllocationSafe;
  char v6 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = a2((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5);
    if (v2) {
      swift_willThrow();
    }
    else {
      return v9;
    }
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v4 = a2((char *)v10, v7, v5);
    swift_slowDealloc();
  }
  return v4;
}

unint64_t *sub_100103D38(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10) {
      return (unint64_t *)sub_10006CDF0(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v10) {
        return (unint64_t *)sub_10006CDF0(result, a2, v4, a3);
      }
      unint64_t v14 = *(void *)(v6 + 8 * v5);
      if (!v14)
      {
        int64_t v5 = v13 + 2;
        if (v13 + 2 >= v10) {
          return (unint64_t *)sub_10006CDF0(result, a2, v4, a3);
        }
        unint64_t v14 = *(void *)(v6 + 8 * v5);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if (*(unsigned char *)(*(void *)(a3 + 56) + v12) == 3)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_10006CDF0(result, a2, v4, a3);
      }
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v10) {
    return (unint64_t *)sub_10006CDF0(result, a2, v4, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      return (unint64_t *)sub_10006CDF0(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t *sub_100103E88(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10) {
      return (unint64_t *)sub_10006CDF0(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v10) {
        return (unint64_t *)sub_10006CDF0(result, a2, v4, a3);
      }
      unint64_t v14 = *(void *)(v6 + 8 * v5);
      if (!v14)
      {
        int64_t v5 = v13 + 2;
        if (v13 + 2 >= v10) {
          return (unint64_t *)sub_10006CDF0(result, a2, v4, a3);
        }
        unint64_t v14 = *(void *)(v6 + 8 * v5);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if (*(unsigned char *)(*(void *)(a3 + 56) + v12) != 1)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_10006CDF0(result, a2, v4, a3);
      }
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v10) {
    return (unint64_t *)sub_10006CDF0(result, a2, v4, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      return (unint64_t *)sub_10006CDF0(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100103FE0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  unint64_t v9 = (unint64_t *)(a1 + 88);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_100104080(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v4 = v3;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_100096FE4();
    *uint64_t v3 = v13;
    uint64_t result = swift_bridgeObjectRelease();
  }
  if ((a2 & 0x8000000000000000) != 0 || (uint64_t v9 = *v3, 1 << *(unsigned char *)(*v4 + 32) <= (uint64_t)a2))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(v9 + 8 * (a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(v9 + 36) == a3)
  {
    *uint64_t v4 = 0x8000000000000000;
    uint64_t v10 = *(void *)(*(void *)(v9 + 48) + 16 * a2);
    uint64_t v11 = *(void *)(v9 + 56) + 16 * a2;
    uint64_t v12 = *(void *)v11;
    LODWORD(v11) = *(_DWORD *)(v11 + 8);
    *(void *)a1 = v12;
    *(_DWORD *)(a1 + 8) = v11;
    sub_100095D28(a2, v9);
    *uint64_t v4 = v9;
    swift_bridgeObjectRelease();
    return v10;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_10010418C(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v5 = *(void *)(*(void *)(a5 + 48) + 16 * a2);
    uint64_t v6 = *(void *)(a5 + 56) + 16 * a2;
    uint64_t v7 = *(void *)v6;
    LODWORD(v6) = *(_DWORD *)(v6 + 8);
    *(void *)uint64_t result = v7;
    *(_DWORD *)(result + 8) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

unsigned char *sub_100104230(unsigned char *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    *uint64_t result = *(unsigned char *)(*(void *)(a5 + 56) + a2);
    return (unsigned char *)swift_bridgeObjectRetain();
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1001042B4(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v5 = *(void *)(*(void *)(a5 + 48) + 16 * a2);
    uint64_t v6 = *(void *)(a5 + 56) + 32 * a2;
    uint64_t v7 = *(void *)v6;
    int v8 = *(_DWORD *)(v6 + 8);
    uint64_t v9 = *(void *)(v6 + 16);
    LODWORD(v6) = *(_DWORD *)(v6 + 24);
    *(void *)uint64_t result = v7;
    *(_DWORD *)(result + 8) = v8;
    *(void *)(result + 16) = v9;
    *(_DWORD *)(result + 24) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

BOOL sub_10010436C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *a2;
  if (!v4) {
    return v5 == 0;
  }
  return v5 && *(void *)(a1 + 16) == a2[1] && sub_1000255D4(v4, v5);
}

uint64_t sub_1001043D8(unsigned int *a1, uint64_t a2)
{
  return sub_100128708(*a1, *((void *)a1 + 1), *((void *)a1 + 2), *(void *)a2, *(void *)(a2 + 8)) & 1;
}

uint64_t sub_100104408(uint64_t a1, uint64_t a2)
{
  return (*(void *)(a1 + 8) == *(void *)a2) & ~(*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 8));
}

uint64_t sub_10010442C(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 4);
  unsigned int v3 = *(unsigned __int8 *)(a2 + 4);
  unsigned int v4 = (v2 == *(_DWORD *)a2) & ~v3;
  if (*(_DWORD *)a2) {
    unsigned int v5 = *(unsigned __int8 *)(a2 + 4);
  }
  else {
    unsigned int v5 = 0;
  }
  if (*(_DWORD *)a2) {
    unsigned int v3 = 0;
  }
  if (v2) {
    unsigned int v6 = v5;
  }
  else {
    unsigned int v6 = v3;
  }
  if (*(unsigned char *)(a1 + 8) == 1) {
    return v6;
  }
  else {
    return v4;
  }
}

uint64_t sub_100104468(uint64_t a1, uint64_t a2)
{
  return a2;
}

unsigned char *storeEnumTagSinglePayload for DeleteMailboxes.Result(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100104590);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeleteMailboxes.Result()
{
  return &type metadata for DeleteMailboxes.Result;
}

uint64_t destroy for DeleteMailboxes(uint64_t a1)
{
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DeleteMailboxes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DeleteMailboxes(void *a1, void *a2)
{
  *a1 = *a2;
  sub_100022498(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DeleteMailboxes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DeleteMailboxes()
{
  return &type metadata for DeleteMailboxes;
}

unint64_t sub_1001047E8()
{
  unint64_t result = qword_10070CAB0;
  if (!qword_10070CAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070CAB0);
  }
  return result;
}

unint64_t sub_100104840()
{
  unint64_t result = qword_10070CAB8;
  if (!qword_10070CAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070CAB8);
  }
  return result;
}

unint64_t sub_100104894(uint64_t a1)
{
  unint64_t result = sub_1001048BC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001048BC()
{
  unint64_t result = qword_10070CB38;
  if (!qword_10070CB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070CB38);
  }
  return result;
}

unint64_t sub_100104914()
{
  unint64_t result = qword_10070CB40;
  if (!qword_10070CB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070CB40);
  }
  return result;
}

uint64_t sub_100104968(uint64_t a1, uint64_t a2)
{
  int v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v6 = 0;
  unint64_t v7 = 0;
  while (1)
  {
    uint64_t result = sub_10008BF28(v2[v6 + 6], v2[v6 + 7], a2);
    if (result) {
      break;
    }
    ++v7;
    v6 += 22;
    if (v3 == v7) {
      return v3;
    }
  }
  unint64_t v9 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v9 == v3) {
      return v7;
    }
    while (1)
    {
      unint64_t v11 = v2[2];
      if (v9 >= v11) {
        break;
      }
      uint64_t v12 = &v2[v6];
      uint64_t result = sub_10008BF28(v2[v6 + 28], v2[v6 + 29], a2);
      if ((result & 1) == 0)
      {
        if (v9 != v7)
        {
          if (v7 >= v11) {
            goto LABEL_22;
          }
          uint64_t v13 = (long long *)&v2[22 * v7 + 4];
          long long v14 = *v13;
          long long v15 = v13[2];
          long long v67 = v13[1];
          long long v68 = v15;
          long long v66 = v14;
          long long v16 = v13[3];
          long long v17 = v13[4];
          long long v18 = v13[6];
          long long v71 = v13[5];
          long long v72 = v18;
          long long v69 = v16;
          long long v70 = v17;
          long long v19 = v13[7];
          long long v20 = v13[8];
          long long v21 = v13[10];
          long long v75 = v13[9];
          long long v76 = v21;
          long long v73 = v19;
          long long v74 = v20;
          long long v22 = v12[13];
          long long v23 = v12[15];
          long long v78 = v12[14];
          long long v79 = v23;
          long long v77 = v22;
          long long v24 = v12[16];
          long long v25 = v12[17];
          long long v26 = v12[19];
          long long v82 = v12[18];
          long long v83 = v26;
          long long v80 = v24;
          long long v81 = v25;
          long long v27 = v12[20];
          long long v28 = v12[21];
          long long v29 = v12[23];
          long long v86 = v12[22];
          long long v87 = v29;
          long long v84 = v27;
          long long v85 = v28;
          sub_100007780((uint64_t)&v66);
          sub_100007780((uint64_t)&v77);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int v2 = sub_100093440(v2);
          }
          uint64_t v30 = &v2[22 * v7];
          long long v31 = v30[2];
          long long v32 = v30[4];
          v64[1] = v30[3];
          v64[2] = v32;
          v64[0] = v31;
          long long v33 = v30[5];
          long long v34 = v30[6];
          long long v35 = v30[8];
          v64[5] = v30[7];
          v64[6] = v35;
          v64[3] = v33;
          v64[4] = v34;
          long long v36 = v30[9];
          long long v37 = v30[10];
          long long v38 = v30[12];
          v64[9] = v30[11];
          v64[10] = v38;
          v64[7] = v36;
          v64[8] = v37;
          long long v39 = v77;
          long long v40 = v79;
          v30[3] = v78;
          v30[4] = v40;
          v30[2] = v39;
          long long v41 = v80;
          long long v42 = v81;
          long long v43 = v83;
          v30[7] = v82;
          v30[8] = v43;
          v30[5] = v41;
          v30[6] = v42;
          long long v44 = v84;
          long long v45 = v85;
          long long v46 = v87;
          v30[11] = v86;
          v30[12] = v46;
          v30[9] = v44;
          v30[10] = v45;
          uint64_t result = sub_100007820((uint64_t)v64);
          if (v9 >= v2[2]) {
            goto LABEL_23;
          }
          uint64_t v47 = &v2[v6];
          long long v48 = *(_OWORD *)&v2[v6 + 26];
          long long v49 = *(_OWORD *)&v2[v6 + 30];
          v65[1] = *(_OWORD *)&v2[v6 + 28];
          v65[2] = v49;
          v65[0] = v48;
          long long v50 = *(_OWORD *)&v2[v6 + 32];
          long long v51 = *(_OWORD *)&v2[v6 + 34];
          long long v52 = *(_OWORD *)&v2[v6 + 38];
          v65[5] = *(_OWORD *)&v2[v6 + 36];
          v65[6] = v52;
          v65[3] = v50;
          v65[4] = v51;
          long long v53 = *(_OWORD *)&v2[v6 + 40];
          long long v54 = *(_OWORD *)&v2[v6 + 42];
          long long v55 = *(_OWORD *)&v2[v6 + 46];
          v65[9] = *(_OWORD *)&v2[v6 + 44];
          v65[10] = v55;
          v65[7] = v53;
          v65[8] = v54;
          long long v56 = v66;
          long long v57 = v68;
          v47[14] = v67;
          v47[15] = v57;
          v47[13] = v56;
          long long v58 = v69;
          long long v59 = v70;
          long long v60 = v72;
          v47[18] = v71;
          v47[19] = v60;
          v47[16] = v58;
          v47[17] = v59;
          long long v61 = v73;
          long long v62 = v74;
          long long v63 = v76;
          v47[22] = v75;
          v47[23] = v63;
          v47[20] = v61;
          v47[21] = v62;
          uint64_t result = sub_100007820((uint64_t)v65);
          *(void *)a1 = v2;
        }
        if (__OFADD__(v7++, 1)) {
          goto LABEL_21;
        }
      }
      ++v9;
      v6 += 22;
      if (v9 == v2[2]) {
        return v7;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_100104C0C(unint64_t result)
{
  if (((result >> 59) & 0x1E | (result >> 2) & 1) == 0x11)
  {
    if (*(void *)(*(void *)(v1 + 56) + 16))
    {
      uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      unsigned int v3 = *(_DWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      uint64_t v4 = *(void *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      uint64_t result = sub_100024264(v2, v3);
      if (v5)
      {
        if (*(void *)(v4 + 16))
        {
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v7 = *(void *)(v1 + 56);
          *(void *)(v1 + 56) = 0x8000000000000000;
          sub_10010361C(1, v2, v3, isUniquelyReferenced_nonNull_native);
          *(void *)(v1 + 56) = v7;
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1000187DC((uint64_t)&v7, v2, v3);
        }
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void *sub_100104D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100104D8C(a1, a2, a3, (uint64_t)sub_100105E08, (uint64_t (*)(uint64_t, void *, uint64_t))sub_10002B87C);
}

void *sub_100104D34(char a1, uint64_t a2)
{
  return sub_100105AA4(a1, a2, (uint64_t)sub_100105EA0, (uint64_t (*)(uint64_t, void *, uint64_t))sub_10002BB3C);
}

void *sub_100104D60(char a1, uint64_t a2)
{
  return sub_1001056B4(a1, a2, (uint64_t)sub_100105D48, (uint64_t (*)(uint64_t, void *, uint64_t))sub_10002B5E4);
}

void *sub_100104D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, void *, uint64_t))
{
  v18[0] = a1;
  v18[1] = a2;
  v16[2] = v18;
  swift_bridgeObjectRetain();
  uint64_t v8 = a5(a4, v16, a3);
  int64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    long long v17 = _swiftEmptyArrayStorage;
    sub_10001AA94(0, v9, 0);
    uint64_t v10 = v17;
    unint64_t v11 = v17[2];
    uint64_t v12 = 32;
    do
    {
      int v13 = *(_DWORD *)(v8 + v12);
      long long v17 = v10;
      unint64_t v14 = v10[3];
      if (v11 >= v14 >> 1)
      {
        sub_10001AA94(v14 > 1, v11 + 1, 1);
        uint64_t v10 = v17;
      }
      v10[2] = v11 + 1;
      *((_DWORD *)v10 + v11 + 8) = v13;
      v12 += 24;
      ++v11;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v10;
}

uint64_t sub_100104EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  int64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v40 - v10;
  uint64_t v14 = *(void *)(v2 + 64);
  uint64_t v13 = v2 + 64;
  uint64_t v12 = v14;
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v46 = a1;
  long long v44 = (void *)a2;
  if (!v15
    || (uint64_t v16 = sub_1000B1E48(v12),
        uint64_t v18 = v17,
        char v20 = v19 & 1,
        uint64_t v21 = sub_100104080((uint64_t)&v47, v16, v17),
        sub_100060FF0(v16, v18, v20),
        !v21))
  {
    if (!*(void *)(*(void *)v13 + 16) && !*(void *)(*(void *)(v3 + 72) + 16))
    {
      long long v25 = sub_100104D8C(0, 0, (uint64_t)v44, (uint64_t)sub_100105358, (uint64_t (*)(uint64_t, void *, uint64_t))sub_10002B610);
      uint64_t v26 = v25[2];
      if (v26)
      {
        uint64_t v41 = v3;
        long long v42 = v25;
        uint64_t v27 = 0;
        uint64_t v43 = v26;
        long long v44 = v25 + 4;
        uint64_t v28 = v46;
        uint64_t v29 = *(void *)(v46 + 16);
        do
        {
          if (v29)
          {
            uint64_t v30 = v45;
            int v31 = *((_DWORD *)v44 + v27);
            uint64_t v32 = v28 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
            swift_bridgeObjectRetain_n();
            uint64_t v33 = *(void *)(v30 + 72);
            uint64_t v34 = v29;
            while (1)
            {
              sub_100105E38(v32, (uint64_t)v11, type metadata accessor for TaskHistory.Previous);
              sub_100105E38((uint64_t)v11, (uint64_t)v9, type metadata accessor for TaskHistory.Previous);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                int v35 = *((_DWORD *)v9 + 2);
                sub_10007C4A4(*(void *)v9);
                if (v35 == v31)
                {
                  sub_100105288((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  return 1;
                }
              }
              else
              {
                sub_100105288((uint64_t)v9, type metadata accessor for TaskHistory.Previous);
              }
              sub_100105288((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
              v32 += v33;
              if (!--v34)
              {
                uint64_t v28 = v46;
                swift_bridgeObjectRelease_n();
                uint64_t v26 = v43;
                break;
              }
            }
          }
          ++v27;
        }
        while (v27 != v26);
        swift_bridgeObjectRelease();
        uint64_t v3 = v41;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v36 = swift_bridgeObjectRetain();
      uint64_t v37 = sub_100103BCC(v36, (uint64_t (*)(char *, unint64_t, uint64_t))sub_100103D38);
      swift_bridgeObjectRelease();
      long long v38 = sub_1001010CC(_swiftEmptyArrayStorage, v37, v3);
      swift_release();
      if (v38[2])
      {
        uint64_t v21 = 0;
        *(void *)(swift_allocObject() + 16) = v38;
        return v21;
      }
      swift_bridgeObjectRelease();
    }
    return 1;
  }
  uint64_t v22 = v47;
  int v23 = v48;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v22;
  *(_DWORD *)(v24 + 24) = v23;
  *(void *)(v24 + 32) = 1;
  return v21;
}

uint64_t sub_100105288(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001052E8()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100105320()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

BOOL sub_100105358(uint64_t a1)
{
  return sub_10010436C(a1, *(uint64_t **)(v1 + 16));
}

void *sub_100105378(uint64_t a1)
{
  return sub_100105960(a1, (uint64_t)CredentialsRequestID.init(), (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_10002B798);
}

void *sub_1001053A4(uint64_t a1)
{
  return sub_100105960(a1, (uint64_t)CredentialsRequestID.init(), (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_10002B7C4);
}

void *sub_1001053D0(uint64_t a1)
{
  return sub_100105960(a1, (uint64_t)CredentialsRequestID.init(), (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_10002BE90);
}

void *sub_1001053FC(uint64_t a1)
{
  return sub_100105960(a1, (uint64_t)CredentialsRequestID.init(), (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_10002BEBC);
}

void *sub_100105428(uint64_t a1, char a2, uint64_t a3)
{
  return sub_100105530(a1, a2, a3, (uint64_t)sub_100105D60, (uint64_t (*)(uint64_t, void *, uint64_t))sub_10002BEE8);
}

void *sub_100105454(char a1, uint64_t a2)
{
  return sub_1001056B4(a1, a2, (uint64_t)sub_100106128, (uint64_t (*)(uint64_t, void *, uint64_t))sub_10002BF14);
}

void *sub_100105480(uint64_t a1)
{
  return sub_100105960(a1, (uint64_t)CredentialsRequestID.init(), (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_10002BF40);
}

void *sub_1001054AC(uint64_t a1, char a2, uint64_t a3)
{
  return sub_100105530(a1, a2, a3, (uint64_t)sub_100105D60, (uint64_t (*)(uint64_t, void *, uint64_t))sub_10002BF6C);
}

void *sub_1001054D8(uint64_t a1)
{
  return sub_100105960(a1, (uint64_t)CredentialsRequestID.init(), (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_10002BF98);
}

void *sub_100105504(uint64_t a1, char a2, uint64_t a3)
{
  return sub_100105530(a1, a2, a3, (uint64_t)sub_100105DA0, (uint64_t (*)(uint64_t, void *, uint64_t))sub_10002BFC4);
}

void *sub_100105530(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, void *, uint64_t))
{
  uint64_t v18 = a1;
  char v19 = a2 & 1;
  v16[2] = &v18;
  swift_bridgeObjectRetain();
  uint64_t v8 = a5(a4, v16, a3);
  int64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
    sub_10001AA94(0, v9, 0);
    uint64_t v10 = v17;
    unint64_t v11 = v17[2];
    uint64_t v12 = 32;
    do
    {
      int v13 = *(_DWORD *)(v8 + v12);
      uint64_t v17 = v10;
      unint64_t v14 = v10[3];
      if (v11 >= v14 >> 1)
      {
        sub_10001AA94(v14 > 1, v11 + 1, 1);
        uint64_t v10 = v17;
      }
      v10[2] = v11 + 1;
      *((_DWORD *)v10 + v11 + 8) = v13;
      v12 += 24;
      ++v11;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v10;
}

void *sub_10010565C(uint64_t a1)
{
  return sub_100105960(a1, (uint64_t)CredentialsRequestID.init(), (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_10002C17C);
}

void *sub_100105688(char a1, uint64_t a2)
{
  return sub_1001056B4(a1, a2, (uint64_t)sub_100106128, (uint64_t (*)(uint64_t, void *, uint64_t))sub_10002C1A8);
}

void *sub_1001056B4(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void *, uint64_t))
{
  char v17 = a1;
  v15[2] = &v17;
  swift_bridgeObjectRetain();
  uint64_t v7 = a4(a3, v15, a2);
  int64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    sub_10001AA94(0, v8, 0);
    int64_t v9 = v16;
    unint64_t v10 = v16[2];
    uint64_t v11 = 32;
    do
    {
      int v12 = *(_DWORD *)(v7 + v11);
      uint64_t v16 = v9;
      unint64_t v13 = v9[3];
      if (v10 >= v13 >> 1)
      {
        sub_10001AA94(v13 > 1, v10 + 1, 1);
        int64_t v9 = v16;
      }
      v9[2] = v10 + 1;
      *((_DWORD *)v9 + v10 + 8) = v12;
      v11 += 8;
      ++v10;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v9;
}

void *sub_1001057D8(uint64_t a1)
{
  return sub_100105960(a1, (uint64_t)CredentialsRequestID.init(), (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_10002C350);
}

void *sub_100105804(uint64_t a1, uint64_t a2)
{
  int v13 = a1;
  char v14 = BYTE4(a1) & 1;
  v11[2] = &v13;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_10002C37C((uint64_t)sub_100105DC8, (uint64_t)v11, a2);
  int64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    int v12 = _swiftEmptyArrayStorage;
    sub_10001AA94(0, v4, 0);
    char v5 = v12;
    unint64_t v6 = v12[2];
    uint64_t v7 = 32;
    do
    {
      int v8 = *(_DWORD *)(v3 + v7);
      int v12 = v5;
      unint64_t v9 = v5[3];
      if (v6 >= v9 >> 1)
      {
        sub_10001AA94(v9 > 1, v6 + 1, 1);
        char v5 = v12;
      }
      v5[2] = v6 + 1;
      *((_DWORD *)v5 + v6 + 8) = v8;
      v7 += 12;
      ++v6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v5;
}

void *sub_100105934(uint64_t a1)
{
  return sub_100105960(a1, (uint64_t)CredentialsRequestID.init(), (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_10002C4E8);
}

void *sub_100105960(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t *, uint64_t))
{
  swift_bridgeObjectRetain();
  uint64_t v6 = a3(a2, &v14, a1);
  int64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v15 = _swiftEmptyArrayStorage;
    sub_10001AA94(0, v7, 0);
    uint64_t v8 = 0;
    unint64_t v9 = v15;
    unint64_t v10 = v15[2];
    do
    {
      int v11 = *(_DWORD *)(v6 + 4 * v8 + 32);
      uint64_t v15 = v9;
      unint64_t v12 = v9[3];
      if (v10 >= v12 >> 1)
      {
        sub_10001AA94(v12 > 1, v10 + 1, 1);
        unint64_t v9 = v15;
      }
      ++v8;
      v9[2] = v10 + 1;
      *((_DWORD *)v9 + v10++ + 8) = v11;
    }
    while (v7 != v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v9;
}

void *sub_100105A78(char a1, uint64_t a2)
{
  return sub_100105AA4(a1, a2, (uint64_t)sub_100106108, (uint64_t (*)(uint64_t, void *, uint64_t))sub_10002C670);
}

void *sub_100105AA4(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void *, uint64_t))
{
  char v17 = a1 & 1;
  v15[2] = &v17;
  swift_bridgeObjectRetain();
  uint64_t v7 = a4(a3, v15, a2);
  int64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    sub_10001AA94(0, v8, 0);
    unint64_t v9 = v16;
    unint64_t v10 = v16[2];
    uint64_t v11 = 32;
    do
    {
      int v12 = *(_DWORD *)(v7 + v11);
      uint64_t v16 = v9;
      unint64_t v13 = v9[3];
      if (v10 >= v13 >> 1)
      {
        sub_10001AA94(v13 > 1, v10 + 1, 1);
        unint64_t v9 = v16;
      }
      v9[2] = v10 + 1;
      *((_DWORD *)v9 + v10 + 8) = v12;
      v11 += 8;
      ++v10;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v9;
}

void *sub_100105BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v14[0] = a1;
  v14[1] = a2;
  v12[2] = v14;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10002CC60((uint64_t)sub_100105CF4, (uint64_t)v12, a3);
  int64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
    sub_10001AA94(0, v5, 0);
    uint64_t v6 = v13;
    unint64_t v7 = v13[2];
    uint64_t v8 = 32;
    do
    {
      int v9 = *(_DWORD *)(v4 + v8);
      unint64_t v13 = v6;
      unint64_t v10 = v6[3];
      if (v7 >= v10 >> 1)
      {
        sub_10001AA94(v10 > 1, v7 + 1, 1);
        uint64_t v6 = v13;
      }
      v6[2] = v7 + 1;
      *((_DWORD *)v6 + v7 + 8) = v9;
      v8 += 24;
      ++v7;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v6;
}

BOOL sub_100105CF4(uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(v1 + 16);
  return *(void *)(a1 + 16) == v2[1] && sub_1000255D4(*(void *)(a1 + 8), *v2);
}

BOOL sub_100105D48(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 4) == **(unsigned __int8 **)(v1 + 16);
}

BOOL sub_100105D60(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  if (*(unsigned char *)(a1 + 16) == 1) {
    return (*(unsigned char *)(v2 + 8) & 1) != 0;
  }
  if (*(unsigned char *)(v2 + 8)) {
    return 0;
  }
  return *(void *)(a1 + 8) == *(void *)v2;
}

uint64_t sub_100105DA0(uint64_t a1)
{
  return (*(void *)(a1 + 8) == **(void **)(v1 + 16)) & ~(*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(*(void *)(v1 + 16) + 8));
}

uint64_t sub_100105DC8(uint64_t a1)
{
  uint64_t v2 = *(int **)(v1 + 16);
  int v3 = *(_DWORD *)(a1 + 4);
  int v4 = *v2;
  unsigned int v5 = *((unsigned __int8 *)v2 + 4);
  unsigned int v6 = (v3 == v4) & ~v5;
  BOOL v7 = v4 == 0;
  if (v4) {
    unsigned int v8 = v5;
  }
  else {
    unsigned int v8 = 0;
  }
  if (!v7) {
    unsigned int v5 = 0;
  }
  if (v3) {
    unsigned int v5 = v8;
  }
  if (*(unsigned char *)(a1 + 8) == 1) {
    return v5;
  }
  else {
    return v6;
  }
}

uint64_t sub_100105E08(unsigned int *a1)
{
  return sub_100128708(*a1, *((void *)a1 + 1), *((void *)a1 + 2), **(void **)(v1 + 16), *(void *)(*(void *)(v1 + 16) + 8)) & 1;
}

uint64_t sub_100105E38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

BOOL sub_100105EA0(uint64_t a1)
{
  return ((*(unsigned __int8 *)(a1 + 4) ^ **(unsigned __int8 **)(v1 + 16)) & 1) == 0;
}

uint64_t initializeBufferWithCopyOfBuffer for MailboxName(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MailboxName(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t initializeWithTake for DeleteMailboxes.DeleteMailbox(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for MailboxName(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeleteMailboxes.DeleteMailbox(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 12)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxName(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 12) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 12) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeleteMailboxes.DeleteMailbox()
{
  return &type metadata for DeleteMailboxes.DeleteMailbox;
}

uint64_t getEnumTagSinglePayload for DeleteMailboxes.ActionID(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DeleteMailboxes.ActionID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

void *sub_1001060D4(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for DeleteMailboxes.ActionID()
{
  return &type metadata for DeleteMailboxes.ActionID;
}

BOOL sub_100106108(uint64_t a1)
{
  return sub_100105EA0(a1);
}

BOOL sub_100106128(uint64_t a1)
{
  return sub_100105D48(a1);
}

uint64_t sub_100106144@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W3>, uint64_t a4@<X4>, unint64_t a5@<X5>, char a6@<W6>, uint64_t a7@<X8>)
{
  char v13 = a2 & 1;
  int v14 = a6 & 1;
  uint64_t v15 = type metadata accessor for MessageBatches(0);
  __chkstk_darwin(v15 - 8);
  char v17 = &v25[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)(a7 + 40) = sub_10001DF10((uint64_t)&off_1006BA650);
  *(unsigned char *)(a7 + 48) = 1;
  *(void *)(a7 + 112) = 0;
  *(void *)(a7 + 120) = 0;
  *(unsigned char *)(a7 + 128) = 1;
  long long v18 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a7 = *(_OWORD *)a1;
  *(_OWORD *)(a7 + 16) = v18;
  int v19 = *(_DWORD *)(a1 + 32);
  *(_DWORD *)(a7 + 32) = v19;
  *(unsigned char *)(a7 + 104) = v13;
  uint64_t v20 = *(void *)(a1 + 24);
  *(unsigned char *)(a7 + 105) = (a3 & 1) == 0;
  *(void *)(a7 + 56) = &type metadata for DetectChangesToMessages;
  uint64_t v26 = v20;
  int v27 = v19;
  sub_10003BC88();
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  sub_10010DA14(a4, (uint64_t)v17, type metadata accessor for MessageBatches);
  LOBYTE(v26) = 0;
  sub_10006705C(0xFFFFFFFFLL);
  uint64_t v21 = sub_1001880B0((uint64_t)v17, a5, v14);
  uint64_t v22 = sub_10010F6A8((uint64_t)v21);
  sub_10010DA7C((uint64_t)v17, type metadata accessor for MessageBatches);
  swift_bridgeObjectRelease();
  int v23 = 0;
  if ((a6 & 1) == 0) {
    int v23 = EngineAccountMailboxLoggerID.account.getter(a5);
  }
  uint64_t result = sub_10010DA7C(a4, type metadata accessor for MessageBatches);
  *(void *)(a7 + 136) = v22;
  *(_DWORD *)(a7 + 144) = v23;
  *(unsigned char *)(a7 + 148) = v14 != 0;
  return result;
}

Swift::Int sub_10010632C()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA350);
  qword_100761718 = result;
  return result;
}

uint64_t sub_100106354()
{
  sub_10000566C(&qword_10070B898);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1005F66F0;
  *(void *)(v0 + 32) = type metadata accessor for FetchSearchResultMessages(0);
  sub_10003BC88();
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(void *)(v0 + 80) = type metadata accessor for FindMissingMessages(0);
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(void *)(v0 + 128) = &type metadata for PurgeMessagesOutsideWindowOfInterest;
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  return v0;
}

uint64_t sub_100106468(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v4);
  unsigned int v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_10010DA14(a1, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_10003C5B4(v2, (uint64_t)v39);
  sub_10003C5B4(v2, (uint64_t)v37);
  sub_10003C5B4(v2, (uint64_t)v36);
  uint64_t v11 = sub_1005E0EB0();
  os_log_type_t v12 = sub_1005E25C0();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    int v30 = v13;
    uint64_t v15 = v14;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v35 = v31;
    *(_DWORD *)uint64_t v15 = 68160003;
    LODWORD(v33) = 2;
    uint64_t v32 = v7;
    sub_1005E2960();
    *(_WORD *)(v15 + 8) = 256;
    uint64_t v16 = *(int *)(v4 + 20);
    os_log_t v28 = v11;
    char v17 = &v6[v16];
    LOBYTE(v33) = v6[v16];
    sub_1005E2960();
    *(_WORD *)(v15 + 11) = 2082;
    uint64_t v29 = v8;
    uint64_t v19 = *((void *)v17 + 1);
    unint64_t v18 = *((void *)v17 + 2);
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1000C6914(v19, v18, &v35);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 21) = 1040;
    LODWORD(v33) = 2;
    sub_1005E2960();
    *(_WORD *)(v15 + 27) = 512;
    LOWORD(v33) = *((_WORD *)v17 + 12);
    sub_1005E2960();
    *(_WORD *)(v15 + 31) = 2160;
    uint64_t v33 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v15 + 41) = 2085;
    int v20 = *((_DWORD *)v17 + 10);
    uint64_t v33 = *((void *)v17 + 4);
    int v34 = v20;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1005E1CC0();
    uint64_t v33 = sub_1000C6914(v21, v22, &v35);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10010DA7C((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v15 + 51) = 2048;
    uint64_t v23 = *(void *)(v40 + 16);
    sub_10003C610((uint64_t)v39);
    uint64_t v33 = v23;
    sub_1005E2960();
    *(_WORD *)(v15 + 61) = 2082;
    LOBYTE(v33) = v38;
    uint64_t v24 = sub_10017CA08(v37[17]);
    uint64_t v33 = sub_1000C6914(v24, v25, &v35);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10003C610((uint64_t)v37);
    *(_WORD *)(v15 + 71) = 1024;
    LODWORD(v23) = v36[105];
    sub_10003C610((uint64_t)v36);
    LODWORD(v33) = v23;
    sub_1005E2960();
    os_log_t v26 = v28;
    _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v30, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. %ld UID batch(es): %{public}s, fetching highest-mod-seq: %{BOOL}d", (uint8_t *)v15, 0x4Du);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v10, v32);
  }
  else
  {
    sub_10003C610((uint64_t)v36);
    sub_10003C610((uint64_t)v39);
    sub_10010DA7C((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    sub_10003C610((uint64_t)v37);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_100106984@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, void *a4@<X8>)
{
  if (!*(void *)(v4 + 112))
  {
    uint64_t v9 = (void *)(a3 + *(int *)(type metadata accessor for MailboxSyncState() + 48));
    uint64_t v10 = v9[3];
    uint64_t v11 = v9[4];
    sub_10003BCDC(v9, v10);
    *(void *)(v4 + 112) = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
  }
  if (*(unsigned char *)(v4 + 128) == 1)
  {
    uint64_t v12 = a3 + *(int *)(type metadata accessor for MailboxSyncState() + 48);
    uint64_t v13 = *(void *)(v12 + 40);
    if ((*(unsigned char *)(v12 + 48) & 1) == 0) {
      uint64_t v13 = *(void *)(v13 + 16);
    }
    *(void *)(v4 + 120) = v13;
    *(unsigned char *)(v4 + 128) = 0;
  }
  if (*(unsigned char *)(v4 + 105)) {
    uint64_t v14 = &off_1006BAAD0;
  }
  else {
    uint64_t v14 = &off_1006BAA60;
  }
  uint64_t v15 = &off_1006BAB68;
  if (*(unsigned char *)(v4 + 105)) {
    uint64_t v15 = &off_1006BAC00;
  }
  if (*(unsigned char *)(v4 + 104)) {
    uint64_t v16 = (uint64_t)v14;
  }
  else {
    uint64_t v16 = (uint64_t)v15;
  }
  swift_bridgeObjectRetain();
  sub_100106AD0(a1, a2, v16, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100106AD0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, void *a4@<X8>)
{
  uint64_t v9 = sub_10000566C(&qword_10070CC58);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (uint64_t *)&v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = *(void *)v4;
  v22[12] = *(unsigned char *)(v4 + 12);
  sub_100108284(a1, a2, v15, v11);
  uint64_t v16 = sub_10000566C(&qword_10070CC60);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v11, 1, v16) == 1)
  {
    sub_100007A48((uint64_t)v11, &qword_10070CC58);
    uint64_t v17 = sub_10000566C(&qword_10070CC68);
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a4, 1, 1, v17);
  }
  else
  {
    uint64_t v19 = *v11;
    sub_10001FDF0((uint64_t)v11 + *(int *)(v16 + 48), (uint64_t)v14, &qword_100709E30);
    uint64_t v20 = sub_10000566C(&qword_10070CC68);
    uint64_t v21 = (uint64_t)a4 + *(int *)(v20 + 48);
    *a4 = v19;
    static ClientCommand.uidFetch(messages:items:)((uint64_t)v14, a3, v21);
    sub_100007A48((uint64_t)v14, &qword_100709E30);
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a4, 0, 1, v20);
  }
}

uint64_t sub_100106D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v77 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v6 = __chkstk_darwin(v77);
  uint64_t v78 = (uint64_t)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v69 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v69 - v11;
  uint64_t v81 = sub_1005E0ED0();
  uint64_t v83 = *(void *)(v81 - 8);
  uint64_t v13 = __chkstk_darwin(v81);
  long long v79 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v69 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v69 - v18;
  uint64_t v82 = a2;
  uint64_t v20 = *(void *)(a2 + 112);
  if (v20)
  {
    uint64_t v21 = a1 + *(int *)(type metadata accessor for MailboxSyncState() + 48);
    uint64_t v22 = *(void *)(v21 + 24);
    uint64_t v23 = *(void *)(v21 + 32);
    sub_100057374(v21, v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v20, v22, v23);
  }
  uint64_t v24 = *(int *)(type metadata accessor for MailboxSyncState() + 48);
  uint64_t v80 = a1;
  uint64_t v25 = *(void *)(a1 + v24 + 24);
  uint64_t v26 = *(void *)(a1 + v24 + 32);
  uint64_t v76 = a1 + v24;
  sub_10003BCDC((void *)(a1 + v24), v25);
  (*(void (**)(uint64_t, uint64_t))(v26 + 40))(v25, v26);
  uint64_t v28 = *(void *)(v27 + 16);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 16);
  uint64_t v75 = v83 + 16;
  long long v74 = v29;
  if (v28)
  {
    uint64_t v30 = v81;
    v29(v19, a3, v81);
    sub_10010DA14(a3, (uint64_t)v12, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_10003C5B4(v82, (uint64_t)&v87);
    uint64_t v31 = sub_1005E0EB0();
    int v32 = sub_1005E25C0();
    if (os_log_type_enabled(v31, (os_log_type_t)v32))
    {
      LODWORD(v71) = v32;
      os_log_t v72 = v31;
      uint64_t v73 = a3;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v70 = swift_slowAlloc();
      uint64_t v86 = v70;
      *(_DWORD *)uint64_t v33 = 68159747;
      LODWORD(v84) = 2;
      sub_1005E2960();
      *(_WORD *)(v33 + 8) = 256;
      int v34 = &v12[*(int *)(v77 + 20)];
      LOBYTE(v84) = *v34;
      sub_1005E2960();
      *(_WORD *)(v33 + 11) = 2082;
      uint64_t v35 = *((void *)v34 + 1);
      unint64_t v36 = *((void *)v34 + 2);
      swift_bridgeObjectRetain();
      uint64_t v84 = sub_1000C6914(v35, v36, &v86);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 21) = 1040;
      LODWORD(v84) = 2;
      sub_1005E2960();
      *(_WORD *)(v33 + 27) = 512;
      LOWORD(v84) = *((_WORD *)v34 + 12);
      sub_1005E2960();
      *(_WORD *)(v33 + 31) = 2160;
      uint64_t v84 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v33 + 41) = 2085;
      int v37 = *((_DWORD *)v34 + 10);
      uint64_t v84 = *((void *)v34 + 4);
      int v85 = v37;
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_1005E1CC0();
      uint64_t v84 = sub_1000C6914(v38, v39, &v86);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10010DA7C((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v33 + 51) = 2048;
      if (v89) {
        uint64_t v40 = *(void *)(v89 + 16);
      }
      else {
        uint64_t v40 = 0;
      }
      sub_10003C610((uint64_t)&v87);
      uint64_t v84 = v40;
      sub_1005E2960();
      *(_WORD *)(v33 + 61) = 2048;
      uint64_t v84 = v28;
      sub_1005E2960();
      os_log_t v52 = v72;
      _os_log_impl((void *)&_mh_execute_header, v72, (os_log_type_t)v71, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed %ld changes without UID, still %ld remaining.", (uint8_t *)v33, 0x47u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      long long v51 = *(void (**)(char *, uint64_t))(v83 + 8);
      uint64_t v30 = v81;
      v51(v19, v81);
      a3 = v73;
    }
    else
    {
      sub_10003C610((uint64_t)&v87);
      sub_10010DA7C((uint64_t)v12, type metadata accessor for MailboxTaskLogger);

      long long v51 = *(void (**)(char *, uint64_t))(v83 + 8);
      v51(v19, v30);
    }
LABEL_15:
    uint64_t v53 = v80;
    long long v54 = v79;
    uint64_t v55 = v78;
    if (*(unsigned char *)(v80 + 32)) {
      return sub_10017E064(v53, *(void *)(v82 + 120), *(unsigned __int8 *)(v82 + 128), a3, *(void *)(v82 + 136), *(unsigned int *)(v82 + 144) | ((unint64_t)*(unsigned __int8 *)(v82 + 148) << 32));
    }
    goto LABEL_16;
  }
  uint64_t v30 = v81;
  v29(v17, a3, v81);
  sub_10010DA14(a3, (uint64_t)v10, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_10003C5B4(v82, (uint64_t)&v87);
  uint64_t v41 = sub_1005E0EB0();
  int v42 = sub_1005E25C0();
  if (!os_log_type_enabled(v41, (os_log_type_t)v42))
  {
    sub_10003C610((uint64_t)&v87);
    sub_10010DA7C((uint64_t)v10, type metadata accessor for MailboxTaskLogger);

    long long v51 = *(void (**)(char *, uint64_t))(v83 + 8);
    v51(v17, v30);
    goto LABEL_15;
  }
  LODWORD(v72) = v42;
  uint64_t v73 = a3;
  uint64_t v43 = swift_slowAlloc();
  uint64_t v71 = swift_slowAlloc();
  uint64_t v86 = v71;
  *(_DWORD *)uint64_t v43 = 68159491;
  LODWORD(v84) = 2;
  sub_1005E2960();
  *(_WORD *)(v43 + 8) = 256;
  long long v44 = &v10[*(int *)(v77 + 20)];
  LOBYTE(v84) = *v44;
  sub_1005E2960();
  *(_WORD *)(v43 + 11) = 2082;
  uint64_t v45 = *((void *)v44 + 1);
  unint64_t v46 = *((void *)v44 + 2);
  swift_bridgeObjectRetain();
  uint64_t v84 = sub_1000C6914(v45, v46, &v86);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  *(_WORD *)(v43 + 21) = 1040;
  LODWORD(v84) = 2;
  sub_1005E2960();
  *(_WORD *)(v43 + 27) = 512;
  LOWORD(v84) = *((_WORD *)v44 + 12);
  sub_1005E2960();
  *(_WORD *)(v43 + 31) = 2160;
  uint64_t v84 = 0x786F626C69616DLL;
  sub_1005E2960();
  *(_WORD *)(v43 + 41) = 2085;
  int v47 = *((_DWORD *)v44 + 10);
  uint64_t v84 = *((void *)v44 + 4);
  int v85 = v47;
  swift_bridgeObjectRetain();
  uint64_t v48 = sub_1005E1CC0();
  uint64_t v84 = sub_1000C6914(v48, v49, &v86);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  sub_10010DA7C((uint64_t)v10, type metadata accessor for MailboxTaskLogger);
  *(_WORD *)(v43 + 51) = 2048;
  if (v89) {
    uint64_t v50 = *(void *)(v89 + 16);
  }
  else {
    uint64_t v50 = 0;
  }
  uint64_t v53 = v80;
  uint64_t v55 = v78;
  sub_10003C610((uint64_t)&v87);
  uint64_t v84 = v50;
  sub_1005E2960();
  _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v72, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed all %ld changes without UID.", (uint8_t *)v43, 0x3Du);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  long long v51 = *(void (**)(char *, uint64_t))(v83 + 8);
  uint64_t v30 = v81;
  v51(v17, v81);
  a3 = v73;
  long long v54 = v79;
  if ((*(unsigned char *)(v53 + 32) & 1) == 0)
  {
LABEL_16:
    uint64_t v56 = *(void *)(v53 + 24);
    v74(v54, a3, v30);
    sub_10010DA14(a3, v55, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    long long v57 = sub_1005E0EB0();
    os_log_type_t v58 = sub_1005E25C0();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      uint64_t v84 = v75;
      *(_DWORD *)uint64_t v59 = 68159491;
      LODWORD(v87) = 2;
      sub_1005E2960();
      *(_WORD *)(v59 + 8) = 256;
      uint64_t v60 = v55 + *(int *)(v77 + 20);
      LOBYTE(v87) = *(unsigned char *)v60;
      sub_1005E2960();
      *(_WORD *)(v59 + 11) = 2082;
      uint64_t v73 = a3;
      uint64_t v61 = *(void *)(v60 + 8);
      unint64_t v62 = *(void *)(v60 + 16);
      swift_bridgeObjectRetain();
      uint64_t v87 = sub_1000C6914(v61, v62, &v84);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v59 + 21) = 1040;
      LODWORD(v87) = 2;
      sub_1005E2960();
      *(_WORD *)(v59 + 27) = 512;
      LOWORD(v87) = *(_WORD *)(v60 + 24);
      sub_1005E2960();
      *(_WORD *)(v59 + 31) = 2160;
      uint64_t v87 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v59 + 41) = 2085;
      int v63 = *(_DWORD *)(v60 + 40);
      uint64_t v87 = *(void *)(v60 + 32);
      int v88 = v63;
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_1005E1CC0();
      uint64_t v87 = sub_1000C6914(v64, v65, &v84);
      uint64_t v53 = v80;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10010DA7C(v78, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v59 + 51) = 2048;
      uint64_t v87 = v56;
      a3 = v73;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Setting mailbox HIGHESTMODSEQ to %llu.", (uint8_t *)v59, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v83 + 8))(v79, v81);
    }
    else
    {
      sub_10010DA7C(v55, type metadata accessor for MailboxTaskLogger);

      v51(v54, v30);
    }
    uint64_t v66 = *(void *)(v76 + 24);
    uint64_t v67 = *(void *)(v76 + 32);
    sub_100057374(v76, v66);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 64))(v56, a3, v66, v67);
  }
  return sub_10017E064(v53, *(void *)(v82 + 120), *(unsigned __int8 *)(v82 + 128), a3, *(void *)(v82 + 136), *(unsigned int *)(v82 + 144) | ((unint64_t)*(unsigned __int8 *)(v82 + 148) << 32));
}

uint64_t sub_100107B58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  __int16 v3 = *(_WORD *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  int v5 = *(_DWORD *)(v1 + 32);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_100107BAC()
{
  if (qword_100709D50 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t ContentType.attributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DownloadRequest.qos.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_100107C20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9 = *(unsigned int *)(v5 + 144);
  uint64_t v11 = *(void *)v5;
  uint64_t v12 = *(void *)(v5 + 8);
  unsigned __int8 v10 = *(unsigned char *)(v5 + 148);
  uint64_t v21 = *(void *)(v5 + 136);
  uint64_t result = sub_10010CE6C(*(void *)v5, v12, a2, a4, v21);
  uint64_t v16 = v15;
  if ((_BYTE)v15 == 0xFF)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_100109B18(v11, v12, a1, a2, a3, a4, v21, v9 | ((unint64_t)v10 << 32));
    uint64_t v16 = v18;
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = result;
    uint64_t v20 = v14;
  }
  *a5 = v17;
  a5[1] = v16;
  a5[2] = v20;
  return result;
}

uint64_t sub_100107D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_10000566C(&qword_10070CC28);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (uint64_t *)&v26[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = &v26[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = *(void *)(v7 + 136);
  v26[12] = *(unsigned char *)(v7 + 148);
  sub_10010895C(a1, a2, a3, a4, a7, v19, v15);
  uint64_t v20 = sub_10000566C(&qword_10070CC30);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v15, 1, v20) == 1)
  {
    uint64_t v21 = &qword_10070CC28;
    uint64_t v22 = (uint64_t)v15;
  }
  else
  {
    uint64_t v23 = *v15;
    uint64_t v24 = sub_10001FDF0((uint64_t)v15 + *(int *)(v20 + 48), (uint64_t)v18, &qword_100709E38);
    __chkstk_darwin(v24);
    *(void *)&v26[-16] = v18;
    sub_1001080D8(v23, (void (*)(uint64_t *__return_ptr, unint64_t))sub_10010D9EC, (uint64_t)&v26[-32]);
    uint64_t v22 = (uint64_t)v18;
    uint64_t v21 = &qword_100709E38;
  }
  return sub_100007A48(v22, v21);
}

uint64_t sub_100107F44(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(v5 + 8);
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_10010D48C(v11, v10, a1, a2, a3, a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100107FC0(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  return sub_10017CF68(*a1, a2, a3, a4, a5, 0, a7, *(void *)(v7 + 136));
}

uint64_t sub_100108004(uint64_t result, uint64_t a2)
{
  __int16 v3 = *(void **)(v2 + 24);
  unsigned int v4 = *(_DWORD *)(v2 + 32);
  v10[3] = a2;
  if (*(unsigned char *)(result + 184) == 1)
  {
    uint64_t v5 = result;
    uint64_t v7 = *(void *)(result + 168);
    uint64_t v6 = *(void *)(result + 176);
    uint64_t v11 = *(void *)(result + 160);
    uint64_t v8 = v11;
    swift_bridgeObjectRetain();
    sub_10004A48C((uint64_t)&v11, v3, v4, 0, (void (*)(char *))sub_10010CE64, v10);
    uint64_t result = sub_10000F0D4(v8, v7, v6, 1);
    uint64_t v9 = v11;
    *(void *)(v5 + 168) = 0;
    *(void *)(v5 + 176) = 0;
    *(void *)(v5 + 160) = v9;
    *(unsigned char *)(v5 + 184) = 1;
  }
  return result;
}

unint64_t sub_1001080BC()
{
  return 0xD000000000000017;
}

uint64_t sub_1001080D8(uint64_t a1, void (*a2)(uint64_t *__return_ptr, unint64_t), uint64_t a3)
{
  unsigned int v4 = v3;
  uint64_t v8 = type metadata accessor for MessagesToRemoveHelper.Range() - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v12 = *v4;
  uint64_t v13 = *(void *)(*v4 + 16);
  if (!v13) {
    return 1;
  }
  uint64_t v20 = a3;
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = *(void *)(v9 + 72);
  swift_bridgeObjectRetain();
  unint64_t v16 = 0;
  while (1)
  {
    sub_10010DA14(v12 + v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
    uint64_t v17 = *v11;
    sub_10010DA7C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
    if (v17 == a1) {
      break;
    }
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v19 = *v4;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_10009355C(v19);
    unint64_t v19 = result;
  }
  if (v16 >= *(void *)(v19 + 16))
  {
    __break(1u);
  }
  else
  {
    a2(&v21, v19 + v14);
    uint64_t result = 0;
    *unsigned int v4 = v19;
  }
  return result;
}

uint64_t sub_100108284@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, void *a4@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v68 = a1;
  uint64_t v6 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v64 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v49 - v10;
  uint64_t v56 = type metadata accessor for MessagesToRemoveHelper.Range();
  uint64_t v12 = *(void *)(v56 - 8);
  uint64_t v13 = __chkstk_darwin(v56);
  long long v54 = (uint64_t *)((char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v61 = (uint64_t *)((char *)&v49 - v15);
  uint64_t v16 = sub_10000566C(&qword_10070CC18);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v55 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v49 - v19;
  uint64_t v57 = *(void *)(a3 + 16);
  if (!v57)
  {
    swift_bridgeObjectRetain();
    uint64_t v40 = 1;
    uint64_t v41 = v56;
    uint64_t v42 = v12;
    goto LABEL_27;
  }
  os_log_t v52 = (char *)&v49 - v19;
  uint64_t v53 = a4;
  uint64_t v59 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v50 = v12;
  uint64_t v58 = *(void *)(v12 + 72);
  uint64_t v51 = a3;
  swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = v61;
LABEL_3:
  uint64_t v66 = v21;
  uint64_t v24 = sub_10010DA14(v59 + v58 * v21, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
  uint64_t v70 = *v23;
  __chkstk_darwin(v24);
  *(&v49 - 2) = (uint64_t)&v70;
  uint64_t v25 = v60;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_10002BB68((uint64_t)sub_10010DAFC, (uint64_t)(&v49 - 4), v25);
  uint64_t v62 = v22;
  int64_t v27 = *(void *)(v26 + 16);
  if (v27)
  {
    uint64_t v69 = _swiftEmptyArrayStorage;
    sub_10001AA54(0, v27, 0);
    uint64_t v28 = v69;
    unint64_t v29 = v69[2];
    uint64_t v30 = 32;
    do
    {
      int v31 = *(_DWORD *)(v26 + v30);
      uint64_t v69 = v28;
      unint64_t v32 = v28[3];
      if (v29 >= v32 >> 1)
      {
        sub_10001AA54(v32 > 1, v29 + 1, 1);
        uint64_t v28 = v69;
      }
      v28[2] = v29 + 1;
      *((_DWORD *)v28 + v29 + 8) = v31;
      v30 += 16;
      ++v29;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = _swiftEmptyArrayStorage;
  }
  uint64_t v67 = v28[2];
  if (v67)
  {
    unint64_t v65 = v28 + 4;
    ++v66;
    uint64_t v33 = *(void *)(v68 + 16);
    swift_bridgeObjectRetain();
    uint64_t v34 = 0;
    uint64_t v63 = v33;
    while (!v33)
    {
LABEL_13:
      if (++v34 == v67)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_25;
      }
    }
    uint64_t v35 = v64;
    int v36 = *((_DWORD *)v65 + v34);
    uint64_t v37 = v68 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
    swift_bridgeObjectRetain();
    uint64_t v38 = *(void *)(v35 + 72);
    while (1)
    {
      sub_10010DA14(v37, (uint64_t)v11, type metadata accessor for TaskHistory.Previous);
      sub_10010DA14((uint64_t)v11, (uint64_t)v9, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_10010DA7C((uint64_t)v9, type metadata accessor for TaskHistory.Previous);
      }
      else
      {
        int v39 = *(_DWORD *)&v9[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
        sub_10010DA7C((uint64_t)v9, type metadata accessor for ClientCommand);
        if (v39 == v36)
        {
          sub_10010DA7C((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v23 = v61;
          sub_10010DA7C((uint64_t)v61, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
          uint64_t v21 = v66;
          uint64_t v22 = v62;
          if (v66 == v57)
          {
            uint64_t v40 = 1;
            uint64_t v20 = v52;
            a4 = v53;
            goto LABEL_26;
          }
          goto LABEL_3;
        }
      }
      sub_10010DA7C((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
      v37 += v38;
      if (!--v33)
      {
        swift_bridgeObjectRelease();
        uint64_t v33 = v63;
        goto LABEL_13;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_25:
  uint64_t v20 = v52;
  sub_10010D988((uint64_t)v61, (uint64_t)v52);
  uint64_t v40 = 0;
  a4 = v53;
LABEL_26:
  uint64_t v41 = v56;
  uint64_t v42 = v50;
LABEL_27:
  uint64_t v43 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v20, v40, 1, v41);
  swift_bridgeObjectRelease();
  sub_1000079E4((uint64_t)v20, v43, &qword_10070CC18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v43, 1, v41) == 1)
  {
    uint64_t v44 = sub_10000566C(&qword_10070CC60);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(a4, 1, 1, v44);
  }
  else
  {
    uint64_t v45 = v54;
    sub_10010D988(v43, (uint64_t)v54);
    uint64_t v46 = sub_10000566C(&qword_10070CC60);
    uint64_t v47 = (uint64_t)a4 + *(int *)(v46 + 48);
    *a4 = *v45;
    sub_1000079E4((uint64_t)v45 + *(int *)(v41 + 20), v47, &qword_100709E30);
    sub_10010DA7C((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(a4, 0, 1, v46);
  }
  return sub_100007A48((uint64_t)v20, &qword_10070CC18);
}

uint64_t sub_10010895C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t v142 = a6;
  uint64_t v134 = a4;
  uint64_t v135 = a5;
  uint64_t v140 = a3;
  uint64_t v145 = a1;
  uint64_t v146 = a2;
  v144 = a7;
  uint64_t v7 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = type metadata accessor for MessagesToRemoveHelper.Range();
  v141 = *(void **)(v148 - 8);
  uint64_t v10 = __chkstk_darwin(v148);
  uint64_t v12 = (char *)&v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v126 - v13;
  uint64_t v15 = sub_10000566C(&qword_10070CC18);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  v133 = (uint64_t *)((char *)&v126 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v137 = (uint64_t *)((char *)&v126 - v18);
  uint64_t v136 = sub_1005E0ED0();
  uint64_t v139 = *(void *)(v136 - 8);
  uint64_t v19 = __chkstk_darwin(v136);
  v138 = (char *)&v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v127 = (char *)&v126 - v21;
  uint64_t v22 = sub_10000566C(&qword_10070A2D0);
  __chkstk_darwin(v22 - 8);
  uint64_t v129 = (uint64_t)&v126 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_10000566C(&qword_100709E38);
  uint64_t v128 = *(void *)(v143 - 8);
  uint64_t v24 = __chkstk_darwin(v143);
  uint64_t v126 = (uint64_t)&v126 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v126 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v126 - v29;
  v147 = (char *)type metadata accessor for TaskHistory.Running(0);
  uint64_t v132 = *((void *)v147 - 1);
  uint64_t v31 = __chkstk_darwin(v147);
  uint64_t v130 = (uint64_t)&v126 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  unint64_t v131 = (unint64_t)&v126 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v37 = (uint64_t *)((char *)&v126 - v36);
  __chkstk_darwin(v35);
  int v39 = (char *)&v126 - v38;
  uint64_t v40 = type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin(v40);
  uint64_t v42 = (_OWORD *)((char *)&v126 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010DA14(v145, (uint64_t)v42, type metadata accessor for UntaggedResponse);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 11)
  {
    v147 = v30;
    uint64_t v59 = *(void *)v42;
    sub_10001FC6C();
    sub_1005E3680();
    uint64_t v60 = *(void *)(v59 + 16);
    if (v60)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v60; ++i)
      {
        int v62 = *(_DWORD *)(v59 + 4 * i + 32);
        LODWORD(v150) = v62;
        MessageIdentifierSet.insert(_:)();
      }
      swift_bridgeObjectRelease();
    }
    sub_10001FDF0((uint64_t)v28, (uint64_t)v147, &qword_100709E38);
    swift_bridgeObjectRelease();
    uint64_t v63 = *(void *)(v142 + 16);
    if (v63)
    {
      uint64_t v64 = v142 + ((*((unsigned __int8 *)v141 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v141 + 80));
      uint64_t v65 = v141[9];
      swift_bridgeObjectRetain();
      uint64_t v66 = v148;
      while (1)
      {
        sub_10010DA14(v64, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
        sub_1000079E4((uint64_t)&v14[*(int *)(v66 + 20)], (uint64_t)v9, &qword_100709E30);
        sub_10000566C(&qword_100709E60);
        char v67 = sub_1005E3650();
        sub_100007A48((uint64_t)v9, &qword_100709E38);
        if (v67) {
          break;
        }
        sub_10010DA7C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
        v64 += v65;
        --v63;
        uint64_t v66 = v148;
        if (!v63) {
          goto LABEL_32;
        }
      }
      uint64_t v78 = v137;
      sub_10010D988((uint64_t)v14, (uint64_t)v137);
      uint64_t v77 = v141;
      uint64_t v66 = v148;
      ((void (*)(uint64_t *, void, uint64_t, uint64_t))v141[7])(v78, 0, 1, v148);
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v66 = v148;
LABEL_32:
      uint64_t v77 = v141;
      uint64_t v78 = v137;
      ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v141[7])(v137, 1, 1, v66);
    }
    swift_bridgeObjectRelease();
    int v79 = ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v77[6])(v78, 1, v66);
    uint64_t v80 = v146;
    uint64_t v81 = v140;
    if (v79 == 1)
    {
      sub_100007A48((uint64_t)v78, &qword_10070CC18);
    }
    else
    {
      uint64_t v82 = *v78;
      sub_10010DA7C((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
      uint64_t v83 = sub_1001AA218(v82, v134);
      uint64_t v84 = v83[2];
      if (v84)
      {
        uint64_t v85 = 0;
        while ((sub_100149D30(*((_DWORD *)v83 + v85 + 8), v80, v81) & 1) == 0)
        {
          if (v84 == ++v85) {
            goto LABEL_40;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v97 = sub_10000566C(&qword_10070CC30);
        uint64_t v98 = v144;
        uint64_t v99 = (uint64_t)v144 + *(int *)(v97 + 48);
        uint64_t *v144 = v82;
        sub_10001FDF0((uint64_t)v147, v99, &qword_100709E38);
        char v100 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56);
        uint64_t v101 = v98;
LABEL_67:
        uint64_t v108 = 0;
        uint64_t v107 = v97;
        return v100(v101, v108, 1, v107);
      }
LABEL_40:
      swift_bridgeObjectRelease();
    }
    uint64_t v86 = v144;
    sub_100007A48((uint64_t)v147, &qword_100709E38);
LABEL_62:
    uint64_t v107 = sub_10000566C(&qword_10070CC30);
    char v100 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56);
    uint64_t v101 = v86;
    goto LABEL_63;
  }
  if (EnumCaseMultiPayload == 19)
  {
    memcpy(v151, v42, 0x248uLL);
    uint64_t v68 = v146;
    if ((BYTE12(v151[0]) & 1) == 0)
    {
      LODWORD(v147) = DWORD2(v151[0]);
      uint64_t v69 = *(void *)(v142 + 16);
      if (v69)
      {
        uint64_t v70 = v142 + ((*((unsigned __int8 *)v141 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v141 + 80));
        uint64_t v71 = v141[9];
        swift_bridgeObjectRetain();
        while (1)
        {
          sub_10010DA14(v70, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
          sub_1000079E4((uint64_t)&v12[*(int *)(v148 + 20)], (uint64_t)v9, &qword_100709E30);
          LODWORD(v150) = v147;
          char v72 = MessageIdentifierSet.contains(_:)();
          sub_100007A48((uint64_t)v9, &qword_100709E38);
          if (v72) {
            break;
          }
          sub_10010DA7C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
          v70 += v71;
          if (!--v69)
          {
            uint64_t v73 = 1;
            uint64_t v68 = v146;
            goto LABEL_44;
          }
        }
        uint64_t v89 = (uint64_t)v12;
        int v88 = v133;
        sub_10010D988(v89, (uint64_t)v133);
        uint64_t v73 = 0;
        uint64_t v68 = v146;
        uint64_t v87 = v141;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v73 = 1;
LABEL_44:
        uint64_t v87 = v141;
        int v88 = v133;
      }
      uint64_t v90 = v148;
      ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v87[7])(v88, v73, 1, v148);
      swift_bridgeObjectRelease();
      int v91 = ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v87[6])(v88, 1, v90);
      uint64_t v92 = v140;
      if (v91 == 1)
      {
        sub_100061150((uint64_t)v151);
        sub_100007A48((uint64_t)v88, &qword_10070CC18);
LABEL_61:
        uint64_t v86 = v144;
        goto LABEL_62;
      }
      uint64_t v93 = *v88;
      sub_10010DA7C((uint64_t)v88, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
      int v94 = sub_1001AA218(v93, v134);
      uint64_t v95 = v94[2];
      if (v95)
      {
        uint64_t v96 = 0;
        while ((sub_100149D30(*((_DWORD *)v94 + v96 + 8), v68, v92) & 1) == 0)
        {
          if (v95 == ++v96) {
            goto LABEL_52;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v97 = sub_10000566C(&qword_10070CC30);
        uint64_t v109 = v144;
        uint64_t *v144 = v93;
        LODWORD(v150) = v147;
        sub_100063E18();
        MessageIdentifierSet.init(_:)();
        sub_100061150((uint64_t)v151);
        goto LABEL_66;
      }
LABEL_52:
      swift_bridgeObjectRelease();
    }
    sub_100061150((uint64_t)v151);
    goto LABEL_61;
  }
  uint64_t v44 = v146;
  uint64_t v45 = v143;
  if (EnumCaseMultiPayload != 12)
  {
    uint64_t v74 = sub_10000566C(&qword_10070CC30);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v144, 1, 1, v74);
    return sub_10010DA7C((uint64_t)v42, type metadata accessor for UntaggedResponse);
  }
  long long v46 = v42[1];
  v151[0] = *v42;
  v151[1] = v46;
  v151[2] = v42[2];
  uint64_t v47 = (void *)*((void *)&v151[0] + 1);
  if (!*((void *)&v151[0] + 1))
  {
    uint64_t v47 = (void *)0xE90000000000003ELL;
    uint64_t v48 = 0x6E776F6E6B6E753CLL;
    uint64_t v76 = v139;
    goto LABEL_58;
  }
  uint64_t v48 = *(void *)&v151[0];
  long long v49 = v151[1];
  int v50 = LOBYTE(v151[2]);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v51._countAndFlagsBits = v48;
  v51._object = v47;
  IMAP2Protocol::Tag_optional v152 = Tag.init(_:)(v51);
  if (v152.is_nil || (LODWORD(v142) = v50, (unint64_t v52 = *(void *)(v44 + 16)) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_56:
    sub_1000E8770(v48, (uint64_t)v47);
    uint64_t v76 = v139;
    goto LABEL_57;
  }
  v133 = (uint64_t *)*((void *)&v49 + 1);
  v137 = (uint64_t *)v49;
  uint64_t v140 = v48;
  v141 = v47;
  LODWORD(v148) = v152.value.connectionIdentifier;
  uint64_t v145 = HIDWORD(*(void *)&v152.value);
  uint64_t v53 = v44 + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
  uint64_t v54 = *(void *)(v132 + 72);
  swift_bridgeObjectRetain();
  unint64_t v55 = 0;
  while (1)
  {
    sub_10010DA14(v53, (uint64_t)v39, type metadata accessor for TaskHistory.Running);
    sub_10010DA14((uint64_t)v39, (uint64_t)v37, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    swift_bridgeObjectRetain();
    sub_10010DA7C((uint64_t)v37, type metadata accessor for TaskHistory.Running);
LABEL_9:
    sub_10010DA7C((uint64_t)v39, type metadata accessor for TaskHistory.Running);
    swift_bridgeObjectRelease();
    ++v55;
    v53 += v54;
    if (v52 == v55) {
      goto LABEL_13;
    }
  }
  uint64_t v56 = *v37;
  uint64_t v57 = (uint64_t)v37 + *(int *)(sub_10000566C(&qword_10070B6A0) + 64);
  swift_bridgeObjectRetain();
  sub_10010DA7C(v57, type metadata accessor for ClientCommand);
  unint64_t v58 = CommandID.tag.getter(v56);
  if (__PAIR64__(HIDWORD(v58), v58) != __PAIR64__(v145, v148)) {
    goto LABEL_9;
  }
  sub_10010DA7C((uint64_t)v39, type metadata accessor for TaskHistory.Running);
  swift_bridgeObjectRelease();
  if (v52 == v55)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v47 = v141;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v48 = v140;
    goto LABEL_56;
  }
  if (v55 >= v52)
  {
    __break(1u);
    goto LABEL_78;
  }
  unint64_t v55 = v131;
  sub_10010DA14(v53, v131, type metadata accessor for TaskHistory.Running);
  uint64_t v54 = v130;
  sub_10010DA14(v55, v130, type metadata accessor for TaskHistory.Running);
  int v110 = swift_getEnumCaseMultiPayload();
  uint64_t v76 = v139;
  uint64_t v48 = v140;
  if (v110 == 1)
  {
LABEL_78:
    sub_10010DA7C(v54, type metadata accessor for TaskHistory.Running);
    goto LABEL_79;
  }
  uint64_t v111 = *(void *)v54;
  uint64_t v112 = *(unsigned int *)(v54 + 8);
  uint64_t v113 = sub_10000566C(&qword_10070B6A0);
  sub_10010DA7C(v54 + *(int *)(v113 + 64), type metadata accessor for ClientCommand);
  unint64_t v114 = CommandID.tag.getter(v111);
  uint64_t v47 = v141;
  if (__PAIR64__(HIDWORD(v114), v114) != __PAIR64__(v145, v148))
  {
LABEL_79:
    uint64_t result = sub_10010DA7C(v55, type metadata accessor for TaskHistory.Running);
    __break(1u);
    return result;
  }
  sub_10010DA7C(v55, type metadata accessor for TaskHistory.Running);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000E8770(v48, (uint64_t)v47);
  uint64_t v115 = sub_100165AC4(v112, v134);
  if (v116)
  {
LABEL_57:
    swift_bridgeObjectRetain();
LABEL_58:
    sub_1000FCD64((uint64_t *)v151);
    int64_t v102 = v138;
    uint64_t v103 = v136;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v138, v135, v136);
    swift_bridgeObjectRetain();
    v104 = sub_1005E0EB0();
    os_log_type_t v105 = sub_1005E25A0();
    if (os_log_type_enabled(v104, v105))
    {
      uint64_t v106 = (uint8_t *)swift_slowAlloc();
      uint64_t v150 = swift_slowAlloc();
      *(_DWORD *)uint64_t v106 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v149 = sub_1000C6914(v48, (unint64_t)v47, &v150);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v104, v105, "Received unknown extended search response with tag '%{public}s'.", v106, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v139 + 8))(v138, v103);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v102, v103);
    }
    goto LABEL_61;
  }
  uint64_t v117 = v115;
  uint64_t v118 = v129;
  ExtendedSearchResponse.matchedUIDs.getter(v129);
  sub_1000FCD64((uint64_t *)v151);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48))(v118, 1, v45) != 1)
  {
    uint64_t v124 = v126;
    sub_10001FDF0(v118, v126, &qword_100709E38);
    uint64_t v97 = sub_10000566C(&qword_10070CC30);
    uint64_t v109 = v144;
    uint64_t v125 = (uint64_t)v144 + *(int *)(v97 + 48);
    uint64_t *v144 = v117;
    sub_10001FDF0(v124, v125, &qword_100709E38);
LABEL_66:
    char v100 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56);
    uint64_t v101 = v109;
    goto LABEL_67;
  }
  sub_100007A48(v118, &qword_10070A2D0);
  v119 = v127;
  uint64_t v120 = v136;
  (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v127, v135, v136);
  v121 = sub_1005E0EB0();
  os_log_type_t v122 = sub_1005E25A0();
  if (os_log_type_enabled(v121, v122))
  {
    v123 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v123 = 0;
    _os_log_impl((void *)&_mh_execute_header, v121, v122, "Extended search response has no UIDs.", v123, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v76 + 8))(v119, v120);
  uint64_t v107 = sub_10000566C(&qword_10070CC30);
  char v100 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56);
  uint64_t v101 = v144;
LABEL_63:
  uint64_t v108 = 1;
  return v100(v101, v108, 1, v107);
}

uint64_t sub_100109B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v383 = a8;
  uint64_t v362 = a5;
  uint64_t v335 = a2;
  uint64_t v336 = a1;
  uint64_t v334 = sub_10000566C(&qword_100709E38);
  uint64_t v12 = __chkstk_darwin(v334);
  v332 = (char *)&v315 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v323 = (char *)&v315 - v14;
  uint64_t v15 = sub_10000566C(&qword_10070A000);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v331 = (uint64_t)&v315 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v324 = (uint64_t)&v315 - v18;
  uint64_t v340 = sub_10000566C(&qword_10070CC38);
  uint64_t v339 = *(void *)(v340 - 8);
  __chkstk_darwin(v340);
  uint64_t v325 = (uint64_t)&v315 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v382 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v353 = *(void *)(v382 - 8);
  uint64_t v20 = __chkstk_darwin(v382);
  uint64_t v365 = (uint64_t)&v315 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v368 = (uint64_t)&v315 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v372 = (uint64_t)&v315 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v369 = (uint64_t)&v315 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v373 = (uint64_t *)((char *)&v315 - v29);
  uint64_t v30 = __chkstk_darwin(v28);
  v374 = (uint64_t *)((char *)&v315 - v31);
  uint64_t v32 = __chkstk_darwin(v30);
  v378 = (unsigned int *)((char *)&v315 - v33);
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v315 - v34;
  uint64_t v333 = type metadata accessor for MessagesToRemoveHelper.Range();
  uint64_t v36 = *(void *)(v333 - 8);
  uint64_t v37 = __chkstk_darwin(v333);
  v345 = (uint64_t *)((char *)&v315 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = __chkstk_darwin(v37);
  v346 = (uint64_t *)((char *)&v315 - v40);
  uint64_t v41 = __chkstk_darwin(v39);
  v348 = (uint64_t *)((char *)&v315 - v42);
  uint64_t v43 = __chkstk_darwin(v41);
  v330 = (uint64_t *)((char *)&v315 - v44);
  uint64_t v45 = __chkstk_darwin(v43);
  v326 = (uint64_t *)((char *)&v315 - v46);
  uint64_t v47 = __chkstk_darwin(v45);
  v347 = (uint64_t *)((char *)&v315 - v48);
  uint64_t v49 = __chkstk_darwin(v47);
  v352 = (uint64_t *)((char *)&v315 - v50);
  __chkstk_darwin(v49);
  v354 = (uint64_t *)((char *)&v315 - v51);
  uint64_t v384 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v358 = *(void *)(v384 - 8);
  uint64_t v52 = __chkstk_darwin(v384);
  uint64_t v370 = (uint64_t)&v315 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v371 = (uint64_t)&v315 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  v341 = (char *)&v315 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  uint64_t v375 = (uint64_t)&v315 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  uint64_t v379 = (uint64_t)&v315 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  v380 = (uint64_t *)((char *)&v315 - v63);
  uint64_t v64 = __chkstk_darwin(v62);
  v376 = (unint64_t *)((char *)&v315 - v65);
  uint64_t v66 = __chkstk_darwin(v64);
  v377 = (uint64_t *)((char *)&v315 - v67);
  uint64_t v68 = __chkstk_darwin(v66);
  v343 = (char *)&v315 - v69;
  uint64_t v70 = __chkstk_darwin(v68);
  uint64_t v381 = (uint64_t)&v315 - v71;
  uint64_t v72 = __chkstk_darwin(v70);
  uint64_t v74 = (char *)&v315 - v73;
  uint64_t v75 = __chkstk_darwin(v72);
  uint64_t v77 = (char *)&v315 - v76;
  uint64_t v78 = __chkstk_darwin(v75);
  uint64_t v80 = (char *)&v315 - v79;
  __chkstk_darwin(v78);
  uint64_t v82 = (char *)&v315 - v81;
  uint64_t v83 = sub_10000566C(&qword_10070CC40);
  uint64_t v84 = __chkstk_darwin(v83 - 8);
  uint64_t v329 = (uint64_t)&v315 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __chkstk_darwin(v84);
  v328 = (uint64_t *)((char *)&v315 - v87);
  uint64_t v88 = __chkstk_darwin(v86);
  uint64_t v322 = (uint64_t)&v315 - v89;
  uint64_t v90 = __chkstk_darwin(v88);
  v321 = (uint64_t *)((char *)&v315 - v91);
  uint64_t v92 = __chkstk_darwin(v90);
  v342 = (char *)&v315 - v93;
  __chkstk_darwin(v92);
  v338 = (uint64_t *)((char *)&v315 - v94);
  uint64_t v95 = sub_10000566C(&qword_100709E30);
  uint64_t v96 = __chkstk_darwin(v95);
  uint64_t v327 = (uint64_t)&v315 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __chkstk_darwin(v96);
  uint64_t v99 = __chkstk_darwin(v98);
  uint64_t v100 = __chkstk_darwin(v99);
  uint64_t v101 = __chkstk_darwin(v100);
  uint64_t v102 = __chkstk_darwin(v101);
  unint64_t v109 = *(void *)(a7 + 16);
  uint64_t v367 = a4;
  uint64_t v355 = a6;
  if (v109)
  {
    uint64_t v318 = v103;
    uint64_t v317 = v108;
    uint64_t v316 = v107;
    uint64_t v315 = v106;
    uint64_t v320 = v102;
    uint64_t v319 = (uint64_t)&v315 - v105;
    uint64_t v110 = *(unsigned __int8 *)(v36 + 80);
    unint64_t v349 = v109;
    uint64_t v351 = a7 + ((v110 + 32) & ~v110);
    uint64_t v350 = *(void *)(v36 + 72);
    uint64_t v366 = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v337 = a7;
    swift_bridgeObjectRetain();
    uint64_t v111 = 0;
    uint64_t v363 = 0;
    uint64_t v112 = v354;
    while (1)
    {
      uint64_t v361 = v111;
      uint64_t v114 = sub_10010DA14(v351 + v350 * v111, (uint64_t)v112, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
      v386 = (void *)*v112;
      __chkstk_darwin(v114);
      *(&v315 - 2) = (uint64_t)&v386;
      uint64_t v115 = v362;
      swift_bridgeObjectRetain();
      uint64_t v116 = v115;
      uint64_t v117 = v363;
      uint64_t v118 = sub_10002BB68((uint64_t)sub_10010D9F4, (uint64_t)(&v315 - 4), v116);
      uint64_t v363 = v117;
      int64_t v119 = *(void *)(v118 + 16);
      if (v119)
      {
        v388 = _swiftEmptyArrayStorage;
        sub_10001AA54(0, v119, 0);
        uint64_t v120 = v388;
        unint64_t v121 = v388[2];
        uint64_t v122 = 32;
        do
        {
          int v123 = *(_DWORD *)(v118 + v122);
          v388 = v120;
          unint64_t v124 = v120[3];
          if (v121 >= v124 >> 1)
          {
            sub_10001AA54(v124 > 1, v121 + 1, 1);
            uint64_t v120 = v388;
          }
          v120[2] = v121 + 1;
          *((_DWORD *)v120 + v121 + 8) = v123;
          v122 += 16;
          ++v121;
          --v119;
        }
        while (v119);
        swift_bridgeObjectRelease();
        a4 = v367;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v120 = _swiftEmptyArrayStorage;
      }
      uint64_t v125 = (void *)v120[2];
      if (!v125)
      {
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
      uint64_t v126 = *(void **)(a4 + 16);
      v360 = v120 + 4;
      swift_bridgeObjectRetain();
      v127 = 0;
      v357 = v125;
      v356 = v126;
LABEL_17:
      if (!v126) {
        goto LABEL_16;
      }
      v364 = v127;
      int v128 = *((_DWORD *)v360 + (void)v127);
      uint64_t v129 = v358;
      unint64_t v359 = (*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80);
      uint64_t v130 = a4 + v359;
      swift_bridgeObjectRetain();
      uint64_t v383 = *(void *)(v129 + 72);
      while (1)
      {
        sub_10010DA14(v130, (uint64_t)v77, type metadata accessor for TaskHistory.Previous);
        sub_10010DA14((uint64_t)v77, (uint64_t)v74, type metadata accessor for TaskHistory.Previous);
        if (swift_getEnumCaseMultiPayload() != 1) {
          break;
        }
        sub_10010DA7C((uint64_t)v74, type metadata accessor for TaskHistory.Previous);
LABEL_20:
        sub_10010DA7C((uint64_t)v77, type metadata accessor for TaskHistory.Previous);
        v130 += v383;
        uint64_t v126 = (void *)((char *)v126 - 1);
        if (!v126) {
          goto LABEL_15;
        }
      }
      int v131 = *(_DWORD *)&v74[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
      sub_10010DA7C((uint64_t)v74, type metadata accessor for ClientCommand);
      if (v131 != v128) {
        goto LABEL_20;
      }
      sub_10010DA7C((uint64_t)v77, type metadata accessor for TaskHistory.Previous);
      swift_bridgeObjectRelease();
      uint64_t v132 = *(void *)(v366 + 16);
      if (v132)
      {
        uint64_t v133 = v353;
        uint64_t v134 = v366 + ((*(unsigned __int8 *)(v353 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v353 + 80));
        swift_bridgeObjectRetain();
        uint64_t v135 = *(void *)(v133 + 72);
        do
        {
          sub_10010DA14(v134, (uint64_t)v35, type metadata accessor for TaskHistory.Running);
          uint64_t v136 = v378;
          sub_10010DA14((uint64_t)v35, (uint64_t)v378, type metadata accessor for TaskHistory.Running);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_10010DA7C((uint64_t)v136, type metadata accessor for TaskHistory.Running);
          }
          else
          {
            uint64_t v137 = (uint64_t)v35;
            int v138 = v136[2];
            uint64_t v139 = sub_10000566C(&qword_10070B6A0);
            sub_10010DA7C((uint64_t)v136 + *(int *)(v139 + 64), type metadata accessor for ClientCommand);
            BOOL v140 = v138 == v128;
            uint64_t v35 = (char *)v137;
            if (v140)
            {
              sub_10010DA7C(v137, type metadata accessor for TaskHistory.Running);
              a4 = v367;
LABEL_15:
              uint64_t v125 = v357;
              swift_bridgeObjectRelease();
              uint64_t v126 = v356;
              v127 = v364;
LABEL_16:
              v127 = (void *)((char *)v127 + 1);
              if (v127 != v125) {
                goto LABEL_17;
              }
              swift_bridgeObjectRelease_n();
LABEL_64:
              uint64_t v112 = v354;
              uint64_t v175 = (uint64_t)v352;
              sub_10010DA14((uint64_t)v354, (uint64_t)v352, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
              sub_10010DA7C(v175, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
              goto LABEL_4;
            }
          }
          sub_10010DA7C((uint64_t)v35, type metadata accessor for TaskHistory.Running);
          v134 += v135;
          --v132;
        }
        while (v132);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v141 = v352;
      sub_10010DA14((uint64_t)v354, (uint64_t)v352, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
      uint64_t v142 = *v141;
      swift_bridgeObjectRetain();
      a4 = v367;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v143 = v355;
      swift_bridgeObjectRetain();
      v144 = sub_100105504(v142, 0, v143);
      uint64_t v145 = (void *)v144[2];
      if (!v145) {
        goto LABEL_3;
      }
      uint64_t v146 = 0;
      v147 = *(void **)(a4 + 16);
      v344 = v144;
      v360 = v144 + 4;
      v364 = (void *)(a4 + v359);
      uint64_t v148 = (uint64_t)v343;
      v357 = v145;
      v356 = v147;
      while (2)
      {
        if (!v147) {
          goto LABEL_36;
        }
        int v149 = *((_DWORD *)v360 + v146);
        swift_bridgeObjectRetain_n();
        uint64_t v150 = (uint64_t)v364;
        uint64_t v151 = v381;
        while (2)
        {
          sub_10010DA14(v150, v151, type metadata accessor for TaskHistory.Previous);
          sub_10010DA14(v151, v148, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() != 1)
          {
            sub_10010DA7C(v148, type metadata accessor for TaskHistory.Previous);
LABEL_40:
            uint64_t v151 = v381;
            sub_10010DA7C(v381, type metadata accessor for TaskHistory.Previous);
            v150 += v383;
            v147 = (void *)((char *)v147 - 1);
            if (!v147)
            {
              a4 = v367;
              goto LABEL_35;
            }
            continue;
          }
          break;
        }
        int v152 = *(_DWORD *)(v148 + 8);
        sub_10007C4A4(*(void *)v148);
        if (v152 != v149) {
          goto LABEL_40;
        }
        sub_10010DA7C(v381, type metadata accessor for TaskHistory.Previous);
        swift_bridgeObjectRelease_n();
        uint64_t v153 = *(void *)(v366 + 16);
        if (!v153) {
          goto LABEL_52;
        }
        uint64_t v154 = v353;
        uint64_t v155 = v366 + ((*(unsigned __int8 *)(v353 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v353 + 80));
        swift_bridgeObjectRetain_n();
        uint64_t v156 = *(void *)(v154 + 72);
        v157 = v374;
        while (1)
        {
          sub_10010DA14(v155, (uint64_t)v157, type metadata accessor for TaskHistory.Running);
          v158 = v373;
          sub_10010DA14((uint64_t)v157, (uint64_t)v373, type metadata accessor for TaskHistory.Running);
          if (swift_getEnumCaseMultiPayload() == 1) {
            break;
          }
          sub_10010DA7C((uint64_t)v158, type metadata accessor for TaskHistory.Running);
LABEL_46:
          v157 = v374;
          sub_10010DA7C((uint64_t)v374, type metadata accessor for TaskHistory.Running);
          v155 += v156;
          if (!--v153)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_52:
            swift_bridgeObjectRelease();
            sub_10010DA7C((uint64_t)v352, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
            uint64_t v161 = v355;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v162 = v367;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v163 = v347;
            sub_10010DA14((uint64_t)v354, (uint64_t)v347, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
            uint64_t v164 = *v163;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v165 = sub_100105504(v164, 1, v161);
            v360 = (void *)v165[2];
            if (v360)
            {
              v166 = 0;
              uint64_t v167 = *(void *)(v162 + 16);
              v356 = v165;
              v357 = v165 + 4;
              do
              {
                if (v167)
                {
                  int v168 = *((_DWORD *)v357 + (void)v166);
                  swift_bridgeObjectRetain_n();
                  uint64_t v169 = (uint64_t)v364;
                  uint64_t v170 = v167;
                  v171 = (unsigned int (*)(void, void, void))v377;
                  do
                  {
                    sub_10010DA14(v169, (uint64_t)v171, type metadata accessor for TaskHistory.Previous);
                    v172 = v376;
                    sub_10010DA14((uint64_t)v171, (uint64_t)v376, type metadata accessor for TaskHistory.Previous);
                    if (swift_getEnumCaseMultiPayload() == 1)
                    {
                      unint64_t v173 = *v172;
                      int v174 = *((_DWORD *)v172 + 2);
                      sub_10007C4A4(v173);
                      if (v174 == v168)
                      {
                        sub_10010DA7C((uint64_t)v377, type metadata accessor for TaskHistory.Previous);
                        swift_bridgeObjectRelease();
                        a4 = v367;
                        swift_bridgeObjectRelease_n();
                        sub_10010DA7C((uint64_t)v347, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        uint64_t v112 = v354;
                        goto LABEL_5;
                      }
                    }
                    else
                    {
                      sub_10010DA7C((uint64_t)v172, type metadata accessor for TaskHistory.Previous);
                    }
                    v171 = (unsigned int (*)(void, void, void))v377;
                    sub_10010DA7C((uint64_t)v377, type metadata accessor for TaskHistory.Previous);
                    v169 += v383;
                    --v170;
                  }
                  while (v170);
                  uint64_t v162 = v367;
                  swift_bridgeObjectRelease_n();
                }
                v166 = (void *)((char *)v166 + 1);
              }
              while (v166 != v360);
            }
            swift_bridgeObjectRelease();
            sub_10010DA7C((uint64_t)v347, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_10010DA7C((uint64_t)v354, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
            unint64_t v180 = v349;
            unint64_t v181 = v361;
            uint64_t v182 = (uint64_t)v342;
            if (v361 == v349) {
              goto LABEL_71;
            }
            v364 = (void *)(v318 + 56);
            v373 = (uint64_t *)(v318 + 48);
            v376 = (unint64_t *)(v339 + 56);
            v374 = (void *)(v339 + 48);
            uint64_t v381 = v162 + v359;
LABEL_87:
            if (v181 >= v180)
            {
              __break(1u);
LABEL_197:
              __break(1u);
              goto LABEL_198;
            }
            unint64_t v201 = v181;
            uint64_t v202 = v351 + v181 * v350;
            v203 = v330;
            sub_10010DA14(v202, (uint64_t)v330, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
            uint64_t v204 = (uint64_t)v203 + *(int *)(v333 + 24);
            swift_bridgeObjectRetain();
            uint64_t v205 = (uint64_t)v332;
            MessageIdentifierSet.subtracting(_:)(v204, v334);
            MessageIdentifierSet.count.getter();
            if (v206 < 1)
            {
              sub_100007A48(v205, &qword_100709E38);
              uint64_t v209 = 1;
              uint64_t v210 = v340;
              uint64_t v208 = v331;
            }
            else
            {
              uint64_t v207 = v327;
              sub_10001FDF0(v205, v327, &qword_100709E38);
              uint64_t v208 = v331;
              sub_10001FDF0(v207, v331, &qword_100709E30);
              uint64_t v209 = 0;
              uint64_t v210 = v340;
            }
            v211 = (unsigned int *)*v364;
            uint64_t v212 = v320;
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v364)(v208, v209, 1, v320);
            v377 = (uint64_t *)*v373;
            BOOL v140 = ((unsigned int (*)(uint64_t, uint64_t, uint64_t))v377)(v208, 1, v212) == 1;
            v378 = v211;
            uint64_t v213 = v208;
            if (v140)
            {
              sub_100007A48(v208, &qword_10070A000);
              uint64_t v217 = 1;
              uint64_t v215 = (uint64_t)v328;
            }
            else
            {
              uint64_t v214 = v317;
              sub_10001FDF0(v213, v317, &qword_100709E30);
              uint64_t v215 = (uint64_t)v328;
              uint64_t v216 = (uint64_t)v328 + *(int *)(v210 + 48);
              void *v328 = *v203;
              sub_10001FDF0(v214, v216, &qword_100709E30);
              uint64_t v217 = 0;
            }
            uint64_t v218 = *v376;
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v376)(v215, v217, 1, v210);
            sub_10010DA7C((uint64_t)v203, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
            uint64_t v219 = v329;
            sub_10001FDF0(v215, v329, &qword_10070CC40);
            swift_bridgeObjectRelease();
            uint64_t v220 = *v374;
            int v221 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*v374)(v219, 1, v210);
            sub_100007A48(v219, &qword_10070CC40);
            if (v221 != 1)
            {
              if (v201 == v349) {
                goto LABEL_71;
              }
              v297 = v326;
              sub_10010DA14(v202, (uint64_t)v326, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
              uint64_t v224 = (uint64_t)v323;
              MessageIdentifierSet.subtracting(_:)((uint64_t)v297 + *(int *)(v333 + 24), v334);
              MessageIdentifierSet.count.getter();
              if (v298 <= 0) {
                goto LABEL_190;
              }
              uint64_t v299 = v316;
              sub_10001FDF0(v224, v316, &qword_100709E38);
              uint64_t v300 = v324;
              sub_10001FDF0(v299, v324, &qword_100709E30);
              uint64_t v301 = 0;
LABEL_191:
              v302 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v377;
              uint64_t v303 = v320;
              ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v378)(v300, v301, 1, v320);
              int v304 = v302(v300, 1, v303);
              uint64_t v185 = v340;
              if (v304 == 1)
              {
                sub_100007A48(v300, &qword_10070A000);
                uint64_t v305 = 1;
                uint64_t v306 = (uint64_t)v321;
                v307 = v326;
              }
              else
              {
                uint64_t v308 = v300;
                uint64_t v309 = v315;
                sub_10001FDF0(v308, v315, &qword_100709E30);
                uint64_t v306 = (uint64_t)v321;
                uint64_t v310 = (uint64_t)v321 + *(int *)(v185 + 48);
                v311 = v326;
                void *v321 = *v326;
                v307 = v311;
                sub_10001FDF0(v309, v310, &qword_100709E30);
                uint64_t v305 = 0;
              }
              ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v218)(v306, v305, 1, v185);
              sub_10010DA7C((uint64_t)v307, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
              sub_10001FDF0(v306, v182, &qword_10070CC40);
              uint64_t v312 = v322;
              sub_1000079E4(v182, v322, &qword_10070CC40);
              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v220)(v312, 1, v185) != 1)
              {
                uint64_t v313 = v325;
                sub_10001FDF0(v312, v325, &qword_10070CC38);
                sub_100007A48(v182, &qword_10070CC40);
                uint64_t v314 = v313;
                v184 = v338;
                sub_10001FDF0(v314, (uint64_t)v338, &qword_10070CC38);
                ((void (*)(uint64_t *, void, uint64_t, uint64_t))v218)(v184, 0, 1, v185);
                uint64_t v183 = v339;
LABEL_72:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v183 + 48))(v184, 1, v185) == 1)
                {
                  sub_100007A48((uint64_t)v184, &qword_10070CC40);
                  return 0;
                }
                uint64_t v186 = *v184;
                uint64_t v187 = (uint64_t)v184 + *(int *)(v185 + 48);
                uint64_t v188 = v319;
                sub_10001FDF0(v187, v319, &qword_100709E30);
                uint64_t v189 = sub_10000566C(&qword_10070CC48);
                swift_allocBox();
                uint64_t v191 = (uint64_t)v190 + *(int *)(v189 + 48);
                uint64_t v192 = v335;
                void *v190 = v336;
                v190[1] = v192;
                sub_10001FDF0(v188, v191, &qword_100709E30);
                swift_bridgeObjectRetain();
                return v186;
              }
LABEL_198:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t result = swift_bridgeObjectRelease();
              __break(1u);
              return result;
            }
            unint64_t v222 = v349;
            if (v201 == v349) {
              goto LABEL_197;
            }
            unint64_t v223 = v201 + 1;
            uint64_t v224 = (uint64_t)v380;
            if (v223 == v349) {
              goto LABEL_71;
            }
LABEL_97:
            if (v223 >= v222)
            {
              __break(1u);
LABEL_189:
              __break(1u);
LABEL_190:
              sub_100007A48(v224, &qword_100709E38);
              uint64_t v301 = 1;
              uint64_t v300 = v324;
              goto LABEL_191;
            }
            uint64_t v361 = v223;
            v225 = v348;
            uint64_t v226 = sub_10010DA14(v351 + v223 * v350, (uint64_t)v348, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
            v386 = (void *)*v225;
            __chkstk_darwin(v226);
            *(&v315 - 2) = (uint64_t)&v386;
            uint64_t v227 = v362;
            swift_bridgeObjectRetain();
            uint64_t v228 = v227;
            uint64_t v218 = v363;
            uint64_t v220 = sub_10002BB68((uint64_t)sub_10010DAFC, (uint64_t)(&v315 - 4), v228);
            uint64_t v363 = v218;
            int64_t v229 = *(void *)(v220 + 16);
            if (v229)
            {
              v388 = _swiftEmptyArrayStorage;
              sub_10001AA54(0, v229, 0);
              v230 = v388;
              unint64_t v231 = v388[2];
              uint64_t v218 = 32;
              do
              {
                int v232 = *(_DWORD *)(v220 + v218);
                v388 = v230;
                unint64_t v233 = v230[3];
                if (v231 >= v233 >> 1)
                {
                  sub_10001AA54(v233 > 1, v231 + 1, 1);
                  v230 = v388;
                }
                v230[2] = v231 + 1;
                *((_DWORD *)v230 + v231 + 8) = v232;
                v218 += 16;
                ++v231;
                --v229;
              }
              while (v229);
              swift_bridgeObjectRelease();
              uint64_t v224 = (uint64_t)v380;
            }
            else
            {
              swift_bridgeObjectRelease();
              v230 = _swiftEmptyArrayStorage;
            }
            v234 = (uint64_t *)v230[2];
            uint64_t v235 = v369;
            if (!v234)
            {
              swift_bridgeObjectRelease();
              goto LABEL_171;
            }
            uint64_t v218 = *(void *)(v162 + 16);
            v378 = (unsigned int *)(v230 + 4);
            swift_bridgeObjectRetain();
            uint64_t v236 = 0;
            v377 = v234;
            while (!v218)
            {
LABEL_108:
              if ((uint64_t *)++v236 == v234)
              {
                swift_bridgeObjectRelease_n();
LABEL_171:
                uint64_t v288 = (uint64_t)v348;
                uint64_t v289 = (uint64_t)v346;
                sub_10010DA14((uint64_t)v348, (uint64_t)v346, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
                sub_10010DA7C(v289, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
LABEL_174:
                uint64_t v290 = (uint64_t)v345;
                sub_10010DA14(v288, (uint64_t)v345, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
                sub_10010DA7C(v290, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
LABEL_175:
                sub_10010DA7C(v288, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
                unint64_t v223 = v361 + 1;
                if (__OFADD__(v361, 1)) {
                  goto LABEL_189;
                }
                unint64_t v222 = v349;
                if (v223 == v349) {
                  goto LABEL_71;
                }
                goto LABEL_97;
              }
            }
            uint64_t v182 = v378[v236];
            swift_bridgeObjectRetain();
            uint64_t v237 = v381;
            uint64_t v238 = v218;
            while (1)
            {
              sub_10010DA14(v237, v224, type metadata accessor for TaskHistory.Previous);
              uint64_t v220 = v379;
              sub_10010DA14(v224, v379, type metadata accessor for TaskHistory.Previous);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                sub_10010DA7C(v220, type metadata accessor for TaskHistory.Previous);
              }
              else
              {
                uint64_t v239 = *(int *)(sub_10000566C(&qword_10070B308) + 48);
                uint64_t v240 = v220;
                uint64_t v220 = *(unsigned int *)(v220 + v239);
                sub_10010DA7C(v240, type metadata accessor for ClientCommand);
                if (v220 == v182)
                {
                  uint64_t v224 = (uint64_t)v380;
                  sub_10010DA7C((uint64_t)v380, type metadata accessor for TaskHistory.Previous);
                  swift_bridgeObjectRelease();
                  uint64_t v241 = *(void *)(v366 + 16);
                  if (v241)
                  {
                    uint64_t v242 = v353;
                    uint64_t v243 = v366
                         + ((*(unsigned __int8 *)(v353 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v353 + 80));
                    swift_bridgeObjectRetain();
                    uint64_t v244 = *(void *)(v242 + 72);
                    do
                    {
                      sub_10010DA14(v243, v235, type metadata accessor for TaskHistory.Running);
                      uint64_t v220 = v372;
                      sub_10010DA14(v235, v372, type metadata accessor for TaskHistory.Running);
                      if (swift_getEnumCaseMultiPayload() == 1)
                      {
                        sub_10010DA7C(v220, type metadata accessor for TaskHistory.Running);
                      }
                      else
                      {
                        int v245 = *(_DWORD *)(v220 + 8);
                        uint64_t v246 = sub_10000566C(&qword_10070B6A0);
                        sub_10010DA7C(v220 + *(int *)(v246 + 64), type metadata accessor for ClientCommand);
                        BOOL v140 = v245 == v182;
                        uint64_t v235 = v369;
                        if (v140)
                        {
                          sub_10010DA7C(v369, type metadata accessor for TaskHistory.Running);
                          uint64_t v162 = v367;
                          goto LABEL_107;
                        }
                      }
                      sub_10010DA7C(v235, type metadata accessor for TaskHistory.Running);
                      v243 += v244;
                      --v241;
                    }
                    while (v241);
                    swift_bridgeObjectRelease();
                    uint64_t v224 = (uint64_t)v380;
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v247 = v346;
                  uint64_t v248 = sub_10010DA14((uint64_t)v348, (uint64_t)v346, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
                  v386 = (void *)*v247;
                  char v387 = 0;
                  __chkstk_darwin(v248);
                  *(&v315 - 2) = (uint64_t)&v386;
                  uint64_t v249 = v355;
                  swift_bridgeObjectRetain_n();
                  swift_bridgeObjectRetain();
                  uint64_t v162 = v367;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v250 = v249;
                  uint64_t v218 = v363;
                  uint64_t v220 = sub_10002BFC4((uint64_t)sub_10010DB18, (uint64_t)(&v315 - 4), v250);
                  uint64_t v363 = v218;
                  int64_t v251 = *(void *)(v220 + 16);
                  if (v251)
                  {
                    v388 = _swiftEmptyArrayStorage;
                    sub_10001AA94(0, v251, 0);
                    v252 = v388;
                    unint64_t v253 = v388[2];
                    uint64_t v218 = 32;
                    do
                    {
                      int v254 = *(_DWORD *)(v220 + v218);
                      v388 = v252;
                      unint64_t v255 = v252[3];
                      if (v253 >= v255 >> 1)
                      {
                        sub_10001AA94(v255 > 1, v253 + 1, 1);
                        v252 = v388;
                      }
                      v252[2] = v253 + 1;
                      *((_DWORD *)v252 + v253 + 8) = v254;
                      v218 += 24;
                      ++v253;
                      --v251;
                    }
                    while (v251);
                    swift_bridgeObjectRelease();
                    uint64_t v224 = (uint64_t)v380;
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    v252 = _swiftEmptyArrayStorage;
                  }
                  v256 = (uint64_t *)v252[2];
                  uint64_t v257 = (uint64_t)v341;
                  if (!v256)
                  {
                    swift_bridgeObjectRelease();
LABEL_173:
                    sub_10010DA7C((uint64_t)v346, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    uint64_t v288 = (uint64_t)v348;
                    goto LABEL_174;
                  }
                  uint64_t v258 = *(void *)(v162 + 16);
                  v378 = (unsigned int *)(v252 + 4);
                  swift_bridgeObjectRetain();
                  uint64_t v259 = 0;
                  v377 = v256;
                  while (!v258)
                  {
LABEL_135:
                    if ((uint64_t *)++v259 == v256)
                    {
                      swift_bridgeObjectRelease_n();
                      goto LABEL_173;
                    }
                  }
                  uint64_t v182 = v378[v259];
                  swift_bridgeObjectRetain_n();
                  uint64_t v260 = v381;
                  uint64_t v261 = v258;
                  uint64_t v218 = v375;
                  while (2)
                  {
                    uint64_t v220 = (uint64_t)type metadata accessor for TaskHistory.Previous;
                    sub_10010DA14(v260, v218, type metadata accessor for TaskHistory.Previous);
                    sub_10010DA14(v218, v257, type metadata accessor for TaskHistory.Previous);
                    if (swift_getEnumCaseMultiPayload() != 1)
                    {
                      sub_10010DA7C(v257, type metadata accessor for TaskHistory.Previous);
LABEL_139:
                      uint64_t v218 = v375;
                      sub_10010DA7C(v375, type metadata accessor for TaskHistory.Previous);
                      v260 += v383;
                      if (!--v261)
                      {
LABEL_134:
                        swift_bridgeObjectRelease_n();
                        uint64_t v224 = (uint64_t)v380;
                        v256 = v377;
                        goto LABEL_135;
                      }
                      continue;
                    }
                    break;
                  }
                  uint64_t v220 = *(unsigned int *)(v257 + 8);
                  sub_10007C4A4(*(void *)v257);
                  if (v220 != v182) {
                    goto LABEL_139;
                  }
                  sub_10010DA7C(v375, type metadata accessor for TaskHistory.Previous);
                  swift_bridgeObjectRelease_n();
                  uint64_t v262 = *(void *)(v366 + 16);
                  if (v262)
                  {
                    uint64_t v263 = v353;
                    uint64_t v264 = v366
                         + ((*(unsigned __int8 *)(v353 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v353 + 80));
                    swift_bridgeObjectRetain_n();
                    uint64_t v265 = *(void *)(v263 + 72);
                    uint64_t v266 = v368;
                    do
                    {
                      sub_10010DA14(v264, v266, type metadata accessor for TaskHistory.Running);
                      uint64_t v267 = v365;
                      sub_10010DA14(v266, v365, type metadata accessor for TaskHistory.Running);
                      if (swift_getEnumCaseMultiPayload() == 1)
                      {
                        uint64_t v268 = v267;
                        uint64_t v220 = *(unsigned int *)(v267 + 4);
                        sub_10007C4A4(*(void *)(v268 + 8));
                        if (v220 == v182)
                        {
                          sub_10010DA7C(v368, type metadata accessor for TaskHistory.Running);
                          uint64_t v162 = v367;
                          uint64_t v257 = (uint64_t)v341;
                          goto LABEL_134;
                        }
                      }
                      else
                      {
                        sub_10010DA7C(v267, type metadata accessor for TaskHistory.Running);
                      }
                      uint64_t v266 = v368;
                      sub_10010DA7C(v368, type metadata accessor for TaskHistory.Running);
                      v264 += v265;
                      --v262;
                    }
                    while (v262);
                    swift_bridgeObjectRelease_n();
                  }
                  swift_bridgeObjectRelease_n();
                  sub_10010DA7C((uint64_t)v346, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
                  uint64_t v269 = v355;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v162 = v367;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v270 = v345;
                  uint64_t v271 = sub_10010DA14((uint64_t)v348, (uint64_t)v345, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
                  v386 = (void *)*v270;
                  char v387 = 1;
                  __chkstk_darwin(v271);
                  *(&v315 - 2) = (uint64_t)&v386;
                  swift_bridgeObjectRetain_n();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v272 = v269;
                  uint64_t v273 = v363;
                  uint64_t v274 = sub_10002BFC4((uint64_t)sub_10010DADC, (uint64_t)(&v315 - 4), v272);
                  uint64_t v363 = v273;
                  int64_t v275 = *(void *)(v274 + 16);
                  uint64_t v182 = (uint64_t)v342;
                  if (v275)
                  {
                    v388 = _swiftEmptyArrayStorage;
                    sub_10001AA94(0, v275, 0);
                    v276 = v388;
                    unint64_t v277 = v388[2];
                    uint64_t v278 = 32;
                    do
                    {
                      int v279 = *(_DWORD *)(v274 + v278);
                      v388 = v276;
                      unint64_t v280 = v276[3];
                      if (v277 >= v280 >> 1)
                      {
                        sub_10001AA94(v280 > 1, v277 + 1, 1);
                        v276 = v388;
                      }
                      v276[2] = v277 + 1;
                      *((_DWORD *)v276 + v277 + 8) = v279;
                      v278 += 24;
                      ++v277;
                      --v275;
                    }
                    while (v275);
                    swift_bridgeObjectRelease();
                    uint64_t v218 = v276[2];
                    if (!v218)
                    {
LABEL_181:
                      swift_bridgeObjectRelease();
                      goto LABEL_182;
                    }
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    v276 = _swiftEmptyArrayStorage;
                    uint64_t v218 = _swiftEmptyArrayStorage[2];
                    if (!v218) {
                      goto LABEL_181;
                    }
                  }
                  uint64_t v281 = *(void *)(v162 + 16);
                  v378 = (unsigned int *)(v276 + 4);
                  swift_bridgeObjectRetain();
                  for (uint64_t i = 0; i != v218; ++i)
                  {
                    if (v281)
                    {
                      unsigned int v283 = v378[i];
                      swift_bridgeObjectRetain_n();
                      uint64_t v284 = v381;
                      uint64_t v182 = v281;
                      uint64_t v285 = v371;
                      while (1)
                      {
                        sub_10010DA14(v284, v285, type metadata accessor for TaskHistory.Previous);
                        uint64_t v286 = v370;
                        sub_10010DA14(v285, v370, type metadata accessor for TaskHistory.Previous);
                        if (swift_getEnumCaseMultiPayload() == 1)
                        {
                          unint64_t v287 = *(void *)v286;
                          uint64_t v220 = *(unsigned int *)(v286 + 8);
                          sub_10007C4A4(v287);
                          if (v220 == v283)
                          {
                            sub_10010DA7C(v371, type metadata accessor for TaskHistory.Previous);
                            swift_bridgeObjectRelease_n();
                            swift_bridgeObjectRelease_n();
                            sub_10010DA7C((uint64_t)v345, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            uint64_t v288 = (uint64_t)v348;
                            uint64_t v224 = (uint64_t)v380;
                            goto LABEL_175;
                          }
                        }
                        else
                        {
                          sub_10010DA7C(v286, type metadata accessor for TaskHistory.Previous);
                        }
                        uint64_t v285 = v371;
                        sub_10010DA7C(v371, type metadata accessor for TaskHistory.Previous);
                        v284 += v383;
                        if (!--v182)
                        {
                          swift_bridgeObjectRelease_n();
                          uint64_t v182 = (uint64_t)v342;
                          break;
                        }
                      }
                    }
                  }
                  swift_bridgeObjectRelease_n();
LABEL_182:
                  sub_10010DA7C((uint64_t)v345, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_10010DA7C((uint64_t)v348, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
                  unint64_t v180 = v349;
                  unint64_t v181 = v361;
                  if (v361 == v349)
                  {
LABEL_71:
                    uint64_t v183 = v339;
                    v184 = v338;
                    uint64_t v185 = v340;
                    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v339 + 56))(v338, 1, 1, v340);
                    goto LABEL_72;
                  }
                  goto LABEL_87;
                }
              }
              uint64_t v224 = (uint64_t)v380;
              sub_10010DA7C((uint64_t)v380, type metadata accessor for TaskHistory.Previous);
              v237 += v383;
              if (!--v238)
              {
LABEL_107:
                v234 = v377;
                swift_bridgeObjectRelease();
                uint64_t v224 = (uint64_t)v380;
                goto LABEL_108;
              }
            }
          }
        }
        v159 = v158;
        int v160 = v158[1];
        sub_10007C4A4(*((void *)v159 + 1));
        if (v160 != v149) {
          goto LABEL_46;
        }
        sub_10010DA7C((uint64_t)v374, type metadata accessor for TaskHistory.Running);
        a4 = v367;
        uint64_t v148 = (uint64_t)v343;
LABEL_35:
        swift_bridgeObjectRelease_n();
        uint64_t v145 = v357;
        v147 = v356;
LABEL_36:
        if ((void *)++v146 != v145) {
          continue;
        }
        break;
      }
LABEL_3:
      swift_bridgeObjectRelease();
      sub_10010DA7C((uint64_t)v352, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v112 = v354;
LABEL_4:
      uint64_t v113 = (uint64_t)v347;
      sub_10010DA14((uint64_t)v112, (uint64_t)v347, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
      sub_10010DA7C(v113, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
LABEL_5:
      sub_10010DA7C((uint64_t)v112, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
      uint64_t v111 = v361 + 1;
      if (v361 + 1 == v349) {
        goto LABEL_71;
      }
    }
  }
  if ((v383 & 0x100000000) != 0) {
    return 0;
  }
  uint64_t v381 = v104;
  v176 = sub_100105504(-1, 1, v355);
  uint64_t v177 = v176[2];
  if (!v177)
  {
LABEL_184:
    swift_bridgeObjectRelease();
    LODWORD(v388) = 1;
    int v385 = v383;
    sub_100063E18();
    static MessageIdentifier.... infix(_:_:)();
    v388 = v386;
    Range<>.init<A>(_:)((uint64_t)&v388, (uint64_t)&type metadata for UID);
    v388 = v291;
    sub_10001FC6C();
    uint64_t v292 = v381;
    sub_1005E36A0();
    uint64_t v293 = sub_10000566C(&qword_10070CC48);
    swift_allocBox();
    uint64_t v295 = (uint64_t)v294 + *(int *)(v293 + 48);
    uint64_t v296 = v335;
    void *v294 = v336;
    v294[1] = v296;
    sub_10001FDF0(v292, v295, &qword_100709E30);
    swift_bridgeObjectRetain();
    return -1;
  }
  uint64_t v178 = 0;
  v380 = v176;
  uint64_t v382 = (uint64_t)(v176 + 4);
  uint64_t v179 = *(void *)(a4 + 16);
  while (!v179)
  {
LABEL_76:
    if (++v178 == v177) {
      goto LABEL_184;
    }
  }
  uint64_t v193 = a4;
  int v194 = *(_DWORD *)(v382 + 4 * v178);
  uint64_t v195 = v358;
  uint64_t v196 = v193 + ((*(unsigned __int8 *)(v358 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v358 + 80));
  swift_bridgeObjectRetain_n();
  uint64_t v197 = *(void *)(v195 + 72);
  uint64_t v198 = v179;
  while (1)
  {
    sub_10010DA14(v196, (uint64_t)v82, type metadata accessor for TaskHistory.Previous);
    sub_10010DA14((uint64_t)v82, (uint64_t)v80, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_10010DA7C((uint64_t)v80, type metadata accessor for TaskHistory.Previous);
LABEL_80:
    sub_10010DA7C((uint64_t)v82, type metadata accessor for TaskHistory.Previous);
    v196 += v197;
    if (!--v198)
    {
      a4 = v367;
      swift_bridgeObjectRelease_n();
      goto LABEL_76;
    }
  }
  int v199 = *((_DWORD *)v80 + 2);
  sub_10007C4A4(*(void *)v80);
  if (v199 != v194) {
    goto LABEL_80;
  }
  sub_10010DA7C((uint64_t)v82, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t destroy for DetectChangesToMessages(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DetectChangesToMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = a2 + 64;
  long long v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 64, v5, v7);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectChangesToMessages(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_100022498((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = v4;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v5 = *(_DWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
  *(_DWORD *)(a1 + 144) = v5;
  return a1;
}

__n128 initializeWithTake for DetectChangesToMessages(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 141) = *(void *)(a2 + 141);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for DetectChangesToMessages(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectChangesToMessages(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 149)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetectChangesToMessages(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 148) = 0;
    *(_DWORD *)(result + 144) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 149) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 149) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectChangesToMessages()
{
  return &type metadata for DetectChangesToMessages;
}

unint64_t sub_10010CD3C()
{
  unint64_t result = qword_10070CB50;
  if (!qword_10070CB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070CB50);
  }
  return result;
}

unint64_t sub_10010CD94()
{
  unint64_t result = qword_10070CB58;
  if (!qword_10070CB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070CB58);
  }
  return result;
}

unint64_t sub_10010CDE8(uint64_t a1)
{
  unint64_t result = sub_10010CE10();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10010CE10()
{
  unint64_t result = qword_10070CC10;
  if (!qword_10070CC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070CC10);
  }
  return result;
}

uint64_t sub_10010CE64(uint64_t a1)
{
  return sub_100106D10(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10010CE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v56 = a4;
  uint64_t v64 = a3;
  uint64_t v50 = a2;
  uint64_t v7 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v46 - v11;
  uint64_t v52 = type metadata accessor for MessagesToRemoveHelper.Range();
  uint64_t v13 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v57 = (uint64_t *)((char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_10000566C(&qword_10070CC18);
  __chkstk_darwin(v15 - 8);
  uint64_t v51 = (uint64_t *)((char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v53 = *(void *)(a5 + 16);
  if (!v53)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = 1;
    uint64_t v38 = v51;
    uint64_t v37 = v52;
    uint64_t v39 = v13;
    goto LABEL_27;
  }
  uint64_t v49 = a1;
  uint64_t v55 = a5 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v47 = v13;
  uint64_t v54 = *(void *)(v13 + 72);
  uint64_t v48 = a5;
  swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = v57;
LABEL_3:
  uint64_t v62 = v17;
  uint64_t v20 = sub_10010DA14(v55 + v54 * v17, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
  uint64_t v66 = *v19;
  char v67 = 0;
  __chkstk_darwin(v20);
  *(&v46 - 2) = (uint64_t)&v66;
  uint64_t v21 = v56;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_10002BFC4((uint64_t)sub_10010DB18, (uint64_t)(&v46 - 4), v21);
  uint64_t v58 = v18;
  int64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    uint64_t v65 = _swiftEmptyArrayStorage;
    sub_10001AA94(0, v23, 0);
    uint64_t v24 = v65;
    unint64_t v25 = v65[2];
    uint64_t v26 = 32;
    do
    {
      int v27 = *(_DWORD *)(v22 + v26);
      uint64_t v65 = v24;
      unint64_t v28 = v24[3];
      if (v25 >= v28 >> 1)
      {
        sub_10001AA94(v28 > 1, v25 + 1, 1);
        uint64_t v24 = v65;
      }
      v24[2] = v25 + 1;
      *((_DWORD *)v24 + v25 + 8) = v27;
      v26 += 24;
      ++v25;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = _swiftEmptyArrayStorage;
  }
  uint64_t v63 = v24[2];
  if (v63)
  {
    uint64_t v61 = v24 + 4;
    ++v62;
    uint64_t v29 = *(void *)(v64 + 16);
    swift_bridgeObjectRetain();
    uint64_t v30 = 0;
    uint64_t v59 = v29;
    while (!v29)
    {
LABEL_13:
      if (++v30 == v63)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_25;
      }
    }
    uint64_t v31 = v60;
    int v32 = *((_DWORD *)v61 + v30);
    uint64_t v33 = v64 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
    swift_bridgeObjectRetain_n();
    uint64_t v34 = *(void *)(v31 + 72);
    while (1)
    {
      sub_10010DA14(v33, (uint64_t)v12, type metadata accessor for TaskHistory.Previous);
      sub_10010DA14((uint64_t)v12, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        int v35 = *((_DWORD *)v10 + 2);
        sub_10007C4A4(*(void *)v10);
        if (v35 == v32)
        {
          sub_10010DA7C((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          uint64_t v19 = v57;
          sub_10010DA7C((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
          uint64_t v17 = v62;
          uint64_t v18 = v58;
          if (v62 == v53)
          {
            uint64_t v36 = 1;
            a1 = v49;
            uint64_t v38 = v51;
            uint64_t v37 = v52;
            goto LABEL_26;
          }
          goto LABEL_3;
        }
      }
      else
      {
        sub_10010DA7C((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
      }
      sub_10010DA7C((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
      v33 += v34;
      if (!--v29)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v29 = v59;
        goto LABEL_13;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_25:
  uint64_t v38 = v51;
  sub_10010D988((uint64_t)v57, (uint64_t)v51);
  uint64_t v36 = 0;
  a1 = v49;
  uint64_t v37 = v52;
LABEL_26:
  uint64_t v39 = v47;
LABEL_27:
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v38, v36, 1, v37);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v39 + 48))(v38, 1, v37) == 1)
  {
    sub_100007A48((uint64_t)v38, &qword_10070CC18);
    return 0;
  }
  else
  {
    uint64_t v40 = *v38;
    uint64_t v41 = sub_10000566C(&qword_10070CC50);
    swift_allocBox();
    uint64_t v43 = (uint64_t)v42 + *(int *)(v41 + 48);
    uint64_t v44 = v50;
    *uint64_t v42 = a1;
    v42[1] = v44;
    sub_1000079E4((uint64_t)v38 + *(int *)(v37 + 20), v43, &qword_100709E30);
    swift_bridgeObjectRetain();
    sub_10010DA7C((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
  }
  return v40;
}

uint64_t sub_10010D48C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v51 = a6;
  uint64_t v55 = a1;
  uint64_t v11 = type metadata accessor for MessagesToRemoveHelper.Range();
  uint64_t v54 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000566C(&qword_10070CC18);
  __chkstk_darwin(v14 - 8);
  uint64_t v52 = (uint64_t *)((char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_10000566C(&qword_10070CC20);
  __chkstk_darwin(v16);
  uint64_t v18 = (uint64_t *)((char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10000566C(&qword_100709E38);
  uint64_t result = __chkstk_darwin(v22 - 8);
  uint64_t v53 = (uint64_t)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((a3 >> 59) & 0x1E | (a3 >> 2) & 1) == 9)
  {
    uint64_t v48 = a4;
    uint64_t v49 = a5;
    uint64_t v50 = v6;
    unint64_t v25 = (uint64_t *)swift_projectBox();
    uint64_t v26 = *(int *)(v16 + 48);
    uint64_t v27 = (uint64_t)v18 + v26;
    uint64_t v28 = *(int *)(v16 + 64);
    uint64_t v29 = (uint64_t)v18 + v28;
    uint64_t v30 = (uint64_t)v25 + v28;
    uint64_t v31 = *v25;
    uint64_t v32 = v25[1];
    *uint64_t v18 = *v25;
    v18[1] = v32;
    sub_1000079E4((uint64_t)v25 + v26, (uint64_t)v18 + v26, &qword_100709E38);
    sub_1000079E4(v30, v29, &qword_100709E30);
    if (v32 == a2 && sub_1000255D4(v55, v31))
    {
      uint64_t v33 = v53;
      sub_10001FDF0(v27, v53, &qword_100709E38);
      sub_10001FDF0(v29, (uint64_t)v21, &qword_100709E30);
      uint64_t v34 = *(void *)(*(void *)v50 + 16);
      if (v34)
      {
        uint64_t v35 = *(void *)v50
            + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
        uint64_t v36 = *(void *)(v54 + 72);
        swift_bridgeObjectRetain();
        while (1)
        {
          sub_10010DA14(v35, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
          sub_10001FC6C();
          if (sub_1005E35A0()) {
            break;
          }
          sub_10010DA7C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
          v35 += v36;
          if (!--v34)
          {
            uint64_t v37 = 1;
            uint64_t v39 = v48;
            uint64_t v38 = v49;
            uint64_t v33 = v53;
            goto LABEL_13;
          }
        }
        uint64_t v40 = v52;
        sub_10010D988((uint64_t)v13, (uint64_t)v52);
        uint64_t v37 = 0;
        uint64_t v39 = v48;
        uint64_t v38 = v49;
        uint64_t v33 = v53;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v37 = 1;
        uint64_t v39 = v48;
        uint64_t v38 = v49;
LABEL_13:
        uint64_t v40 = v52;
      }
      uint64_t v41 = v54;
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v40, v37, 1, v11);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v41 + 48))(v40, 1, v11) == 1)
      {
        sub_100007A48((uint64_t)v40, &qword_10070CC18);
      }
      else
      {
        uint64_t v42 = *v40;
        sub_10010DA7C((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
        uint64_t v43 = sub_100105504(v42, 0, v51);
        uint64_t v44 = v43[2];
        if (v44)
        {
          uint64_t v45 = 0;
          while ((sub_1001652E0(*((_DWORD *)v43 + v45 + 8), v39, v38) & 1) == 0)
          {
            if (v44 == ++v45) {
              goto LABEL_21;
            }
          }
          uint64_t v46 = swift_bridgeObjectRelease();
          __chkstk_darwin(v46);
          *(&v47 - 2) = v33;
          sub_1001080D8(v42, (void (*)(uint64_t *__return_ptr, unint64_t))sub_10010D980, (uint64_t)(&v47 - 4));
        }
        else
        {
LABEL_21:
          swift_bridgeObjectRelease();
        }
      }
    }
    else
    {
      uint64_t v21 = (char *)v29;
      uint64_t v33 = v27;
    }
    sub_100007A48((uint64_t)v21, &qword_100709E30);
    return sub_100007A48(v33, &qword_100709E38);
  }
  return result;
}

uint64_t sub_10010D980(uint64_t a1)
{
  return sub_1001877F0(a1, *(void *)(v1 + 16));
}

uint64_t sub_10010D988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessagesToRemoveHelper.Range();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10010D9EC(uint64_t a1)
{
  return sub_1001876F8(a1, *(void *)(v1 + 16));
}

BOOL sub_10010D9F4(uint64_t a1)
{
  return sub_1001A9390(a1, *(void **)(v1 + 16));
}

uint64_t sub_10010DA14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10010DA7C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10010DADC(uint64_t a1)
{
  return sub_100104408(a1, *(void *)(v1 + 16)) & 1;
}

BOOL sub_10010DAFC(uint64_t a1)
{
  return sub_10010D9F4(a1);
}

uint64_t sub_10010DB18(uint64_t a1)
{
  return sub_10010DADC(a1) & 1;
}

double sub_10010DB34@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W7>, _OWORD *a8@<X8>, uint64_t *a9, unint64_t a10, char a11)
{
  int v18 = a4 & 1;
  uint64_t v19 = type metadata accessor for MessageBatches(0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v22 = sub_10001DF10((uint64_t)&off_1006BA300);
  Swift::Int v42 = v22;
  char v43 = 1;
  if ((a7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_10005A3F4(a3, v18);
    v53[0] = *(_OWORD *)a1;
    sub_10001D550((uint64_t)v53);
    uint64_t v51 = *(void *)(a1 + 24);
    int v52 = *(_DWORD *)(a1 + 32);
    sub_10001D550((uint64_t)&v51);
    sub_10010F48C((uint64_t)a9, type metadata accessor for MessageBatches);
LABEL_12:
    swift_bridgeObjectRelease();
    double result = 0.0;
    *(_OWORD *)((char *)a8 + 125) = 0u;
    a8[6] = 0u;
    a8[7] = 0u;
    a8[4] = 0u;
    a8[5] = 0u;
    a8[2] = 0u;
    a8[3] = 0u;
    *a8 = 0u;
    a8[1] = 0u;
    return result;
  }
  unint64_t v39 = v22;
  uint64_t v38 = v21;
  uint64_t v23 = *a9;
  int v24 = v18;
  if ((sub_10010EEB8(a2, *a9, a3, v18) & 1) == 0)
  {
    sub_10010F48C((uint64_t)a9, type metadata accessor for MessageBatches);
    swift_bridgeObjectRelease();
    uint64_t v35 = a3;
LABEL_11:
    sub_10005A3F4(v35, v18);
    v53[0] = *(_OWORD *)a1;
    sub_10001D550((uint64_t)v53);
    uint64_t v51 = *(void *)(a1 + 24);
    int v52 = *(_DWORD *)(a1 + 32);
    sub_10001D550((uint64_t)&v51);
    goto LABEL_12;
  }
  uint64_t v37 = a3;
  if (!sub_10010EE50(a2, v23, a5) || (a11 & 1) != 0)
  {
    sub_10010F48C((uint64_t)a9, type metadata accessor for MessageBatches);
    swift_bridgeObjectRelease();
    uint64_t v35 = v37;
    goto LABEL_11;
  }
  unint64_t v39 = a10;
  uint64_t v25 = *(void *)(a1 + 24);
  int v26 = *(_DWORD *)(a1 + 32);
  long long v27 = *(_OWORD *)(a1 + 16);
  v40[0] = *(_OWORD *)a1;
  v40[1] = v27;
  int v41 = v26;
  uint64_t v44 = &type metadata for DetectChangesToMessagesInRecent;
  *(void *)&v53[0] = v25;
  DWORD2(v53[0]) = v26;
  sub_10003BC88();
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  uint64_t v46 = a5;
  uint64_t v28 = v37;
  uint64_t v29 = (uint64_t)v38;
  if (!v24)
  {
    uint64_t v30 = *(void *)(v37 + 16);
    sub_10005A3F4(v37, 0);
    uint64_t v28 = v30;
  }
  uint64_t v47 = v28;
  char v45 = a6 & 1;
  sub_10010F424((uint64_t)a9, v29, type metadata accessor for MessageBatches);
  LOBYTE(v53[0]) = 0;
  sub_10006705C(0xFFFFFFFFLL);
  uint64_t v31 = sub_100187B7C(v29, v39, 0);
  uint64_t v33 = v32;
  sub_10010F48C((uint64_t)a9, type metadata accessor for MessageBatches);
  sub_10010F48C(v29, type metadata accessor for MessageBatches);
  uint64_t v48 = v31;
  int v49 = v33;
  char v50 = BYTE4(v33) & 1;
  sub_10003C4E8((uint64_t)v40, (uint64_t)a8);
  sub_10003C138((uint64_t)v40);
  return result;
}

Swift::Int sub_10010DE9C()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA328);
  qword_100761720 = result;
  return result;
}

uint64_t sub_10010DEC4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_10010F424(a1, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_10003C4E8(v2, (uint64_t)v34);
  uint64_t v11 = sub_1005E0EB0();
  os_log_type_t v12 = sub_1005E25C0();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    int v28 = v13;
    uint64_t v15 = v14;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v33 = v29;
    *(_DWORD *)uint64_t v15 = 68159491;
    LODWORD(v31) = 2;
    os_log_t v27 = v11;
    sub_1005E2960();
    *(_WORD *)(v15 + 8) = 256;
    uint64_t v16 = *(int *)(v4 + 20);
    uint64_t v30 = v7;
    uint64_t v17 = &v6[v16];
    LOBYTE(v31) = v6[v16];
    sub_1005E2960();
    *(_WORD *)(v15 + 11) = 2082;
    uint64_t v19 = *((void *)v17 + 1);
    unint64_t v18 = *((void *)v17 + 2);
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1000C6914(v19, v18, &v33);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 21) = 1040;
    LODWORD(v31) = 2;
    sub_1005E2960();
    *(_WORD *)(v15 + 27) = 512;
    LOWORD(v31) = *((_WORD *)v17 + 12);
    sub_1005E2960();
    *(_WORD *)(v15 + 31) = 2160;
    uint64_t v31 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v15 + 41) = 2085;
    int v20 = *((_DWORD *)v17 + 10);
    uint64_t v31 = *((void *)v17 + 4);
    int v32 = v20;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1005E1CC0();
    uint64_t v31 = sub_1000C6914(v21, v22, &v33);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10010F48C((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v15 + 51) = 2082;
    LOBYTE(v31) = v36;
    uint64_t v23 = sub_10017CA08(v35);
    uint64_t v31 = sub_1000C6914(v23, v24, &v33);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10003C138((uint64_t)v34);
    os_log_t v25 = v27;
    _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v28, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task: %{public}s", (uint8_t *)v15, 0x3Du);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v30);
  }
  else
  {
    sub_10010F48C((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    sub_10003C138((uint64_t)v34);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_10010E35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v48 = a3;
  uint64_t v42 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v42);
  char v43 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = a2;
  uint64_t v10 = *(void *)(a2 + 112);
  uint64_t v11 = *(int *)(type metadata accessor for MailboxSyncState() + 48);
  uint64_t v47 = a1;
  os_log_type_t v12 = (void *)(a1 + v11);
  uint64_t v13 = *(void *)(a1 + v11 + 24);
  uint64_t v14 = *(void *)(a1 + v11 + 32);
  sub_100057374(a1 + v11, v13);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
  uint64_t v16 = swift_bridgeObjectRetain();
  v15(v16, v13, v14);
  uint64_t v17 = v12[3];
  uint64_t v18 = v12[4];
  sub_10003BCDC(v12, v17);
  uint64_t v19 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18) + 16);
  swift_bridgeObjectRelease();
  uint64_t v44 = v7;
  uint64_t v20 = v7;
  uint64_t v21 = (uint64_t)v43;
  unint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v23 = v48;
  uint64_t v46 = v6;
  v22(v9, v48, v6);
  sub_10010F424(v23, v21, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_bridgeObjectRetain();
  unint64_t v24 = sub_1005E0EB0();
  os_log_type_t v25 = sub_1005E25C0();
  int v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v51 = v41;
    *(_DWORD *)uint64_t v27 = 68159747;
    LODWORD(v49) = 2;
    uint64_t v40 = v19;
    sub_1005E2960();
    *(_WORD *)(v27 + 8) = 256;
    uint64_t v28 = *(int *)(v42 + 20);
    LODWORD(v42) = v26;
    uint64_t v29 = v21 + v28;
    LOBYTE(v49) = *(unsigned char *)(v21 + v28);
    sub_1005E2960();
    *(_WORD *)(v27 + 11) = 2082;
    os_log_t v39 = v24;
    uint64_t v30 = *(void *)(v29 + 8);
    unint64_t v31 = *(void *)(v29 + 16);
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_1000C6914(v30, v31, &v51);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 21) = 1040;
    LODWORD(v49) = 2;
    sub_1005E2960();
    *(_WORD *)(v27 + 27) = 512;
    LOWORD(v49) = *(_WORD *)(v29 + 24);
    sub_1005E2960();
    *(_WORD *)(v27 + 31) = 2160;
    uint64_t v49 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v27 + 41) = 2085;
    int v32 = *(_DWORD *)(v29 + 40);
    uint64_t v49 = *(void *)(v29 + 32);
    int v50 = v32;
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1005E1CC0();
    uint64_t v49 = sub_1000C6914(v33, v34, &v51);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10010F48C(v21, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v27 + 51) = 2048;
    uint64_t v35 = *(void *)(v10 + 16);
    swift_bridgeObjectRelease();
    uint64_t v49 = v35;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 61) = 2048;
    uint64_t v49 = v40;
    sub_1005E2960();
    os_log_t v36 = v39;
    _os_log_impl((void *)&_mh_execute_header, v39, (os_log_type_t)v42, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed %ld changes without UID, still %ld remaining.", (uint8_t *)v27, 0x47u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_10010F48C(v21, type metadata accessor for MailboxTaskLogger);

    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v46);
  return sub_10017E064(v47, *(void *)(v45 + 120), 0, v48, *(void *)(v45 + 128), *(unsigned int *)(v45 + 136) | ((unint64_t)*(unsigned __int8 *)(v45 + 140) << 32));
}

uint64_t sub_10010E8A0()
{
  if (qword_100709D58 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_10010E900@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  if (*(unsigned char *)(v3 + 104)) {
    uint64_t v7 = &off_1006BAF48;
  }
  else {
    uint64_t v7 = &off_1006BAFB8;
  }
  swift_bridgeObjectRetain();
  sub_100106AD0(a1, a2, (uint64_t)v7, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10010E9A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9 = *(unsigned int *)(v5 + 136);
  uint64_t v11 = *(void *)v5;
  uint64_t v12 = *(void *)(v5 + 8);
  unsigned __int8 v10 = *(unsigned char *)(v5 + 140);
  uint64_t v21 = *(void *)(v5 + 128);
  uint64_t result = sub_10010CE6C(*(void *)v5, v12, a2, a4, v21);
  uint64_t v16 = v15;
  if ((_BYTE)v15 == 0xFF)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_100109B18(v11, v12, a1, a2, a3, a4, v21, v9 | ((unint64_t)v10 << 32));
    uint64_t v16 = v18;
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = result;
    uint64_t v20 = v14;
  }
  *a5 = v17;
  a5[1] = v16;
  a5[2] = v20;
  return result;
}

uint64_t sub_10010EAD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_10000566C(&qword_10070CC28);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (uint64_t *)&v26[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = &v26[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = *(void *)(v7 + 128);
  v26[12] = *(unsigned char *)(v7 + 140);
  sub_10010895C(a1, a2, a3, a4, a7, v19, v15);
  uint64_t v20 = sub_10000566C(&qword_10070CC30);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v15, 1, v20) == 1)
  {
    uint64_t v21 = &qword_10070CC28;
    uint64_t v22 = (uint64_t)v15;
  }
  else
  {
    uint64_t v23 = *v15;
    uint64_t v24 = sub_10006B1BC((uint64_t)v15 + *(int *)(v20 + 48), (uint64_t)v18);
    __chkstk_darwin(v24);
    *(void *)&v26[-16] = v18;
    sub_1001080D8(v23, (void (*)(uint64_t *__return_ptr, unint64_t))sub_10010D9EC, (uint64_t)&v26[-32]);
    uint64_t v21 = &qword_100709E38;
    uint64_t v22 = (uint64_t)v18;
  }
  return sub_100007A48(v22, v21);
}

uint64_t sub_10010ECBC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(v5 + 8);
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_10010D48C(v11, v10, a1, a2, a3, a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10010ED38(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  return sub_10017CF68(*a1, a2, a3, a4, a5, 0, a7, *(void *)(v7 + 128));
}

uint64_t sub_10010ED7C(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void **)(v2 + 24);
  unsigned int v4 = *(_DWORD *)(v2 + 32);
  v10[3] = a2;
  if (*(unsigned char *)(result + 184) == 1)
  {
    uint64_t v5 = result;
    uint64_t v7 = *(void *)(result + 168);
    uint64_t v6 = *(void *)(result + 176);
    uint64_t v11 = *(void *)(result + 160);
    uint64_t v8 = v11;
    swift_bridgeObjectRetain();
    sub_10004A48C((uint64_t)&v11, v3, v4, 0, (void (*)(char *))sub_10010F41C, v10);
    uint64_t result = sub_10000F0D4(v8, v7, v6, 1);
    uint64_t v9 = v11;
    *(void *)(v5 + 168) = 0;
    *(void *)(v5 + 176) = 0;
    *(void *)(v5 + 160) = v9;
    *(unsigned char *)(v5 + 184) = 1;
  }
  return result;
}

unint64_t sub_10010EE34()
{
  return 0xD00000000000001FLL;
}

BOOL sub_10010EE50(BOOL result, uint64_t a2, uint64_t a3)
{
  if (a2 >= 0) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = a2 + 1;
  }
  BOOL v4 = __OFSUB__(result, v3 >> 1);
  uint64_t v5 = result - (v3 >> 1);
  if (v4)
  {
    __break(1u);
  }
  else if ((unint64_t)(v5 - 0x100000000) >= 0xFFFFFFFF00000001)
  {
    uint64_t v6 = *(void *)(a3 + 16);
    if (v6)
    {
      uint64_t v7 = (unsigned int *)(a3 + 32);
      uint64_t v8 = v6 - 1;
      do
      {
        unsigned int v10 = *v7;
        v7 += 8;
        unsigned int v9 = v10;
        BOOL v12 = v8-- != 0;
        uint64_t result = v9 >= v5;
      }
      while (v9 >= v5 && v12);
    }
    else
    {
      return 1;
    }
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_10010EEB8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (a2 >= 0) {
    uint64_t v4 = a2;
  }
  else {
    uint64_t v4 = a2 + 1;
  }
  uint64_t v5 = v4 >> 1;
  if (v5 >= result) {
    return 0;
  }
  BOOL v6 = __OFSUB__(result, v5);
  uint64_t v7 = result - v5;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    if ((unint64_t)(v7 - 0x100000000) < 0xFFFFFFFF00000001) {
      return 0;
    }
    if (a4) {
      return a3 < 1;
    }
    unint64_t v8 = *(void *)(a3 + 16);
    if (v8 > 0x8B) {
      return 0;
    }
    if (!v8) {
      return 1;
    }
    if (*(_DWORD *)(a3 + 32) < v7) {
      return 0;
    }
    if (v8 == 1) {
      return 1;
    }
    if (*(_DWORD *)(a3 + 36) < v7) {
      return 0;
    }
    if (v8 == 2) {
      return 1;
    }
    for (uint64_t i = 10; ; ++i)
    {
      uint64_t v10 = i - 7;
      if (__OFADD__(i - 8, 1)) {
        break;
      }
      unsigned int v11 = *(_DWORD *)(a3 + 4 * i);
      uint64_t result = v11 >= v7;
      if (v11 < v7 || v10 == v8) {
        return result;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t destroy for DetectChangesToMessagesInRecent(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DetectChangesToMessagesInRecent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = a2 + 64;
  long long v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v6;
  uint64_t v7 = v6;
  unint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 64, v5, v7);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectChangesToMessagesInRecent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_100022498((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  *(_DWORD *)(a1 + 136) = v4;
  return a1;
}

__n128 initializeWithTake for DetectChangesToMessagesInRecent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 125) = *(_OWORD *)(a2 + 125);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for DetectChangesToMessagesInRecent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectChangesToMessagesInRecent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 141)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetectChangesToMessagesInRecent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 140) = 0;
    *(_DWORD *)(result + 136) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 141) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 141) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectChangesToMessagesInRecent()
{
  return &type metadata for DetectChangesToMessagesInRecent;
}

unint64_t sub_10010F3A0(uint64_t a1)
{
  unint64_t result = sub_10010F3C8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10010F3C8()
{
  unint64_t result = qword_10070CD20;
  if (!qword_10070CD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070CD20);
  }
  return result;
}

uint64_t sub_10010F41C(uint64_t a1)
{
  return sub_10010E35C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10010F424(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10010F48C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10010F4EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, char a4@<W3>, __int16 a5@<W4>, uint64_t a6@<X8>)
{
  int v12 = a4 & 1;
  uint64_t v13 = type metadata accessor for MessageBatches(0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = &v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(unsigned char *)(a6 + 36) = 1;
  *(void *)(a6 + 104) = 0;
  *(unsigned char *)(a6 + 112) = 1;
  uint64_t v16 = *(void *)(a1 + 24);
  LODWORD(v14) = *(_DWORD *)(a1 + 32);
  long long v17 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a6 = *(_OWORD *)a1;
  *(_OWORD *)(a6 + 16) = v17;
  *(_DWORD *)(a6 + 32) = v14;
  *(void *)(a6 + 40) = &type metadata for DetectRemovedMessages;
  uint64_t v23 = v16;
  int v24 = v14;
  sub_10003BC88();
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  sub_10010F424(a2, (uint64_t)v15, type metadata accessor for MessageBatches);
  uint64_t v18 = sub_1001880B0((uint64_t)v15, a3, v12);
  uint64_t v19 = sub_10010F6A8((uint64_t)v18);
  sub_10010F48C((uint64_t)v15, type metadata accessor for MessageBatches);
  swift_bridgeObjectRelease();
  if (a4) {
    int v20 = 0;
  }
  else {
    int v20 = EngineAccountMailboxLoggerID.account.getter(a3);
  }
  uint64_t result = sub_10010F48C(a2, type metadata accessor for MessageBatches);
  *(void *)(a6 + 88) = v19;
  *(_DWORD *)(a6 + 96) = v20;
  *(unsigned char *)(a6 + 100) = v12 != 0;
  *(unsigned char *)(a6 + 101) = a5 & 1;
  *(unsigned char *)(a6 + 102) = HIBYTE(a5) & 1;
  return result;
}

void *sub_10010F6A8(uint64_t a1)
{
  uint64_t v27 = type metadata accessor for MessagesToRemoveHelper.Range();
  uint64_t v32 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v3 = (uint64_t *)((char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = sub_10000566C(&qword_10070CD28);
  uint64_t v4 = __chkstk_darwin(v31);
  uint64_t v30 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v29 = (uint64_t *)((char *)&v25 - v7);
  __chkstk_darwin(v6);
  int v26 = (char *)&v25 - v8;
  uint64_t v35 = _swiftEmptyArrayStorage;
  sub_10001A6F4(0, 0, 0);
  uint64_t v9 = v35;
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v33 = a1;
  swift_bridgeObjectRetain();
  uint64_t v28 = v10;
  if (v10)
  {
    uint64_t v11 = 0;
    int v12 = (uint64_t *)v26;
    uint64_t v13 = v27;
    do
    {
      unint64_t v34 = v9;
      uint64_t v14 = *(void *)(sub_10000566C(&qword_100709E30) - 8);
      uint64_t v15 = v31;
      uint64_t v16 = (uint64_t)&v30[*(int *)(v31 + 48)];
      sub_100110894(v33+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v11, v16);
      long long v17 = v3;
      uint64_t v18 = (uint64_t)v29;
      uint64_t v19 = (uint64_t)v29 + *(int *)(v15 + 48);
      *uint64_t v29 = v11;
      sub_10001FDF0(v16, v19, &qword_100709E30);
      sub_10001FDF0(v18, (uint64_t)v12, &qword_10070CD28);
      uint64_t v20 = *v12;
      uint64_t v21 = (uint64_t)v12 + *(int *)(v15 + 48);
      sub_10001FC6C();
      sub_1005E3680();
      uint64_t v3 = v17;
      uint64_t v9 = v34;
      sub_1005E3680();
      *uint64_t v3 = v20;
      sub_100110894(v21, (uint64_t)v3 + *(int *)(v13 + 20));
      *((unsigned char *)v3 + *(int *)(v13 + 32)) = 0;
      sub_100007A48((uint64_t)v12, &qword_10070CD28);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10001A6F4(0, v9[2] + 1, 1);
        uint64_t v9 = v35;
      }
      unint64_t v23 = v9[2];
      unint64_t v22 = v9[3];
      if (v23 >= v22 >> 1)
      {
        sub_10001A6F4(v22 > 1, v23 + 1, 1);
        uint64_t v9 = v35;
      }
      ++v11;
      v9[2] = v23 + 1;
      sub_10010D988((uint64_t)v3, (uint64_t)v9+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v23);
    }
    while (v28 != v11);
  }
  swift_bridgeObjectRelease();
  return v9;
}

Swift::Int sub_10010FA20()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA288);
  qword_100761728 = result;
  return result;
}

uint64_t sub_10010FA48(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_10010F424(a1, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_10003C314(v2, (uint64_t)v39);
  sub_10003C314(v2, (uint64_t)v37);
  uint64_t v11 = sub_1005E0EB0();
  os_log_type_t v12 = sub_1005E25C0();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    int v31 = v13;
    uint64_t v15 = v14;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v36 = v32;
    *(_DWORD *)uint64_t v15 = 68159747;
    LODWORD(v34) = 2;
    uint64_t v33 = v7;
    sub_1005E2960();
    *(_WORD *)(v15 + 8) = 256;
    uint64_t v16 = *(int *)(v4 + 20);
    os_log_t v29 = v11;
    long long v17 = &v6[v16];
    LOBYTE(v34) = v6[v16];
    sub_1005E2960();
    *(_WORD *)(v15 + 11) = 2082;
    uint64_t v30 = v8;
    uint64_t v19 = *((void *)v17 + 1);
    unint64_t v18 = *((void *)v17 + 2);
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1000C6914(v19, v18, &v36);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 21) = 1040;
    LODWORD(v34) = 2;
    sub_1005E2960();
    *(_WORD *)(v15 + 27) = 512;
    LOWORD(v34) = *((_WORD *)v17 + 12);
    sub_1005E2960();
    *(_WORD *)(v15 + 31) = 2160;
    uint64_t v34 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v15 + 41) = 2085;
    int v20 = *((_DWORD *)v17 + 10);
    uint64_t v34 = *((void *)v17 + 4);
    int v35 = v20;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1005E1CC0();
    uint64_t v34 = sub_1000C6914(v21, v22, &v36);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10010F48C((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v15 + 51) = 2048;
    uint64_t v23 = *(void *)(v39[11] + 16);
    sub_10003C370((uint64_t)v39);
    uint64_t v34 = v23;
    sub_1005E2960();
    *(_WORD *)(v15 + 61) = 2082;
    LOBYTE(v34) = v38;
    uint64_t v24 = sub_10017CA08(v37[11]);
    uint64_t v34 = sub_1000C6914(v24, v25, &v36);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10003C370((uint64_t)v37);
    os_log_t v26 = v29;
    _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v31, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. %ld UID batch(es): %{public}s", (uint8_t *)v15, 0x47u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v10, v33);
  }
  else
  {
    sub_10003C370((uint64_t)v39);
    sub_10010F48C((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    sub_10003C370((uint64_t)v37);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_10010FF20@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W4>, void *a4@<X8>)
{
  int v28 = a3;
  uint64_t v8 = sub_10000566C(&qword_10070CC58);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_10000566C(&qword_100709E30);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)v4;
  char v29 = *(unsigned char *)(v4 + 12);
  sub_100108284(a1, a2, v15, v10);
  uint64_t v16 = sub_10000566C(&qword_10070CC60);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v10, 1, v16) == 1)
  {
    sub_100007A48((uint64_t)v10, &qword_10070CC58);
    uint64_t v17 = sub_10000566C(&qword_10070CC68);
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a4, 1, 1, v17);
  }
  else
  {
    uint64_t v19 = *v10;
    sub_10001FDF0((uint64_t)v10 + *(int *)(v16 + 48), (uint64_t)v14, &qword_100709E30);
    sub_10000566C(&qword_10070CA08);
    uint64_t v20 = swift_allocBox();
    uint64_t v22 = v21;
    sub_100110894((uint64_t)v14, v21);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
    unint64_t v23 = v20 | 0xA000000000000000;
    uint64_t v24 = sub_10000566C(&qword_10070CC68);
    unint64_t v25 = (void *)((char *)a4 + *(int *)(v24 + 48));
    *a4 = v19;
    if ((v28 & 0x100) != 0)
    {
      unint64_t *v25 = v23;
    }
    else
    {
      sub_10000566C(&qword_10070CA10);
      type metadata accessor for SearchReturnOption();
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1005F6670;
      swift_storeEnumTagMultiPayload();
      unint64_t *v25 = v23;
      v25[1] = v26;
    }
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    sub_100007A48((uint64_t)v14, &qword_100709E30);
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a4, 0, 1, v24);
  }
}

uint64_t sub_1001102A0@<X0>(uint64_t a1@<X8>)
{
  return sub_10003C94C(v1 + 40, a1);
}

uint64_t sub_1001102AC()
{
  if (qword_100709D60 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

Swift::Int sub_100110308()
{
  return sub_10001DF10((uint64_t)&off_1006B9FB8);
}

uint64_t sub_100110314()
{
  return *(unsigned __int8 *)(v0 + 36);
}

uint64_t sub_100110320@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, void *a4@<X8>)
{
  if (*(unsigned char *)(v4 + 112) == 1)
  {
    uint64_t v8 = a3 + *(int *)(type metadata accessor for MailboxSyncState() + 48);
    uint64_t v9 = *(void *)(v8 + 40);
    if ((*(unsigned char *)(v8 + 48) & 1) == 0) {
      uint64_t v9 = *(void *)(v9 + 16);
    }
    *(void *)(v4 + 104) = v9;
    *(unsigned char *)(v4 + 112) = 0;
  }
  if (*(unsigned char *)(v4 + 102)) {
    int v10 = 256;
  }
  else {
    int v10 = 0;
  }
  return sub_10010FF20(a1, a2, v10 | *(unsigned __int8 *)(v4 + 101), a4);
}

uint64_t sub_1001103D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9 = *(unsigned int *)(v5 + 96);
  uint64_t v11 = *(void *)v5;
  uint64_t v12 = *(void *)(v5 + 8);
  unsigned __int8 v10 = *(unsigned char *)(v5 + 100);
  uint64_t v21 = *(void *)(v5 + 88);
  uint64_t result = sub_10010CE6C(*(void *)v5, v12, a2, a4, v21);
  uint64_t v16 = v15;
  if ((_BYTE)v15 == 0xFF)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_100109B18(v11, v12, a1, a2, a3, a4, v21, v9 | ((unint64_t)v10 << 32));
    uint64_t v16 = v18;
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = result;
    uint64_t v20 = v14;
  }
  *a5 = v17;
  a5[1] = v16;
  a5[2] = v20;
  return result;
}

uint64_t sub_100110504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_10000566C(&qword_10070CC28);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (uint64_t *)&v26[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = &v26[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = *(void *)(v7 + 88);
  v26[12] = *(unsigned char *)(v7 + 100);
  sub_10010895C(a1, a2, a3, a4, a7, v19, v15);
  uint64_t v20 = sub_10000566C(&qword_10070CC30);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v15, 1, v20) == 1)
  {
    uint64_t v21 = &qword_10070CC28;
    uint64_t v22 = (uint64_t)v15;
  }
  else
  {
    uint64_t v23 = *v15;
    uint64_t v24 = sub_10001FDF0((uint64_t)v15 + *(int *)(v20 + 48), (uint64_t)v18, &qword_100709E38);
    __chkstk_darwin(v24);
    *(void *)&v26[-16] = v18;
    sub_1001080D8(v23, (void (*)(uint64_t *__return_ptr, unint64_t))sub_10010D9EC, (uint64_t)&v26[-32]);
    uint64_t v22 = (uint64_t)v18;
    uint64_t v21 = &qword_100709E38;
  }
  return sub_100007A48(v22, v21);
}

uint64_t sub_1001106F8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(v5 + 8);
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_10010D48C(v11, v10, a1, a2, a3, a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100110774(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  return sub_10017CF68(*a1, a2, a3, a4, a5, (*(unsigned char *)(v7 + 102) & 1) == 0, a7, *(void *)(v7 + 88));
}

uint64_t sub_1001107C0(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void **)(v2 + 24);
  unsigned int v4 = *(_DWORD *)(v2 + 32);
  v10[3] = a2;
  if (*(unsigned char *)(result + 184) == 1)
  {
    uint64_t v5 = result;
    uint64_t v7 = *(void *)(result + 168);
    uint64_t v6 = *(void *)(result + 176);
    uint64_t v11 = *(void *)(result + 160);
    uint64_t v8 = v11;
    swift_bridgeObjectRetain();
    sub_10004A48C((uint64_t)&v11, v3, v4, 0, (void (*)(char *))sub_100110D3C, v10);
    uint64_t result = sub_10000F0D4(v8, v7, v6, 1);
    uint64_t v9 = v11;
    *(void *)(v5 + 168) = 0;
    *(void *)(v5 + 176) = 0;
    *(void *)(v5 + 160) = v9;
    *(unsigned char *)(v5 + 184) = 1;
  }
  return result;
}

unint64_t sub_100110878()
{
  return 0xD000000000000015;
}

uint64_t sub_100110894(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t destroy for DetectRemovedMessages(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 48);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DetectRemovedMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = a2 + 48;
  long long v6 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 48, v5, v7);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_WORD *)(a1 + 101) = *(_WORD *)(a2 + 101);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectRemovedMessages(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_100022498((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = v4;
  *(unsigned char *)(a1 + 101) = *(unsigned char *)(a2 + 101);
  *(unsigned char *)(a1 + 102) = *(unsigned char *)(a2 + 102);
  uint64_t v5 = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = v5;
  return a1;
}

__n128 initializeWithTake for DetectRemovedMessages(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for DetectRemovedMessages(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 48);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(unsigned char *)(a1 + 101) = *(unsigned char *)(a2 + 101);
  *(unsigned char *)(a1 + 102) = *(unsigned char *)(a2 + 102);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectRemovedMessages(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 113)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetectRemovedMessages(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 112) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 113) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 113) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectRemovedMessages()
{
  return &type metadata for DetectRemovedMessages;
}

unint64_t sub_100110CC0(uint64_t a1)
{
  unint64_t result = sub_100110CE8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100110CE8()
{
  unint64_t result = qword_10070CDE0;
  if (!qword_10070CDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070CDE0);
  }
  return result;
}

uint64_t sub_100110D3C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  return sub_10017E064(a1, *(void *)(v2 + 104), *(unsigned __int8 *)(v2 + 112), *(void *)(v1 + 24), *(void *)(v2 + 88), *(unsigned int *)(v2 + 96) | ((unint64_t)*(unsigned __int8 *)(v2 + 100) << 32));
}

double sub_100110D6C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X4>, unint64_t a6@<X5>, char a7@<W6>, __int16 a8@<W7>, _OWORD *a9@<X8>)
{
  uint64_t v13 = a3;
  char v28 = 1;
  int v16 = a4 & 1;
  if ((sub_10010EEB8(a2, *a5, a3, a4 & 1) & 1) == 0)
  {
    uint64_t v24 = &v37;
    unint64_t v25 = &v38;
LABEL_8:
    sub_1001145E4((uint64_t)a5, type metadata accessor for MessageBatches);
    sub_10005A3F4(v13, v16);
    *(_OWORD *)unint64_t v25 = *(_OWORD *)a1;
    sub_10001D550((uint64_t)v25);
    *(void *)uint64_t v24 = *(void *)(a1 + 24);
    *((_DWORD *)v24 + 2) = *(_DWORD *)(a1 + 32);
    sub_10001D550((uint64_t)v24);
    double result = 0.0;
    a9[5] = 0u;
    a9[6] = 0u;
    a9[3] = 0u;
    a9[4] = 0u;
    a9[1] = 0u;
    a9[2] = 0u;
    *a9 = 0u;
    return result;
  }
  if (a7)
  {
    uint64_t v24 = &v35;
    unint64_t v25 = &v36;
    goto LABEL_8;
  }
  int v17 = *(_DWORD *)(a1 + 32);
  long long v18 = *(_OWORD *)(a1 + 16);
  v26[0] = *(_OWORD *)a1;
  v26[1] = v18;
  int v27 = v17;
  char v29 = &type metadata for DetectRemovedMessagesInRecent;
  sub_10003BC88();
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  uint64_t v19 = sub_100187B7C((uint64_t)a5, a6, 0);
  uint64_t v21 = v20;
  sub_1001145E4((uint64_t)a5, type metadata accessor for MessageBatches);
  uint64_t v30 = v19;
  int v31 = v21;
  char v32 = BYTE4(v21) & 1;
  __int16 v33 = a8 & 0x101;
  if (!v16)
  {
    uint64_t v22 = *(void *)(v13 + 16);
    sub_10005A3F4(v13, 0);
    uint64_t v13 = v22;
  }
  uint64_t v34 = v13;
  sub_10003C258((uint64_t)v26, (uint64_t)a9);
  sub_10003C204((uint64_t)v26);
  return result;
}

Swift::Int sub_100110F4C()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA210);
  qword_100761730 = result;
  return result;
}

uint64_t sub_100110F74(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v4);
  long long v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_10011457C(a1, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_10003C258(v2, (uint64_t)v34);
  uint64_t v11 = sub_1005E0EB0();
  os_log_type_t v12 = sub_1005E25C0();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    int v28 = v13;
    uint64_t v15 = v14;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v33 = v29;
    *(_DWORD *)uint64_t v15 = 68159491;
    LODWORD(v31) = 2;
    os_log_t v27 = v11;
    sub_1005E2960();
    *(_WORD *)(v15 + 8) = 256;
    uint64_t v16 = *(int *)(v4 + 20);
    uint64_t v30 = v7;
    int v17 = &v6[v16];
    LOBYTE(v31) = v6[v16];
    sub_1005E2960();
    *(_WORD *)(v15 + 11) = 2082;
    uint64_t v19 = *((void *)v17 + 1);
    unint64_t v18 = *((void *)v17 + 2);
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1000C6914(v19, v18, &v33);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 21) = 1040;
    LODWORD(v31) = 2;
    sub_1005E2960();
    *(_WORD *)(v15 + 27) = 512;
    LOWORD(v31) = *((_WORD *)v17 + 12);
    sub_1005E2960();
    *(_WORD *)(v15 + 31) = 2160;
    uint64_t v31 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v15 + 41) = 2085;
    int v20 = *((_DWORD *)v17 + 10);
    uint64_t v31 = *((void *)v17 + 4);
    int v32 = v20;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1005E1CC0();
    uint64_t v31 = sub_1000C6914(v21, v22, &v33);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_1001145E4((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v15 + 51) = 2082;
    LOBYTE(v31) = v36;
    uint64_t v23 = sub_10017CA08(v35);
    uint64_t v31 = sub_1000C6914(v23, v24, &v33);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10003C204((uint64_t)v34);
    os_log_t v25 = v27;
    _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v28, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task: %{public}s", (uint8_t *)v15, 0x3Du);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v30);
  }
  else
  {
    sub_1001145E4((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    sub_10003C204((uint64_t)v34);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1001113EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v7 = sub_10000566C(&qword_10070CEA8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10000566C(&qword_10070CC68);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  int v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v3 + 102)) {
    int v14 = 256;
  }
  else {
    int v14 = 0;
  }
  sub_10010FF20(a1, a2, v14 | *(unsigned __int8 *)(v3 + 101), v9);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100007A48((uint64_t)v9, &qword_10070CEA8);
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v11 + 56))(a3, 1, 1, v10);
  }
  else
  {
    uint64_t v16 = *(int *)(v10 + 48);
    uint64_t v17 = (uint64_t)&v13[v16];
    uint64_t v18 = *v9;
    sub_100114690((uint64_t)v9 + v16, (uint64_t)&v13[v16], type metadata accessor for ClientCommand);
    uint64_t v19 = (uint64_t)a3 + *(int *)(v10 + 48);
    *a3 = v18;
    sub_100114690(v17, v19, type metadata accessor for ClientCommand);
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
  }
}

uint64_t sub_1001115E8(uint64_t a1, uint64_t a2)
{
  uint64_t v253 = a2;
  uint64_t v251 = a1;
  uint64_t v3 = sub_10000566C(&qword_10070CEA0);
  __chkstk_darwin(v3 - 8);
  uint64_t v244 = (uint64_t)&v224 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s15MissingMessagesO10NewMissingVMa(0);
  uint64_t v242 = *(void *)(v5 - 8);
  uint64_t v243 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v224 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v235 = (uint64_t)&v224 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v236 = (uint64_t)&v224 - v12;
  __chkstk_darwin(v11);
  int v14 = (char *)&v224 - v13;
  uint64_t v237 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v15 = __chkstk_darwin(v237);
  uint64_t v233 = (uint64_t)&v224 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v232 = (uint64_t)&v224 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v239 = (uint64_t)&v224 - v20;
  __chkstk_darwin(v19);
  uint64_t v238 = (uint64_t)&v224 - v21;
  uint64_t v246 = sub_1005E0ED0();
  uint64_t v249 = *(void *)(v246 - 8);
  uint64_t v22 = __chkstk_darwin(v246);
  unint64_t v24 = (char *)&v224 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  v234 = (char *)&v224 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v241 = (char *)&v224 - v28;
  __chkstk_darwin(v27);
  uint64_t v240 = (char *)&v224 - v29;
  uint64_t v30 = sub_10000566C(&qword_10070A9C0);
  __chkstk_darwin(v30 - 8);
  os_log_t v245 = (os_log_t)((char *)&v224 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v250 = sub_10000566C(&qword_100709E60);
  os_log_t v255 = *(os_log_t *)(v250 - 8);
  __chkstk_darwin(v250);
  uint64_t v33 = (char *)&v224 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for MessagesToRemoveHelper.Range();
  uint64_t v247 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  char v36 = (char *)&v224 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10000566C(&qword_100709E38);
  uint64_t v38 = __chkstk_darwin(v37);
  v256 = (char *)&v224 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v42 = (char *)&v224 - v41;
  uint64_t v43 = __chkstk_darwin(v40);
  uint64_t v44 = __chkstk_darwin(v43);
  uint64_t v45 = __chkstk_darwin(v44);
  uint64_t v46 = __chkstk_darwin(v45);
  uint64_t v47 = __chkstk_darwin(v46);
  uint64_t v48 = __chkstk_darwin(v47);
  int v50 = ((char *)&v224 - v49);
  uint64_t v51 = __chkstk_darwin(v48);
  uint64_t v252 = (uint64_t)&v224 - v57;
  uint64_t v58 = *(void *)(v2 + 88);
  if (*(void *)(v58 + 16))
  {
    uint64_t v226 = v53;
    uint64_t v227 = v52;
    uint64_t v228 = v56;
    uint64_t v230 = v55;
    os_log_t v257 = v54;
    uint64_t v224 = v24;
    v225 = v8;
    uint64_t v258 = v51;
    unint64_t v231 = v14;
    uint64_t v248 = v2;
    sub_10001FC6C();
    swift_bridgeObjectRetain();
    sub_1005E3680();
    uint64_t v59 = *(void *)(v58 + 16);
    uint64_t v60 = v253;
    uint64_t v259 = v42;
    uint64_t v61 = v50;
    uint64_t v62 = v34;
    if (v59)
    {
      uint64_t v63 = v58;
      uint64_t v64 = v58 + ((*(unsigned __int8 *)(v247 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v247 + 80));
      uint64_t v254 = *(void *)(v247 + 72);
      os_log_t v65 = v255 + 2;
      uint64_t v229 = v63;
      swift_bridgeObjectRetain();
      uint64_t v66 = v62;
      os_log_t v68 = v257;
      uint64_t v67 = v258;
      uint64_t v69 = v33;
      uint64_t v70 = v250;
      os_log_t v255 = v61;
      do
      {
        sub_10011457C(v64, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
        MessageIdentifierSet.subtracting(_:)((uint64_t)&v36[SLODWORD(v66[3].isa)], v67);
        ((void (*)(char *, os_log_t, uint64_t))v65->isa)(v69, v68, v70);
        sub_1005E3670();
        sub_100007A48((uint64_t)v68, &qword_100709E38);
        sub_1001145E4((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
        v64 += v254;
        --v59;
      }
      while (v59);
      swift_bridgeObjectRelease();
      uint64_t v60 = v253;
      uint64_t v62 = v66;
      uint64_t v42 = v259;
      uint64_t v61 = v255;
    }
    sub_10006B1BC((uint64_t)v61, v252);
    swift_bridgeObjectRelease();
    char v71 = sub_1005E3630();
    uint64_t v72 = v248;
    if (v71)
    {
LABEL_25:
      v144 = *(NSObject **)(v72 + 88);
      uint64_t v145 = *(unsigned int *)(v72 + 96);
      LOBYTE(v260) = *(unsigned char *)(v72 + 100);
      int v146 = v260;
      sub_100187950((uint64_t)v144, v145 | ((unint64_t)v260 << 32));
      Class isa = v144[2].isa;
      if (!isa)
      {
        uint64_t v158 = sub_100007A48((uint64_t)v42, &qword_100709E38);
        uint64_t v159 = v251;
LABEL_45:
        uint64_t v218 = *(void **)(v72 + 24);
        unsigned int v219 = *(_DWORD *)(v72 + 32);
        __chkstk_darwin(v158);
        *(&v224 - 2) = (char *)v72;
        *(&v224 - 1) = (char *)v60;
        if (*(unsigned char *)(v159 + 184) == 1)
        {
          uint64_t v221 = *(void *)(v159 + 168);
          uint64_t v220 = *(void *)(v159 + 176);
          uint64_t v260 = *(void *)(v159 + 160);
          uint64_t v222 = v260;
          swift_bridgeObjectRetain();
          sub_10004A48C((uint64_t)&v260, v218, v219, 0, (void (*)(char *))sub_100114574, &v224 - 4);
          sub_10000F0D4(v222, v221, v220, 1);
          uint64_t v223 = v260;
          *(void *)(v159 + 168) = 0;
          *(void *)(v159 + 176) = 0;
          *(void *)(v159 + 160) = v223;
          *(unsigned char *)(v159 + 184) = 1;
        }
        return sub_100007A48(v252, &qword_100709E38);
      }
      LODWORD(v250) = v146;
      uint64_t v254 = v145;
      os_log_t v255 = v144;
      uint64_t v148 = v62;
      int v149 = (char *)v144
           + ((*(unsigned __int8 *)(v247 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v247 + 80));
      uint64_t v150 = *(void *)(v247 + 72);
      swift_bridgeObjectRetain();
      uint64_t v151 = 0;
      uint64_t v152 = (uint64_t)v256;
      os_log_t v153 = v257;
      uint64_t v154 = v258;
      do
      {
        MessageIdentifierSet.subtracting(_:)((uint64_t)&v149[SHIDWORD(v148[3].isa)], v154);
        MessageIdentifierSet.subtracting(_:)((uint64_t)v259, v154);
        sub_100007A48(v152, &qword_100709E38);
        MessageIdentifierSet.count.getter();
        uint64_t v156 = v155;
        uint64_t result = sub_100007A48((uint64_t)v153, &qword_100709E38);
        BOOL v79 = __OFADD__(v151, v156);
        v151 += v156;
        if (v79)
        {
          __break(1u);
          goto LABEL_50;
        }
        v149 += v150;
        Class isa = (Class)((char *)isa - 1);
      }
      while (isa);
      os_log_t v157 = v255;
      swift_bridgeObjectRelease();
      uint64_t v158 = sub_100007A48((uint64_t)v259, &qword_100709E38);
      uint64_t v159 = v251;
      uint64_t v72 = v248;
      uint64_t v60 = v253;
      if (v151 <= 0) {
        goto LABEL_45;
      }
      LOBYTE(v260) = v250;
      uint64_t v160 = v244;
      sub_1001867F4(271, (uint64_t)v157, v254 | ((unint64_t)v250 << 32), v244);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v242 + 48))(v160, 1, v243) == 1)
      {
        uint64_t v158 = sub_100007A48(v160, &qword_10070CEA0);
        goto LABEL_45;
      }
      uint64_t v161 = (uint64_t)v231;
      sub_100114690(v160, (uint64_t)v231, _s15MissingMessagesO10NewMissingVMa);
      uint64_t v162 = *(void (**)(char *, uint64_t, uint64_t))(v249 + 16);
      if ((unint64_t)v151 > 0x13)
      {
        v184 = v224;
        uint64_t v164 = v246;
        v162(v224, v60, v246);
        uint64_t v185 = v60;
        uint64_t v186 = v233;
        sub_10011457C(v185, v233, type metadata accessor for MailboxTaskLogger);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v187 = v235;
        sub_10011457C(v161, v235, _s15MissingMessagesO10NewMissingVMa);
        sub_10011457C(v161, (uint64_t)v225, _s15MissingMessagesO10NewMissingVMa);
        uint64_t v188 = sub_1005E0EB0();
        os_log_type_t v189 = sub_1005E25A0();
        int v190 = v189;
        if (os_log_type_enabled(v188, v189))
        {
          uint64_t v191 = swift_slowAlloc();
          uint64_t v259 = (char *)swift_slowAlloc();
          uint64_t v262 = v259;
          *(_DWORD *)uint64_t v191 = 68160003;
          LODWORD(v260) = 2;
          LODWORD(v256) = v190;
          sub_1005E2960();
          *(_WORD *)(v191 + 8) = 256;
          uint64_t v192 = v186 + *(int *)(v237 + 20);
          LOBYTE(v260) = *(unsigned char *)v192;
          sub_1005E2960();
          *(_WORD *)(v191 + 11) = 2082;
          uint64_t v193 = *(void *)(v192 + 8);
          unint64_t v194 = *(void *)(v192 + 16);
          swift_bridgeObjectRetain();
          uint64_t v260 = sub_1000C6914(v193, v194, (uint64_t *)&v262);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v191 + 21) = 1040;
          LODWORD(v260) = 2;
          sub_1005E2960();
          *(_WORD *)(v191 + 27) = 512;
          LOWORD(v260) = *(_WORD *)(v192 + 24);
          uint64_t v161 = (uint64_t)v231;
          sub_1005E2960();
          *(_WORD *)(v191 + 31) = 2160;
          uint64_t v260 = 0x786F626C69616DLL;
          sub_1005E2960();
          *(_WORD *)(v191 + 41) = 2085;
          int v195 = *(_DWORD *)(v192 + 40);
          uint64_t v260 = *(void *)(v192 + 32);
          int v261 = v195;
          swift_bridgeObjectRetain();
          uint64_t v196 = sub_1005E1CC0();
          uint64_t v260 = sub_1000C6914(v196, v197, (uint64_t *)&v262);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1001145E4(v233, type metadata accessor for MailboxTaskLogger);
          *(_WORD *)(v191 + 51) = 2048;
          uint64_t v260 = v151;
          sub_1005E2960();
          *(_WORD *)(v191 + 61) = 2048;
          uint64_t v198 = v258;
          uint64_t v199 = v235;
          MessageIdentifierSet.count.getter();
          uint64_t v201 = v200;
          sub_1001145E4(v199, _s15MissingMessagesO10NewMissingVMa);
          uint64_t v260 = v201;
          sub_1005E2960();
          *(_WORD *)(v191 + 71) = 2082;
          os_log_t v202 = v257;
          os_log_t v255 = v188;
          uint64_t v203 = (uint64_t)v225;
          sub_10006654C(20, (uint64_t)v257);
          uint64_t v204 = MessageIdentifierSet.debugDescription.getter(v198);
          unint64_t v206 = v205;
          sub_100007A48((uint64_t)v202, &qword_100709E38);
          uint64_t v260 = sub_1000C6914(v204, v206, (uint64_t *)&v262);
          uint64_t v72 = v248;
          sub_1005E2960();
          swift_bridgeObjectRelease();
          uint64_t v159 = v251;
          sub_1001145E4(v203, _s15MissingMessagesO10NewMissingVMa);
          os_log_t v207 = v255;
          _os_log_impl((void *)&_mh_execute_header, v255, (os_log_type_t)v256, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld missing UIDs, adding %ld UIDs as missing: ... %{public}s", (uint8_t *)v191, 0x51u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v182 = *(uint64_t (**)(char *, uint64_t))(v249 + 8);
          uint64_t v183 = &v256;
          goto LABEL_38;
        }
        sub_1001145E4(v187, _s15MissingMessagesO10NewMissingVMa);
        sub_1001145E4(v186, type metadata accessor for MailboxTaskLogger);
        sub_1001145E4((uint64_t)v225, _s15MissingMessagesO10NewMissingVMa);

        uint64_t v182 = *(uint64_t (**)(char *, uint64_t))(v249 + 8);
        uint64_t v208 = v184;
      }
      else
      {
        v163 = v234;
        uint64_t v164 = v246;
        v162(v234, v60, v246);
        uint64_t v165 = v232;
        sub_10011457C(v60, v232, type metadata accessor for MailboxTaskLogger);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v166 = v236;
        sub_10011457C(v161, v236, _s15MissingMessagesO10NewMissingVMa);
        uint64_t v167 = sub_1005E0EB0();
        os_log_type_t v168 = sub_1005E25A0();
        int v169 = v168;
        if (os_log_type_enabled(v167, v168))
        {
          uint64_t v170 = swift_slowAlloc();
          uint64_t v259 = (char *)swift_slowAlloc();
          uint64_t v262 = v259;
          *(_DWORD *)uint64_t v170 = 68159747;
          LODWORD(v260) = 2;
          os_log_t v257 = v167;
          sub_1005E2960();
          *(_WORD *)(v170 + 8) = 256;
          uint64_t v171 = v165 + *(int *)(v237 + 20);
          LOBYTE(v260) = *(unsigned char *)v171;
          sub_1005E2960();
          *(_WORD *)(v170 + 11) = 2082;
          LODWORD(v256) = v169;
          uint64_t v172 = *(void *)(v171 + 8);
          unint64_t v173 = *(void *)(v171 + 16);
          swift_bridgeObjectRetain();
          uint64_t v260 = sub_1000C6914(v172, v173, (uint64_t *)&v262);
          sub_1005E2960();
          uint64_t v159 = v251;
          swift_bridgeObjectRelease();
          *(_WORD *)(v170 + 21) = 1040;
          LODWORD(v260) = 2;
          sub_1005E2960();
          *(_WORD *)(v170 + 27) = 512;
          LOWORD(v260) = *(_WORD *)(v171 + 24);
          sub_1005E2960();
          *(_WORD *)(v170 + 31) = 2160;
          uint64_t v260 = 0x786F626C69616DLL;
          sub_1005E2960();
          *(_WORD *)(v170 + 41) = 2085;
          uint64_t v174 = *(void *)(v171 + 32);
          int v175 = *(_DWORD *)(v171 + 40);
          uint64_t v72 = v248;
          uint64_t v260 = v174;
          int v261 = v175;
          swift_bridgeObjectRetain();
          uint64_t v176 = sub_1005E1CC0();
          uint64_t v260 = sub_1000C6914(v176, v177, (uint64_t *)&v262);
          uint64_t v161 = (uint64_t)v231;
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1001145E4(v165, type metadata accessor for MailboxTaskLogger);
          *(_WORD *)(v170 + 51) = 2048;
          uint64_t v260 = v151;
          sub_1005E2960();
          *(_WORD *)(v170 + 61) = 2082;
          uint64_t v178 = v236;
          uint64_t v179 = MessageIdentifierSet.debugDescription.getter(v258);
          uint64_t v260 = sub_1000C6914(v179, v180, (uint64_t *)&v262);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1001145E4(v178, _s15MissingMessagesO10NewMissingVMa);
          os_log_t v181 = v257;
          _os_log_impl((void *)&_mh_execute_header, v257, (os_log_type_t)v256, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld missing UIDs: %{public}s", (uint8_t *)v170, 0x47u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v182 = *(uint64_t (**)(char *, uint64_t))(v249 + 8);
          uint64_t v183 = (char **)&v263;
LABEL_38:
          uint64_t v208 = *(v183 - 32);
          uint64_t v209 = v246;
LABEL_42:
          uint64_t v210 = v182(v208, v209);
          v211 = *(void **)(v72 + 24);
          unsigned int v212 = *(_DWORD *)(v72 + 32);
          __chkstk_darwin(v210);
          *(&v224 - 2) = (char *)v161;
          if (*(unsigned char *)(v159 + 184) == 1)
          {
            uint64_t v214 = *(void *)(v159 + 168);
            uint64_t v213 = *(void *)(v159 + 176);
            uint64_t v260 = *(void *)(v159 + 160);
            uint64_t v215 = v260;
            swift_bridgeObjectRetain();
            sub_10004A48C((uint64_t)&v260, v211, v212, 0, (void (*)(char *))sub_100114644, &v224 - 4);
            uint64_t v216 = v214;
            uint64_t v161 = (uint64_t)v231;
            sub_10000F0D4(v215, v216, v213, 1);
            uint64_t v217 = v260;
            *(void *)(v159 + 168) = 0;
            *(void *)(v159 + 176) = 0;
            *(void *)(v159 + 160) = v217;
            *(unsigned char *)(v159 + 184) = 1;
          }
          uint64_t v158 = sub_1001145E4(v161, _s15MissingMessagesO10NewMissingVMa);
          uint64_t v60 = v253;
          goto LABEL_45;
        }
        sub_1001145E4(v165, type metadata accessor for MailboxTaskLogger);
        sub_1001145E4(v166, _s15MissingMessagesO10NewMissingVMa);

        uint64_t v182 = *(uint64_t (**)(char *, uint64_t))(v249 + 8);
        uint64_t v208 = v163;
      }
      uint64_t v209 = v164;
      goto LABEL_42;
    }
    os_log_t v73 = v245;
    MessageIdentifierSet.ranges.getter((uint64_t)v245);
    sub_10000566C(&qword_10070A8F8);
    uint64_t v74 = sub_1005E35B0();
    uint64_t v75 = sub_1005E35E0();
    uint64_t v76 = sub_1005E35B0();
    uint64_t result = sub_1005E35E0();
    if (v74 < v76 || result < v74)
    {
LABEL_50:
      __break(1u);
    }
    else
    {
      uint64_t v78 = sub_1005E35B0();
      uint64_t result = sub_1005E35E0();
      if (v75 >= v78 && result >= v75)
      {
        BOOL v79 = __OFSUB__(v75, v74);
        uint64_t v80 = v75 - v74;
        if (!v79)
        {
          sub_100007A48((uint64_t)v73, &qword_10070A9C0);
          uint64_t v81 = *(void (**)(char *, uint64_t, uint64_t))(v249 + 16);
          if (v80 > 19)
          {
            uint64_t v116 = v241;
            uint64_t v117 = v246;
            v81(v241, v60, v246);
            uint64_t v118 = v239;
            sub_10011457C(v60, v239, type metadata accessor for MailboxTaskLogger);
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            uint64_t v119 = v252;
            uint64_t v120 = v227;
            sub_100026334(v252, v227);
            uint64_t v121 = v230;
            sub_100026334(v119, v230);
            uint64_t v122 = sub_1005E0EB0();
            os_log_type_t v123 = sub_1005E25C0();
            int v124 = v123;
            if (!os_log_type_enabled(v122, v123))
            {
              sub_100007A48(v120, &qword_100709E38);
              sub_1001145E4(v118, type metadata accessor for MailboxTaskLogger);
              sub_100007A48(v121, &qword_100709E38);

              uint64_t v107 = *(void (**)(char *, uint64_t))(v249 + 8);
              uint64_t v142 = v116;
              uint64_t v143 = v117;
              goto LABEL_23;
            }
            uint64_t v125 = swift_slowAlloc();
            uint64_t v254 = swift_slowAlloc();
            uint64_t v262 = (char *)v254;
            *(_DWORD *)uint64_t v125 = 68159747;
            LODWORD(v260) = 2;
            os_log_t v255 = v62;
            LODWORD(v250) = v124;
            sub_1005E2960();
            *(_WORD *)(v125 + 8) = 256;
            uint64_t v126 = v118 + *(int *)(v237 + 20);
            LOBYTE(v260) = *(unsigned char *)v126;
            sub_1005E2960();
            *(_WORD *)(v125 + 11) = 2082;
            os_log_t v245 = v122;
            uint64_t v127 = *(void *)(v126 + 8);
            unint64_t v128 = *(void *)(v126 + 16);
            swift_bridgeObjectRetain();
            uint64_t v260 = sub_1000C6914(v127, v128, (uint64_t *)&v262);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            *(_WORD *)(v125 + 21) = 1040;
            LODWORD(v260) = 2;
            sub_1005E2960();
            *(_WORD *)(v125 + 27) = 512;
            LOWORD(v260) = *(_WORD *)(v126 + 24);
            sub_1005E2960();
            *(_WORD *)(v125 + 31) = 2160;
            uint64_t v260 = 0x786F626C69616DLL;
            sub_1005E2960();
            *(_WORD *)(v125 + 41) = 2085;
            int v129 = *(_DWORD *)(v126 + 40);
            uint64_t v260 = *(void *)(v126 + 32);
            int v261 = v129;
            swift_bridgeObjectRetain();
            uint64_t v130 = sub_1005E1CC0();
            uint64_t v260 = sub_1000C6914(v130, v131, (uint64_t *)&v262);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_1001145E4(v239, type metadata accessor for MailboxTaskLogger);
            *(_WORD *)(v125 + 51) = 2048;
            uint64_t v132 = v258;
            MessageIdentifierSet.count.getter();
            uint64_t v134 = v133;
            sub_100007A48(v120, &qword_100709E38);
            uint64_t v260 = v134;
            sub_1005E2960();
            *(_WORD *)(v125 + 61) = 2082;
            os_log_t v135 = v257;
            uint64_t v136 = v230;
            sub_10006654C(20, (uint64_t)v257);
            uint64_t v137 = MessageIdentifierSet.debugDescription.getter(v132);
            unint64_t v139 = v138;
            uint64_t v140 = (uint64_t)v135;
            uint64_t v62 = v255;
            sub_100007A48(v140, &qword_100709E38);
            uint64_t v260 = sub_1000C6914(v137, v139, (uint64_t *)&v262);
            sub_1005E2960();
            uint64_t v72 = v248;
            swift_bridgeObjectRelease();
            sub_100007A48(v136, &qword_100709E38);
            os_log_t v141 = v245;
            _os_log_impl((void *)&_mh_execute_header, v245, (os_log_type_t)v250, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed %ld UIDs: ... %{public}s", (uint8_t *)v125, 0x47u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v107 = *(void (**)(char *, uint64_t))(v249 + 8);
            uint64_t v108 = &v265;
          }
          else
          {
            uint64_t v82 = v240;
            uint64_t v83 = v246;
            v81(v240, v60, v246);
            uint64_t v84 = v238;
            sub_10011457C(v60, v238, type metadata accessor for MailboxTaskLogger);
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            uint64_t v85 = v252;
            uint64_t v86 = v226;
            sub_100026334(v252, v226);
            uint64_t v87 = v85;
            uint64_t v88 = v228;
            sub_100026334(v87, v228);
            uint64_t v89 = sub_1005E0EB0();
            os_log_type_t v90 = sub_1005E25C0();
            int v91 = v90;
            if (!os_log_type_enabled(v89, v90))
            {
              sub_100007A48(v86, &qword_100709E38);
              sub_1001145E4(v84, type metadata accessor for MailboxTaskLogger);
              sub_100007A48(v88, &qword_100709E38);

              (*(void (**)(char *, uint64_t))(v249 + 8))(v82, v83);
LABEL_24:
              uint64_t v42 = v259;
              goto LABEL_25;
            }
            uint64_t v92 = swift_slowAlloc();
            os_log_t v255 = v62;
            uint64_t v93 = v92;
            uint64_t v254 = swift_slowAlloc();
            uint64_t v262 = (char *)v254;
            *(_DWORD *)uint64_t v93 = 68159747;
            LODWORD(v260) = 2;
            LODWORD(v250) = v91;
            sub_1005E2960();
            *(_WORD *)(v93 + 8) = 256;
            uint64_t v94 = v84 + *(int *)(v237 + 20);
            LOBYTE(v260) = *(unsigned char *)v94;
            sub_1005E2960();
            *(_WORD *)(v93 + 11) = 2082;
            os_log_t v245 = v89;
            uint64_t v95 = *(void *)(v94 + 8);
            unint64_t v96 = *(void *)(v94 + 16);
            swift_bridgeObjectRetain();
            uint64_t v260 = sub_1000C6914(v95, v96, (uint64_t *)&v262);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            *(_WORD *)(v93 + 21) = 1040;
            LODWORD(v260) = 2;
            sub_1005E2960();
            *(_WORD *)(v93 + 27) = 512;
            LOWORD(v260) = *(_WORD *)(v94 + 24);
            sub_1005E2960();
            *(_WORD *)(v93 + 31) = 2160;
            uint64_t v260 = 0x786F626C69616DLL;
            sub_1005E2960();
            *(_WORD *)(v93 + 41) = 2085;
            uint64_t v97 = *(void *)(v94 + 32);
            int v98 = *(_DWORD *)(v94 + 40);
            uint64_t v72 = v248;
            uint64_t v260 = v97;
            int v261 = v98;
            swift_bridgeObjectRetain();
            uint64_t v99 = sub_1005E1CC0();
            uint64_t v260 = sub_1000C6914(v99, v100, (uint64_t *)&v262);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_1001145E4(v238, type metadata accessor for MailboxTaskLogger);
            *(_WORD *)(v93 + 51) = 2048;
            uint64_t v101 = v258;
            MessageIdentifierSet.count.getter();
            uint64_t v103 = v102;
            sub_100007A48(v86, &qword_100709E38);
            uint64_t v260 = v103;
            sub_1005E2960();
            *(_WORD *)(v93 + 61) = 2082;
            uint64_t v104 = MessageIdentifierSet.debugDescription.getter(v101);
            uint64_t v260 = sub_1000C6914(v104, v105, (uint64_t *)&v262);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_100007A48(v88, &qword_100709E38);
            os_log_t v106 = v245;
            _os_log_impl((void *)&_mh_execute_header, v245, (os_log_type_t)v250, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed %ld UIDs: %{public}s", (uint8_t *)v93, 0x47u);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v62 = v255;
            swift_slowDealloc();

            uint64_t v107 = *(void (**)(char *, uint64_t))(v249 + 8);
            uint64_t v108 = &v264;
          }
          uint64_t v142 = (char *)*(v108 - 32);
          uint64_t v143 = v246;
LABEL_23:
          v107(v142, v143);
          goto LABEL_24;
        }
LABEL_52:
        __break(1u);
        return result;
      }
    }
    __break(1u);
    goto LABEL_52;
  }
  unint64_t v109 = *(void **)(v2 + 24);
  unsigned int v110 = *(_DWORD *)(v2 + 32);
  uint64_t result = __chkstk_darwin(v51);
  *(&v224 - 2) = (char *)v253;
  uint64_t v111 = v251;
  if (*(unsigned char *)(v251 + 184) == 1)
  {
    uint64_t v113 = *(void *)(v251 + 168);
    uint64_t v112 = *(void *)(v251 + 176);
    uint64_t v260 = *(void *)(v251 + 160);
    uint64_t v114 = v260;
    swift_bridgeObjectRetain();
    sub_10004A48C((uint64_t)&v260, v109, v110, 0, (void (*)(char *))sub_100114688, &v224 - 4);
    uint64_t result = sub_10000F0D4(v114, v113, v112, 1);
    uint64_t v115 = v260;
    *(void *)(v111 + 168) = 0;
    *(void *)(v111 + 176) = 0;
    *(void *)(v111 + 160) = v115;
    *(unsigned char *)(v111 + 184) = 1;
  }
  return result;
}

uint64_t sub_1001132D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1 + *(int *)(type metadata accessor for MailboxSyncState() + 48);
  uint64_t v12 = *(void *)(v11 + 40);
  uint64_t v13 = v12;
  if ((*(unsigned char *)(v11 + 48) & 1) == 0) {
    uint64_t v13 = *(void *)(v12 + 16);
  }
  sub_10005A3F4(v12, *(unsigned char *)(v11 + 48));
  *(void *)(v11 + 40) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v11 + 48) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  sub_10011457C(a2, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  int v14 = sub_1005E0EB0();
  os_log_type_t v15 = sub_1005E25C0();
  int v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v17 = swift_slowAlloc();
    int v30 = v16;
    uint64_t v18 = v17;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v34 = v29;
    *(_DWORD *)uint64_t v18 = 68159491;
    LODWORD(v32) = 2;
    sub_1005E2960();
    *(_WORD *)(v18 + 8) = 256;
    uint64_t v19 = *(int *)(v4 + 20);
    uint64_t v31 = v7;
    uint64_t v20 = &v6[v19];
    LOBYTE(v32) = v6[v19];
    sub_1005E2960();
    *(_WORD *)(v18 + 11) = 2082;
    uint64_t v28 = v13;
    uint64_t v22 = *((void *)v20 + 1);
    unint64_t v21 = *((void *)v20 + 2);
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1000C6914(v22, v21, &v34);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 21) = 1040;
    LODWORD(v32) = 2;
    sub_1005E2960();
    *(_WORD *)(v18 + 27) = 512;
    LOWORD(v32) = *((_WORD *)v20 + 12);
    sub_1005E2960();
    *(_WORD *)(v18 + 31) = 2160;
    uint64_t v32 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v18 + 41) = 2085;
    int v23 = *((_DWORD *)v20 + 10);
    uint64_t v32 = *((void *)v20 + 4);
    int v33 = v23;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1005E1CC0();
    uint64_t v32 = sub_1000C6914(v24, v25, &v34);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_1001145E4((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v18 + 51) = 2048;
    uint64_t v32 = v28;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v14, (os_log_type_t)v30, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Local mailbox is empty. Removed %ld pending expunge.", (uint8_t *)v18, 0x3Du);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v31);
  }
  else
  {
    sub_1001145E4((uint64_t)v6, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_100113744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = &v46[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v46[-v10];
  uint64_t v12 = sub_1005E0ED0();
  uint64_t v51 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  os_log_type_t v15 = &v46[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  uint64_t v17 = &v46[-v16];
  uint64_t v18 = *(void *)(a2 + 104);
  uint64_t v19 = a1 + *(int *)(type metadata accessor for MailboxSyncState() + 48);
  uint64_t v50 = v18;
  sub_10007B438(v18);
  uint64_t v20 = *(void *)(v19 + 40);
  if ((*(unsigned char *)(v19 + 48) & 1) == 0) {
    uint64_t v20 = *(void *)(v20 + 16);
  }
  unint64_t v21 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v51 + 16);
  if (v20 < 1)
  {
    v21(v15, a3, v12);
    sub_10011457C(a3, (uint64_t)v9, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    int v33 = sub_1005E0EB0();
    os_log_type_t v34 = sub_1005E25C0();
    int v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v54 = v48;
      *(_DWORD *)uint64_t v36 = 68159491;
      LODWORD(v52) = 2;
      uint64_t v49 = v12;
      sub_1005E2960();
      *(_WORD *)(v36 + 8) = 256;
      uint64_t v37 = *(int *)(v6 + 20);
      int v47 = v35;
      uint64_t v38 = &v9[v37];
      LOBYTE(v52) = v9[v37];
      sub_1005E2960();
      *(_WORD *)(v36 + 11) = 2082;
      uint64_t v39 = *((void *)v38 + 1);
      unint64_t v40 = *((void *)v38 + 2);
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_1000C6914(v39, v40, &v54);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 21) = 1040;
      LODWORD(v52) = 2;
      sub_1005E2960();
      *(_WORD *)(v36 + 27) = 512;
      LOWORD(v52) = *((_WORD *)v38 + 12);
      sub_1005E2960();
      *(_WORD *)(v36 + 31) = 2160;
      uint64_t v52 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v36 + 41) = 2085;
      int v41 = *((_DWORD *)v38 + 10);
      uint64_t v52 = *((void *)v38 + 4);
      int v53 = v41;
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_1005E1CC0();
      uint64_t v52 = sub_1000C6914(v42, v43, &v54);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001145E4((uint64_t)v9, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v36 + 51) = 2048;
      uint64_t v52 = v50;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v47, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed all %ld EXPUNGE messages.", (uint8_t *)v36, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v51 + 8))(v15, v49);
    }
    sub_1001145E4((uint64_t)v9, type metadata accessor for MailboxTaskLogger);

    uint64_t v44 = *(uint64_t (**)(unsigned char *, uint64_t))(v51 + 8);
    uint64_t v45 = v15;
  }
  else
  {
    v21(v17, a3, v12);
    sub_10011457C(a3, (uint64_t)v11, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v22 = sub_1005E0EB0();
    os_log_type_t v23 = sub_1005E25C0();
    int v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v54 = v48;
      *(_DWORD *)uint64_t v25 = 68159747;
      LODWORD(v52) = 2;
      uint64_t v49 = v12;
      sub_1005E2960();
      *(_WORD *)(v25 + 8) = 256;
      uint64_t v26 = &v11[*(int *)(v6 + 20)];
      LOBYTE(v52) = *v26;
      sub_1005E2960();
      *(_WORD *)(v25 + 11) = 2082;
      int v47 = v24;
      uint64_t v27 = *((void *)v26 + 1);
      unint64_t v28 = *((void *)v26 + 2);
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_1000C6914(v27, v28, &v54);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 21) = 1040;
      LODWORD(v52) = 2;
      sub_1005E2960();
      *(_WORD *)(v25 + 27) = 512;
      LOWORD(v52) = *((_WORD *)v26 + 12);
      sub_1005E2960();
      *(_WORD *)(v25 + 31) = 2160;
      uint64_t v52 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v25 + 41) = 2085;
      int v29 = *((_DWORD *)v26 + 10);
      uint64_t v52 = *((void *)v26 + 4);
      int v53 = v29;
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1005E1CC0();
      uint64_t v52 = sub_1000C6914(v30, v31, &v54);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001145E4((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v25 + 51) = 2048;
      uint64_t v52 = v50;
      sub_1005E2960();
      *(_WORD *)(v25 + 61) = 2048;
      uint64_t v52 = v20;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v47, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed %ld EXPUNGE messages, still %ld remaining.", (uint8_t *)v25, 0x47u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v51 + 8))(v17, v49);
    }
    sub_1001145E4((uint64_t)v11, type metadata accessor for MailboxTaskLogger);

    uint64_t v44 = *(uint64_t (**)(unsigned char *, uint64_t))(v51 + 8);
    uint64_t v45 = v17;
  }
  return v44(v45, v12);
}

uint64_t sub_100113F28()
{
  if (qword_100709D68 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

Swift::Int sub_100113F84()
{
  return sub_10001DF10((uint64_t)&off_1006B9FE0);
}

uint64_t sub_100113F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_10000566C(&qword_10070CC28);
  __chkstk_darwin(v13 - 8);
  os_log_type_t v15 = (uint64_t *)&v26[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = &v26[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = *(void *)(v7 + 88);
  v26[12] = *(unsigned char *)(v7 + 100);
  sub_10010895C(a1, a2, a3, a4, a7, v19, v15);
  uint64_t v20 = sub_10000566C(&qword_10070CC30);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v15, 1, v20) == 1)
  {
    unint64_t v21 = &qword_10070CC28;
    uint64_t v22 = (uint64_t)v15;
  }
  else
  {
    uint64_t v23 = *v15;
    uint64_t v24 = sub_10006B1BC((uint64_t)v15 + *(int *)(v20 + 48), (uint64_t)v18);
    __chkstk_darwin(v24);
    *(void *)&v26[-16] = v18;
    sub_1001080D8(v23, (void (*)(uint64_t *__return_ptr, unint64_t))sub_10010D9EC, (uint64_t)&v26[-32]);
    unint64_t v21 = &qword_100709E38;
    uint64_t v22 = (uint64_t)v18;
  }
  return sub_100007A48(v22, v21);
}

unint64_t sub_100114188()
{
  return 0xD00000000000001DLL;
}

uint64_t initializeWithCopy for DetectRemovedMessagesInRecent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = a2 + 48;
  long long v6 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 48, v5, v7);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_WORD *)(a1 + 101) = *(_WORD *)(a2 + 101);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectRemovedMessagesInRecent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_100022498((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = v4;
  *(unsigned char *)(a1 + 101) = *(unsigned char *)(a2 + 101);
  *(unsigned char *)(a1 + 102) = *(unsigned char *)(a2 + 102);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

__n128 initializeWithTake for DetectRemovedMessagesInRecent(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for DetectRemovedMessagesInRecent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 48);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(unsigned char *)(a1 + 101) = *(unsigned char *)(a2 + 101);
  *(unsigned char *)(a1 + 102) = *(unsigned char *)(a2 + 102);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectRemovedMessagesInRecent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetectRemovedMessagesInRecent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectRemovedMessagesInRecent()
{
  return &type metadata for DetectRemovedMessagesInRecent;
}

unint64_t sub_1001144F8(uint64_t a1)
{
  unint64_t result = sub_100114520();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100114520()
{
  unint64_t result = qword_10070CE98;
  if (!qword_10070CE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070CE98);
  }
  return result;
}

uint64_t sub_100114574(uint64_t a1)
{
  return sub_100113744(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10011457C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001145E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100114644()
{
  uint64_t v1 = *(void *)(v0 + 16);
  type metadata accessor for MailboxSyncState();
  return sub_100072678(v1);
}

uint64_t sub_100114688(uint64_t a1)
{
  return sub_1001132D8(a1, *(void *)(v1 + 16));
}

uint64_t sub_100114690(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001146F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, char a10, char a11)
{
  int v34 = a8;
  uint64_t v36 = a4;
  uint64_t v37 = a6;
  int v39 = a3;
  int v40 = a5;
  uint64_t v38 = type metadata accessor for DetermineMessageBatches.TaskState(0);
  __chkstk_darwin(v38);
  int v35 = &v33[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = &v33[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)a9 = &_swiftEmptySetSingleton;
  *(unsigned char *)(a9 + 8) = 0;
  *(void *)(a9 + 76) = 0;
  *(unsigned char *)(a9 + 84) = 1;
  uint64_t v19 = *(void *)(a1 + 24);
  int v20 = *(_DWORD *)(a1 + 32);
  uint64_t v21 = type metadata accessor for DetermineMessageBatches(0);
  *(void *)(a9 + 16) = v21;
  uint64_t v42 = v19;
  int v43 = v20;
  sub_10003BC88();
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  long long v22 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a9 + 88) = *(_OWORD *)a1;
  *(void *)(a9 + 64) = a2;
  char v23 = v39;
  *(unsigned char *)(a9 + 72) = v39 & 1;
  *(_OWORD *)(a9 + 104) = v22;
  *(_DWORD *)(a9 + 120) = *(_DWORD *)(a1 + 32);
  *(_DWORD *)(a9 + 124) = a7;
  *(unsigned char *)(a9 + 128) = BYTE4(a7) & 1;
  *(unsigned char *)(a9 + 129) = a10 & 1;
  *(unsigned char *)(a9 + 130) = a11 & 1;
  if (v40)
  {
    uint64_t v25 = 4507;
    *(void *)(a9 + 136) = 4507;
    uint64_t v26 = v37;
    uint64_t v27 = v21;
    if (v37)
    {
      uint64_t v25 = 4507;
      if (v37 <= 4507) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
LABEL_14:
    uint64_t v32 = (void *)(a9 + *(int *)(v27 + 52));
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
    sub_1000654F0(v25, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v18, v32);
    return swift_storeEnumTagMultiPayload();
  }
  uint64_t v24 = sub_1000658B8(v36);
  uint64_t v25 = v24;
  *(void *)(a9 + 136) = v24;
  uint64_t v26 = v37;
  if (!v37)
  {
    uint64_t v27 = v21;
    goto LABEL_14;
  }
  uint64_t v27 = v21;
  if (v24 < v37)
  {
LABEL_10:
    if ((v34 & 1) != 0 && ((a7 & (unint64_t)&_mh_execute_header) == 0) | v23 & 1) {
      *(void *)(a9 + *(int *)(v27 + 52)) = v26;
    }
    return swift_storeEnumTagMultiPayload();
  }
LABEL_4:
  sub_10000566C(&qword_100709FF8);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1005F6670;
  if ((a7 & (unint64_t)&_mh_execute_header) != 0) {
    int v29 = -1;
  }
  else {
    int v29 = a7;
  }
  int v41 = v29;
  LODWORD(v42) = 1;
  sub_100063E18();
  static MessageIdentifier.... infix(_:_:)();
  sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v30 = v35;
  sub_1000654F0(v25, v28, (uint64_t)v18, v35);
  swift_storeEnumTagMultiPayload();
  return sub_100119670((uint64_t)v30, a9 + *(int *)(v27 + 52), type metadata accessor for DetermineMessageBatches.TaskState);
}

uint64_t type metadata accessor for DetermineMessageBatches.TaskState(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070CF20);
}

uint64_t type metadata accessor for DetermineMessageBatches(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070CFB0);
}

uint64_t *sub_100114A6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_10000566C(&qword_100709E30);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_10000566C(&qword_10070A000);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        uint64_t v15 = sub_10000566C(&qword_100709E60);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v10, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_100114C48(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(type metadata accessor for MessageBatches(0) + 24);
    uint64_t v4 = sub_10000566C(&qword_100709E30);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4);
    if (!result)
    {
      uint64_t v5 = sub_10000566C(&qword_100709E60);
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      return v6(v3, v5);
    }
  }
  return result;
}

void *sub_100114D24(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_10000566C(&qword_100709E30);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_10000566C(&qword_10070A000);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v13 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v8, v9, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_100114EBC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100119610((uint64_t)a1, type metadata accessor for DetermineMessageBatches.TaskState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v6 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_10000566C(&qword_100709E30);
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_10000566C(&qword_10070A000);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        uint64_t v12 = sub_10000566C(&qword_100709E60);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

_OWORD *sub_100115080(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_10000566C(&qword_100709E30);
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = sub_10000566C(&qword_10070A000);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v12 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_100115210(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100119610((uint64_t)a1, type metadata accessor for DetermineMessageBatches.TaskState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_10000566C(&qword_100709E30);
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_10000566C(&qword_10070A000);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        uint64_t v12 = sub_10000566C(&qword_100709E60);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001153C4()
{
  uint64_t result = type metadata accessor for MessageBatches(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_10011545C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    uint64_t v8 = a2 + 3;
    long long v9 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 48) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_bridgeObjectRetain();
    v11(a1 + 24, v8, v10);
    *(void *)(a1 + 64) = a2[8];
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(void *)(a1 + 76) = *(uint64_t *)((char *)a2 + 76);
    *(unsigned char *)(a1 + 84) = *((unsigned char *)a2 + 84);
    uint64_t v12 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v12;
    *(_WORD *)(a1 + 104) = *((_WORD *)a2 + 52);
    *(void *)(a1 + 112) = a2[14];
    int v13 = *((_DWORD *)a2 + 31);
    *(_DWORD *)(a1 + 120) = *((_DWORD *)a2 + 30);
    *(_DWORD *)(a1 + 124) = v13;
    *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    *(_WORD *)(a1 + 129) = *(_WORD *)((char *)a2 + 129);
    uint64_t v14 = a2[17];
    uint64_t v15 = *(int *)(a3 + 52);
    uint64_t v16 = (uint64_t *)((char *)a2 + v15);
    uint64_t v17 = (void *)(a1 + v15);
    *(void *)(a1 + 136) = v14;
    uint64_t v18 = type metadata accessor for DetermineMessageBatches.TaskState(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = v16[1];
      *uint64_t v17 = *v16;
      v17[1] = v19;
      uint64_t v20 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
      uint64_t v21 = (char *)v17 + v20;
      long long v22 = (char *)v16 + v20;
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_10000566C(&qword_100709E30);
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        uint64_t v25 = sub_10000566C(&qword_10070A000);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        uint64_t v26 = sub_10000566C(&qword_100709E60);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v21, v22, v26);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100115728(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  type metadata accessor for DetermineMessageBatches.TaskState(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(type metadata accessor for MessageBatches(0) + 24);
    uint64_t v7 = sub_10000566C(&qword_100709E30);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
    if (!result)
    {
      uint64_t v8 = sub_10000566C(&qword_100709E60);
      long long v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      return v9(v6, v8);
    }
  }
  return result;
}

uint64_t sub_100115840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a2 + 24;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v7;
  uint64_t v8 = v7;
  long long v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  v9(a1 + 24, v6, v8);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 76) = *(void *)(a2 + 76);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  int v11 = *(_DWORD *)(a2 + 124);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 124) = v11;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_WORD *)(a1 + 129) = *(_WORD *)(a2 + 129);
  uint64_t v12 = *(int *)(a3 + 52);
  int v13 = (void *)(a2 + v12);
  uint64_t v14 = (void *)(a1 + v12);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v15 = type metadata accessor for DetermineMessageBatches.TaskState(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = v13[1];
    *uint64_t v14 = *v13;
    v14[1] = v16;
    uint64_t v17 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
    uint64_t v18 = (char *)v14 + v17;
    uint64_t v19 = (char *)v13 + v17;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_10000566C(&qword_100709E30);
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = sub_10000566C(&qword_10070A000);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      uint64_t v23 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v18, v19, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100115AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_100022498((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  LOBYTE(v6) = *(unsigned char *)(a2 + 84);
  *(void *)(a1 + 76) = *(void *)(a2 + 76);
  *(unsigned char *)(a1 + 84) = v6;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  int v7 = *(_DWORD *)(a2 + 124);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_DWORD *)(a1 + 124) = v7;
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 52);
    long long v9 = (void *)(a1 + v8);
    uint64_t v10 = (void *)(a2 + v8);
    sub_100119610(a1 + v8, type metadata accessor for DetermineMessageBatches.TaskState);
    uint64_t v11 = type metadata accessor for DetermineMessageBatches.TaskState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *long long v9 = *v10;
      v9[1] = v10[1];
      uint64_t v12 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
      int v13 = (char *)v9 + v12;
      uint64_t v14 = (char *)v10 + v12;
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_10000566C(&qword_100709E30);
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = sub_10000566C(&qword_10070A000);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        uint64_t v18 = sub_10000566C(&qword_100709E60);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v13, v14, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100115D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(void *)(a1 + 76) = *(void *)(a2 + 76);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  int v5 = *(_DWORD *)(a2 + 124);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 124) = v5;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_WORD *)(a1 + 129) = *(_WORD *)(a2 + 129);
  uint64_t v6 = *(int *)(a3 + 52);
  int v7 = (_OWORD *)(a2 + v6);
  uint64_t v8 = (_OWORD *)(a1 + v6);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v9 = type metadata accessor for DetermineMessageBatches.TaskState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v8 = *v7;
    uint64_t v10 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
    uint64_t v11 = (char *)v8 + v10;
    uint64_t v12 = (char *)v7 + v10;
    uint64_t v13 = sub_10000566C(&qword_100709E30);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_10000566C(&qword_10070A000);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v16 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v11, v12, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100115F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 76) = *(void *)(a2 + 76);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  int v7 = *(_DWORD *)(a2 + 124);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 124) = v7;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 52);
    uint64_t v9 = (_OWORD *)(a1 + v8);
    uint64_t v10 = (_OWORD *)(a2 + v8);
    sub_100119610(a1 + v8, type metadata accessor for DetermineMessageBatches.TaskState);
    uint64_t v11 = type metadata accessor for DetermineMessageBatches.TaskState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v9 = *v10;
      uint64_t v12 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
      uint64_t v13 = (char *)v9 + v12;
      uint64_t v14 = (char *)v10 + v12;
      uint64_t v15 = sub_10000566C(&qword_100709E30);
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = sub_10000566C(&qword_10070A000);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        uint64_t v18 = sub_10000566C(&qword_100709E60);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v13, v14, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100116208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10011621C);
}

uint64_t sub_10011621C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DetermineMessageBatches.TaskState(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 52);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1001162CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001162E0);
}

void *sub_1001162E0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for DetermineMessageBatches.TaskState(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 52);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100116388()
{
  uint64_t result = type metadata accessor for DetermineMessageBatches.TaskState(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_10011647C()
{
  qword_100761738 = (uint64_t)&_swiftEmptySetSingleton;
}

uint64_t sub_100116490(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DetermineMessageBatches(0);
  uint64_t v4 = v3 - 8;
  uint64_t v5 = __chkstk_darwin(v3);
  os_log_t v126 = (os_log_t)((char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v122 = (uint64_t)&v117 - v8;
  __chkstk_darwin(v7);
  uint64_t v119 = (uint64_t)&v117 - v9;
  uint64_t v124 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v10 = __chkstk_darwin(v124);
  uint64_t v12 = (char *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v117 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v120 = (uint64_t)&v117 - v17;
  __chkstk_darwin(v16);
  uint64_t v118 = (uint64_t)&v117 - v18;
  uint64_t v19 = sub_1005E0ED0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v127 = v19;
  uint64_t v128 = v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v117 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v117 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v121 = (char *)&v117 - v28;
  __chkstk_darwin(v27);
  uint64_t v30 = ((char *)&v117 - v29);
  uint64_t v31 = type metadata accessor for MessageBatches(0);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  os_log_t v123 = (os_log_t)((char *)&v117 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v32);
  uint64_t v125 = (uint64_t)&v117 - v34;
  uint64_t v35 = type metadata accessor for DetermineMessageBatches.TaskState(0);
  __chkstk_darwin(v35);
  uint64_t v37 = (uint64_t *)((char *)&v117 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001196D8(v1 + *(int *)(v4 + 60), (uint64_t)v37, type metadata accessor for DetermineMessageBatches.TaskState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v39 = v125;
      sub_100119670((uint64_t)v37, v125, type metadata accessor for MessageBatches);
      uint64_t v40 = v128;
      int v41 = *(void (**)(char *, uint64_t, uint64_t))(v128 + 16);
      if (*(void *)(*(void *)(v39 + 8) + 16))
      {
        uint64_t v42 = v121;
        uint64_t v43 = v127;
        v41(v121, a1, v127);
        uint64_t v44 = v120;
        sub_1001196D8(a1, v120, type metadata accessor for MailboxTaskLogger);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        os_log_t v45 = v123;
        sub_1001196D8(v39, (uint64_t)v123, type metadata accessor for MessageBatches);
        uint64_t v46 = v119;
        sub_1001196D8(v1, v119, type metadata accessor for DetermineMessageBatches);
        int v47 = sub_1005E0EB0();
        int v48 = sub_1005E25C0();
        if (os_log_type_enabled(v47, (os_log_type_t)v48))
        {
          LODWORD(v122) = v48;
          os_log_t v126 = v47;
          uint64_t v49 = swift_slowAlloc();
          uint64_t v118 = swift_slowAlloc();
          uint64_t v132 = v118;
          *(_DWORD *)uint64_t v49 = 68159747;
          LODWORD(v130) = 2;
          sub_1005E2960();
          *(_WORD *)(v49 + 8) = 256;
          uint64_t v50 = v44 + *(int *)(v124 + 20);
          LOBYTE(v130) = *(unsigned char *)v50;
          sub_1005E2960();
          *(_WORD *)(v49 + 11) = 2082;
          uint64_t v51 = *(void *)(v50 + 8);
          unint64_t v52 = *(void *)(v50 + 16);
          swift_bridgeObjectRetain();
          uint64_t v130 = sub_1000C6914(v51, v52, &v132);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v49 + 21) = 1040;
          LODWORD(v130) = 2;
          os_log_t v53 = v123;
          sub_1005E2960();
          *(_WORD *)(v49 + 27) = 512;
          LOWORD(v130) = *(_WORD *)(v50 + 24);
          sub_1005E2960();
          *(_WORD *)(v49 + 31) = 2160;
          uint64_t v130 = 0x786F626C69616DLL;
          sub_1005E2960();
          *(_WORD *)(v49 + 41) = 2085;
          int v54 = *(_DWORD *)(v50 + 40);
          uint64_t v130 = *(void *)(v50 + 32);
          int v131 = v54;
          swift_bridgeObjectRetain();
          uint64_t v55 = sub_1005E1CC0();
          uint64_t v130 = sub_1000C6914(v55, v56, &v132);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_100119610(v120, type metadata accessor for MailboxTaskLogger);
          uint64_t v124 = v49;
          *(_WORD *)(v49 + 51) = 2082;
          Class isa = v53[1].isa;
          int64_t v58 = *((void *)isa + 2);
          uint64_t v59 = _swiftEmptyArrayStorage;
          if (v58)
          {
            uint64_t v130 = (uint64_t)_swiftEmptyArrayStorage;
            swift_bridgeObjectRetain();
            sub_1001191F8(0, v58, 0);
            uint64_t v60 = 0;
            uint64_t v59 = (void *)v130;
            do
            {
              uint64_t v129 = *((void *)isa + v60 + 4);
              sub_10000566C(&qword_10070A9B8);
              uint64_t v61 = sub_1005E1CA0();
              uint64_t v63 = v62;
              uint64_t v130 = (uint64_t)v59;
              unint64_t v65 = v59[2];
              unint64_t v64 = v59[3];
              if (v65 >= v64 >> 1)
              {
                sub_1001191F8((char *)(v64 > 1), v65 + 1, 1);
                uint64_t v59 = (void *)v130;
              }
              ++v60;
              v59[2] = v65 + 1;
              uint64_t v66 = &v59[2 * v65];
              v66[4] = v61;
              v66[5] = v63;
            }
            while (v58 != v60);
            swift_bridgeObjectRelease();
            uint64_t v46 = v119;
            os_log_t v53 = v123;
          }
          uint64_t v111 = v124;
          uint64_t v130 = (uint64_t)v59;
          sub_10000566C(&qword_100709F58);
          sub_10001C548();
          uint64_t v112 = sub_1005E1A80();
          unint64_t v114 = v113;
          swift_bridgeObjectRelease();
          uint64_t v130 = sub_1000C6914(v112, v114, &v132);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_100119610((uint64_t)v53, type metadata accessor for MessageBatches);
          *(_WORD *)(v111 + 61) = 2048;
          uint64_t v115 = *(void *)(v46 + 136);
          sub_100119610(v46, type metadata accessor for DetermineMessageBatches);
          uint64_t v130 = v115;
          sub_1005E2960();
          os_log_t v116 = v126;
          _os_log_impl((void *)&_mh_execute_header, v126, (os_log_type_t)v122, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. Using fixed range(s): %{public}s (batch size: %ld).", (uint8_t *)v111, 0x47u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v128 + 8))(v121, v127);
          uint64_t v110 = v125;
        }
        else
        {
          sub_100119610(v46, type metadata accessor for DetermineMessageBatches);

          sub_100119610((uint64_t)v45, type metadata accessor for MessageBatches);
          sub_100119610(v44, type metadata accessor for MailboxTaskLogger);
          (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v43);
          uint64_t v110 = v39;
        }
      }
      else
      {
        uint64_t v99 = v127;
        v41((char *)v30, a1, v127);
        uint64_t v100 = v118;
        sub_1001196D8(a1, v118, type metadata accessor for MailboxTaskLogger);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v101 = sub_1005E0EB0();
        os_log_type_t v102 = sub_1005E25C0();
        if (os_log_type_enabled(v101, v102))
        {
          uint64_t v103 = swift_slowAlloc();
          uint64_t v132 = swift_slowAlloc();
          *(_DWORD *)uint64_t v103 = 68159235;
          LODWORD(v130) = 2;
          sub_1005E2960();
          *(_WORD *)(v103 + 8) = 256;
          uint64_t v104 = v100 + *(int *)(v124 + 20);
          LOBYTE(v130) = *(unsigned char *)v104;
          sub_1005E2960();
          *(_WORD *)(v103 + 11) = 2082;
          os_log_t v126 = v30;
          uint64_t v105 = *(void *)(v104 + 8);
          unint64_t v106 = *(void *)(v104 + 16);
          swift_bridgeObjectRetain();
          uint64_t v130 = sub_1000C6914(v105, v106, &v132);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v103 + 21) = 1040;
          LODWORD(v130) = 2;
          sub_1005E2960();
          *(_WORD *)(v103 + 27) = 512;
          LOWORD(v130) = *(_WORD *)(v104 + 24);
          sub_1005E2960();
          *(_WORD *)(v103 + 31) = 2160;
          uint64_t v130 = 0x786F626C69616DLL;
          sub_1005E2960();
          *(_WORD *)(v103 + 41) = 2085;
          int v107 = *(_DWORD *)(v104 + 40);
          uint64_t v130 = *(void *)(v104 + 32);
          int v131 = v107;
          swift_bridgeObjectRetain();
          uint64_t v108 = sub_1005E1CC0();
          uint64_t v130 = sub_1000C6914(v108, v109, &v132);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_100119610(v118, type metadata accessor for MailboxTaskLogger);
          _os_log_impl((void *)&_mh_execute_header, v101, v102, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. No messages.", (uint8_t *)v103, 0x33u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(os_log_t, uint64_t))(v128 + 8))(v126, v127);
          uint64_t v110 = v125;
        }
        else
        {

          sub_100119610(v100, type metadata accessor for MailboxTaskLogger);
          (*(void (**)(NSObject *, uint64_t))(v40 + 8))(v30, v99);
          uint64_t v110 = v39;
        }
      }
      return sub_100119610(v110, type metadata accessor for MessageBatches);
    }
    else
    {
      uint64_t v83 = v127;
      uint64_t v84 = v128;
      (*(void (**)(char *, uint64_t, uint64_t))(v128 + 16))(v26, a1, v127);
      sub_1001196D8(a1, (uint64_t)v15, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v85 = v122;
      sub_1001196D8(v1, v122, type metadata accessor for DetermineMessageBatches);
      uint64_t v86 = sub_1005E0EB0();
      os_log_type_t v87 = sub_1005E25C0();
      int v88 = v87;
      if (os_log_type_enabled(v86, v87))
      {
        uint64_t v89 = swift_slowAlloc();
        LODWORD(v126) = v88;
        uint64_t v90 = v89;
        uint64_t v125 = swift_slowAlloc();
        uint64_t v132 = v125;
        *(_DWORD *)uint64_t v90 = 68159491;
        LODWORD(v130) = 2;
        os_log_t v123 = v86;
        sub_1005E2960();
        *(_WORD *)(v90 + 8) = 256;
        int v91 = &v15[*(int *)(v124 + 20)];
        LOBYTE(v130) = *v91;
        sub_1005E2960();
        *(_WORD *)(v90 + 11) = 2082;
        uint64_t v93 = *((void *)v91 + 1);
        unint64_t v92 = *((void *)v91 + 2);
        swift_bridgeObjectRetain();
        uint64_t v130 = sub_1000C6914(v93, v92, &v132);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v90 + 21) = 1040;
        LODWORD(v130) = 2;
        sub_1005E2960();
        *(_WORD *)(v90 + 27) = 512;
        LOWORD(v130) = *((_WORD *)v91 + 12);
        sub_1005E2960();
        *(_WORD *)(v90 + 31) = 2160;
        uint64_t v130 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v90 + 41) = 2085;
        int v94 = *((_DWORD *)v91 + 10);
        uint64_t v130 = *((void *)v91 + 4);
        int v131 = v94;
        swift_bridgeObjectRetain();
        uint64_t v95 = sub_1005E1CC0();
        uint64_t v130 = sub_1000C6914(v95, v96, &v132);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100119610((uint64_t)v15, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v90 + 51) = 2048;
        uint64_t v97 = *(void *)(v85 + 136);
        sub_100119610(v85, type metadata accessor for DetermineMessageBatches);
        uint64_t v130 = v97;
        sub_1005E2960();
        os_log_t v98 = v123;
        _os_log_impl((void *)&_mh_execute_header, v123, (os_log_type_t)v126, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. Will query server. (batch size: %ld).", (uint8_t *)v90, 0x3Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(char *, uint64_t))(v128 + 8))(v26, v127);
      }
      else
      {
        sub_100119610(v85, type metadata accessor for DetermineMessageBatches);
        sub_100119610((uint64_t)v15, type metadata accessor for MailboxTaskLogger);

        return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v26, v83);
      }
    }
  }
  else
  {
    uint64_t v67 = *v37;
    uint64_t v69 = v127;
    uint64_t v68 = v128;
    (*(void (**)(char *, uint64_t, uint64_t))(v128 + 16))(v23, a1, v127);
    sub_1001196D8(a1, (uint64_t)v12, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_1001196D8(v1, (uint64_t)v126, type metadata accessor for DetermineMessageBatches);
    uint64_t v70 = sub_1005E0EB0();
    os_log_type_t v71 = sub_1005E25C0();
    int v72 = v71;
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v73 = swift_slowAlloc();
      uint64_t v125 = swift_slowAlloc();
      uint64_t v132 = v125;
      *(_DWORD *)uint64_t v73 = 68159747;
      LODWORD(v130) = 2;
      LODWORD(v123) = v72;
      sub_1005E2960();
      *(_WORD *)(v73 + 8) = 256;
      uint64_t v74 = *(int *)(v124 + 20);
      uint64_t v124 = v67;
      uint64_t v75 = &v12[v74];
      LOBYTE(v130) = v12[v74];
      sub_1005E2960();
      *(_WORD *)(v73 + 11) = 2082;
      uint64_t v76 = *((void *)v75 + 1);
      unint64_t v77 = *((void *)v75 + 2);
      swift_bridgeObjectRetain();
      uint64_t v130 = sub_1000C6914(v76, v77, &v132);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 21) = 1040;
      LODWORD(v130) = 2;
      sub_1005E2960();
      *(_WORD *)(v73 + 27) = 512;
      LOWORD(v130) = *((_WORD *)v75 + 12);
      sub_1005E2960();
      *(_WORD *)(v73 + 31) = 2160;
      uint64_t v130 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v73 + 41) = 2085;
      int v78 = *((_DWORD *)v75 + 10);
      uint64_t v130 = *((void *)v75 + 4);
      int v131 = v78;
      swift_bridgeObjectRetain();
      uint64_t v79 = sub_1005E1CC0();
      uint64_t v130 = sub_1000C6914(v79, v80, &v132);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100119610((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v73 + 51) = 2048;
      uint64_t v130 = v124;
      sub_1005E2960();
      *(_WORD *)(v73 + 61) = 2048;
      Class v81 = v126[17].isa;
      sub_100119610((uint64_t)v126, type metadata accessor for DetermineMessageBatches);
      uint64_t v130 = (uint64_t)v81;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v70, (os_log_type_t)v123, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. Will query local persistence (message count: %ld, batch size: %ld).", (uint8_t *)v73, 0x47u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v128 + 8))(v23, v127);
    }
    else
    {
      sub_100119610((uint64_t)v126, type metadata accessor for DetermineMessageBatches);
      sub_100119610((uint64_t)v12, type metadata accessor for MailboxTaskLogger);

      return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v23, v69);
    }
  }
}

uint64_t sub_1001177E8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, Swift::Int *a3@<X4>, unsigned char *a4@<X8>)
{
  uint64_t v55 = a3;
  uint64_t v8 = sub_10000566C(&qword_10070D0E8);
  __chkstk_darwin(v8 - 8);
  uint64_t v56 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000566C(&qword_10070AB48);
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v58 = v10;
  __chkstk_darwin(v10);
  uint64_t v54 = (uint64_t)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v47 - v17;
  uint64_t v19 = type metadata accessor for DetermineMessageBatches.TaskState(0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(int *)(type metadata accessor for DetermineMessageBatches(0) + 52);
  uint64_t v59 = v4;
  sub_1001196D8(v4 + v22, (uint64_t)v21, type metadata accessor for DetermineMessageBatches.TaskState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_100119610((uint64_t)v21, type metadata accessor for DetermineMessageBatches.TaskState);
  if (EnumCaseMultiPayload != 2) {
    goto LABEL_15;
  }
  uint64_t v24 = sub_100165058(a2);
  uint64_t v25 = v24[2];
  if (v25)
  {
    uint64_t v26 = 0;
    uint64_t v51 = v24 + 4;
    uint64_t v52 = a1;
    uint64_t v27 = *(void *)(a1 + 16);
    os_log_t v53 = a4;
    uint64_t v49 = v25;
    uint64_t v50 = v13;
    int v47 = v24;
    uint64_t v48 = v27;
    do
    {
      if (v27)
      {
        int v28 = *((_DWORD *)v51 + v26);
        uint64_t v29 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
        swift_bridgeObjectRetain();
        uint64_t v30 = *(void *)(v13 + 72);
        uint64_t v31 = v27;
        while (1)
        {
          sub_1001196D8(v29, (uint64_t)v18, type metadata accessor for TaskHistory.Previous);
          sub_1001196D8((uint64_t)v18, (uint64_t)v16, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_100119610((uint64_t)v16, type metadata accessor for TaskHistory.Previous);
          }
          else
          {
            int v32 = *(_DWORD *)&v16[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
            sub_100119610((uint64_t)v16, type metadata accessor for ClientCommand);
            if (v32 == v28)
            {
              sub_100119610((uint64_t)v18, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a4 = v53;
              goto LABEL_15;
            }
          }
          sub_100119610((uint64_t)v18, type metadata accessor for TaskHistory.Previous);
          v29 += v30;
          if (!--v31)
          {
            a1 = v52;
            swift_bridgeObjectRelease();
            a4 = v53;
            uint64_t v25 = v49;
            uint64_t v13 = v50;
            uint64_t v27 = v48;
            break;
          }
        }
      }
      ++v26;
    }
    while (v26 != v25);
  }
  swift_bridgeObjectRelease();
  uint64_t v33 = v56;
  uint64_t v34 = v59;
  sub_1000677E8(*v55, 0, *(void *)(v59 + 136), v56);
  uint64_t v36 = v57;
  uint64_t v35 = v58;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v33, 1, v58) == 1)
  {
    sub_100007A48(v33, &qword_10070D0E8);
LABEL_15:
    uint64_t v37 = sub_10000566C(&qword_10070D0F0);
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(a4, 1, 1, v37);
  }
  uint64_t v39 = v54;
  sub_10001FDF0(v33, v54, &qword_10070AB48);
  sub_10000566C(&qword_10070D0F8);
  uint64_t v40 = swift_allocBox();
  uint64_t v42 = v41;
  sub_1000079E4(v39, v41, &qword_10070AB48);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v42, 0, 1, v35);
  unint64_t v43 = v40 | 0xB000000000000004;
  uint64_t v44 = sub_10000566C(&qword_10070D0F0);
  os_log_t v45 = (unint64_t *)&a4[*(int *)(v44 + 48)];
  int v60 = 1;
  sub_10000566C(&qword_10070AB30);
  *a4 = MessageIdentifierSet.contains(_:)() & 1;
  if (*(unsigned char *)(v34 + 130) == 1)
  {
    *os_log_t v45 = v43;
  }
  else
  {
    sub_10000566C(&qword_10070CA10);
    type metadata accessor for SearchReturnOption();
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_1005F6670;
    swift_storeEnumTagMultiPayload();
    *os_log_t v45 = v43;
    v45[1] = v46;
  }
  type metadata accessor for ClientCommand(0);
  swift_storeEnumTagMultiPayload();
  sub_100007A48(v54, &qword_10070AB48);
  return (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(a4, 0, 1, v44);
}

unint64_t sub_100117E3C(char a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int v46 = a5;
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  unint64_t v43 = a2;
  uint64_t v10 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005E0ED0();
  uint64_t v41 = *(void *)(v13 - 8);
  uint64_t v42 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000566C(&qword_10070D0D8);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v7 + *(int *)(type metadata accessor for DetermineMessageBatches(0) + 52);
  uint64_t v21 = (uint64_t)&v19[*(int *)(v17 + 56)];
  *uint64_t v19 = a1;
  uint64_t v22 = a7;
  sub_1001196D8(v20, v21, type metadata accessor for DetermineMessageBatches.TaskState);
  type metadata accessor for DetermineMessageBatches.TaskState(0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v15, a7, v42);
    sub_1001196D8(a7, (uint64_t)v12, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v23 = sub_1005E0EB0();
    os_log_type_t v24 = sub_1005E25A0();
    int v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = swift_slowAlloc();
      int v39 = v25;
      uint64_t v27 = v26;
      uint64_t v38 = swift_slowAlloc();
      uint64_t v49 = v38;
      *(_DWORD *)uint64_t v27 = 68159235;
      LODWORD(v47) = 2;
      os_log_t v37 = v23;
      sub_1005E2960();
      *(_WORD *)(v27 + 8) = 256;
      int v28 = &v12[*(int *)(v10 + 20)];
      LOBYTE(v47) = *v28;
      sub_1005E2960();
      *(_WORD *)(v27 + 11) = 2082;
      uint64_t v40 = v22;
      uint64_t v29 = *((void *)v28 + 1);
      unint64_t v30 = *((void *)v28 + 2);
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1000C6914(v29, v30, &v49);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 21) = 1040;
      LODWORD(v47) = 2;
      sub_1005E2960();
      *(_WORD *)(v27 + 27) = 512;
      LOWORD(v47) = *((_WORD *)v28 + 12);
      sub_1005E2960();
      *(_WORD *)(v27 + 31) = 2160;
      uint64_t v47 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v27 + 41) = 2085;
      int v31 = *((_DWORD *)v28 + 10);
      uint64_t v47 = *((void *)v28 + 4);
      int v48 = v31;
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_1005E1CC0();
      uint64_t v47 = sub_1000C6914(v32, v33, &v49);
      sub_1005E2960();
      uint64_t v22 = v40;
      swift_bridgeObjectRelease();
      sub_100119610((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
      os_log_t v34 = v37;
      _os_log_impl((void *)&_mh_execute_header, v37, (os_log_type_t)v39, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Completed command for boundary IDs, but didn’t get any result from the server.", (uint8_t *)v27, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100119610((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
    }
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v42);
  }
  sub_100119610(v21, type metadata accessor for DetermineMessageBatches.TaskState);
  return sub_1001DBDBC(v22, v43, v44, v45, v46);
}

uint64_t sub_100118324(uint64_t a1, uint64_t a2)
{
  uint64_t v86 = a1;
  uint64_t v84 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v4 = __chkstk_darwin(v84);
  uint64_t v83 = (uint64_t)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v85 = (uint64_t)&v77 - v6;
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v77 - v12;
  uint64_t v14 = type metadata accessor for DetermineMessageBatches.TaskState(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for MessageBatches(0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  os_log_type_t v87 = (char *)&v77 - v22;
  __chkstk_darwin(v21);
  os_log_type_t v24 = (char *)&v77 - v23;
  uint64_t v25 = type metadata accessor for DetermineMessageBatches(0);
  sub_1001196D8(v2 + *(int *)(v25 + 52), (uint64_t)v16, type metadata accessor for DetermineMessageBatches.TaskState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v88 = v8;
  uint64_t v27 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v83 = v2;
    sub_100119670((uint64_t)v16, (uint64_t)v24, type metadata accessor for MessageBatches);
    (*v27)(v13, a2, v7);
    uint64_t v28 = v85;
    sub_1001196D8(a2, v85, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_1001196D8((uint64_t)v24, (uint64_t)v87, type metadata accessor for MessageBatches);
    sub_1001196D8((uint64_t)v24, (uint64_t)v20, type metadata accessor for MessageBatches);
    uint64_t v29 = sub_1005E0EB0();
    int v30 = sub_1005E25C0();
    int v31 = v20;
    if (os_log_type_enabled(v29, (os_log_type_t)v30))
    {
      int v79 = v30;
      os_log_t v80 = v29;
      Class v81 = v13;
      uint64_t v82 = v7;
      uint64_t v32 = swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      uint64_t v92 = v78;
      *(_DWORD *)uint64_t v32 = 68159747;
      LODWORD(v90) = 2;
      sub_1005E2960();
      *(_WORD *)(v32 + 8) = 256;
      uint64_t v33 = v28 + *(int *)(v84 + 20);
      LOBYTE(v90) = *(unsigned char *)v33;
      sub_1005E2960();
      *(_WORD *)(v32 + 11) = 2082;
      uint64_t v84 = (uint64_t)v31;
      uint64_t v34 = *(void *)(v33 + 8);
      unint64_t v35 = *(void *)(v33 + 16);
      swift_bridgeObjectRetain();
      uint64_t v90 = sub_1000C6914(v34, v35, &v92);
      sub_1005E2960();
      uint64_t v36 = v84;
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 21) = 1040;
      LODWORD(v90) = 2;
      sub_1005E2960();
      *(_WORD *)(v32 + 27) = 512;
      LOWORD(v90) = *(_WORD *)(v33 + 24);
      sub_1005E2960();
      *(_WORD *)(v32 + 31) = 2160;
      uint64_t v90 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v32 + 41) = 2085;
      int v37 = *(_DWORD *)(v33 + 40);
      uint64_t v90 = *(void *)(v33 + 32);
      int v91 = v37;
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_1005E1CC0();
      uint64_t v90 = sub_1000C6914(v38, v39, &v92);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100119610(v28, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v32 + 51) = 2048;
      uint64_t v40 = *(void *)(*((void *)v87 + 1) + 16);
      sub_100119610((uint64_t)v87, type metadata accessor for MessageBatches);
      uint64_t v90 = v40;
      sub_1005E2960();
      *(_WORD *)(v32 + 61) = 2082;
      uint64_t v41 = *(void *)(v36 + 8);
      int64_t v42 = *(void *)(v41 + 16);
      unint64_t v43 = _swiftEmptyArrayStorage;
      if (v42)
      {
        uint64_t v85 = v32;
        os_log_type_t v87 = v24;
        uint64_t v90 = (uint64_t)_swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_1001191F8(0, v42, 0);
        uint64_t v44 = 0;
        unint64_t v43 = (void *)v90;
        do
        {
          uint64_t v89 = *(void *)(v41 + 8 * v44 + 32);
          sub_10000566C(&qword_10070A9B8);
          uint64_t v45 = sub_1005E1CA0();
          uint64_t v47 = v46;
          uint64_t v90 = (uint64_t)v43;
          unint64_t v49 = v43[2];
          unint64_t v48 = v43[3];
          if (v49 >= v48 >> 1)
          {
            sub_1001191F8((char *)(v48 > 1), v49 + 1, 1);
            unint64_t v43 = (void *)v90;
          }
          ++v44;
          v43[2] = v49 + 1;
          uint64_t v50 = &v43[2 * v49];
          v50[4] = v45;
          v50[5] = v47;
        }
        while (v42 != v44);
        swift_bridgeObjectRelease();
        os_log_type_t v24 = v87;
        uint64_t v36 = v84;
        uint64_t v32 = v85;
      }
      uint64_t v90 = (uint64_t)v43;
      sub_10000566C(&qword_100709F58);
      sub_10001C548();
      uint64_t v66 = sub_1005E1A80();
      unint64_t v68 = v67;
      swift_bridgeObjectRelease();
      uint64_t v90 = sub_1000C6914(v66, v68, &v92);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100119610(v36, type metadata accessor for MessageBatches);
      os_log_t v69 = v80;
      _os_log_impl((void *)&_mh_execute_header, v80, (os_log_type_t)v79, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created %ld message batches: %{public}s", (uint8_t *)v32, 0x47u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v65 = (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v81, v82);
    }
    else
    {
      sub_100119610((uint64_t)v87, type metadata accessor for MessageBatches);
      sub_100119610(v28, type metadata accessor for MailboxTaskLogger);
      sub_100119610((uint64_t)v20, type metadata accessor for MessageBatches);

      uint64_t v65 = (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v13, v7);
    }
    uint64_t v70 = v86;
    os_log_type_t v71 = *(void **)(v83 + 112);
    unsigned int v72 = *(_DWORD *)(v83 + 120);
    __chkstk_darwin(v65);
    *(&v77 - 2) = (uint64_t)v24;
    if (*(unsigned char *)(v70 + 184) == 1)
    {
      uint64_t v74 = *(void *)(v70 + 168);
      uint64_t v73 = *(void *)(v70 + 176);
      uint64_t v90 = *(void *)(v70 + 160);
      uint64_t v75 = v90;
      swift_bridgeObjectRetain();
      sub_10004A48C((uint64_t)&v90, v71, v72, 0, (void (*)(char *))sub_100119740, &v77 - 4);
      sub_10000F0D4(v75, v74, v73, 1);
      uint64_t v76 = v90;
      *(void *)(v70 + 168) = 0;
      *(void *)(v70 + 176) = 0;
      *(void *)(v70 + 160) = v76;
      *(unsigned char *)(v70 + 184) = 1;
    }
    return sub_100119610((uint64_t)v24, type metadata accessor for MessageBatches);
  }
  else
  {
    sub_100119610((uint64_t)v16, type metadata accessor for DetermineMessageBatches.TaskState);
    uint64_t v51 = v11;
    (*v27)(v11, a2, v7);
    uint64_t v52 = v83;
    sub_1001196D8(a2, v83, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    os_log_t v53 = sub_1005E0EB0();
    os_log_type_t v54 = sub_1005E25A0();
    int v55 = v54;
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v56 = swift_slowAlloc();
      LODWORD(v87) = v55;
      uint64_t v57 = v56;
      uint64_t v86 = swift_slowAlloc();
      uint64_t v92 = v86;
      *(_DWORD *)uint64_t v57 = 68159235;
      LODWORD(v90) = 2;
      sub_1005E2960();
      *(_WORD *)(v57 + 8) = 256;
      uint64_t v58 = v52 + *(int *)(v84 + 20);
      LOBYTE(v90) = *(unsigned char *)v58;
      sub_1005E2960();
      *(_WORD *)(v57 + 11) = 2082;
      uint64_t v82 = v7;
      uint64_t v59 = *(void *)(v58 + 8);
      unint64_t v60 = *(void *)(v58 + 16);
      swift_bridgeObjectRetain();
      uint64_t v90 = sub_1000C6914(v59, v60, &v92);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v57 + 21) = 1040;
      LODWORD(v90) = 2;
      sub_1005E2960();
      *(_WORD *)(v57 + 27) = 512;
      LOWORD(v90) = *(_WORD *)(v58 + 24);
      sub_1005E2960();
      *(_WORD *)(v57 + 31) = 2160;
      uint64_t v90 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v57 + 41) = 2085;
      int v61 = *(_DWORD *)(v58 + 40);
      uint64_t v90 = *(void *)(v58 + 32);
      int v91 = v61;
      swift_bridgeObjectRetain();
      uint64_t v62 = sub_1005E1CC0();
      uint64_t v90 = sub_1000C6914(v62, v63, &v92);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100119610(v52, type metadata accessor for MailboxTaskLogger);
      _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v87, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Failed to determine message batches", (uint8_t *)v57, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v51, v82);
    }
    else
    {
      sub_100119610(v52, type metadata accessor for MailboxTaskLogger);

      return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v51, v7);
    }
  }
}

uint64_t sub_100118ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for MailboxSyncState() + 60);
  sub_100007A48(v3, &qword_10070A338);
  sub_1001196D8(a2, v3, type metadata accessor for MessageBatches);
  uint64_t v4 = type metadata accessor for MessageBatches(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(v3, 0, 1, v4);
}

uint64_t sub_100118F7C@<X0>(uint64_t a1@<X8>)
{
  return sub_10003C94C(v1 + 16, a1);
}

uint64_t sub_100118F88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 96);
  __int16 v3 = *(_WORD *)(v1 + 104);
  uint64_t v4 = *(void *)(v1 + 112);
  int v5 = *(_DWORD *)(v1 + 120);
  *(void *)a1 = *(void *)(v1 + 88);
  *(void *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_100118FDC()
{
  if (qword_100709D70 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_100119040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t result = sub_100119748(a1, a2, a3, a4, a5);
  *a6 = result;
  a6[1] = v8;
  return result;
}

uint64_t sub_100119074(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10011B030(a1, a2, a3, a4, a6, a7);
}

void sub_100119080(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

unint64_t sub_10011908C(char *a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  return sub_100117E3C(*a1, a2, a3, a4, a5, a6, a7);
}

unint64_t sub_1001190AC()
{
  return 0xD000000000000017;
}

unint64_t sub_1001190CC()
{
  unint64_t result = qword_10070D008;
  if (!qword_10070D008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070D008);
  }
  return result;
}

unint64_t sub_100119124()
{
  unint64_t result = qword_10070D010;
  if (!qword_10070D010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070D010);
  }
  return result;
}

unint64_t sub_100119178(uint64_t a1)
{
  unint64_t result = sub_1001191A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001191A0()
{
  unint64_t result = qword_10070D0C8;
  if (!qword_10070D0C8)
  {
    type metadata accessor for DetermineMessageBatches(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070D0C8);
  }
  return result;
}

char *sub_1001191F8(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_100119218(a1, a2, a3, *v3);
  *__int16 v3 = result;
  return result;
}

char *sub_100119218(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_10070A088);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

BOOL sub_10011931C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageBatches(0);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DetermineMessageBatches.TaskState(0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (uint64_t *)((char *)&v21 - v11);
  uint64_t v13 = sub_10000566C(&qword_10070D0D0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = &v16[*(int *)(v14 + 56)];
  sub_1001196D8(a1, (uint64_t)v16, type metadata accessor for DetermineMessageBatches.TaskState);
  sub_1001196D8(a2, (uint64_t)v17, type metadata accessor for DetermineMessageBatches.TaskState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1001196D8((uint64_t)v16, (uint64_t)v12, type metadata accessor for DetermineMessageBatches.TaskState);
    if (!swift_getEnumCaseMultiPayload())
    {
      BOOL v19 = *v12 == *(void *)v17;
      goto LABEL_7;
    }
LABEL_11:
    sub_100007A48((uint64_t)v16, &qword_10070D0D0);
    return 0;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_100119610((uint64_t)v16, type metadata accessor for DetermineMessageBatches.TaskState);
      return 1;
    }
    goto LABEL_11;
  }
  sub_1001196D8((uint64_t)v16, (uint64_t)v10, type metadata accessor for DetermineMessageBatches.TaskState);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_100119610((uint64_t)v10, type metadata accessor for MessageBatches);
    goto LABEL_11;
  }
  sub_100119670((uint64_t)v17, (uint64_t)v6, type metadata accessor for MessageBatches);
  BOOL v19 = sub_100068CEC((uint64_t)v10, (uint64_t)v6);
  sub_100119610((uint64_t)v6, type metadata accessor for MessageBatches);
  sub_100119610((uint64_t)v10, type metadata accessor for MessageBatches);
LABEL_7:
  sub_100119610((uint64_t)v16, type metadata accessor for DetermineMessageBatches.TaskState);
  return v19;
}

uint64_t sub_100119610(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100119670(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001196D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100119740(uint64_t a1)
{
  return sub_100118ECC(a1, *(void *)(v1 + 16));
}

uint64_t sub_100119748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v206 = a5;
  uint64_t v218 = a3;
  uint64_t v201 = a1;
  uint64_t v8 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v8 - 8);
  unint64_t v197 = (char *)&v194 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v198 = *(void *)(v214 - 8);
  uint64_t v10 = __chkstk_darwin(v214);
  uint64_t v213 = (uint64_t)&v194 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v215 = (uint64_t)&v194 - v12;
  uint64_t v13 = type metadata accessor for DetermineMessageBatches.TaskState(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v194 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v16 = __chkstk_darwin(v202);
  uint64_t v208 = (uint64_t)&v194 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v207 = (uint64_t)&v194 - v18;
  uint64_t v19 = sub_1005E0ED0();
  uint64_t v211 = *(void *)(v19 - 8);
  unsigned int v212 = (void *)v19;
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v209 = (char *)&v194 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v210 = (char *)&v194 - v22;
  uint64_t v226 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v220 = *(void *)(v226 - 8);
  uint64_t v23 = __chkstk_darwin(v226);
  unint64_t v219 = (unint64_t)&v194 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v221 = (uint64_t *)((char *)&v194 - v26);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v194 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v32 = (char *)&v194 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v224 = (uint64_t)&v194 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  v225 = (uint64_t *)((char *)&v194 - v36);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v200 = (char *)&v194 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v199 = (char *)&v194 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v222 = (uint64_t *)((char *)&v194 - v42);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v223 = (uint64_t *)((char *)&v194 - v44);
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v47 = (char *)&v194 - v46;
  __chkstk_darwin(v45);
  unint64_t v49 = (char *)&v194 - v48;
  int v50 = *(unsigned __int8 *)(v6 + 72);
  uint64_t v217 = v6;
  if (v50 == 1)
  {
    uint64_t v51 = sub_100105688(1, v218);
    uint64_t v52 = v51[2];
    if (v52)
    {
      uint64_t v53 = 0;
      uint64_t v203 = v51 + 4;
      uint64_t v54 = *(void *)(a2 + 16);
      uint64_t v216 = a2;
      unint64_t v205 = v15;
      uint64_t v194 = v13;
      uint64_t v204 = v51;
      uint64_t v196 = v52;
      uint64_t v195 = v54;
      do
      {
        if (v54)
        {
          int v55 = *((_DWORD *)v203 + v53);
          uint64_t v56 = v220;
          uint64_t v57 = a2 + ((*(unsigned __int8 *)(v220 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v220 + 80));
          swift_bridgeObjectRetain_n();
          uint64_t v58 = *(void *)(v56 + 72);
          uint64_t v59 = v54;
          do
          {
            sub_1001196D8(v57, (uint64_t)v49, type metadata accessor for TaskHistory.Previous);
            sub_1001196D8((uint64_t)v49, (uint64_t)v47, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              int v60 = *((_DWORD *)v47 + 2);
              sub_10007C4A4(*(void *)v47);
              if (v60 == v55)
              {
                sub_100119610((uint64_t)v49, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                a2 = v216;
                swift_bridgeObjectRelease_n();
                uint64_t v6 = v217;
                uint64_t v15 = v205;
                goto LABEL_13;
              }
            }
            else
            {
              sub_100119610((uint64_t)v47, type metadata accessor for TaskHistory.Previous);
            }
            sub_100119610((uint64_t)v49, type metadata accessor for TaskHistory.Previous);
            v57 += v58;
            --v59;
          }
          while (v59);
          a2 = v216;
          swift_bridgeObjectRelease_n();
          uint64_t v52 = v196;
          uint64_t v54 = v195;
        }
        ++v53;
      }
      while (v53 != v52);
      swift_bridgeObjectRelease();
      uint64_t v6 = v217;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v86 = v211;
    uint64_t v85 = v212;
    os_log_type_t v87 = v210;
    uint64_t v88 = v209;
    uint64_t v89 = v208;
    uint64_t v90 = v207;
    if (*(unsigned char *)(v6 + 84))
    {
      uint64_t v91 = v206;
      (*(void (**)(char *, uint64_t, void *))(v211 + 16))(v209, v206, v212);
      sub_1001196D8(v91, v89, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v92 = sub_1005E0EB0();
      os_log_type_t v93 = sub_1005E25C0();
      if (os_log_type_enabled(v92, v93))
      {
        uint64_t v94 = swift_slowAlloc();
        uint64_t v226 = swift_slowAlloc();
        uint64_t v229 = v226;
        *(_DWORD *)uint64_t v94 = 68159235;
        LODWORD(v227) = 2;
        sub_1005E2960();
        *(_WORD *)(v94 + 8) = 256;
        uint64_t v95 = v89 + *(int *)(v202 + 20);
        LOBYTE(v227) = *(unsigned char *)v95;
        sub_1005E2960();
        *(_WORD *)(v94 + 11) = 2082;
        uint64_t v96 = *(void *)(v95 + 8);
        unint64_t v97 = *(void *)(v95 + 16);
        swift_bridgeObjectRetain();
        uint64_t v227 = sub_1000C6914(v96, v97, &v229);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v94 + 21) = 1040;
        LODWORD(v227) = 2;
        sub_1005E2960();
        *(_WORD *)(v94 + 27) = 512;
        LOWORD(v227) = *(_WORD *)(v95 + 24);
        uint64_t v6 = v217;
        sub_1005E2960();
        *(_WORD *)(v94 + 31) = 2160;
        uint64_t v227 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v94 + 41) = 2085;
        int v98 = *(_DWORD *)(v95 + 40);
        uint64_t v227 = *(void *)(v95 + 32);
        int v228 = v98;
        swift_bridgeObjectRetain();
        uint64_t v99 = sub_1005E1CC0();
        uint64_t v227 = sub_1000C6914(v99, v100, &v229);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100119610(v208, type metadata accessor for MailboxTaskLogger);
        _os_log_impl((void *)&_mh_execute_header, v92, v93, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Clearing window of interest", (uint8_t *)v94, 0x33u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, void *))(v86 + 8))(v209, v212);
      }
      else
      {
        sub_100119610(v89, type metadata accessor for MailboxTaskLogger);

        (*(void (**)(char *, void *))(v86 + 8))(v88, v85);
      }
    }
    else
    {
      uint64_t v118 = *(void *)(v6 + 76);
      uint64_t v119 = v206;
      (*(void (**)(char *, uint64_t, void *))(v211 + 16))(v210, v206, v212);
      sub_1001196D8(v119, v90, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v120 = sub_1005E0EB0();
      os_log_type_t v121 = sub_1005E25C0();
      if (os_log_type_enabled(v120, v121))
      {
        uint64_t v122 = swift_slowAlloc();
        v225 = (void *)v118;
        uint64_t v123 = v122;
        uint64_t v226 = swift_slowAlloc();
        uint64_t v229 = v226;
        *(_DWORD *)uint64_t v123 = 68159491;
        LODWORD(v227) = 2;
        sub_1005E2960();
        *(_WORD *)(v123 + 8) = 256;
        uint64_t v124 = v90 + *(int *)(v202 + 20);
        LOBYTE(v227) = *(unsigned char *)v124;
        sub_1005E2960();
        *(_WORD *)(v123 + 11) = 2082;
        uint64_t v125 = *(void *)(v124 + 8);
        unint64_t v126 = *(void *)(v124 + 16);
        swift_bridgeObjectRetain();
        uint64_t v227 = sub_1000C6914(v125, v126, &v229);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v123 + 21) = 1040;
        LODWORD(v227) = 2;
        sub_1005E2960();
        *(_WORD *)(v123 + 27) = 512;
        LOWORD(v227) = *(_WORD *)(v124 + 24);
        sub_1005E2960();
        *(_WORD *)(v123 + 31) = 2160;
        uint64_t v227 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v123 + 41) = 2085;
        uint64_t v127 = *(void *)(v124 + 32);
        int v128 = *(_DWORD *)(v124 + 40);
        uint64_t v6 = v217;
        uint64_t v227 = v127;
        int v228 = v128;
        swift_bridgeObjectRetain();
        uint64_t v129 = sub_1005E1CC0();
        uint64_t v227 = sub_1000C6914(v129, v130, &v229);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100119610(v207, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v123 + 51) = 2082;
        uint64_t v227 = (uint64_t)v225;
        uint64_t v131 = sub_10000566C(&qword_10070A9B8);
        uint64_t v132 = MessageIdentifierRange.debugDescription.getter(v131);
        uint64_t v227 = sub_1000C6914(v132, v133, &v229);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v120, v121, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Setting window of interest: %{public}s", (uint8_t *)v123, 0x3Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, void *))(v211 + 8))(v210, v212);
      }
      else
      {
        sub_100119610(v90, type metadata accessor for MailboxTaskLogger);

        (*(void (**)(char *, void *))(v86 + 8))(v87, v85);
      }
    }
    uint64_t v146 = swift_allocObject();
    uint64_t v147 = *(void *)(v6 + 96);
    *(void *)(v146 + 16) = *(void *)(v6 + 88);
    *(void *)(v146 + 24) = v147;
    char v148 = *(unsigned char *)(v6 + 84);
    *(void *)(v146 + 32) = *(void *)(v6 + 76);
    *(unsigned char *)(v146 + 40) = v148;
    swift_bridgeObjectRetain();
    return 1;
  }
LABEL_13:
  uint64_t v61 = type metadata accessor for DetermineMessageBatches(0);
  sub_1001196D8(v6 + *(int *)(v61 + 52), (uint64_t)v15, type metadata accessor for DetermineMessageBatches.TaskState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1) {
      return 4;
    }
    unint64_t v63 = sub_100105688(1, v218);
    uint64_t v64 = v63[2];
    if (v64)
    {
      uint64_t v65 = 0;
      uint64_t v223 = v63;
      v225 = v63 + 4;
      uint64_t v66 = *(void *)(a2 + 16);
      uint64_t v216 = a2;
      unint64_t v205 = v15;
      uint64_t v224 = v66;
      do
      {
        if (v66)
        {
          int v67 = *((_DWORD *)v225 + v65);
          uint64_t v68 = v220;
          uint64_t v69 = a2;
          unint64_t v70 = (*(unsigned __int8 *)(v220 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v220 + 80);
          uint64_t v71 = v69 + v70;
          swift_bridgeObjectRetain_n();
          uint64_t v72 = *(void *)(v68 + 72);
          uint64_t v73 = v66;
          while (1)
          {
            sub_1001196D8(v71, (uint64_t)v32, type metadata accessor for TaskHistory.Previous);
            sub_1001196D8((uint64_t)v32, (uint64_t)v29, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              int v74 = *((_DWORD *)v29 + 2);
              sub_10007C4A4(*(void *)v29);
              if (v74 == v67)
              {
                sub_100119610((uint64_t)v32, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                uint64_t v75 = v217;
                if ((*(unsigned char *)(v217 + 84) & 1) == 0)
                {
                  uint64_t v76 = *(void *)(v217 + 76);
                  if ((v76 & 0xFFFFFFFE) != 0)
                  {
                    uint64_t v77 = sub_100105688(3, v218);
                    v225 = (void *)v77[2];
                    if (v225)
                    {
                      uint64_t v223 = (void *)v76;
                      uint64_t v78 = 0;
                      int v79 = v77 + 4;
                      uint64_t v80 = v216 + v70;
                      while (2)
                      {
                        uint64_t v150 = v79;
                        int v151 = *((_DWORD *)v79 + (void)v78);
                        uint64_t v78 = (void *)((char *)v78 + 1);
                        swift_bridgeObjectRetain_n();
                        uint64_t v152 = v80;
                        uint64_t v153 = v80;
                        uint64_t v154 = v224;
                        uint64_t v155 = (uint64_t)v221;
                        do
                        {
                          sub_1001196D8(v153, v155, type metadata accessor for TaskHistory.Previous);
                          uint64_t v156 = v219;
                          sub_1001196D8(v155, v219, type metadata accessor for TaskHistory.Previous);
                          if (swift_getEnumCaseMultiPayload() == 1)
                          {
                            unint64_t v157 = *(void *)v156;
                            int v158 = *(_DWORD *)(v156 + 8);
                            sub_10007C4A4(v157);
                            if (v158 == v151)
                            {
                              sub_100119610((uint64_t)v221, type metadata accessor for TaskHistory.Previous);
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease_n();
                              goto LABEL_74;
                            }
                          }
                          else
                          {
                            sub_100119610(v156, type metadata accessor for TaskHistory.Previous);
                          }
                          uint64_t v155 = (uint64_t)v221;
                          sub_100119610((uint64_t)v221, type metadata accessor for TaskHistory.Previous);
                          v153 += v72;
                          --v154;
                        }
                        while (v154);
                        swift_bridgeObjectRelease_n();
                        int v79 = v150;
                        uint64_t v80 = v152;
                        if (v78 != v225) {
                          continue;
                        }
                        break;
                      }
                      swift_bridgeObjectRelease();
                      uint64_t v75 = v217;
                      LODWORD(v76) = v223;
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                    }
                    LODWORD(v229) = 1;
                    int v230 = v76 - 1;
                    sub_100063E18();
                    static MessageIdentifier.... infix(_:_:)();
                    uint64_t v229 = v227;
                    Range<>.init<A>(_:)((uint64_t)&v229, (uint64_t)&type metadata for UID);
                    uint64_t v229 = v179;
                    sub_10001FC6C();
                    uint64_t v180 = (uint64_t)v197;
                    sub_1005E36A0();
                    uint64_t v181 = sub_10000566C(&qword_10070CC50);
                    swift_allocBox();
                    uint64_t v183 = (uint64_t)v182 + *(int *)(v181 + 48);
                    uint64_t v184 = *(void *)(v75 + 96);
                    *uint64_t v182 = *(void *)(v75 + 88);
                    v182[1] = v184;
                    sub_10001FDF0(v180, v183, &qword_100709E30);
                    swift_bridgeObjectRetain();
                    sub_100119610((uint64_t)v205, type metadata accessor for DetermineMessageBatches.TaskState);
                    return 3;
                  }
                }
LABEL_74:
                sub_100119610((uint64_t)v205, type metadata accessor for DetermineMessageBatches.TaskState);
                return 4;
              }
            }
            else
            {
              sub_100119610((uint64_t)v29, type metadata accessor for TaskHistory.Previous);
            }
            sub_100119610((uint64_t)v32, type metadata accessor for TaskHistory.Previous);
            v71 += v72;
            if (!--v73)
            {
              a2 = v216;
              swift_bridgeObjectRelease_n();
              uint64_t v15 = v205;
              uint64_t v66 = v224;
              break;
            }
          }
        }
        ++v65;
      }
      while (v65 != v64);
    }
    swift_bridgeObjectRelease();
    uint64_t v175 = swift_allocObject();
    uint64_t v176 = v217;
    uint64_t v177 = *(void *)(v217 + 96);
    *(void *)(v175 + 16) = *(void *)(v217 + 88);
    *(void *)(v175 + 24) = v177;
    uint64_t v178 = *(void *)(v176 + 76);
    LOBYTE(v176) = *(unsigned char *)(v176 + 84);
    *(void *)(v175 + 32) = v178;
    *(unsigned char *)(v175 + 40) = v176;
    swift_bridgeObjectRetain();
    sub_100119610((uint64_t)v15, type metadata accessor for DetermineMessageBatches.TaskState);
    return 1;
  }
  if (*(unsigned char *)(v6 + 72)) {
    goto LABEL_80;
  }
  Class v81 = sub_100105688(0, v218);
  uint64_t v82 = v81[2];
  if (!v82)
  {
    swift_bridgeObjectRelease();
LABEL_76:
    uint64_t v159 = swift_allocObject();
    uint64_t v160 = *(void *)(v6 + 96);
    *(void *)(v159 + 16) = *(void *)(v6 + 88);
    *(void *)(v159 + 24) = v160;
    swift_bridgeObjectRetain();
    return 0;
  }
  uint64_t v83 = 0;
  unsigned int v212 = v81;
  uint64_t v221 = v81 + 4;
  uint64_t v84 = *(void *)(a2 + 16);
  while (!v84)
  {
LABEL_37:
    if (++v83 == v82)
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = v217;
      goto LABEL_76;
    }
  }
  uint64_t v101 = v220;
  int v102 = *((_DWORD *)v221 + v83);
  unint64_t v219 = (*(unsigned __int8 *)(v220 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v220 + 80);
  uint64_t v103 = a2 + v219;
  swift_bridgeObjectRetain_n();
  uint64_t v104 = *(void *)(v101 + 72);
  uint64_t v105 = v84;
  uint64_t v106 = (uint64_t)v223;
  while (1)
  {
    sub_1001196D8(v103, v106, type metadata accessor for TaskHistory.Previous);
    uint64_t v107 = (uint64_t)v222;
    sub_1001196D8(v106, (uint64_t)v222, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_100119610(v107, type metadata accessor for TaskHistory.Previous);
LABEL_41:
    uint64_t v106 = (uint64_t)v223;
    sub_100119610((uint64_t)v223, type metadata accessor for TaskHistory.Previous);
    v103 += v104;
    if (!--v105)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_37;
    }
  }
  unint64_t v108 = *(void *)v107;
  int v109 = *(_DWORD *)(v107 + 8);
  sub_10007C4A4(v108);
  if (v109 != v102) {
    goto LABEL_41;
  }
  sub_100119610((uint64_t)v223, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v6 = v217;
  if (*(unsigned char *)(v217 + 72)) {
    goto LABEL_80;
  }
  uint64_t v110 = sub_100105688(0, v218);
  uint64_t v111 = v110[2];
  if (!v111) {
    goto LABEL_95;
  }
  uint64_t v112 = 0;
  unsigned int v212 = v110;
  uint64_t v113 = a2;
  uint64_t v114 = *(void *)(a2 + 16);
  uint64_t v115 = v113;
  uint64_t v222 = (void *)(v113 + v219);
  uint64_t v223 = v110 + 4;
  uint64_t v116 = (uint64_t)v200;
  uint64_t v117 = (uint64_t)v199;
  uint64_t v221 = (void *)v111;
LABEL_51:
  if (!v114) {
    goto LABEL_50;
  }
  int v134 = *((_DWORD *)v223 + v112);
  swift_bridgeObjectRetain_n();
  uint64_t v135 = (uint64_t)v222;
  uint64_t v136 = v114;
  while (2)
  {
    sub_1001196D8(v135, v117, type metadata accessor for TaskHistory.Previous);
    sub_1001196D8(v117, v116, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_100119610(v116, type metadata accessor for TaskHistory.Previous);
      goto LABEL_54;
    }
    int v137 = *(_DWORD *)(v116 + 8);
    sub_10007C4A4(*(void *)v116);
    if (v137 != v134)
    {
LABEL_54:
      sub_100119610(v117, type metadata accessor for TaskHistory.Previous);
      v135 += v104;
      if (!--v136) {
        goto LABEL_49;
      }
      continue;
    }
    break;
  }
  sub_100119610(v117, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease_n();
  uint64_t v138 = *(void *)(v201 + 16);
  if (v138)
  {
    uint64_t v139 = v198;
    uint64_t v140 = v201 + ((*(unsigned __int8 *)(v198 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80));
    swift_bridgeObjectRetain_n();
    uint64_t v141 = *(void *)(v139 + 72);
    uint64_t v142 = v215;
    do
    {
      sub_1001196D8(v140, v142, type metadata accessor for TaskHistory.Running);
      uint64_t v143 = v213;
      sub_1001196D8(v142, v213, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v144 = v143;
        int v145 = *(_DWORD *)(v143 + 4);
        sub_10007C4A4(*(void *)(v144 + 8));
        if (v145 == v134)
        {
          sub_100119610(v215, type metadata accessor for TaskHistory.Running);
          uint64_t v116 = (uint64_t)v200;
          uint64_t v117 = (uint64_t)v199;
LABEL_49:
          uint64_t v111 = (uint64_t)v221;
          swift_bridgeObjectRelease_n();
LABEL_50:
          if (++v112 != v111) {
            goto LABEL_51;
          }
LABEL_95:
          swift_bridgeObjectRelease();
          return 4;
        }
      }
      else
      {
        sub_100119610(v143, type metadata accessor for TaskHistory.Running);
      }
      uint64_t v142 = v215;
      sub_100119610(v215, type metadata accessor for TaskHistory.Running);
      v140 += v141;
      --v138;
    }
    while (v138);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = v217;
  a2 = v115;
LABEL_80:
  uint64_t v161 = sub_100105688(2, v218);
  uint64_t v162 = v161[2];
  if (v162)
  {
    uint64_t v163 = 0;
    uint64_t v222 = v161;
    uint64_t v223 = v161 + 4;
    uint64_t v164 = *(void *)(a2 + 16);
    do
    {
      if (v164)
      {
        int v165 = *((_DWORD *)v223 + v163);
        uint64_t v166 = v220;
        uint64_t v167 = a2 + ((*(unsigned __int8 *)(v220 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v220 + 80));
        uint64_t v168 = a2;
        swift_bridgeObjectRetain_n();
        uint64_t v169 = *(void *)(v166 + 72);
        uint64_t v170 = v164;
        uint64_t v171 = (uint64_t)v225;
        do
        {
          sub_1001196D8(v167, v171, type metadata accessor for TaskHistory.Previous);
          uint64_t v172 = v224;
          sub_1001196D8(v171, v224, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            unint64_t v173 = *(void *)v172;
            int v174 = *(_DWORD *)(v172 + 8);
            sub_10007C4A4(v173);
            if (v174 == v165)
            {
              sub_100119610((uint64_t)v225, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              return 4;
            }
          }
          else
          {
            sub_100119610(v172, type metadata accessor for TaskHistory.Previous);
          }
          uint64_t v171 = (uint64_t)v225;
          sub_100119610((uint64_t)v225, type metadata accessor for TaskHistory.Previous);
          v167 += v169;
          --v170;
        }
        while (v170);
        a2 = v168;
        swift_bridgeObjectRelease_n();
        uint64_t v6 = v217;
      }
      ++v163;
    }
    while (v163 != v162);
  }
  uint64_t result = swift_bridgeObjectRelease();
  int v185 = *(unsigned __int8 *)(v6 + 128);
  if (v185)
  {
    unsigned int v186 = -1;
  }
  else
  {
    int v187 = *(_DWORD *)(v6 + 124);
    unsigned int v186 = v187 - 1;
    if (v187 == 1)
    {
      unsigned int v186 = 1;
    }
    else if (!v187)
    {
      __break(1u);
      return result;
    }
  }
  unint64_t v188 = *(void *)(v6 + 76);
  int v189 = *(unsigned __int8 *)(v6 + 84);
  if (v185 | v189) {
    unint64_t v190 = 0;
  }
  else {
    unint64_t v190 = v186 - HIDWORD(v188);
  }
  uint64_t v191 = (void *)swift_allocObject();
  uint64_t v192 = v191;
  uint64_t v193 = *(void *)(v6 + 96);
  v191[2] = *(void *)(v6 + 88);
  v191[3] = v193;
  if (v189)
  {
    LODWORD(v227) = 1;
    LODWORD(v229) = v186;
    sub_100063E18();
    swift_bridgeObjectRetain();
    static MessageIdentifier.... infix(_:_:)();
  }
  else
  {
    v191[4] = v188;
    swift_bridgeObjectRetain();
  }
  v192[5] = *(void *)(v6 + 136);
  v192[6] = v190;
  return 2;
}

uint64_t sub_10011B030(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v105 = a6;
  os_log_t v111 = a1;
  uint64_t v103 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v9 = __chkstk_darwin(v103);
  uint64_t v11 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v101 = (uint64_t)&v99 - v12;
  uint64_t v13 = sub_1005E0ED0();
  uint64_t v107 = *(void *)(v13 - 8);
  uint64_t v108 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v112 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  int v102 = (char *)&v99 - v16;
  uint64_t v17 = type metadata accessor for MessageBatches(0);
  __chkstk_darwin(v17 - 8);
  uint64_t v110 = (uint64_t *)((char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = sub_10000566C(&qword_10070A2D0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_10000566C(&qword_100709E38);
  uint64_t v22 = *(void *)(v113 - 8);
  uint64_t v23 = __chkstk_darwin(v113);
  uint64_t v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v100 = (uint64_t)&v99 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v106 = (uint64_t)&v99 - v29;
  __chkstk_darwin(v28);
  uint64_t v109 = (uint64_t)&v99 - v30;
  uint64_t v31 = sub_1001AA340(0, a4);
  uint64_t v32 = v31[2];
  uint64_t v104 = v25;
  uint64_t v33 = v11;
  if (v32)
  {
    uint64_t v34 = 0;
    while ((sub_100149D30(*((_DWORD *)v31 + v34 + 8), a2, a3) & 1) == 0)
    {
      if (v32 == ++v34) {
        goto LABEL_5;
      }
    }
    char v41 = 0;
    uint64_t v38 = (uint64_t)v33;
    uint64_t v39 = v114;
LABEL_14:
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v39 + 130)) {
      __int16 v42 = 256;
    }
    else {
      __int16 v42 = 0;
    }
    sub_1001DE688(v42 | *(unsigned __int8 *)(v39 + 129), (uint64_t)v21);
    int v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v21, 1, v113);
    uint64_t v44 = v112;
    if (v43 == 1)
    {
      uint64_t v45 = &qword_10070A2D0;
      uint64_t v46 = (uint64_t)v21;
      return sub_100007A48(v46, v45);
    }
    uint64_t v47 = (uint64_t)v21;
    uint64_t v48 = v109;
    sub_10001FDF0(v47, v109, &qword_100709E38);
    uint64_t v49 = *(void *)(v39 + 136);
    uint64_t v50 = v106;
    sub_1000079E4(v48, v106, &qword_100709E38);
    uint64_t v51 = v110;
    sub_100067D84(v49, v50, v41, v110);
    uint64_t v52 = v39 + *(int *)(type metadata accessor for DetermineMessageBatches(0) + 52);
    sub_100119610(v52, type metadata accessor for DetermineMessageBatches.TaskState);
    sub_1001196D8((uint64_t)v51, v52, type metadata accessor for MessageBatches);
    type metadata accessor for DetermineMessageBatches.TaskState(0);
    swift_storeEnumTagMultiPayload();
    if (*(unsigned char *)(v39 + 72) & 1) != 0 || (int v53 = sub_100067EE0(), (v54))
    {
      uint64_t v82 = v107;
      uint64_t v83 = v108;
      uint64_t v84 = v105;
      (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v44, v105, v108);
      sub_1001196D8(v84, v38, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v85 = (uint64_t)v104;
      sub_1000079E4(v48, (uint64_t)v104, &qword_100709E38);
      uint64_t v86 = sub_1005E0EB0();
      os_log_type_t v87 = sub_1005E25C0();
      int v88 = v87;
      if (os_log_type_enabled(v86, v87))
      {
        uint64_t v89 = swift_slowAlloc();
        uint64_t v114 = swift_slowAlloc();
        v118[0] = v114;
        *(_DWORD *)uint64_t v89 = 68159491;
        LODWORD(v116) = 2;
        os_log_t v111 = v86;
        sub_1005E2960();
        *(_WORD *)(v89 + 8) = 256;
        uint64_t v90 = v38 + *(int *)(v103 + 20);
        LOBYTE(v116) = *(unsigned char *)v90;
        sub_1005E2960();
        *(_WORD *)(v89 + 11) = 2082;
        LODWORD(v106) = v88;
        uint64_t v91 = *(void *)(v90 + 8);
        unint64_t v92 = *(void *)(v90 + 16);
        swift_bridgeObjectRetain();
        uint64_t v116 = sub_1000C6914(v91, v92, v118);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v89 + 21) = 1040;
        LODWORD(v116) = 2;
        sub_1005E2960();
        *(_WORD *)(v89 + 27) = 512;
        LOWORD(v116) = *(_WORD *)(v90 + 24);
        sub_1005E2960();
        *(_WORD *)(v89 + 31) = 2160;
        uint64_t v116 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v89 + 41) = 2085;
        int v93 = *(_DWORD *)(v90 + 40);
        uint64_t v116 = *(void *)(v90 + 32);
        int v117 = v93;
        swift_bridgeObjectRetain();
        uint64_t v94 = sub_1005E1CC0();
        uint64_t v116 = sub_1000C6914(v94, v95, v118);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100119610(v38, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v89 + 51) = 2082;
        uint64_t v96 = MessageIdentifierSet.debugDescription.getter(v113);
        uint64_t v116 = sub_1000C6914(v96, v97, v118);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100007A48(v85, &qword_100709E38);
        os_log_t v98 = v111;
        _os_log_impl((void *)&_mh_execute_header, v111, (os_log_type_t)v106, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Creating UID ranges from UIDs: %{public}s", (uint8_t *)v89, 0x3Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v107 + 8))(v112, v108);
        sub_100119610((uint64_t)v110, type metadata accessor for MessageBatches);
        uint64_t v46 = v109;
      }
      else
      {

        sub_100007A48(v85, &qword_100709E38);
        sub_100119610(v38, type metadata accessor for MailboxTaskLogger);
        (*(void (**)(char *, uint64_t))(v82 + 8))(v44, v83);
        sub_100119610((uint64_t)v51, type metadata accessor for MessageBatches);
        uint64_t v46 = v48;
      }
    }
    else
    {
      int v55 = *(_DWORD *)(v39 + 124);
      BOOL v56 = v55 != 0;
      int v57 = v55 - 1;
      if (v57 == 0 || !v56) {
        int v57 = 1;
      }
      if (*(unsigned char *)(v39 + 128)) {
        int v57 = -1;
      }
      LODWORD(v118[0]) = v53;
      int v115 = v57;
      sub_100063E18();
      static MessageIdentifier.... infix(_:_:)();
      uint64_t v58 = v116;
      uint64_t v114 = HIDWORD(v116);
      *(void *)(v39 + 76) = v116 | ((unint64_t)HIDWORD(v116) << 32);
      *(unsigned char *)(v39 + 84) = 0;
      uint64_t v59 = v48;
      uint64_t v61 = v107;
      uint64_t v60 = v108;
      uint64_t v62 = v102;
      uint64_t v63 = v105;
      (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v102, v105, v108);
      uint64_t v64 = v101;
      sub_1001196D8(v63, v101, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v65 = v100;
      sub_1000079E4(v59, v100, &qword_100709E38);
      uint64_t v66 = sub_1005E0EB0();
      os_log_type_t v67 = sub_1005E25C0();
      int v68 = v67;
      if (os_log_type_enabled(v66, v67))
      {
        uint64_t v69 = swift_slowAlloc();
        uint64_t v112 = (char *)swift_slowAlloc();
        v118[0] = (uint64_t)v112;
        *(_DWORD *)uint64_t v69 = 68159747;
        uint64_t v106 = v58;
        LODWORD(v116) = 2;
        LODWORD(v111) = v68;
        sub_1005E2960();
        *(_WORD *)(v69 + 8) = 256;
        uint64_t v70 = v64 + *(int *)(v103 + 20);
        LOBYTE(v116) = *(unsigned char *)v70;
        sub_1005E2960();
        *(_WORD *)(v69 + 11) = 2082;
        uint64_t v71 = *(void *)(v70 + 8);
        unint64_t v72 = *(void *)(v70 + 16);
        swift_bridgeObjectRetain();
        uint64_t v116 = sub_1000C6914(v71, v72, v118);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v69 + 21) = 1040;
        LODWORD(v116) = 2;
        sub_1005E2960();
        *(_WORD *)(v69 + 27) = 512;
        LOWORD(v116) = *(_WORD *)(v70 + 24);
        sub_1005E2960();
        *(_WORD *)(v69 + 31) = 2160;
        uint64_t v116 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v69 + 41) = 2085;
        int v73 = *(_DWORD *)(v70 + 40);
        uint64_t v116 = *(void *)(v70 + 32);
        int v117 = v73;
        swift_bridgeObjectRetain();
        uint64_t v74 = sub_1005E1CC0();
        uint64_t v116 = sub_1000C6914(v74, v75, v118);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100119610(v101, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v69 + 51) = 2082;
        uint64_t v76 = v100;
        uint64_t v77 = MessageIdentifierSet.debugDescription.getter(v113);
        uint64_t v116 = sub_1000C6914(v77, v78, v118);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100007A48(v76, &qword_100709E38);
        *(_WORD *)(v69 + 61) = 2082;
        uint64_t v116 = __PAIR64__(v114, v106);
        uint64_t v79 = sub_10000566C(&qword_10070A9B8);
        uint64_t v80 = MessageIdentifierRange.debugDescription.getter(v79);
        uint64_t v116 = sub_1000C6914(v80, v81, v118);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v66, (os_log_type_t)v111, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Creating UID ranges from UIDs: %{public}s (window of interest: %{public}s)", (uint8_t *)v69, 0x47u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v61 + 8))(v102, v108);
        sub_100119610((uint64_t)v110, type metadata accessor for MessageBatches);
        uint64_t v46 = v109;
        uint64_t v45 = &qword_100709E38;
        return sub_100007A48(v46, v45);
      }

      sub_100007A48(v65, &qword_100709E38);
      sub_100119610(v64, type metadata accessor for MailboxTaskLogger);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v60);
      sub_100119610((uint64_t)v110, type metadata accessor for MessageBatches);
      uint64_t v46 = v59;
    }
    uint64_t v45 = &qword_100709E38;
    return sub_100007A48(v46, v45);
  }
LABEL_5:
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_1001AA340(1, a4);
  uint64_t v36 = v35[2];
  if (v36)
  {
    uint64_t v37 = 0;
    uint64_t v38 = (uint64_t)v33;
    uint64_t v39 = v114;
    while ((sub_100149D30(*((_DWORD *)v35 + v37 + 8), a2, a3) & 1) == 0)
    {
      if (v36 == ++v37) {
        goto LABEL_9;
      }
    }
    char v41 = 1;
    goto LABEL_14;
  }
LABEL_9:
  return swift_bridgeObjectRelease();
}

void sub_10011BD80(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v242 = a5;
  unint64_t v247 = a1;
  uint64_t v8 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v8 - 8);
  int v230 = (char *)v212 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = sub_10000566C(&qword_10070CC20);
  __chkstk_darwin(v236);
  uint64_t v235 = (void *)((char *)v212 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for MessageBatches(0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v245 = (uint64_t)v212 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v223 = (void *)((char *)v212 - v14);
  uint64_t v240 = sub_10000566C(&qword_10070D0E0);
  __chkstk_darwin(v240);
  uint64_t v241 = (void *)((char *)v212 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v224 = sub_10000566C(&qword_100709E38);
  uint64_t v16 = __chkstk_darwin(v224);
  uint64_t v229 = (uint64_t)v212 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v222 = (char *)v212 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v232 = (uint64_t)v212 - v21;
  __chkstk_darwin(v20);
  uint64_t v237 = (uint64_t)v212 - v22;
  uint64_t v248 = type metadata accessor for DetermineMessageBatches.TaskState(0);
  uint64_t v23 = __chkstk_darwin(v248);
  uint64_t v246 = (uint64_t)v212 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  unint64_t v231 = (void *)((char *)v212 - v26);
  __chkstk_darwin(v25);
  uint64_t v28 = (char **)((char *)v212 - v27);
  os_log_t v238 = (os_log_t)type metadata accessor for MailboxTaskLogger(0);
  uint64_t v29 = __chkstk_darwin(v238);
  uint64_t v233 = (uint64_t)v212 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v225 = (uint64_t)v212 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v227 = (uint64_t)v212 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v37 = (char *)v212 - v36;
  __chkstk_darwin(v35);
  uint64_t v39 = (char *)v212 - v38;
  uint64_t v40 = sub_1005E0ED0();
  uint64_t v243 = *(void *)(v40 - 8);
  uint64_t v244 = v40;
  uint64_t v41 = __chkstk_darwin(v40);
  os_log_t v234 = (os_log_t)((char *)v212 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v226 = (char *)v212 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  os_log_t v228 = (os_log_t)((char *)v212 - v46);
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v239 = (char *)v212 - v48;
  __chkstk_darwin(v47);
  uint64_t v50 = (char *)v212 - v49;
  uint64_t v249 = a4;
  uint64_t v51 = sub_100105688(0, a4);
  uint64_t v52 = v51[2];
  if (!v52)
  {
LABEL_5:
    swift_bridgeObjectRelease();
LABEL_6:
    uint64_t v55 = v249;
    uint64_t v54 = v250;
    goto LABEL_7;
  }
  uint64_t v53 = 0;
  while ((sub_1001652E0(*((_DWORD *)v51 + v53 + 8), a2, a3) & 1) == 0)
  {
    if (v52 == ++v53) {
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
  if (((v247 >> 59) & 0x1E | (v247 >> 2) & 1) != 7) {
    goto LABEL_6;
  }
  uint64_t v54 = v250;
  if (*(void *)(v250 + 96) == *(void *)((v247 & 0xFFFFFFFFFFFFFFBLL) + 0x18)
    && (uint64_t v59 = *(unsigned int *)((v247 & 0xFFFFFFFFFFFFFFBLL) + 0x20),
        os_log_t v221 = (os_log_t)*(unsigned int *)((v247 & 0xFFFFFFFFFFFFFFBLL) + 0x24),
        sub_1000255D4(*(void *)(v250 + 88), *(void *)((v247 & 0xFFFFFFFFFFFFFFBLL) + 0x10))))
  {
    uint64_t v220 = v59;
    uint64_t v61 = v242;
    uint64_t v60 = v243;
    uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 16);
    uint64_t v219 = v243 + 16;
    uint64_t v218 = v62;
    v62(v50, v242, v244);
    sub_1001196D8(v61, (uint64_t)v39, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v63 = sub_1005E0EB0();
    os_log_type_t v64 = sub_1005E25C0();
    int v65 = v64;
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v66 = swift_slowAlloc();
      LODWORD(v216) = v65;
      uint64_t v67 = v66;
      uint64_t v217 = (char *)swift_slowAlloc();
      uint64_t v253 = v217;
      *(_DWORD *)uint64_t v67 = 68159491;
      LODWORD(v251) = 2;
      uint64_t v214 = (char *)&v251 + 4;
      sub_1005E2960();
      *(_WORD *)(v67 + 8) = 256;
      int v68 = &v39[SHIDWORD(v238[2].isa)];
      LOBYTE(v251) = *v68;
      sub_1005E2960();
      *(_WORD *)(v67 + 11) = 2082;
      v212[1] = v67 + 13;
      uint64_t v213 = (int *)*((void *)v68 + 1);
      os_log_t v215 = v63;
      unint64_t v69 = *((void *)v68 + 2);
      swift_bridgeObjectRetain();
      uint64_t v251 = sub_1000C6914((uint64_t)v213, v69, (uint64_t *)&v253);
      uint64_t v213 = &v252;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v67 + 21) = 1040;
      LODWORD(v251) = 2;
      sub_1005E2960();
      *(_WORD *)(v67 + 27) = 512;
      LOWORD(v251) = *((_WORD *)v68 + 12);
      sub_1005E2960();
      *(_WORD *)(v67 + 31) = 2160;
      uint64_t v251 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v67 + 41) = 2085;
      uint64_t v214 = (char *)(v67 + 43);
      int v70 = *((_DWORD *)v68 + 10);
      uint64_t v251 = *((void *)v68 + 4);
      int v252 = v70;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1005E1CC0();
      uint64_t v251 = sub_1000C6914(v71, v72, (uint64_t *)&v253);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100119610((uint64_t)v39, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v67 + 51) = 2082;
      os_log_t v73 = v221;
      uint64_t v251 = __PAIR64__(v221, v220);
      uint64_t v74 = sub_10000566C(&qword_10070A9B8);
      uint64_t v75 = MessageIdentifierRange.debugDescription.getter(v74);
      uint64_t v251 = sub_1000C6914(v75, v76, (uint64_t *)&v253);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      os_log_t v77 = v215;
      _os_log_impl((void *)&_mh_execute_header, v215, (os_log_type_t)v216, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found window of interest: %{public}s", (uint8_t *)v67, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v78 = v244;
      uint64_t v79 = *(void (**)(char *, uint64_t))(v243 + 8);
      v79(v50, v244);
    }
    else
    {
      sub_100119610((uint64_t)v39, type metadata accessor for MailboxTaskLogger);

      uint64_t v79 = *(void (**)(char *, uint64_t))(v60 + 8);
      uint64_t v78 = v244;
      v79(v50, v244);
      os_log_t v73 = v221;
    }
    uint64_t v55 = v249;
    uint64_t v139 = v250;
    *(void *)(v250 + 76) = v220 | ((void)v73 << 32);
    *(unsigned char *)(v139 + 84) = 0;
    if (*(unsigned char *)(v139 + 128))
    {
      uint64_t v54 = v139;
    }
    else if (*(unsigned int *)(v139 + 124) - (void)v73 <= *(void *)(v139 + 136) / 2)
    {
      uint64_t v54 = v250;
    }
    else
    {
      uint64_t v220 = *(unsigned int *)(v139 + 124) - (void)v73;
      uint64_t v140 = v239;
      uint64_t v141 = v242;
      v218(v239, v242, v78);
      sub_1001196D8(v141, (uint64_t)v37, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v142 = v78;
      uint64_t v143 = sub_1005E0EB0();
      os_log_type_t v144 = sub_1005E25C0();
      os_log_t v221 = v143;
      LODWORD(v219) = v144;
      if (os_log_type_enabled(v143, v144))
      {
        uint64_t v145 = swift_slowAlloc();
        uint64_t v218 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
        uint64_t v253 = v218;
        *(_DWORD *)uint64_t v145 = 68159491;
        LODWORD(v251) = 2;
        uint64_t v217 = (char *)&v251 + 4;
        sub_1005E2960();
        *(_WORD *)(v145 + 8) = 256;
        uint64_t v146 = &v37[SHIDWORD(v238[2].isa)];
        LOBYTE(v251) = *v146;
        sub_1005E2960();
        *(_WORD *)(v145 + 11) = 2082;
        uint64_t v216 = v145 + 13;
        uint64_t v147 = *((void *)v146 + 1);
        unint64_t v148 = *((void *)v146 + 2);
        swift_bridgeObjectRetain();
        uint64_t v251 = sub_1000C6914(v147, v148, (uint64_t *)&v253);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v145 + 21) = 1040;
        LODWORD(v251) = 2;
        sub_1005E2960();
        *(_WORD *)(v145 + 27) = 512;
        LOWORD(v251) = *((_WORD *)v146 + 12);
        sub_1005E2960();
        *(_WORD *)(v145 + 31) = 2160;
        uint64_t v251 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v145 + 41) = 2085;
        int v149 = *((_DWORD *)v146 + 10);
        uint64_t v251 = *((void *)v146 + 4);
        int v252 = v149;
        swift_bridgeObjectRetain();
        uint64_t v150 = sub_1005E1CC0();
        uint64_t v251 = sub_1000C6914(v150, v151, (uint64_t *)&v253);
        sub_1005E2960();
        uint64_t v55 = v249;
        swift_bridgeObjectRelease();
        sub_100119610((uint64_t)v37, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v145 + 51) = 2048;
        uint64_t v251 = v220;
        sub_1005E2960();
        os_log_t v152 = v221;
        _os_log_impl((void *)&_mh_execute_header, v221, (os_log_type_t)v219, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld new UIDs on server. Querying server..", (uint8_t *)v145, 0x3Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v243 + 8))(v239, v244);
      }
      else
      {
        sub_100119610((uint64_t)v37, type metadata accessor for MailboxTaskLogger);

        v79(v140, v142);
      }
      uint64_t v193 = type metadata accessor for DetermineMessageBatches(0);
      uint64_t v54 = v250;
      sub_100119610(v250 + *(int *)(v193 + 52), type metadata accessor for DetermineMessageBatches.TaskState);
      swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    uint64_t v55 = v249;
  }
LABEL_7:
  BOOL v56 = sub_100105688(2, v55);
  uint64_t v57 = v56[2];
  if (v57)
  {
    uint64_t v58 = 0;
    while ((sub_1001652E0(*((_DWORD *)v56 + v58 + 8), a2, a3) & 1) == 0)
    {
      if (v57 == ++v58) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v80 = (v54 + *(int *)(type metadata accessor for DetermineMessageBatches(0) + 52));
    sub_1001196D8((uint64_t)v80, (uint64_t)v28, type metadata accessor for DetermineMessageBatches.TaskState);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_100119610((uint64_t)v28, type metadata accessor for DetermineMessageBatches.TaskState);
      goto LABEL_31;
    }
    if (((v247 >> 59) & 0x1E | (v247 >> 2) & 1) != 8) {
      goto LABEL_31;
    }
    os_log_t v221 = v80;
    uint64_t v239 = *v28;
    unint64_t v81 = (uint64_t *)swift_projectBox();
    uint64_t v82 = v241;
    uint64_t v83 = *(int *)(v240 + 48);
    uint64_t v84 = (uint64_t)v241 + v83;
    uint64_t v85 = *(int *)(v240 + 64);
    uint64_t v86 = *v81;
    uint64_t v87 = v81[1];
    *uint64_t v241 = *v81;
    v82[1] = v87;
    sub_1000079E4((uint64_t)v81 + v83, (uint64_t)v82 + v83, &qword_100709E38);
    uint64_t v88 = *(uint64_t *)((char *)v81 + v85);
    *(void *)((char *)v82 + v85) = v88;
    uint64_t v54 = v250;
    if (*(void *)(v250 + 96) != v87 || !sub_1000255D4(*(void *)(v250 + 88), v86))
    {
      sub_100007A48(v84, &qword_100709E38);
      goto LABEL_31;
    }
    sub_10001FDF0(v84, v237, &qword_100709E38);
    uint64_t v89 = *(void *)(v54 + 64);
    int v90 = *(unsigned __int8 *)(v54 + 72);
    uint64_t v91 = v244;
    os_log_t v92 = v234;
    uint64_t v240 = v88;
    if (v90 == 1)
    {
      uint64_t v93 = v88 - (void)v239;
      if (__OFSUB__(v88, v239))
      {
        __break(1u);
      }
      else if ((v93 & 0x8000000000000000) == 0 || (BOOL v94 = __OFSUB__(0, v93), v93 = (uint64_t)&v239[-v88], !v94))
      {
        if (v93 < *(void *)(v54 + 136) / 2)
        {
          uint64_t v96 = v242;
          uint64_t v95 = v243;
          os_log_t v97 = v228;
          (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(v243 + 16))(v228, v242, v244, v89);
          uint64_t v98 = v227;
          sub_1001196D8(v96, v227, type metadata accessor for MailboxTaskLogger);
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          uint64_t v99 = v91;
          uint64_t v100 = sub_1005E0EB0();
          os_log_type_t v101 = sub_1005E25C0();
          LODWORD(v242) = v101;
          if (os_log_type_enabled(v100, v101))
          {
            uint64_t v102 = swift_slowAlloc();
            os_log_t v234 = v100;
            uint64_t v103 = v102;
            uint64_t v241 = (void *)swift_slowAlloc();
            uint64_t v253 = v241;
            *(_DWORD *)uint64_t v103 = 68159747;
            LODWORD(v251) = 2;
            sub_1005E2960();
            *(_WORD *)(v103 + 8) = 256;
            uint64_t v104 = v98 + SHIDWORD(v238[2].isa);
            LOBYTE(v251) = *(unsigned char *)v104;
            sub_1005E2960();
            *(_WORD *)(v103 + 11) = 2082;
            uint64_t v106 = *(void *)(v104 + 8);
            unint64_t v105 = *(void *)(v104 + 16);
            swift_bridgeObjectRetain();
            uint64_t v251 = sub_1000C6914(v106, v105, (uint64_t *)&v253);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            *(_WORD *)(v103 + 21) = 1040;
            LODWORD(v251) = 2;
            sub_1005E2960();
            *(_WORD *)(v103 + 27) = 512;
            LOWORD(v251) = *(_WORD *)(v104 + 24);
            sub_1005E2960();
            *(_WORD *)(v103 + 31) = 2160;
            uint64_t v251 = 0x786F626C69616DLL;
            sub_1005E2960();
            *(_WORD *)(v103 + 41) = 2085;
            int v107 = *(_DWORD *)(v104 + 40);
            uint64_t v251 = *(void *)(v104 + 32);
            int v252 = v107;
            swift_bridgeObjectRetain();
            uint64_t v108 = sub_1005E1CC0();
            uint64_t v251 = sub_1000C6914(v108, v109, (uint64_t *)&v253);
            uint64_t v54 = v250;
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_100119610(v227, type metadata accessor for MailboxTaskLogger);
            *(_WORD *)(v103 + 51) = 2048;
            uint64_t v251 = v240;
            sub_1005E2960();
            *(_WORD *)(v103 + 61) = 2048;
            uint64_t v251 = (uint64_t)v239;
            uint64_t v55 = v249;
            sub_1005E2960();
            os_log_t v110 = v234;
            _os_log_impl((void *)&_mh_execute_header, v234, (os_log_type_t)v242, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld UIDs locally, %ld on server.", (uint8_t *)v103, 0x47u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(os_log_t, uint64_t))(v243 + 8))(v228, v244);
          }
          else
          {
            sub_100119610(v98, type metadata accessor for MailboxTaskLogger);

            (*(void (**)(os_log_t, uint64_t))(v95 + 8))(v97, v99);
          }
          uint64_t v194 = *(void *)(v54 + 136);
          uint64_t v195 = v237;
          uint64_t v196 = v232;
          sub_1000079E4(v237, v232, &qword_100709E38);
          unint64_t v197 = v231;
          sub_100067D84(v194, v196, 1, v231);
          sub_100007A48(v195, &qword_100709E38);
          swift_storeEnumTagMultiPayload();
          uint64_t v198 = (uint64_t)v197;
          goto LABEL_80;
        }
        goto LABEL_52;
      }
      __break(1u);
      goto LABEL_83;
    }
LABEL_52:
    if (*(unsigned char *)(v54 + 84)) {
      goto LABEL_59;
    }
    unint64_t v153 = *(void *)(v54 + 76);
    uint64_t v154 = *(unsigned int *)(v54 + 124);
    LOBYTE(v251) = *(unsigned char *)(v54 + 128);
    uint64_t v155 = WindowOfInterestSize.limit(serverNextUID:windowOfInterest:)(v154 | ((unint64_t)v251 << 32), v153, 0, v89, v90);
    if (v156) {
      goto LABEL_59;
    }
    if (!__OFSUB__(v155, v88))
    {
      if (v155 - v88 <= 499)
      {
        uint64_t v157 = v242;
        uint64_t v158 = v243;
        uint64_t v159 = v226;
        (*(void (**)(char *, uint64_t, uint64_t))(v243 + 16))(v226, v242, v91);
        uint64_t v160 = v157;
        uint64_t v161 = v225;
        sub_1001196D8(v160, v225, type metadata accessor for MailboxTaskLogger);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v162 = sub_1005E0EB0();
        os_log_type_t v163 = sub_1005E25C0();
        LODWORD(v242) = v163;
        if (os_log_type_enabled(v162, v163))
        {
          os_log_t v234 = (os_log_t)HIDWORD(v153);
          uint64_t v164 = swift_slowAlloc();
          uint64_t v241 = (void *)swift_slowAlloc();
          uint64_t v253 = v241;
          *(_DWORD *)uint64_t v164 = 68160003;
          LODWORD(v251) = 2;
          uint64_t v233 = (uint64_t)&v251 + 4;
          sub_1005E2960();
          *(_WORD *)(v164 + 8) = 256;
          uint64_t isa_high = SHIDWORD(v238[2].isa);
          os_log_t v238 = v162;
          uint64_t v166 = v161 + isa_high;
          LOBYTE(v251) = *(unsigned char *)(v161 + isa_high);
          sub_1005E2960();
          *(_WORD *)(v164 + 11) = 2082;
          uint64_t v168 = *(void *)(v166 + 8);
          unint64_t v167 = *(void *)(v166 + 16);
          swift_bridgeObjectRetain();
          uint64_t v251 = sub_1000C6914(v168, v167, (uint64_t *)&v253);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v164 + 21) = 1040;
          LODWORD(v251) = 2;
          sub_1005E2960();
          *(_WORD *)(v164 + 27) = 512;
          LOWORD(v251) = *(_WORD *)(v166 + 24);
          sub_1005E2960();
          *(_WORD *)(v164 + 31) = 2160;
          uint64_t v251 = 0x786F626C69616DLL;
          sub_1005E2960();
          *(_WORD *)(v164 + 41) = 2085;
          int v169 = *(_DWORD *)(v166 + 40);
          uint64_t v251 = *(void *)(v166 + 32);
          int v252 = v169;
          swift_bridgeObjectRetain();
          uint64_t v170 = sub_1005E1CC0();
          uint64_t v251 = sub_1000C6914(v170, v171, (uint64_t *)&v253);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_100119610(v225, type metadata accessor for MailboxTaskLogger);
          *(_WORD *)(v164 + 51) = 2048;
          uint64_t v251 = v88;
          sub_1005E2960();
          *(_WORD *)(v164 + 61) = 2082;
          uint64_t v251 = __PAIR64__(v234, v153);
          uint64_t v172 = sub_10000566C(&qword_10070A9B8);
          uint64_t v173 = MessageIdentifierRange.debugDescription.getter(v172);
          uint64_t v251 = sub_1000C6914(v173, v174, (uint64_t *)&v253);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v164 + 71) = 2048;
          uint64_t v251 = (uint64_t)v239;
          uint64_t v55 = v249;
          sub_1005E2960();
          os_log_t v175 = v238;
          _os_log_impl((void *)&_mh_execute_header, v238, (os_log_type_t)v242, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld UIDs locally in window %{public}s, %ld on server.", (uint8_t *)v164, 0x51u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v243 + 8))(v226, v244);
        }
        else
        {
          sub_100119610(v161, type metadata accessor for MailboxTaskLogger);

          (*(void (**)(char *, uint64_t))(v158 + 8))(v159, v244);
        }
        uint64_t v199 = v224;
        uint64_t v200 = MessageIdentifierSet.startIndex.getter(v224);
        uint64_t v202 = v201;
        if (v200 != MessageIdentifierSet.endIndex.getter(v199) || v202 != v203)
        {
          MessageIdentifierSet.subscript.getter();
          LODWORD(v153) = v251;
        }
        uint64_t v54 = v250;
        if (*(unsigned char *)(v250 + 128))
        {
          int v204 = -1;
LABEL_79:
          LODWORD(v253) = v153;
          int v254 = v204;
          sub_100063E18();
          static MessageIdentifier.... infix(_:_:)();
          *(void *)(v54 + 76) = v251;
          *(unsigned char *)(v54 + 84) = 0;
          uint64_t v249 = *(void *)(v54 + 136);
          uint64_t v206 = v237;
          uint64_t v207 = v232;
          sub_1000079E4(v237, v232, &qword_100709E38);
          uint64_t v208 = sub_1000697BC(v207);
          uint64_t v209 = (uint64_t)v222;
          sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
          uint64_t v210 = v223;
          sub_1000654F0(v249, v208, v209, v223);
          sub_100007A48(v207, &qword_100709E38);
          uint64_t v211 = v231;
          sub_100119670((uint64_t)v210, (uint64_t)v231, type metadata accessor for MessageBatches);
          sub_100007A48(v206, &qword_100709E38);
          swift_storeEnumTagMultiPayload();
          uint64_t v198 = (uint64_t)v211;
LABEL_80:
          sub_10011DDFC(v198, (uint64_t)v221);
          goto LABEL_31;
        }
        int v205 = *(_DWORD *)(v250 + 124);
        int v204 = v205 - 1;
        if (v205 == 1)
        {
          int v204 = 1;
          goto LABEL_79;
        }
        if (v205) {
          goto LABEL_79;
        }
LABEL_84:
        __break(1u);
        return;
      }
LABEL_59:
      uint64_t v177 = v242;
      uint64_t v176 = v243;
      (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(v243 + 16))(v92, v242, v91, v89);
      uint64_t v178 = v233;
      sub_1001196D8(v177, v233, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v179 = v91;
      uint64_t v180 = sub_1005E0EB0();
      os_log_type_t v181 = sub_1005E25C0();
      LODWORD(v242) = v181;
      if (os_log_type_enabled(v180, v181))
      {
        uint64_t v182 = swift_slowAlloc();
        os_log_t v228 = v180;
        uint64_t v183 = v182;
        uint64_t v241 = (void *)swift_slowAlloc();
        uint64_t v253 = v241;
        *(_DWORD *)uint64_t v183 = 68159747;
        LODWORD(v251) = 2;
        sub_1005E2960();
        *(_WORD *)(v183 + 8) = 256;
        uint64_t v184 = v178 + SHIDWORD(v238[2].isa);
        LOBYTE(v251) = *(unsigned char *)v184;
        sub_1005E2960();
        *(_WORD *)(v183 + 11) = 2082;
        uint64_t v186 = *(void *)(v184 + 8);
        unint64_t v185 = *(void *)(v184 + 16);
        swift_bridgeObjectRetain();
        uint64_t v251 = sub_1000C6914(v186, v185, (uint64_t *)&v253);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v183 + 21) = 1040;
        LODWORD(v251) = 2;
        sub_1005E2960();
        *(_WORD *)(v183 + 27) = 512;
        LOWORD(v251) = *(_WORD *)(v184 + 24);
        sub_1005E2960();
        *(_WORD *)(v183 + 31) = 2160;
        uint64_t v251 = 0x786F626C69616DLL;
        uint64_t v187 = v179;
        os_log_t v188 = v221;
        sub_1005E2960();
        *(_WORD *)(v183 + 41) = 2085;
        int v189 = *(_DWORD *)(v184 + 40);
        uint64_t v251 = *(void *)(v184 + 32);
        int v252 = v189;
        swift_bridgeObjectRetain();
        uint64_t v190 = sub_1005E1CC0();
        uint64_t v251 = sub_1000C6914(v190, v191, (uint64_t *)&v253);
        uint64_t v54 = v250;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100119610(v233, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v183 + 51) = 2048;
        uint64_t v251 = v240;
        sub_1005E2960();
        *(_WORD *)(v183 + 61) = 2048;
        uint64_t v251 = (uint64_t)v239;
        uint64_t v55 = v249;
        sub_1005E2960();
        os_log_t v192 = v228;
        _os_log_impl((void *)&_mh_execute_header, v228, (os_log_type_t)v242, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Only found %ld UIDs locally but %ld on server. Querying server for message batches.", (uint8_t *)v183, 0x47u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(os_log_t, uint64_t))(v243 + 8))(v234, v187);
        sub_100007A48(v237, &qword_100709E38);
      }
      else
      {

        sub_100119610(v178, type metadata accessor for MailboxTaskLogger);
        (*(void (**)(os_log_t, uint64_t))(v176 + 8))(v92, v179);
        sub_100007A48(v237, &qword_100709E38);
        os_log_t v188 = v221;
      }
      sub_100119610((uint64_t)v188, type metadata accessor for DetermineMessageBatches.TaskState);
      swift_storeEnumTagMultiPayload();
      goto LABEL_31;
    }
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
LABEL_11:
  swift_bridgeObjectRelease();
LABEL_31:
  os_log_t v111 = sub_100105688(3, v55);
  uint64_t v112 = v111[2];
  if (!v112)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v113 = 0;
  while ((sub_1001652E0(*((_DWORD *)v111 + v113 + 8), a2, a3) & 1) == 0)
  {
    if (v112 == ++v113) {
      goto LABEL_35;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v114 = v54 + *(int *)(type metadata accessor for DetermineMessageBatches(0) + 52);
  uint64_t v115 = v246;
  sub_1001196D8(v114, v246, type metadata accessor for DetermineMessageBatches.TaskState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v116 = v245;
    sub_100119670(v115, v245, type metadata accessor for MessageBatches);
    if ((*(unsigned char *)(v54 + 84) & 1) == 0)
    {
      uint64_t v117 = *(void *)(v54 + 76);
      if ((v117 & 0xFFFFFFFE) != 0 && ((v247 >> 59) & 0x1E | (v247 >> 2) & 1) == 9)
      {
        uint64_t v118 = (uint64_t *)swift_projectBox();
        uint64_t v119 = v235;
        uint64_t v120 = *(int *)(v236 + 48);
        uint64_t v121 = (uint64_t)v235 + v120;
        uint64_t v122 = *(int *)(v236 + 64);
        uint64_t v123 = (uint64_t)v235 + v122;
        uint64_t v124 = (char *)v118 + v122;
        uint64_t v125 = *v118;
        uint64_t v126 = v118[1];
        *uint64_t v235 = *v118;
        v119[1] = v126;
        sub_1000079E4((uint64_t)v118 + v120, v121, &qword_100709E38);
        uint64_t v127 = (uint64_t)v124;
        int v128 = (uint64_t *)v250;
        sub_1000079E4(v127, v123, &qword_100709E30);
        if (v128[12] != v126 || !sub_1000255D4(v128[11], v125))
        {
          sub_100119610(v116, type metadata accessor for MessageBatches);
          sub_100007A48(v123, &qword_100709E30);
          sub_100007A48(v121, &qword_100709E38);
          return;
        }
        uint64_t v129 = v229;
        sub_10001FDF0(v121, v229, &qword_100709E38);
        LODWORD(v253) = 1;
        int v254 = v117 - 1;
        sub_100063E18();
        static MessageIdentifier.... infix(_:_:)();
        uint64_t v253 = (void *)v251;
        Range<>.init<A>(_:)((uint64_t)&v253, (uint64_t)&type metadata for UID);
        uint64_t v253 = (void *)v130;
        sub_10001FC6C();
        uint64_t v131 = (uint64_t)v230;
        sub_1005E36A0();
        char v132 = sub_1005E35A0();
        sub_100007A48(v131, &qword_100709E30);
        sub_100007A48(v123, &qword_100709E30);
        if (v132)
        {
          uint64_t v133 = v128[17];
          uint64_t v134 = *(void *)(v116 + 8);
          uint64_t v135 = v232;
          sub_1000079E4(v129, v232, &qword_100709E38);
          swift_bridgeObjectRetain();
          uint64_t v136 = v231;
          sub_1000654F0(v133, v134, v135, v231);
          sub_100007A48(v129, &qword_100709E38);
          sub_100119610(v116, type metadata accessor for MessageBatches);
          swift_storeEnumTagMultiPayload();
          sub_10011DDFC((uint64_t)v136, v114);
          return;
        }
        sub_100007A48(v129, &qword_100709E38);
      }
    }
    int v137 = type metadata accessor for MessageBatches;
    uint64_t v138 = v116;
  }
  else
  {
    int v137 = type metadata accessor for DetermineMessageBatches.TaskState;
    uint64_t v138 = v115;
  }
  sub_100119610(v138, v137);
}

uint64_t sub_10011DDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetermineMessageBatches.TaskState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10011DE60()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10011DE98()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10011DED0()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t getEnumTagSinglePayload for DetermineMessageBatches.CommandID(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DetermineMessageBatches.CommandID(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10011E074);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetermineMessageBatches.CommandID()
{
  return &type metadata for DetermineMessageBatches.CommandID;
}

unsigned char *storeEnumTagSinglePayload for DetermineMessageBatches.ActionID(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10011E178);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetermineMessageBatches.ActionID()
{
  return &type metadata for DetermineMessageBatches.ActionID;
}

unint64_t sub_10011E1B4()
{
  unint64_t result = qword_10070D100;
  if (!qword_10070D100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070D100);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DetermineMessageBatches.CommandID.Kind(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10011E2A4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetermineMessageBatches.CommandID.Kind()
{
  return &type metadata for DetermineMessageBatches.CommandID.Kind;
}

uint64_t sub_10011E2DC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    int v8 = a2 + 3;
    long long v9 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 48) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_bridgeObjectRetain();
    v11(a1 + 24, v8, v10);
    uint64_t v12 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v12;
    *(_WORD *)(a1 + 80) = *((_WORD *)a2 + 40);
    *(void *)(a1 + 88) = a2[11];
    LODWORD(v12) = *((_DWORD *)a2 + 24);
    uint64_t v13 = *(int *)(a3 + 32);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (char *)a2 + v13;
    *(_DWORD *)(a1 + 96) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_10000566C(&qword_100709E38);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_10000566C(&qword_10070A2D0);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = sub_10000566C(&qword_100709E60);
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v15, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t sub_10011E4F4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_10000566C(&qword_100709E38);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    int v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v4, v7);
  }
  return result;
}

uint64_t sub_10011E5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a2 + 24;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v7;
  uint64_t v8 = v7;
  long long v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  v9(a1 + 24, v6, v8);
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  LODWORD(v10) = *(_DWORD *)(a2 + 96);
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  *(_DWORD *)(a1 + 96) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_10000566C(&qword_100709E38);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_10000566C(&qword_10070A2D0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = sub_10000566C(&qword_100709E60);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 16))(v12, v13, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_10011E7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_100022498((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  uint64_t v6 = *(int *)(a3 + 32);
  long long v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_10000566C(&qword_100709E38);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v17 = sub_10000566C(&qword_100709E60);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 24))(v7, v8, v17);
      return a1;
    }
    sub_100007A48((uint64_t)v7, &qword_100709E38);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v15 = sub_10000566C(&qword_10070A2D0);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  uint64_t v14 = sub_10000566C(&qword_100709E60);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_10011E9DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  uint64_t v6 = *(int *)(a3 + 32);
  long long v7 = (const void *)(a2 + v6);
  uint64_t v8 = (void *)(a1 + v6);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  uint64_t v9 = sub_10000566C(&qword_100709E38);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
  {
    uint64_t v11 = sub_10000566C(&qword_10070A2D0);
    memcpy(v8, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_10000566C(&qword_100709E60);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v7, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_10011EB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_10000566C(&qword_100709E38);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      uint64_t v18 = sub_10000566C(&qword_100709E60);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 40))(v8, v9, v18);
      return a1;
    }
    sub_100007A48((uint64_t)v8, &qword_100709E38);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v16 = sub_10000566C(&qword_10070A2D0);
    memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  uint64_t v15 = sub_10000566C(&qword_100709E60);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_10011ED64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10011ED78);
}

uint64_t sub_10011ED78(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000566C(&qword_10070A2D0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10011EE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10011EE40);
}

void *sub_10011EE40(void *result, uint64_t a2, int a3, uint64_t a4)
{
  long long v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_10070A2D0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DetermineNewestMessages()
{
  uint64_t result = qword_10070D180;
  if (!qword_10070D180) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10011EF38()
{
  sub_10011EFF0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10011EFF0()
{
  if (!qword_10070D190)
  {
    sub_10000744C(&qword_100709E38);
    unint64_t v0 = sub_1005E28C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10070D190);
    }
  }
}

void sub_10011F04C()
{
  qword_100761740 = (uint64_t)&_swiftEmptySetSingleton;
}

uint64_t sub_10011F060(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E0ED0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  sub_100120DE8(a1, (uint64_t)v4, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v9 = sub_1005E0EB0();
  os_log_type_t v10 = sub_1005E25C0();
  int v11 = v10;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v12 = swift_slowAlloc();
    int v23 = v11;
    uint64_t v13 = v12;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = v22;
    *(_DWORD *)uint64_t v13 = 68159235;
    LODWORD(v25) = 2;
    sub_1005E2960();
    *(_WORD *)(v13 + 8) = 256;
    uint64_t v14 = *(int *)(v2 + 20);
    uint64_t v24 = v5;
    uint64_t v15 = &v4[v14];
    LOBYTE(v25) = v4[v14];
    sub_1005E2960();
    *(_WORD *)(v13 + 11) = 2082;
    uint64_t v17 = *((void *)v15 + 1);
    unint64_t v16 = *((void *)v15 + 2);
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1000C6914(v17, v16, &v27);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 21) = 1040;
    LODWORD(v25) = 2;
    sub_1005E2960();
    *(_WORD *)(v13 + 27) = 512;
    LOWORD(v25) = *((_WORD *)v15 + 12);
    sub_1005E2960();
    *(_WORD *)(v13 + 31) = 2160;
    uint64_t v25 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v13 + 41) = 2085;
    int v18 = *((_DWORD *)v15 + 10);
    uint64_t v25 = *((void *)v15 + 4);
    int v26 = v18;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1005E1CC0();
    uint64_t v25 = sub_1000C6914(v19, v20, &v27);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100120E50((uint64_t)v4, type metadata accessor for MailboxTaskLogger);
    _os_log_impl((void *)&_mh_execute_header, v9, (os_log_type_t)v23, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task.", (uint8_t *)v13, 0x33u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v24);
  }
  else
  {
    sub_100120E50((uint64_t)v4, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_10011F464(uint64_t a1, uint64_t a2)
{
  uint64_t v123 = a1;
  uint64_t v124 = a2;
  uint64_t v2 = sub_10000566C(&qword_10070A9C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v112 = (uint64_t)&v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v4 = __chkstk_darwin(v120);
  os_log_t v121 = (os_log_t)((char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v116 = (uint64_t)&v111 - v7;
  __chkstk_darwin(v6);
  uint64_t v119 = (char *)&v111 - v8;
  uint64_t v9 = sub_1005E0ED0();
  uint64_t v126 = *(void *)(v9 - 8);
  uint64_t v127 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v125 = (char *)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v117 = (char *)&v111 - v13;
  __chkstk_darwin(v12);
  uint64_t v115 = (char *)&v111 - v14;
  uint64_t v15 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000566C(&qword_100709E30);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v118 = (uint64_t)&v111 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v111 - v23;
  __chkstk_darwin(v22);
  uint64_t v114 = (uint64_t)&v111 - v25;
  uint64_t v26 = sub_10000566C(&qword_10070A2D0);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (char *)&v111 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10000566C(&qword_100709E38);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v113 = (uint64_t)&v111 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v111 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v38 = (char *)&v111 - v37;
  __chkstk_darwin(v36);
  uint64_t v122 = (char *)&v111 - v39;
  uint64_t v40 = type metadata accessor for DetermineNewestMessages();
  sub_1000079E4(v128 + *(int *)(v40 + 32), (uint64_t)v28, &qword_10070A2D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
  {
    sub_100007A48((uint64_t)v28, &qword_10070A2D0);
    uint64_t v41 = v126;
    uint64_t v42 = v124;
    uint64_t v43 = v127;
    (*(void (**)(char *, uint64_t, uint64_t))(v126 + 16))(v125, v124, v127);
    os_log_t v44 = v121;
    sub_100120DE8(v42, (uint64_t)v121, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v45 = sub_1005E0EB0();
    os_log_type_t v46 = sub_1005E25A0();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v124 = swift_slowAlloc();
      v131[0] = v124;
      *(_DWORD *)uint64_t v47 = 68159235;
      LODWORD(v129) = 2;
      sub_1005E2960();
      *(_WORD *)(v47 + 8) = 256;
      uint64_t v48 = (char *)v44 + *(int *)(v120 + 20);
      LOBYTE(v129) = *v48;
      sub_1005E2960();
      *(_WORD *)(v47 + 11) = 2082;
      uint64_t v49 = *((void *)v48 + 1);
      unint64_t v50 = *((void *)v48 + 2);
      swift_bridgeObjectRetain();
      uint64_t v129 = sub_1000C6914(v49, v50, v131);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 21) = 1040;
      LODWORD(v129) = 2;
      sub_1005E2960();
      *(_WORD *)(v47 + 27) = 512;
      LOWORD(v129) = *((_WORD *)v48 + 12);
      sub_1005E2960();
      *(_WORD *)(v47 + 31) = 2160;
      uint64_t v129 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v47 + 41) = 2085;
      int v51 = *((_DWORD *)v48 + 10);
      uint64_t v129 = *((void *)v48 + 4);
      int v130 = v51;
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_1005E1CC0();
      uint64_t v129 = sub_1000C6914(v52, v53, v131);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100120E50((uint64_t)v121, type metadata accessor for MailboxTaskLogger);
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Did not get any UIDs", (uint8_t *)v47, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v41 + 8))(v125, v127);
    }
    else
    {
      sub_100120E50((uint64_t)v44, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v125, v43);
    }
    uint64_t v59 = (uint64_t)v122;
    uint64_t v58 = v123;
    sub_10001FC6C();
    uint64_t v60 = sub_1005E3680();
    goto LABEL_21;
  }
  uint64_t v54 = v124;
  sub_10001FDF0((uint64_t)v28, (uint64_t)v38, &qword_100709E38);
  sub_1000079E4((uint64_t)v38, (uint64_t)v35, &qword_100709E38);
  MessageIdentifierSet.count.getter();
  uint64_t v55 = (uint64_t)v38;
  if (v56 < 1)
  {
    sub_100007A48((uint64_t)v35, &qword_100709E38);
    uint64_t v57 = 1;
  }
  else
  {
    sub_10001FDF0((uint64_t)v35, (uint64_t)v24, &qword_100709E38);
    sub_10001FDF0((uint64_t)v24, (uint64_t)v17, &qword_100709E30);
    uint64_t v57 = 0;
  }
  uint64_t v61 = v126;
  uint64_t v62 = (uint64_t)v119;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, v57, 1, v18);
  uint64_t v63 = (void (**)(char *, uint64_t, uint64_t))(v61 + 16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_100007A48((uint64_t)v17, &qword_10070A000);
    os_log_type_t v64 = v117;
    uint64_t v65 = v127;
    (*v63)(v117, v54, v127);
    uint64_t v66 = v54;
    uint64_t v67 = v116;
    sub_100120DE8(v66, v116, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    int v68 = sub_1005E0EB0();
    os_log_type_t v69 = sub_1005E25C0();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = swift_slowAlloc();
      uint64_t v126 = swift_slowAlloc();
      v131[0] = v126;
      *(_DWORD *)uint64_t v70 = 68159235;
      LODWORD(v129) = 2;
      uint64_t v125 = (char *)v55;
      sub_1005E2960();
      *(_WORD *)(v70 + 8) = 256;
      uint64_t v71 = v67 + *(int *)(v120 + 20);
      LOBYTE(v129) = *(unsigned char *)v71;
      sub_1005E2960();
      *(_WORD *)(v70 + 11) = 2082;
      uint64_t v72 = v61;
      uint64_t v73 = *(void *)(v71 + 8);
      unint64_t v74 = *(void *)(v71 + 16);
      swift_bridgeObjectRetain();
      uint64_t v129 = sub_1000C6914(v73, v74, v131);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v70 + 21) = 1040;
      LODWORD(v129) = 2;
      sub_1005E2960();
      *(_WORD *)(v70 + 27) = 512;
      LOWORD(v129) = *(_WORD *)(v71 + 24);
      uint64_t v55 = (uint64_t)v125;
      sub_1005E2960();
      *(_WORD *)(v70 + 31) = 2160;
      uint64_t v129 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v70 + 41) = 2085;
      int v75 = *(_DWORD *)(v71 + 40);
      uint64_t v129 = *(void *)(v71 + 32);
      int v130 = v75;
      swift_bridgeObjectRetain();
      uint64_t v76 = sub_1005E1CC0();
      uint64_t v129 = sub_1000C6914(v76, v77, v131);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100120E50(v116, type metadata accessor for MailboxTaskLogger);
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence returned empty list as newest UIDs.", (uint8_t *)v70, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v72 + 8))(v117, v127);
    }
    else
    {
      sub_100120E50(v67, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v61 + 8))(v64, v65);
    }
    goto LABEL_19;
  }
  uint64_t v124 = v29;
  uint64_t v78 = v114;
  sub_10001FDF0((uint64_t)v17, v114, &qword_100709E30);
  uint64_t v79 = v115;
  uint64_t v80 = v127;
  (*v63)(v115, v54, v127);
  sub_100120DE8(v54, v62, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v81 = v113;
  sub_1000079E4(v55, v113, &qword_100709E38);
  uint64_t v82 = v118;
  sub_1000079E4(v78, v118, &qword_100709E30);
  uint64_t v83 = sub_1005E0EB0();
  int v84 = sub_1005E25C0();
  if (!os_log_type_enabled(v83, (os_log_type_t)v84))
  {
    sub_100007A48(v81, &qword_100709E38);

    sub_100007A48(v82, &qword_100709E30);
    sub_100120E50(v62, type metadata accessor for MailboxTaskLogger);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v79, v80);
    sub_100007A48(v78, &qword_100709E30);
LABEL_19:
    uint64_t v59 = (uint64_t)v122;
    uint64_t v58 = v123;
    goto LABEL_20;
  }
  LODWORD(v119) = v84;
  os_log_t v121 = v83;
  uint64_t v125 = (char *)v55;
  uint64_t v85 = swift_slowAlloc();
  uint64_t v117 = (char *)swift_slowAlloc();
  v131[0] = (uint64_t)v117;
  *(_DWORD *)uint64_t v85 = 68159747;
  LODWORD(v129) = 2;
  sub_1005E2960();
  *(_WORD *)(v85 + 8) = 256;
  uint64_t v86 = v62 + *(int *)(v120 + 20);
  LOBYTE(v129) = *(unsigned char *)v86;
  sub_1005E2960();
  *(_WORD *)(v85 + 11) = 2082;
  uint64_t v87 = *(void *)(v86 + 8);
  unint64_t v88 = *(void *)(v86 + 16);
  swift_bridgeObjectRetain();
  uint64_t v129 = sub_1000C6914(v87, v88, v131);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  *(_WORD *)(v85 + 21) = 1040;
  LODWORD(v129) = 2;
  sub_1005E2960();
  *(_WORD *)(v85 + 27) = 512;
  LOWORD(v129) = *(_WORD *)(v86 + 24);
  sub_1005E2960();
  *(_WORD *)(v85 + 31) = 2160;
  uint64_t v129 = 0x786F626C69616DLL;
  sub_1005E2960();
  *(_WORD *)(v85 + 41) = 2085;
  int v89 = *(_DWORD *)(v86 + 40);
  uint64_t v129 = *(void *)(v86 + 32);
  int v130 = v89;
  swift_bridgeObjectRetain();
  uint64_t v90 = sub_1005E1CC0();
  uint64_t v129 = sub_1000C6914(v90, v91, v131);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  sub_100120E50(v62, type metadata accessor for MailboxTaskLogger);
  *(_WORD *)(v85 + 51) = 2048;
  MessageIdentifierSet.count.getter();
  uint64_t v93 = v92;
  sub_100007A48(v81, &qword_100709E38);
  uint64_t v129 = v93;
  sub_1005E2960();
  *(_WORD *)(v85 + 61) = 2082;
  uint64_t result = sub_1000702CC();
  if ((result & 0x100000000) != 0) {
    goto LABEL_25;
  }
  unsigned int v95 = result;
  uint64_t v96 = v112;
  MessageIdentifierSet.ranges.getter(v112);
  uint64_t v97 = sub_100070018();
  char v99 = v98;
  uint64_t result = sub_100007A48(v96, &qword_10070A9C0);
  if (v99)
  {
LABEL_26:
    __break(1u);
    return result;
  }
  uint64_t v59 = (uint64_t)v122;
  uint64_t v58 = v123;
  uint64_t v55 = (uint64_t)v125;
  uint64_t v100 = v126;
  if (HIDWORD(v97) < v95)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v129 = __PAIR64__(HIDWORD(v97), v95);
  uint64_t v101 = sub_10000566C(&qword_10070A9B8);
  uint64_t v102 = MessageIdentifierRange.debugDescription.getter(v101);
  uint64_t v129 = sub_1000C6914(v102, v103, v131);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  sub_100007A48(v118, &qword_100709E30);
  os_log_t v104 = v121;
  _os_log_impl((void *)&_mh_execute_header, v121, (os_log_type_t)v119, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence returned %ld UIDs in range %{public}s as newest UIDs.", (uint8_t *)v85, 0x47u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  (*(void (**)(char *, uint64_t))(v100 + 8))(v115, v127);
  sub_100007A48(v114, &qword_100709E30);
LABEL_20:
  uint64_t v60 = sub_10001FDF0(v55, v59, &qword_100709E38);
LABEL_21:
  unint64_t v105 = *(void **)(v128 + 88);
  unsigned int v106 = *(_DWORD *)(v128 + 96);
  __chkstk_darwin(v60);
  *(&v111 - 2) = v59;
  if (*(unsigned char *)(v58 + 184) == 1)
  {
    uint64_t v108 = *(void *)(v58 + 168);
    uint64_t v107 = *(void *)(v58 + 176);
    uint64_t v129 = *(void *)(v58 + 160);
    uint64_t v109 = v129;
    swift_bridgeObjectRetain();
    sub_10004A48C((uint64_t)&v129, v105, v106, 0, (void (*)(char *))sub_1001208AC, &v111 - 4);
    sub_10000F0D4(v109, v108, v107, 1);
    uint64_t v110 = v129;
    *(void *)(v58 + 168) = 0;
    *(void *)(v58 + 176) = 0;
    *(void *)(v58 + 160) = v110;
    *(unsigned char *)(v58 + 184) = 1;
  }
  return sub_100007A48(v59, &qword_100709E38);
}

uint64_t sub_100120578(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for MailboxSyncState() + 64);
  sub_100007A48(v3, &qword_10070A390);
  sub_1000079E4(a2, v3, &qword_100709E38);
  uint64_t v4 = type metadata accessor for NewestMessages();
  uint64_t v5 = *(int *)(v4 + 24);
  *(void *)(v3 + *(int *)(v4 + 20)) = 0;
  *(void *)(v3 + v5) = 0;
  uint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v6(v3, 0, 1, v4);
}

uint64_t sub_100120628@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  __int16 v3 = *(_WORD *)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 88);
  int v5 = *(_DWORD *)(v1 + 96);
  *(void *)a1 = *(void *)(v1 + 64);
  *(void *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_10012067C()
{
  if (qword_100709D78 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001206D8(uint64_t a1)
{
  return sub_10011F060(a1);
}

uint64_t sub_1001206F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10000566C(&qword_10070D298);
  __int16 v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

unint64_t sub_100120760@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, unint64_t *a3@<X8>)
{
  unint64_t result = sub_1001208B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100120798(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100120B44(a1, a2, a3, a5);
}

unint64_t sub_1001207AC()
{
  return 0xD000000000000017;
}

unint64_t sub_1001207CC()
{
  unint64_t result = qword_10070D1D0;
  if (!qword_10070D1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070D1D0);
  }
  return result;
}

void *sub_100120820()
{
  return &protocol witness table for Never;
}

unint64_t sub_10012082C(uint64_t a1)
{
  unint64_t result = sub_100120854();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100120854()
{
  unint64_t result = qword_10070D288;
  if (!qword_10070D288)
  {
    type metadata accessor for DetermineNewestMessages();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070D288);
  }
  return result;
}

uint64_t sub_1001208AC(uint64_t a1)
{
  return sub_100120578(a1, *(void *)(v1 + 16));
}

unint64_t sub_1001208B4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v29 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v25 - v9;
  uint64_t v11 = sub_1001057D8(a2);
  uint64_t v12 = v11[2];
  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v22 = swift_allocObject();
    uint64_t v23 = *(void *)(v2 + 72);
    *(void *)(v22 + 16) = *(void *)(v2 + 64);
    *(void *)(v22 + 24) = v23;
    *(void *)(v22 + 32) = 521;
    uint64_t v21 = v22 | 0x4000000000000004;
    swift_bridgeObjectRetain();
    return v21;
  }
  v25[0] = v2;
  v25[1] = v11;
  uint64_t v13 = 0;
  uint64_t v27 = v11 + 4;
  uint64_t v28 = a1;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v26 = v12;
  while (!v14)
  {
LABEL_4:
    if (++v13 == v12)
    {
      swift_bridgeObjectRelease();
      uint64_t v2 = v25[0];
      goto LABEL_13;
    }
  }
  int v15 = *((_DWORD *)v27 + v13);
  uint64_t v16 = v29;
  uint64_t v17 = a1 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  swift_bridgeObjectRetain_n();
  uint64_t v18 = *(void *)(v16 + 72);
  uint64_t v19 = v14;
  while (1)
  {
    sub_100120DE8(v17, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    sub_100120DE8((uint64_t)v10, (uint64_t)v8, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_100120E50((uint64_t)v8, type metadata accessor for TaskHistory.Previous);
LABEL_8:
    sub_100120E50((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    v17 += v18;
    if (!--v19)
    {
      a1 = v28;
      swift_bridgeObjectRelease_n();
      uint64_t v12 = v26;
      goto LABEL_4;
    }
  }
  int v20 = *((_DWORD *)v8 + 2);
  sub_10007C4A4(*(void *)v8);
  if (v20 != v15) {
    goto LABEL_8;
  }
  sub_100120E50((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return 0xF000000000000007;
}

uint64_t sub_100120B44(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_10000566C(&qword_10070D290);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_10000566C(&qword_100709E38);
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v15 = sub_1001057D8(a4);
  uint64_t v16 = v15[2];
  if (v16)
  {
    uint64_t v29 = v4;
    uint64_t v17 = 0;
    while ((sub_1001652E0(*((_DWORD *)v15 + v17 + 8), a2, a3) & 1) == 0)
    {
      if (v16 == ++v17) {
        goto LABEL_5;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (((a1 >> 59) & 0x1E | (a1 >> 2) & 1) == 0xA)
    {
      uint64_t v19 = (uint64_t *)swift_projectBox();
      uint64_t v20 = *(int *)(v9 + 48);
      uint64_t v21 = (uint64_t)v11 + v20;
      uint64_t v22 = *(int *)(v9 + 64);
      uint64_t v23 = *v19;
      uint64_t v24 = v19[1];
      *uint64_t v11 = *v19;
      v11[1] = v24;
      sub_1000079E4((uint64_t)v19 + v20, (uint64_t)v11 + v20, &qword_100709E38);
      uint64_t v25 = *(uint64_t *)((char *)v19 + v22);
      *(uint64_t *)((char *)v11 + v22) = v25;
      uint64_t v26 = v29;
      if (*(void *)(v29 + 72) == v24 && sub_1000255D4(*(void *)(v29 + 64), v23))
      {
        sub_10001FDF0(v21, (uint64_t)v14, &qword_100709E38);
        if (v25 == 521)
        {
          uint64_t v27 = v26 + *(int *)(type metadata accessor for DetermineNewestMessages() + 32);
          sub_100007A48(v27, &qword_10070A2D0);
          sub_10001FDF0((uint64_t)v14, v27, &qword_100709E38);
          return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v31);
        }
        uint64_t v28 = (uint64_t)v14;
      }
      else
      {
        uint64_t v28 = v21;
      }
      return sub_100007A48(v28, &qword_100709E38);
    }
  }
  else
  {
LABEL_5:
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100120DE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100120E50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100120EB0()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

unsigned char *storeEnumTagSinglePayload for DetermineNewestMessages.ActionID(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100120F84);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetermineNewestMessages.ActionID()
{
  return &type metadata for DetermineNewestMessages.ActionID;
}

unint64_t sub_100120FC0()
{
  unint64_t result = qword_10070D2A0;
  if (!qword_10070D2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070D2A0);
  }
  return result;
}

uint64_t sub_100121018(unsigned int *a1, unsigned int *a2)
{
  return sub_1001238A8(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32), *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32));
}

Swift::Int sub_100121034()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA030);
  qword_100761748 = result;
  return result;
}

uint64_t sub_10012105C()
{
  v5[8] = 0;
  *(void *)uint64_t v5 = *(unsigned __int8 *)(v0 + 9);
  sub_1005E2E90();
  v6._countAndFlagsBits = 45;
  v6._object = (void *)0xE100000000000000;
  sub_1005E1E30(v6);
  uint64_t v1 = 65;
  if (*(unsigned char *)(v0 + 112) != 1) {
    uint64_t v1 = 66;
  }
  if (*(unsigned char *)(v0 + 112)) {
    v2._countAndFlagsBits = v1;
  }
  else {
    v2._countAndFlagsBits = 1919251285;
  }
  if (*(unsigned char *)(v0 + 112)) {
    int v3 = (void *)0xE100000000000000;
  }
  else {
    int v3 = (void *)0xE400000000000000;
  }
  v2._object = v3;
  sub_1005E1E30(v2);
  swift_bridgeObjectRelease();
  return *(void *)&v5[1];
}

uint64_t sub_100121120(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v141 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v141);
  *(void *)&long long v140 = (char *)&v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DownloadTask(0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v143 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v142 = (uint64_t)&v134 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  char v156 = (char *)&v134 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  os_log_t v155 = (os_log_t)((char *)&v134 - v13);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v134 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v146 = (int *)((char *)&v134 - v18);
  __chkstk_darwin(v17);
  os_log_t v153 = (os_log_t)((char *)&v134 - v19);
  uint64_t v144 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v20 = __chkstk_darwin(v144);
  uint64_t v22 = (char *)&v134 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v134 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v149 = (uint64_t)&v134 - v27;
  __chkstk_darwin(v26);
  uint64_t v147 = (char *)&v134 - v28;
  int64_t v154 = sub_1005E0ED0();
  uint64_t v29 = *(void *)(v154 - 8);
  uint64_t v30 = __chkstk_darwin(v154);
  unint64_t v148 = (char *)&v134 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v134 - v33;
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v37 = (char *)&v134 - v36;
  __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v134 - v38;
  uint64_t v139 = (char *)v5;
  sub_10000566C(&qword_100709E60);
  char v40 = sub_1005E3630();
  uint64_t v145 = v29;
  uint64_t v41 = *(void (**)(char *, uint64_t, int64_t))(v29 + 16);
  uint64_t v150 = a1;
  unint64_t v151 = v25;
  os_log_t v152 = v22;
  uint64_t v157 = v41;
  uint64_t v158 = v29 + 16;
  if (v40)
  {
    v41(v39, a1, v154);
    sub_10012611C(a1, (uint64_t)v147, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_10012611C(v2, (uint64_t)v153, type metadata accessor for DownloadTask);
    uint64_t v42 = (uint64_t)v146;
    sub_10012611C(v2, (uint64_t)v146, type metadata accessor for DownloadTask);
    sub_10012611C(v2, (uint64_t)v16, type metadata accessor for DownloadTask);
    uint64_t v43 = sub_1005E0EB0();
    int v44 = sub_1005E25C0();
    if (os_log_type_enabled(v43, (os_log_type_t)v44))
    {
      LODWORD(v149) = v44;
      os_log_t v155 = v43;
      char v156 = v39;
      uint64_t v143 = v16;
      *(void *)&long long v138 = v2;
      uint64_t v137 = (uint64_t)v34;
      uint64_t v45 = swift_slowAlloc();
      uint64_t v142 = swift_slowAlloc();
      v161[0] = v142;
      *(_DWORD *)uint64_t v45 = 68160003;
      LODWORD(v159) = 2;
      sub_1005E2960();
      *(_WORD *)(v45 + 8) = 256;
      uint64_t v46 = v140;
      uint64_t v47 = (uint64_t)v147;
      uint64_t v48 = &v147[*(int *)(v144 + 20)];
      LOBYTE(v159) = *v48;
      sub_1005E2960();
      *(_WORD *)(v45 + 11) = 2082;
      uint64_t v49 = *((void *)v48 + 1);
      unint64_t v50 = *((void *)v48 + 2);
      swift_bridgeObjectRetain();
      uint64_t v159 = sub_1000C6914(v49, v50, v161);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 21) = 1040;
      LODWORD(v159) = 2;
      sub_1005E2960();
      *(_WORD *)(v45 + 27) = 512;
      LOWORD(v159) = *((_WORD *)v48 + 12);
      sub_1005E2960();
      *(_WORD *)(v45 + 31) = 2160;
      uint64_t v159 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v45 + 41) = 2085;
      int v51 = *((_DWORD *)v48 + 10);
      uint64_t v159 = *((void *)v48 + 4);
      int v160 = v51;
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_1005E1CC0();
      uint64_t v159 = sub_1000C6914(v52, v53, v161);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100125CC0(v47, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v45 + 51) = 2082;
      os_log_t v54 = v153;
      uint64_t v55 = swift_bridgeObjectRetain();
      sub_1001712FC(v55);
      uint64_t v56 = MessageIdentifierSet.debugDescription.getter(v141);
      unint64_t v58 = v57;
      sub_100007A48(v46, &qword_100709E38);
      uint64_t v159 = sub_1000C6914(v56, v58, v161);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100125CC0((uint64_t)v54, type metadata accessor for DownloadTask);
      *(_WORD *)(v45 + 61) = 2080;
      if (*((unsigned char *)v146 + 112))
      {
        unint64_t v59 = 0xE100000000000000;
        if (*((unsigned char *)v146 + 112) == 1) {
          uint64_t v60 = 65;
        }
        else {
          uint64_t v60 = 66;
        }
      }
      else
      {
        uint64_t v60 = 1919251285;
        unint64_t v59 = 0xE400000000000000;
      }
      a1 = v150;
      uint64_t v25 = v151;
      uint64_t v34 = (char *)v137;
      uint64_t v88 = (uint64_t)v143;
      uint64_t v159 = sub_1000C6914(v60, v59, v161);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100125CC0((uint64_t)v146, type metadata accessor for DownloadTask);
      *(_WORD *)(v45 + 71) = 2082;
      if (*(unsigned char *)(v88 + 9)) {
        uint64_t v89 = 6581810;
      }
      else {
        uint64_t v89 = 7631665;
      }
      uint64_t v159 = sub_1000C6914(v89, 0xE300000000000000, v161);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100125CC0(v88, type metadata accessor for DownloadTask);
      os_log_t v90 = v155;
      _os_log_impl((void *)&_mh_execute_header, v155, (os_log_type_t)v149, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task for %{public}s %s '%{public}s'", (uint8_t *)v45, 0x51u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v91 = (uint64_t)v156;
      int64_t v87 = v154;
      os_log_t v155 = *(os_log_t *)(v145 + 8);
      char v156 = (char *)(v145 + 8);
      ((void (*)(uint64_t, int64_t))v155)(v91, v154);
      uint64_t v22 = v152;
      uint64_t v2 = v138;
      goto LABEL_25;
    }
    sub_100125CC0((uint64_t)v147, type metadata accessor for MailboxTaskLogger);
    sub_100125CC0((uint64_t)v153, type metadata accessor for DownloadTask);
    sub_100125CC0(v42, type metadata accessor for DownloadTask);
    sub_100125CC0((uint64_t)v16, type metadata accessor for DownloadTask);

    uint64_t v84 = v145 + 8;
    uint64_t v85 = *(NSObject **)(v145 + 8);
    uint64_t v86 = v39;
  }
  else
  {
    v41(v37, a1, v154);
    sub_10012611C(a1, v149, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_10012611C(v2, (uint64_t)v155, type metadata accessor for DownloadTask);
    sub_10012611C(v2, (uint64_t)v156, type metadata accessor for DownloadTask);
    uint64_t v61 = v142;
    sub_10012611C(v2, v142, type metadata accessor for DownloadTask);
    uint64_t v62 = (uint64_t)v143;
    sub_10012611C(v2, (uint64_t)v143, type metadata accessor for DownloadTask);
    uint64_t v63 = v2;
    os_log_type_t v64 = sub_1005E0EB0();
    int v65 = sub_1005E25C0();
    os_log_t v153 = v64;
    BOOL v66 = os_log_type_enabled(v64, (os_log_type_t)v65);
    uint64_t v2 = v63;
    uint64_t v67 = (uint64_t)v156;
    if (v66)
    {
      LODWORD(v146) = v65;
      uint64_t v147 = v37;
      *(void *)&long long v138 = v2;
      uint64_t v137 = (uint64_t)v34;
      uint64_t v68 = swift_slowAlloc();
      uint64_t v136 = swift_slowAlloc();
      v161[0] = v136;
      *(_DWORD *)uint64_t v68 = 68160259;
      LODWORD(v159) = 2;
      sub_1005E2960();
      *(_WORD *)(v68 + 8) = 256;
      uint64_t v69 = v140;
      uint64_t v70 = v149;
      uint64_t v71 = v149 + *(int *)(v144 + 20);
      LOBYTE(v159) = *(unsigned char *)v71;
      sub_1005E2960();
      *(_WORD *)(v68 + 11) = 2082;
      uint64_t v72 = *(void *)(v71 + 8);
      unint64_t v73 = *(void *)(v71 + 16);
      swift_bridgeObjectRetain();
      uint64_t v159 = sub_1000C6914(v72, v73, v161);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 21) = 1040;
      LODWORD(v159) = 2;
      sub_1005E2960();
      *(_WORD *)(v68 + 27) = 512;
      LOWORD(v159) = *(_WORD *)(v71 + 24);
      sub_1005E2960();
      *(_WORD *)(v68 + 31) = 2160;
      uint64_t v159 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v68 + 41) = 2085;
      int v74 = *(_DWORD *)(v71 + 40);
      uint64_t v159 = *(void *)(v71 + 32);
      int v160 = v74;
      swift_bridgeObjectRetain();
      uint64_t v75 = sub_1005E1CC0();
      uint64_t v159 = sub_1000C6914(v75, v76, v161);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100125CC0(v70, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v68 + 51) = 2082;
      os_log_t v77 = v155;
      uint64_t v78 = swift_bridgeObjectRetain();
      sub_1001712FC(v78);
      uint64_t v79 = MessageIdentifierSet.debugDescription.getter(v141);
      unint64_t v81 = v80;
      sub_100007A48(v69, &qword_100709E38);
      uint64_t v159 = sub_1000C6914(v79, v81, v161);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100125CC0((uint64_t)v77, type metadata accessor for DownloadTask);
      *(_WORD *)(v68 + 61) = 2080;
      if (v156[112])
      {
        unint64_t v82 = 0xE100000000000000;
        if (v156[112] == 1) {
          uint64_t v83 = 65;
        }
        else {
          uint64_t v83 = 66;
        }
      }
      else
      {
        uint64_t v83 = 1919251285;
        unint64_t v82 = 0xE400000000000000;
      }
      uint64_t v25 = v151;
      uint64_t v34 = (char *)v137;
      uint64_t v92 = v138;
      uint64_t v159 = sub_1000C6914(v83, v82, v161);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100125CC0((uint64_t)v156, type metadata accessor for DownloadTask);
      *(_WORD *)(v68 + 71) = 2082;
      uint64_t v93 = v142;
      if (*(unsigned char *)(v142 + 9)) {
        uint64_t v94 = 6581810;
      }
      else {
        uint64_t v94 = 7631665;
      }
      uint64_t v159 = sub_1000C6914(v94, 0xE300000000000000, v161);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100125CC0(v93, type metadata accessor for DownloadTask);
      *(_WORD *)(v68 + 81) = 2082;
      uint64_t v95 = (uint64_t)v143;
      uint64_t v96 = MessageIdentifierSet.debugDescription.getter(v141);
      uint64_t v159 = sub_1000C6914(v96, v97, v161);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100125CC0(v95, type metadata accessor for DownloadTask);
      os_log_t v98 = v153;
      _os_log_impl((void *)&_mh_execute_header, v153, (os_log_type_t)v146, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task for %{public}s %s '%{public}s' -- full message download for %{public}s", (uint8_t *)v68, 0x5Bu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      int64_t v87 = v154;
      os_log_t v155 = *(os_log_t *)(v145 + 8);
      char v156 = (char *)(v145 + 8);
      ((void (*)(char *, int64_t))v155)(v147, v154);
      a1 = v150;
      uint64_t v22 = v152;
      uint64_t v2 = v92;
      goto LABEL_25;
    }
    sub_100125CC0(v149, type metadata accessor for MailboxTaskLogger);
    sub_100125CC0((uint64_t)v155, type metadata accessor for DownloadTask);
    sub_100125CC0(v67, type metadata accessor for DownloadTask);
    sub_100125CC0(v61, type metadata accessor for DownloadTask);
    sub_100125CC0(v62, type metadata accessor for DownloadTask);

    uint64_t v84 = v145 + 8;
    uint64_t v85 = *(NSObject **)(v145 + 8);
    uint64_t v86 = v37;
  }
  int64_t v87 = v154;
  os_log_t v155 = v85;
  char v156 = (char *)v84;
  ((void (*)(char *, int64_t))v85)(v86, v154);
LABEL_25:
  uint64_t v99 = *(void *)(v2 + 104);
  uint64_t v100 = *(void *)(v99 + 64);
  os_log_t v153 = (os_log_t)(v99 + 64);
  uint64_t v101 = 1 << *(unsigned char *)(v99 + 32);
  uint64_t v102 = -1;
  if (v101 < 64) {
    uint64_t v102 = ~(-1 << v101);
  }
  unint64_t v103 = v102 & v100;
  int64_t v154 = (unint64_t)(v101 + 63) >> 6;
  uint64_t v146 = &v160;
  uint64_t v147 = (char *)&v159 + 4;
  uint64_t v142 = (uint64_t)&v159 + 2;
  uint64_t v143 = (char *)&v159 + 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v105 = 0;
  *(void *)&long long v106 = 68159491;
  long long v140 = v106;
  uint64_t v139 = (char *)&type metadata for Any + 8;
  *(void *)&long long v106 = 68159747;
  long long v138 = v106;
  uint64_t v149 = v99;
  while (v103)
  {
    unint64_t v107 = __clz(__rbit64(v103));
    v103 &= v103 - 1;
    unint64_t v108 = v107 | (v105 << 6);
LABEL_44:
    int v112 = *(_DWORD *)(*(void *)(v99 + 48) + 4 * v108);
    uint64_t v113 = *(void *)(v99 + 56) + 16 * v108;
    if (*(unsigned char *)(v113 + 8))
    {
      v157(v34, a1, v87);
      sub_10012611C(a1, (uint64_t)v25, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v114 = sub_1005E0EB0();
      os_log_type_t v115 = sub_1005E2590();
      if (os_log_type_enabled(v114, v115))
      {
        uint64_t v122 = swift_slowAlloc();
        os_log_t v155 = (os_log_t)swift_slowAlloc();
        v161[0] = (uint64_t)v155;
        *(_DWORD *)uint64_t v122 = v140;
        LODWORD(v159) = 2;
        sub_1005E2960();
        *(_WORD *)(v122 + 8) = 256;
        uint64_t v123 = &v151[*(int *)(v144 + 20)];
        LOBYTE(v159) = *v123;
        sub_1005E2960();
        *(_WORD *)(v122 + 11) = 2082;
        uint64_t v137 = v122 + 13;
        unint64_t v124 = *((void *)v123 + 2);
        uint64_t v136 = *((void *)v123 + 1);
        LODWORD(v141) = v112;
        swift_bridgeObjectRetain();
        uint64_t v159 = sub_1000C6914(v136, v124, v161);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v122 + 21) = 1040;
        LODWORD(v159) = 2;
        sub_1005E2960();
        *(_WORD *)(v122 + 27) = 512;
        LOWORD(v159) = *((_WORD *)v123 + 12);
        sub_1005E2960();
        *(_WORD *)(v122 + 31) = 2160;
        uint64_t v159 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v122 + 41) = 2085;
        uint64_t v137 = v122 + 43;
        uint64_t v125 = *((void *)v123 + 4);
        int v126 = *((_DWORD *)v123 + 10);
        uint64_t v25 = v151;
        uint64_t v159 = v125;
        int v160 = v126;
        swift_bridgeObjectRetain();
        uint64_t v127 = sub_1005E1CC0();
        uint64_t v159 = sub_1000C6914(v127, v128, v161);
        sub_1005E2960();
        uint64_t v99 = v149;
        swift_bridgeObjectRelease();
        sub_100125CC0((uint64_t)v25, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v122 + 51) = 1024;
        LODWORD(v159) = v141;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v114, v115, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u, unknown size", (uint8_t *)v122, 0x39u);
        swift_arrayDestroy();
        swift_slowDealloc();
        a1 = v150;
        swift_slowDealloc();

        os_log_t v155 = *(os_log_t *)(v145 + 8);
      }
      else
      {
        sub_100125CC0((uint64_t)v25, type metadata accessor for MailboxTaskLogger);
      }
      uint64_t result = ((uint64_t (*)(char *, int64_t))v155)(v34, v87);
      uint64_t v22 = v152;
    }
    else
    {
      uint64_t v116 = (uint64_t)v22;
      uint64_t v117 = v34;
      uint64_t v118 = *(void *)v113;
      uint64_t v119 = v148;
      v157(v148, a1, v87);
      sub_10012611C(a1, v116, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v120 = sub_1005E0EB0();
      os_log_type_t v121 = sub_1005E2590();
      if (os_log_type_enabled(v120, v121))
      {
        uint64_t v129 = swift_slowAlloc();
        uint64_t v137 = swift_slowAlloc();
        v161[0] = v137;
        *(_DWORD *)uint64_t v129 = v138;
        LODWORD(v159) = 2;
        sub_1005E2960();
        *(_WORD *)(v129 + 8) = 256;
        os_log_t v155 = (os_log_t)&v152[*(int *)(v144 + 20)];
        LOBYTE(v159) = v155->isa;
        sub_1005E2960();
        *(_WORD *)(v129 + 11) = 2082;
        uint64_t v136 = v129 + 13;
        Class isa = v155[2].isa;
        Class v135 = v155[1].isa;
        unint64_t v141 = (unint64_t)isa;
        swift_bridgeObjectRetain();
        uint64_t v159 = sub_1000C6914((uint64_t)v135, v141, v161);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v129 + 21) = 1040;
        LODWORD(v159) = 2;
        sub_1005E2960();
        *(_WORD *)(v129 + 27) = 512;
        LOWORD(v159) = v155[3].isa;
        sub_1005E2960();
        *(_WORD *)(v129 + 31) = 2160;
        uint64_t v159 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v129 + 41) = 2085;
        unint64_t v141 = v129 + 43;
        int v131 = (int)v155[5].isa;
        uint64_t v159 = (uint64_t)v155[4].isa;
        int v160 = v131;
        swift_bridgeObjectRetain();
        uint64_t v132 = sub_1005E1CC0();
        os_log_t v155 = v133;
        uint64_t v159 = sub_1000C6914(v132, (unint64_t)v133, v161);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100125CC0((uint64_t)v152, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v129 + 51) = 1024;
        LODWORD(v159) = v112;
        sub_1005E2960();
        *(_WORD *)(v129 + 57) = 2048;
        uint64_t v159 = v118;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v120, v121, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u, size %{iec-bytes}ld", (uint8_t *)v129, 0x43u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v116 = (uint64_t)v152;
        swift_slowDealloc();

        os_log_t v155 = *(os_log_t *)(v145 + 8);
      }
      else
      {
        sub_100125CC0(v116, type metadata accessor for MailboxTaskLogger);
      }
      uint64_t result = ((uint64_t (*)(char *, int64_t))v155)(v119, v87);
      a1 = v150;
      uint64_t v25 = v151;
      uint64_t v34 = v117;
      uint64_t v22 = (char *)v116;
      uint64_t v99 = v149;
    }
  }
  int64_t v109 = v105 + 1;
  if (__OFADD__(v105, 1))
  {
    __break(1u);
    goto LABEL_55;
  }
  if (v109 >= v154) {
    return swift_release();
  }
  unint64_t v110 = (unint64_t)v153[v109].isa;
  ++v105;
  if (v110) {
    goto LABEL_43;
  }
  int64_t v105 = v109 + 1;
  if (v109 + 1 >= v154) {
    return swift_release();
  }
  unint64_t v110 = (unint64_t)v153[v105].isa;
  if (v110) {
    goto LABEL_43;
  }
  int64_t v105 = v109 + 2;
  if (v109 + 2 >= v154) {
    return swift_release();
  }
  unint64_t v110 = (unint64_t)v153[v105].isa;
  if (v110)
  {
LABEL_43:
    unint64_t v103 = (v110 - 1) & v110;
    unint64_t v108 = __clz(__rbit64(v110)) + (v105 << 6);
    goto LABEL_44;
  }
  int64_t v111 = v109 + 3;
  if (v111 >= v154) {
    return swift_release();
  }
  unint64_t v110 = (unint64_t)v153[v111].isa;
  if (v110)
  {
    int64_t v105 = v111;
    goto LABEL_43;
  }
  while (1)
  {
    int64_t v105 = v111 + 1;
    if (__OFADD__(v111, 1)) {
      break;
    }
    if (v105 >= v154) {
      return swift_release();
    }
    unint64_t v110 = (unint64_t)v153[v105].isa;
    ++v111;
    if (v110) {
      goto LABEL_43;
    }
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_100122850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v34 = a6;
  uint64_t v35 = a5;
  uint64_t v11 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000566C(&qword_10070D4E8);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v30 - v18;
  long long v20 = *(_OWORD *)(v6 + 80);
  long long v36 = *(_OWORD *)(v6 + 64);
  long long v37 = v20;
  long long v38 = *(_OWORD *)(v6 + 96);
  char v39 = *(unsigned char *)(v6 + 112);
  uint64_t v21 = v6 + *(int *)(type metadata accessor for DownloadTask(0) + 40);
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v30 = a4;
  sub_1001262EC(a2, a3, v21, (uint64_t)v19);
  sub_10012611C(v35, (uint64_t)v13, type metadata accessor for MailboxTaskLogger);
  uint64_t v22 = sub_10000566C(&qword_10070D4F0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v24(v19, 1, v22) == 1)
  {
    uint64_t v25 = v30;
    sub_10012903C(v32, v33, (uint64_t)v13, v17);
    int v26 = v24(v17, 1, v22);
    uint64_t v27 = v34;
    if (v26 == 1)
    {
      sub_10012A414(v31, v32, v33, v25, v34);
      sub_100125CC0((uint64_t)v13, type metadata accessor for MailboxTaskLogger);
      sub_100007A48((uint64_t)v17, &qword_10070D4E8);
    }
    else
    {
      sub_100125CC0((uint64_t)v13, type metadata accessor for MailboxTaskLogger);
      sub_10001FDF0((uint64_t)v17, v27, &qword_10070D4F0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v27, 0, 1, v22);
    }
    return sub_100007A48((uint64_t)v19, &qword_10070D4E8);
  }
  else
  {
    sub_100125CC0((uint64_t)v13, type metadata accessor for MailboxTaskLogger);
    uint64_t v28 = v34;
    sub_10001FDF0((uint64_t)v19, v34, &qword_10070D4F0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v28, 0, 1, v22);
  }
}

uint64_t sub_100122B74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v28 = a2;
  uint64_t v5 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v5 - 8);
  uint64_t v29 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v32 = 0;
  uint64_t v7 = *(void **)(v2 + 88);
  unsigned int v8 = *(_DWORD *)(v3 + 96);
  v30[2] = v3;
  v30[3] = &v32;
  uint64_t v9 = (void *)(a1 + 168);
  uint64_t v10 = *(void *)(a1 + 168);
  uint64_t v11 = *(void *)(a1 + 160);
  uint64_t v12 = *(void *)(a1 + 176);
  int v13 = *(unsigned __int8 *)(a1 + 184);
  if (v13 == 1)
  {
    uint64_t v31 = *(void *)(a1 + 160);
    swift_bridgeObjectRetain();
    sub_10005636C(v11, v10, v12, 1);
    sub_100049130((uint64_t)&v31, v7, v8, 0, (void (*)(char *))sub_100125BF4, v30);
    sub_10000F0D4(v11, v10, v12, 1);
    swift_bridgeObjectRelease();
    uint64_t v10 = 0;
    uint64_t v12 = 0;
    uint64_t v11 = v31;
    *(void *)(a1 + 160) = v31;
    *uint64_t v9 = 0;
    *(void *)(a1 + 176) = 0;
    *(unsigned char *)(a1 + 184) = 1;
  }
  uint64_t v14 = (uint64_t)v29;
  if (!*(unsigned char *)(v3 + 112))
  {
    uint64_t v15 = v3 + *(int *)(type metadata accessor for DownloadTask(0) + 36);
    uint64_t v16 = v15 + *(int *)(_s18InProgressMessagesVMa(0) + 32);
    sub_10000566C(&qword_100709E60);
    if ((sub_1005E3630() & 1) == 0)
    {
      uint64_t v27 = *(void *)(v3 + 72);
      uint64_t v17 = swift_bridgeObjectRetain();
      sub_100046468(v17, v27, v16, v28);
      uint64_t v14 = (uint64_t)v29;
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_1001712FC(v18);
  long long v20 = *(void **)(v3 + 88);
  unsigned int v21 = *(_DWORD *)(v3 + 96);
  if (v13)
  {
    uint64_t v31 = v11;
    swift_bridgeObjectRetain();
    sub_10005636C(v11, v10, v12, 1);
    sub_1000479D0((uint64_t)&v31, (uint64_t)v20, v21, v14);
    sub_10000F0D4(v11, v10, v12, 1);
    uint64_t v19 = swift_bridgeObjectRelease();
    *(void *)(a1 + 160) = v31;
    *uint64_t v9 = 0;
    *(void *)(a1 + 176) = 0;
    *(unsigned char *)(a1 + 184) = 1;
  }
  if (v32 == 1)
  {
    __chkstk_darwin(v19);
    *(&v26 - 2) = v3;
    if (*(unsigned char *)(a1 + 184) == 1)
    {
      uint64_t v23 = *(void *)(a1 + 168);
      uint64_t v22 = *(void *)(a1 + 176);
      uint64_t v31 = *(void *)(a1 + 160);
      uint64_t v24 = v31;
      swift_bridgeObjectRetain();
      sub_10005636C(v24, v23, v22, 1);
      sub_10004A48C((uint64_t)&v31, v20, v21, 0, (void (*)(char *))sub_100125BFC, &v26 - 4);
      sub_10000F0D4(v24, v23, v22, 1);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 160) = v31;
      *uint64_t v9 = 0;
      *(void *)(a1 + 176) = 0;
      *(unsigned char *)(a1 + 184) = 1;
      uint64_t v14 = (uint64_t)v29;
    }
  }
  return sub_100007A48(v14, &qword_100709E38);
}

uint64_t sub_100122E90(uint64_t a1, uint64_t a2, BOOL *a3)
{
  uint64_t v61 = a3;
  uint64_t v60 = sub_10000566C(&qword_100709E60);
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v56 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000566C(&qword_10070A378);
  __chkstk_darwin(v6);
  unsigned int v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MessagesPendingDownload();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v55 = (uint64_t *)((char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  int v13 = (uint64_t *)((char *)&v53 - v12);
  uint64_t v14 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v17 = *(unsigned __int8 *)(a2 + 9);
  uint64_t v57 = a2;
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_1001712FC(v18);
  uint64_t v54 = type metadata accessor for PendingPersistenceUpdates();
  uint64_t v19 = *(int *)(v54 + 28);
  uint64_t v59 = a1;
  uint64_t v20 = a1 + v19;
  uint64_t v64 = a1 + v19;
  int v62 = v17;
  if (v17 == 1) {
    uint64_t v20 = v64 + *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
  }
  sub_10012611C(v20, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  sub_100026334((uint64_t)v16, (uint64_t)v8);
  uint64_t v63 = v16;
  uint64_t v21 = MessageIdentifierSet.startIndex.getter(v14);
  uint64_t v23 = v22;
  uint64_t v24 = (uint64_t *)&v8[*(int *)(v6 + 36)];
  *uint64_t v24 = v21;
  v24[1] = v22;
  if (v21 != MessageIdentifierSet.endIndex.getter(v14) || v23 != v25)
  {
    do
    {
      MessageIdentifierSet.subscript.getter();
      uint64_t v31 = v66;
      MessageIdentifierSet.index(_:offsetBy:)();
      *uint64_t v24 = v32;
      v24[1] = v33;
      uint64_t v34 = sub_100024260(v31);
      if (v35)
      {
        uint64_t v36 = v34;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v38 = *v13;
        uint64_t v66 = *v13;
        *int v13 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10009795C();
          uint64_t v38 = v66;
        }
        sub_1000960D0(v36, v38);
        *int v13 = v38;
        swift_bridgeObjectRelease();
        int v65 = v31;
        MessageIdentifierSet.insert(_:)();
      }
      uint64_t v28 = *v24;
      uint64_t v27 = v24[1];
    }
    while (v28 != MessageIdentifierSet.endIndex.getter(v14) || v27 != v29);
  }
  sub_100007A48((uint64_t)v8, &qword_10070A378);
  sub_100007A48((uint64_t)v63, &qword_100709E38);
  if (v62)
  {
    uint64_t v39 = type metadata accessor for MessagesPendingDownloadPerPass();
    uint64_t v40 = v64;
    sub_100125C5C((uint64_t)v13, v64 + *(int *)(v39 + 20));
    uint64_t v41 = v40 + *(int *)(v39 + 20);
  }
  else
  {
    uint64_t v41 = v64;
    sub_100125C5C((uint64_t)v13, v64);
  }
  uint64_t v43 = v60;
  uint64_t v42 = v61;
  uint64_t v44 = v58;
  uint64_t v46 = v56;
  uint64_t v45 = v57;
  uint64_t v47 = v55;
  sub_10012611C(v41, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  uint64_t v48 = *v47;
  swift_bridgeObjectRetain();
  sub_100125CC0((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  unint64_t v49 = *(void *)(v48 + 16);
  swift_bridgeObjectRelease();
  uint64_t v50 = v45 + *(int *)(type metadata accessor for DownloadTask(0) + 36);
  uint64_t v51 = _s18InProgressMessagesVMa(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v46, v50 + *(int *)(v51 + 28), v43);
  uint64_t result = sub_1005E3670();
  *uint64_t v42 = v49 < 0x20;
  return result;
}

uint64_t sub_100123314()
{
  v5[8] = 0;
  sub_1005E2C80(41);
  v6._object = (void *)0x80000001005E5750;
  v6._countAndFlagsBits = 0xD000000000000023;
  sub_1005E1E30(v6);
  *(void *)uint64_t v5 = *(unsigned __int8 *)(v0 + 9);
  sub_1005E2E90();
  v7._countAndFlagsBits = 32;
  v7._object = (void *)0xE100000000000000;
  sub_1005E1E30(v7);
  uint64_t v1 = 65;
  if (*(unsigned char *)(v0 + 112) != 1) {
    uint64_t v1 = 66;
  }
  if (*(unsigned char *)(v0 + 112)) {
    v2._countAndFlagsBits = v1;
  }
  else {
    v2._countAndFlagsBits = 1919251285;
  }
  if (*(unsigned char *)(v0 + 112)) {
    uint64_t v3 = (void *)0xE100000000000000;
  }
  else {
    uint64_t v3 = (void *)0xE400000000000000;
  }
  v2._object = v3;
  sub_1005E1E30(v2);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 41;
  v8._object = (void *)0xE100000000000000;
  sub_1005E1E30(v8);
  return *(void *)&v5[1];
}

uint64_t sub_10012341C()
{
  if (qword_100709D80 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_100123484@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_100125D20(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  return result;
}

uint64_t sub_1001234BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = a7;
  uint64_t v12 = type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10012611C(a1, (uint64_t)v14, type metadata accessor for UntaggedResponse);
  if (swift_getEnumCaseMultiPayload() != 19) {
    return sub_100125CC0((uint64_t)v14, type metadata accessor for UntaggedResponse);
  }
  memcpy(v18, v14, 0x248uLL);
  sub_10012D558((uint64_t)v18, a2, a3, a4, a5, v17);
  return sub_100061150((uint64_t)v18);
}

unint64_t sub_1001235FC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100125FF8(a1, a6);
}

uint64_t sub_100123604(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1001267F8(a1, a7);
}

uint64_t sub_100123684(uint64_t result)
{
  if (*(unsigned char *)(result + 4) == 2) {
    return sub_1001300D8(*(_DWORD *)result);
  }
  return result;
}

Swift::Int sub_1001236CC()
{
  uint64_t v1 = *(unsigned int *)(v0 + 8);
  Swift::UInt v2 = *(unsigned __int8 *)(v0 + 13);
  sub_1005E33F0();
  sub_1005E3410(v1 | (v1 << 32));
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  sub_1005E3410(v2);
  return sub_1005E3470();
}

void sub_10012375C()
{
  Swift::UInt v1 = *(unsigned __int8 *)(v0 + 13);
  sub_1005E3410(*(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned int *)(v0 + 8) << 32));
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  sub_1005E3410(v1);
}

Swift::Int sub_1001237D0()
{
  uint64_t v1 = *(unsigned int *)(v0 + 8);
  Swift::UInt v2 = *(unsigned __int8 *)(v0 + 13);
  sub_1005E33F0();
  sub_1005E3410(v1 | (v1 << 32));
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  sub_1005E3410(v2);
  return sub_1005E3470();
}

BOOL sub_10012385C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 12)) {
    Swift::UInt v2 = &_mh_execute_header;
  }
  else {
    Swift::UInt v2 = 0;
  }
  if (*(unsigned char *)(a2 + 12)) {
    uint64_t v3 = &_mh_execute_header;
  }
  else {
    uint64_t v3 = 0;
  }
  return sub_100123EA8(*(void *)a1, (unint64_t)v2 | *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 13) << 40), *(void *)a2, (unint64_t)v3 | *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 13) << 40));
}

uint64_t sub_1001238A8(uint64_t a1, uint64_t a2)
{
  switch(BYTE4(a1))
  {
    case 1:
      if (BYTE4(a2) == 1) {
        return a2 == a1;
      }
      return 0;
    case 2:
      if (BYTE4(a2) == 2) {
        return a2 == a1;
      }
      return 0;
    case 3:
      if (a1)
      {
        if (BYTE4(a2) == 3 && a2 == 1) {
          return 1;
        }
      }
      else if (BYTE4(a2) == 3 && !a2)
      {
        return 1;
      }
      return 0;
    default:
      if (BYTE4(a2)) {
        return 0;
      }
      return a2 == a1;
  }
}

uint64_t sub_100123940(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v32 = _s18SectionDataRequestVMa();
  __chkstk_darwin(v32);
  uint64_t v33 = (uint64_t)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000566C(&qword_100709E38);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  Swift::String v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  Swift::String v8 = (char *)&v32 - v7;
  uint64_t v9 = type metadata accessor for DownloadTask.CommandID(0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (_DWORD *)((char *)&v32 - v14);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v32 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v32 - v19;
  uint64_t v21 = sub_10000566C(&qword_10070D4F8);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v24 = (char *)&v32 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = &v24[*(int *)(v22 + 56)];
  sub_10012611C(v34, (uint64_t)v24, type metadata accessor for DownloadTask.CommandID);
  sub_10012611C(v35, (uint64_t)v25, type metadata accessor for DownloadTask.CommandID);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10012611C((uint64_t)v24, (uint64_t)v18, type metadata accessor for DownloadTask.CommandID);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_10001FDF0((uint64_t)v25, (uint64_t)v6, &qword_100709E38);
        sub_10001FC6C();
        char v26 = sub_1005E35A0();
        sub_100007A48((uint64_t)v6, &qword_100709E38);
        uint64_t v27 = (uint64_t)v18;
        goto LABEL_19;
      }
      sub_100007A48((uint64_t)v18, &qword_100709E38);
      goto LABEL_15;
    case 2u:
      sub_10012611C((uint64_t)v24, (uint64_t)v15, type metadata accessor for DownloadTask.CommandID);
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_15;
      }
      char v26 = *(_DWORD *)v25 == *v15;
      goto LABEL_20;
    case 3u:
      sub_10012611C((uint64_t)v24, (uint64_t)v12, type metadata accessor for DownloadTask.CommandID);
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        sub_100125CC0((uint64_t)v12, (uint64_t (*)(void))_s18SectionDataRequestVMa);
        goto LABEL_15;
      }
      uint64_t v28 = (uint64_t)v25;
      uint64_t v29 = v33;
      sub_1001261BC(v28, v33);
      sub_10001FC6C();
      if ((sub_1005E35A0() & 1) != 0
        && (static SectionSpecifier.Part.__derived_struct_equals(_:_:)(*(void *)&v12[*(int *)(v32 + 20)], *(void *)(v29 + *(int *)(v32 + 20))) & 1) != 0)
      {
        sub_100079B2C(*(int32x2_t **)&v12[*(int *)(v32 + 24)], *(int32x2_t **)(v29 + *(int *)(v32 + 24)));
        if (v30)
        {
          sub_100125CC0(v29, (uint64_t (*)(void))_s18SectionDataRequestVMa);
          sub_100125CC0((uint64_t)v12, (uint64_t (*)(void))_s18SectionDataRequestVMa);
          sub_100125CC0((uint64_t)v24, type metadata accessor for DownloadTask.CommandID);
          char v26 = 1;
          return v26 & 1;
        }
      }
      sub_100125CC0(v29, (uint64_t (*)(void))_s18SectionDataRequestVMa);
      sub_100125CC0((uint64_t)v12, (uint64_t (*)(void))_s18SectionDataRequestVMa);
      sub_100125CC0((uint64_t)v24, type metadata accessor for DownloadTask.CommandID);
      goto LABEL_16;
    default:
      sub_10012611C((uint64_t)v24, (uint64_t)v20, type metadata accessor for DownloadTask.CommandID);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_100007A48((uint64_t)v20, &qword_100709E38);
LABEL_15:
        sub_100007A48((uint64_t)v24, &qword_10070D4F8);
LABEL_16:
        char v26 = 0;
      }
      else
      {
        sub_10001FDF0((uint64_t)v25, (uint64_t)v8, &qword_100709E38);
        sub_10001FC6C();
        char v26 = sub_1005E35A0();
        sub_100007A48((uint64_t)v8, &qword_100709E38);
        uint64_t v27 = (uint64_t)v20;
LABEL_19:
        sub_100007A48(v27, &qword_100709E38);
LABEL_20:
        sub_100125CC0((uint64_t)v24, type metadata accessor for DownloadTask.CommandID);
      }
      return v26 & 1;
  }
}

BOOL sub_100123EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 ^ a4;
  if (a2 != a4 || !sub_1000255D4(a1, a3)) {
    return 0;
  }
  if ((a2 & (unint64_t)&_mh_execute_header) != 0) {
    uint64_t v7 = 6581810;
  }
  else {
    uint64_t v7 = 7631665;
  }
  if ((a4 & (unint64_t)&_mh_execute_header) != 0) {
    uint64_t v8 = 6581810;
  }
  else {
    uint64_t v8 = 7631665;
  }
  if (v7 == v8)
  {
    swift_bridgeObjectRelease_n();
    return (v4 & 0xFF0000000000) == 0;
  }
  char v10 = sub_1005E3290();
  swift_bridgeObjectRelease_n();
  BOOL result = 0;
  if (v10) {
    return (v4 & 0xFF0000000000) == 0;
  }
  return result;
}

uint64_t sub_100123F5C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s11TaskIDValueVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  return a1;
}

void *_s11TaskIDValueVwtk(void *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)((char *)result + 6) = *(uint64_t *)((char *)a2 + 6);
  *BOOL result = v2;
  return result;
}

uint64_t _s11TaskIDValueVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  return a1;
}

uint64_t _s11TaskIDValueVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 14)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s11TaskIDValueVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(void *)BOOL result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 14) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)BOOL result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 14) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s11TaskIDValueVMa()
{
  return &_s11TaskIDValueVN;
}

uint64_t sub_100124104(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
    *(void *)(a1 + 16) = a2[2];
    uint64_t v8 = a2 + 3;
    long long v9 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 48) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_bridgeObjectRetain();
    v11(a1 + 24, v8, v10);
    uint64_t v12 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v12;
    *(_WORD *)(a1 + 80) = *((_WORD *)a2 + 40);
    *(void *)(a1 + 88) = a2[11];
    *(_DWORD *)(a1 + 96) = *((_DWORD *)a2 + 24);
    *(void *)(a1 + 104) = a2[13];
    *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    uint64_t v13 = *(int *)(a3 + 36);
    uint64_t v14 = a1 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    *(void *)uint64_t v14 = *(uint64_t *)((char *)a2 + v13);
    *(_DWORD *)(v14 + 8) = *(_DWORD *)((char *)a2 + v13 + 8);
    uint64_t v16 = *(uint64_t *)((char *)a2 + v13 + 24);
    *(void *)(v14 + 16) = *(uint64_t *)((char *)a2 + v13 + 16);
    *(void *)(v14 + 24) = v16;
    uint64_t v17 = _s18InProgressMessagesVMa(0);
    uint64_t v18 = *(int *)(v17 + 28);
    uint64_t v23 = v14 + v18;
    uint64_t v24 = v17;
    uint64_t v22 = v15 + v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_10000566C(&qword_100709E60);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
    v20(v23, v22, v19);
    v20(v14 + *(int *)(v24 + 32), v15 + *(int *)(v24 + 32), v19);
    v20(a1 + *(int *)(a3 + 40), (uint64_t)a2 + *(int *)(a3 + 40), v19);
  }
  return a1;
}

uint64_t sub_100124330(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = _s18InProgressMessagesVMa(0);
  uint64_t v6 = v4 + *(int *)(v5 + 28);
  uint64_t v7 = sub_10000566C(&qword_100709E60);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v7 - 8), v6, v7);
  v10(v4 + *(int *)(v5 + 32), v7);
  uint64_t v8 = a1 + *(int *)(a2 + 40);
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v7);
}

uint64_t sub_100124454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a2 + 24;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v7;
  uint64_t v8 = v7;
  long long v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  v9(a1 + 24, v6, v8);
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(_DWORD *)(v12 + 8) = *(_DWORD *)(a2 + v11 + 8);
  uint64_t v14 = *(void *)(a2 + v11 + 24);
  *(void *)(v12 + 16) = *(void *)(a2 + v11 + 16);
  *(void *)(v12 + 24) = v14;
  uint64_t v15 = _s18InProgressMessagesVMa(0);
  uint64_t v16 = *(int *)(v15 + 28);
  uint64_t v21 = v12 + v16;
  uint64_t v22 = v15;
  uint64_t v20 = v13 + v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_10000566C(&qword_100709E60);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  v18(v21, v20, v17);
  v18(v12 + *(int *)(v22 + 32), v13 + *(int *)(v22 + 32), v17);
  v18(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v17);
  return a1;
}

uint64_t sub_100124638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_100022498((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)(a1 + v6) = *(void *)(a2 + v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 24) = *(void *)(v8 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = _s18InProgressMessagesVMa(0);
  uint64_t v10 = *(int *)(v9 + 28);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = sub_10000566C(&qword_100709E60);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v14(v7 + *(int *)(v9 + 32), v8 + *(int *)(v9 + 32), v13);
  v14(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v13);
  return a1;
}

uint64_t sub_100124828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_DWORD *)(v9 + 8) = *(_DWORD *)(a2 + v8 + 8);
  *(void *)uint64_t v9 = *(void *)(a2 + v8);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(a2 + v8 + 16);
  uint64_t v11 = _s18InProgressMessagesVMa(0);
  uint64_t v12 = *(int *)(v11 + 28);
  uint64_t v13 = v9 + v12;
  uint64_t v14 = v10 + v12;
  uint64_t v15 = sub_10000566C(&qword_100709E60);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(v9 + *(int *)(v11 + 32), v10 + *(int *)(v11 + 32), v15);
  v16(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v15);
  return a1;
}

uint64_t sub_100124970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + 8) = *(_DWORD *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  swift_bridgeObjectRelease();
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRelease();
  uint64_t v10 = _s18InProgressMessagesVMa(0);
  uint64_t v11 = *(int *)(v10 + 28);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t v14 = sub_10000566C(&qword_100709E60);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(v8 + *(int *)(v10 + 32), v9 + *(int *)(v10 + 32), v14);
  v15(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v14);
  return a1;
}

uint64_t sub_100124B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100124B48);
}

uint64_t sub_100124B48(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = _s18InProgressMessagesVMa(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000566C(&qword_100709E38);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100124C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100124C8C);
}

void *sub_100124C8C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  long long v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *BOOL result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = _s18InProgressMessagesVMa(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 36);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000566C(&qword_100709E38);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 40);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for DownloadTask(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070D320);
}

void sub_100124DDC()
{
  _s18InProgressMessagesVMa(319);
  if (v0 <= 0x3F)
  {
    sub_100069220();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_100124ED4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v10 = sub_10000566C(&qword_100709E60);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = _s18SectionDataRequestVMa();
      *(uint64_t *)((char *)a1 + *(int *)(v11 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 20));
      *(uint64_t *)((char *)a1 + *(int *)(v11 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 24));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_10000566C(&qword_100709E60);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1001250B8(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 3)
  {
    uint64_t v5 = sub_10000566C(&qword_100709E60);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    _s18SectionDataRequestVMa();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (result <= 1)
  {
    uint64_t v3 = sub_10000566C(&qword_100709E60);
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

char *sub_1001251BC(char *a1, char *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v8 = sub_10000566C(&qword_100709E60);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    uint64_t v9 = _s18SectionDataRequestVMa();
    *(void *)&a1[*(int *)(v9 + 20)] = *(void *)&a2[*(int *)(v9 + 20)];
    *(void *)&a1[*(int *)(v9 + 24)] = *(void *)&a2[*(int *)(v9 + 24)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_10012535C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100125CC0((uint64_t)a1, type metadata accessor for DownloadTask.CommandID);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v8 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = _s18SectionDataRequestVMa();
      *(void *)&a1[*(int *)(v9 + 20)] = *(void *)&a2[*(int *)(v9 + 20)];
      *(void *)&a1[*(int *)(v9 + 24)] = *(void *)&a2[*(int *)(v9 + 24)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t type metadata accessor for DownloadTask.CommandID(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070D3E0);
}

char *sub_100125540(char *a1, char *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v8 = sub_10000566C(&qword_100709E60);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    uint64_t v9 = _s18SectionDataRequestVMa();
    *(void *)&a1[*(int *)(v9 + 20)] = *(void *)&a2[*(int *)(v9 + 20)];
    *(void *)&a1[*(int *)(v9 + 24)] = *(void *)&a2[*(int *)(v9 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1001256D0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100125CC0((uint64_t)a1, type metadata accessor for DownloadTask.CommandID);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v8 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = _s18SectionDataRequestVMa();
      *(void *)&a1[*(int *)(v9 + 20)] = *(void *)&a2[*(int *)(v9 + 20)];
      *(void *)&a1[*(int *)(v9 + 24)] = *(void *)&a2[*(int *)(v9 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_100125884()
{
  sub_100069220();
  if (v0 <= 0x3F)
  {
    _s18SectionDataRequestVMa();
    if (v1 <= 0x3F) {
      swift_initEnumMetadataMultiPayload();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for DownloadTask.CommandID.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100125A24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadTask.CommandID.Kind()
{
  return &type metadata for DownloadTask.CommandID.Kind;
}

unint64_t sub_100125A60()
{
  unint64_t result = qword_10070D418;
  if (!qword_10070D418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070D418);
  }
  return result;
}

uint64_t sub_100125AB4()
{
  return sub_100125B54(&qword_10070D420, (void (*)(uint64_t))type metadata accessor for DownloadTask.CommandID);
}

uint64_t sub_100125AFC(uint64_t a1)
{
  uint64_t result = sub_100125B54(&qword_10070D4D8, (void (*)(uint64_t))type metadata accessor for DownloadTask);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100125B54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100125BA0()
{
  unint64_t result = qword_10070D4E0;
  if (!qword_10070D4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070D4E0);
  }
  return result;
}

uint64_t sub_100125BF4(uint64_t a1)
{
  return sub_100122E90(a1, *(void *)(v1 + 16), *(BOOL **)(v1 + 24));
}

uint64_t sub_100125BFC()
{
  if (*(unsigned char *)(*(void *)(v0 + 16) + 9)) {
    Swift::Int v1 = 10;
  }
  else {
    Swift::Int v1 = 9;
  }
  sub_1000935B0(v1);
  return sub_100019080(&v3, v1);
}

uint64_t sub_100125C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessagesPendingDownload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100125CC0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100125D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v30 = (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - v11;
  type metadata accessor for DownloadTask(0);
  uint64_t v13 = *(void *)(v4 + 88);
  int v14 = *(_DWORD *)(v4 + 96);
  char v15 = *(unsigned char *)(v4 + 9);
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_10013B6AC(v16, v14, v15, a1, a2, a4);
  swift_bridgeObjectRelease();
  sub_10012611C(a4, (uint64_t)v12, type metadata accessor for MailboxTaskLogger);
  if ((~v17 & 0xFF00000000) != 0)
  {
    sub_100125CC0((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
  }
  else
  {
    uint64_t v29 = a4;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_10013C060(a1, a2, v13, v14);
    swift_bridgeObjectRelease();
    uint64_t v18 = v30;
    sub_10012611C((uint64_t)v12, v30, type metadata accessor for MailboxTaskLogger);
    if ((~v17 & 0xFF00000000) != 0)
    {
      sub_100125CC0(v18, type metadata accessor for MailboxTaskLogger);
      sub_100125CC0((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
    }
    else
    {
      uint64_t v19 = a1;
      uint64_t v20 = a2;
      uint64_t v21 = swift_bridgeObjectRetain();
      uint64_t v17 = sub_10012BDD0(v21, v14, v18);
      swift_bridgeObjectRelease();
      sub_100125CC0(v18, type metadata accessor for MailboxTaskLogger);
      sub_100125CC0((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
      if ((~v17 & 0xFF00000000) == 0)
      {
        uint64_t v22 = *(void *)(v4 + 88);
        int v23 = *(_DWORD *)(v4 + 96);
        char v24 = *(unsigned char *)(v4 + 9);
        swift_bridgeObjectRetain();
        unint64_t v25 = sub_10013CBC8(v19, v20, v29);
        if ((v25 & 0x100000000) != 0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          unsigned int v26 = v25;
          uint64_t v27 = swift_allocObject();
          *(void *)(v27 + 16) = v22;
          *(_DWORD *)(v27 + 24) = v23;
          *(unsigned char *)(v27 + 28) = v24;
          *(_DWORD *)(v27 + 32) = v26;
          return v26 | 0x200000000;
        }
      }
    }
  }
  return v17;
}

unint64_t sub_100125FF8(unint64_t result, uint64_t a2)
{
  if (((result >> 59) & 0x1E | (result >> 2) & 1) == 0xC)
  {
    uint64_t v3 = v2;
    if ((*(unsigned int *)(v2 + 96) | ((unint64_t)*(unsigned int *)(v2 + 96) << 32)) == (*(unsigned int *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32)))
    {
      int v5 = *(unsigned __int8 *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x1C);
      uint64_t v6 = *(unsigned int *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      uint64_t v7 = *(NSObject **)((result & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      int v8 = *(unsigned __int8 *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x30);
      unint64_t result = sub_1000255D4(*(void *)(v3 + 88), *(void *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x10));
      if (result)
      {
        if (*(unsigned char *)(v3 + 9)) {
          uint64_t v9 = 6581810;
        }
        else {
          uint64_t v9 = 7631665;
        }
        if (v5) {
          uint64_t v10 = 6581810;
        }
        else {
          uint64_t v10 = 7631665;
        }
        if (v9 == v10)
        {
          unint64_t result = swift_bridgeObjectRelease_n();
        }
        else
        {
          char v11 = sub_1005E3290();
          unint64_t result = swift_bridgeObjectRelease_n();
          if ((v11 & 1) == 0) {
            return result;
          }
        }
        if (*(void *)(*(void *)(v3 + 104) + 16))
        {
          unint64_t result = sub_100024260(v6);
          if (v12)
          {
            type metadata accessor for DownloadTask(0);
            return sub_10012BF0C(v6, v7, v8, a2);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10012611C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100126184()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 36, 7);
}

uint64_t sub_1001261BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s18SectionDataRequestVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for DownloadTask.ActionID(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadTask.ActionID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1001262AC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 4) <= 2u) {
    return *(unsigned __int8 *)(a1 + 4);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1001262C4(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_DWORD *)unint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 4) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DownloadTask.ActionID()
{
  return &type metadata for DownloadTask.ActionID;
}

uint64_t sub_1001262EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v49 = a3;
  uint64_t v46 = sub_10000566C(&qword_100709E38);
  uint64_t v8 = __chkstk_darwin(v46);
  uint64_t v50 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v44 = (uint64_t)&v40 - v11;
  __chkstk_darwin(v10);
  uint64_t v45 = (char *)&v40 - v12;
  uint64_t v13 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v55 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v40 - v17;
  uint64_t v19 = sub_10000566C(&qword_10070D4E8);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100164914(0, a2);
  uint64_t v23 = v22[2];
  if (v23)
  {
    uint64_t v41 = a2;
    uint64_t v42 = v4;
    uint64_t v43 = a4;
    uint64_t v24 = 0;
    uint64_t v51 = v22 + 4;
    uint64_t v52 = v22;
    uint64_t v25 = *(void *)(a1 + 16);
    uint64_t v53 = v21;
    uint64_t v54 = a1;
    uint64_t v47 = v25;
    uint64_t v48 = v23;
    do
    {
      if (v25)
      {
        int v26 = *((_DWORD *)v51 + v24);
        uint64_t v27 = v55;
        uint64_t v28 = a1 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
        swift_bridgeObjectRetain();
        uint64_t v29 = *(void *)(v27 + 72);
        uint64_t v30 = v25;
        while (1)
        {
          sub_100128484(v28, (uint64_t)v18, type metadata accessor for TaskHistory.Previous);
          sub_100128484((uint64_t)v18, (uint64_t)v16, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1001284EC((uint64_t)v16, type metadata accessor for TaskHistory.Previous);
          }
          else
          {
            int v31 = *(_DWORD *)&v16[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
            sub_1001284EC((uint64_t)v16, type metadata accessor for ClientCommand);
            if (v31 == v26)
            {
              sub_1001284EC((uint64_t)v18, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              a1 = v54;
              swift_bridgeObjectRelease();
              uint64_t v32 = sub_10000566C(&qword_10070D4F0);
              uint64_t v21 = v53;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v53, 1, 1, v32);
              a4 = v43;
              a2 = v41;
              uint64_t v34 = v49;
              uint64_t v33 = (uint64_t)v50;
              goto LABEL_14;
            }
          }
          sub_1001284EC((uint64_t)v18, type metadata accessor for TaskHistory.Previous);
          v28 += v29;
          if (!--v30)
          {
            a1 = v54;
            swift_bridgeObjectRelease();
            uint64_t v21 = v53;
            uint64_t v25 = v47;
            uint64_t v23 = v48;
            break;
          }
        }
      }
      ++v24;
    }
    while (v24 != v23);
    swift_bridgeObjectRelease();
    a4 = v43;
    a2 = v41;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v35 = v44;
  sub_1001271A0(v44);
  uint64_t v36 = (uint64_t)v45;
  uint64_t v34 = v49;
  MessageIdentifierSet.subtracting(_:)(v49, v46);
  sub_100007A48(v35, &qword_100709E38);
  sub_100127AA8(v36, (uint64_t)v21);
  sub_100007A48(v36, &qword_100709E38);
  uint64_t v33 = (uint64_t)v50;
LABEL_14:
  sub_100026334(v34, v33);
  uint64_t v37 = sub_10000566C(&qword_10070D4F0);
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v21, 1, v37) == 1)
  {
    sub_100127680(a1, a2, v33, a4);
    sub_100007A48(v33, &qword_100709E38);
    return sub_100007A48((uint64_t)v21, &qword_10070D4E8);
  }
  else
  {
    sub_100007A48(v33, &qword_100709E38);
    sub_10001FDF0((uint64_t)v21, a4, &qword_10070D4F0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(a4, 0, 1, v37);
  }
}

uint64_t sub_1001267F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v4);
  uint64_t v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v7);
  uint64_t v9 = &v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v42 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = &v35[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for DownloadTask.CommandID(0);
  __chkstk_darwin(v13);
  uint64_t v15 = &v35[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100128484(a1, (uint64_t)v15, type metadata accessor for DownloadTask.CommandID);
  LODWORD(a1) = swift_getEnumCaseMultiPayload();
  uint64_t result = sub_1001284EC((uint64_t)v15, type metadata accessor for DownloadTask.CommandID);
  if (!a1)
  {
    uint64_t v39 = v6;
    uint64_t v40 = v4;
    uint64_t v17 = v12;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v42 + 16))(v12, a2, v10);
    sub_100128484(a2, (uint64_t)v9, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v18 = v41;
    sub_1001283EC(v41);
    sub_1001283EC(v18);
    uint64_t v19 = sub_1005E0EB0();
    os_log_type_t v20 = sub_1005E25C0();
    int v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v45 = v37;
      *(_DWORD *)uint64_t v22 = 68159491;
      LODWORD(v43) = 2;
      int v36 = v21;
      sub_1005E2960();
      *(_WORD *)(v22 + 8) = 256;
      uint64_t v23 = *(int *)(v7 + 20);
      uint64_t v38 = v10;
      uint64_t v24 = &v9[v23];
      LOBYTE(v43) = v9[v23];
      sub_1005E2960();
      *(_WORD *)(v22 + 11) = 2082;
      uint64_t v26 = *((void *)v24 + 1);
      unint64_t v25 = *((void *)v24 + 2);
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_1000C6914(v26, v25, &v45);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 21) = 1040;
      LODWORD(v43) = 2;
      sub_1005E2960();
      *(_WORD *)(v22 + 27) = 512;
      LOWORD(v43) = *((_WORD *)v24 + 12);
      sub_1005E2960();
      *(_WORD *)(v22 + 31) = 2160;
      uint64_t v43 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v22 + 41) = 2085;
      int v27 = *((_DWORD *)v24 + 10);
      uint64_t v43 = *((void *)v24 + 4);
      int v44 = v27;
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1005E1CC0();
      uint64_t v43 = sub_1000C6914(v28, v29, &v45);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001284EC((uint64_t)v9, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v22 + 51) = 2082;
      uint64_t v30 = swift_bridgeObjectRetain();
      uint64_t v31 = (uint64_t)v39;
      sub_1001712FC(v30);
      uint64_t v32 = MessageIdentifierSet.debugDescription.getter(v40);
      unint64_t v34 = v33;
      sub_100007A48(v31, &qword_100709E38);
      uint64_t v43 = sub_1000C6914(v32, v34, &v45);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100128438(v18);
      sub_100128438(v18);
      _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v36, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Completed fetching Body Structure for messages %{public}s", (uint8_t *)v22, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v42 + 8))(v17, v38);
    }
    else
    {
      sub_1001284EC((uint64_t)v9, type metadata accessor for MailboxTaskLogger);
      sub_100128438(v18);
      sub_100128438(v18);

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v42 + 8))(v17, v10);
    }
  }
  return result;
}

Swift::Int sub_100126DB4()
{
  Swift::UInt v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  Swift::UInt v3 = *(unsigned __int8 *)(v0 + 9);
  sub_1005E33F0();
  if (v2 == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3410(v1);
  }
  sub_1005E3410(v3);
  return sub_1005E3470();
}

void sub_100126E38()
{
  Swift::UInt v1 = *(unsigned __int8 *)(v0 + 9);
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    Swift::UInt v2 = *(void *)v0;
    sub_1005E3420(1u);
    sub_1005E3410(v2);
  }
  sub_1005E3410(v1);
}

Swift::Int sub_100126E9C()
{
  Swift::UInt v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  Swift::UInt v3 = *(unsigned __int8 *)(v0 + 9);
  sub_1005E33F0();
  if (v2 == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3410(v1);
  }
  sub_1005E3410(v3);
  return sub_1005E3470();
}

uint64_t sub_100126F1C(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 9);
  int v3 = *(unsigned __int8 *)(a2 + 9);
  return sub_100077A0C(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8)) & ~(v2 ^ v3) & 1;
}

Swift::Int sub_100126F68()
{
  Swift::UInt v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(unsigned int *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  Swift::UInt v4 = *(unsigned __int8 *)(v0 + 48);
  Swift::UInt16 v5 = *(_WORD *)(v0 + 16);
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_1005E3430(v5);
  sub_1005E3410(v2 | (v2 << 32));
  swift_bridgeObjectRetain();
  sub_1000D3714((uint64_t)v7, v3);
  swift_bridgeObjectRelease();
  sub_1005E3410(v4);
  return sub_1005E3470();
}

void sub_100127010(uint64_t a1)
{
  uint64_t v3 = *(unsigned int *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  Swift::UInt v5 = *(unsigned __int8 *)(v1 + 48);
  Swift::UInt16 v6 = *(_WORD *)(v1 + 16);
  sub_1005E3410(*(void *)(v1 + 8));
  sub_1005E3430(v6);
  sub_1005E3410(v3 | (v3 << 32));
  swift_bridgeObjectRetain();
  sub_1000D3714(a1, v4);
  swift_bridgeObjectRelease();
  sub_1005E3410(v5);
}

Swift::Int sub_100127090()
{
  Swift::UInt v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(unsigned int *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  Swift::UInt v4 = *(unsigned __int8 *)(v0 + 48);
  Swift::UInt16 v5 = *(_WORD *)(v0 + 16);
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_1005E3430(v5);
  sub_1005E3410(v2 | (v2 << 32));
  swift_bridgeObjectRetain();
  sub_1000D3714((uint64_t)v7, v3);
  swift_bridgeObjectRelease();
  sub_1005E3410(v4);
  return sub_1005E3470();
}

BOOL sub_100127134(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 48);
  return sub_100127B8C((uint64_t)v5, (uint64_t)v7);
}

void sub_100127190(void *a1@<X8>)
{
  *a1 = &off_1006BB0A0;
}

void sub_1001271A0(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v4);
  char v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v2 + 40);
  uint64_t v20 = v7;
  sub_10001FC6C();
  swift_bridgeObjectRetain();
  sub_1005E3680();
  uint64_t v8 = v7 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v7 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (v11)
  {
    unint64_t v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v15 = v14 | (v13 << 6);
LABEL_24:
    if ((*(unsigned char *)(*(void *)(v7 + 56) + 16 * v15 + 9) & 1) == 0)
    {
      int v19 = *(_DWORD *)(*(void *)(v7 + 48) + 4 * v15);
      MessageIdentifierSet.insert(_:)();
    }
  }
  int64_t v16 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v16 >= v12) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v16);
  ++v13;
  if (v17) {
    goto LABEL_23;
  }
  int64_t v13 = v16 + 1;
  if (v16 + 1 >= v12) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v13);
  if (v17) {
    goto LABEL_23;
  }
  int64_t v13 = v16 + 2;
  if (v16 + 2 >= v12) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v13);
  if (v17) {
    goto LABEL_23;
  }
  int64_t v13 = v16 + 3;
  if (v16 + 3 >= v12) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v13);
  if (v17) {
    goto LABEL_23;
  }
  int64_t v13 = v16 + 4;
  if (v16 + 4 >= v12) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v13);
  if (v17)
  {
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_24;
  }
  int64_t v18 = v16 + 5;
  if (v18 >= v12)
  {
LABEL_26:
    swift_release();
    sub_10001FDF0((uint64_t)v6, a1, &qword_100709E38);
    sub_10001D550((uint64_t)&v20);
    return;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
    int64_t v13 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v12) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
}

void sub_1001273CC(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  v24[1] = a1;
  uint64_t v3 = sub_10000566C(&qword_100709E38);
  uint64_t v4 = __chkstk_darwin(v3);
  char v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)v24 - v8;
  __chkstk_darwin(v7);
  unint64_t v11 = (char *)v24 - v10;
  uint64_t v26 = *(void *)(v2 + 40);
  uint64_t v12 = v26;
  sub_10001FC6C();
  swift_bridgeObjectRetain();
  sub_1005E3680();
  uint64_t v13 = v12 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v12 + 64);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v18 = 0;
  while (v16)
  {
    unint64_t v19 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v20 = v19 | (v18 << 6);
LABEL_24:
    if (*(unsigned char *)(*(void *)(v12 + 56) + 16 * v20 + 8) == 1)
    {
      int v25 = *(_DWORD *)(*(void *)(v12 + 48) + 4 * v20);
      MessageIdentifierSet.insert(_:)();
    }
  }
  int64_t v21 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v21 >= v17) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v13 + 8 * v21);
  ++v18;
  if (v22) {
    goto LABEL_23;
  }
  int64_t v18 = v21 + 1;
  if (v21 + 1 >= v17) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v13 + 8 * v18);
  if (v22) {
    goto LABEL_23;
  }
  int64_t v18 = v21 + 2;
  if (v21 + 2 >= v17) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v13 + 8 * v18);
  if (v22) {
    goto LABEL_23;
  }
  int64_t v18 = v21 + 3;
  if (v21 + 3 >= v17) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v13 + 8 * v18);
  if (v22) {
    goto LABEL_23;
  }
  int64_t v18 = v21 + 4;
  if (v21 + 4 >= v17) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v13 + 8 * v18);
  if (v22)
  {
LABEL_23:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
    goto LABEL_24;
  }
  int64_t v23 = v21 + 5;
  if (v23 >= v17)
  {
LABEL_26:
    swift_release();
    sub_10001FDF0((uint64_t)v9, (uint64_t)v11, &qword_100709E38);
    sub_10001D550((uint64_t)&v26);
    sub_1001271A0((uint64_t)v6);
    MessageIdentifierSet.subtracting(_:)((uint64_t)v6, v3);
    sub_100007A48((uint64_t)v6, &qword_100709E38);
    sub_100007A48((uint64_t)v11, &qword_100709E38);
    return;
  }
  unint64_t v22 = *(void *)(v13 + 8 * v23);
  if (v22)
  {
    int64_t v18 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v17) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v13 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_100127680@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v38 = sub_10000566C(&qword_100709E38);
  uint64_t v8 = __chkstk_darwin(v38);
  uint64_t v37 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v35 - v10;
  uint64_t v12 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v45 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  int64_t v17 = (char *)&v35 - v16;
  int64_t v18 = sub_100164914(1, a2);
  uint64_t v19 = v18[2];
  uint64_t v39 = a3;
  if (v19)
  {
    uint64_t v35 = v11;
    uint64_t v36 = a4;
    uint64_t v20 = 0;
    uint64_t v42 = v18 + 4;
    uint64_t v43 = v18;
    uint64_t v21 = *(void *)(a1 + 16);
    uint64_t v44 = a1;
    uint64_t v40 = v21;
    uint64_t v41 = v19;
    do
    {
      if (v21)
      {
        int v22 = *((_DWORD *)v42 + v20);
        uint64_t v23 = v45;
        uint64_t v24 = a1 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
        swift_bridgeObjectRetain();
        uint64_t v25 = *(void *)(v23 + 72);
        while (1)
        {
          sub_100128484(v24, (uint64_t)v17, type metadata accessor for TaskHistory.Previous);
          sub_100128484((uint64_t)v17, (uint64_t)v15, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1001284EC((uint64_t)v15, type metadata accessor for TaskHistory.Previous);
          }
          else
          {
            int v26 = *(_DWORD *)&v15[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
            sub_1001284EC((uint64_t)v15, type metadata accessor for ClientCommand);
            if (v26 == v22)
            {
              sub_1001284EC((uint64_t)v17, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v27 = sub_10000566C(&qword_10070D4F0);
              return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v36, 1, 1, v27);
            }
          }
          sub_1001284EC((uint64_t)v17, type metadata accessor for TaskHistory.Previous);
          v24 += v25;
          if (!--v21)
          {
            a1 = v44;
            swift_bridgeObjectRelease();
            uint64_t v21 = v40;
            uint64_t v19 = v41;
            break;
          }
        }
      }
      ++v20;
    }
    while (v20 != v19);
    swift_bridgeObjectRelease();
    unint64_t v11 = v35;
    a4 = v36;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v29 = v37;
  sub_1001273CC(v37);
  MessageIdentifierSet.subtracting(_:)(v39, v38);
  sub_100007A48(v29, &qword_100709E38);
  sub_10000566C(&qword_100709E60);
  char v30 = sub_1005E3630();
  uint64_t v31 = sub_10000566C(&qword_10070D4F0);
  uint64_t v32 = v31;
  if (v30)
  {
    uint64_t v33 = 1;
  }
  else
  {
    uint64_t v34 = a4 + *(int *)(v31 + 48);
    sub_100026334((uint64_t)v11, a4);
    type metadata accessor for DownloadTask.CommandID(0);
    swift_storeEnumTagMultiPayload();
    static ClientCommand.uidFetch(messages:items:)((uint64_t)v11, (uint64_t)&off_1006BA800, v34);
    uint64_t v33 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(a4, v33, 1, v32);
  return sub_100007A48((uint64_t)v11, &qword_100709E38);
}

uint64_t sub_100127AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10000566C(&qword_100709E60);
  char v4 = sub_1005E3630();
  uint64_t v5 = sub_10000566C(&qword_10070D4F0);
  uint64_t v6 = v5;
  if (v4)
  {
    uint64_t v7 = 1;
  }
  else
  {
    uint64_t v8 = a2 + *(int *)(v5 + 48);
    sub_100026334(a1, a2);
    type metadata accessor for DownloadTask.CommandID(0);
    swift_storeEnumTagMultiPayload();
    static ClientCommand.uidFetch(messages:items:)(a1, (uint64_t)&off_1006BA768, v8);
    uint64_t v7 = 0;
  }
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v9(a2, v7, 1, v6);
}

BOOL sub_100127B8C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) != *(void *)(a2 + 8)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(unsigned int *)(a1 + 32);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(unsigned int *)(a2 + 32);
  int v8 = *(unsigned __int16 *)(a2 + 16);
  int v9 = *(unsigned __int16 *)(a1 + 16);
  BOOL v10 = sub_1000255D4(*(void *)a1, *(void *)a2);
  BOOL result = 0;
  if (v10 && v9 == v8)
  {
    if ((v5 | (v5 << 32)) == (v7 | (v7 << 32))
      && sub_1000255D4(v4, v6)
      && (sub_100021964(*(void *)(a1 + 40), *(void *)(a2 + 40)) & 1) != 0)
    {
      return *(unsigned __int8 *)(a1 + 48) == *(unsigned __int8 *)(a2 + 48);
    }
    return 0;
  }
  return result;
}

uint64_t sub_100127C58(uint64_t result, char a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v6 = *(unsigned int *)(result + 32);
    uint64_t v7 = *(void *)(result + 40);
    char v8 = *(unsigned char *)(result + 49);
    char v43 = *(unsigned char *)(result + 48);
    int v9 = (void *)*a3;
    uint64_t v44 = result;
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_100024260(v6);
    uint64_t v12 = v9[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    char v15 = v10;
    if (v9[3] < v14)
    {
      sub_10004EEB0(v14, a2 & 1);
      uint64_t v16 = sub_100024260(v6);
      if ((v15 & 1) != (v17 & 1))
      {
LABEL_27:
        BOOL result = sub_1005E3380();
        __break(1u);
        return result;
      }
      unint64_t v11 = v16;
      int64_t v18 = (void *)*a3;
      if ((v15 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_9:
      uint64_t v19 = v18[7] + 16 * v11;
      *(void *)uint64_t v19 = v7;
      *(unsigned char *)(v19 + 8) = v43;
      *(unsigned char *)(v19 + 9) = v8;
      uint64_t v20 = v3 - 1;
      if (v3 == 1) {
        return swift_bridgeObjectRelease();
      }
LABEL_16:
      for (uint64_t i = (char *)(v44 + 73); ; i += 24)
      {
        uint64_t v27 = *(unsigned int *)(i - 17);
        uint64_t v28 = *(void *)(i - 9);
        char v29 = *i;
        char v30 = *(i - 1);
        uint64_t v31 = (void *)*a3;
        unint64_t v32 = sub_100024260(v27);
        uint64_t v34 = v31[2];
        BOOL v35 = (v33 & 1) == 0;
        BOOL v23 = __OFADD__(v34, v35);
        uint64_t v36 = v34 + v35;
        if (v23) {
          break;
        }
        char v37 = v33;
        if (v31[3] < v36)
        {
          sub_10004EEB0(v36, 1);
          unint64_t v32 = sub_100024260(v27);
          if ((v37 & 1) != (v38 & 1)) {
            goto LABEL_27;
          }
        }
        uint64_t v39 = (void *)*a3;
        if (v37)
        {
          uint64_t v26 = v39[7] + 16 * v32;
          *(void *)uint64_t v26 = v28;
          *(unsigned char *)(v26 + 8) = v30;
          *(unsigned char *)(v26 + 9) = v29;
        }
        else
        {
          v39[(v32 >> 6) + 8] |= 1 << v32;
          *(_DWORD *)(v39[6] + 4 * v32) = v27;
          uint64_t v40 = v39[7] + 16 * v32;
          *(void *)uint64_t v40 = v28;
          *(unsigned char *)(v40 + 8) = v30;
          *(unsigned char *)(v40 + 9) = v29;
          uint64_t v41 = v39[2];
          BOOL v23 = __OFADD__(v41, 1);
          uint64_t v42 = v41 + 1;
          if (v23) {
            goto LABEL_26;
          }
          v39[2] = v42;
        }
        if (!--v20) {
          return swift_bridgeObjectRelease();
        }
      }
      goto LABEL_25;
    }
    if (a2)
    {
      int64_t v18 = (void *)*a3;
      if (v10) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_100096C7C();
      int64_t v18 = (void *)*a3;
      if (v15) {
        goto LABEL_9;
      }
    }
LABEL_12:
    v18[(v11 >> 6) + 8] |= 1 << v11;
    *(_DWORD *)(v18[6] + 4 * v11) = v6;
    uint64_t v21 = v18[7] + 16 * v11;
    *(void *)uint64_t v21 = v7;
    *(unsigned char *)(v21 + 8) = v43;
    *(unsigned char *)(v21 + 9) = v8;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    void v18[2] = v24;
    uint64_t v20 = v3 - 1;
    if (v3 == 1) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_16;
  }
  return result;
}

void *sub_100127EDC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v4 = a3;
  uint64_t v5 = a4;
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  __int16 v8 = *((_WORD *)a1 + 8);
  uint64_t v9 = a1[3];
  int v32 = *((_DWORD *)a1 + 8);
  int64_t v10 = *(void *)(a2 + 16);
  if (v10)
  {
    uint64_t v25 = a1[3];
    __int16 v26 = *((_WORD *)a1 + 8);
    uint64_t v27 = a1[1];
    uint64_t v28 = *a1;
    char v33 = _swiftEmptyArrayStorage;
    sub_10001A674(0, v10, 0);
    uint64_t v11 = a2;
    unint64_t v12 = 0;
    BOOL v13 = _swiftEmptyArrayStorage;
    unint64_t v14 = _swiftEmptyArrayStorage[2];
    uint64_t v15 = 3 * v14;
    do
    {
      int v16 = *(_DWORD *)(v11 + v12 + 32);
      uint64_t v17 = *(void *)(v11 + v12 + 40);
      char v18 = *(unsigned char *)(v11 + v12 + 48);
      char v19 = *(unsigned char *)(v11 + v12 + 49);
      char v33 = v13;
      unint64_t v20 = v13[3];
      unint64_t v21 = v14 + 1;
      if (v14 >= v20 >> 1)
      {
        sub_10001A674(v20 > 1, v14 + 1, 1);
        uint64_t v11 = a2;
        BOOL v13 = v33;
      }
      v13[2] = v21;
      uint64_t v22 = &v13[v15 + v12 / 8];
      *((_DWORD *)v22 + 8) = v16;
      v22[5] = v17;
      *((unsigned char *)v22 + 48) = v18;
      *((unsigned char *)v22 + 49) = v19;
      v12 += 24;
      unint64_t v14 = v21;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    char v4 = a3;
    uint64_t v6 = v28;
    uint64_t v5 = a4;
    uint64_t v7 = v27;
    __int16 v8 = v26;
    uint64_t v9 = v25;
    if (v13[2]) {
      goto LABEL_7;
    }
LABEL_9:
    BOOL v23 = &_swiftEmptyDictionarySingleton;
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  BOOL v13 = _swiftEmptyArrayStorage;
  if (!_swiftEmptyArrayStorage[2]) {
    goto LABEL_9;
  }
LABEL_7:
  sub_10000566C(&qword_10070A678);
  BOOL v23 = (void *)sub_1005E2FF0();
LABEL_10:
  char v33 = v23;
  sub_100127C58((uint64_t)v13, 1, &v33);
  swift_bridgeObjectRelease();
  BOOL result = v33;
  *(void *)uint64_t v5 = v6;
  *(void *)(v5 + 8) = v7;
  *(_WORD *)(v5 + 16) = v8;
  *(void *)(v5 + 24) = v9;
  *(_DWORD *)(v5 + 32) = v32;
  *(void *)(v5 + 40) = result;
  *(unsigned char *)(v5 + 48) = v4;
  return result;
}

uint64_t _s5BatchVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s5BatchVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s5BatchVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t _s5BatchVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

ValueMetadata *_s5BatchVMa()
{
  return &_s5BatchVN;
}

uint64_t _s5BatchV7MessageVwCP(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)BOOL result = v2;
  return result;
}

uint64_t _s5BatchV7MessageVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 9);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s5BatchV7MessageVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)BOOL result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 9) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *_s5BatchV7MessageVMa()
{
  return &_s5BatchV7MessageVN;
}

unint64_t sub_100128340()
{
  unint64_t result = qword_10070D500;
  if (!qword_10070D500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070D500);
  }
  return result;
}

unint64_t sub_100128398()
{
  unint64_t result = qword_10070D508;
  if (!qword_10070D508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070D508);
  }
  return result;
}

uint64_t sub_1001283EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100128438(uint64_t a1)
{
  return a1;
}

uint64_t sub_100128484(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001284EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *_s5BatchV2IDOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100128618);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s5BatchV2IDOMa()
{
  return &_s5BatchV2IDON;
}

unint64_t sub_100128654()
{
  unint64_t result = qword_10070D510;
  if (!qword_10070D510)
  {
    sub_10000744C(&qword_10070D518);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070D510);
  }
  return result;
}

unint64_t sub_1001286B4()
{
  unint64_t result = qword_10070D520;
  if (!qword_10070D520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070D520);
  }
  return result;
}

uint64_t sub_100128708(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9 = (a3 >> 60) & 3;
  if (v9)
  {
    if (v9 == 1)
    {
      if ((a5 & 0x3000000000000000) == 0x1000000000000000)
      {
        sub_10003E020(a2, a3);
        sub_10003E020(a4, a5);
        uint64_t v10 = a2;
        unint64_t v11 = a3 & 0xCFFFFFFFFFFFFFFFLL;
        uint64_t v12 = a4;
        unint64_t v13 = a5 & 0xCFFFFFFFFFFFFFFFLL;
LABEL_7:
        char v14 = sub_100077894(v10, v11, v12, v13);
        sub_10003E03C(a4, a5);
        sub_10003E03C(a2, a3);
        return v14 & 1;
      }
    }
    else if ((a5 & 0x3000000000000000) == 0x2000000000000000 && !a4 && a5 == 0x2000000000000000)
    {
      return 1;
    }
  }
  else if ((a5 & 0x3000000000000000) == 0)
  {
    sub_10003E020(a2, a3);
    sub_10003E020(a4, a5);
    uint64_t v10 = a2;
    unint64_t v11 = a3;
    uint64_t v12 = a4;
    unint64_t v13 = a5;
    goto LABEL_7;
  }
  return 0;
}

Swift::Int sub_10012882C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1000A4C48(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_100135A58(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_100128898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = _s25MessageSectionsToDownloadVMa(0);
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v58 = (uint64_t)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v54 = (char *)v50 - v8;
  __chkstk_darwin(v7);
  uint64_t v57 = (uint64_t)v50 - v9;
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_100136444(v10);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100025F94(v11, v13, v15);
  uint64_t v17 = v16;
  swift_release();
  swift_release();
  swift_release();
  *(void *)&long long v61 = v17;
  sub_10012882C((uint64_t *)&v61);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v18 = v61;
  sub_10001FC6C();
  sub_1005E3680();
  uint64_t v19 = *(void *)(v18 + 16);
  if (!v19)
  {
    return swift_release();
  }
  uint64_t v53 = (uint64_t)v64 + 8;
  v50[1] = v18;
  unint64_t v20 = (unsigned char *)(v18 + 48);
  long long v51 = xmmword_1005F6670;
  uint64_t v52 = a1;
  unint64_t v21 = (unsigned int *)v54;
  while (1)
  {
    if (*v20) {
      goto LABEL_4;
    }
    unint64_t v22 = *((void *)v20 - 1);
    if (HIDWORD(v22) || v22 > 0x15F90) {
      goto LABEL_4;
    }
    double v24 = (double)v22 * 1.25;
    if ((~*(void *)&v24 & 0x7FF0000000000000) == 0) {
      break;
    }
    if (v24 <= -1.0) {
      goto LABEL_25;
    }
    if (v24 >= 4294967300.0) {
      goto LABEL_26;
    }
    unsigned int v25 = *((_DWORD *)v20 - 4);
    uint64_t v26 = *v2;
    unsigned int v27 = *((_DWORD *)v2 + 2);
    unsigned int v28 = v22 + 0x4000;
    if (v28 <= v24) {
      unsigned int v29 = v24;
    }
    else {
      unsigned int v29 = v28;
    }
    sub_10013668C((uint64_t)v60);
    LOBYTE(v61) = 0;
    *((void *)&v61 + 1) = v26;
    *(void *)&long long v62 = __PAIR64__(v25, v27);
    *((void *)&v62 + 1) = _swiftEmptyArrayStorage;
    LODWORD(v63) = v29;
    *((void *)&v63 + 1) = _swiftEmptyArrayStorage;
    LODWORD(v64[0]) = 0;
    WORD2(v64[0]) = 2;
    BYTE6(v64[0]) = 0;
    sub_10001FDF0((uint64_t)v60, v53, &qword_10070A8D8);
    uint64_t v30 = v56;
    uint64_t v31 = (char *)v21 + *(int *)(v56 + 20);
    uint64_t v32 = type metadata accessor for MessageHeader();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 3, v32);
    sub_10000566C(&qword_10070A150);
    char v33 = (_OWORD *)swift_allocObject();
    long long v34 = v64[9];
    long long v35 = v65[0];
    long long v36 = v64[7];
    v33[13] = v64[8];
    v33[14] = v34;
    v33[15] = v35;
    *(_OWORD *)((char *)v33 + 249) = *(_OWORD *)((char *)v65 + 9);
    long long v37 = v64[5];
    long long v38 = v64[6];
    long long v39 = v64[3];
    v33[9] = v64[4];
    v33[10] = v37;
    v33[11] = v38;
    unsigned char v33[12] = v36;
    long long v40 = v64[1];
    long long v41 = v64[2];
    long long v42 = v63;
    v33[5] = v64[0];
    v33[6] = v40;
    v33[7] = v41;
    v33[8] = v39;
    long long v43 = v61;
    long long v44 = v62;
    v33[1] = v51;
    v33[2] = v43;
    v33[3] = v44;
    v33[4] = v42;
    *unint64_t v21 = v25;
    *(void *)((char *)v21 + *(int *)(v30 + 24)) = v33;
    *(void *)((char *)v21 + *(int *)(v30 + 28)) = _swiftEmptyArrayStorage;
    uint64_t v45 = v57;
    sub_10013A920((uint64_t)v21, v57, _s25MessageSectionsToDownloadVMa);
    sub_10013A8B8(v45, v58, _s25MessageSectionsToDownloadVMa);
    unint64_t v46 = v2[3];
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v46 = sub_1000164D8(0, *(void *)(v46 + 16) + 1, 1, v46);
    }
    unint64_t v48 = *(void *)(v46 + 16);
    unint64_t v47 = *(void *)(v46 + 24);
    if (v48 >= v47 >> 1) {
      unint64_t v46 = sub_1000164D8(v47 > 1, v48 + 1, 1, v46);
    }
    *(void *)(v46 + 16) = v48 + 1;
    sub_10013A920(v58, v46+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(void *)(v55 + 72) * v48, _s25MessageSectionsToDownloadVMa);
    v2[3] = v46;
    unsigned int v59 = v25;
    sub_10000566C(&qword_100709E38);
    MessageIdentifierSet.insert(_:)();
    sub_100137CF8(v57, _s25MessageSectionsToDownloadVMa);
LABEL_4:
    v20 += 24;
    if (!--v19) {
      return swift_release();
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100128DB4(uint64_t a1)
{
  uint64_t v30 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v31 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v9 = v8 | (v7 << 6);
      goto LABEL_20;
    }
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v10 >= v31) {
      return swift_release();
    }
    unint64_t v11 = *(void *)(v30 + 8 * v10);
    ++v7;
    if (!v11)
    {
      int64_t v7 = v10 + 1;
      if (v10 + 1 >= v31) {
        return swift_release();
      }
      unint64_t v11 = *(void *)(v30 + 8 * v7);
      if (!v11)
      {
        int64_t v7 = v10 + 2;
        if (v10 + 2 >= v31) {
          return swift_release();
        }
        unint64_t v11 = *(void *)(v30 + 8 * v7);
        if (!v11) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
LABEL_20:
    uint64_t v13 = *(void *)(a1 + 56) + 16 * v9;
    if ((*(unsigned char *)(v13 + 8) & 1) == 0 && *(unsigned char *)(v13 + 9))
    {
      unsigned int v14 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v9);
      uint64_t v15 = *(void *)v13;
      if (HIDWORD(*(void *)v13))
      {
        uint64_t v16 = *(void **)(v1 + 16);
        LODWORD(v15) = 0;
        unsigned int v17 = 0;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_26;
        }
LABEL_24:
        uint64_t v16 = sub_10001678C(0, v16[2] + 1, 1, v16);
        unsigned int v17 = v15;
        goto LABEL_26;
      }
      uint64_t v16 = *(void **)(v1 + 16);
      unsigned int v17 = *(void *)v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        goto LABEL_24;
      }
LABEL_26:
      unint64_t v19 = v16[2];
      unint64_t v18 = v16[3];
      if (v19 >= v18 >> 1) {
        uint64_t v16 = sub_10001678C((void *)(v18 > 1), v19 + 1, 1, v16);
      }
      sub_10013668C((uint64_t)v32);
      *(void *)&v33[0] = __PAIR64__(v17, v14);
      uint64_t result = sub_1001359F8(v32, (uint64_t)v33 + 8);
      v16[2] = v19 + 1;
      unint64_t v20 = &v16[24 * v19];
      long long v21 = v33[3];
      long long v22 = v33[0];
      long long v23 = v33[1];
      v20[4] = v33[2];
      v20[5] = v21;
      v20[2] = v22;
      v20[3] = v23;
      long long v24 = v33[7];
      long long v26 = v33[4];
      long long v25 = v33[5];
      v20[8] = v33[6];
      v20[9] = v24;
      v20[6] = v26;
      v20[7] = v25;
      long long v28 = v33[9];
      long long v27 = v34[0];
      long long v29 = v33[8];
      *(_OWORD *)((char *)v20 + 201) = *(_OWORD *)((char *)v34 + 9);
      v20[11] = v28;
      v20[12] = v27;
      v20[10] = v29;
      *(void *)(v1 + 16) = v16;
    }
  }
  int64_t v12 = v10 + 3;
  if (v12 >= v31) {
    return swift_release();
  }
  unint64_t v11 = *(void *)(v30 + 8 * v12);
  if (v11)
  {
    int64_t v7 = v12;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v31) {
      return swift_release();
    }
    unint64_t v11 = *(void *)(v30 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_19;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_10012903C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, _DWORD *a4@<X8>)
{
  uint64_t v143 = a3;
  uint64_t v150 = a2;
  uint64_t v168 = a1;
  uint64_t v6 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v136 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v142);
  uint64_t v160 = (uint64_t)&v136 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v136 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v159 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  uint64_t v15 = (char *)&v136 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000566C(&qword_10070A640);
  uint64_t v149 = *(void *)(v16 - 8);
  __chkstk_darwin(v16 - 8);
  uint64_t v176 = (int *)((char *)&v136 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v151 = type metadata accessor for DownloadTask.CommandID(0);
  __chkstk_darwin(v151);
  int64_t v154 = (_DWORD *)((char *)&v136 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v166 = type metadata accessor for MessageHeader();
  uint64_t v19 = *(void *)(v166 - 8);
  __chkstk_darwin(v166);
  uint64_t v147 = (uint64_t)&v136 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_10000566C(&qword_10070D6E8);
  __chkstk_darwin(v158);
  uint64_t v167 = (uint64_t)&v136 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = _s19MessageHeaderStatusOMa(0);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v148 = (uint64_t)&v136 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v157 = (uint64_t)&v136 - v26;
  __chkstk_darwin(v25);
  uint64_t v165 = (uint64_t)&v136 - v27;
  os_log_t v175 = (int *)_s25MessageSectionsToDownloadVMa(0);
  uint64_t v28 = __chkstk_darwin(v175);
  uint64_t v172 = (_DWORD *)((char *)&v136 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v174 = (uint64_t)&v136 - v31;
  __chkstk_darwin(v30);
  uint64_t v173 = (uint64_t)&v136 - v33;
  uint64_t v144 = v4;
  uint64_t v34 = *((void *)v4 + 3);
  uint64_t v171 = *(void *)(v34 + 16);
  if (!v171) {
    goto LABEL_58;
  }
  uint64_t v137 = v13;
  uint64_t v138 = v11;
  uint64_t v139 = v8;
  uint64_t v140 = v10;
  uint64_t v145 = a4;
  uint64_t v146 = v34;
  unint64_t v141 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v169 = *(void *)(v32 + 72);
  uint64_t v170 = v34 + v141;
  char v156 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
  os_log_type_t v163 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  swift_bridgeObjectRetain();
  unint64_t v35 = 0;
  uint64_t v152 = 0;
  while (2)
  {
    uint64_t v40 = v169 * v35;
    uint64_t v41 = v170 + v169 * v35;
    uint64_t v42 = *(void *)(v41 + v175[6]);
    uint64_t v43 = *(void *)(v42 + 16);
    if (v43)
    {
      swift_bridgeObjectRetain();
      long long v44 = *(_OWORD *)(v42 + 224);
      long long v190 = *(_OWORD *)(v42 + 208);
      long long v191 = v44;
      v192[0] = *(_OWORD *)(v42 + 240);
      *(_OWORD *)((char *)v192 + 9) = *(_OWORD *)(v42 + 249);
      long long v45 = *(_OWORD *)(v42 + 160);
      long long v186 = *(_OWORD *)(v42 + 144);
      long long v187 = v45;
      long long v46 = *(_OWORD *)(v42 + 192);
      long long v188 = *(_OWORD *)(v42 + 176);
      long long v189 = v46;
      long long v47 = *(_OWORD *)(v42 + 96);
      long long v182 = *(_OWORD *)(v42 + 80);
      long long v183 = v47;
      long long v48 = *(_OWORD *)(v42 + 128);
      long long v184 = *(_OWORD *)(v42 + 112);
      long long v185 = v48;
      long long v49 = *(_OWORD *)(v42 + 48);
      long long v179 = *(_OWORD *)(v42 + 32);
      long long v180 = v49;
      long long v181 = *(_OWORD *)(v42 + 64);
      sub_10013A9E4((uint64_t)&v179);
      uint64_t v50 = swift_bridgeObjectRetain();
      char v51 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v50, _swiftEmptyArrayStorage);
      swift_bridgeObjectRelease();
      sub_10013AB64((uint64_t)&v179);
      if (v51)
      {
LABEL_3:
        swift_bridgeObjectRelease();
        uint64_t v36 = v173;
        sub_10013A8B8(v41, v173, _s25MessageSectionsToDownloadVMa);
        goto LABEL_4;
      }
      uint64_t v164 = v40;
      uint64_t v52 = 272;
      while (--v43)
      {
        uint64_t v53 = v52 + 240;
        uint64_t v54 = (long long *)(v42 + v52);
        long long v55 = *v54;
        long long v56 = v54[2];
        long long v180 = v54[1];
        long long v181 = v56;
        long long v179 = v55;
        long long v57 = v54[3];
        long long v58 = v54[4];
        long long v59 = v54[6];
        long long v184 = v54[5];
        long long v185 = v59;
        long long v182 = v57;
        long long v183 = v58;
        long long v60 = v54[7];
        long long v61 = v54[8];
        long long v62 = v54[10];
        long long v188 = v54[9];
        long long v189 = v62;
        long long v186 = v60;
        long long v187 = v61;
        long long v63 = v54[11];
        long long v64 = v54[12];
        long long v65 = v54[13];
        *(_OWORD *)((char *)v192 + 9) = *(long long *)((char *)v54 + 217);
        long long v191 = v64;
        v192[0] = v65;
        long long v190 = v63;
        sub_10013A9E4((uint64_t)&v179);
        uint64_t v66 = swift_bridgeObjectRetain();
        char v67 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v66, _swiftEmptyArrayStorage);
        swift_bridgeObjectRelease();
        sub_10013AB64((uint64_t)&v179);
        uint64_t v52 = v53;
        if (v67) {
          goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v164 = v169 * v35;
    }
    uint64_t v36 = v173;
    sub_10013A8B8(v41, v173, _s25MessageSectionsToDownloadVMa);
    uint64_t v68 = *(void *)(v36 + v175[7]);
    uint64_t v69 = *(void *)(v68 + 16);
    if (v69)
    {
      swift_bridgeObjectRetain();
      uint64_t v70 = swift_bridgeObjectRetain();
      char v71 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v70, _swiftEmptyArrayStorage);
      swift_bridgeObjectRelease();
      if (v71)
      {
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
      if (v69 != 1)
      {
        uint64_t v72 = 5;
        while (1)
        {
          uint64_t v73 = v72 - 3;
          if (__OFADD__(v72 - 4, 1)) {
            break;
          }
          uint64_t v74 = swift_bridgeObjectRetain();
          char v75 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v74, _swiftEmptyArrayStorage);
          swift_bridgeObjectRelease();
          if (v75)
          {
            swift_bridgeObjectRelease();
            uint64_t v36 = v173;
LABEL_4:
            sub_100137CF8(v36, _s25MessageSectionsToDownloadVMa);
            uint64_t v37 = v174;
            sub_10013A8B8(v41, v174, _s25MessageSectionsToDownloadVMa);
LABEL_5:
            sub_100137CF8(v37, _s25MessageSectionsToDownloadVMa);
            uint64_t v38 = v41;
            uint64_t v39 = (uint64_t)v172;
            sub_10013A8B8(v38, (uint64_t)v172, _s25MessageSectionsToDownloadVMa);
            goto LABEL_6;
          }
          ++v72;
          if (v73 == v69) {
            goto LABEL_23;
          }
        }
        __break(1u);
LABEL_69:
        __break(1u);
        goto LABEL_70;
      }
LABEL_23:
      swift_bridgeObjectRelease();
      uint64_t v36 = v173;
    }
    sub_100137CF8(v36, _s25MessageSectionsToDownloadVMa);
    uint64_t v76 = v174;
    sub_10013A8B8(v41, v174, _s25MessageSectionsToDownloadVMa);
    uint64_t v77 = v76 + v175[5];
    uint64_t v78 = v165;
    uint64_t v79 = v166;
    os_log_t v153 = *v156;
    v153(v165, 2, 3, v166);
    uint64_t v80 = v167;
    uint64_t v81 = v167 + *(int *)(v158 + 48);
    sub_10013A8B8(v77, v167, _s19MessageHeaderStatusOMa);
    sub_10013A8B8(v78, v81, _s19MessageHeaderStatusOMa);
    unint64_t v82 = *v163;
    unsigned int v83 = (*v163)(v80, 3, v79);
    uint64_t v84 = v157;
    switch(v83)
    {
      case 1u:
        if (v82(v81, 3, v166) != 1) {
          goto LABEL_32;
        }
        goto LABEL_36;
      case 2u:
        if (v82(v81, 3, v166) == 2) {
          goto LABEL_36;
        }
        goto LABEL_32;
      case 3u:
        if (v82(v81, 3, v166) != 3) {
          goto LABEL_32;
        }
        goto LABEL_36;
      default:
        sub_10013A8B8(v167, v157, _s19MessageHeaderStatusOMa);
        if (v82(v81, 3, v166))
        {
          sub_100137CF8(v84, (uint64_t (*)(void))type metadata accessor for MessageHeader);
LABEL_32:
          sub_100007A48(v167, &qword_10070D6E8);
          goto LABEL_33;
        }
        uint64_t v85 = v147;
        sub_10013A920(v81, v147, (uint64_t (*)(void))type metadata accessor for MessageHeader);
        char v86 = static MessageHeader.== infix(_:_:)();
        sub_100137CF8(v85, (uint64_t (*)(void))type metadata accessor for MessageHeader);
        sub_100137CF8(v84, (uint64_t (*)(void))type metadata accessor for MessageHeader);
        if ((v86 & 1) == 0)
        {
          sub_100137CF8(v167, _s19MessageHeaderStatusOMa);
LABEL_33:
          uint64_t v37 = v174;
          sub_100137CF8(v165, _s19MessageHeaderStatusOMa);
          goto LABEL_5;
        }
LABEL_36:
        sub_100137CF8(v167, _s19MessageHeaderStatusOMa);
        sub_100137CF8(v165, _s19MessageHeaderStatusOMa);
        sub_100137CF8(v174, _s25MessageSectionsToDownloadVMa);
        uint64_t v87 = v41;
        uint64_t v88 = v172;
        sub_10013A8B8(v87, (uint64_t)v172, _s25MessageSectionsToDownloadVMa);
        uint64_t v89 = v154;
        *int64_t v154 = *v88;
        uint64_t v90 = swift_storeEnumTagMultiPayload();
        __chkstk_darwin(v90);
        *(&v136 - 2) = (uint64_t)v89;
        uint64_t v91 = v150;
        swift_bridgeObjectRetain();
        uint64_t v92 = v91;
        uint64_t v93 = v152;
        uint64_t v68 = sub_10002B7F0((uint64_t (*)(char *))sub_10013E134, &v136 - 4, v92);
        uint64_t v152 = v93;
        int64_t v94 = *(void *)(v68 + 16);
        if (v94)
        {
          *(void *)&long long v179 = _swiftEmptyArrayStorage;
          sub_10001AA54(0, v94, 0);
          uint64_t v95 = *(unsigned __int8 *)(v149 + 80);
          uint64_t v162 = v68;
          uint64_t v96 = v68 + ((v95 + 32) & ~v95);
          uint64_t v97 = *(void *)(v149 + 72);
          os_log_t v98 = (void *)v179;
          do
          {
            uint64_t v99 = v176;
            sub_1000079E4(v96, (uint64_t)v176, &qword_10070A640);
            int v100 = *v99;
            sub_100007A48((uint64_t)v99, &qword_10070A640);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_10001AA54(0, v98[2] + 1, 1);
              os_log_t v98 = (void *)v179;
            }
            unint64_t v102 = v98[2];
            unint64_t v101 = v98[3];
            uint64_t v68 = v102 + 1;
            if (v102 >= v101 >> 1)
            {
              sub_10001AA54(v101 > 1, v102 + 1, 1);
              os_log_t v98 = (void *)v179;
            }
            v98[2] = v68;
            *((_DWORD *)v98 + v102 + 8) = v100;
            v96 += v97;
            --v94;
          }
          while (v94);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          os_log_t v98 = _swiftEmptyArrayStorage;
        }
        uint64_t v69 = v160;
        uint64_t v162 = v98[2];
        if (!v162)
        {
          swift_bridgeObjectRelease();
          goto LABEL_61;
        }
        uint64_t v161 = v98 + 4;
        uint64_t v103 = *(void *)(v168 + 16);
        swift_bridgeObjectRetain();
        uint64_t v104 = 0;
        uint64_t v155 = v103;
        while (!v103)
        {
LABEL_48:
          if (++v104 == v162)
          {
            swift_bridgeObjectRelease_n();
LABEL_61:
            sub_100137CF8((uint64_t)v154, type metadata accessor for DownloadTask.CommandID);
            sub_100137CF8((uint64_t)v172, _s25MessageSectionsToDownloadVMa);
            swift_bridgeObjectRelease();
            uint64_t v15 = v144;
            uint64_t v41 = *((void *)v144 + 3);
            if (v35 >= *(void *)(v41 + 16)) {
              goto LABEL_69;
            }
            LODWORD(v68) = *(_DWORD *)(v41 + v141 + v164);
            v153(v148, 3, 3, v166);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *((void *)v15 + 3) = v41;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
LABEL_70:
              uint64_t v41 = sub_100093490(v41);
              *((void *)v15 + 3) = v41;
            }
            if (v35 >= *(void *)(v41 + 16))
            {
              __break(1u);
              JUMPOUT(0x10012A404);
            }
            sub_10013B5F4(v148, v41 + v141 + v164 + v175[5]);
            uint64_t v113 = v137;
            uint64_t v112 = v138;
            uint64_t v114 = v143;
            uint64_t v115 = v140;
            (*(void (**)(char *, uint64_t, uint64_t))(v138 + 16))(v137, v143, v140);
            sub_10013A8B8(v114, v69, type metadata accessor for MailboxTaskLogger);
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            uint64_t v116 = sub_1005E0EB0();
            os_log_type_t v117 = sub_1005E2590();
            int v118 = v117;
            if (os_log_type_enabled(v116, v117))
            {
              uint64_t v119 = v69;
              uint64_t v120 = swift_slowAlloc();
              uint64_t v176 = (int *)swift_slowAlloc();
              v178[0] = (uint64_t)v176;
              *(_DWORD *)uint64_t v120 = 68159491;
              LODWORD(v179) = 2;
              LODWORD(v177) = v68;
              sub_1005E2960();
              *(_WORD *)(v120 + 8) = 256;
              uint64_t v121 = v119 + *(int *)(v142 + 20);
              LOBYTE(v179) = *(unsigned char *)v121;
              sub_1005E2960();
              *(_WORD *)(v120 + 11) = 2082;
              LODWORD(v175) = v118;
              uint64_t v122 = *(void *)(v121 + 8);
              unint64_t v123 = *(void *)(v121 + 16);
              swift_bridgeObjectRetain();
              *(void *)&long long v179 = sub_1000C6914(v122, v123, v178);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              *(_WORD *)(v120 + 21) = 1040;
              LODWORD(v179) = 2;
              sub_1005E2960();
              *(_WORD *)(v120 + 27) = 512;
              LOWORD(v179) = *(_WORD *)(v121 + 24);
              sub_1005E2960();
              *(_WORD *)(v120 + 31) = 2160;
              *(void *)&long long v179 = 0x786F626C69616DLL;
              sub_1005E2960();
              *(_WORD *)(v120 + 41) = 2085;
              int v124 = *(_DWORD *)(v121 + 40);
              *(void *)&long long v179 = *(void *)(v121 + 32);
              DWORD2(v179) = v124;
              swift_bridgeObjectRetain();
              uint64_t v125 = sub_1005E1CC0();
              *(void *)&long long v179 = sub_1000C6914(v125, v126, v178);
              LODWORD(v68) = v177;
              sub_1005E2960();
              swift_bridgeObjectRelease();
              sub_100137CF8(v160, type metadata accessor for MailboxTaskLogger);
              *(_WORD *)(v120 + 51) = 1024;
              LODWORD(v179) = v68;
              sub_1005E2960();
              _os_log_impl((void *)&_mh_execute_header, v116, (os_log_type_t)v175, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Fetching headers for message %u", (uint8_t *)v120, 0x39u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v140);
            }
            else
            {
              sub_100137CF8(v69, type metadata accessor for MailboxTaskLogger);

              (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v115);
            }
            uint64_t v127 = v145;
            uint64_t v128 = sub_10000566C(&qword_10070D4F0);
            uint64_t v129 = (uint64_t)v127 + *(int *)(v128 + 48);
            _DWORD *v127 = v68;
            swift_storeEnumTagMultiPayload();
            LODWORD(v179) = v68;
            sub_100063E18();
            uint64_t v130 = (uint64_t)v139;
            MessageIdentifierSet.init(_:)();
            sub_10000566C(&qword_10070A178);
            uint64_t v131 = swift_allocObject();
            *(_OWORD *)(v131 + 16) = xmmword_1005F6690;
            *(void *)(v131 + 32) = 7;
            *(void *)(v131 + 40) = 0;
            *(void *)(v131 + 48) = 0;
            *(void *)(v131 + 56) = 0;
            *(unsigned char *)(v131 + 68) = -64;
            *(_DWORD *)(v131 + 64) = 0;
            uint64_t v132 = SectionSpecifier.header.unsafeMutableAddressor();
            uint64_t v133 = *v132;
            uint64_t v134 = v132[1];
            unsigned __int8 v135 = *((unsigned char *)v132 + 16);
            *(void *)(v131 + 72) = 1;
            *(void *)(v131 + 80) = v133;
            *(void *)(v131 + 88) = v134;
            *(void *)(v131 + 96) = v135;
            *(unsigned char *)(v131 + 108) = 33;
            *(_DWORD *)(v131 + 104) = 0;
            static ClientCommand.uidFetch(messages:items:)(v130, v131, v129);
            swift_bridgeObjectRetain();
            sub_10013B5CC(v134, v135);
            swift_bridgeObjectRelease();
            sub_100007A48(v130, &qword_100709E38);
            return (*(uint64_t (**)(_DWORD *, void, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56))(v127, 0, 1, v128);
          }
        }
        int v105 = *((_DWORD *)v161 + v104);
        uint64_t v106 = v159;
        uint64_t v68 = v168 + ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80));
        swift_bridgeObjectRetain_n();
        uint64_t v107 = *(void *)(v106 + 72);
        break;
    }
    while (1)
    {
      sub_10013A8B8(v68, (uint64_t)v15, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() != 1) {
        break;
      }
      sub_100137CF8((uint64_t)v15, type metadata accessor for TaskHistory.Previous);
LABEL_52:
      v68 += v107;
      if (!--v103)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v69 = v160;
        uint64_t v103 = v155;
        goto LABEL_48;
      }
    }
    int v108 = *(_DWORD *)&v15[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
    sub_100137CF8((uint64_t)v15, type metadata accessor for ClientCommand);
    if (v108 != v105) {
      goto LABEL_52;
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_100137CF8((uint64_t)v154, type metadata accessor for DownloadTask.CommandID);
    uint64_t v39 = (uint64_t)v172;
LABEL_6:
    sub_100137CF8(v39, _s25MessageSectionsToDownloadVMa);
    if (++v35 != v171) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  a4 = v145;
LABEL_58:
  uint64_t v109 = sub_10000566C(&qword_10070D4F0);
  return (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 56))(a4, 1, 1, v109);
}

uint64_t sub_10012A414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v36 = a5;
  uint64_t v10 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v10 - 8);
  uint64_t v35 = (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000566C(&qword_10070D750);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v34 - v16;
  uint64_t v18 = *(void *)(v5 + 24);
  uint64_t v34 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  sub_10013EFE8(v21, v18, (uint64_t)v15);
  uint64_t v23 = _s18SectionDataRequestVMa();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v15, 1, v23) == 1)
  {
    sub_10013F544(v34, v19, v20, v22, v18, (uint64_t)v17);
    sub_100007A48((uint64_t)v15, &qword_10070D750);
  }
  else
  {
    sub_10013A920((uint64_t)v15, (uint64_t)v17, (uint64_t (*)(void))_s18SectionDataRequestVMa);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v17, 0, 1, v23);
  }
  if (v25(v17, 1, v23) == 1)
  {
    sub_100007A48((uint64_t)v17, &qword_10070D750);
    uint64_t v26 = sub_10000566C(&qword_10070D4F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v36, 1, 1, v26);
  }
  else
  {
    uint64_t v28 = sub_10000566C(&qword_10070D4F0);
    uint64_t v29 = v36;
    uint64_t v30 = v36 + *(int *)(v28 + 48);
    uint64_t v37 = &off_1006BA870;
    uint64_t v31 = *(void *)&v17[*(int *)(v23 + 24)];
    __chkstk_darwin(v28);
    *(&v34 - 2) = (uint64_t)v17;
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1000EFD28((void (*)(long long *__return_ptr, uint64_t *))sub_10013E114, (uint64_t)(&v34 - 4), v31);
    swift_bridgeObjectRelease();
    sub_100011E08((uint64_t)v32);
    sub_10013A8B8((uint64_t)v17, v29, (uint64_t (*)(void))_s18SectionDataRequestVMa);
    type metadata accessor for DownloadTask.CommandID(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = v35;
    sub_1000079E4((uint64_t)v17, v35, &qword_100709E30);
    static ClientCommand.uidFetch(messages:items:)(v33, (uint64_t)v37, v30);
    swift_bridgeObjectRelease();
    sub_100007A48(v33, &qword_100709E38);
    sub_100137CF8((uint64_t)v17, (uint64_t (*)(void))_s18SectionDataRequestVMa);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v29, 0, 1, v28);
  }
}

uint64_t sub_10012A800(unint64_t a1, uint64_t a2)
{
  uint64_t v189 = a2;
  unint64_t i = a1;
  uint64_t v208 = sub_10000566C(&qword_10070A168);
  uint64_t v192 = *(void *)(v208 - 8);
  uint64_t v2 = __chkstk_darwin(v208);
  uint64_t v207 = (void *)((char *)v171 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v2);
  os_log_t v206 = (os_log_t)((char *)v171 - v4);
  uint64_t v5 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v171 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = (int *)sub_10000566C(&qword_10070A378);
  uint64_t v8 = __chkstk_darwin(v210);
  uint64_t v10 = (char *)v171 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v201 = (uint64_t)v171 - v11;
  uint64_t v195 = _s18SectionDataRequestVMa();
  uint64_t v12 = __chkstk_darwin(v195);
  uint64_t v193 = (uint64_t)v171 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v191 = (uint64_t)v171 - v15;
  __chkstk_darwin(v14);
  uint64_t v197 = (uint64_t)v171 - v16;
  uint64_t v187 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v17 = __chkstk_darwin(v187);
  uint64_t v194 = (uint64_t)v171 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v204 = (uint64_t)v171 - v19;
  uint64_t v20 = sub_1005E0ED0();
  *(void *)&long long v209 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  long long v190 = (char *)v171 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  int v205 = (char *)v171 - v23;
  uint64_t v24 = _s19MessageHeaderStatusOMa(0);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v27 = (char *)v171 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)v171 - v28;
  uint64_t v196 = _s25MessageSectionsToDownloadVMa(0);
  uint64_t v198 = *(void *)(v196 - 8);
  __chkstk_darwin(v196);
  uint64_t v31 = (_DWORD *)((char *)v171 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = type metadata accessor for DownloadTask.CommandID(0);
  __chkstk_darwin(v32);
  uint64_t v34 = (_DWORD *)((char *)v171 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10013A8B8(i, (uint64_t)v34, type metadata accessor for DownloadTask.CommandID);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 2:
      uint64_t v186 = v20;
      uint64_t v38 = *(void *)(v203 + 24);
      uint64_t v39 = *(void *)(v38 + 16);
      if (!v39) {
        return result;
      }
      uint64_t v210 = (int *)(v203 + 24);
      LODWORD(i) = *v34;
      unint64_t v40 = (*(unsigned __int8 *)(v198 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80);
      uint64_t v41 = *(void *)(v198 + 72);
      swift_bridgeObjectRetain();
      unint64_t v42 = 0;
      while (1)
      {
        sub_10013A8B8(v38 + v40, (uint64_t)v31, _s25MessageSectionsToDownloadVMa);
        int v43 = *v31;
        sub_100137CF8((uint64_t)v31, _s25MessageSectionsToDownloadVMa);
        if (i == v43) {
          break;
        }
        ++v42;
        v40 += v41;
        if (v39 == v42) {
          return swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v147 = v210;
      if (v42 >= *(void *)(*(void *)v210 + 16)) {
        goto LABEL_74;
      }
      sub_10013A8B8(*(void *)v210 + *(int *)(v196 + 20) + v40, (uint64_t)v29, _s19MessageHeaderStatusOMa);
      uint64_t v148 = type metadata accessor for MessageHeader();
      uint64_t v149 = *(void *)(v148 - 8);
      uint64_t v150 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v149 + 56);
      uint64_t v207 = (void *)(v149 + 56);
      uint64_t v208 = (uint64_t)v150;
      v150(v27, 2, 3, v148);
      char v151 = sub_10013A568((uint64_t)v29, (uint64_t)v27);
      sub_100137CF8((uint64_t)v27, _s19MessageHeaderStatusOMa);
      sub_100137CF8((uint64_t)v29, _s19MessageHeaderStatusOMa);
      if (v151) {
        goto LABEL_65;
      }
      if (v42 >= *(void *)(*(void *)v147 + 16)) {
        goto LABEL_75;
      }
      sub_10013A8B8(*(void *)v147 + *(int *)(v196 + 20) + v40, (uint64_t)v29, _s19MessageHeaderStatusOMa);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v208)(v27, 3, 3, v148);
      char v152 = sub_10013A568((uint64_t)v29, (uint64_t)v27);
      sub_100137CF8((uint64_t)v27, _s19MessageHeaderStatusOMa);
      uint64_t result = sub_100137CF8((uint64_t)v29, _s19MessageHeaderStatusOMa);
      if ((v152 & 1) == 0) {
        return result;
      }
LABEL_65:
      uint64_t v153 = v209;
      uint64_t v154 = v189;
      uint64_t v155 = v186;
      (*(void (**)(char *, uint64_t, uint64_t))(v209 + 16))(v205, v189, v186);
      uint64_t v156 = v204;
      sub_10013A8B8(v154, v204, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v157 = sub_1005E0EB0();
      os_log_type_t v158 = sub_1005E25A0();
      int v159 = v158;
      if (os_log_type_enabled(v157, v158))
      {
        uint64_t v160 = swift_slowAlloc();
        LODWORD(v208) = v159;
        uint64_t v161 = v160;
        uint64_t v207 = (void *)swift_slowAlloc();
        uint64_t v212 = (uint64_t)v207;
        *(_DWORD *)uint64_t v161 = 68159491;
        LODWORD(v215[0]) = 2;
        sub_1005E2960();
        *(_WORD *)(v161 + 8) = 256;
        uint64_t v162 = v156 + *(int *)(v187 + 20);
        LOBYTE(v215[0]) = *(unsigned char *)v162;
        sub_1005E2960();
        *(_WORD *)(v161 + 11) = 2082;
        os_log_t v206 = v157;
        uint64_t v163 = v153;
        uint64_t v165 = *(void *)(v162 + 8);
        unint64_t v164 = *(void *)(v162 + 16);
        swift_bridgeObjectRetain();
        *(void *)&v215[0] = sub_1000C6914(v165, v164, &v212);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v161 + 21) = 1040;
        LODWORD(v215[0]) = 2;
        sub_1005E2960();
        *(_WORD *)(v161 + 27) = 512;
        LOWORD(v215[0]) = *(_WORD *)(v162 + 24);
        sub_1005E2960();
        *(_WORD *)(v161 + 31) = 2160;
        *(void *)&v215[0] = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v161 + 41) = 2085;
        int v166 = *(_DWORD *)(v162 + 40);
        *(void *)&v215[0] = *(void *)(v162 + 32);
        DWORD2(v215[0]) = v166;
        swift_bridgeObjectRetain();
        uint64_t v167 = sub_1005E1CC0();
        *(void *)&v215[0] = sub_1000C6914(v167, v168, &v212);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100137CF8(v204, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v161 + 51) = 1024;
        int v169 = i;
        LODWORD(v215[0]) = i;
        sub_1005E2960();
        os_log_t v170 = v206;
        _os_log_impl((void *)&_mh_execute_header, v206, (os_log_type_t)v208, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Server did not return header data for message %u.", (uint8_t *)v161, 0x39u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v163 + 8))(v205, v186);
      }
      else
      {
        sub_100137CF8(v156, type metadata accessor for MailboxTaskLogger);

        (*(void (**)(char *, uint64_t))(v153 + 8))(v205, v155);
        int v169 = i;
      }
      LODWORD(v212) = v169;
      _s18InProgressMessagesVMa(0);
      sub_10000566C(&qword_100709E38);
      MessageIdentifierSet.insert(_:)();
      sub_1000EF8A0(v42, (uint64_t)v31);
      uint64_t v36 = _s25MessageSectionsToDownloadVMa;
      uint64_t v37 = (uint64_t)v31;
      return sub_100137CF8(v37, v36);
    case 3:
      uint64_t v186 = v20;
      uint64_t v44 = v197;
      sub_10013A920((uint64_t)v34, v197, (uint64_t (*)(void))_s18SectionDataRequestVMa);
      sub_1000079E4(v44, (uint64_t)v7, &qword_100709E30);
      sub_1000079E4((uint64_t)v7, (uint64_t)v10, &qword_100709E38);
      uint64_t v45 = sub_10000566C(&qword_100709E38);
      uint64_t v46 = MessageIdentifierSet.startIndex.getter(v45);
      uint64_t v48 = v47;
      sub_100007A48((uint64_t)v7, &qword_100709E38);
      long long v49 = v210;
      uint64_t v50 = (uint64_t *)&v10[v210[9]];
      uint64_t *v50 = v46;
      v50[1] = v48;
      uint64_t v51 = v201;
      sub_10001FDF0((uint64_t)v10, v201, &qword_10070A378);
      uint64_t v52 = (void *)(v51 + v49[9]);
      uint64_t v53 = *v52;
      uint64_t v54 = v52[1];
      if (v53 == MessageIdentifierSet.endIndex.getter(v45) && v54 == v55) {
        goto LABEL_10;
      }
      uint64_t v176 = (void (**)(char *, uint64_t))(v209 + 8);
      uint64_t v177 = (void (**)(char *, uint64_t, uint64_t))(v209 + 16);
      uint64_t v174 = (char *)&v212 + 1;
      os_log_t v175 = (char *)&v212 + 4;
      uint64_t v178 = &v213;
      uint64_t v173 = (char *)&v212 + 2;
      *(void *)&long long v56 = 68160003;
      long long v172 = v56;
      v171[1] = (char *)&type metadata for Any + 8;
      long long v183 = v31;
      uint64_t v199 = v52;
      uint64_t v200 = v45;
      break;
    default:
      uint64_t v36 = type metadata accessor for DownloadTask.CommandID;
      uint64_t v37 = (uint64_t)v34;
      return sub_100137CF8(v37, v36);
  }
  while (2)
  {
    MessageIdentifierSet.subscript.getter();
    int v202 = v215[0];
    MessageIdentifierSet.index(_:offsetBy:)();
    *uint64_t v52 = v61;
    v52[1] = v62;
    uint64_t v63 = *(void *)(v203 + 24);
    uint64_t v64 = *(void *)(v63 + 16);
    if (!v64) {
      goto LABEL_15;
    }
    uint64_t v65 = v198;
    unint64_t v66 = (*(unsigned __int8 *)(v198 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80);
    swift_bridgeObjectRetain();
    unint64_t v67 = 0;
    uint64_t v68 = *(void *)(v65 + 72);
    int v69 = v202;
    while (1)
    {
      sub_10013A8B8(v63 + v66, (uint64_t)v31, _s25MessageSectionsToDownloadVMa);
      int v70 = *v31;
      sub_100137CF8((uint64_t)v31, _s25MessageSectionsToDownloadVMa);
      if (v69 == v70) {
        break;
      }
      ++v67;
      v66 += v68;
      if (v64 == v67) {
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v71 = *(void *)(v203 + 24);
    if (v67 >= *(void *)(v71 + 16))
    {
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    uint64_t v72 = *(void *)(v71 + *(int *)(v196 + 24) + v66);
    uint64_t v73 = *(void *)(v72 + 16);
    if (!v73) {
      goto LABEL_15;
    }
    *(void *)&long long v209 = v71 + *(int *)(v196 + 24);
    uint64_t v74 = *(void *)(v197 + *(int *)(v195 + 20));
    swift_bridgeObjectRetain();
    char v75 = 0;
    for (unint64_t i = 0; ; ++i)
    {
      uint64_t v210 = v75;
      uint64_t v76 = (_OWORD *)((char *)v75 + v72);
      long long v77 = v76[2];
      long long v78 = v76[4];
      v215[1] = v76[3];
      v215[2] = v78;
      v215[0] = v77;
      long long v79 = v76[5];
      long long v80 = v76[6];
      long long v81 = v76[8];
      v215[5] = v76[7];
      v215[6] = v81;
      v215[3] = v79;
      v215[4] = v80;
      long long v82 = v76[9];
      long long v83 = v76[10];
      long long v84 = v76[12];
      v215[9] = v76[11];
      v215[10] = v84;
      v215[7] = v82;
      v215[8] = v83;
      long long v85 = v76[13];
      long long v86 = v76[14];
      long long v87 = v76[15];
      *(_OWORD *)((char *)v216 + 9) = *(_OWORD *)((char *)v76 + 249);
      v215[12] = v86;
      v216[0] = v87;
      v215[11] = v85;
      sub_10013A9E4((uint64_t)v215);
      uint64_t v88 = swift_bridgeObjectRetain();
      char v89 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v88, v74);
      swift_bridgeObjectRelease();
      sub_10013AB64((uint64_t)v215);
      if (v89) {
        break;
      }
      if (v73 - 1 == i) {
        goto LABEL_14;
      }
      char v75 = v210 + 60;
    }
    swift_bridgeObjectRelease();
    if (v67 >= *(void *)(v71 + 16)) {
      goto LABEL_70;
    }
    uint64_t v90 = *(void *)(v209 + v66);
    if (i >= *(void *)(v90 + 16))
    {
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    uint64_t v91 = *(void *)(v197 + *(int *)(v195 + 24));
    uint64_t v92 = *(void *)(v91 + 16);
    if (!v92) {
      goto LABEL_15;
    }
    uint64_t v93 = (char *)v210 + v90;
    uint64_t v94 = *((void *)v93 + 9);
    unsigned int v95 = *((_DWORD *)v93 + 20);
    unsigned int v96 = v93[84];
    uint64_t v188 = v91 + 32;
    swift_bridgeObjectRetain();
    uint64_t v182 = v91;
    swift_bridgeObjectRetain();
    uint64_t v97 = 0;
    uint64_t v98 = v194;
    uint64_t v185 = v94;
    uint64_t v181 = v92;
    unsigned int v179 = v96;
    unsigned int v180 = v95;
    while (1)
    {
      unsigned int v99 = *(_DWORD *)(v188 + 8 * v97);
      if (v96 > 1 || v99 < v95) {
        break;
      }
LABEL_35:
      if (++v97 == v92)
      {
        swift_bridgeObjectRelease();
LABEL_14:
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    uint64_t v100 = *(void *)(v94 + 16);
    if (v100)
    {
      uint64_t v184 = v97;
      uint64_t v101 = v192;
      uint64_t v102 = v94 + ((*(unsigned __int8 *)(v192 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v192 + 80));
      swift_bridgeObjectRetain();
      uint64_t v204 = *(void *)(v101 + 72);
      LODWORD(v205) = v99;
      while (1)
      {
        os_log_t v103 = v206;
        sub_1000079E4(v102, (uint64_t)v206, &qword_10070A168);
        uint64_t v104 = v207;
        uint64_t v105 = *(int *)(v208 + 48);
        uint64_t v106 = (uint64_t)v207 + v105;
        *&long long v107 = (NSObject)v103->isa;
        long long v209 = v107;
        *uint64_t v207 = v107;
        sub_1000079E4((uint64_t)v103 + v105, (uint64_t)v104 + v105, &qword_10070D6F0);
        int v108 = v209;
        sub_100007A48(v106, &qword_10070D6F0);
        int v109 = (int)v205;
        sub_100007A48((uint64_t)v103, &qword_10070A168);
        if (v108 == v109) {
          break;
        }
        v102 += v204;
        if (!--v100)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v31 = v183;
          uint64_t v98 = v194;
          goto LABEL_43;
        }
      }
      uint64_t v94 = v185;
      swift_bridgeObjectRelease();
      uint64_t v31 = v183;
      uint64_t v97 = v184;
      uint64_t v98 = v194;
      uint64_t v92 = v181;
      unsigned int v96 = v179;
      unsigned int v95 = v180;
      goto LABEL_35;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_43:
    uint64_t v110 = v189;
    int64_t v111 = v190;
    uint64_t v112 = v186;
    (*v177)(v190, v189, v186);
    sub_10013A8B8(v110, v98, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v113 = v197;
    uint64_t v114 = v191;
    sub_10013A8B8(v197, v191, (uint64_t (*)(void))_s18SectionDataRequestVMa);
    uint64_t v115 = v113;
    uint64_t v116 = v193;
    sub_10013A8B8(v115, v193, (uint64_t (*)(void))_s18SectionDataRequestVMa);
    os_log_type_t v117 = sub_1005E0EB0();
    int v118 = sub_1005E25A0();
    if (os_log_type_enabled(v117, (os_log_type_t)v118))
    {
      LODWORD(v204) = v118;
      *(void *)&long long v209 = v117;
      uint64_t v119 = swift_slowAlloc();
      uint64_t v188 = swift_slowAlloc();
      uint64_t v214 = v188;
      *(_DWORD *)uint64_t v119 = v172;
      LODWORD(v212) = 2;
      sub_1005E2960();
      *(_WORD *)(v119 + 8) = 256;
      uint64_t v120 = v194 + *(int *)(v187 + 20);
      LOBYTE(v212) = *(unsigned char *)v120;
      sub_1005E2960();
      *(_WORD *)(v119 + 11) = 2082;
      uint64_t v121 = *(void *)(v120 + 8);
      unint64_t v122 = *(void *)(v120 + 16);
      swift_bridgeObjectRetain();
      uint64_t v212 = sub_1000C6914(v121, v122, &v214);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v119 + 21) = 1040;
      LODWORD(v212) = 2;
      sub_1005E2960();
      *(_WORD *)(v119 + 27) = 512;
      LOWORD(v212) = *(_WORD *)(v120 + 24);
      sub_1005E2960();
      *(_WORD *)(v119 + 31) = 2160;
      uint64_t v212 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v119 + 41) = 2085;
      int v123 = *(_DWORD *)(v120 + 40);
      uint64_t v212 = *(void *)(v120 + 32);
      int v213 = v123;
      swift_bridgeObjectRetain();
      uint64_t v124 = sub_1005E1CC0();
      uint64_t v212 = sub_1000C6914(v124, v125, &v214);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100137CF8(v194, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v119 + 51) = 1024;
      LODWORD(v212) = v202;
      sub_1005E2960();
      *(_WORD *)(v119 + 57) = 2082;
      int v205 = (char *)(v119 + 59);
      uint64_t v126 = v195;
      uint64_t v127 = v191;
      swift_bridgeObjectRetain();
      uint64_t v128 = SectionSpecifier.Part.debugDescription.getter();
      unint64_t v130 = v129;
      swift_bridgeObjectRelease();
      uint64_t v212 = sub_1000C6914(v128, v130, &v214);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100137CF8(v127, (uint64_t (*)(void))_s18SectionDataRequestVMa);
      int v205 = (char *)v119;
      *(_WORD *)(v119 + 67) = 2080;
      uint64_t v131 = *(void *)(v193 + *(int *)(v126 + 24));
      int64_t v132 = *(void *)(v131 + 16);
      if (v132)
      {
        uint64_t v212 = (uint64_t)_swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_10001AF74(0, v132, 0);
        uint64_t v133 = 0;
        uint64_t v134 = v212;
        unint64_t v135 = *(void *)(v212 + 16);
        do
        {
          uint64_t v136 = *(void *)(v131 + 8 * v133 + 32);
          uint64_t v212 = v134;
          unint64_t v137 = *(void *)(v134 + 24);
          if (v135 >= v137 >> 1)
          {
            sub_10001AF74(v137 > 1, v135 + 1, 1);
            uint64_t v134 = v212;
          }
          ++v133;
          *(void *)(v134 + 16) = v135 + 1;
          *(void *)(v134 + 8 * v135++ + 32) = v136;
        }
        while (v132 != v133);
        swift_bridgeObjectRelease();
      }
      uint64_t v138 = (uint8_t *)v205;
      sub_10000566C(&qword_10070D6F8);
      uint64_t v139 = sub_1005E20D0();
      unint64_t v141 = v140;
      swift_bridgeObjectRelease();
      uint64_t v212 = sub_1000C6914(v139, v141, &v214);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100137CF8(v193, (uint64_t (*)(void))_s18SectionDataRequestVMa);
      uint64_t v142 = (void *)v209;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v209, (os_log_type_t)v204, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Server did not return any data for message %u, part '[%{public}s]', ranges %s", v138, 0x4Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*v176)(v190, v186);
    }
    else
    {
      sub_100137CF8(v194, type metadata accessor for MailboxTaskLogger);
      sub_100137CF8(v114, (uint64_t (*)(void))_s18SectionDataRequestVMa);
      sub_100137CF8(v116, (uint64_t (*)(void))_s18SectionDataRequestVMa);

      (*v176)(v111, v112);
    }
    unint64_t v143 = *(void *)(v203 + 24);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v143 = sub_100093490(v143);
    }
    if (v67 >= *(void *)(v143 + 16)) {
      goto LABEL_72;
    }
    unint64_t v144 = v143 + *(int *)(v196 + 24);
    uint64_t v145 = *(void **)(v144 + v66);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v144 + v66) = v145;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v145 = sub_100093520(v145);
      *(void *)(v144 + v66) = v145;
    }
    if (i >= v145[2])
    {
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
      JUMPOUT(0x10012BDC0);
    }
    *((unsigned char *)v210 + (void)v145 + 86) = 1;
    *(void *)(v203 + 24) = v143;
LABEL_15:
    uint64_t v52 = v199;
    uint64_t v57 = *v199;
    uint64_t v58 = v199[1];
    uint64_t v51 = v201;
    if (v57 != MessageIdentifierSet.endIndex.getter(v200) || v58 != v59) {
      continue;
    }
    break;
  }
LABEL_10:
  sub_100007A48(v51, &qword_10070A378);
  uint64_t v36 = (uint64_t (*)(void))_s18SectionDataRequestVMa;
  uint64_t v37 = v197;
  return sub_100137CF8(v37, v36);
}

uint64_t sub_10012BDD0(uint64_t a1, int a2, uint64_t a3)
{
  sub_10013C704();
  unint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8) {
    return 0xFF00000000;
  }
  unint64_t v9 = 0;
  while (1)
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_100093490(v7);
      unint64_t v7 = result;
    }
    if (v9 >= *(void *)(v7 + 16)) {
      break;
    }
    _s25MessageSectionsToDownloadVMa(0);
    if ((~sub_100132750(a1, a2, a3) & 0xF000000000000007) != 0)
    {
      uint64_t result = 0x300000001;
      goto LABEL_11;
    }
    if (v8 == ++v9)
    {
      uint64_t result = 0xFF00000000;
LABEL_11:
      *(void *)(v3 + 24) = v7;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10012BF0C(uint64_t a1, NSObject *a2, int a3, uint64_t a4)
{
  int v135 = a3;
  os_log_t v143 = a2;
  uint64_t v7 = _s19MessageHeaderStatusOMa(0);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = &v121[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v141 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v10 = __chkstk_darwin(v141);
  uint64_t v12 = &v121[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __chkstk_darwin(v10);
  unint64_t v129 = &v121[-v14];
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v137 = &v121[-v16];
  __chkstk_darwin(v15);
  uint64_t v131 = &v121[-v17];
  uint64_t v18 = sub_1005E0ED0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v142 = &v121[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = __chkstk_darwin(v20);
  unint64_t v130 = &v121[-v23];
  uint64_t v24 = __chkstk_darwin(v22);
  os_log_t v138 = (os_log_t)&v121[-v25];
  __chkstk_darwin(v24);
  uint64_t v136 = &v121[-v26];
  uint64_t v132 = _s25MessageSectionsToDownloadVMa(0);
  uint64_t v140 = *(void *)(v132 - 8);
  uint64_t v27 = __chkstk_darwin(v132);
  uint64_t v133 = &v121[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v139 = &v121[-v30];
  __chkstk_darwin(v29);
  uint64_t v32 = (int *)&v121[-v31];
  sub_100130848(a1, (uint64_t)v147);
  sub_10001FDF0((uint64_t)v147, (uint64_t)v148, &qword_10070D700);
  if (sub_10013AC64((uint64_t)v148) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v19 + 16))(v142, a4, v18);
    sub_10013A8B8(a4, (uint64_t)v12, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_bridgeObjectRetain_n();
    uint64_t v33 = sub_1005E0EB0();
    os_log_type_t v34 = sub_1005E25A0();
    int v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v36 = swift_slowAlloc();
      LODWORD(v140) = v35;
      uint64_t v37 = v36;
      uint64_t v139 = (unsigned char *)swift_slowAlloc();
      uint64_t v144 = (uint64_t)v139;
      *(_DWORD *)uint64_t v37 = 68159747;
      LODWORD(v150[0]) = 2;
      os_log_t v138 = v33;
      sub_1005E2960();
      *(_WORD *)(v37 + 8) = 256;
      uint64_t v38 = &v12[*(int *)(v141 + 20)];
      LOBYTE(v150[0]) = *v38;
      sub_1005E2960();
      *(_WORD *)(v37 + 11) = 2082;
      uint64_t v134 = v19;
      int v127 = a1;
      uint64_t v40 = *((void *)v38 + 1);
      unint64_t v39 = *((void *)v38 + 2);
      swift_bridgeObjectRetain();
      *(void *)&v150[0] = sub_1000C6914(v40, v39, &v144);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 21) = 1040;
      LODWORD(v150[0]) = 2;
      sub_1005E2960();
      *(_WORD *)(v37 + 27) = 512;
      LOWORD(v150[0]) = *((_WORD *)v38 + 12);
      sub_1005E2960();
      *(_WORD *)(v37 + 31) = 2160;
      *(void *)&v150[0] = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v37 + 41) = 2085;
      int v41 = *((_DWORD *)v38 + 10);
      *(void *)&v150[0] = *((void *)v38 + 4);
      DWORD2(v150[0]) = v41;
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_1005E1CC0();
      *(void *)&v150[0] = sub_1000C6914(v42, v43, &v144);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100137CF8((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v37 + 51) = 2048;
      Class isa = v143[2].isa;
      swift_bridgeObjectRelease();
      *(void *)&v150[0] = isa;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 61) = 1024;
      LODWORD(v150[0]) = v127;
      sub_1005E2960();
      os_log_t v45 = v138;
      _os_log_impl((void *)&_mh_execute_header, v138, (os_log_type_t)v140, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Requested to download %ld sections for message %u, but we don’t have a body structure for this message.", (uint8_t *)v37, 0x43u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v134 + 8))(v142, v18);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_100137CF8((uint64_t)v12, type metadata accessor for MailboxTaskLogger);

      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v19 + 8))(v142, v18);
    }
  }
  else
  {
    uint64_t v126 = a4;
    uint64_t v142 = v9;
    v150[2] = v148[2];
    v150[3] = v148[3];
    v150[6] = v148[6];
    v150[7] = v148[7];
    v150[4] = v148[4];
    v150[5] = v148[5];
    *(_OWORD *)((char *)v151 + 9) = *(_OWORD *)((char *)v149 + 9);
    v150[9] = v148[9];
    v151[0] = v149[0];
    v150[8] = v148[8];
    v150[0] = v148[0];
    v150[1] = v148[1];
    uint64_t v128 = v4;
    uint64_t v47 = *(void *)(v4 + 24);
    uint64_t v48 = *(void *)(v47 + 16);
    int v49 = a1;
    uint64_t v50 = v19;
    os_log_t v51 = v143;
    uint64_t v52 = v18;
    if (v48)
    {
      uint64_t v53 = v18;
      uint64_t v54 = v47 + ((*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80));
      uint64_t v55 = *(void *)(v140 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_10013A8B8(v54, (uint64_t)v32, _s25MessageSectionsToDownloadVMa);
        int v56 = *v32;
        sub_100137CF8((uint64_t)v32, _s25MessageSectionsToDownloadVMa);
        if (v56 == v49) {
          break;
        }
        v54 += v55;
        if (!--v48)
        {
          swift_bridgeObjectRelease();
          uint64_t v52 = v53;
          os_log_t v51 = v143;
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      long long v107 = v130;
      uint64_t v108 = v126;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v50 + 16))(v130, v126, v53);
      int v109 = v129;
      sub_10013A8B8(v108, (uint64_t)v129, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain_n();
      uint64_t v110 = sub_1005E0EB0();
      os_log_type_t v111 = sub_1005E25A0();
      int v112 = v111;
      if (os_log_type_enabled(v110, v111))
      {
        uint64_t v113 = swift_slowAlloc();
        uint64_t v142 = (unsigned char *)swift_slowAlloc();
        v146[0] = (uint64_t)v142;
        *(_DWORD *)uint64_t v113 = 68159747;
        LODWORD(v144) = 2;
        LODWORD(v140) = v112;
        uint64_t v125 = v53;
        sub_1005E2960();
        *(_WORD *)(v113 + 8) = 256;
        uint64_t v114 = &v109[*(int *)(v141 + 20)];
        LOBYTE(v144) = *v114;
        sub_1005E2960();
        *(_WORD *)(v113 + 11) = 2082;
        uint64_t v134 = v50;
        uint64_t v116 = *((void *)v114 + 1);
        unint64_t v115 = *((void *)v114 + 2);
        swift_bridgeObjectRetain();
        uint64_t v144 = sub_1000C6914(v116, v115, v146);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v113 + 21) = 1040;
        LODWORD(v144) = 2;
        sub_1005E2960();
        *(_WORD *)(v113 + 27) = 512;
        LOWORD(v144) = *((_WORD *)v114 + 12);
        sub_1005E2960();
        *(_WORD *)(v113 + 31) = 2160;
        uint64_t v144 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v113 + 41) = 2085;
        int v117 = *((_DWORD *)v114 + 10);
        uint64_t v144 = *((void *)v114 + 4);
        int v145 = v117;
        swift_bridgeObjectRetain();
        uint64_t v118 = sub_1005E1CC0();
        uint64_t v144 = sub_1000C6914(v118, v119, v146);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100137CF8((uint64_t)v129, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v113 + 51) = 2048;
        Class v120 = v143[2].isa;
        swift_bridgeObjectRelease();
        uint64_t v144 = (uint64_t)v120;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v113 + 61) = 1024;
        LODWORD(v144) = v49;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v110, (os_log_type_t)v140, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Requested to download %ld sections for message %u -- but sections for this message have already been added.", (uint8_t *)v113, 0x43u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        sub_10013ACA4((uint64_t)v147);

        return (*(uint64_t (**)(unsigned char *, uint64_t))(v134 + 8))(v130, v125);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_10013ACA4((uint64_t)v147);
        sub_100137CF8((uint64_t)v109, type metadata accessor for MailboxTaskLogger);

        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v50 + 8))(v107, v53);
      }
    }
    else
    {
LABEL_9:
      uint64_t v57 = v136;
      uint64_t v58 = v126;
      uint64_t v59 = v50;
      unint64_t v129 = *(unsigned char **)(v50 + 16);
      unint64_t v130 = (unsigned char *)(v50 + 16);
      ((void (*)(NSObject *, uint64_t, uint64_t))v129)(v136, v126, v52);
      long long v60 = v131;
      sub_10013A8B8(v58, (uint64_t)v131, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain_n();
      uint64_t v61 = sub_1005E0EB0();
      os_log_type_t v62 = sub_1005E25C0();
      int v63 = v62;
      BOOL v64 = os_log_type_enabled(v61, v62);
      uint64_t v125 = v52;
      uint64_t v134 = v59;
      int v127 = v49;
      if (v64)
      {
        uint64_t v65 = swift_slowAlloc();
        uint64_t v124 = swift_slowAlloc();
        v146[0] = v124;
        *(_DWORD *)uint64_t v65 = 68159747;
        LODWORD(v144) = 2;
        sub_1005E2960();
        *(_WORD *)(v65 + 8) = 256;
        uint64_t v66 = *(int *)(v141 + 20);
        os_log_t v123 = v61;
        unint64_t v67 = &v60[v66];
        LOBYTE(v144) = v60[v66];
        sub_1005E2960();
        *(_WORD *)(v65 + 11) = 2082;
        int v122 = v63;
        uint64_t v69 = *((void *)v67 + 1);
        unint64_t v68 = *((void *)v67 + 2);
        swift_bridgeObjectRetain();
        uint64_t v144 = sub_1000C6914(v69, v68, v146);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v65 + 21) = 1040;
        LODWORD(v144) = 2;
        sub_1005E2960();
        *(_WORD *)(v65 + 27) = 512;
        LOWORD(v144) = *((_WORD *)v67 + 12);
        int v49 = v127;
        sub_1005E2960();
        *(_WORD *)(v65 + 31) = 2160;
        uint64_t v144 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v65 + 41) = 2085;
        int v70 = *((_DWORD *)v67 + 10);
        uint64_t v144 = *((void *)v67 + 4);
        int v145 = v70;
        swift_bridgeObjectRetain();
        uint64_t v71 = sub_1005E1CC0();
        uint64_t v144 = sub_1000C6914(v71, v72, v146);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100137CF8((uint64_t)v60, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v65 + 51) = 2048;
        uint64_t v73 = (uint64_t)v51[2].isa;
        swift_bridgeObjectRelease();
        uint64_t v144 = v73;
        uint64_t v52 = v125;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v65 + 61) = 1024;
        LODWORD(v144) = v49;
        sub_1005E2960();
        os_log_t v74 = v123;
        _os_log_impl((void *)&_mh_execute_header, v123, (os_log_type_t)v122, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Requested to download %ld sections for message %u.", (uint8_t *)v65, 0x43u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v58 = v126;
        swift_slowDealloc();

        char v75 = *(uint64_t (**)(os_log_t, uint64_t))(v134 + 8);
        uint64_t v76 = v75(v136, v52);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_100137CF8((uint64_t)v60, type metadata accessor for MailboxTaskLogger);

        swift_bridgeObjectRelease();
        char v75 = *(uint64_t (**)(os_log_t, uint64_t))(v59 + 8);
        uint64_t v76 = v75(v57, v52);
      }
      uint64_t v77 = v128;
      char v78 = v135;
      uint64_t v79 = v52;
      if (!v51[2].isa)
      {
        LODWORD(v146[0]) = v49;
        _s18InProgressMessagesVMa(0);
        sub_10000566C(&qword_100709E38);
        MessageIdentifierSet.insert(_:)();
      }
      __chkstk_darwin(v76);
      *(void *)&v121[-32] = v150;
      *(void *)&v121[-24] = v77;
      *(void *)&v121[-16] = v58;
      int v80 = v49;
      uint64_t v81 = v58;
      long long v82 = sub_1000651A4((void (*)(void *__return_ptr, uint64_t *))sub_10013AC84, (uint64_t)&v121[-48], (uint64_t)v51);
      uint64_t v83 = type metadata accessor for MessageHeader();
      if (v78) {
        uint64_t v84 = 2;
      }
      else {
        uint64_t v84 = 1;
      }
      long long v85 = v142;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v142, v84, 3, v83);
      uint64_t v86 = v132;
      long long v87 = v139;
      sub_10013A8B8((uint64_t)v85, (uint64_t)&v139[*(int *)(v132 + 20)], _s19MessageHeaderStatusOMa);
      *long long v87 = v80;
      *(void *)((char *)v87 + *(int *)(v86 + 24)) = v82;
      *(void *)((char *)v87 + *(int *)(v86 + 28)) = _swiftEmptyArrayStorage;
      os_log_t v88 = v138;
      ((void (*)(os_log_t, uint64_t, uint64_t))v129)(v138, v81, v79);
      char v89 = v137;
      sub_10013A8B8(v81, (uint64_t)v137, type metadata accessor for MailboxTaskLogger);
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain();
      uint64_t v90 = sub_1005E0EB0();
      os_log_type_t v91 = sub_1005E25C0();
      int v92 = v91;
      os_log_t v143 = v90;
      if (os_log_type_enabled(v90, v91))
      {
        uint64_t v93 = swift_slowAlloc();
        uint64_t v136 = swift_slowAlloc();
        v146[0] = (uint64_t)v136;
        *(_DWORD *)uint64_t v93 = 68160003;
        LODWORD(v144) = 2;
        sub_1005E2960();
        *(_WORD *)(v93 + 8) = 256;
        uint64_t v94 = &v89[*(int *)(v141 + 20)];
        LOBYTE(v144) = *v94;
        sub_1005E2960();
        *(_WORD *)(v93 + 11) = 2082;
        LODWORD(v141) = v92;
        uint64_t v96 = *((void *)v94 + 1);
        unint64_t v95 = *((void *)v94 + 2);
        swift_bridgeObjectRetain();
        uint64_t v144 = sub_1000C6914(v96, v95, v146);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v93 + 21) = 1040;
        LODWORD(v144) = 2;
        sub_1005E2960();
        *(_WORD *)(v93 + 27) = 512;
        LOWORD(v144) = *((_WORD *)v94 + 12);
        sub_1005E2960();
        *(_WORD *)(v93 + 31) = 2160;
        uint64_t v144 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v93 + 41) = 2085;
        int v97 = *((_DWORD *)v94 + 10);
        uint64_t v144 = *((void *)v94 + 4);
        int v145 = v97;
        swift_bridgeObjectRetain();
        uint64_t v98 = sub_1005E1CC0();
        uint64_t v144 = sub_1000C6914(v98, v99, v146);
        sub_1005E2960();
        long long v87 = v139;
        swift_bridgeObjectRelease();
        sub_100137CF8((uint64_t)v137, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v93 + 51) = 2048;
        uint64_t v100 = v82[2];
        swift_bridgeObjectRelease();
        uint64_t v144 = v100;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v93 + 61) = 1024;
        LODWORD(v144) = v127;
        uint64_t v101 = v128;
        sub_1005E2960();
        *(_WORD *)(v93 + 67) = 1024;
        LODWORD(v144) = v135 & 1;
        sub_1005E2960();
        os_log_t v102 = v143;
        _os_log_impl((void *)&_mh_execute_header, v143, (os_log_type_t)v141, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Adding %ld sections for message %u. Downloading message headers: %{BOOL}d", (uint8_t *)v93, 0x49u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(os_log_t, uint64_t))(v134 + 8))(v138, v125);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_100137CF8((uint64_t)v89, type metadata accessor for MailboxTaskLogger);

        swift_bridgeObjectRelease();
        v75(v88, v79);
        uint64_t v101 = v128;
      }
      os_log_t v103 = v133;
      sub_10013A8B8((uint64_t)v87, (uint64_t)v133, _s25MessageSectionsToDownloadVMa);
      unint64_t v104 = *(void *)(v101 + 24);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v104 = sub_1000164D8(0, *(void *)(v104 + 16) + 1, 1, v104);
      }
      unint64_t v106 = *(void *)(v104 + 16);
      unint64_t v105 = *(void *)(v104 + 24);
      if (v106 >= v105 >> 1) {
        unint64_t v104 = sub_1000164D8(v105 > 1, v106 + 1, 1, v104);
      }
      *(void *)(v104 + 16) = v106 + 1;
      sub_10013A920((uint64_t)v103, v104+ ((*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80))+ *(void *)(v140 + 72) * v106, _s25MessageSectionsToDownloadVMa);
      sub_10013ACA4((uint64_t)v147);
      *(void *)(v101 + 24) = v104;
      sub_100137CF8((uint64_t)v87, _s25MessageSectionsToDownloadVMa);
      return sub_100137CF8((uint64_t)v142, _s19MessageHeaderStatusOMa);
    }
  }
}

uint64_t sub_10012D430(long long *a1, long long *a2)
{
  sub_1001359F8(a1, (uint64_t)v8);
  sub_1001359F8(a2, (uint64_t)v9);
  sub_1001359F8(v8, (uint64_t)v10);
  if (sub_10006196C((uint64_t)v10) == 1)
  {
    sub_1001359F8(v9, (uint64_t)v7);
    char v3 = sub_10006196C((uint64_t)v7) == 1;
  }
  else
  {
    sub_10013A988((uint64_t)v10, (uint64_t)v6);
    sub_1001359F8(v9, (uint64_t)v5);
    if (sub_10006196C((uint64_t)v5) == 1)
    {
      char v3 = 0;
    }
    else
    {
      sub_10013A988((uint64_t)v5, (uint64_t)v7);
      sub_10013AFD8((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E304);
      sub_10013AFD8((uint64_t)v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E304);
      char v3 = static MessageAttribute.BodyStructure.__derived_enum_equals(_:_:)(v6, v7);
      sub_10013AFD8((uint64_t)v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
      sub_10013AFD8((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
    }
  }
  return v3 & 1;
}

uint64_t sub_10012D558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a3;
  uint64_t v12 = _s25MessageSectionsToDownloadVMa(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12 - 8);
  uint64_t v15 = (int *)((char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001FDF0(a1 + 8, (uint64_t)&v38, &qword_10070A8B8);
  uint64_t result = sub_10001FDF0((uint64_t)&v38, (uint64_t)&v41, &qword_10070A8B8);
  if ((v42 & 1) == 0)
  {
    uint64_t v32 = a4;
    unsigned int v17 = v41;
    sub_10001FDF0(a1 + 208, (uint64_t)v35, &qword_10070A8D8);
    sub_10001FDF0(a1 + 540, (uint64_t)&v37, &qword_10070D710);
    sub_10001FDF0((uint64_t)v35, (uint64_t)v36, &qword_10070A8D8);
    if (sub_10006196C((uint64_t)v36) == 1)
    {
      uint64_t result = sub_10001FDF0((uint64_t)&v37, (uint64_t)&v39, &qword_10070D710);
      if ((v40 & 1) == 0) {
        return sub_10012E1E8(v17, v39, a2, (uint64_t)v33, v32, a5, a6);
      }
    }
    else
    {
      sub_10013A988((uint64_t)v36, (uint64_t)&v39);
      uint64_t result = sub_10001FDF0((uint64_t)&v37, (uint64_t)&v43, &qword_10070D710);
      if ((v44 & 1) == 0)
      {
        unsigned int v25 = v43;
        sub_10001FDF0((uint64_t)v35, (uint64_t)v34, &qword_10070A8D8);
        sub_10013AFD8((uint64_t)v34, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E2C0);
        sub_10012D8C8(v17, (uint64_t)&v39, v25, a2, (uint64_t)v33, v32, a5, a6);
        return sub_10013AFD8((uint64_t)v35, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10006133C);
      }
    }
    uint64_t v18 = *(void *)(a1 + 200);
    v34[0] = v18;
    uint64_t v19 = *(void *)(v6 + 24);
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v32 = v18;
      uint64_t v33 = a6;
      uint64_t v21 = v19 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
      uint64_t v22 = *(void *)(v13 + 72);
      swift_bridgeObjectRetain();
      unint64_t v23 = 0;
      while (1)
      {
        sub_10013A8B8(v21, (uint64_t)v15, _s25MessageSectionsToDownloadVMa);
        int v24 = *v15;
        sub_100137CF8((uint64_t)v15, _s25MessageSectionsToDownloadVMa);
        if (v17 == v24) {
          break;
        }
        ++v23;
        v21 += v22;
        if (v20 == v23) {
          return swift_bridgeObjectRelease();
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v26 = v32;
      uint64_t v27 = v33;
      uint64_t v28 = *(void *)(v32 + 16);
      if (v28)
      {
        uint64_t v29 = *(void *)(type metadata accessor for MessageData.BodySection() - 8);
        uint64_t v30 = (v26
                         + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80)));
        uint64_t v31 = *(void *)(v29 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_10012EAFC(v30, v6, v23, v27);
          uint64_t v30 = ((char *)v30 + v31);
          --v28;
        }
        while (v28);
        return sub_10001D550((uint64_t)v34);
      }
    }
  }
  return result;
}

uint64_t sub_10012D8C8(unsigned int a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v72 = a3;
  unsigned int v81 = a1;
  uint64_t v70 = a8;
  uint64_t v71 = a2;
  sub_10013A988(a2, (uint64_t)v85);
  sub_10013A988((uint64_t)v85, (uint64_t)v86);
  uint64_t v68 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v68);
  uint64_t v76 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1005E0ED0();
  uint64_t v74 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v73 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = _s25MessageSectionsToDownloadVMa(0);
  uint64_t v69 = *(void *)(v12 - 8);
  __chkstk_darwin(v12 - 8);
  uint64_t v79 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v80);
  uint64_t v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DownloadTask.CommandID(0);
  char v78 = *(void **)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v67 - v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_10013B04C(a4, a6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v23 = v22;
  uint64_t v24 = v22[2];
  if (!v24) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v25 = (uint64_t)v23 + ((*((unsigned __int8 *)v78 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v78 + 80));
  uint64_t v26 = v78[9];
  char v78 = v23;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_10013A8B8(v25, (uint64_t)v21, type metadata accessor for DownloadTask.CommandID);
    sub_10013A8B8((uint64_t)v21, (uint64_t)v19, type metadata accessor for DownloadTask.CommandID);
    if (!swift_getEnumCaseMultiPayload()) {
      break;
    }
    sub_100137CF8((uint64_t)v19, type metadata accessor for DownloadTask.CommandID);
    sub_100137CF8((uint64_t)v21, type metadata accessor for DownloadTask.CommandID);
LABEL_4:
    v25 += v26;
    if (!--v24) {
      return swift_bridgeObjectRelease_n();
    }
  }
  sub_10001FDF0((uint64_t)v19, (uint64_t)v15, &qword_100709E38);
  LODWORD(v83[0]) = v81;
  char v27 = MessageIdentifierSet.contains(_:)();
  sub_100007A48((uint64_t)v15, &qword_100709E38);
  sub_100137CF8((uint64_t)v21, type metadata accessor for DownloadTask.CommandID);
  if ((v27 & 1) == 0) {
    goto LABEL_4;
  }
  uint64_t result = swift_bridgeObjectRelease_n();
  uint64_t v30 = v74;
  uint64_t v29 = v75;
  uint64_t v31 = *(void *)(v75 + 16);
  uint64_t v32 = *(void *)(v31 + 16);
  uint64_t v34 = v76;
  uint64_t v33 = v77;
  int v35 = v73;
  if (!v32)
  {
LABEL_11:
    uint64_t v38 = *(void *)(v75 + 24);
    uint64_t v39 = *(void *)(v38 + 16);
    if (!v39)
    {
LABEL_16:
      uint64_t v44 = v70;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v35, v70, v33);
      sub_10013A8B8(v44, v34, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      os_log_t v45 = sub_1005E0EB0();
      os_log_type_t v46 = sub_1005E25C0();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = swift_slowAlloc();
        uint64_t v80 = swift_slowAlloc();
        *(void *)&v82[0] = v80;
        *(_DWORD *)uint64_t v47 = 68159491;
        LODWORD(v83[0]) = 2;
        sub_1005E2960();
        *(_WORD *)(v47 + 8) = 256;
        uint64_t v48 = v34 + *(int *)(v68 + 20);
        LOBYTE(v83[0]) = *(unsigned char *)v48;
        sub_1005E2960();
        *(_WORD *)(v47 + 11) = 2082;
        uint64_t v49 = *(void *)(v48 + 8);
        unint64_t v50 = *(void *)(v48 + 16);
        swift_bridgeObjectRetain();
        *(void *)&v83[0] = sub_1000C6914(v49, v50, (uint64_t *)v82);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 21) = 1040;
        LODWORD(v83[0]) = 2;
        sub_1005E2960();
        *(_WORD *)(v47 + 27) = 512;
        LOWORD(v83[0]) = *(_WORD *)(v48 + 24);
        sub_1005E2960();
        *(_WORD *)(v47 + 31) = 2160;
        *(void *)&v83[0] = 0x786F626C69616DLL;
        uint64_t v29 = v75;
        sub_1005E2960();
        *(_WORD *)(v47 + 41) = 2085;
        int v51 = *(_DWORD *)(v48 + 40);
        *(void *)&v83[0] = *(void *)(v48 + 32);
        DWORD2(v83[0]) = v51;
        swift_bridgeObjectRetain();
        uint64_t v52 = sub_1005E1CC0();
        *(void *)&v83[0] = sub_1000C6914(v52, v53, (uint64_t *)v82);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100137CF8(v76, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v47 + 51) = 1024;
        LODWORD(v83[0]) = v81;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received body structure for message %u.", (uint8_t *)v47, 0x39u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v77);
      }
      else
      {
        sub_100137CF8(v34, type metadata accessor for MailboxTaskLogger);

        (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v33);
      }
      uint64_t v54 = *(void **)(v29 + 16);
      sub_10013AFD8(v71, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E2C0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v54 = sub_10001678C(0, v54[2] + 1, 1, v54);
      }
      unint64_t v56 = v54[2];
      unint64_t v55 = v54[3];
      if (v56 >= v55 >> 1) {
        uint64_t v54 = sub_10001678C((void *)(v55 > 1), v56 + 1, 1, v54);
      }
      sub_10013A988((uint64_t)v86, (uint64_t)v82);
      UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v82);
      *(void *)&v83[0] = __PAIR64__(v72, v81);
      uint64_t result = sub_1001359F8(v82, (uint64_t)v83 + 8);
      v54[2] = v56 + 1;
      uint64_t v57 = &v54[24 * v56];
      long long v58 = v83[3];
      long long v59 = v83[0];
      long long v60 = v83[1];
      v57[4] = v83[2];
      v57[5] = v58;
      v57[2] = v59;
      v57[3] = v60;
      long long v61 = v83[7];
      long long v63 = v83[4];
      long long v62 = v83[5];
      v57[8] = v83[6];
      v57[9] = v61;
      v57[6] = v63;
      v57[7] = v62;
      long long v65 = v83[9];
      long long v64 = v84[0];
      long long v66 = v83[8];
      *(_OWORD *)((char *)v57 + 201) = *(_OWORD *)((char *)v84 + 9);
      v57[11] = v65;
      v57[12] = v64;
      v57[10] = v66;
      *(void *)(v29 + 16) = v54;
      return result;
    }
    uint64_t v40 = v38 + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80));
    uint64_t v41 = *(void *)(v69 + 72);
    swift_bridgeObjectRetain();
    char v42 = (int *)v79;
    while (1)
    {
      sub_10013A8B8(v40, (uint64_t)v42, _s25MessageSectionsToDownloadVMa);
      int v43 = *v42;
      sub_100137CF8((uint64_t)v42, _s25MessageSectionsToDownloadVMa);
      if (v43 == v81) {
        return swift_bridgeObjectRelease();
      }
      v40 += v41;
      if (!--v39)
      {
        swift_bridgeObjectRelease();
        uint64_t v34 = v76;
        uint64_t v33 = v77;
        goto LABEL_16;
      }
    }
  }
  uint64_t v36 = (int *)(v31 + 32);
  while (1)
  {
    int v37 = *v36;
    v36 += 48;
    if (v37 == v81) {
      return result;
    }
    if (!--v32) {
      goto LABEL_11;
    }
  }
}

uint64_t sub_10012E1E8(unsigned int a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v69 = a7;
  unsigned int v70 = a2;
  unsigned int v79 = a1;
  uint64_t v67 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v67);
  uint64_t v74 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1005E0ED0();
  uint64_t v72 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v71 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s25MessageSectionsToDownloadVMa(0);
  uint64_t v68 = *(void *)(v11 - 8);
  __chkstk_darwin(v11 - 8);
  uint64_t v77 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v78);
  uint64_t v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DownloadTask.CommandID(0);
  uint64_t v76 = *(void **)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v67 - v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_10013B04C(a3, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = v21;
  uint64_t v23 = v21[2];
  if (!v23)
  {
    return swift_bridgeObjectRelease();
  }
  uint64_t v24 = (uint64_t)v22 + ((*((unsigned __int8 *)v76 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v76 + 80));
  uint64_t v25 = v76[9];
  uint64_t v76 = v22;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_10013A8B8(v24, (uint64_t)v20, type metadata accessor for DownloadTask.CommandID);
    sub_10013A8B8((uint64_t)v20, (uint64_t)v18, type metadata accessor for DownloadTask.CommandID);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_100137CF8((uint64_t)v18, type metadata accessor for DownloadTask.CommandID);
    sub_100137CF8((uint64_t)v20, type metadata accessor for DownloadTask.CommandID);
LABEL_4:
    v24 += v25;
    if (!--v23) {
      return swift_bridgeObjectRelease_n();
    }
  }
  sub_10001FDF0((uint64_t)v18, (uint64_t)v14, &qword_100709E38);
  LODWORD(v81[0]) = v79;
  char v26 = MessageIdentifierSet.contains(_:)();
  sub_100007A48((uint64_t)v14, &qword_100709E38);
  sub_100137CF8((uint64_t)v20, type metadata accessor for DownloadTask.CommandID);
  if ((v26 & 1) == 0) {
    goto LABEL_4;
  }
  uint64_t result = swift_bridgeObjectRelease_n();
  uint64_t v29 = v72;
  uint64_t v28 = v73;
  uint64_t v30 = *(void *)(v73 + 16);
  uint64_t v31 = *(void *)(v30 + 16);
  uint64_t v32 = v74;
  uint64_t v33 = v75;
  uint64_t v34 = v71;
  if (!v31)
  {
LABEL_11:
    uint64_t v37 = *(void *)(v73 + 24);
    uint64_t v38 = *(void *)(v37 + 16);
    if (!v38)
    {
LABEL_16:
      uint64_t v43 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v34, v69, v33);
      sub_10013A8B8(v43, v32, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v44 = sub_1005E0EB0();
      os_log_type_t v45 = sub_1005E25C0();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = v32;
        uint64_t v47 = swift_slowAlloc();
        uint64_t v78 = swift_slowAlloc();
        *(void *)&v80[0] = v78;
        *(_DWORD *)uint64_t v47 = 68159491;
        LODWORD(v81[0]) = 2;
        sub_1005E2960();
        *(_WORD *)(v47 + 8) = 256;
        uint64_t v48 = v46 + *(int *)(v67 + 20);
        LOBYTE(v81[0]) = *(unsigned char *)v48;
        sub_1005E2960();
        *(_WORD *)(v47 + 11) = 2082;
        uint64_t v49 = *(void *)(v48 + 8);
        unint64_t v50 = *(void *)(v48 + 16);
        swift_bridgeObjectRetain();
        *(void *)&v81[0] = sub_1000C6914(v49, v50, (uint64_t *)v80);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 21) = 1040;
        LODWORD(v81[0]) = 2;
        sub_1005E2960();
        *(_WORD *)(v47 + 27) = 512;
        LOWORD(v81[0]) = *(_WORD *)(v48 + 24);
        sub_1005E2960();
        *(_WORD *)(v47 + 31) = 2160;
        *(void *)&v81[0] = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v47 + 41) = 2085;
        int v51 = *(_DWORD *)(v48 + 40);
        *(void *)&v81[0] = *(void *)(v48 + 32);
        DWORD2(v81[0]) = v51;
        swift_bridgeObjectRetain();
        uint64_t v52 = sub_1005E1CC0();
        *(void *)&v81[0] = sub_1000C6914(v52, v53, (uint64_t *)v80);
        sub_1005E2960();
        uint64_t v28 = v73;
        swift_bridgeObjectRelease();
        sub_100137CF8(v74, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v47 + 51) = 1024;
        LODWORD(v81[0]) = v79;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received body structure for message %u.", (uint8_t *)v47, 0x39u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v75);
      }
      else
      {
        sub_100137CF8(v32, type metadata accessor for MailboxTaskLogger);

        (*(void (**)(char *, uint64_t))(v29 + 8))(v34, v33);
      }
      uint64_t v54 = *(void **)(v28 + 16);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v54 = sub_10001678C(0, v54[2] + 1, 1, v54);
      }
      unint64_t v56 = v54[2];
      unint64_t v55 = v54[3];
      if (v56 >= v55 >> 1) {
        uint64_t v54 = sub_10001678C((void *)(v55 > 1), v56 + 1, 1, v54);
      }
      sub_10013668C((uint64_t)v80);
      *(void *)&v81[0] = __PAIR64__(v70, v79);
      uint64_t result = sub_1001359F8(v80, (uint64_t)v81 + 8);
      v54[2] = v56 + 1;
      uint64_t v57 = &v54[24 * v56];
      long long v58 = v81[3];
      long long v59 = v81[0];
      long long v60 = v81[1];
      v57[4] = v81[2];
      v57[5] = v58;
      v57[2] = v59;
      v57[3] = v60;
      long long v61 = v81[7];
      long long v63 = v81[4];
      long long v62 = v81[5];
      v57[8] = v81[6];
      v57[9] = v61;
      v57[6] = v63;
      v57[7] = v62;
      long long v65 = v81[9];
      long long v64 = v82[0];
      long long v66 = v81[8];
      *(_OWORD *)((char *)v57 + 201) = *(_OWORD *)((char *)v82 + 9);
      v57[11] = v65;
      v57[12] = v64;
      v57[10] = v66;
      *(void *)(v28 + 16) = v54;
      return result;
    }
    uint64_t v39 = v37 + ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80));
    uint64_t v40 = *(void *)(v68 + 72);
    swift_bridgeObjectRetain();
    uint64_t v41 = (int *)v77;
    while (1)
    {
      sub_10013A8B8(v39, (uint64_t)v41, _s25MessageSectionsToDownloadVMa);
      int v42 = *v41;
      sub_100137CF8((uint64_t)v41, _s25MessageSectionsToDownloadVMa);
      if (v42 == v79) {
        return swift_bridgeObjectRelease();
      }
      v39 += v40;
      if (!--v38)
      {
        swift_bridgeObjectRelease();
        uint64_t v32 = v74;
        uint64_t v33 = v75;
        goto LABEL_16;
      }
    }
  }
  int v35 = (int *)(v30 + 32);
  while (1)
  {
    int v36 = *v35;
    v35 += 48;
    if (v36 == v79) {
      return result;
    }
    if (!--v31) {
      goto LABEL_11;
    }
  }
}

uint64_t sub_10012EAFC(NSObject *a1, uint64_t a2, unint64_t a3, NSObject *a4)
{
  uint64_t v8 = sub_1005E17E0();
  uint64_t v83 = *(void *)(v8 - 8);
  uint64_t v84 = v8;
  __chkstk_darwin(v8);
  long long v82 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v77);
  uint64_t v88 = (uint64_t)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005E0ED0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v89 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000566C(&qword_10070D720);
  __chkstk_darwin(v14 - 8);
  uint64_t v93 = (uint64_t)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for MessageData.BodyData();
  uint64_t v91 = *(void *)(v16 - 8);
  uint64_t v92 = v16;
  __chkstk_darwin(v16);
  unsigned int v81 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for MessageData.BodySection();
  uint64_t v18 = __chkstk_darwin(v90);
  uint64_t v85 = (uint64_t)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v74 - v20;
  uint64_t v22 = _s19MessageHeaderStatusOMa(0);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v80 = (uint64_t)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  char v27 = (char *)&v74 - v26;
  __chkstk_darwin(v25);
  uint64_t v30 = (char *)&v74 - v29;
  if ((a3 & 0x8000000000000000) != 0) {
    goto LABEL_24;
  }
  uint64_t v97 = a2;
  a3 = *(void *)(a2 + 24);
  if (*(void *)(a3 + 16) <= (unint64_t)v28) {
    goto LABEL_25;
  }
  uint64_t v86 = v12;
  uint64_t v87 = v11;
  uint64_t v31 = v28;
  a2 = _s25MessageSectionsToDownloadVMa(0);
  uint64_t v32 = *(void *)(a2 - 8);
  unint64_t v95 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v33 = *(void *)(v32 + 72);
  os_log_t v96 = v31;
  unint64_t v34 = a3 + v95 + *(int *)(a2 + 20);
  uint64_t v94 = v33 * (void)v31;
  sub_10013A8B8(v34 + v33 * (void)v31, (uint64_t)v30, _s19MessageHeaderStatusOMa);
  uint64_t v35 = type metadata accessor for MessageHeader();
  uint64_t v36 = *(void *)(v35 - 8);
  unsigned int v79 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
  uint64_t v78 = v36 + 56;
  v79(v27, 3, 3, v35);
  uint64_t v11 = sub_10013A568((uint64_t)v30, (uint64_t)v27);
  sub_100137CF8((uint64_t)v27, _s19MessageHeaderStatusOMa);
  sub_100137CF8((uint64_t)v30, _s19MessageHeaderStatusOMa);
  sub_10013A8B8((uint64_t)a1, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
  if ((v11 & 1) == 0)
  {
    sub_100137CF8((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
    goto LABEL_9;
  }
  uint64_t v75 = v35;
  uint64_t v37 = *(void **)v21;
  uint64_t v11 = *((void *)v21 + 1);
  char v38 = v21[16];
  uint64_t v39 = SectionSpecifier.header.unsafeMutableAddressor();
  uint64_t v76 = a2;
  uint64_t v40 = (void *)*v39;
  uint64_t v41 = v39[1];
  char v42 = *((unsigned char *)v39 + 16);
  swift_bridgeObjectRetain();
  sub_10013B5CC(v41, v42);
  LOBYTE(v37) = static SectionSpecifier.__derived_struct_equals(_:_:)(v37, v11, v38, v40, v41, v42);
  swift_bridgeObjectRelease();
  uint64_t v43 = v41;
  a2 = v76;
  sub_10013B5E0(v43, v42);
  sub_100137CF8((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
  if ((v37 & 1) == 0)
  {
LABEL_9:
    char v27 = (char *)v97;
    a3 = *(void *)(v97 + 24);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *((void *)v27 + 3) = a3;
    if ((result & 1) == 0) {
      goto LABEL_26;
    }
    while (*(void *)(a3 + 16) > (unint64_t)v96)
    {
      uint64_t v21 = (char *)(a3 + v95 + v94);
      uint64_t v11 = *(int *)(a2 + 24);
      a3 = *(void *)&v21[v11];
      if (!*(void *)(a3 + 16)) {
        return result;
      }
      unint64_t v70 = 0;
      for (uint64_t i = 32; ; i += 240)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v21[v11] = a3;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          a3 = (unint64_t)sub_100093520((void *)a3);
          *(void *)&v21[v11] = a3;
        }
        if (v70 >= *(void *)(a3 + 16)) {
          break;
        }
        char v27 = (char *)(a3 + i);
        uint64_t result = sub_10012F694(a1, a4);
        ++v70;
        a3 = *(void *)&v21[v11];
        if (v70 == *(void *)(a3 + 16)) {
          return result;
        }
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      uint64_t result = sub_100093490(a3);
      a3 = result;
      *((void *)v27 + 3) = result;
    }
    __break(1u);
LABEL_28:
    uint64_t result = sub_100093490(a3);
    a3 = result;
    *((void *)v27 + 3) = result;
    goto LABEL_19;
  }
  uint64_t v44 = v93;
  sub_1000079E4((uint64_t)a1 + *(int *)(v90 + 24), v93, &qword_10070D720);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v44, 1, v92) == 1)
  {
    sub_100007A48(v44, &qword_10070D720);
    uint64_t v46 = v86;
    uint64_t v45 = v87;
    uint64_t v47 = v89;
    (*(void (**)(char *, NSObject *, uint64_t))(v86 + 16))(v89, a4, v87);
    uint64_t v48 = (uint64_t)a4;
    uint64_t v49 = v88;
    sub_10013A8B8(v48, v88, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v50 = v85;
    sub_10013A8B8((uint64_t)a1, v85, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
    int v51 = sub_1005E0EB0();
    os_log_type_t v52 = sub_1005E25A0();
    int v53 = v52;
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v54 = swift_slowAlloc();
      os_log_t v96 = v51;
      uint64_t v55 = v54;
      uint64_t v97 = swift_slowAlloc();
      uint64_t v100 = v97;
      *(_DWORD *)uint64_t v55 = 68159491;
      LODWORD(v98) = 2;
      LODWORD(v95) = v53;
      sub_1005E2960();
      *(_WORD *)(v55 + 8) = 256;
      uint64_t v56 = v49 + *(int *)(v77 + 20);
      LOBYTE(v98) = *(unsigned char *)v56;
      sub_1005E2960();
      *(_WORD *)(v55 + 11) = 2082;
      uint64_t v57 = *(void *)(v56 + 8);
      unint64_t v58 = *(void *)(v56 + 16);
      swift_bridgeObjectRetain();
      uint64_t v98 = sub_1000C6914(v57, v58, &v100);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 21) = 1040;
      LODWORD(v98) = 2;
      sub_1005E2960();
      *(_WORD *)(v55 + 27) = 512;
      LOWORD(v98) = *(_WORD *)(v56 + 24);
      sub_1005E2960();
      *(_WORD *)(v55 + 31) = 2160;
      uint64_t v98 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v55 + 41) = 2085;
      int v59 = *(_DWORD *)(v56 + 40);
      uint64_t v98 = *(void *)(v56 + 32);
      int v99 = v59;
      swift_bridgeObjectRetain();
      uint64_t v60 = sub_1005E1CC0();
      uint64_t v98 = sub_1000C6914(v60, v61, &v100);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100137CF8(v88, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v55 + 51) = 2082;
      uint64_t v62 = *(void *)v50;
      uint64_t v63 = *(void *)(v50 + 8);
      uint64_t v64 = *(unsigned __int8 *)(v50 + 16);
      swift_bridgeObjectRetain();
      sub_10013B5CC(v63, v64);
      uint64_t v65 = SectionSpecifier.debugDescription.getter(v62, v63, v64);
      unint64_t v67 = v66;
      swift_bridgeObjectRelease();
      sub_10013B5E0(v63, v64);
      uint64_t v98 = sub_1000C6914(v65, v67, &v100);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100137CF8(v50, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      os_log_t v68 = v96;
      _os_log_impl((void *)&_mh_execute_header, v96, (os_log_type_t)v95, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] No header data in response for '%{public}s'", (uint8_t *)v55, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v89, v87);
    }
    else
    {
      sub_100137CF8(v49, type metadata accessor for MailboxTaskLogger);
      sub_100137CF8(v50, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);

      return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v47, v45);
    }
  }
  uint64_t v21 = v81;
  sub_10013A920(v44, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
  uint64_t v73 = (uint64_t)v82;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v82, v21, v84);
  uint64_t v11 = v80;
  MessageHeader.init(data:)(v73, v80);
  v79((char *)v11, 0, 3, v75);
  char v27 = (char *)v97;
  a3 = *(void *)(v97 + 24);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *((void *)v27 + 3) = a3;
  if ((result & 1) == 0) {
    goto LABEL_28;
  }
LABEL_19:
  if (*(void *)(a3 + 16) <= (unint64_t)v96)
  {
    __break(1u);
  }
  else
  {
    sub_10013B5F4(v11, a3 + v95 + *(int *)(a2 + 20) + v94);
    return sub_100137CF8((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
  }
  return result;
}

uint64_t sub_10012F694(NSObject *a1, NSObject *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for MessageData.BodySection();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v60 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v13 = &v51[-v12];
  uint64_t v14 = sub_1005E0ED0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  unint64_t v61 = &v51[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  uint64_t v19 = &v51[-v18];
  int v20 = *(_DWORD *)(v3 + 20);
  uint64_t v57 = *(void (**)(unsigned char *, NSObject *, uint64_t))(v15 + 16);
  uint64_t v58 = v15 + 16;
  v57(&v51[-v18], a2, v14);
  uint64_t v62 = a2;
  sub_10013A8B8((uint64_t)a2, (uint64_t)v13, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v65 = a1;
  sub_10013A8B8((uint64_t)a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
  uint64_t v21 = sub_1005E0EB0();
  os_log_type_t v22 = sub_1005E2590();
  int v23 = v22;
  BOOL v24 = os_log_type_enabled(v21, v22);
  uint64_t v64 = v15;
  int v63 = v20;
  uint64_t v56 = v9;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc();
    os_log_t v53 = v21;
    uint64_t v26 = v25;
    uint64_t v54 = swift_slowAlloc();
    v68[0] = v54;
    *(_DWORD *)uint64_t v26 = 68159747;
    LODWORD(v66) = 2;
    int v52 = v23;
    uint64_t v59 = v14;
    sub_1005E2960();
    *(_WORD *)(v26 + 8) = 256;
    uint64_t v27 = *(int *)(v9 + 20);
    uint64_t v55 = v3;
    uint64_t v28 = &v13[v27];
    LOBYTE(v66) = v13[v27];
    sub_1005E2960();
    *(_WORD *)(v26 + 11) = 2082;
    uint64_t v30 = *((void *)v28 + 1);
    unint64_t v29 = *((void *)v28 + 2);
    swift_bridgeObjectRetain();
    uint64_t v66 = sub_1000C6914(v30, v29, v68);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 21) = 1040;
    LODWORD(v66) = 2;
    sub_1005E2960();
    *(_WORD *)(v26 + 27) = 512;
    LOWORD(v66) = *((_WORD *)v28 + 12);
    sub_1005E2960();
    *(_WORD *)(v26 + 31) = 2160;
    uint64_t v66 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v26 + 41) = 2085;
    int v31 = *((_DWORD *)v28 + 10);
    uint64_t v66 = *((void *)v28 + 4);
    int v67 = v31;
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1005E1CC0();
    uint64_t v66 = sub_1000C6914(v32, v33, v68);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100137CF8((uint64_t)v13, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v26 + 51) = 1024;
    LODWORD(v66) = v63;
    sub_1005E2960();
    *(_WORD *)(v26 + 57) = 2082;
    uint64_t v34 = *(void *)v8;
    uint64_t v35 = *((void *)v8 + 1);
    uint64_t v36 = v8[16];
    swift_bridgeObjectRetain();
    sub_10013B5CC(v35, v36);
    uint64_t v37 = SectionSpecifier.debugDescription.getter(v34, v35, v36);
    unint64_t v39 = v38;
    swift_bridgeObjectRelease();
    sub_10013B5E0(v35, v36);
    uint64_t v66 = sub_1000C6914(v37, v39, v68);
    uint64_t v14 = v59;
    sub_1005E2960();
    uint64_t v3 = v55;
    swift_bridgeObjectRelease();
    sub_100137CF8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
    os_log_t v40 = v53;
    _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v52, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: Received body section data for section '%{public}s'", (uint8_t *)v26, 0x43u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v41 = v64;
  }
  else
  {
    sub_100137CF8((uint64_t)v13, type metadata accessor for MailboxTaskLogger);
    sub_100137CF8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);

    uint64_t v41 = v15;
  }
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v41 + 8))(v19, v14);
  if ((*(unsigned char *)(v3 + 54) & 1) == 0)
  {
    Class isa = v65->isa;
    Class v44 = v65[1].isa;
    char v45 = (char)v65[2].isa;
    uint64_t v46 = (void *)SectionSpecifier.init(part:kind:)(*(void *)(v3 + 24), 0, 2u);
    uint64_t v48 = v47;
    char v50 = v49;
    swift_bridgeObjectRetain();
    LOBYTE(isa) = static SectionSpecifier.__derived_struct_equals(_:_:)(isa, (uint64_t)v44, v45, v46, v48, v50);
    swift_bridgeObjectRelease();
    uint64_t result = sub_10013B5E0(v48, v50);
    if (isa) {
      return sub_100133560(v65, v62);
    }
  }
  return result;
}

uint64_t sub_1001300D8(int a1)
{
  uint64_t v64 = type metadata accessor for MessageHeader();
  uint64_t v3 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v5 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10000566C(&qword_10070D6E8);
  __chkstk_darwin(v54);
  uint64_t v57 = (uint64_t)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s19MessageHeaderStatusOMa(0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v51 = (uint64_t)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v56 = (uint64_t)v48 - v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v48 - v12;
  uint64_t v14 = _s25MessageSectionsToDownloadVMa(0);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v55 = (char *)v48 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  __chkstk_darwin(v18);
  int v23 = (int *)((char *)v48 - v22);
  uint64_t v26 = *(void *)(v1 + 24);
  uint64_t v25 = v1 + 24;
  uint64_t result = v26;
  uint64_t v61 = *(void *)(v26 + 16);
  if (!v61) {
    return result;
  }
  uint64_t v60 = v21;
  v48[0] = v20;
  v48[1] = v25;
  char v49 = v5;
  uint64_t v50 = result;
  uint64_t v27 = result + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  uint64_t v58 = *(void *)(v19 + 72);
  int v63 = (uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  int v52 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  swift_bridgeObjectRetain();
  unint64_t v28 = 0;
  int v59 = a1;
  uint64_t v29 = (uint64_t)v55;
  uint64_t v53 = v14;
  while (1)
  {
    sub_10013A8B8(v27, (uint64_t)v23, _s25MessageSectionsToDownloadVMa);
    sub_10013A8B8((uint64_t)v23 + *(int *)(v14 + 20), (uint64_t)v13, _s19MessageHeaderStatusOMa);
    uint64_t v30 = *v63;
    int v62 = (*v63)(v13, 3, v64);
    sub_100137CF8((uint64_t)v13, _s19MessageHeaderStatusOMa);
    int v31 = *v23;
    uint64_t v32 = v60;
    sub_10013A8B8((uint64_t)v23, v60, _s25MessageSectionsToDownloadVMa);
    if (v31 == v59) {
      break;
    }
    sub_100137CF8(v32, _s25MessageSectionsToDownloadVMa);
    sub_10013A8B8((uint64_t)v23, v29, _s25MessageSectionsToDownloadVMa);
LABEL_4:
    sub_100137CF8(v29, _s25MessageSectionsToDownloadVMa);
    sub_100137CF8((uint64_t)v23, _s25MessageSectionsToDownloadVMa);
LABEL_5:
    ++v28;
    v27 += v58;
    if (v61 == v28) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v33 = *(void *)(*(void *)(v32 + *(int *)(v14 + 24)) + 16);
  sub_100137CF8(v32, _s25MessageSectionsToDownloadVMa);
  sub_10013A8B8((uint64_t)v23, v29, _s25MessageSectionsToDownloadVMa);
  if (v33) {
    goto LABEL_4;
  }
  uint64_t v34 = v29 + *(int *)(v14 + 20);
  uint64_t v35 = v56;
  uint64_t v36 = v64;
  (*v52)(v56, 1, 3, v64);
  uint64_t v37 = v57;
  uint64_t v38 = v34;
  uint64_t v39 = v57 + *(int *)(v54 + 48);
  sub_10013A8B8(v38, v57, _s19MessageHeaderStatusOMa);
  sub_10013A8B8(v35, v39, _s19MessageHeaderStatusOMa);
  int v40 = v30((char *)v37, 3, v36);
  uint64_t v14 = v53;
  uint64_t v29 = (uint64_t)v55;
  switch(v40)
  {
    case 1:
      if (v30((char *)v39, 3, v64) != 1) {
        goto LABEL_16;
      }
      goto LABEL_22;
    case 2:
      if (v30((char *)v39, 3, v64) == 2) {
        goto LABEL_22;
      }
      goto LABEL_16;
    case 3:
      if (v30((char *)v39, 3, v64) != 3) {
        goto LABEL_16;
      }
      goto LABEL_22;
    default:
      uint64_t v41 = v51;
      sub_10013A8B8(v57, v51, _s19MessageHeaderStatusOMa);
      if (v30((char *)v39, 3, v64))
      {
        sub_100137CF8(v41, (uint64_t (*)(void))type metadata accessor for MessageHeader);
LABEL_16:
        sub_100007A48(v57, &qword_10070D6E8);
LABEL_17:
        int v42 = v62;
        sub_100137CF8(v56, _s19MessageHeaderStatusOMa);
        sub_100137CF8(v29, _s25MessageSectionsToDownloadVMa);
        sub_100137CF8((uint64_t)v23, _s25MessageSectionsToDownloadVMa);
        if (!v42) {
          goto LABEL_23;
        }
        goto LABEL_5;
      }
      uint64_t v43 = (uint64_t)v49;
      sub_10013A920(v39, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for MessageHeader);
      uint64_t v44 = v41;
      char v45 = static MessageHeader.== infix(_:_:)();
      uint64_t v46 = v43;
      uint64_t v29 = (uint64_t)v55;
      sub_100137CF8(v46, (uint64_t (*)(void))type metadata accessor for MessageHeader);
      sub_100137CF8(v44, (uint64_t (*)(void))type metadata accessor for MessageHeader);
      if ((v45 & 1) == 0)
      {
        sub_100137CF8(v57, _s19MessageHeaderStatusOMa);
        goto LABEL_17;
      }
LABEL_22:
      sub_100137CF8(v57, _s19MessageHeaderStatusOMa);
      sub_100137CF8(v56, _s19MessageHeaderStatusOMa);
      sub_100137CF8(v29, _s25MessageSectionsToDownloadVMa);
      sub_100137CF8((uint64_t)v23, _s25MessageSectionsToDownloadVMa);
LABEL_23:
      swift_bridgeObjectRelease();
      uint64_t v47 = v48[0];
      sub_1000EF8A0(v28, v48[0]);
      return sub_100137CF8(v47, _s25MessageSectionsToDownloadVMa);
  }
}

uint64_t sub_100130848@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  unint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
LABEL_5:
    sub_10013AFAC((uint64_t)__dst);
LABEL_8:
    sub_10001FDF0((uint64_t)__dst, (uint64_t)v20, &qword_10070D700);
    return sub_10001FDF0((uint64_t)v20, a2, &qword_10070D700);
  }
  unint64_t v6 = 0;
  uint64_t v7 = (_OWORD *)(v4 + 32);
  while (*(_DWORD *)v7 != result)
  {
    ++v6;
    v7 += 12;
    if (v5 == v6) {
      goto LABEL_5;
    }
  }
  if (v6 < v5)
  {
    long long v8 = *v7;
    long long v9 = v7[1];
    long long v10 = v7[3];
    v17[2] = v7[2];
    v17[3] = v10;
    v17[0] = v8;
    v17[1] = v9;
    long long v11 = v7[4];
    long long v12 = v7[5];
    long long v13 = v7[7];
    v17[6] = v7[6];
    v17[7] = v13;
    v17[4] = v11;
    v17[5] = v12;
    long long v14 = v7[8];
    long long v15 = v7[9];
    long long v16 = v7[10];
    *(_OWORD *)&v18[9] = *(_OWORD *)((char *)v7 + 169);
    v17[9] = v15;
    *(_OWORD *)uint64_t v18 = v16;
    v17[8] = v14;
    memmove(__dst, v7, 0xB9uLL);
    UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)__dst);
    sub_10013ADBC((uint64_t)v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E304);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_100130948@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  sub_1001309E0(v3);
  swift_bridgeObjectRelease();
  return sub_10001FDF0((uint64_t)&v5, a2, &qword_10070AB58);
}

uint64_t sub_1001309E0(uint64_t a1)
{
  uint64_t v2 = __chkstk_darwin(a1);
  uint64_t v4 = v3;
  unsigned int v161 = v5;
  uint64_t v7 = v6;
  uint64_t v8 = v2;
  uint64_t v163 = v9;
  uint64_t v158 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v10 = __chkstk_darwin(v158);
  long long v12 = (char *)v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  long long v15 = (char *)v132 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v132 - v16;
  uint64_t v18 = sub_1005E0ED0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v159 = v18;
  uint64_t v160 = v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)v132 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  os_log_t v157 = (os_log_t)((char *)v132 - v24);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)v132 - v25;
  unint64_t v164 = v1;
  sub_1001359F8((long long *)(v1 + 2), (uint64_t)v214);
  sub_1001359F8(v214, (uint64_t)v219);
  if (sub_10006196C((uint64_t)v219) == 1)
  {
    sub_10013668C((uint64_t)&v208);
  }
  else
  {
    sub_10013A988((uint64_t)v219, (uint64_t)&v194);
    sub_10013A988((uint64_t)&v194, (uint64_t)&v208);
    UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)&v208);
  }
  sub_10001FDF0((uint64_t)&v208, (uint64_t)v220, &qword_10070A8D8);
  uint64_t v27 = v164;
  sub_10013ADBC((uint64_t)v164, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E304);
  uint64_t result = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v8, _swiftEmptyArrayStorage);
  if (result)
  {
    unsigned int v29 = v27[1];
    double v30 = (double)v29 * 1.25;
    if ((~*(void *)&v30 & 0x7FF0000000000000) == 0) {
      goto LABEL_80;
    }
    if (v30 <= -1.0) {
      goto LABEL_81;
    }
    if (v30 >= 4294967300.0) {
      goto LABEL_82;
    }
    BOOL v31 = __CFADD__(v29, 0x4000);
    unsigned int v32 = v29 + 0x4000;
    if (v31) {
      goto LABEL_83;
    }
    if (v32 <= v30) {
      unsigned int v32 = v30;
    }
    unsigned int v33 = *v27;
    LOBYTE(v180) = 1;
    *((void *)&v180 + 1) = v7;
    *(void *)&long long v181 = __PAIR64__(v33, v161);
    *((void *)&v181 + 1) = v8;
    LODWORD(v182) = v32;
    *((void *)&v182 + 1) = _swiftEmptyArrayStorage;
    LODWORD(v183) = 0;
    WORD2(v183) = 2;
    BYTE6(v183) = 0;
    sub_10001FDF0((uint64_t)v220, (uint64_t)&v183 + 8, &qword_10070A8D8);
    long long v206 = v192;
    v207[0] = v193[0];
    *(_OWORD *)((char *)v207 + 9) = *(_OWORD *)((char *)v193 + 9);
    long long v202 = v188;
    long long v203 = v189;
    long long v205 = v191;
    long long v204 = v190;
    long long v198 = v184;
    long long v199 = v185;
    long long v201 = v187;
    long long v200 = v186;
    long long v194 = v180;
    long long v195 = v181;
    long long v197 = v183;
    long long v196 = v182;
    UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)&v194);
    sub_10001FDF0((uint64_t)&v194, (uint64_t)&v208, &qword_10070AB58);
    uint64_t v34 = v163;
    goto LABEL_21;
  }
  sub_1001359F8(v214, (uint64_t)v218);
  int v35 = sub_10006196C((uint64_t)v218);
  uint64_t v162 = v8;
  uint64_t v156 = v7;
  if (v35 == 1) {
    goto LABEL_16;
  }
  sub_10013A988((uint64_t)v218, (uint64_t)&v194);
  sub_10013A988((uint64_t)&v194, (uint64_t)&v208);
  if (sub_10013AE98((uint64_t)&v208) == 1) {
    goto LABEL_16;
  }
  sub_10013AE3C((uint64_t)&v208, (uint64_t)&v217);
  sub_10013A988((uint64_t)&v194, (uint64_t)v179);
  sub_10013AF38((uint64_t)v179, sub_100136870);
  BodyStructure.find(_:)(v8, (uint64_t)v210);
  sub_10001FDF0((uint64_t)v210, (uint64_t)&v180, &qword_10070D708);
  sub_10001FDF0((uint64_t)v210, (uint64_t)v211, &qword_10070D708);
  if (sub_10013AE98((uint64_t)v211) == 1)
  {
    sub_10013ADBC((uint64_t)v164, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
LABEL_16:
    uint64_t v36 = v159;
    uint64_t v37 = v160;
    (*(void (**)(char *, uint64_t, uint64_t))(v160 + 16))(v22, v4, v159);
    sub_10013A8B8(v4, (uint64_t)v12, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v38 = (uint64_t)v164;
    sub_10013ADBC((uint64_t)v164, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E304);
    swift_bridgeObjectRetain();
    sub_10013ADBC(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E304);
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1005E0EB0();
    os_log_type_t v40 = sub_1005E25A0();
    int v41 = v40;
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v42 = swift_slowAlloc();
      os_log_t v157 = (os_log_t)swift_slowAlloc();
      *(void *)&long long v194 = v157;
      *(_DWORD *)uint64_t v42 = 68159747;
      LODWORD(v208) = 2;
      uint64_t v155 = (uint64_t)v39;
      sub_1005E2960();
      *(_WORD *)(v42 + 8) = 256;
      uint64_t v43 = &v12[*(int *)(v158 + 20)];
      LOBYTE(v208) = *v43;
      sub_1005E2960();
      *(_WORD *)(v42 + 11) = 2082;
      LODWORD(v154) = v41;
      uint64_t v158 = (uint64_t)v22;
      uint64_t v44 = *((void *)v43 + 1);
      unint64_t v45 = *((void *)v43 + 2);
      swift_bridgeObjectRetain();
      uint64_t v208 = sub_1000C6914(v44, v45, (uint64_t *)&v194);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 21) = 1040;
      LODWORD(v208) = 2;
      sub_1005E2960();
      *(_WORD *)(v42 + 27) = 512;
      LOWORD(v208) = *((_WORD *)v43 + 12);
      sub_1005E2960();
      *(_WORD *)(v42 + 31) = 2160;
      uint64_t v208 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v42 + 41) = 2085;
      int v46 = *((_DWORD *)v43 + 10);
      uint64_t v208 = *((void *)v43 + 4);
      int v209 = v46;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1005E1CC0();
      uint64_t v208 = sub_1000C6914(v47, v48, (uint64_t *)&v194);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100137CF8((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v42 + 51) = 1024;
      sub_10013ADBC(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
      LODWORD(v208) = *(_DWORD *)v38;
      sub_1005E2960();
      sub_10013ADBC(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
      *(_WORD *)(v42 + 57) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v49 = SectionSpecifier.Part.debugDescription.getter();
      unint64_t v51 = v50;
      swift_bridgeObjectRelease();
      uint64_t v52 = v49;
      uint64_t v34 = v163;
      uint64_t v208 = sub_1000C6914(v52, v51, (uint64_t *)&v194);
      uint64_t v8 = v162;
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v53 = (os_log_t)v155;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v155, (os_log_type_t)v154, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: Section '[%{public}s]' not found in complete body structure.", (uint8_t *)v42, 0x43u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v158, v159);
      goto LABEL_20;
    }
    sub_10013ADBC(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
    sub_100137CF8((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
    sub_10013ADBC(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v22, v36);
    goto LABEL_19;
  }
  sub_10013AE3C((uint64_t)v211, (uint64_t)v212);
  sub_10013AE3C((uint64_t)v211, (uint64_t)v178);
  sub_10013AE3C((uint64_t)v212, (uint64_t)v213);
  if (sub_10013AEAC((uint64_t)v213) != 1)
  {
    uint64_t v155 = *(void *)(UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v213) + 0x50);
    uint64_t v107 = v159;
    (*(void (**)(char *, uint64_t, uint64_t))(v160 + 16))(v26, v4, v159);
    uint64_t v108 = v4;
    int v109 = v26;
    sub_10013A8B8(v108, (uint64_t)v17, type metadata accessor for MailboxTaskLogger);
    sub_10001FDF0((uint64_t)&v180, (uint64_t)&v215, &qword_10070D708);
    sub_10013AF38((uint64_t)&v215, sub_100136870);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v38 = (uint64_t)v164;
    sub_10013ADBC((uint64_t)v164, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E304);
    sub_10013ADBC(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E304);
    uint64_t v153 = BodyStructure.mediaType.getter();
    uint64_t v154 = v110;
    unint64_t v112 = v111;
    unint64_t v114 = v113;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v115 = sub_1005E0EB0();
    os_log_type_t v116 = sub_1005E25C0();
    int v117 = v116;
    os_log_t v157 = v115;
    if (os_log_type_enabled(v115, v116))
    {
      uint64_t v118 = swift_slowAlloc();
      uint64_t v151 = swift_slowAlloc();
      v174[0] = v151;
      *(_DWORD *)uint64_t v118 = 68160515;
      LODWORD(v176) = 2;
      uint64_t v152 = (uint64_t)v109;
      sub_1005E2960();
      *(_WORD *)(v118 + 8) = 256;
      unint64_t v119 = &v17[*(int *)(v158 + 20)];
      LOBYTE(v176) = *v119;
      sub_1005E2960();
      *(_WORD *)(v118 + 11) = 2082;
      LODWORD(v158) = v117;
      uint64_t v121 = *((void *)v119 + 1);
      unint64_t v120 = *((void *)v119 + 2);
      swift_bridgeObjectRetain();
      uint64_t v176 = sub_1000C6914(v121, v120, v174);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v118 + 21) = 1040;
      LODWORD(v176) = 2;
      sub_1005E2960();
      *(_WORD *)(v118 + 27) = 512;
      LOWORD(v176) = *((_WORD *)v119 + 12);
      sub_1005E2960();
      *(_WORD *)(v118 + 31) = 2160;
      uint64_t v176 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v118 + 41) = 2085;
      uint64_t v122 = *((void *)v119 + 4);
      int v123 = *((_DWORD *)v119 + 10);
      uint64_t v34 = v163;
      uint64_t v176 = v122;
      int v177 = v123;
      swift_bridgeObjectRetain();
      uint64_t v124 = sub_1005E1CC0();
      uint64_t v176 = sub_1000C6914(v124, v125, v174);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100137CF8((uint64_t)v17, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v118 + 51) = 1024;
      sub_10013ADBC((uint64_t)v164, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
      LODWORD(v176) = *v164;
      sub_1005E2960();
      sub_10013ADBC((uint64_t)v164, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
      *(_WORD *)(v118 + 57) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v176 = sub_1000C6914(v153, v112, v174);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v118 + 67) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v176 = sub_1000C6914((uint64_t)v154, v114, v174);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v118 + 77) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v126 = SectionSpecifier.Part.debugDescription.getter();
      unint64_t v128 = v127;
      swift_bridgeObjectRelease();
      uint64_t v176 = sub_1000C6914(v126, v128, v174);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      uint64_t v8 = v162;
      swift_bridgeObjectRelease();
      *(_WORD *)(v118 + 87) = 2048;
      sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
      uint64_t v176 = v155;
      sub_1005E2960();
      sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
      os_log_t v129 = v157;
      _os_log_impl((void *)&_mh_execute_header, v157, (os_log_type_t)v158, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: Adding '%{public}s/%{public}s' section '[%{public}s]' (%{iec-bytes}ld)", (uint8_t *)v118, 0x61u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v38 = (uint64_t)v164;
      swift_slowDealloc();
      sub_10013ADBC(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);

      sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
      sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
      (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v152, v159);
      goto LABEL_20;
    }
    sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
    sub_10013ADBC(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
    sub_10013ADBC(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
    sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
    sub_100137CF8((uint64_t)v17, type metadata accessor for MailboxTaskLogger);
    sub_10013ADBC(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);

    sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
    (*(void (**)(char *, uint64_t))(v160 + 8))(v109, v107);
LABEL_19:
    uint64_t v34 = v163;
    goto LABEL_20;
  }
  UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v213);
  uint64_t v57 = v159;
  uint64_t v56 = v160;
  os_log_t v58 = v157;
  (*(void (**)(os_log_t, uint64_t, uint64_t))(v160 + 16))(v157, v4, v159);
  sub_10013A8B8(v4, (uint64_t)v15, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
  sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
  uint64_t v38 = (uint64_t)v164;
  sub_10013ADBC((uint64_t)v164, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E304);
  sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
  swift_bridgeObjectRetain();
  sub_10013ADBC(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E304);
  sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
  swift_bridgeObjectRetain();
  int v59 = sub_1005E0EB0();
  int v60 = sub_1005E25C0();
  if (!os_log_type_enabled(v59, (os_log_type_t)v60))
  {
    sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
    sub_10013ADBC(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
    sub_10013ADBC(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
    sub_100137CF8((uint64_t)v15, type metadata accessor for MailboxTaskLogger);
    sub_10013ADBC(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
    sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
    sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
    swift_bridgeObjectRelease_n();
    sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);

    sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
    (*(void (**)(os_log_t, uint64_t))(v56 + 8))(v58, v57);
    goto LABEL_19;
  }
  int v134 = v60;
  uint64_t v148 = v59;
  uint64_t v61 = swift_slowAlloc();
  uint64_t v133 = swift_slowAlloc();
  uint64_t v175 = v133;
  *(_DWORD *)uint64_t v61 = 68160259;
  LODWORD(v215) = 2;
  sub_1005E2960();
  *(_WORD *)(v61 + 8) = 256;
  int v62 = &v15[*(int *)(v158 + 20)];
  LOBYTE(v215) = *v62;
  sub_1005E2960();
  *(_WORD *)(v61 + 11) = 2082;
  uint64_t v63 = *((void *)v62 + 1);
  unint64_t v64 = *((void *)v62 + 2);
  swift_bridgeObjectRetain();
  uint64_t v215 = sub_1000C6914(v63, v64, &v175);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  *(_WORD *)(v61 + 21) = 1040;
  LODWORD(v215) = 2;
  uint64_t v38 = (uint64_t)v164;
  sub_1005E2960();
  *(_WORD *)(v61 + 27) = 512;
  LOWORD(v215) = *((_WORD *)v62 + 12);
  sub_1005E2960();
  *(_WORD *)(v61 + 31) = 2160;
  uint64_t v215 = 0x786F626C69616DLL;
  sub_1005E2960();
  *(_WORD *)(v61 + 41) = 2085;
  int v65 = *((_DWORD *)v62 + 10);
  uint64_t v215 = *((void *)v62 + 4);
  int v216 = v65;
  swift_bridgeObjectRetain();
  uint64_t v66 = sub_1005E1CC0();
  uint64_t v215 = sub_1000C6914(v66, v67, &v175);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  sub_100137CF8((uint64_t)v15, type metadata accessor for MailboxTaskLogger);
  *(_WORD *)(v61 + 51) = 1024;
  sub_10013ADBC(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
  LODWORD(v215) = *(_DWORD *)v38;
  sub_1005E2960();
  sub_10013ADBC(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
  *(_WORD *)(v61 + 57) = 2080;
  BodyStructure.mediaType.getter();
  uint64_t v69 = v68;
  unint64_t v71 = v70;
  swift_bridgeObjectRelease();
  uint64_t v215 = sub_1000C6914(v69, v71, &v175);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
  sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
  *(_WORD *)(v61 + 67) = 2082;
  swift_bridgeObjectRetain();
  uint64_t v72 = SectionSpecifier.Part.debugDescription.getter();
  unint64_t v74 = v73;
  swift_bridgeObjectRelease();
  uint64_t v215 = sub_1000C6914(v72, v74, &v175);
  sub_1005E2960();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  int v135 = (uint8_t *)v61;
  *(_WORD *)(v61 + 77) = 2048;
  sub_10013AE3C((uint64_t)v178, (uint64_t)&v176);
  uint64_t v75 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)&v176);
  uint64_t v76 = *(void *)v75;
  uint64_t v139 = *(void *)(*(void *)v75 + 16);
  if (!v139)
  {
LABEL_76:
    sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
    uint64_t v130 = 0;
    uint64_t v8 = v162;
    uint64_t v34 = v163;
    uint64_t v77 = v160;
    uint64_t v78 = v148;
    goto LABEL_77;
  }
  sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
  v132[1] = v76;
  swift_bridgeObjectRetain();
  uint64_t v136 = v76 + 32;
  sub_10013AE3C(v76 + 32, (uint64_t)v173);
  uint64_t v144 = 1;
  uint64_t v145 = 0;
  uint64_t v8 = v162;
  uint64_t v34 = v163;
  uint64_t v77 = v160;
  uint64_t v78 = v148;
LABEL_26:
  sub_10013AE3C((uint64_t)v173, (uint64_t)v174);
  int v79 = sub_10013AEAC((uint64_t)v174);
  uint64_t result = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v174);
  if (v79 != 1)
  {
    uint64_t v105 = *(void *)(result + 80);
    goto LABEL_68;
  }
  uint64_t v80 = *(void *)result;
  uint64_t v140 = *(void *)(*(void *)result + 16);
  if (!v140)
  {
    uint64_t v105 = 0;
    goto LABEL_68;
  }
  sub_10013AF38((uint64_t)v173, sub_100136870);
  uint64_t v138 = v80;
  swift_bridgeObjectRetain();
  uint64_t v137 = v80 + 32;
  sub_10013AE3C(v80 + 32, (uint64_t)v171);
  uint64_t v146 = 1;
  uint64_t v147 = 0;
LABEL_29:
  sub_10013AE3C((uint64_t)v171, (uint64_t)v172);
  int v81 = sub_10013AEAC((uint64_t)v172);
  long long v82 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v172);
  if (v81 != 1)
  {
    uint64_t v103 = v82[10];
    goto LABEL_62;
  }
  uint64_t v83 = *v82;
  uint64_t v143 = *(void *)(*v82 + 16);
  if (!v143)
  {
    uint64_t v103 = 0;
    goto LABEL_62;
  }
  sub_10013AF38((uint64_t)v171, sub_100136870);
  uint64_t v142 = v83;
  swift_bridgeObjectRetain();
  uint64_t v141 = v83 + 32;
  sub_10013AE3C(v83 + 32, (uint64_t)v169);
  uint64_t v149 = 1;
  uint64_t v150 = 0;
  while (1)
  {
    sub_10013AE3C((uint64_t)v169, (uint64_t)v170);
    int v84 = sub_10013AEAC((uint64_t)v170);
    uint64_t v85 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v170);
    if (v84 != 1)
    {
      uint64_t v87 = v85[10];
      goto LABEL_57;
    }
    uint64_t v86 = *v85;
    uint64_t v154 = *(NSObject **)(*v85 + 16);
    if (v154) {
      break;
    }
    uint64_t v87 = 0;
LABEL_57:
    uint64_t result = v142;
    if (__OFADD__(v150, v87)) {
      goto LABEL_85;
    }
    v150 += v87;
    if (v149 == v143)
    {
      swift_bridgeObjectRelease();
      sub_10013AF38((uint64_t)v171, sub_100061440);
      uint64_t v103 = v150;
LABEL_62:
      uint64_t result = v138;
      if (__OFADD__(v147, v103)) {
        goto LABEL_86;
      }
      v147 += v103;
      if (v146 != v140)
      {
        uint64_t v104 = v146;
        sub_10013AE3C(v137 + 184 * v146, (uint64_t)v171);
        uint64_t v146 = v104 + 1;
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
      uint64_t result = sub_10013AF38((uint64_t)v173, sub_100061440);
      uint64_t v105 = v147;
LABEL_68:
      if (__OFADD__(v145, v105)) {
        goto LABEL_87;
      }
      v145 += v105;
      if (v144 != v139)
      {
        uint64_t v106 = v144;
        sub_10013AE3C(v136 + 184 * v144, (uint64_t)v173);
        uint64_t v144 = v106 + 1;
        goto LABEL_26;
      }
      sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
      swift_bridgeObjectRelease();
      sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
      uint64_t v130 = v145;
LABEL_77:
      uint64_t v131 = v135;
      v174[0] = v130;
      sub_1005E2960();
      sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
      _os_log_impl((void *)&_mh_execute_header, v78, (os_log_type_t)v134, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: Adding multi-part '%s' section '[%{public}s]' (approx. %{iec-bytes}ld)", v131, 0x57u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_10013ADBC(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);

      sub_10013AFD8((uint64_t)v210, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
      (*(void (**)(os_log_t, uint64_t))(v77 + 8))(v157, v159);
LABEL_20:
      int v54 = sub_100135684(v8);
      unsigned int v55 = *(_DWORD *)v38;
      LOBYTE(v180) = 1;
      *((void *)&v180 + 1) = v156;
      *(void *)&long long v181 = __PAIR64__(v55, v161);
      *((void *)&v181 + 1) = v8;
      LODWORD(v182) = v54;
      *((void *)&v182 + 1) = _swiftEmptyArrayStorage;
      LODWORD(v183) = 0;
      WORD2(v183) = 2;
      BYTE6(v183) = 0;
      sub_10001FDF0((uint64_t)v220, (uint64_t)&v183 + 8, &qword_10070A8D8);
      long long v206 = v192;
      v207[0] = v193[0];
      *(_OWORD *)((char *)v207 + 9) = *(_OWORD *)((char *)v193 + 9);
      long long v202 = v188;
      long long v203 = v189;
      long long v205 = v191;
      long long v204 = v190;
      long long v198 = v184;
      long long v199 = v185;
      long long v201 = v187;
      long long v200 = v186;
      long long v194 = v180;
      long long v195 = v181;
      long long v197 = v183;
      long long v196 = v182;
      UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)&v194);
      sub_10001FDF0((uint64_t)&v194, (uint64_t)&v208, &qword_10070AB58);
LABEL_21:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_10001FDF0((uint64_t)&v208, v34, &qword_10070AB58);
    }
    uint64_t v102 = v149;
    sub_10013AE3C(v141 + 184 * v149, (uint64_t)v169);
    uint64_t v149 = v102 + 1;
  }
  sub_10013AF38((uint64_t)v169, sub_100136870);
  swift_bridgeObjectRetain();
  uint64_t v152 = v86 + 32;
  sub_10013AE3C(v86 + 32, (uint64_t)v167);
  uint64_t v87 = 0;
  uint64_t v155 = 1;
  uint64_t v153 = v86;
  while (1)
  {
    sub_10013AE3C((uint64_t)v167, (uint64_t)v168);
    int v88 = sub_10013AEAC((uint64_t)v168);
    uint64_t result = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v168);
    uint64_t v158 = v87;
    if (v88 != 1)
    {
      uint64_t v92 = *(void *)(result + 80);
      goto LABEL_51;
    }
    uint64_t v89 = *(void *)result;
    uint64_t v90 = *(void *)(*(void *)result + 16);
    if (v90) {
      break;
    }
    uint64_t v92 = 0;
    uint64_t v34 = v163;
LABEL_51:
    BOOL v100 = __OFADD__(v158, v92);
    uint64_t v87 = v158 + v92;
    if (v100) {
      goto LABEL_84;
    }
    if (v155 == v154)
    {
      swift_bridgeObjectRelease();
      sub_10013AF38((uint64_t)v169, sub_100061440);
      goto LABEL_57;
    }
    os_log_t v101 = (os_log_t)v155;
    sub_10013AE3C(v152 + 184 * v155, (uint64_t)v167);
    uint64_t v155 = (uint64_t)&v101->isa + 1;
  }
  uint64_t v91 = v89 + 32;
  sub_10013AF38((uint64_t)v167, sub_100136870);
  uint64_t v151 = v89;
  swift_bridgeObjectRetain();
  uint64_t v38 = 0;
  uint64_t v92 = 0;
  while (1)
  {
    sub_10013AE3C(v91 + 184 * v38, (uint64_t)v165);
    sub_10013AE3C((uint64_t)v165, (uint64_t)v166);
    int v93 = sub_10013AEAC((uint64_t)v166);
    uint64_t result = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v166);
    if (v93 == 1)
    {
      uint64_t v94 = *(void *)result;
      uint64_t v95 = *(void *)(*(void *)result + 16);
      sub_10013AF38((uint64_t)v165, sub_100136870);
      uint64_t v96 = v94 + 32;
      swift_bridgeObjectRetain();
      uint64_t v97 = 0;
      uint64_t v98 = v95 + 1;
      while (--v98)
      {
        sub_10013AE3C(v96, (uint64_t)&v215);
        uint64_t v99 = sub_1001358BC();
        v96 += 184;
        BOOL v100 = __OFADD__(v97, v99);
        v97 += v99;
        if (v100)
        {
          __break(1u);
          goto LABEL_76;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = sub_10013AF38((uint64_t)v165, sub_100061440);
      uint64_t v8 = v162;
    }
    else
    {
      uint64_t v97 = *(void *)(result + 80);
    }
    BOOL v100 = __OFADD__(v92, v97);
    v92 += v97;
    if (v100) {
      break;
    }
    if (++v38 == v90)
    {
      swift_bridgeObjectRelease();
      uint64_t result = sub_10013AF38((uint64_t)v167, sub_100061440);
      uint64_t v34 = v163;
      uint64_t v38 = (uint64_t)v164;
      uint64_t v77 = v160;
      uint64_t v78 = v148;
      goto LABEL_51;
    }
  }
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
  return result;
}

uint64_t sub_1001326AC@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    unint64_t v6 = 0;
    uint64_t v7 = (int *)(v4 + 32);
    while (1)
    {
      int v8 = *v7;
      v7 += 48;
      if (v8 == a1) {
        break;
      }
      if (v5 == ++v6) {
        goto LABEL_5;
      }
    }
    sub_1000EF784(v6, v10);
    UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v10);
  }
  else
  {
LABEL_5:
    sub_10013AFAC((uint64_t)v10);
  }
  sub_10001FDF0((uint64_t)v10, (uint64_t)v11, &qword_10070D700);
  return sub_10001FDF0((uint64_t)v11, a2, &qword_10070D700);
}

uint64_t sub_100132750(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v107 = a3;
  int v109 = a2;
  uint64_t v110 = a1;
  uint64_t v106 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v106);
  uint64_t v112 = (uint64_t)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E0ED0();
  uint64_t v114 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v113 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MessageSectionData(0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v111 = (uint64_t)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v115 = (char *)&v102 - v10;
  uint64_t v11 = type metadata accessor for SegmentResequencer.PopResult(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_1005E17E0();
  uint64_t v14 = *(char **)(v119 - 8);
  uint64_t v15 = __chkstk_darwin(v119);
  uint64_t v118 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  os_log_t v129 = (char *)&v102 - v17;
  uint64_t v18 = sub_10000566C(&qword_10070D738);
  __chkstk_darwin(v18 - 8);
  uint64_t v127 = (uint64_t)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = type metadata accessor for MessageSectionData.Segment(0);
  uint64_t v20 = *(void **)(v128 - 8);
  uint64_t v21 = __chkstk_darwin(v128);
  uint64_t v108 = (uint64_t *)((char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  int v117 = (uint64_t *)((char *)&v102 - v23);
  uint64_t v24 = _s25MessageSectionsToDownloadVMa(0);
  uint64_t v25 = *(int *)(v24 + 24);
  os_log_type_t v116 = v3;
  uint64_t v130 = (void *)((char *)v3 + v25);
  uint64_t v26 = *(void *)((char *)v3 + v25);
  uint64_t v27 = *(void *)(v26 + 16);
  if (!v27) {
    return 0xF000000000000007;
  }
  uint64_t v103 = v24;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v122 = v13;
  uint64_t v104 = v7;
  uint64_t v105 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
LABEL_45:
  }
    uint64_t v26 = (uint64_t)sub_100093520((void *)v26);
  unint64_t v29 = 0;
  *uint64_t v130 = v26;
  unint64_t v125 = (void (**)(char *, uint64_t, uint64_t))(v14 + 32);
  uint64_t v126 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  int v123 = (unsigned int (**)(uint64_t, uint64_t, long long *))(v20 + 6);
  uint64_t v124 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 7);
  uint64_t v26 = 56;
  uint64_t v14 = (char *)&qword_10070D708;
  uint64_t v30 = v119;
  uint64_t v121 = v27;
  uint64_t v31 = (uint64_t)v122;
  while (1)
  {
    if (v27 == v29)
    {
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    unsigned int v32 = v130;
    uint64_t v20 = (void *)*v130;
    char v33 = swift_isUniquelyReferenced_nonNull_native();
    *unsigned int v32 = v20;
    if ((v33 & 1) == 0)
    {
      uint64_t v20 = sub_100093520(v20);
      *uint64_t v130 = v20;
    }
    if (v29 >= v20[2]) {
      goto LABEL_44;
    }
    uint64_t v34 = (char *)v20 + v26;
    sub_1001E0268(v31);
    if ((*v126)(v31, 1, v30) == 1)
    {
      sub_100137CF8(v31, type metadata accessor for SegmentResequencer.PopResult);
      int v35 = *v124;
      uint64_t v36 = v127;
      uint64_t v37 = v127;
      uint64_t v38 = 1;
    }
    else
    {
      uint64_t v39 = v30;
      os_log_type_t v40 = *v125;
      (*v125)(v129, v31, v39);
      if (v34[29])
      {
        sub_10013668C((uint64_t)&v137);
        int v41 = &v137;
      }
      else
      {
        v34[29] = 1;
        sub_10001FDF0((uint64_t)v20 + v26 + 32, (uint64_t)v136, &qword_10070A8D8);
        sub_10001FDF0((uint64_t)v136, (uint64_t)&v137, &qword_10070A8D8);
        if (sub_10006196C((uint64_t)&v137) == 1
          || (sub_10013A988((uint64_t)&v137, (uint64_t)v139), sub_10013AE98((uint64_t)v139) == 1))
        {
          sub_10013E020((uint64_t)v139);
          uint64_t v42 = v139;
        }
        else
        {
          sub_10013AE3C((uint64_t)v139, (uint64_t)v131);
          UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v131);
          sub_10001FDF0((uint64_t)v136, (uint64_t)v133, &qword_10070A8D8);
          sub_10013AFD8((uint64_t)v133, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E2C0);
          uint64_t v42 = v131;
        }
        sub_10001FDF0((uint64_t)v42, (uint64_t)v135, &qword_10070D708);
        sub_10001FDF0((uint64_t)v135, (uint64_t)v153, &qword_10070D708);
        MessageSectionData.Segment.Initial.init(bodyStructure:)((uint64_t)v153, (uint64_t)v131);
        v133[8] = v131[8];
        v133[9] = v131[9];
        v133[10] = v131[10];
        char v134 = v132;
        v133[4] = v131[4];
        v133[5] = v131[5];
        v133[6] = v131[6];
        v133[7] = v131[7];
        v133[0] = v131[0];
        v133[1] = v131[1];
        v133[2] = v131[2];
        v133[3] = v131[3];
        UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v133);
        int v41 = v133;
      }
      sub_10001FDF0((uint64_t)v41, (uint64_t)v139, &qword_10070D740);
      sub_10001FDF0((uint64_t)v139, (uint64_t)v152, &qword_10070D740);
      uint64_t v43 = *(void *)((char *)v20 + v26 + 16);
      uint64_t v44 = *((unsigned __int8 *)v20 + v26 + 28);
      unint64_t v120 = v120 & 0xFFFFFF0000000000 | *(unsigned int *)((char *)v20 + v26 + 24) | (v44 << 32);
      uint64_t v45 = sub_1001E0DC8(v43, v120);
      BOOL v48 = !v44 && v47 == 2;
      BOOL v49 = v48 && (v45 | v46) == 0;
      char v50 = v49;
      uint64_t v52 = (uint64_t)v118;
      uint64_t v51 = v119;
      v40(v118, (uint64_t)v129, v119);
      uint64_t v30 = v51;
      uint64_t v36 = v127;
      MessageSectionData.Segment.init(data:isFinal:initial:)(v52, v50, (uint64_t)v152, v127);
      int v35 = *v124;
      uint64_t v37 = v36;
      uint64_t v38 = 0;
    }
    os_log_t v53 = (long long *)v128;
    v35(v37, v38, 1, v128);
    uint64_t v20 = (void *)*v130;
    if ((*v123)(v36, 1, v53) != 1) {
      break;
    }
    ++v29;
    sub_100007A48(v36, &qword_10070D738);
    v26 += 240;
    uint64_t v27 = v121;
    if (v121 == v29) {
      return 0xF000000000000007;
    }
  }
  uint64_t v55 = v36;
  uint64_t v56 = v117;
  sub_10013A920(v55, (uint64_t)v117, type metadata accessor for MessageSectionData.Segment);
  if (v29 >= v20[2])
  {
    __break(1u);
    goto LABEL_47;
  }
  os_log_t v53 = (long long *)((char *)v20 + v26 - 24);
  uint64_t v57 = *(void *)((char *)v20 + v26);
  uint64_t v31 = *v116;
  uint64_t v58 = (uint64_t)v56;
  uint64_t v56 = v108;
  sub_10013A8B8(v58, (uint64_t)v108, type metadata accessor for MessageSectionData.Segment);
  uint64_t v14 = v115;
  uint64_t v26 = v110;
  MessageSectionData.init(mailbox:message:section:segment:)(v110, v109, v31, v57, (uint64_t)v56, (uint64_t)v115);
  if (v29 >= v20[2])
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  LODWORD(v129) = v31;
  long long v59 = *v53;
  long long v60 = v53[2];
  v139[1] = v53[1];
  long long v140 = v60;
  v139[0] = v59;
  long long v61 = v53[3];
  long long v62 = v53[4];
  long long v63 = v53[6];
  long long v143 = v53[5];
  long long v144 = v63;
  long long v141 = v61;
  long long v142 = v62;
  long long v64 = v53[7];
  long long v65 = v53[8];
  long long v66 = v53[10];
  long long v147 = v53[9];
  long long v148 = v66;
  long long v145 = v64;
  long long v146 = v65;
  long long v67 = v53[11];
  long long v68 = v53[12];
  long long v69 = v53[13];
  *(_OWORD *)((char *)v151 + 9) = *(long long *)((char *)v53 + 217);
  long long v150 = v68;
  v151[0] = v69;
  long long v149 = v67;
  uint64_t v70 = *((void *)&v140 + 1);
  uint64_t v71 = v141;
  uint64_t v72 = BYTE4(v141);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_10013A9E4((uint64_t)v139);
  uint64_t v73 = sub_1001E0DC8(v70, v71 | (v72 << 32));
  uint64_t v75 = v74;
  char v77 = v76;
  sub_10013AB64((uint64_t)v139);
  uint64_t v26 = v112;
  if (!v72 && v77 == 2 && !(v73 | v75))
  {
    sub_1000EF660(v29, &v137);
    os_log_t v53 = v138;
    uint64_t v31 = *(int *)(v103 + 28);
    uint64_t v56 = *(void **)((char *)v116 + v31);
    swift_bridgeObjectRetain();
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_36:
      unint64_t v79 = v56[2];
      unint64_t v78 = v56[3];
      if (v79 >= v78 >> 1) {
        uint64_t v56 = sub_100017CC0((void *)(v78 > 1), v79 + 1, 1, v56);
      }
      v56[2] = v79 + 1;
      v56[v79 + 4] = v53;
      sub_10013AB64((uint64_t)&v137);
      *(void *)((char *)v116 + v31) = v56;
      goto LABEL_39;
    }
LABEL_48:
    uint64_t v56 = sub_100017CC0(0, v56[2] + 1, 1, v56);
    goto LABEL_36;
  }
LABEL_39:
  uint64_t v80 = v113;
  uint64_t v81 = v114;
  uint64_t v82 = v107;
  uint64_t v83 = v105;
  (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v113, v107, v105);
  sub_10013A8B8(v82, v26, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v84 = v111;
  sub_10013A8B8((uint64_t)v14, v111, type metadata accessor for MessageSectionData);
  swift_bridgeObjectRetain();
  uint64_t v85 = sub_1005E0EB0();
  os_log_type_t v86 = sub_1005E2590();
  int v87 = v86;
  if (os_log_type_enabled(v85, v86))
  {
    uint64_t v88 = swift_slowAlloc();
    uint64_t v130 = (void *)swift_slowAlloc();
    v136[0] = (uint64_t)v130;
    *(_DWORD *)uint64_t v88 = 68160003;
    LODWORD(v137) = 2;
    sub_1005E2960();
    *(_WORD *)(v88 + 8) = 256;
    uint64_t v89 = v26 + *(int *)(v106 + 20);
    LOBYTE(v137) = *(unsigned char *)v89;
    sub_1005E2960();
    *(_WORD *)(v88 + 11) = 2082;
    LODWORD(v128) = v87;
    uint64_t v91 = *(void *)(v89 + 8);
    unint64_t v90 = *(void *)(v89 + 16);
    swift_bridgeObjectRetain();
    *(void *)&long long v137 = sub_1000C6914(v91, v90, v136);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v88 + 21) = 1040;
    LODWORD(v137) = 2;
    sub_1005E2960();
    *(_WORD *)(v88 + 27) = 512;
    LOWORD(v137) = *(_WORD *)(v89 + 24);
    sub_1005E2960();
    *(_WORD *)(v88 + 31) = 2160;
    *(void *)&long long v137 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v88 + 41) = 2085;
    int v92 = *(_DWORD *)(v89 + 40);
    *(void *)&long long v137 = *(void *)(v89 + 32);
    DWORD2(v137) = v92;
    swift_bridgeObjectRetain();
    uint64_t v93 = sub_1005E1CC0();
    *(void *)&long long v137 = sub_1000C6914(v93, v94, v136);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100137CF8(v112, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v88 + 51) = 1024;
    LODWORD(v137) = v129;
    sub_1005E2960();
    *(_WORD *)(v88 + 57) = 2048;
    uint64_t v95 = v111;
    uint64_t v96 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
    sub_100137CF8(v95, type metadata accessor for MessageSectionData);
    *(void *)&long long v137 = v96;
    sub_1005E2960();
    *(_WORD *)(v88 + 67) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v97 = SectionSpecifier.Part.debugDescription.getter();
    unint64_t v99 = v98;
    swift_bridgeObjectRelease();
    *(void *)&long long v137 = sub_1000C6914(v97, v99, v136);
    uint64_t v14 = v115;
    sub_1005E2960();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v85, (os_log_type_t)v128, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: Forwarding %ld bytes for section '[%{public}s]' to the persistence.", (uint8_t *)v88, 0x4Du);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v114 + 8))(v113, v105);
  }
  else
  {
    sub_100137CF8(v84, type metadata accessor for MessageSectionData);
    swift_bridgeObjectRelease_n();

    sub_100137CF8(v26, type metadata accessor for MailboxTaskLogger);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v83);
  }
  sub_100137CF8((uint64_t)v117, type metadata accessor for MessageSectionData.Segment);
  uint64_t v100 = swift_allocBox();
  sub_10013A920((uint64_t)v14, v101, type metadata accessor for MessageSectionData);
  return v100 | 0x5000000000000002;
}

uint64_t sub_100133560(NSObject *a1, NSObject *a2)
{
  uint64_t v278 = a2;
  os_log_t v282 = a1;
  uint64_t v3 = sub_10000566C(&qword_10070A168);
  uint64_t v260 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  int v261 = (char *)&v252 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v266 = sub_1005E0AD0();
  uint64_t v265 = *(void *)(v266 - 8);
  uint64_t v5 = __chkstk_darwin(v266);
  uint64_t v271 = (char *)&v252 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v262 = (char *)&v252 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v264 = (char *)&v252 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v284 = (char *)&v252 - v12;
  __chkstk_darwin(v11);
  os_log_t v255 = (char *)&v252 - v13;
  uint64_t v14 = type metadata accessor for MessageData.BodySection();
  uint64_t v15 = v14 - 8;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v268 = (uint64_t)&v252 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v257 = (uint64_t)&v252 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v254 = (uint64_t)&v252 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  os_log_t v269 = (os_log_t)((char *)&v252 - v23);
  __chkstk_darwin(v22);
  os_log_t v270 = (os_log_t)((char *)&v252 - v24);
  uint64_t v272 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v25 = __chkstk_darwin(v272);
  uint64_t v274 = (uint64_t)&v252 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v258 = (int *)((char *)&v252 - v28);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v256 = (uint64_t)&v252 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v267 = (uint64_t)&v252 - v32;
  __chkstk_darwin(v31);
  uint64_t v263 = (uint64_t)&v252 - v33;
  uint64_t v280 = sub_1005E0ED0();
  uint64_t v283 = *(void *)(v280 - 8);
  uint64_t v34 = __chkstk_darwin(v280);
  int64_t v275 = (char *)&v252 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v259 = (char *)&v252 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v253 = (char *)&v252 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  v276 = (char *)&v252 - v41;
  __chkstk_darwin(v40);
  uint64_t v43 = (char *)&v252 - v42;
  uint64_t v44 = sub_10000566C(&qword_10070D720);
  __chkstk_darwin(v44 - 8);
  uint64_t v46 = (char *)&v252 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1005E17E0();
  uint64_t v279 = *(void *)(v47 - 8);
  uint64_t v48 = __chkstk_darwin(v47);
  char v50 = (char *)&v252 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __chkstk_darwin(v48);
  os_log_t v53 = (char *)&v252 - v52;
  uint64_t v54 = __chkstk_darwin(v51);
  uint64_t v56 = (char *)&v252 - v55;
  __chkstk_darwin(v54);
  uint64_t v281 = (char *)&v252 - v57;
  uint64_t v58 = v2;
  int v273 = *(_DWORD *)(v2 + 20);
  os_log_t v59 = v282;
  sub_1000079E4((uint64_t)v282 + *(int *)(v15 + 32), (uint64_t)v46, &qword_10070D720);
  uint64_t v60 = type metadata accessor for MessageData.BodyData();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48))(v46, 1, v60) == 1)
  {
    long long v61 = v271;
    uint64_t v62 = v283;
    sub_100007A48((uint64_t)v46, &qword_10070D720);
    uint64_t v63 = (uint64_t)v278;
    if (*(unsigned char *)(v58 + 52)) {
      goto LABEL_14;
    }
    uint64_t v64 = *(void *)(v58 + 40);
    long long v65 = (char *)*(unsigned int *)(v58 + 48);
    swift_bridgeObjectRetain();
    long long v66 = v61;
    sub_1005E0AC0();
    uint64_t v67 = *(void *)(v64 + 16);
    if (v67)
    {
      uint64_t v284 = v65;
      uint64_t v68 = v64 + ((*(unsigned __int8 *)(v260 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v260 + 80));
      uint64_t v69 = *(void *)(v260 + 72);
      swift_bridgeObjectRetain();
      uint64_t v70 = (unsigned int *)v261;
      while (1)
      {
        sub_1000079E4(v68, (uint64_t)v70, &qword_10070A168);
        uint64_t result = *v70;
        if (v70[1] < result) {
          break;
        }
        long long v66 = v61;
        sub_1005E0A80();
        sub_100007A48((uint64_t)v70, &qword_10070A168);
        v68 += v69;
        if (!--v67)
        {
          swift_bridgeObjectRelease();
          uint64_t v63 = (uint64_t)v278;
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      return result;
    }
LABEL_8:
    uint64_t v72 = v265;
    uint64_t v73 = v262;
    uint64_t v74 = v266;
    (*(void (**)(char *, char *, uint64_t))(v265 + 32))(v262, v66, v266);
    swift_bridgeObjectRelease();
    uint64_t v75 = v264;
    sub_1005E0A50();
    char v76 = sub_1005E0A70();
    char v77 = *(void (**)(char *, uint64_t))(v72 + 8);
    v77(v75, v74);
    v77(v73, v74);
    if ((v76 & 1) == 0)
    {
LABEL_14:
      uint64_t v146 = v62;
      long long v147 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
      long long v148 = v275;
      uint64_t v149 = v280;
      v147(v275, v63, v280);
      uint64_t v150 = v63;
      uint64_t v151 = v274;
      sub_10013A8B8(v150, v274, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v152 = v268;
      sub_10013A8B8((uint64_t)v282, v268, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      uint64_t v153 = sub_1005E0EB0();
      os_log_type_t v154 = sub_1005E25A0();
      int v155 = v154;
      if (os_log_type_enabled(v153, v154))
      {
        uint64_t v156 = swift_slowAlloc();
        os_log_t v282 = v153;
        uint64_t v157 = v156;
        uint64_t v284 = (char *)swift_slowAlloc();
        unint64_t v287 = v284;
        *(_DWORD *)uint64_t v157 = 68159747;
        LODWORD(v285) = 2;
        sub_1005E2960();
        *(_WORD *)(v157 + 8) = 256;
        uint64_t v158 = v151 + *(int *)(v272 + 20);
        LOBYTE(v285) = *(unsigned char *)v158;
        sub_1005E2960();
        *(_WORD *)(v157 + 11) = 2082;
        LODWORD(v281) = v155;
        uint64_t v159 = *(void *)(v158 + 8);
        unint64_t v160 = *(void *)(v158 + 16);
        swift_bridgeObjectRetain();
        uint64_t v285 = sub_1000C6914(v159, v160, (uint64_t *)&v287);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v157 + 21) = 1040;
        LODWORD(v285) = 2;
        sub_1005E2960();
        *(_WORD *)(v157 + 27) = 512;
        LOWORD(v285) = *(_WORD *)(v158 + 24);
        sub_1005E2960();
        *(_WORD *)(v157 + 31) = 2160;
        uint64_t v285 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v157 + 41) = 2085;
        int v161 = *(_DWORD *)(v158 + 40);
        uint64_t v285 = *(void *)(v158 + 32);
        int v286 = v161;
        swift_bridgeObjectRetain();
        uint64_t v162 = sub_1005E1CC0();
        uint64_t v285 = sub_1000C6914(v162, v163, (uint64_t *)&v287);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100137CF8(v274, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v157 + 51) = 1024;
        LODWORD(v285) = v273;
        sub_1005E2960();
        *(_WORD *)(v157 + 57) = 2082;
        uint64_t v164 = *(void *)v152;
        uint64_t v165 = *(void *)(v152 + 8);
        uint64_t v166 = *(unsigned __int8 *)(v152 + 16);
        swift_bridgeObjectRetain();
        sub_10013B5CC(v165, v166);
        uint64_t v167 = SectionSpecifier.debugDescription.getter(v164, v165, v166);
        unint64_t v169 = v168;
        swift_bridgeObjectRelease();
        sub_10013B5E0(v165, v166);
        uint64_t v285 = sub_1000C6914(v167, v169, (uint64_t *)&v287);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100137CF8(v152, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
        os_log_t v170 = v282;
        _os_log_impl((void *)&_mh_execute_header, v282, (os_log_type_t)v281, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: Received BodySection with NIL data for section '%{public}s'. Message may have been deleted.", (uint8_t *)v157, 0x43u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v283 + 8))(v275, v280);
      }
      else
      {
        sub_100137CF8(v151, type metadata accessor for MailboxTaskLogger);
        sub_100137CF8(v152, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);

        (*(void (**)(char *, uint64_t))(v146 + 8))(v148, v149);
      }
      sub_10013B658();
      swift_allocError();
      return swift_willThrow();
    }
    else
    {
      uint64_t v78 = v62;
      unint64_t v79 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
      uint64_t v80 = v259;
      uint64_t v81 = v280;
      v79(v259, v63, v280);
      uint64_t v82 = v63;
      uint64_t v83 = (uint64_t)v258;
      sub_10013A8B8(v82, (uint64_t)v258, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v84 = v257;
      sub_10013A8B8((uint64_t)v282, v257, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      uint64_t v85 = sub_1005E0EB0();
      os_log_type_t v86 = sub_1005E25C0();
      int v87 = v86;
      if (os_log_type_enabled(v85, v86))
      {
        uint64_t v88 = swift_slowAlloc();
        os_log_t v282 = v85;
        uint64_t v89 = v88;
        uint64_t v284 = (char *)swift_slowAlloc();
        unint64_t v287 = v284;
        *(_DWORD *)uint64_t v89 = 68159747;
        LODWORD(v285) = 2;
        sub_1005E2960();
        *(_WORD *)(v89 + 8) = 256;
        uint64_t v90 = v83 + *(int *)(v272 + 20);
        LOBYTE(v285) = *(unsigned char *)v90;
        sub_1005E2960();
        *(_WORD *)(v89 + 11) = 2082;
        LODWORD(v281) = v87;
        uint64_t v91 = *(void *)(v90 + 8);
        unint64_t v92 = *(void *)(v90 + 16);
        swift_bridgeObjectRetain();
        uint64_t v285 = sub_1000C6914(v91, v92, (uint64_t *)&v287);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v89 + 21) = 1040;
        LODWORD(v285) = 2;
        sub_1005E2960();
        *(_WORD *)(v89 + 27) = 512;
        LOWORD(v285) = *(_WORD *)(v90 + 24);
        sub_1005E2960();
        *(_WORD *)(v89 + 31) = 2160;
        uint64_t v285 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v89 + 41) = 2085;
        int v93 = *(_DWORD *)(v90 + 40);
        uint64_t v285 = *(void *)(v90 + 32);
        int v286 = v93;
        swift_bridgeObjectRetain();
        uint64_t v94 = sub_1005E1CC0();
        uint64_t v285 = sub_1000C6914(v94, v95, (uint64_t *)&v287);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100137CF8((uint64_t)v258, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v89 + 51) = 1024;
        LODWORD(v285) = v273;
        sub_1005E2960();
        *(_WORD *)(v89 + 57) = 2082;
        uint64_t v96 = *(void *)v84;
        uint64_t v97 = *(void *)(v84 + 8);
        uint64_t v98 = *(unsigned __int8 *)(v84 + 16);
        swift_bridgeObjectRetain();
        sub_10013B5CC(v97, v98);
        uint64_t v99 = SectionSpecifier.debugDescription.getter(v96, v97, v98);
        unint64_t v101 = v100;
        swift_bridgeObjectRelease();
        sub_10013B5E0(v97, v98);
        uint64_t v285 = sub_1000C6914(v99, v101, (uint64_t *)&v287);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100137CF8(v84, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
        os_log_t v102 = v282;
        _os_log_impl((void *)&_mh_execute_header, v282, (os_log_type_t)v281, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: Received BodySection with NIL data for section '%{public}s', but we already have all data. Ignoring.", (uint8_t *)v89, 0x43u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(char *, uint64_t))(v283 + 8))(v259, v280);
      }
      else
      {
        sub_100137CF8(v83, type metadata accessor for MailboxTaskLogger);
        sub_100137CF8(v84, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);

        return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v80, v81);
      }
    }
  }
  else
  {
    uint64_t v274 = v58;
    int64_t v275 = v53;
    uint64_t v271 = v50;
    uint64_t v103 = v276;
    uint64_t v104 = v279;
    uint64_t v105 = *(void (**)(char *, char *, uint64_t))(v279 + 16);
    v105(v56, v46, v47);
    sub_100137CF8((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
    (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v281, v56, v47);
    char isa = (char)v59[3].isa;
    uint64_t v107 = *(char **)(v283 + 16);
    uint64_t v108 = (uint64_t)v59;
    uint64_t v268 = v283 + 16;
    uint64_t v262 = v107;
    if (isa)
    {
      int v109 = v103;
      uint64_t v110 = v278;
      uint64_t v111 = v280;
      ((void (*)(char *, NSObject *, uint64_t))v107)(v103, v278, v280);
      uint64_t v112 = v105;
      uint64_t v113 = v267;
      sub_10013A8B8((uint64_t)v110, v267, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v114 = v271;
      v112(v271, v281, v47);
      os_log_t v115 = v269;
      sub_10013A8B8(v108, (uint64_t)v269, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      os_log_type_t v116 = sub_1005E0EB0();
      os_log_type_t v117 = sub_1005E2590();
      int v118 = v117;
      if (os_log_type_enabled(v116, v117))
      {
        uint64_t v119 = swift_slowAlloc();
        uint64_t v252 = v47;
        uint64_t v120 = v119;
        int64_t v275 = (char *)swift_slowAlloc();
        unint64_t v287 = v275;
        *(_DWORD *)uint64_t v120 = 68160003;
        LODWORD(v285) = 2;
        sub_1005E2960();
        *(_WORD *)(v120 + 8) = 256;
        uint64_t v121 = v113 + *(int *)(v272 + 20);
        LOBYTE(v285) = *(unsigned char *)v121;
        sub_1005E2960();
        *(_WORD *)(v120 + 11) = 2082;
        os_log_t v270 = v116;
        uint64_t v122 = *(void *)(v121 + 8);
        unint64_t v123 = *(void *)(v121 + 16);
        swift_bridgeObjectRetain();
        uint64_t v285 = sub_1000C6914(v122, v123, (uint64_t *)&v287);
        LODWORD(v263) = v118;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v120 + 21) = 1040;
        LODWORD(v285) = 2;
        sub_1005E2960();
        *(_WORD *)(v120 + 27) = 512;
        LOWORD(v285) = *(_WORD *)(v121 + 24);
        sub_1005E2960();
        *(_WORD *)(v120 + 31) = 2160;
        uint64_t v285 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v120 + 41) = 2085;
        int v124 = *(_DWORD *)(v121 + 40);
        uint64_t v285 = *(void *)(v121 + 32);
        int v286 = v124;
        swift_bridgeObjectRetain();
        uint64_t v125 = sub_1005E1CC0();
        uint64_t v285 = sub_1000C6914(v125, v126, (uint64_t *)&v287);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100137CF8(v267, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v120 + 51) = 1024;
        LODWORD(v285) = v273;
        sub_1005E2960();
        *(_WORD *)(v120 + 57) = 2048;
        uint64_t v127 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
        uint64_t v128 = *(void (**)(char *, uint64_t))(v279 + 8);
        v128(v114, v252);
        uint64_t v285 = v127;
        sub_1005E2960();
        *(_WORD *)(v120 + 67) = 2082;
        Class v129 = v269->isa;
        Class v130 = v269[1].isa;
        uint64_t isa_low = LOBYTE(v269[2].isa);
        swift_bridgeObjectRetain();
        sub_10013B5CC((uint64_t)v130, isa_low);
        uint64_t v132 = SectionSpecifier.debugDescription.getter((uint64_t)v129, (uint64_t)v130, isa_low);
        unint64_t v134 = v133;
        swift_bridgeObjectRelease();
        uint64_t v135 = (uint64_t)v130;
        unsigned __int8 v136 = isa_low;
        long long v137 = v128;
        uint64_t v138 = v278;
        sub_10013B5E0(v135, v136);
        uint64_t v285 = sub_1000C6914(v132, v134, (uint64_t *)&v287);
        uint64_t v139 = v283;
        uint64_t v140 = v280;
        sub_1005E2960();
        uint64_t v110 = v138;
        swift_bridgeObjectRelease();
        sub_100137CF8((uint64_t)v269, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
        os_log_t v141 = v270;
        _os_log_impl((void *)&_mh_execute_header, v270, (os_log_type_t)v263, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: Received %ld bytes for section '%{public}s'", (uint8_t *)v120, 0x4Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v47 = v252;
        swift_slowDealloc();

        long long v142 = *(char **)(v139 + 8);
        long long v143 = v276;
        uint64_t v144 = v140;
        uint64_t v145 = v140;
      }
      else
      {
        uint64_t v207 = (uint64_t)v115;
        uint64_t v208 = v109;
        uint64_t v209 = v113;
        long long v137 = *(void (**)(char *, uint64_t))(v279 + 8);
        v137(v114, v47);
        sub_100137CF8(v209, type metadata accessor for MailboxTaskLogger);
        sub_100137CF8(v207, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);

        long long v142 = *(char **)(v283 + 8);
        long long v143 = v208;
        uint64_t v144 = v111;
        uint64_t v145 = v111;
      }
      int64_t v275 = v142;
      ((void (*)(char *, uint64_t))v142)(v143, v145);
      unsigned int v210 = 0;
      uint64_t v211 = v277;
      uint64_t v212 = v281;
      uint64_t v213 = v274;
    }
    else
    {
      LODWORD(v276) = HIDWORD(v59[2].isa);
      uint64_t v171 = (uint64_t)v43;
      uint64_t v172 = v47;
      uint64_t v173 = v108;
      uint64_t v110 = v278;
      uint64_t v174 = v280;
      ((void (*)(char *, NSObject *, uint64_t))v107)(v43, v278, v280);
      uint64_t v175 = v263;
      sub_10013A8B8((uint64_t)v110, v263, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v252 = v172;
      v105(v275, v281, v172);
      os_log_t v176 = v270;
      sub_10013A8B8(v173, (uint64_t)v270, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      int v177 = sub_1005E0EB0();
      os_log_type_t v178 = sub_1005E2590();
      int v179 = v178;
      if (os_log_type_enabled(v177, v178))
      {
        uint64_t v180 = swift_slowAlloc();
        os_log_t v269 = v177;
        uint64_t v181 = v180;
        uint64_t v271 = (char *)swift_slowAlloc();
        unint64_t v287 = v271;
        *(_DWORD *)uint64_t v181 = 68160259;
        LODWORD(v285) = 2;
        sub_1005E2960();
        *(_WORD *)(v181 + 8) = 256;
        uint64_t v182 = v175;
        uint64_t v183 = v175 + *(int *)(v272 + 20);
        LOBYTE(v285) = *(unsigned char *)v183;
        sub_1005E2960();
        *(_WORD *)(v181 + 11) = 2082;
        uint64_t v184 = *(void *)(v183 + 8);
        unint64_t v185 = *(void *)(v183 + 16);
        swift_bridgeObjectRetain();
        uint64_t v285 = sub_1000C6914(v184, v185, (uint64_t *)&v287);
        uint64_t v267 = v171;
        LODWORD(v259) = v179;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v181 + 21) = 1040;
        LODWORD(v285) = 2;
        sub_1005E2960();
        *(_WORD *)(v181 + 27) = 512;
        LOWORD(v285) = *(_WORD *)(v183 + 24);
        sub_1005E2960();
        *(_WORD *)(v181 + 31) = 2160;
        uint64_t v285 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v181 + 41) = 2085;
        int v186 = *(_DWORD *)(v183 + 40);
        uint64_t v285 = *(void *)(v183 + 32);
        int v286 = v186;
        swift_bridgeObjectRetain();
        uint64_t v187 = sub_1005E1CC0();
        uint64_t v285 = sub_1000C6914(v187, v188, (uint64_t *)&v287);
        uint64_t v258 = &v286;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100137CF8(v182, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v181 + 51) = 1024;
        LODWORD(v285) = v273;
        sub_1005E2960();
        *(_WORD *)(v181 + 57) = 2048;
        long long v189 = v275;
        uint64_t v190 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
        long long v191 = *(void (**)(char *, uint64_t))(v279 + 8);
        uint64_t v192 = v252;
        v191(v189, v252);
        uint64_t v285 = v190;
        sub_1005E2960();
        *(_WORD *)(v181 + 67) = 1024;
        LODWORD(v285) = v276;
        sub_1005E2960();
        *(_WORD *)(v181 + 73) = 2082;
        Class v193 = v270->isa;
        Class v194 = v270[1].isa;
        uint64_t v195 = LOBYTE(v270[2].isa);
        swift_bridgeObjectRetain();
        sub_10013B5CC((uint64_t)v194, v195);
        uint64_t v196 = SectionSpecifier.debugDescription.getter((uint64_t)v193, (uint64_t)v194, v195);
        unint64_t v198 = v197;
        swift_bridgeObjectRelease();
        uint64_t v199 = (uint64_t)v194;
        uint64_t v47 = v192;
        unsigned __int8 v200 = v195;
        long long v137 = v191;
        uint64_t v110 = v278;
        sub_10013B5E0(v199, v200);
        uint64_t v285 = sub_1000C6914(v196, v198, (uint64_t *)&v287);
        uint64_t v201 = v283;
        uint64_t v202 = v280;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100137CF8((uint64_t)v270, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
        os_log_t v203 = v269;
        _os_log_impl((void *)&_mh_execute_header, v269, (os_log_type_t)v259, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: Received %ld bytes (offset %u) for section '%{public}s'", (uint8_t *)v181, 0x53u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        long long v204 = *(char **)(v201 + 8);
        uint64_t v205 = v267;
        uint64_t v144 = v202;
        uint64_t v206 = v202;
      }
      else
      {
        long long v137 = *(void (**)(char *, uint64_t))(v279 + 8);
        uint64_t v47 = v252;
        v137(v275, v252);
        sub_100137CF8(v175, type metadata accessor for MailboxTaskLogger);
        sub_100137CF8((uint64_t)v176, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);

        long long v204 = *(char **)(v283 + 8);
        uint64_t v205 = (uint64_t)v43;
        uint64_t v144 = v174;
        uint64_t v206 = v174;
      }
      int64_t v275 = v204;
      ((void (*)(uint64_t, uint64_t))v204)(v205, v206);
      uint64_t v211 = v277;
      uint64_t v212 = v281;
      uint64_t v213 = v274;
      unsigned int v210 = v276;
    }
    sub_1001DE9AC((void (*)(void, void, void))v212, v210, v110);
    uint64_t v214 = v211;
    if (v211 || *(unsigned char *)(v213 + 52)) {
      return ((uint64_t (*)(char *, uint64_t))v137)(v212, v47);
    }
    v276 = (char *)v137;
    uint64_t v252 = v47;
    uint64_t v215 = *(void *)(v213 + 40);
    swift_bridgeObjectRetain();
    int v216 = v284;
    sub_1005E0AC0();
    uint64_t v217 = *(void *)(v215 + 16);
    if (v217)
    {
      uint64_t v277 = 0;
      uint64_t v218 = v215 + ((*(unsigned __int8 *)(v260 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v260 + 80));
      uint64_t v219 = *(void *)(v260 + 72);
      swift_bridgeObjectRetain();
      uint64_t v220 = (unsigned int *)v261;
      while (1)
      {
        sub_1000079E4(v218, (uint64_t)v220, &qword_10070A168);
        uint64_t result = *v220;
        if (v220[1] < result) {
          goto LABEL_38;
        }
        sub_1005E0A80();
        int v216 = v284;
        sub_100007A48((uint64_t)v220, &qword_10070A168);
        v218 += v219;
        if (!--v217)
        {
          swift_bridgeObjectRelease();
          uint64_t v144 = v280;
          uint64_t v212 = v281;
          uint64_t v214 = v277;
          break;
        }
      }
    }
    uint64_t v221 = v265;
    uint64_t v222 = v255;
    uint64_t v223 = v266;
    (*(void (**)(char *, char *, uint64_t))(v265 + 32))(v255, v216, v266);
    swift_bridgeObjectRelease();
    uint64_t v224 = v264;
    sub_1005E0A50();
    char v225 = sub_1005E0A70();
    uint64_t v226 = *(void (**)(char *, uint64_t))(v221 + 8);
    v226(v224, v223);
    v226(v222, v223);
    os_log_t v227 = v282;
    uint64_t v228 = (uint64_t)v278;
    uint64_t v47 = v252;
    long long v137 = (void (*)(char *, uint64_t))v276;
    if ((v225 & 1) == 0) {
      return ((uint64_t (*)(char *, uint64_t))v137)(v212, v47);
    }
    uint64_t v229 = v253;
    uint64_t v230 = v144;
    ((void (*)(char *, NSObject *, uint64_t))v262)(v253, v278, v144);
    sub_10013A8B8(v228, v256, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v231 = v254;
    sub_10013A8B8((uint64_t)v227, v254, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
    uint64_t v232 = sub_1005E0EB0();
    os_log_type_t v233 = sub_1005E2590();
    int v234 = v233;
    if (os_log_type_enabled(v232, v233))
    {
      uint64_t v235 = swift_slowAlloc();
      os_log_t v282 = v232;
      uint64_t v236 = v235;
      uint64_t v284 = (char *)swift_slowAlloc();
      unint64_t v287 = v284;
      *(_DWORD *)uint64_t v236 = 68159747;
      LODWORD(v285) = 2;
      uint64_t v277 = v214;
      sub_1005E2960();
      *(_WORD *)(v236 + 8) = 256;
      uint64_t v237 = v256;
      uint64_t v238 = v256 + *(int *)(v272 + 20);
      LOBYTE(v285) = *(unsigned char *)v238;
      sub_1005E2960();
      *(_WORD *)(v236 + 11) = 2082;
      LODWORD(v278) = v234;
      uint64_t v239 = *(void *)(v238 + 8);
      unint64_t v240 = *(void *)(v238 + 16);
      swift_bridgeObjectRetain();
      uint64_t v285 = sub_1000C6914(v239, v240, (uint64_t *)&v287);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v236 + 21) = 1040;
      LODWORD(v285) = 2;
      sub_1005E2960();
      *(_WORD *)(v236 + 27) = 512;
      LOWORD(v285) = *(_WORD *)(v238 + 24);
      sub_1005E2960();
      *(_WORD *)(v236 + 31) = 2160;
      uint64_t v285 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v236 + 41) = 2085;
      int v241 = *(_DWORD *)(v238 + 40);
      uint64_t v285 = *(void *)(v238 + 32);
      int v286 = v241;
      swift_bridgeObjectRetain();
      uint64_t v242 = sub_1005E1CC0();
      uint64_t v285 = sub_1000C6914(v242, v243, (uint64_t *)&v287);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100137CF8(v237, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v236 + 51) = 1024;
      LODWORD(v285) = v273;
      sub_1005E2960();
      *(_WORD *)(v236 + 57) = 2082;
      uint64_t v244 = v254;
      uint64_t v245 = *(void *)v254;
      uint64_t v246 = *(void *)(v254 + 8);
      uint64_t v247 = *(unsigned __int8 *)(v254 + 16);
      swift_bridgeObjectRetain();
      sub_10013B5CC(v246, v247);
      uint64_t v248 = SectionSpecifier.debugDescription.getter(v245, v246, v247);
      unint64_t v250 = v249;
      swift_bridgeObjectRelease();
      sub_10013B5E0(v246, v247);
      uint64_t v285 = sub_1000C6914(v248, v250, (uint64_t *)&v287);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100137CF8(v244, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      os_log_t v251 = v282;
      _os_log_impl((void *)&_mh_execute_header, v282, (os_log_type_t)v278, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] UID %u: All data for section '%{public}s' has been received.", (uint8_t *)v236, 0x43u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v283 + 8))(v253, v280);
      return (*(uint64_t (**)(char *, uint64_t))(v279 + 8))(v281, v252);
    }
    else
    {

      sub_100137CF8(v231, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      sub_100137CF8(v256, type metadata accessor for MailboxTaskLogger);
      ((void (*)(char *, uint64_t))v275)(v229, v230);
      return ((uint64_t (*)(char *, uint64_t))v276)(v212, v47);
    }
  }
}

uint64_t sub_100135684(uint64_t a1)
{
  unint64_t v2 = v1;
  sub_1001359F8((long long *)(v1 + 8), (uint64_t)v14);
  sub_1001359F8(v14, (uint64_t)v16);
  if (sub_10006196C((uint64_t)v16) == 1) {
    goto LABEL_5;
  }
  sub_10013A988((uint64_t)v16, (uint64_t)v10);
  sub_10013A988((uint64_t)v10, (uint64_t)v11);
  if (sub_10013AE98((uint64_t)v11) == 1) {
    goto LABEL_5;
  }
  sub_10013AE3C((uint64_t)v11, (uint64_t)v15);
  sub_10013A988((uint64_t)v10, (uint64_t)v9);
  sub_10013AF38((uint64_t)v9, sub_100136870);
  BodyStructure.subscript.getter(a1, (uint64_t)v12);
  sub_10013ADBC(v1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
  sub_10013AE3C((uint64_t)v12, (uint64_t)v13);
  int v4 = sub_10013AEAC((uint64_t)v13);
  uint64_t v5 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v13);
  if (v4 == 1)
  {
    sub_10013AF38((uint64_t)v12, sub_100061440);
LABEL_5:
    LODWORD(v2) = *(_DWORD *)(v2 + 4);
    goto LABEL_6;
  }
  unint64_t v2 = *(void *)(v5 + 80);
  sub_10013AF38((uint64_t)v12, sub_100061440);
  if ((v2 & 0x8000000000000000) != 0 || HIDWORD(v2)) {
    goto LABEL_20;
  }
LABEL_6:
  double v6 = (double)v2 * 1.25;
  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v6 <= -1.0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v6 >= 4294967300.0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  unsigned int v7 = v2 + 0x4000;
  if (v2 >= 0xFFFFC000)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t result = sub_1005E2F10();
    __break(1u);
    return result;
  }
  if (v7 <= v6) {
    return v6;
  }
  else {
    return v7;
  }
}

uint64_t sub_1001358BC()
{
  uint64_t v1 = v0;
  sub_10013AE3C(v0, (uint64_t)v12);
  int v2 = sub_10013AEAC((uint64_t)v12);
  uint64_t v3 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v12);
  if (v2 != 1) {
    return v3[10];
  }
  uint64_t v4 = *v3;
  uint64_t v13 = v4;
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return 0;
  }
  uint64_t v6 = v4 + 32;
  sub_10002292C((uint64_t)&v13);
  sub_10013AF38(v1, sub_100136870);
  uint64_t v7 = 0;
  while (1)
  {
    sub_10013AE3C(v6, (uint64_t)v14);
    uint64_t v8 = sub_10013AF38((uint64_t)v14, sub_100136870);
    uint64_t v9 = sub_1001358BC(v8);
    uint64_t result = sub_10013AF38((uint64_t)v14, sub_100061440);
    BOOL v11 = __OFADD__(v7, v9);
    v7 += v9;
    if (v11) {
      break;
    }
    v6 += 184;
    if (!--v5)
    {
      sub_10013AF38(v1, sub_100061440);
      sub_10001D550((uint64_t)&v13);
      return v7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1001359F8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[3];
  *(_OWORD *)(a2 + 32) = a1[2];
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  long long v5 = a1[4];
  long long v6 = a1[5];
  long long v7 = a1[7];
  *(_OWORD *)(a2 + 96) = a1[6];
  *(_OWORD *)(a2 + 112) = v7;
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 80) = v6;
  long long v8 = a1[8];
  long long v9 = a1[9];
  long long v10 = a1[10];
  *(unsigned char *)(a2 + 176) = *((unsigned char *)a1 + 176);
  *(_OWORD *)(a2 + 144) = v9;
  *(_OWORD *)(a2 + 160) = v10;
  *(_OWORD *)(a2 + 128) = v8;
  return a2;
}

uint64_t _s25MessageSectionsToDownloadVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070D588);
}

Swift::Int sub_100135A58(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1005E3210(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v92 = *a1;
      uint64_t v93 = *a1 + 24;
      uint64_t v94 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v96 = v94;
        uint64_t v97 = v93;
        do
        {
          int v98 = *(_DWORD *)v97;
          if (*(_DWORD *)(v97 - 24) >= *(_DWORD *)v97) {
            break;
          }
          if (!v92) {
            goto LABEL_141;
          }
          uint64_t v99 = *(void *)(v97 + 8);
          char v100 = *(unsigned char *)(v97 + 16);
          char v101 = *(unsigned char *)(v97 + 17);
          *(_OWORD *)uint64_t v97 = *(_OWORD *)(v97 - 24);
          *(void *)(v97 + 16) = *(void *)(v97 - 8);
          *(void *)(v97 - 16) = v99;
          *(unsigned char *)(v97 - 8) = v100;
          *(unsigned char *)(v97 - 7) = v101;
          *(_DWORD *)(v97 - 24) = v98;
          v97 -= 24;
        }
        while (!__CFADD__(v96++, 1));
        v93 += 24;
        --v94;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  Swift::Int v6 = result;
  uint64_t v119 = v1;
  uint64_t v112 = a1;
  if (v3 < 2)
  {
    long long v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      uint64_t v12 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      uint64_t v103 = v12;
      uint64_t v114 = v9;
      if (v13 >= 2)
      {
        uint64_t v104 = *v112;
        do
        {
          unint64_t v105 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v104) {
            goto LABEL_145;
          }
          uint64_t v106 = v103;
          uint64_t v107 = *(void *)&v103[16 * v105 + 32];
          uint64_t v108 = *(void *)&v103[16 * v13 + 24];
          sub_1001361A0((char *)(v104 + 24 * v107), (char *)(v104 + 24 * *(void *)&v103[16 * v13 + 16]), v104 + 24 * v108, __dst);
          if (v119) {
            break;
          }
          if (v108 < v107) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v106 = sub_1000A6DE0((uint64_t)v106);
          }
          if (v105 >= *((void *)v106 + 2)) {
            goto LABEL_134;
          }
          int v109 = &v106[16 * v105 + 32];
          *(void *)int v109 = v107;
          *((void *)v109 + 1) = v108;
          unint64_t v110 = *((void *)v106 + 2);
          if (v13 > v110) {
            goto LABEL_135;
          }
          memmove(&v106[16 * v13 + 16], &v106[16 * v13 + 32], 16 * (v110 - v13));
          uint64_t v103 = v106;
          *((void *)v106 + 2) = v110 - 1;
          unint64_t v13 = v110 - 1;
        }
        while (v110 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v114[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v114 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    sub_10000566C(&qword_10070D528);
    uint64_t v8 = sub_1005E2150();
    *(void *)(v8 + 16) = v7;
    uint64_t v114 = (void *)v8;
    __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v113 = *a1 + 24;
  uint64_t v111 = *a1 - 24;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v115 = v6;
  Swift::Int v116 = v3;
  uint64_t v117 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      unsigned int v15 = *(_DWORD *)(v11 + 24 * v10);
      unsigned int v16 = *(_DWORD *)(v11 + 24 * v14);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v17 = (unsigned int *)(v113 + 24 * v14);
        uint64_t v18 = v17;
        while (1)
        {
          unsigned int v19 = v18[6];
          v18 += 6;
          if (v16 < v15 == *v17 >= v19) {
            break;
          }
          ++v10;
          uint64_t v17 = v18;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 24 * v10;
          uint64_t v21 = 24 * v14;
          Swift::Int v22 = v10;
          Swift::Int v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v21;
              int v25 = *(_DWORD *)(v11 + v21);
              uint64_t v26 = v11 + v20;
              uint64_t v27 = *(void *)(v11 + v21 + 8);
              char v28 = *(unsigned char *)(v11 + v21 + 16);
              char v29 = *(unsigned char *)(v11 + v21 + 17);
              uint64_t v30 = *(void *)(v11 + v20 - 8);
              *(_OWORD *)uint64_t v24 = *(_OWORD *)(v11 + v20 - 24);
              *(void *)(v24 + 16) = v30;
              *(_DWORD *)(v26 - 24) = v25;
              *(void *)(v26 - 16) = v27;
              *(unsigned char *)(v26 - 8) = v28;
              *(unsigned char *)(v26 - 7) = v29;
            }
            ++v23;
            v20 -= 24;
            v21 += 24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v31 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v31 >= v3) {
      Swift::Int v31 = v3;
    }
    if (v31 < v14) {
      break;
    }
    if (v10 != v31)
    {
      uint64_t v32 = v111 + 24 * v10;
      do
      {
        Swift::Int v33 = v14;
        uint64_t v34 = v32;
        do
        {
          uint64_t v35 = v34 + 24;
          unsigned int v36 = *(_DWORD *)(v34 + 24);
          if (*(_DWORD *)v34 >= v36) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          uint64_t v37 = *(void *)(v34 + 32);
          char v38 = *(unsigned char *)(v34 + 40);
          char v39 = *(unsigned char *)(v34 + 41);
          *(_OWORD *)uint64_t v35 = *(_OWORD *)v34;
          uint64_t v40 = *(void *)(v34 + 16);
          *(_DWORD *)uint64_t v34 = v36;
          *(void *)(v34 + 8) = v37;
          *(unsigned char *)(v34 + 16) = v38;
          *(unsigned char *)(v34 + 17) = v39;
          v34 -= 24;
          ++v33;
          *(void *)(v35 + 16) = v40;
        }
        while (v10 != v33);
        ++v10;
        v32 += 24;
      }
      while (v10 != v31);
      Swift::Int v10 = v31;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1000A66A4(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v42 = *((void *)v12 + 2);
    unint64_t v41 = *((void *)v12 + 3);
    unint64_t v13 = v42 + 1;
    uint64_t v11 = v117;
    if (v42 >= v41 >> 1)
    {
      uint64_t v91 = sub_1000A66A4((char *)(v41 > 1), v42 + 1, 1, v12);
      uint64_t v11 = v117;
      uint64_t v12 = v91;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v43 = v12 + 32;
    uint64_t v44 = &v12[16 * v42 + 32];
    *(void *)uint64_t v44 = v14;
    *((void *)v44 + 1) = v10;
    if (v42)
    {
      while (1)
      {
        unint64_t v45 = v13 - 1;
        if (v13 >= 4)
        {
          char v50 = &v43[16 * v13];
          uint64_t v51 = *((void *)v50 - 8);
          uint64_t v52 = *((void *)v50 - 7);
          BOOL v56 = __OFSUB__(v52, v51);
          uint64_t v53 = v52 - v51;
          if (v56) {
            goto LABEL_120;
          }
          uint64_t v55 = *((void *)v50 - 6);
          uint64_t v54 = *((void *)v50 - 5);
          BOOL v56 = __OFSUB__(v54, v55);
          uint64_t v48 = v54 - v55;
          char v49 = v56;
          if (v56) {
            goto LABEL_121;
          }
          unint64_t v57 = v13 - 2;
          uint64_t v58 = &v43[16 * v13 - 32];
          uint64_t v60 = *(void *)v58;
          uint64_t v59 = *((void *)v58 + 1);
          BOOL v56 = __OFSUB__(v59, v60);
          uint64_t v61 = v59 - v60;
          if (v56) {
            goto LABEL_123;
          }
          BOOL v56 = __OFADD__(v48, v61);
          uint64_t v62 = v48 + v61;
          if (v56) {
            goto LABEL_126;
          }
          if (v62 >= v53)
          {
            uint64_t v80 = &v43[16 * v45];
            uint64_t v82 = *(void *)v80;
            uint64_t v81 = *((void *)v80 + 1);
            BOOL v56 = __OFSUB__(v81, v82);
            uint64_t v83 = v81 - v82;
            if (v56) {
              goto LABEL_130;
            }
            BOOL v73 = v48 < v83;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v74 = *((void *)v12 + 4);
            uint64_t v75 = *((void *)v12 + 5);
            BOOL v56 = __OFSUB__(v75, v74);
            uint64_t v67 = v75 - v74;
            char v68 = v56;
            goto LABEL_77;
          }
          uint64_t v47 = *((void *)v12 + 4);
          uint64_t v46 = *((void *)v12 + 5);
          BOOL v56 = __OFSUB__(v46, v47);
          uint64_t v48 = v46 - v47;
          char v49 = v56;
        }
        if (v49) {
          goto LABEL_122;
        }
        unint64_t v57 = v13 - 2;
        uint64_t v63 = &v43[16 * v13 - 32];
        uint64_t v65 = *(void *)v63;
        uint64_t v64 = *((void *)v63 + 1);
        BOOL v66 = __OFSUB__(v64, v65);
        uint64_t v67 = v64 - v65;
        char v68 = v66;
        if (v66) {
          goto LABEL_125;
        }
        uint64_t v69 = &v43[16 * v45];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v56 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v56) {
          goto LABEL_128;
        }
        if (__OFADD__(v67, v72)) {
          goto LABEL_129;
        }
        if (v67 + v72 >= v48)
        {
          BOOL v73 = v48 < v72;
LABEL_83:
          if (v73) {
            unint64_t v45 = v57;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v68) {
          goto LABEL_124;
        }
        char v76 = &v43[16 * v45];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v56 = __OFSUB__(v77, v78);
        uint64_t v79 = v77 - v78;
        if (v56) {
          goto LABEL_127;
        }
        if (v79 < v67) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v84 = v45 - 1;
        if (v45 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v85 = v12;
        os_log_type_t v86 = &v43[16 * v84];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = &v43[16 * v45];
        uint64_t v89 = *((void *)v88 + 1);
        sub_1001361A0((char *)(v11 + 24 * *(void *)v86), (char *)(v11 + 24 * *(void *)v88), v11 + 24 * v89, __dst);
        if (v119) {
          goto LABEL_93;
        }
        if (v89 < v87) {
          goto LABEL_117;
        }
        if (v45 > *((void *)v85 + 2)) {
          goto LABEL_118;
        }
        *(void *)os_log_type_t v86 = v87;
        *(void *)&v43[16 * v84 + 8] = v89;
        unint64_t v90 = *((void *)v85 + 2);
        if (v45 >= v90) {
          goto LABEL_119;
        }
        uint64_t v12 = v85;
        unint64_t v13 = v90 - 1;
        memmove(&v43[16 * v45], v88 + 16, 16 * (v90 - 1 - v45));
        *((void *)v85 + 2) = v90 - 1;
        uint64_t v11 = v117;
        if (v90 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v115;
    Swift::Int v3 = v116;
    if (v10 >= v116)
    {
      long long v9 = v114;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_1001361A0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  long long v4 = __dst;
  Swift::Int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v27 = __dst;
  char v28 = __src;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      uint64_t v17 = 24 * v11;
      if (__dst != a2 || &a2[v17] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      uint64_t v18 = &v4[v17];
      uint64_t v26 = &v4[v17];
      char v28 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        unint64_t v19 = a3 - 24;
        uint64_t v20 = v6;
        while (1)
        {
          uint64_t v21 = (char *)(v19 + 24);
          unsigned int v22 = *((_DWORD *)v20 - 6);
          v20 -= 24;
          if (v22 >= *((_DWORD *)v18 - 6))
          {
            uint64_t v26 = v18 - 24;
            if (v21 < v18 || v19 >= (unint64_t)v18 || v21 != v18)
            {
              long long v24 = *(_OWORD *)(v18 - 24);
              *(void *)(v19 + 16) = *((void *)v18 - 1);
              *(_OWORD *)unint64_t v19 = v24;
            }
            uint64_t v20 = v6;
            v18 -= 24;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v21 != v6 || v19 >= (unint64_t)v6)
            {
              long long v23 = *(_OWORD *)v20;
              *(void *)(v19 + 16) = *((void *)v20 + 2);
              *(_OWORD *)unint64_t v19 = v23;
            }
            char v28 = v20;
            if (v20 <= v7) {
              goto LABEL_38;
            }
          }
          v19 -= 24;
          Swift::Int v6 = v20;
          if (v18 <= v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -23)
  {
    size_t v12 = 24 * v9;
    if (__dst != __src || &__src[v12] <= __dst) {
      memmove(__dst, __src, v12);
    }
    unint64_t v13 = &v4[v12];
    uint64_t v26 = &v4[v12];
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      do
      {
        if (*(_DWORD *)v4 >= *(_DWORD *)v6)
        {
          if (v7 != v4)
          {
            long long v16 = *(_OWORD *)v4;
            *((void *)v7 + 2) = *((void *)v4 + 2);
            *(_OWORD *)uint64_t v7 = v16;
          }
          v4 += 24;
          uint64_t v27 = v4;
          Swift::Int v14 = v6;
        }
        else
        {
          Swift::Int v14 = v6 + 24;
          if (v7 < v6 || v7 >= v14 || v7 != v6)
          {
            long long v15 = *(_OWORD *)v6;
            *((void *)v7 + 2) = *((void *)v6 + 2);
            *(_OWORD *)uint64_t v7 = v15;
          }
        }
        v7 += 24;
        if (v4 >= v13) {
          break;
        }
        Swift::Int v6 = v14;
      }
      while ((unint64_t)v14 < a3);
      char v28 = v7;
    }
LABEL_38:
    sub_1000A685C(&v28, &v27, &v26);
    return 1;
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100136444(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1000A5B28(v2, 0);
  sub_10001A694(0, v2, 0);
  uint64_t v21 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v8 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v7 << 6))
  {
    Swift::UInt32 v13 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * i);
    uint64_t v14 = *(void *)(a1 + 56) + 16 * i;
    uint64_t v15 = *(void *)v14;
    char v16 = *(unsigned char *)(v14 + 8);
    char v17 = *(unsigned char *)(v14 + 9);
    uint64_t result = sub_1001366B4(v13);
    unint64_t v19 = _swiftEmptyArrayStorage[2];
    unint64_t v18 = _swiftEmptyArrayStorage[3];
    if (v19 >= v18 >> 1) {
      uint64_t result = sub_10001A694(v18 > 1, v19 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v19 + 1;
    uint64_t v20 = &_swiftEmptyArrayStorage[2 * v19];
    v20[4] = v15;
    *((unsigned char *)v20 + 40) = v16;
    *((unsigned char *)v20 + 41) = v17;
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v10 >= v22) {
      goto LABEL_25;
    }
    unint64_t v11 = *(void *)(v21 + 8 * v10);
    ++v7;
    if (!v11)
    {
      int64_t v7 = v10 + 1;
      if (v10 + 1 >= v22) {
        goto LABEL_25;
      }
      unint64_t v11 = *(void *)(v21 + 8 * v7);
      if (!v11)
      {
        int64_t v7 = v10 + 2;
        if (v10 + 2 >= v22) {
          goto LABEL_25;
        }
        unint64_t v11 = *(void *)(v21 + 8 * v7);
        if (!v11)
        {
          int64_t v7 = v10 + 3;
          if (v10 + 3 >= v22) {
            goto LABEL_25;
          }
          unint64_t v11 = *(void *)(v21 + 8 * v7);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v11 - 1) & v11;
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v22)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    swift_release();
    return 0;
  }
  unint64_t v11 = *(void *)(v21 + 8 * v12);
  if (v11)
  {
    int64_t v7 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v22) {
      goto LABEL_25;
    }
    unint64_t v11 = *(void *)(v21 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

double sub_10013668C(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 176) = -2;
  return result;
}

uint64_t sub_1001366B4(Swift::UInt32 a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + 1;
  uint64_t v5 = v1[1];
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = v5;
  if ((result & 1) == 0)
  {
    uint64_t result = sub_10001A5B4(0, *(void *)(v5 + 16) + 1, 1);
    uint64_t v5 = *v4;
  }
  unint64_t v8 = *(void *)(v5 + 16);
  unint64_t v7 = *(void *)(v5 + 24);
  if (v8 >= v7 >> 1)
  {
    uint64_t result = sub_10001A5B4(v7 > 1, v8 + 1, 1);
    uint64_t v5 = *v4;
  }
  *(void *)(v5 + 16) = v8 + 1;
  *(_DWORD *)(v5 + 4 * v8 + 32) = a1;
  v2[1] = v5;
  if (!*v2)
  {
    if (v8 < 0xF) {
      return result;
    }
    return sub_1000A4078();
  }
  swift_beginAccess();
  if (sub_1005E0BA0() <= (uint64_t)v8) {
    return sub_1000A4078();
  }
  uint64_t result = swift_isUniquelyReferenced_native();
  uint64_t v9 = *v2;
  if (!result)
  {
    if (!v9)
    {
LABEL_20:
      __break(1u);
      return result;
    }
    uint64_t v9 = sub_1005E0BC0();
    uint64_t result = swift_release();
    *uint64_t v2 = v9;
  }
  if (!v9)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_1005E33F0();
  sub_1005E3440(a1);
  uint64_t result = sub_1005E3470();
  if (__OFSUB__(1 << *(void *)(v9 + 16), 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  if (sub_1005E0B40())
  {
    while (1)
      sub_1005E0B90();
  }
  return sub_1005E0B80();
}

void sub_100136870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if (a23)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100136C1C(a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100136A14(a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
  }
}

void sub_100136A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    sub_100136AB8(a3, a4, a5, a6, a7, a8, a9, a10, a11);
  }
}

uint64_t sub_100136AB8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a2 != 1)
  {
    sub_100136B1C(result, a2);
    return sub_100136B80(a6, a7, a8, a9);
  }
  return result;
}

uint64_t sub_100136B1C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100136B80(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return sub_100136BD8(a2, a3, a4);
  }
  return result;
}

uint64_t sub_100136BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_100136C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a2)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100136AB8(a4, a5, a6, a7, a8, a9, a10, a11, a12);
  }
}

void _s7SectionVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unsigned int v2 = *(unsigned __int8 *)(a1 + 232);
  if (v2 <= 0xFD) {
    sub_100061440(*(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160), *(void *)(a1 + 168), *(void *)(a1 + 176), *(void *)(a1 + 184), *(void *)(a1 + 192), *(void *)(a1 + 200),
  }
      *(void *)(a1 + 208),
      *(void *)(a1 + 216),
      *(void *)(a1 + 224),
      v2 & 1);
}

uint64_t _s7SectionVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_WORD *)(a1 + 52) = *(_WORD *)(a2 + 52);
  *(unsigned char *)(a1 + 54) = *(unsigned char *)(a2 + 54);
  uint64_t v4 = (_OWORD *)(a1 + 56);
  uint64_t v5 = a2 + 56;
  int v6 = *(unsigned __int8 *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 == 254 || v6 == 255)
  {
    long long v7 = *(_OWORD *)(v5 + 144);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(v5 + 128);
    *(_OWORD *)(a1 + 200) = v7;
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(v5 + 160);
    *(unsigned char *)(a1 + 232) = *(unsigned char *)(v5 + 176);
    long long v8 = *(_OWORD *)(v5 + 80);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(v5 + 64);
    *(_OWORD *)(a1 + 136) = v8;
    long long v9 = *(_OWORD *)(v5 + 112);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(v5 + 96);
    *(_OWORD *)(a1 + 168) = v9;
    long long v10 = *(_OWORD *)(v5 + 16);
    *uint64_t v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 72) = v10;
    long long v11 = *(_OWORD *)(v5 + 48);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(v5 + 32);
    *(_OWORD *)(a1 + 104) = v11;
  }
  else
  {
    char v39 = v6 & 1;
    uint64_t v12 = *(void *)(a2 + 56);
    uint64_t v13 = *(void *)(a2 + 64);
    uint64_t v14 = *(void *)(a2 + 72);
    uint64_t v15 = *(void *)(a2 + 80);
    uint64_t v16 = *(void *)(a2 + 88);
    uint64_t v17 = *(void *)(a2 + 96);
    uint64_t v19 = *(void *)(a2 + 104);
    uint64_t v18 = *(void *)(a2 + 112);
    uint64_t v26 = *(void *)(a2 + 128);
    uint64_t v27 = *(void *)(a2 + 136);
    uint64_t v28 = *(void *)(a2 + 144);
    uint64_t v29 = *(void *)(a2 + 152);
    uint64_t v30 = *(void *)(a2 + 160);
    uint64_t v31 = *(void *)(a2 + 168);
    uint64_t v32 = *(void *)(a2 + 176);
    uint64_t v33 = *(void *)(a2 + 184);
    uint64_t v34 = *(void *)(a2 + 192);
    uint64_t v35 = *(void *)(a2 + 200);
    uint64_t v36 = *(void *)(a2 + 208);
    uint64_t v37 = *(void *)(a2 + 216);
    uint64_t v38 = *(void *)(a2 + 224);
    uint64_t v20 = *(void *)(a2 + 120);
    uint64_t v21 = v12;
    uint64_t v22 = v13;
    uint64_t v23 = v14;
    uint64_t v24 = v18;
    sub_100136870(v12, v13, v14, v15, v16, v17, v19, v18, v20, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
      v36,
      v37,
      v38,
      v39);
    *(void *)(a1 + 56) = v21;
    *(void *)(a1 + 64) = v22;
    *(void *)(a1 + 72) = v23;
    *(void *)(a1 + 80) = v15;
    *(void *)(a1 + 88) = v16;
    *(void *)(a1 + 96) = v17;
    *(void *)(a1 + 104) = v19;
    *(void *)(a1 + 112) = v24;
    *(void *)(a1 + 120) = v20;
    *(void *)(a1 + 128) = v26;
    *(void *)(a1 + 136) = v27;
    *(void *)(a1 + 144) = v28;
    *(void *)(a1 + 152) = v29;
    *(void *)(a1 + 160) = v30;
    *(void *)(a1 + 168) = v31;
    *(void *)(a1 + 176) = v32;
    *(void *)(a1 + 184) = v33;
    *(void *)(a1 + 192) = v34;
    *(void *)(a1 + 200) = v35;
    *(void *)(a1 + 208) = v36;
    *(void *)(a1 + 216) = v37;
    *(void *)(a1 + 224) = v38;
    *(unsigned char *)(a1 + 232) = v39;
  }
  return a1;
}

uint64_t _s7SectionVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 53) = *(unsigned char *)(a2 + 53);
  *(unsigned char *)(a1 + 54) = *(unsigned char *)(a2 + 54);
  uint64_t v5 = (_OWORD *)(a1 + 56);
  int v6 = (long long *)(a2 + 56);
  int v7 = *(unsigned __int8 *)(a1 + 232);
  int v8 = *(unsigned __int8 *)(a2 + 232);
  if (v7 == 254)
  {
    if (v8 == 254) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  if (v8 == 254)
  {
    sub_1001373B8(a1 + 56);
LABEL_12:
    long long v31 = *(_OWORD *)(a2 + 104);
    long long v33 = *v6;
    long long v32 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v31;
    *uint64_t v5 = v33;
    *(_OWORD *)(a1 + 72) = v32;
    long long v34 = *(_OWORD *)(a2 + 168);
    long long v36 = *(_OWORD *)(a2 + 120);
    long long v35 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v34;
    *(_OWORD *)(a1 + 120) = v36;
    *(_OWORD *)(a1 + 136) = v35;
    long long v38 = *(_OWORD *)(a2 + 200);
    long long v37 = *(_OWORD *)(a2 + 216);
    long long v39 = *(_OWORD *)(a2 + 184);
    *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
    *(_OWORD *)(a1 + 200) = v38;
    *(_OWORD *)(a1 + 216) = v37;
    *(_OWORD *)(a1 + 184) = v39;
    return a1;
  }
  if (v7 != 255)
  {
    if (v8 != 255)
    {
      char v94 = v8 & 1;
      uint64_t v41 = *(void *)(a2 + 56);
      uint64_t v42 = *(void *)(a2 + 64);
      uint64_t v43 = *(void *)(a2 + 72);
      uint64_t v44 = *(void *)(a2 + 80);
      uint64_t v45 = *(void *)(a2 + 88);
      uint64_t v46 = *(void *)(a2 + 96);
      uint64_t v47 = *(void *)(a2 + 104);
      uint64_t v48 = *(void *)(a2 + 112);
      uint64_t v68 = *(void *)(a2 + 128);
      uint64_t v70 = *(void *)(a2 + 136);
      uint64_t v72 = *(void *)(a2 + 144);
      uint64_t v74 = *(void *)(a2 + 152);
      uint64_t v76 = *(void *)(a2 + 160);
      uint64_t v78 = *(void *)(a2 + 168);
      uint64_t v80 = *(void *)(a2 + 176);
      uint64_t v82 = *(void *)(a2 + 184);
      uint64_t v84 = *(void *)(a2 + 192);
      uint64_t v86 = *(void *)(a2 + 200);
      uint64_t v88 = *(void *)(a2 + 208);
      uint64_t v90 = *(void *)(a2 + 216);
      uint64_t v92 = *(void *)(a2 + 224);
      uint64_t v49 = *(void *)(a2 + 120);
      sub_100136870(v41, v42, v43, v44, v45, v46, v47, v48, v49, v68, v70, v72, v74, v76, v78, v80, v82, v84, v86,
        v88,
        v90,
        v92,
        v8 & 1);
      uint64_t v50 = *(void *)(a1 + 56);
      uint64_t v51 = *(void *)(a1 + 64);
      *(void *)(a1 + 56) = v41;
      *(void *)(a1 + 64) = v42;
      uint64_t v52 = *(void *)(a1 + 72);
      uint64_t v53 = *(void *)(a1 + 80);
      *(void *)(a1 + 72) = v43;
      *(void *)(a1 + 80) = v44;
      uint64_t v54 = *(void *)(a1 + 88);
      uint64_t v55 = *(void *)(a1 + 96);
      *(void *)(a1 + 88) = v45;
      *(void *)(a1 + 96) = v46;
      uint64_t v56 = *(void *)(a1 + 104);
      uint64_t v57 = *(void *)(a1 + 112);
      *(void *)(a1 + 104) = v47;
      *(void *)(a1 + 112) = v48;
      long long v58 = *(_OWORD *)(a1 + 120);
      *(void *)(a1 + 120) = v49;
      *(void *)(a1 + 128) = v68;
      long long v59 = *(_OWORD *)(a1 + 136);
      *(void *)(a1 + 136) = v70;
      *(void *)(a1 + 144) = v72;
      long long v60 = *(_OWORD *)(a1 + 152);
      *(void *)(a1 + 152) = v74;
      *(void *)(a1 + 160) = v76;
      long long v61 = *(_OWORD *)(a1 + 168);
      *(void *)(a1 + 168) = v78;
      *(void *)(a1 + 176) = v80;
      long long v62 = *(_OWORD *)(a1 + 184);
      *(void *)(a1 + 184) = v82;
      *(void *)(a1 + 192) = v84;
      long long v63 = *(_OWORD *)(a1 + 200);
      *(void *)(a1 + 200) = v86;
      *(void *)(a1 + 208) = v88;
      uint64_t v64 = *(void *)(a1 + 216);
      uint64_t v65 = *(void *)(a1 + 224);
      *(void *)(a1 + 216) = v90;
      *(void *)(a1 + 224) = v92;
      char v66 = *(unsigned char *)(a1 + 232);
      *(unsigned char *)(a1 + 232) = v94;
      sub_100061440(v50, v51, v52, v53, v54, v55, v56, v57, v58, *((uint64_t *)&v58 + 1), v59, *((uint64_t *)&v59 + 1), v60, *((uint64_t *)&v60 + 1), v61, *((uint64_t *)&v61 + 1), v62, *((uint64_t *)&v62 + 1), v63,
        *((uint64_t *)&v63 + 1),
        v64,
        v65,
        v66);
      return a1;
    }
    sub_100137364(a1 + 56);
    goto LABEL_12;
  }
LABEL_7:
  if (v8 != 255)
  {
    char v93 = v8 & 1;
    uint64_t v18 = *(void *)(a2 + 56);
    uint64_t v19 = *(void *)(a2 + 64);
    uint64_t v20 = *(void *)(a2 + 72);
    uint64_t v21 = *(void *)(a2 + 80);
    uint64_t v22 = *(void *)(a2 + 88);
    uint64_t v23 = *(void *)(a2 + 96);
    uint64_t v25 = *(void *)(a2 + 104);
    uint64_t v24 = *(void *)(a2 + 112);
    uint64_t v67 = *(void *)(a2 + 128);
    uint64_t v69 = *(void *)(a2 + 136);
    uint64_t v71 = *(void *)(a2 + 144);
    uint64_t v73 = *(void *)(a2 + 152);
    uint64_t v75 = *(void *)(a2 + 160);
    uint64_t v77 = *(void *)(a2 + 168);
    uint64_t v79 = *(void *)(a2 + 176);
    uint64_t v81 = *(void *)(a2 + 184);
    uint64_t v83 = *(void *)(a2 + 192);
    uint64_t v85 = *(void *)(a2 + 200);
    uint64_t v87 = *(void *)(a2 + 208);
    uint64_t v89 = *(void *)(a2 + 216);
    uint64_t v91 = *(void *)(a2 + 224);
    uint64_t v26 = *(void *)(a2 + 120);
    uint64_t v27 = v18;
    uint64_t v28 = v19;
    uint64_t v29 = v20;
    uint64_t v30 = v24;
    sub_100136870(v18, v19, v20, v21, v22, v23, v25, v24, v26, v67, v69, v71, v73, v75, v77, v79, v81, v83, v85,
      v87,
      v89,
      v91,
      v8 & 1);
    *(void *)(a1 + 56) = v27;
    *(void *)(a1 + 64) = v28;
    *(void *)(a1 + 72) = v29;
    *(void *)(a1 + 80) = v21;
    *(void *)(a1 + 88) = v22;
    *(void *)(a1 + 96) = v23;
    *(void *)(a1 + 104) = v25;
    *(void *)(a1 + 112) = v30;
    *(void *)(a1 + 120) = v26;
    *(void *)(a1 + 128) = v67;
    *(void *)(a1 + 136) = v69;
    *(void *)(a1 + 144) = v71;
    *(void *)(a1 + 152) = v73;
    *(void *)(a1 + 160) = v75;
    *(void *)(a1 + 168) = v77;
    *(void *)(a1 + 176) = v79;
    *(void *)(a1 + 184) = v81;
    *(void *)(a1 + 192) = v83;
    *(void *)(a1 + 200) = v85;
    *(void *)(a1 + 208) = v87;
    *(void *)(a1 + 216) = v89;
    *(void *)(a1 + 224) = v91;
    *(unsigned char *)(a1 + 232) = v93;
    return a1;
  }
LABEL_8:
  long long v9 = *v6;
  long long v10 = *(_OWORD *)(a2 + 72);
  long long v11 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v11;
  *uint64_t v5 = v9;
  *(_OWORD *)(a1 + 72) = v10;
  long long v12 = *(_OWORD *)(a2 + 120);
  long long v13 = *(_OWORD *)(a2 + 136);
  long long v14 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v14;
  *(_OWORD *)(a1 + 120) = v12;
  *(_OWORD *)(a1 + 136) = v13;
  long long v15 = *(_OWORD *)(a2 + 184);
  long long v16 = *(_OWORD *)(a2 + 200);
  long long v17 = *(_OWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(_OWORD *)(a1 + 200) = v16;
  *(_OWORD *)(a1 + 216) = v17;
  *(_OWORD *)(a1 + 184) = v15;
  return a1;
}

uint64_t sub_100137364(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001373B8(uint64_t a1)
{
  return a1;
}

__n128 _s7SectionVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[13];
  *(_OWORD *)(a1 + 217) = *(long long *)((char *)a2 + 217);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t _s7SectionVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(unsigned char *)(a1 + 53) = *(unsigned char *)(a2 + 53);
  *(unsigned char *)(a1 + 54) = *(unsigned char *)(a2 + 54);
  int v4 = *(unsigned __int8 *)(a1 + 232);
  int v5 = *(unsigned __int8 *)(a2 + 232);
  if (v4 != 254)
  {
    if (v5 == 254)
    {
      sub_1001373B8(a1 + 56);
    }
    else if (v4 != 255)
    {
      if (v5 != 255)
      {
        uint64_t v12 = *(void *)(a1 + 56);
        uint64_t v13 = *(void *)(a1 + 64);
        uint64_t v14 = *(void *)(a1 + 72);
        uint64_t v15 = *(void *)(a1 + 80);
        uint64_t v16 = *(void *)(a1 + 88);
        uint64_t v17 = *(void *)(a1 + 96);
        uint64_t v18 = *(void *)(a1 + 104);
        uint64_t v19 = *(void *)(a1 + 112);
        long long v20 = *(_OWORD *)(a1 + 120);
        long long v21 = *(_OWORD *)(a1 + 136);
        long long v22 = *(_OWORD *)(a1 + 152);
        long long v23 = *(_OWORD *)(a1 + 168);
        long long v24 = *(_OWORD *)(a1 + 184);
        long long v25 = *(_OWORD *)(a1 + 200);
        uint64_t v26 = *(void *)(a1 + 216);
        uint64_t v27 = *(void *)(a1 + 224);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
        *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
        *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
        *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
        *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
        *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
        *(unsigned char *)(a1 + 232) = v5 & 1;
        sub_100061440(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
          *((uint64_t *)&v25 + 1),
          v26,
          v27,
          v4 & 1);
        return a1;
      }
      sub_100137364(a1 + 56);
    }
  }
  long long v6 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v6;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  long long v7 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v7;
  long long v8 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v8;
  long long v9 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v9;
  long long v10 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v10;
  return a1;
}

uint64_t _s7SectionVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 233)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s7SectionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 232) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 233) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 233) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s7SectionVMa()
{
  return &_s7SectionVN;
}

uint64_t *sub_100137704(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *int v4 = *a2;
    int v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v7 = a3[5];
    long long v8 = (char *)a1 + v7;
    long long v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for MessageHeader();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 3, v10))
    {
      uint64_t v12 = _s19MessageHeaderStatusOMa(0);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_1005E17E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 3, v10);
    }
    uint64_t v15 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t _s19MessageHeaderStatusOMa(uint64_t a1)
{
  return sub_10003B314(a1, (uint64_t *)&unk_10070D638);
}

uint64_t sub_1001378D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for MessageHeader();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 3, v3))
  {
    uint64_t v4 = sub_1005E17E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v2, v4);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_DWORD *sub_1001379A0(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for MessageHeader();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 3, v9))
  {
    uint64_t v11 = _s19MessageHeaderStatusOMa(0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_1005E17E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 3, v9);
  }
  uint64_t v13 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_DWORD *sub_100137AFC(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for MessageHeader();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 3, v9);
  int v13 = v11(v8, 3, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v17 = sub_1005E17E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v7, v8, v17);
      goto LABEL_7;
    }
    sub_100137CF8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MessageHeader);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v15 = _s19MessageHeaderStatusOMa(0);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v14 = sub_1005E17E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 3, v9);
LABEL_7:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100137CF8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_DWORD *sub_100137D58(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for MessageHeader();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 3, v9))
  {
    uint64_t v11 = _s19MessageHeaderStatusOMa(0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_1005E17E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 3, v9);
  }
  uint64_t v13 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  return a1;
}

_DWORD *sub_100137EA8(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for MessageHeader();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 3, v9);
  int v13 = v11(v8, 3, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v17 = sub_1005E17E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40))(v7, v8, v17);
      goto LABEL_7;
    }
    sub_100137CF8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MessageHeader);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v15 = _s19MessageHeaderStatusOMa(0);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v14 = sub_1005E17E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 3, v9);
LABEL_7:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100138094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001380A8);
}

uint64_t sub_1001380A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _s19MessageHeaderStatusOMa(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_10013816C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100138180);
}

uint64_t sub_100138180(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = _s19MessageHeaderStatusOMa(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100138240()
{
  uint64_t result = _s19MessageHeaderStatusOMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1001382EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for MessageHeader();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_1005E17E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t sub_100138454(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageHeader();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 3, v2);
  if (!result)
  {
    uint64_t v4 = sub_1005E17E0();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *sub_100138504(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MessageHeader();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1005E17E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *sub_100138630(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MessageHeader();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_1005E17E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_100137CF8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for MessageHeader);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_1005E17E0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

void *sub_1001387E4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MessageHeader();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1005E17E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *sub_100138910(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MessageHeader();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_1005E17E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_100137CF8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for MessageHeader);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_1005E17E0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t sub_100138AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100138AD8);
}

uint64_t sub_100138AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageHeader();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4) {
    return v5 - 3;
  }
  else {
    return 0;
  }
}

uint64_t sub_100138B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100138B58);
}

uint64_t sub_100138B58(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 3);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for MessageHeader();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_100138BDC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageHeader();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 3, v2);
}

uint64_t sub_100138C44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageHeader();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 3, v4);
}

uint64_t sub_100138CB4()
{
  uint64_t result = sub_1005E17E0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void _s28MessageWaitingForSectionInfoVwxx(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 184);
  if (v1 <= 0xFD) {
    sub_100061440(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152),
  }
      *(void *)(a1 + 160),
      *(void *)(a1 + 168),
      *(void *)(a1 + 176),
      v1 & 1);
}

uint64_t _s28MessageWaitingForSectionInfoVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  int v3 = *(unsigned __int8 *)(a2 + 184);
  if (v3 == 254 || v3 == 255)
  {
    long long v4 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v4;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
    long long v5 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v5;
    long long v6 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v6;
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v7;
    long long v8 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v8;
  }
  else
  {
    char v32 = v3 & 1;
    uint64_t v9 = *(void *)(a2 + 40);
    uint64_t v10 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v19 = *(void *)(a2 + 80);
    uint64_t v20 = *(void *)(a2 + 88);
    uint64_t v21 = *(void *)(a2 + 96);
    uint64_t v22 = *(void *)(a2 + 104);
    uint64_t v23 = *(void *)(a2 + 112);
    uint64_t v24 = *(void *)(a2 + 120);
    uint64_t v25 = *(void *)(a2 + 128);
    uint64_t v26 = *(void *)(a2 + 136);
    uint64_t v27 = *(void *)(a2 + 144);
    uint64_t v28 = *(void *)(a2 + 152);
    uint64_t v29 = *(void *)(a2 + 160);
    uint64_t v30 = *(void *)(a2 + 168);
    uint64_t v31 = *(void *)(a2 + 176);
    uint64_t v13 = *(void *)(a2 + 72);
    uint64_t v14 = *(void *)(a2 + 8);
    uint64_t v15 = *(void *)(a2 + 16);
    uint64_t v16 = *(void *)(a2 + 24);
    uint64_t v17 = *(void *)(a2 + 32);
    sub_100136870(v14, v15, v16, v17, v9, v10, v11, v12, v13, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28,
      v29,
      v30,
      v31,
      v3 & 1);
    *(void *)(a1 + 8) = v14;
    *(void *)(a1 + 16) = v15;
    *(void *)(a1 + 24) = v16;
    *(void *)(a1 + 32) = v17;
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    *(void *)(a1 + 72) = v13;
    *(void *)(a1 + 80) = v19;
    *(void *)(a1 + 88) = v20;
    *(void *)(a1 + 96) = v21;
    *(void *)(a1 + 104) = v22;
    *(void *)(a1 + 112) = v23;
    *(void *)(a1 + 120) = v24;
    *(void *)(a1 + 128) = v25;
    *(void *)(a1 + 136) = v26;
    *(void *)(a1 + 144) = v27;
    *(void *)(a1 + 152) = v28;
    *(void *)(a1 + 160) = v29;
    *(void *)(a1 + 168) = v30;
    *(void *)(a1 + 176) = v31;
    *(unsigned char *)(a1 + 184) = v32;
  }
  return a1;
}

uint64_t _s28MessageWaitingForSectionInfoVwca(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v3 = a1 + 8;
  long long v4 = (long long *)(a2 + 8);
  int v5 = *(unsigned __int8 *)(a1 + 184);
  int v6 = *(unsigned __int8 *)(a2 + 184);
  if (v5 == 254)
  {
    if (v6 == 254) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  if (v6 == 254)
  {
    sub_1001373B8(a1 + 8);
LABEL_12:
    long long v25 = v4[3];
    long long v27 = *v4;
    long long v26 = v4[1];
    *(_OWORD *)(v3 + 32) = v4[2];
    *(_OWORD *)(v3 + 48) = v25;
    *(_OWORD *)uint64_t v3 = v27;
    *(_OWORD *)(v3 + 16) = v26;
    long long v28 = v4[7];
    long long v30 = v4[4];
    long long v29 = v4[5];
    *(_OWORD *)(v3 + 96) = v4[6];
    *(_OWORD *)(v3 + 112) = v28;
    *(_OWORD *)(v3 + 64) = v30;
    *(_OWORD *)(v3 + 80) = v29;
    long long v32 = v4[9];
    long long v31 = v4[10];
    long long v33 = v4[8];
    *(unsigned char *)(v3 + 176) = *((unsigned char *)v4 + 176);
    *(_OWORD *)(v3 + 144) = v32;
    *(_OWORD *)(v3 + 160) = v31;
    *(_OWORD *)(v3 + 128) = v33;
    return a1;
  }
  if (v5 != 255)
  {
    if (v6 != 255)
    {
      char v88 = v6 & 1;
      uint64_t v35 = *(void *)(a2 + 8);
      uint64_t v36 = *(void *)(a2 + 16);
      uint64_t v37 = *(void *)(a2 + 24);
      uint64_t v38 = *(void *)(a2 + 32);
      uint64_t v39 = *(void *)(a2 + 40);
      uint64_t v40 = *(void *)(a2 + 48);
      uint64_t v41 = *(void *)(a2 + 56);
      uint64_t v42 = *(void *)(a2 + 64);
      uint64_t v43 = *(void *)(a2 + 72);
      uint64_t v62 = *(void *)(a2 + 80);
      uint64_t v64 = *(void *)(a2 + 88);
      uint64_t v66 = *(void *)(a2 + 96);
      uint64_t v68 = *(void *)(a2 + 104);
      uint64_t v70 = *(void *)(a2 + 112);
      uint64_t v72 = *(void *)(a2 + 120);
      uint64_t v74 = *(void *)(a2 + 128);
      uint64_t v76 = *(void *)(a2 + 136);
      uint64_t v78 = *(void *)(a2 + 144);
      uint64_t v80 = *(void *)(a2 + 152);
      uint64_t v82 = *(void *)(a2 + 160);
      uint64_t v84 = *(void *)(a2 + 168);
      uint64_t v86 = *(void *)(a2 + 176);
      sub_100136870(v35, v36, v37, v38, v39, v40, v41, v42, v43, v62, v64, v66, v68, v70, v72, v74, v76, v78, v80,
        v82,
        v84,
        v86,
        v6 & 1);
      uint64_t v44 = *(void *)(a1 + 8);
      uint64_t v45 = *(void *)(a1 + 16);
      *(void *)(a1 + 8) = v35;
      *(void *)(a1 + 16) = v36;
      uint64_t v46 = *(void *)(a1 + 24);
      uint64_t v47 = *(void *)(a1 + 32);
      *(void *)(a1 + 24) = v37;
      *(void *)(a1 + 32) = v38;
      uint64_t v48 = *(void *)(a1 + 40);
      uint64_t v49 = *(void *)(a1 + 48);
      *(void *)(a1 + 40) = v39;
      *(void *)(a1 + 48) = v40;
      uint64_t v50 = *(void *)(a1 + 56);
      uint64_t v51 = *(void *)(a1 + 64);
      *(void *)(a1 + 56) = v41;
      *(void *)(a1 + 64) = v42;
      long long v52 = *(_OWORD *)(a1 + 72);
      *(void *)(a1 + 72) = v43;
      *(void *)(a1 + 80) = v62;
      long long v53 = *(_OWORD *)(a1 + 88);
      *(void *)(a1 + 88) = v64;
      *(void *)(a1 + 96) = v66;
      long long v54 = *(_OWORD *)(a1 + 104);
      *(void *)(a1 + 104) = v68;
      *(void *)(a1 + 112) = v70;
      long long v55 = *(_OWORD *)(a1 + 120);
      *(void *)(a1 + 120) = v72;
      *(void *)(a1 + 128) = v74;
      long long v56 = *(_OWORD *)(a1 + 136);
      *(void *)(a1 + 136) = v76;
      *(void *)(a1 + 144) = v78;
      long long v57 = *(_OWORD *)(a1 + 152);
      *(void *)(a1 + 152) = v80;
      *(void *)(a1 + 160) = v82;
      uint64_t v58 = *(void *)(a1 + 168);
      uint64_t v59 = *(void *)(a1 + 176);
      *(void *)(a1 + 168) = v84;
      *(void *)(a1 + 176) = v86;
      char v60 = *(unsigned char *)(a1 + 184);
      *(unsigned char *)(a1 + 184) = v88;
      sub_100061440(v44, v45, v46, v47, v48, v49, v50, v51, v52, *((uint64_t *)&v52 + 1), v53, *((uint64_t *)&v53 + 1), v54, *((uint64_t *)&v54 + 1), v55, *((uint64_t *)&v55 + 1), v56, *((uint64_t *)&v56 + 1), v57,
        *((uint64_t *)&v57 + 1),
        v58,
        v59,
        v60);
      return a1;
    }
    sub_100137364(a1 + 8);
    goto LABEL_12;
  }
LABEL_7:
  if (v6 != 255)
  {
    char v87 = v6 & 1;
    uint64_t v16 = *(void *)(a2 + 40);
    uint64_t v17 = *(void *)(a2 + 48);
    uint64_t v18 = *(void *)(a2 + 56);
    uint64_t v19 = *(void *)(a2 + 64);
    uint64_t v61 = *(void *)(a2 + 80);
    uint64_t v63 = *(void *)(a2 + 88);
    uint64_t v65 = *(void *)(a2 + 96);
    uint64_t v67 = *(void *)(a2 + 104);
    uint64_t v69 = *(void *)(a2 + 112);
    uint64_t v71 = *(void *)(a2 + 120);
    uint64_t v73 = *(void *)(a2 + 128);
    uint64_t v75 = *(void *)(a2 + 136);
    uint64_t v77 = *(void *)(a2 + 144);
    uint64_t v79 = *(void *)(a2 + 152);
    uint64_t v81 = *(void *)(a2 + 160);
    uint64_t v83 = *(void *)(a2 + 168);
    uint64_t v85 = *(void *)(a2 + 176);
    uint64_t v20 = *(void *)(a2 + 72);
    uint64_t v21 = *(void *)(a2 + 8);
    uint64_t v22 = *(void *)(a2 + 16);
    uint64_t v23 = *(void *)(a2 + 24);
    uint64_t v24 = *(void *)(a2 + 32);
    sub_100136870(v21, v22, v23, v24, v16, v17, v18, v19, v20, v61, v63, v65, v67, v69, v71, v73, v75, v77, v79,
      v81,
      v83,
      v85,
      v6 & 1);
    *(void *)(a1 + 8) = v21;
    *(void *)(a1 + 16) = v22;
    *(void *)(a1 + 24) = v23;
    *(void *)(a1 + 32) = v24;
    *(void *)(a1 + 40) = v16;
    *(void *)(a1 + 48) = v17;
    *(void *)(a1 + 56) = v18;
    *(void *)(a1 + 64) = v19;
    *(void *)(a1 + 72) = v20;
    *(void *)(a1 + 80) = v61;
    *(void *)(a1 + 88) = v63;
    *(void *)(a1 + 96) = v65;
    *(void *)(a1 + 104) = v67;
    *(void *)(a1 + 112) = v69;
    *(void *)(a1 + 120) = v71;
    *(void *)(a1 + 128) = v73;
    *(void *)(a1 + 136) = v75;
    *(void *)(a1 + 144) = v77;
    *(void *)(a1 + 152) = v79;
    *(void *)(a1 + 160) = v81;
    *(void *)(a1 + 168) = v83;
    *(void *)(a1 + 176) = v85;
    *(unsigned char *)(a1 + 184) = v87;
    return a1;
  }
LABEL_8:
  long long v7 = *v4;
  long long v8 = *(_OWORD *)(a2 + 24);
  long long v9 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v9;
  *(_OWORD *)uint64_t v3 = v7;
  *(_OWORD *)(a1 + 24) = v8;
  long long v10 = *(_OWORD *)(a2 + 72);
  long long v11 = *(_OWORD *)(a2 + 88);
  long long v12 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v12;
  *(_OWORD *)(a1 + 72) = v10;
  *(_OWORD *)(a1 + 88) = v11;
  long long v13 = *(_OWORD *)(a2 + 136);
  long long v14 = *(_OWORD *)(a2 + 152);
  long long v15 = *(_OWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(_OWORD *)(a1 + 152) = v14;
  *(_OWORD *)(a1 + 168) = v15;
  *(_OWORD *)(a1 + 136) = v13;
  return a1;
}

__n128 _s28MessageWaitingForSectionInfoVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(_OWORD *)(a1 + 169) = *(long long *)((char *)a2 + 169);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t _s28MessageWaitingForSectionInfoVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = a1 + 8;
  uint64_t v4 = a2 + 8;
  int v5 = *(unsigned __int8 *)(a1 + 184);
  int v6 = *(unsigned __int8 *)(a2 + 184);
  if (v5 != 254)
  {
    if (v6 == 254)
    {
      sub_1001373B8(a1 + 8);
    }
    else if (v5 != 255)
    {
      if (v6 != 255)
      {
        uint64_t v13 = *(void *)(a1 + 8);
        uint64_t v14 = *(void *)(a1 + 16);
        uint64_t v15 = *(void *)(a1 + 24);
        uint64_t v16 = *(void *)(a1 + 32);
        uint64_t v17 = *(void *)(a1 + 40);
        uint64_t v18 = *(void *)(a1 + 48);
        uint64_t v19 = *(void *)(a1 + 56);
        uint64_t v20 = *(void *)(a1 + 64);
        long long v21 = *(_OWORD *)(a1 + 72);
        long long v22 = *(_OWORD *)(a1 + 88);
        long long v23 = *(_OWORD *)(a1 + 104);
        long long v24 = *(_OWORD *)(a1 + 120);
        long long v25 = *(_OWORD *)(a1 + 136);
        long long v26 = *(_OWORD *)(a1 + 152);
        uint64_t v27 = *(void *)(a1 + 168);
        uint64_t v28 = *(void *)(a1 + 176);
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
        *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
        *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
        *(unsigned char *)(a1 + 184) = v6 & 1;
        sub_100061440(v13, v14, v15, v16, v17, v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26,
          *((uint64_t *)&v26 + 1),
          v27,
          v28,
          v5 & 1);
        return a1;
      }
      sub_100137364(a1 + 8);
    }
  }
  long long v7 = *(_OWORD *)(v4 + 144);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v4 + 128);
  *(_OWORD *)(v3 + 144) = v7;
  *(_OWORD *)(v3 + 160) = *(_OWORD *)(v4 + 160);
  *(unsigned char *)(v3 + 176) = *(unsigned char *)(v4 + 176);
  long long v8 = *(_OWORD *)(v4 + 80);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v4 + 64);
  *(_OWORD *)(v3 + 80) = v8;
  long long v9 = *(_OWORD *)(v4 + 112);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v4 + 96);
  *(_OWORD *)(v3 + 112) = v9;
  long long v10 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)v4;
  *(_OWORD *)(v3 + 16) = v10;
  long long v11 = *(_OWORD *)(v4 + 48);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v4 + 32);
  *(_OWORD *)(v3 + 48) = v11;
  return a1;
}

uint64_t _s28MessageWaitingForSectionInfoVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 185)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 184);
  int v4 = v3 ^ 0xFF;
  if ((int)(v3 ^ 0xFF) <= 1) {
    int v4 = 1;
  }
  int v5 = v4 - 2;
  if (v3 <= 1) {
    int v6 = -1;
  }
  else {
    int v6 = v5;
  }
  return (v6 + 1);
}

uint64_t _s28MessageWaitingForSectionInfoVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 184) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 185) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 185) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 184) = -2 - a2;
    }
  }
  return result;
}

ValueMetadata *_s28MessageWaitingForSectionInfoVMa()
{
  return &_s28MessageWaitingForSectionInfoVN;
}

void _s13BodyStructureOwxx(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 176);
  if (v1 <= 1) {
    sub_100061440(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
  }
      *(void *)(a1 + 152),
      *(void *)(a1 + 160),
      *(void *)(a1 + 168),
      v1 != 0);
}

uint64_t _s28MessageWaitingForSectionInfoV13BodyStructureOwcp(uint64_t a1, uint64_t *a2)
{
  unsigned int v3 = *((unsigned __int8 *)a2 + 176);
  if ((v3 + 1) > 2u || v3 > 1)
  {
    long long v13 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 144) = v13;
    *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
    *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
    long long v14 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 80) = v14;
    long long v15 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 112) = v15;
    long long v16 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
    long long v17 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v17;
  }
  else
  {
    char v32 = *((unsigned char *)a2 + 176);
    uint64_t v4 = a2[4];
    uint64_t v5 = a2[5];
    uint64_t v6 = a2[6];
    uint64_t v7 = a2[7];
    uint64_t v19 = a2[9];
    uint64_t v20 = a2[10];
    uint64_t v21 = a2[11];
    uint64_t v22 = a2[12];
    uint64_t v23 = a2[13];
    uint64_t v24 = a2[14];
    uint64_t v25 = a2[15];
    uint64_t v26 = a2[16];
    uint64_t v27 = a2[17];
    uint64_t v28 = a2[18];
    uint64_t v29 = a2[19];
    uint64_t v30 = a2[20];
    uint64_t v31 = a2[21];
    uint64_t v8 = a2[8];
    uint64_t v9 = *a2;
    uint64_t v10 = a2[1];
    uint64_t v11 = a2[2];
    uint64_t v12 = a2[3];
    sub_100136870(*a2, v10, v11, v12, v4, v5, v6, v7, v8, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28,
      v29,
      v30,
      v31,
      v3 & 1);
    *(void *)a1 = v9;
    *(void *)(a1 + 8) = v10;
    *(void *)(a1 + 16) = v11;
    *(void *)(a1 + 24) = v12;
    *(void *)(a1 + 32) = v4;
    *(void *)(a1 + 40) = v5;
    *(void *)(a1 + 48) = v6;
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = v8;
    *(void *)(a1 + 72) = v19;
    *(void *)(a1 + 80) = v20;
    *(void *)(a1 + 88) = v21;
    *(void *)(a1 + 96) = v22;
    *(void *)(a1 + 104) = v23;
    *(void *)(a1 + 112) = v24;
    *(void *)(a1 + 120) = v25;
    *(void *)(a1 + 128) = v26;
    *(void *)(a1 + 136) = v27;
    *(void *)(a1 + 144) = v28;
    *(void *)(a1 + 152) = v29;
    *(void *)(a1 + 160) = v30;
    *(void *)(a1 + 168) = v31;
    *(unsigned char *)(a1 + 176) = v32;
  }
  return a1;
}

uint64_t _s28MessageWaitingForSectionInfoV13BodyStructureOwca(uint64_t a1, long long *a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 176);
  unsigned int v5 = *((unsigned __int8 *)a2 + 176);
  if ((v4 + 1) > 2u)
  {
    if ((v5 + 1) > 2u) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
  if ((v5 + 1) > 2u)
  {
    if (v4 <= 1) {
      goto LABEL_10;
    }
LABEL_11:
    long long v41 = *a2;
    long long v42 = a2[1];
    long long v43 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v43;
    *(_OWORD *)a1 = v41;
    *(_OWORD *)(a1 + 16) = v42;
    long long v44 = a2[4];
    long long v45 = a2[5];
    long long v46 = a2[7];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v46;
    *(_OWORD *)(a1 + 64) = v44;
    *(_OWORD *)(a1 + 80) = v45;
    long long v47 = a2[8];
    long long v48 = a2[9];
    long long v49 = a2[10];
    *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
    *(_OWORD *)(a1 + 144) = v48;
    *(_OWORD *)(a1 + 160) = v49;
    *(_OWORD *)(a1 + 128) = v47;
    return a1;
  }
  if (v4 > 1)
  {
LABEL_7:
    if (v5 <= 1)
    {
      char v78 = *((unsigned char *)a2 + 176);
      uint64_t v32 = *((void *)a2 + 3);
      uint64_t v33 = *((void *)a2 + 4);
      uint64_t v34 = *((void *)a2 + 5);
      uint64_t v35 = *((void *)a2 + 6);
      uint64_t v52 = *((void *)a2 + 9);
      uint64_t v54 = *((void *)a2 + 10);
      uint64_t v56 = *((void *)a2 + 11);
      uint64_t v58 = *((void *)a2 + 12);
      uint64_t v60 = *((void *)a2 + 13);
      uint64_t v62 = *((void *)a2 + 14);
      uint64_t v64 = *((void *)a2 + 15);
      uint64_t v66 = *((void *)a2 + 16);
      uint64_t v68 = *((void *)a2 + 17);
      uint64_t v70 = *((void *)a2 + 18);
      uint64_t v72 = *((void *)a2 + 19);
      uint64_t v74 = *((void *)a2 + 20);
      uint64_t v76 = *((void *)a2 + 21);
      uint64_t v36 = *((void *)a2 + 8);
      uint64_t v37 = *(void *)a2;
      uint64_t v38 = *((void *)a2 + 1);
      uint64_t v39 = *((void *)a2 + 2);
      uint64_t v40 = *((void *)a2 + 7);
      sub_100136870(*(void *)a2, v38, v39, v32, v33, v34, v35, v40, v36, v52, v54, v56, v58, v60, v62, v64, v66, v68, v70,
        v72,
        v74,
        v76,
        v5 & 1);
      *(void *)a1 = v37;
      *(void *)(a1 + 8) = v38;
      *(void *)(a1 + 16) = v39;
      *(void *)(a1 + 24) = v32;
      *(void *)(a1 + 32) = v33;
      *(void *)(a1 + 40) = v34;
      *(void *)(a1 + 48) = v35;
      *(void *)(a1 + 56) = v40;
      *(void *)(a1 + 64) = v36;
      *(void *)(a1 + 72) = v52;
      *(void *)(a1 + 80) = v54;
      *(void *)(a1 + 88) = v56;
      *(void *)(a1 + 96) = v58;
      *(void *)(a1 + 104) = v60;
      *(void *)(a1 + 112) = v62;
      *(void *)(a1 + 120) = v64;
      *(void *)(a1 + 128) = v66;
      *(void *)(a1 + 136) = v68;
      *(void *)(a1 + 144) = v70;
      *(void *)(a1 + 152) = v72;
      *(void *)(a1 + 160) = v74;
      *(void *)(a1 + 168) = v76;
      *(unsigned char *)(a1 + 176) = v78;
      return a1;
    }
    goto LABEL_11;
  }
  if (v5 > 1)
  {
LABEL_10:
    sub_100061440(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
      *(void *)(a1 + 152),
      *(void *)(a1 + 160),
      *(void *)(a1 + 168),
      v4 & 1);
    goto LABEL_11;
  }
  char v77 = *((unsigned char *)a2 + 176);
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *((void *)a2 + 1);
  uint64_t v8 = *((void *)a2 + 2);
  uint64_t v9 = *((void *)a2 + 3);
  uint64_t v10 = *((void *)a2 + 4);
  uint64_t v11 = *((void *)a2 + 5);
  uint64_t v12 = *((void *)a2 + 6);
  uint64_t v13 = *((void *)a2 + 7);
  uint64_t v51 = *((void *)a2 + 9);
  uint64_t v53 = *((void *)a2 + 10);
  uint64_t v55 = *((void *)a2 + 11);
  uint64_t v57 = *((void *)a2 + 12);
  uint64_t v59 = *((void *)a2 + 13);
  uint64_t v61 = *((void *)a2 + 14);
  uint64_t v63 = *((void *)a2 + 15);
  uint64_t v65 = *((void *)a2 + 16);
  uint64_t v67 = *((void *)a2 + 17);
  uint64_t v69 = *((void *)a2 + 18);
  uint64_t v71 = *((void *)a2 + 19);
  uint64_t v73 = *((void *)a2 + 20);
  uint64_t v75 = *((void *)a2 + 21);
  uint64_t v14 = *((void *)a2 + 8);
  sub_100136870(*(void *)a2, v7, v8, v9, v10, v11, v12, v13, v14, v51, v53, v55, v57, v59, v61, v63, v65, v67, v69,
    v71,
    v73,
    v75,
    v5 & 1);
  uint64_t v15 = *(void *)a1;
  uint64_t v16 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v18 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  uint64_t v19 = *(void *)(a1 + 32);
  uint64_t v20 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  uint64_t v21 = *(void *)(a1 + 48);
  uint64_t v22 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  long long v23 = *(_OWORD *)(a1 + 64);
  long long v24 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v14;
  *(void *)(a1 + 72) = v51;
  *(void *)(a1 + 80) = v53;
  *(void *)(a1 + 88) = v55;
  long long v25 = *(_OWORD *)(a1 + 96);
  long long v26 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v57;
  *(void *)(a1 + 104) = v59;
  *(void *)(a1 + 112) = v61;
  *(void *)(a1 + 120) = v63;
  long long v27 = *(_OWORD *)(a1 + 128);
  long long v28 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v65;
  *(void *)(a1 + 136) = v67;
  *(void *)(a1 + 144) = v69;
  *(void *)(a1 + 152) = v71;
  uint64_t v29 = *(void *)(a1 + 160);
  uint64_t v30 = *(void *)(a1 + 168);
  *(void *)(a1 + 160) = v73;
  *(void *)(a1 + 168) = v75;
  char v31 = *(unsigned char *)(a1 + 176);
  *(unsigned char *)(a1 + 176) = v77;
  sub_100061440(v15, v16, v17, v18, v19, v20, v21, v22, v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v28,
    *((uint64_t *)&v28 + 1),
    v29,
    v30,
    v31);
  return a1;
}

__n128 _s28MessageWaitingForSectionInfoV13BodyStructureOwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t _s28MessageWaitingForSectionInfoV13BodyStructureOwta(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 176);
  if ((v4 + 1) > 2u) {
    goto LABEL_8;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 176);
  if ((v5 + 1) > 2u)
  {
    if (v4 <= 1) {
      goto LABEL_7;
    }
LABEL_8:
    long long v27 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v27;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    long long v28 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v28;
    long long v29 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v29;
    long long v30 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v30;
    long long v31 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v31;
    return a1;
  }
  if (v4 > 1) {
    goto LABEL_8;
  }
  if (v5 > 1)
  {
LABEL_7:
    sub_100061440(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
      *(void *)(a1 + 152),
      *(void *)(a1 + 160),
      *(void *)(a1 + 168),
      v4 & 1);
    goto LABEL_8;
  }
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  long long v14 = *(_OWORD *)(a1 + 64);
  long long v15 = *(_OWORD *)(a1 + 80);
  long long v16 = *(_OWORD *)(a1 + 96);
  long long v17 = *(_OWORD *)(a1 + 112);
  long long v18 = *(_OWORD *)(a1 + 128);
  long long v19 = *(_OWORD *)(a1 + 144);
  uint64_t v20 = *(void *)(a1 + 160);
  uint64_t v21 = *(void *)(a1 + 168);
  long long v22 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v22;
  long long v23 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v23;
  long long v24 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v24;
  long long v25 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v25;
  long long v26 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v26;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 176) = v5 & 1;
  sub_100061440(v6, v7, v8, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19,
    *((uint64_t *)&v19 + 1),
    v20,
    v21,
    v4 & 1);
  return a1;
}

uint64_t _s28MessageWaitingForSectionInfoV13BodyStructureOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 177)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 176);
  if (v3 <= 1) {
    unsigned int v4 = -1;
  }
  else {
    unsigned int v4 = v3 ^ 0xFF;
  }
  if (v4 + 1 < 2) {
    unsigned int v4 = 0;
  }
  if (v4 >= 2) {
    return v4 - 1;
  }
  else {
    return 0;
  }
}

uint64_t _s28MessageWaitingForSectionInfoV13BodyStructureOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 176) = 0;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 177) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 177) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 176) = -2 - a2;
    }
  }
  return result;
}

uint64_t sub_100139D30(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 176);
  if (v1 <= 1) {
    unsigned int v2 = -1;
  }
  else {
    unsigned int v2 = v1 ^ 0xFF;
  }
  if (v2 + 1 >= 2) {
    return v2;
  }
  else {
    return 0;
  }
}

double sub_100139D50(uint64_t a1, unsigned int a2)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(a1 + 176) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 144) = 0u;
    *(_OWORD *)(a1 + 160) = 0u;
    *(_OWORD *)(a1 + 112) = 0u;
    *(_OWORD *)(a1 + 128) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_DWORD *)a1 = a2 - 254;
  }
  else if (a2)
  {
    *(unsigned char *)(a1 + 176) = ~(_BYTE)a2;
  }
  return result;
}

ValueMetadata *_s28MessageWaitingForSectionInfoV13BodyStructureOMa()
{
  return &_s28MessageWaitingForSectionInfoV13BodyStructureON;
}

uint64_t sub_100139DA4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_10000566C(&qword_100709E60);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v13(a1 + *(int *)(a3 + 32), (uint64_t)a2 + *(int *)(a3 + 32), v12);
  }
  return a1;
}

uint64_t sub_100139EC8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_10000566C(&qword_100709E60);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  return v8(v6, v5);
}

uint64_t sub_100139F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10000566C(&qword_100709E60);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v10);
  return a1;
}

uint64_t sub_10013A068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v9);
  return a1;
}

uint64_t sub_10013A168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v9);
  return a1;
}

uint64_t sub_10013A230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v9);
  return a1;
}

uint64_t sub_10013A318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10013A32C);
}

uint64_t sub_10013A32C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000566C(&qword_100709E38);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10013A3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10013A3F4);
}

void *sub_10013A3F4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *double result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E38);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s18InProgressMessagesVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070D6A0);
}

void sub_10013A4C0()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10013A568(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageHeader();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s19MessageHeaderStatusOMa(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000566C(&qword_10070D6E8);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  long long v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_10013A8B8(a1, (uint64_t)v14, _s19MessageHeaderStatusOMa);
  sub_10013A8B8(a2, v15, _s19MessageHeaderStatusOMa);
  long long v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  switch(v16((uint64_t)v14, 3, v4))
  {
    case 1u:
      if (v16(v15, 3, v4) != 1) {
        goto LABEL_9;
      }
      goto LABEL_5;
    case 2u:
      if (v16(v15, 3, v4) != 2) {
        goto LABEL_9;
      }
      goto LABEL_5;
    case 3u:
      if (v16(v15, 3, v4) != 3) {
        goto LABEL_9;
      }
LABEL_5:
      sub_100137CF8((uint64_t)v14, _s19MessageHeaderStatusOMa);
      char v17 = 1;
      break;
    default:
      sub_10013A8B8((uint64_t)v14, (uint64_t)v10, _s19MessageHeaderStatusOMa);
      if (v16(v15, 3, v4))
      {
        sub_100137CF8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MessageHeader);
LABEL_9:
        sub_100007A48((uint64_t)v14, &qword_10070D6E8);
        char v17 = 0;
      }
      else
      {
        sub_10013A920(v15, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MessageHeader);
        char v17 = static MessageHeader.== infix(_:_:)();
        sub_100137CF8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MessageHeader);
        sub_100137CF8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MessageHeader);
        sub_100137CF8((uint64_t)v14, _s19MessageHeaderStatusOMa);
      }
      break;
  }
  return v17 & 1;
}

uint64_t sub_10013A8B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10013A920(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10013A988(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10013A9E4(uint64_t a1)
{
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 88);
  uint64_t v4 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 104);
  uint64_t v16 = *(void *)(a1 + 112);
  uint64_t v17 = *(void *)(a1 + 72);
  long long v14 = *(_OWORD *)(a1 + 136);
  long long v15 = *(_OWORD *)(a1 + 120);
  long long v12 = *(_OWORD *)(a1 + 168);
  long long v13 = *(_OWORD *)(a1 + 152);
  long long v10 = *(_OWORD *)(a1 + 200);
  long long v11 = *(_OWORD *)(a1 + 184);
  uint64_t v6 = *(void *)(a1 + 216);
  uint64_t v7 = *(void *)(a1 + 224);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10013AAE4(v19, v18, v17, v2, v3, v4, v5, v16, v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10,
    *((uint64_t *)&v10 + 1),
    v6,
    v7,
    v8);
  return a1;
}

void sub_10013AAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 a23)
{
  if (a23 != 254)
  {
    sub_10013AEB4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23);
  }
}

uint64_t sub_10013AB64(uint64_t a1)
{
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 88);
  uint64_t v4 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 104);
  uint64_t v16 = *(void *)(a1 + 112);
  uint64_t v17 = *(void *)(a1 + 72);
  long long v14 = *(_OWORD *)(a1 + 136);
  long long v15 = *(_OWORD *)(a1 + 120);
  long long v12 = *(_OWORD *)(a1 + 168);
  long long v13 = *(_OWORD *)(a1 + 152);
  long long v10 = *(_OWORD *)(a1 + 200);
  long long v11 = *(_OWORD *)(a1 + 184);
  uint64_t v6 = *(void *)(a1 + 216);
  uint64_t v7 = *(void *)(a1 + 224);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 232);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10006133C(v19, v18, v17, v2, v3, v4, v5, v16, v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10,
    *((uint64_t *)&v10 + 1),
    v6,
    v7,
    v8);
  return a1;
}

uint64_t sub_10013AC64(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 184);
  int v2 = v1 ^ 0xFF;
  if ((int)(v1 ^ 0xFF) <= 1) {
    int v2 = 1;
  }
  unsigned int v3 = v2 - 1;
  if (v1 <= 1) {
    return 0;
  }
  else {
    return v3;
  }
}

uint64_t sub_10013AC84@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100130948(a1, a2);
}

uint64_t sub_10013ACA4(uint64_t a1)
{
  sub_10013AD18(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(unsigned char *)(a1 + 184));
  return a1;
}

void sub_10013AD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unsigned __int8 a24)
{
  if (a24 != 253)
  {
    sub_10006133C(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
      a21,
      a22,
      a23,
      a24);
  }
}

uint64_t sub_10013ADBC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 184);
  a2(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    v4);
  return a1;
}

uint64_t sub_10013AE3C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10013AE98(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 176);
  if (v1 > 1) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_10013AEAC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 176);
}

void sub_10013AEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 a23)
{
  if (a23 != 255)
  {
    sub_100136870(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23 & 1);
  }
}

uint64_t sub_10013AF38(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 176);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    v4);
  return a1;
}

double sub_10013AFAC(uint64_t a1)
{
  *(void *)(a1 + 176) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 184) = -3;
  return result;
}

uint64_t sub_10013AFD8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 176);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    v4);
  return a1;
}

void *sub_10013B04C(uint64_t a1, uint64_t a2)
{
  uint64_t v49 = sub_10000566C(&qword_10070A640);
  uint64_t v5 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v7 = (_DWORD *)((char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10000566C(&qword_10070D718);
  __chkstk_darwin(v8 - 8);
  long long v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  long long v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DownloadTask.CommandID(0);
  uint64_t v42 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v48 = (uint64_t)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v41 = (uint64_t)v39 - v19;
  __chkstk_darwin(v18);
  uint64_t v40 = (uint64_t)v39 - v20;
  uint64_t v53 = *(void *)(a1 + 16);
  if (!v53) {
    return _swiftEmptyArrayStorage;
  }
  v39[1] = a1;
  v39[2] = v2;
  uint64_t v52 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v44 = v5;
  long long v46 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  long long v47 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v51 = *(void *)(v12 + 72);
  swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  uint64_t v50 = _swiftEmptyArrayStorage;
  uint64_t v22 = v49;
  uint64_t v43 = a2;
  uint64_t v45 = v11;
  do
  {
    sub_10013A8B8(v52 + v51 * v21, (uint64_t)v14, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100137CF8((uint64_t)v14, type metadata accessor for TaskHistory.Running);
    }
    else
    {
      uint64_t v23 = (uint64_t)v10;
      int v24 = *((_DWORD *)v14 + 2);
      uint64_t v25 = sub_10000566C(&qword_10070B6A0);
      sub_100137CF8((uint64_t)&v14[*(int *)(v25 + 64)], type metadata accessor for ClientCommand);
      uint64_t v26 = *(void *)(a2 + 16);
      if (v26)
      {
        uint64_t v27 = v44;
        uint64_t v28 = a2 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
        swift_bridgeObjectRetain();
        uint64_t v29 = *(void *)(v27 + 72);
        while (1)
        {
          sub_1000079E4(v28, (uint64_t)v7, &qword_10070A640);
          if (*v7 == v24) {
            break;
          }
          sub_100007A48((uint64_t)v7, &qword_10070A640);
          v28 += v29;
          if (!--v26)
          {
            uint64_t v30 = 1;
            a2 = v43;
            uint64_t v22 = v49;
            goto LABEL_12;
          }
        }
        long long v10 = (char *)v23;
        sub_10001FDF0((uint64_t)v7, v23, &qword_10070A640);
        uint64_t v30 = 0;
        a2 = v43;
        uint64_t v22 = v49;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = 1;
LABEL_12:
        long long v10 = (char *)v23;
      }
      (*v47)(v10, v30, 1, v22);
      swift_bridgeObjectRelease();
      if ((*v46)(v10, 1, v22) == 1)
      {
        sub_100007A48((uint64_t)v10, &qword_10070D718);
      }
      else
      {
        uint64_t v31 = v41;
        sub_10013A8B8((uint64_t)&v10[*(int *)(v22 + 52)], v41, type metadata accessor for DownloadTask.CommandID);
        sub_100007A48((uint64_t)v10, &qword_10070A640);
        uint64_t v32 = v31;
        uint64_t v33 = v40;
        sub_10013A920(v32, v40, type metadata accessor for DownloadTask.CommandID);
        sub_10013A920(v33, v48, type metadata accessor for DownloadTask.CommandID);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v34 = (unint64_t)v50;
        }
        else {
          unint64_t v34 = sub_100018034(0, v50[2] + 1, 1, (unint64_t)v50);
        }
        unint64_t v36 = *(void *)(v34 + 16);
        unint64_t v35 = *(void *)(v34 + 24);
        if (v36 >= v35 >> 1) {
          unint64_t v34 = sub_100018034(v35 > 1, v36 + 1, 1, v34);
        }
        *(void *)(v34 + 16) = v36 + 1;
        unint64_t v37 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
        uint64_t v50 = (void *)v34;
        sub_10013A920(v48, v34 + v37 + *(void *)(v42 + 72) * v36, type metadata accessor for DownloadTask.CommandID);
        uint64_t v22 = v49;
      }
    }
    ++v21;
  }
  while (v21 != v53);
  swift_bridgeObjectRelease();
  return v50;
}

uint64_t sub_10013B5CC(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10013B5E0(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10013B5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s19MessageHeaderStatusOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_10013B658()
{
  unint64_t result = qword_10070D730;
  if (!qword_10070D730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070D730);
  }
  return result;
}

uint64_t sub_10013B6AC(uint64_t a1, int a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v78 = a6;
  uint64_t v85 = a5;
  uint64_t v93 = a4;
  uint64_t v77 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v77);
  uint64_t v90 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005E0ED0();
  uint64_t v80 = *(void *)(v11 - 8);
  uint64_t v81 = v11;
  __chkstk_darwin(v11);
  uint64_t v79 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v89 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v6 + 16);
  uint64_t v83 = *(void *)(v16 + 16);
  if (!v83) {
    return 0xFF00000000;
  }
  uint64_t v75 = a1;
  int v73 = a3 & 1;
  int v74 = a2;
  uint64_t v82 = v16 + 32;
  uint64_t v17 = swift_bridgeObjectRetain_n();
  uint64_t v87 = 0;
  long long v18 = *(_OWORD *)(v16 + 176);
  long long v106 = *(_OWORD *)(v16 + 160);
  long long v107 = v18;
  v108[0] = *(_OWORD *)(v16 + 192);
  *(_OWORD *)((char *)v108 + 9) = *(_OWORD *)(v16 + 201);
  long long v19 = *(_OWORD *)(v16 + 112);
  long long v102 = *(_OWORD *)(v16 + 96);
  long long v103 = v19;
  long long v20 = *(_OWORD *)(v16 + 144);
  long long v104 = *(_OWORD *)(v16 + 128);
  long long v105 = v20;
  long long v21 = *(_OWORD *)(v16 + 48);
  long long v98 = *(_OWORD *)(v16 + 32);
  long long v99 = v21;
  long long v22 = *(_OWORD *)(v16 + 64);
  long long v23 = *(_OWORD *)(v16 + 80);
  uint64_t v76 = v16;
  long long v100 = v22;
  long long v101 = v23;
  uint64_t v86 = 1;
  while (2)
  {
    uint64_t v84 = v98;
    LODWORD(v95[0]) = v98;
    BYTE4(v95[0]) = 0;
    __chkstk_darwin(v17);
    *((void *)&v73 - 2) = v95;
    sub_10013ADBC((uint64_t)&v98, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E304);
    uint64_t v24 = v85;
    swift_bridgeObjectRetain();
    uint64_t v25 = v24;
    uint64_t v26 = v87;
    uint64_t v27 = sub_10002CDE8((uint64_t)sub_10013DF70, (uint64_t)(&v73 - 8), v25);
    uint64_t v87 = v26;
    int64_t v28 = *(void *)(v27 + 16);
    if (v28)
    {
      uint64_t v96 = (uint64_t)_swiftEmptyArrayStorage;
      sub_10001AA94(0, v28, 0);
      uint64_t v29 = (void *)v96;
      unint64_t v30 = *(void *)(v96 + 16);
      uint64_t v31 = 32;
      do
      {
        int v32 = *(_DWORD *)(v27 + v31);
        uint64_t v96 = (uint64_t)v29;
        unint64_t v33 = v29[3];
        if (v30 >= v33 >> 1)
        {
          sub_10001AA94(v33 > 1, v30 + 1, 1);
          uint64_t v29 = (void *)v96;
        }
        v29[2] = v30 + 1;
        *((_DWORD *)v29 + v30 + 8) = v32;
        v31 += 12;
        ++v30;
        --v28;
      }
      while (v28);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v29 = _swiftEmptyArrayStorage;
    }
    uint64_t v34 = (uint64_t)v90;
    uint64_t v92 = v29[2];
    if (!v92)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    uint64_t v91 = v29 + 4;
    uint64_t v35 = *(void *)(v93 + 16);
    swift_bridgeObjectRetain();
    uint64_t v36 = 0;
    uint64_t v88 = v35;
    while (!v35)
    {
LABEL_13:
      if (++v36 == v92)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
LABEL_24:
        swift_bridgeObjectRelease();
        uint64_t v53 = v79;
        uint64_t v52 = v80;
        uint64_t v54 = v78;
        uint64_t v55 = v81;
        (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v79, v78, v81);
        sub_10013A8B8(v54, v34, type metadata accessor for MailboxTaskLogger);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        sub_10013ADBC((uint64_t)&v98, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E304);
        sub_10013ADBC((uint64_t)&v98, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E304);
        uint64_t v56 = sub_1005E0EB0();
        os_log_type_t v57 = sub_1005E25C0();
        int v58 = v57;
        if (os_log_type_enabled(v56, v57))
        {
          uint64_t v59 = swift_slowAlloc();
          LODWORD(v93) = v58;
          uint64_t v60 = v59;
          uint64_t v92 = swift_slowAlloc();
          v95[0] = v92;
          *(_DWORD *)uint64_t v60 = 68159491;
          LODWORD(v96) = 2;
          sub_1005E2960();
          *(_WORD *)(v60 + 8) = 256;
          uint64_t v61 = v34 + *(int *)(v77 + 20);
          LOBYTE(v96) = *(unsigned char *)v61;
          sub_1005E2960();
          *(_WORD *)(v60 + 11) = 2082;
          uint64_t v62 = *(void *)(v61 + 8);
          unint64_t v63 = *(void *)(v61 + 16);
          swift_bridgeObjectRetain();
          uint64_t v96 = sub_1000C6914(v62, v63, v95);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v60 + 21) = 1040;
          LODWORD(v96) = 2;
          sub_1005E2960();
          *(_WORD *)(v60 + 27) = 512;
          LOWORD(v96) = *(_WORD *)(v61 + 24);
          sub_1005E2960();
          *(_WORD *)(v60 + 31) = 2160;
          uint64_t v96 = 0x786F626C69616DLL;
          sub_1005E2960();
          *(_WORD *)(v60 + 41) = 2085;
          int v64 = *(_DWORD *)(v61 + 40);
          uint64_t v96 = *(void *)(v61 + 32);
          int v97 = v64;
          swift_bridgeObjectRetain();
          uint64_t v65 = sub_1005E1CC0();
          uint64_t v96 = sub_1000C6914(v65, v66, v95);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_100137CF8(v34, type metadata accessor for MailboxTaskLogger);
          *(_WORD *)(v60 + 51) = 1024;
          sub_10013ADBC((uint64_t)&v98, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
          uint64_t v67 = v84;
          LODWORD(v96) = v84;
          sub_1005E2960();
          sub_10013ADBC((uint64_t)&v98, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
          _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v93, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Requesting sections to download for message %u.", (uint8_t *)v60, 0x39u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v81);
          uint64_t v68 = v75;
          int v69 = v74;
        }
        else
        {
          sub_10013ADBC((uint64_t)&v98, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
          sub_100137CF8(v34, type metadata accessor for MailboxTaskLogger);
          sub_10013ADBC((uint64_t)&v98, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);

          (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v55);
          uint64_t v68 = v75;
          int v69 = v74;
          uint64_t v67 = v84;
        }
        sub_1001359F8((long long *)((char *)&v98 + 8), (uint64_t)&v96);
        if (sub_10006196C((uint64_t)&v96) == 1)
        {
          sub_10013668C((uint64_t)v94);
        }
        else
        {
          sub_10013A988((uint64_t)&v96, (uint64_t)v94);
          UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v94);
        }
        sub_10001FDF0((uint64_t)v94, (uint64_t)v95, &qword_10070A8D8);
        uint64_t v70 = swift_allocObject();
        *(void *)(v70 + 16) = v68;
        *(_DWORD *)(v70 + 24) = v69;
        *(unsigned char *)(v70 + 28) = v73;
        int v71 = DWORD1(v98);
        *(_DWORD *)(v70 + 32) = v67;
        *(_DWORD *)(v70 + 36) = v71;
        sub_10001FDF0((uint64_t)v95, v70 + 40, &qword_10070A8D8);
        swift_bridgeObjectRetain();
        return v67;
      }
    }
    int v37 = *((_DWORD *)v91 + v36);
    uint64_t v38 = v89;
    uint64_t v39 = v93 + ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80));
    swift_bridgeObjectRetain_n();
    uint64_t v40 = *(void *)(v38 + 72);
    while (1)
    {
      sub_10013A8B8(v39, (uint64_t)v15, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1) {
        break;
      }
      sub_100137CF8((uint64_t)v15, type metadata accessor for TaskHistory.Previous);
LABEL_17:
      v39 += v40;
      if (!--v35)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v34 = (uint64_t)v90;
        uint64_t v35 = v88;
        goto LABEL_13;
      }
    }
    int v41 = *((_DWORD *)v15 + 2);
    sub_10007C4A4(*(void *)v15);
    if (v41 != v37) {
      goto LABEL_17;
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v17 = sub_10013ADBC((uint64_t)&v98, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013E348);
    if (v86 != v83)
    {
      uint64_t v42 = (long long *)(v82 + 192 * v86);
      long long v43 = *v42;
      long long v44 = v42[1];
      long long v45 = v42[3];
      long long v100 = v42[2];
      long long v101 = v45;
      long long v98 = v43;
      long long v99 = v44;
      long long v46 = v42[4];
      long long v47 = v42[5];
      long long v48 = v42[7];
      long long v104 = v42[6];
      long long v105 = v48;
      long long v102 = v46;
      long long v103 = v47;
      long long v49 = v42[8];
      long long v50 = v42[9];
      long long v51 = v42[10];
      *(_OWORD *)((char *)v108 + 9) = *(long long *)((char *)v42 + 169);
      long long v107 = v50;
      v108[0] = v51;
      long long v106 = v49;
      ++v86;
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease_n();
  return 0xFF00000000;
}

uint64_t sub_10013C060(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v73 = a2;
  uint64_t v78 = type metadata accessor for MessageHeader();
  uint64_t v8 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  unint64_t v63 = &v59[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v75 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = &v59[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = _s19MessageHeaderStatusOMa(0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v65 = &v59[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  uint64_t v17 = &v59[-v16];
  uint64_t v66 = v4;
  uint64_t v18 = *(void *)(v4 + 24);
  uint64_t v19 = *(void *)(v18 + 16);
  if (!v19) {
    return 0xFF00000000;
  }
  int v60 = a4;
  uint64_t v61 = a3;
  uint64_t v76 = _s25MessageSectionsToDownloadVMa(0);
  uint64_t v20 = *(void *)(v76 - 8);
  unint64_t v62 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v21 = v18 + v62;
  uint64_t v22 = *(void *)(v20 + 72);
  uint64_t v77 = (void *)(v8 + 48);
  uint64_t v64 = v18;
  swift_bridgeObjectRetain();
  unint64_t v23 = 0;
  uint64_t v74 = 0;
  uint64_t v80 = a1;
  uint64_t v69 = v19;
  uint64_t v70 = v17;
  uint64_t v67 = v22;
  uint64_t v68 = v21;
LABEL_5:
  uint64_t v24 = v19;
  unint64_t v82 = v23;
  uint64_t v25 = v22 * v23;
  uint64_t v26 = (int *)(v21 + v22 * v23);
  sub_10013A8B8((uint64_t)v26 + *(int *)(v76 + 20), (uint64_t)v17, _s19MessageHeaderStatusOMa);
  uint64_t v27 = (unsigned int (*)(unsigned char *, uint64_t, uint64_t))*v77;
  int v28 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))*v77)(v17, 3, v78);
  uint64_t v29 = sub_100137CF8((uint64_t)v17, _s19MessageHeaderStatusOMa);
  if (v28)
  {
    uint64_t v19 = v24;
    goto LABEL_4;
  }
  uint64_t v71 = v25;
  uint64_t v72 = v27;
  int v84 = *v26;
  char v85 = 1;
  __chkstk_darwin(v29);
  *(void *)&v59[-16] = &v84;
  uint64_t v30 = v73;
  swift_bridgeObjectRetain();
  uint64_t v31 = v74;
  uint64_t v32 = sub_10002CDE8((uint64_t)sub_10013DF70, (uint64_t)&v59[-32], v30);
  uint64_t v74 = v31;
  int64_t v33 = *(void *)(v32 + 16);
  if (v33)
  {
    uint64_t v83 = _swiftEmptyArrayStorage;
    sub_10001AA94(0, v33, 0);
    uint64_t v34 = v83;
    unint64_t v35 = v83[2];
    uint64_t v36 = 32;
    do
    {
      int v37 = *(_DWORD *)(v32 + v36);
      uint64_t v83 = v34;
      unint64_t v38 = v34[3];
      if (v35 >= v38 >> 1)
      {
        sub_10001AA94(v38 > 1, v35 + 1, 1);
        uint64_t v34 = v83;
      }
      _OWORD v34[2] = v35 + 1;
      *((_DWORD *)v34 + v35 + 8) = v37;
      v36 += 12;
      ++v35;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = _swiftEmptyArrayStorage;
  }
  uint64_t v39 = v80;
  uint64_t v81 = v34[2];
  if (v81)
  {
    uint64_t v79 = v34 + 4;
    uint64_t v40 = *(void *)(v80 + 16);
    swift_bridgeObjectRetain();
    uint64_t v41 = 0;
    while (!v40)
    {
LABEL_16:
      if (++v41 == v81)
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease_n();
        goto LABEL_27;
      }
    }
    int v42 = *((_DWORD *)v79 + v41);
    uint64_t v43 = v75;
    uint64_t v44 = v39 + ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80));
    swift_bridgeObjectRetain_n();
    uint64_t v45 = *(void *)(v43 + 72);
    uint64_t v46 = v40;
    while (1)
    {
      sub_10013A8B8(v44, (uint64_t)v12, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        int v47 = *((_DWORD *)v12 + 2);
        sub_10007C4A4(*(void *)v12);
        if (v47 == v42)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          uint64_t v19 = v69;
          uint64_t v17 = v70;
          uint64_t v22 = v67;
          uint64_t v21 = v68;
LABEL_4:
          unint64_t v23 = v82 + 1;
          if (v82 + 1 == v19)
          {
            swift_bridgeObjectRelease();
            return 0xFF00000000;
          }
          goto LABEL_5;
        }
      }
      else
      {
        sub_100137CF8((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
      }
      v44 += v45;
      if (!--v46)
      {
        uint64_t v39 = v80;
        swift_bridgeObjectRelease_n();
        goto LABEL_16;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_27:
  long long v49 = v65;
  uint64_t v50 = *(void *)(v66 + 24);
  long long v51 = v72;
  if (v82 >= *(void *)(v50 + 16))
  {
    __break(1u);
  }
  else
  {
    uint64_t v52 = (unsigned int *)(v50 + v62 + v71);
    uint64_t v53 = *v52;
    sub_10013A8B8((uint64_t)v52 + *(int *)(v76 + 20), (uint64_t)v65, _s19MessageHeaderStatusOMa);
    if (v51(v49, 3, v78))
    {
      sub_100137CF8((uint64_t)v49, _s19MessageHeaderStatusOMa);
      return 0xFF00000000;
    }
    uint64_t v55 = v63;
    sub_10013A920((uint64_t)v49, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for MessageHeader);
    uint64_t v56 = sub_10000566C(&qword_10070D748);
    swift_allocBox();
    uint64_t v58 = v57 + *(int *)(v56 + 64);
    *(void *)uint64_t v57 = v61;
    *(_DWORD *)(v57 + 8) = v60;
    *(_DWORD *)(v57 + 12) = v53;
    sub_10013A920((uint64_t)v55, v58, (uint64_t (*)(void))type metadata accessor for MessageHeader);
    unint64_t v54 = v53 | (unint64_t)&_mh_execute_header;
    swift_bridgeObjectRetain();
    return v54;
  }
  return result;
}

void sub_10013C704()
{
  unsigned int v1 = *(void **)(v0 + 24);
  uint64_t v2 = v1[2];
  if (v2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_47:
    }
      unsigned int v1 = (void *)sub_100093490((unint64_t)v1);
    unint64_t v3 = 0;
    uint64_t v88 = v1;
    uint64_t v89 = v2;
    do
    {
      if (v3 == v2) {
        goto LABEL_42;
      }
      if (v3 >= v1[2]) {
        goto LABEL_43;
      }
      uint64_t v4 = _s25MessageSectionsToDownloadVMa(0);
      uint64_t v5 = (_DWORD *)((char *)v1
                    + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80))
                    + *(void *)(*(void *)(v4 - 8) + 72) * v3);
      uint64_t v6 = (char *)v5 + *(int *)(v4 + 24);
      uint64_t v7 = *(void *)v6;
      uint64_t v8 = *(void *)(*(void *)v6 + 16);
      if (v8)
      {
        uint64_t v9 = 0;
        uint64_t v10 = 34;
        uint64_t v11 = 86;
        while ((*(unsigned char *)(v7 + v11) & 1) == 0)
        {
          ++v9;
          v11 += 240;
          v10 += 30;
          if (v8 == v9)
          {
            unint64_t v12 = *(void *)(*(void *)v6 + 16);
            uint64_t v9 = v12;
            goto LABEL_16;
          }
        }
        unint64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_46;
        }
        unint64_t v12 = *(void *)(*(void *)v6 + 16);
        if (v13 != v8)
        {
          while (v13 < v12)
          {
            if ((*(unsigned char *)(v7 + v10 * 8 + 54) & 1) == 0)
            {
              if (v13 != v9)
              {
                if (v9 < 0) {
                  goto LABEL_38;
                }
                if (v9 >= v12) {
                  goto LABEL_39;
                }
                uint64_t v2 = 240 * v9;
                uint64_t v15 = (long long *)(v7 + 32 + 240 * v9);
                long long v16 = *v15;
                long long v17 = v15[2];
                long long v96 = v15[1];
                long long v97 = v17;
                long long v95 = v16;
                long long v18 = v15[3];
                long long v19 = v15[4];
                long long v20 = v15[6];
                long long v100 = v15[5];
                long long v101 = v20;
                long long v98 = v18;
                long long v99 = v19;
                long long v21 = v15[7];
                long long v22 = v15[8];
                long long v23 = v15[10];
                long long v104 = v15[9];
                long long v105 = v23;
                long long v102 = v21;
                long long v103 = v22;
                long long v24 = v15[11];
                long long v25 = v15[12];
                long long v26 = v15[13];
                *(_OWORD *)((char *)v108 + 9) = *(long long *)((char *)v15 + 217);
                long long v107 = v25;
                v108[0] = v26;
                long long v106 = v24;
                if (v13 >= *(void *)(*(void *)v6 + 16)) {
                  goto LABEL_40;
                }
                uint64_t v27 = (long long *)(*(void *)v6 + v10 * 8);
                long long v28 = *v27;
                long long v29 = v27[2];
                long long v110 = v27[1];
                long long v111 = v29;
                long long v109 = v28;
                long long v30 = v27[3];
                long long v31 = v27[4];
                long long v32 = v27[6];
                long long v114 = v27[5];
                long long v115 = v32;
                long long v112 = v30;
                long long v113 = v31;
                long long v33 = v27[7];
                long long v34 = v27[8];
                long long v35 = v27[10];
                long long v118 = v27[9];
                long long v119 = v35;
                long long v116 = v33;
                long long v117 = v34;
                long long v36 = v27[11];
                long long v37 = v27[12];
                long long v38 = v27[13];
                *(_OWORD *)((char *)v122 + 9) = *(long long *)((char *)v27 + 217);
                long long v121 = v37;
                v122[0] = v38;
                long long v120 = v36;
                uint64_t v39 = *(void **)v6;
                sub_10013A9E4((uint64_t)&v95);
                sub_10013A9E4((uint64_t)&v109);
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *(void *)uint64_t v6 = v39;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  uint64_t v39 = sub_100093520(v39);
                  *(void *)uint64_t v6 = v39;
                }
                uint64_t v41 = (_OWORD *)((char *)v39 + v2);
                long long v42 = *(_OWORD *)((char *)v39 + v2 + 32);
                long long v43 = *(_OWORD *)((char *)v39 + v2 + 64);
                v93[1] = *(_OWORD *)((char *)v39 + v2 + 48);
                v93[2] = v43;
                v93[0] = v42;
                long long v44 = *(_OWORD *)((char *)v39 + v2 + 80);
                long long v45 = *(_OWORD *)((char *)v39 + v2 + 96);
                long long v46 = *(_OWORD *)((char *)v39 + v2 + 128);
                v93[5] = *(_OWORD *)((char *)v39 + v2 + 112);
                v93[6] = v46;
                v93[3] = v44;
                unsigned char v93[4] = v45;
                long long v47 = *(_OWORD *)((char *)v39 + v2 + 144);
                long long v48 = *(_OWORD *)((char *)v39 + v2 + 160);
                long long v49 = *(_OWORD *)((char *)v39 + v2 + 192);
                v93[9] = *(_OWORD *)((char *)v39 + v2 + 176);
                v93[10] = v49;
                v93[7] = v47;
                v93[8] = v48;
                long long v50 = *(_OWORD *)((char *)v39 + v2 + 208);
                long long v51 = *(_OWORD *)((char *)v39 + v2 + 224);
                long long v52 = *(_OWORD *)((char *)v39 + v2 + 240);
                *(_OWORD *)((char *)v94 + 9) = *(_OWORD *)((char *)v39 + v2 + 249);
                v93[12] = v51;
                v94[0] = v52;
                v93[11] = v50;
                long long v53 = v109;
                long long v54 = v111;
                v41[3] = v110;
                v41[4] = v54;
                v41[2] = v53;
                long long v55 = v112;
                long long v56 = v113;
                long long v57 = v115;
                v41[7] = v114;
                v41[8] = v57;
                v41[5] = v55;
                v41[6] = v56;
                long long v58 = v116;
                long long v59 = v117;
                long long v60 = v119;
                v41[11] = v118;
                v41[12] = v60;
                v41[9] = v58;
                v41[10] = v59;
                long long v61 = v120;
                long long v62 = v121;
                long long v63 = v122[0];
                *(_OWORD *)((char *)v41 + 249) = *(_OWORD *)((char *)v122 + 9);
                v41[14] = v62;
                v41[15] = v63;
                v41[13] = v61;
                sub_10013AB64((uint64_t)v93);
                unsigned int v1 = *(void **)v6;
                char v64 = swift_isUniquelyReferenced_nonNull_native();
                *(void *)uint64_t v6 = v1;
                if ((v64 & 1) == 0)
                {
                  unsigned int v1 = sub_100093520(v1);
                  *(void *)uint64_t v6 = v1;
                }
                if (v13 >= v1[2]) {
                  goto LABEL_41;
                }
                uint64_t v65 = &v1[v10];
                long long v66 = *(_OWORD *)&v1[v10];
                long long v67 = *(_OWORD *)&v1[v10 + 4];
                v91[1] = *(_OWORD *)&v1[v10 + 2];
                v91[2] = v67;
                v91[0] = v66;
                long long v68 = *(_OWORD *)&v1[v10 + 6];
                long long v69 = *(_OWORD *)&v1[v10 + 8];
                long long v70 = *(_OWORD *)&v1[v10 + 12];
                v91[5] = *(_OWORD *)&v1[v10 + 10];
                v91[6] = v70;
                v91[3] = v68;
                v91[4] = v69;
                long long v71 = *(_OWORD *)&v1[v10 + 14];
                long long v72 = *(_OWORD *)&v1[v10 + 16];
                long long v73 = *(_OWORD *)&v1[v10 + 20];
                v91[9] = *(_OWORD *)&v1[v10 + 18];
                v91[10] = v73;
                v91[7] = v71;
                v91[8] = v72;
                long long v74 = *(_OWORD *)&v1[v10 + 22];
                long long v75 = *(_OWORD *)&v1[v10 + 24];
                long long v76 = *(_OWORD *)&v1[v10 + 26];
                *(_OWORD *)&v92[9] = *(_OWORD *)((char *)&v1[v10 + 27] + 1);
                v91[12] = v75;
                *(_OWORD *)uint64_t v92 = v76;
                v91[11] = v74;
                long long v77 = v95;
                long long v78 = v97;
                v65[1] = v96;
                v65[2] = v78;
                *uint64_t v65 = v77;
                long long v79 = v98;
                long long v80 = v99;
                long long v81 = v101;
                v65[5] = v100;
                v65[6] = v81;
                _OWORD v65[3] = v79;
                v65[4] = v80;
                long long v82 = v102;
                long long v83 = v103;
                long long v84 = v105;
                v65[9] = v104;
                v65[10] = v84;
                v65[7] = v82;
                v65[8] = v83;
                long long v85 = v106;
                long long v86 = v107;
                long long v87 = v108[0];
                *(_OWORD *)((char *)v65 + 217) = *(_OWORD *)((char *)v108 + 9);
                v65[12] = v86;
                v65[13] = v87;
                _OWORD v65[11] = v85;
                sub_10013AB64((uint64_t)v91);
              }
              if (__OFADD__(v9++, 1)) {
                goto LABEL_37;
              }
              uint64_t v7 = *(void *)v6;
              unint64_t v12 = *(void *)(*(void *)v6 + 16);
            }
            ++v13;
            v10 += 30;
            if (v13 == v12) {
              goto LABEL_15;
            }
          }
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
LABEL_15:
        unsigned int v1 = v88;
        uint64_t v2 = v89;
        if ((uint64_t)v12 < v9) {
          goto LABEL_44;
        }
      }
      else
      {
        unint64_t v12 = 0;
        uint64_t v9 = 0;
      }
LABEL_16:
      sub_1000D7C34(v9, v12);
      if (v3 >= v1[2]) {
        goto LABEL_45;
      }
      if (v8 != *(void *)(*(void *)((char *)v5 + *(int *)(v4 + 24)) + 16))
      {
        LODWORD(v95) = *v5;
        _s18InProgressMessagesVMa(0);
        sub_10000566C(&qword_100709E38);
        MessageIdentifierSet.insert(_:)();
      }
      ++v3;
    }
    while (v3 != v2);
    *(void *)(v90 + 24) = v1;
  }
}

unint64_t sub_10013CBC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v131 = a3;
  uint64_t v135 = a2;
  uint64_t v158 = a1;
  uint64_t v124 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v4 = __chkstk_darwin(v124);
  uint64_t v6 = (char *)&v122 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v123 = (uint64_t)&v122 - v7;
  uint64_t v132 = sub_1005E0ED0();
  uint64_t v130 = *(void *)(v132 - 8);
  uint64_t v8 = __chkstk_darwin(v132);
  uint64_t v10 = (char *)&v122 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v127 = (char *)&v122 - v11;
  uint64_t v12 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v141 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = type metadata accessor for MessageHeader();
  uint64_t v15 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  uint64_t v129 = (uint64_t)&v122 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_10000566C(&qword_10070D6E8);
  __chkstk_darwin(v138);
  uint64_t v146 = (uint64_t)&v122 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = _s25MessageSectionsToDownloadVMa(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v149 = (_DWORD *)((char *)&v122 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = __chkstk_darwin(v20);
  long long v24 = (char *)&v122 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  unint64_t v134 = (int *)((char *)&v122 - v26);
  uint64_t v27 = __chkstk_darwin(v25);
  int v155 = (int *)((char *)&v122 - v28);
  __chkstk_darwin(v27);
  uint64_t v157 = (uint64_t)&v122 - v29;
  uint64_t v30 = _s19MessageHeaderStatusOMa(0);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v145 = (uint64_t)&v122 - v33;
  __chkstk_darwin(v32);
  uint64_t v153 = (uint64_t)&v122 - v35;
  uint64_t v128 = v3;
  uint64_t v36 = *(void *)(v3 + 24);
  uint64_t v152 = *(void *)(v36 + 16);
  if (!v152) {
    goto LABEL_39;
  }
  uint64_t v133 = v34;
  long long v143 = v10;
  unint64_t v122 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v151 = v36 + v122;
  uint64_t v150 = *(void *)(v19 + 72);
  long long v37 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  long long v137 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v125 = v36;
  swift_bridgeObjectRetain();
  unint64_t v38 = 0;
  uint64_t v139 = 0;
  uint64_t v140 = v18;
  long long v142 = v6;
  uint64_t v156 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  unint64_t v126 = v24;
  uint64_t v136 = v12;
  while (2)
  {
    unint64_t v160 = v38;
    uint64_t v40 = v150 * v38;
    uint64_t v41 = v151 + v150 * v38;
    uint64_t v42 = v153;
    sub_10013A8B8(v41 + *(int *)(v18 + 20), v153, _s19MessageHeaderStatusOMa);
    long long v43 = *v37;
    uint64_t v44 = v154;
    int v45 = (*v37)(v42, 3, v154);
    sub_100137CF8(v42, _s19MessageHeaderStatusOMa);
    uint64_t v46 = *(void *)(*(void *)(v41 + *(int *)(v18 + 24)) + 16);
    uint64_t v47 = v157;
    sub_10013A8B8(v41, v157, _s25MessageSectionsToDownloadVMa);
    if (v46)
    {
      sub_100137CF8(v47, _s25MessageSectionsToDownloadVMa);
      uint64_t v39 = v155;
      sub_10013A8B8(v41, (uint64_t)v155, _s25MessageSectionsToDownloadVMa);
      goto LABEL_4;
    }
    uint64_t v147 = v41;
    uint64_t v148 = v40;
    LODWORD(v159) = v45;
    uint64_t v48 = v47 + *(int *)(v18 + 20);
    uint64_t v49 = v145;
    (*v137)(v145, 1, 3, v44);
    uint64_t v50 = v146;
    uint64_t v51 = v146 + *(int *)(v138 + 48);
    sub_10013A8B8(v48, v146, _s19MessageHeaderStatusOMa);
    sub_10013A8B8(v49, v51, _s19MessageHeaderStatusOMa);
    int v52 = v43(v50, 3, v44);
    uint64_t v18 = v140;
    int v53 = v159;
    switch(v52)
    {
      case 1:
        BOOL v57 = v43(v51, 3, v44) == 1;
        goto LABEL_12;
      case 2:
        BOOL v57 = v43(v51, 3, v44) == 2;
        goto LABEL_12;
      case 3:
        BOOL v57 = v43(v51, 3, v44) == 3;
LABEL_12:
        long long v56 = v149;
        if (!v57) {
          goto LABEL_16;
        }
        sub_100137CF8(v146, _s19MessageHeaderStatusOMa);
        uint64_t v58 = v147;
        goto LABEL_15;
      default:
        uint64_t v54 = v146;
        uint64_t v55 = v133;
        sub_10013A8B8(v146, v133, _s19MessageHeaderStatusOMa);
        if (v43(v51, 3, v44))
        {
          sub_100137CF8(v55, (uint64_t (*)(void))type metadata accessor for MessageHeader);
          long long v56 = v149;
          int v53 = v159;
LABEL_16:
          sub_100007A48(v146, &qword_10070D6E8);
          uint64_t v58 = v147;
        }
        else
        {
          uint64_t v82 = v129;
          sub_10013A920(v51, v129, (uint64_t (*)(void))type metadata accessor for MessageHeader);
          char v83 = static MessageHeader.== infix(_:_:)();
          sub_100137CF8(v82, (uint64_t (*)(void))type metadata accessor for MessageHeader);
          uint64_t v18 = v140;
          sub_100137CF8(v55, (uint64_t (*)(void))type metadata accessor for MessageHeader);
          sub_100137CF8(v54, _s19MessageHeaderStatusOMa);
          long long v56 = v149;
          int v53 = v159;
          uint64_t v58 = v147;
          if (v83)
          {
LABEL_15:
            sub_100137CF8(v145, _s19MessageHeaderStatusOMa);
            sub_100137CF8(v157, _s25MessageSectionsToDownloadVMa);
            uint64_t v59 = v58;
            uint64_t v39 = v155;
            uint64_t v60 = sub_10013A8B8(v59, (uint64_t)v155, _s25MessageSectionsToDownloadVMa);
            goto LABEL_18;
          }
        }
        sub_100137CF8(v145, _s19MessageHeaderStatusOMa);
        sub_100137CF8(v157, _s25MessageSectionsToDownloadVMa);
        uint64_t v61 = v58;
        uint64_t v39 = v155;
        uint64_t v60 = sub_10013A8B8(v61, (uint64_t)v155, _s25MessageSectionsToDownloadVMa);
        if (v53) {
          goto LABEL_4;
        }
LABEL_18:
        int v164 = *v39;
        char v165 = 2;
        __chkstk_darwin(v60);
        *(&v122 - 2) = (unint64_t)&v164;
        uint64_t v62 = v135;
        swift_bridgeObjectRetain();
        uint64_t v63 = v62;
        uint64_t v64 = v139;
        uint64_t v65 = sub_10002CDE8((uint64_t)sub_10013DF70, (uint64_t)(&v122 - 4), v63);
        uint64_t v139 = v64;
        int64_t v66 = *(void *)(v65 + 16);
        if (v66)
        {
          v166[0] = _swiftEmptyArrayStorage;
          sub_10001AA94(0, v66, 0);
          long long v67 = (void *)v166[0];
          unint64_t v68 = *(void *)(v166[0] + 16);
          uint64_t v69 = 32;
          do
          {
            int v70 = *(_DWORD *)(v65 + v69);
            v166[0] = v67;
            unint64_t v71 = v67[3];
            if (v68 >= v71 >> 1)
            {
              sub_10001AA94(v71 > 1, v68 + 1, 1);
              long long v67 = (void *)v166[0];
            }
            v67[2] = v68 + 1;
            *((_DWORD *)v67 + v68 + 8) = v70;
            v69 += 12;
            ++v68;
            --v66;
          }
          while (v66);
          swift_bridgeObjectRelease();
          uint64_t v72 = (uint64_t)v142;
          long long v56 = v149;
        }
        else
        {
          swift_bridgeObjectRelease();
          long long v67 = _swiftEmptyArrayStorage;
          uint64_t v72 = (uint64_t)v142;
        }
        long long v73 = v143;
        uint64_t v74 = v148;
        uint64_t v147 = v67[2];
        if (v147)
        {
          uint64_t v144 = v67 + 4;
          uint64_t v159 = *(void *)(v158 + 16);
          swift_bridgeObjectRetain();
          uint64_t v75 = 0;
          while (!v159)
          {
LABEL_28:
            if (++v75 == v147)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_42;
            }
          }
          int v76 = *((_DWORD *)v144 + v75);
          uint64_t v77 = v141;
          uint64_t v78 = v158 + ((*(unsigned __int8 *)(v141 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80));
          swift_bridgeObjectRetain_n();
          uint64_t v79 = *(void *)(v77 + 72);
          uint64_t v80 = v159;
          while (1)
          {
            sub_10013A8B8(v78, (uint64_t)v14, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1) {
              break;
            }
            sub_100137CF8((uint64_t)v14, type metadata accessor for TaskHistory.Previous);
LABEL_32:
            v78 += v79;
            if (!--v80)
            {
              swift_bridgeObjectRelease_n();
              uint64_t v72 = (uint64_t)v142;
              long long v73 = v143;
              uint64_t v74 = v148;
              long long v56 = v149;
              goto LABEL_28;
            }
          }
          int v81 = *((_DWORD *)v14 + 2);
          sub_10007C4A4(*(void *)v14);
          if (v81 != v76) {
            goto LABEL_32;
          }
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          uint64_t v18 = v140;
          uint64_t v39 = v155;
LABEL_4:
          sub_100137CF8((uint64_t)v39, _s25MessageSectionsToDownloadVMa);
          unint64_t v38 = v160 + 1;
          long long v37 = v156;
          if (v160 + 1 == v152)
          {
            swift_bridgeObjectRelease();
LABEL_39:
            uint64_t v84 = 0;
            unsigned __int8 v85 = 1;
            goto LABEL_51;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_42:
        sub_100137CF8((uint64_t)v155, _s25MessageSectionsToDownloadVMa);
        swift_bridgeObjectRelease();
        uint64_t v86 = *(void *)(v128 + 24);
        uint64_t v87 = v132;
        uint64_t v88 = v130;
        uint64_t v89 = (uint64_t)v126;
        if (v160 >= *(void *)(v86 + 16))
        {
          __break(1u);
          JUMPOUT(0x10013DF60);
        }
        uint64_t v90 = v86 + v122 + v74;
        uint64_t v91 = v134;
        sub_10013A8B8(v90, (uint64_t)v134, _s25MessageSectionsToDownloadVMa);
        int v92 = *v91;
        sub_1001326AC(v92, (uint64_t)&v164);
        sub_10013ACA4((uint64_t)&v164);
        sub_10001FDF0((uint64_t)&v164, (uint64_t)v166, &qword_10070D700);
        if (sub_10013AC64((uint64_t)v166) == 1)
        {
          LODWORD(v160) = v92;
          uint64_t v93 = v131;
          (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v127, v131, v87);
          uint64_t v94 = v123;
          sub_10013A8B8(v93, v123, type metadata accessor for MailboxTaskLogger);
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          long long v95 = sub_1005E0EB0();
          os_log_type_t v96 = sub_1005E2590();
          int v97 = v96;
          if (os_log_type_enabled(v95, v96))
          {
            uint64_t v98 = swift_slowAlloc();
            uint64_t v159 = swift_slowAlloc();
            uint64_t v163 = v159;
            *(_DWORD *)uint64_t v98 = 68159491;
            LODWORD(v161) = 2;
            sub_1005E2960();
            *(_WORD *)(v98 + 8) = 256;
            uint64_t v99 = *(int *)(v124 + 20);
            LODWORD(v158) = v97;
            uint64_t v100 = v94;
            uint64_t v101 = v94 + v99;
            LOBYTE(v161) = *(unsigned char *)(v94 + v99);
            sub_1005E2960();
            *(_WORD *)(v98 + 11) = 2082;
            uint64_t v102 = *(void *)(v101 + 8);
            unint64_t v103 = *(void *)(v101 + 16);
            swift_bridgeObjectRetain();
            uint64_t v161 = sub_1000C6914(v102, v103, &v163);
            sub_1005E2960();
            uint64_t v89 = (uint64_t)v126;
            swift_bridgeObjectRelease();
            *(_WORD *)(v98 + 21) = 1040;
            LODWORD(v161) = 2;
            sub_1005E2960();
            *(_WORD *)(v98 + 27) = 512;
            LOWORD(v161) = *(_WORD *)(v101 + 24);
            sub_1005E2960();
            *(_WORD *)(v98 + 31) = 2160;
            uint64_t v161 = 0x786F626C69616DLL;
            long long v56 = v149;
            sub_1005E2960();
            *(_WORD *)(v98 + 41) = 2085;
            int v104 = *(_DWORD *)(v101 + 40);
            uint64_t v161 = *(void *)(v101 + 32);
            int v162 = v104;
            swift_bridgeObjectRetain();
            uint64_t v105 = sub_1005E1CC0();
            uint64_t v161 = sub_1000C6914(v105, v106, &v163);
            uint64_t v87 = v132;
            sub_1005E2960();
            uint64_t v72 = (uint64_t)v142;
            swift_bridgeObjectRelease();
            sub_100137CF8(v100, type metadata accessor for MailboxTaskLogger);
            *(_WORD *)(v98 + 51) = 1024;
            LODWORD(v161) = v160;
            long long v73 = v143;
            sub_1005E2960();
            _os_log_impl((void *)&_mh_execute_header, v95, (os_log_type_t)v158, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Completed download for message %u, but we don’t have a body structure for this message.", (uint8_t *)v98, 0x39u);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v88 = v130;
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v88 + 8))(v127, v87);
          }
          else
          {
            sub_100137CF8(v94, type metadata accessor for MailboxTaskLogger);

            (*(void (**)(char *, uint64_t))(v88 + 8))(v127, v87);
            uint64_t v89 = (uint64_t)v126;
          }
        }
        uint64_t v107 = v131;
        (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v73, v131, v87);
        sub_10013A8B8(v107, v72, type metadata accessor for MailboxTaskLogger);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v108 = v134;
        sub_10013A8B8((uint64_t)v134, v89, _s25MessageSectionsToDownloadVMa);
        sub_10013A8B8((uint64_t)v108, (uint64_t)v56, _s25MessageSectionsToDownloadVMa);
        long long v109 = sub_1005E0EB0();
        os_log_type_t v110 = sub_1005E25C0();
        int v111 = v110;
        if (os_log_type_enabled(v109, v110))
        {
          uint64_t v112 = swift_slowAlloc();
          LODWORD(v160) = v111;
          uint64_t v113 = v112;
          uint64_t v159 = swift_slowAlloc();
          uint64_t v163 = v159;
          *(_DWORD *)uint64_t v113 = 68159747;
          LODWORD(v161) = 2;
          sub_1005E2960();
          *(_WORD *)(v113 + 8) = 256;
          uint64_t v114 = v72 + *(int *)(v124 + 20);
          LOBYTE(v161) = *(unsigned char *)v114;
          sub_1005E2960();
          *(_WORD *)(v113 + 11) = 2082;
          uint64_t v115 = *(void *)(v114 + 8);
          unint64_t v116 = *(void *)(v114 + 16);
          swift_bridgeObjectRetain();
          uint64_t v161 = sub_1000C6914(v115, v116, &v163);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v113 + 21) = 1040;
          LODWORD(v161) = 2;
          sub_1005E2960();
          *(_WORD *)(v113 + 27) = 512;
          LOWORD(v161) = *(_WORD *)(v114 + 24);
          sub_1005E2960();
          *(_WORD *)(v113 + 31) = 2160;
          uint64_t v161 = 0x786F626C69616DLL;
          sub_1005E2960();
          *(_WORD *)(v113 + 41) = 2085;
          int v117 = *(_DWORD *)(v114 + 40);
          uint64_t v161 = *(void *)(v114 + 32);
          int v162 = v117;
          swift_bridgeObjectRetain();
          uint64_t v118 = sub_1005E1CC0();
          uint64_t v161 = sub_1000C6914(v118, v119, &v163);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_100137CF8((uint64_t)v142, type metadata accessor for MailboxTaskLogger);
          *(_WORD *)(v113 + 51) = 2048;
          uint64_t v120 = *(void *)(*(void *)&v126[*(int *)(v140 + 28)] + 16);
          sub_100137CF8((uint64_t)v126, _s25MessageSectionsToDownloadVMa);
          uint64_t v161 = v120;
          sub_1005E2960();
          *(_WORD *)(v113 + 61) = 1024;
          LODWORD(v115) = *v149;
          sub_100137CF8((uint64_t)v149, _s25MessageSectionsToDownloadVMa);
          LODWORD(v161) = v115;
          sub_1005E2960();
          _os_log_impl((void *)&_mh_execute_header, v109, (os_log_type_t)v160, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Completed download of %ld sections for message %u.", (uint8_t *)v113, 0x43u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v88 + 8))(v143, v132);
        }
        else
        {
          sub_100137CF8((uint64_t)v56, _s25MessageSectionsToDownloadVMa);
          sub_100137CF8(v89, _s25MessageSectionsToDownloadVMa);
          sub_100137CF8(v72, type metadata accessor for MailboxTaskLogger);

          (*(void (**)(char *, uint64_t))(v88 + 8))(v73, v87);
        }
        uint64_t v84 = *v134;
        sub_100137CF8((uint64_t)v134, _s25MessageSectionsToDownloadVMa);
        unsigned __int8 v85 = 0;
LABEL_51:
        LOBYTE(v166[0]) = v85;
        return v84 | ((unint64_t)v85 << 32);
    }
  }
}

BOOL sub_10013DF70(uint64_t a1)
{
  return sub_10013E048(a1);
}

BOOL sub_10013DF8C(uint64_t a1, uint64_t a2)
{
  switch(BYTE4(a1))
  {
    case 1:
      if (BYTE4(a2) == 1) {
        return a2 == a1;
      }
      return 0;
    case 2:
      if (BYTE4(a2) == 2) {
        return a2 == a1;
      }
      return 0;
    case 3:
      if (!a1) {
        return BYTE4(a2) == 3 && !a2;
      }
      return BYTE4(a2) == 3 && a2 == 1;
    default:
      if (BYTE4(a2)) {
        return 0;
      }
      return a2 == a1;
  }
}

double sub_10013E020(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 176) = -1;
  return result;
}

BOOL sub_10013E048(uint64_t a1)
{
  return sub_10013DF8C(*(unsigned int *)(a1 + 4) | ((unint64_t)*(unsigned __int8 *)(a1 + 8) << 32), **(unsigned int **)(v1 + 16) | ((unint64_t)*(unsigned __int8 *)(*(void *)(v1 + 16) + 4) << 32));
}

uint64_t sub_10013E080()
{
  swift_bridgeObjectRelease();
  unsigned int v1 = *(unsigned __int8 *)(v0 + 216);
  if (v1 <= 0xFD) {
    sub_100061440(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184),
  }
      *(void *)(v0 + 192),
      *(void *)(v0 + 200),
      *(void *)(v0 + 208),
      v1 & 1);
  return _swift_deallocObject(v0, 217, 7);
}

uint64_t sub_10013E114@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10013EF60(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_10013E134(uint64_t a1)
{
  return sub_1001A7BAC(a1, *(void *)(v1 + 16)) & 1;
}

ValueMetadata *_s7SectionV16MessageDataIsNilVMa()
{
  return &_s7SectionV16MessageDataIsNilVN;
}

unsigned char *_s7SectionV4PartOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10013E230);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s7SectionV4PartOMa()
{
  return &_s7SectionV4PartON;
}

unint64_t sub_10013E26C()
{
  unint64_t result = qword_10070D758;
  if (!qword_10070D758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070D758);
  }
  return result;
}

__n128 sub_10013E2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 a23)
{
  sub_10013AEB4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23);
  return result;
}

__n128 sub_10013E304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 a23)
{
  sub_10013AAE4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23);
  return result;
}

__n128 sub_10013E348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 a23)
{
  sub_10006133C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23);
  return result;
}

uint64_t *sub_10013E38C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10013E470(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10013E4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10013E588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10013E634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10013E6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10013E6E4);
}

uint64_t sub_10013E6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E30);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10013E7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10013E7BC);
}

uint64_t sub_10013E7BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10000566C(&qword_100709E30);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t _s18SectionDataRequestVMa()
{
  uint64_t result = qword_10070D7B8;
  if (!qword_10070D7B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10013E8C8()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10013E964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10001FC6C();
  if ((sub_1005E35A0() & 1) != 0
    && (static SectionSpecifier.Part.__derived_struct_equals(_:_:)(*(void *)(a1 + *(int *)(a3 + 20)), *(void *)(a2 + *(int *)(a3 + 20))) & 1) != 0)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = *(int32x2_t **)(a1 + v6);
    uint64_t v8 = *(int32x2_t **)(a2 + v6);
    sub_100079B2C(v7, v8);
  }
}

uint64_t sub_10013E9F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v6 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000566C(&qword_100709E30);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v24 - v17;
  sub_1000079E4(a1, (uint64_t)v8, &qword_100709E38);
  MessageIdentifierSet.count.getter();
  if (v19 < 1)
  {
    sub_100007A48((uint64_t)v8, &qword_100709E38);
    uint64_t v20 = 1;
  }
  else
  {
    sub_10001FDF0((uint64_t)v8, (uint64_t)v16, &qword_100709E38);
    sub_10001FDF0((uint64_t)v16, (uint64_t)v11, &qword_100709E30);
    uint64_t v20 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v20, 1, v12);
  sub_100007A48(a1, &qword_100709E38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100007A48((uint64_t)v11, &qword_10070A000);
    uint64_t v21 = _s18SectionDataRequestVMa();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a4, 1, 1, v21);
  }
  else
  {
    sub_10001FDF0((uint64_t)v11, (uint64_t)v18, &qword_100709E30);
    sub_10001FDF0((uint64_t)v18, a4, &qword_100709E30);
    uint64_t v23 = _s18SectionDataRequestVMa();
    *(void *)(a4 + *(int *)(v23 + 20)) = v24;
    *(void *)(a4 + *(int *)(v23 + 24)) = v25;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a4, 0, 1, v23);
  }
}

uint64_t sub_10013ED0C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_10000566C(&qword_100709E30);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[3] = a1;
  sub_100063E18();
  MessageIdentifierSet.init(_:)();
  MessageIdentifierSet.count.getter();
  if (v18 < 1)
  {
    sub_100007A48((uint64_t)v14, &qword_100709E38);
    uint64_t v19 = 1;
  }
  else
  {
    sub_10001FDF0((uint64_t)v14, (uint64_t)v11, &qword_100709E38);
    sub_10001FDF0((uint64_t)v11, (uint64_t)v17, &qword_100709E30);
    uint64_t v19 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v17, v19, 1, v8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_10001FDF0((uint64_t)v17, a4, &qword_100709E30);
    uint64_t result = _s18SectionDataRequestVMa();
    *(void *)(a4 + *(int *)(result + 20)) = a2;
    *(void *)(a4 + *(int *)(result + 24)) = a3;
  }
  return result;
}

uint64_t sub_10013EF60@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a1;
  unsigned int v5 = a1[1];
  uint64_t v7 = _s18SectionDataRequestVMa();
  uint64_t v8 = SectionSpecifier.init(part:kind:)(*(void *)(a2 + *(int *)(v7 + 20)), 0, 2u);
  *(void *)a3 = 1;
  *(void *)(a3 + 8) = v8;
  *(void *)(a3 + 16) = v10;
  *(void *)(a3 + 24) = v9 | (unint64_t)(v6 << 32);
  *(unsigned char *)(a3 + 36) = 32;
  *(_DWORD *)(a3 + 32) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10013EFE8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v67 = a1;
  uint64_t v5 = sub_10000566C(&qword_10070D7F8);
  uint64_t v6 = v5 - 8;
  uint64_t v7 = __chkstk_darwin(v5);
  unsigned __int8 v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v58 - v10;
  uint64_t v65 = sub_10000566C(&qword_100709E38);
  uint64_t v12 = __chkstk_darwin(v65);
  uint64_t v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v58 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v58 - v18;
  sub_10001FC6C();
  sub_1005E3680();
  uint64_t v20 = *(int *)(v6 + 56);
  sub_10001FDF0((uint64_t)v17, (uint64_t)v9, &qword_100709E38);
  int64_t v66 = v9;
  uint64_t v64 = v20;
  *(_DWORD *)&v9[v20] = 0;
  uint64_t v21 = *(void *)(a2 + 16);
  if (!v21) {
    goto LABEL_18;
  }
  uint64_t v59 = v11;
  uint64_t v61 = v19;
  uint64_t v62 = v14;
  uint64_t v63 = a3;
  uint64_t v68 = v21;
  uint64_t v71 = _s25MessageSectionsToDownloadVMa(0);
  uint64_t v22 = *(void *)(v71 - 8);
  uint64_t v70 = a2 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  uint64_t v69 = *(void *)(v22 + 72);
  uint64_t v60 = a2;
  swift_bridgeObjectRetain();
  uint64_t v23 = v68;
  uint64_t v24 = 0;
  unsigned int v25 = 0;
  while (1)
  {
    if (v25 >> 17 <= 2)
    {
      uint64_t v26 = (int *)(v70 + v69 * v24);
      uint64_t v27 = *(void *)((char *)v26 + *(int *)(v71 + 24));
      uint64_t v28 = *(void *)(v27 + 16);
      if (v28) {
        break;
      }
    }
LABEL_5:
    if (++v24 == v23)
    {
      swift_bridgeObjectRelease();
      a3 = v63;
      uint64_t v14 = v62;
      uint64_t v19 = v61;
      uint64_t v11 = v59;
LABEL_18:
      sub_10001FDF0((uint64_t)v66, (uint64_t)v11, &qword_10070D7F8);
      sub_10001FDF0((uint64_t)v11, (uint64_t)v19, &qword_100709E38);
      unint64_t v54 = sub_100142644(0);
      int v55 = v54;
      unint64_t v56 = HIDWORD(v54);
      sub_1000079E4((uint64_t)v19, (uint64_t)v14, &qword_100709E38);
      sub_10000566C(&qword_10070A180);
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = xmmword_1005F6670;
      *(_DWORD *)(v57 + 32) = v55;
      *(_DWORD *)(v57 + 36) = v56;
      sub_10013E9F8((uint64_t)v14, (uint64_t)_swiftEmptyArrayStorage, v57, a3);
      return sub_100007A48((uint64_t)v19, &qword_100709E38);
    }
  }
  unsigned int v72 = v25;
  swift_bridgeObjectRetain_n();
  long long v29 = *(_OWORD *)(v27 + 224);
  long long v85 = *(_OWORD *)(v27 + 208);
  long long v86 = v29;
  *(_OWORD *)uint64_t v87 = *(_OWORD *)(v27 + 240);
  *(_OWORD *)&v87[9] = *(_OWORD *)(v27 + 249);
  long long v30 = *(_OWORD *)(v27 + 160);
  long long v81 = *(_OWORD *)(v27 + 144);
  long long v31 = *(_OWORD *)(v27 + 176);
  long long v32 = *(_OWORD *)(v27 + 192);
  long long v82 = v30;
  long long v83 = v31;
  long long v84 = v32;
  long long v33 = *(_OWORD *)(v27 + 96);
  long long v77 = *(_OWORD *)(v27 + 80);
  long long v78 = v33;
  long long v34 = *(_OWORD *)(v27 + 128);
  long long v79 = *(_OWORD *)(v27 + 112);
  long long v80 = v34;
  long long v35 = *(_OWORD *)(v27 + 48);
  long long v74 = *(_OWORD *)(v27 + 32);
  long long v75 = v35;
  long long v76 = *(_OWORD *)(v27 + 64);
  uint64_t v36 = v28 - 1;
  for (uint64_t i = 272; ; i += 240)
  {
    if (v74) {
      goto LABEL_12;
    }
    int v38 = v76;
    sub_10013A9E4((uint64_t)&v74);
    uint64_t v39 = swift_bridgeObjectRetain();
    char v40 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v39, _swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    if (v40) {
      break;
    }
    sub_10013AB64((uint64_t)&v74);
LABEL_12:
    if (!v36)
    {
      swift_bridgeObjectRelease_n();
LABEL_4:
      uint64_t v23 = v68;
      unsigned int v25 = v72;
      goto LABEL_5;
    }
    long long v41 = *(_OWORD *)(v27 + i);
    long long v42 = *(_OWORD *)(v27 + i + 16);
    long long v76 = *(_OWORD *)(v27 + i + 32);
    long long v75 = v42;
    long long v74 = v41;
    long long v43 = *(_OWORD *)(v27 + i + 48);
    long long v44 = *(_OWORD *)(v27 + i + 64);
    long long v45 = *(_OWORD *)(v27 + i + 96);
    long long v79 = *(_OWORD *)(v27 + i + 80);
    long long v80 = v45;
    long long v78 = v44;
    long long v77 = v43;
    long long v46 = *(_OWORD *)(v27 + i + 112);
    long long v47 = *(_OWORD *)(v27 + i + 128);
    long long v48 = *(_OWORD *)(v27 + i + 160);
    long long v83 = *(_OWORD *)(v27 + i + 144);
    long long v84 = v48;
    long long v82 = v47;
    long long v81 = v46;
    long long v49 = *(_OWORD *)(v27 + i + 176);
    long long v50 = *(_OWORD *)(v27 + i + 192);
    long long v51 = *(_OWORD *)(v27 + i + 208);
    *(_OWORD *)&v87[9] = *(_OWORD *)(v27 + i + 217);
    long long v86 = v50;
    *(_OWORD *)uint64_t v87 = v51;
    long long v85 = v49;
    --v36;
  }
  swift_bridgeObjectRelease_n();
  sub_10013AB64((uint64_t)&v74);
  int v52 = *v26;
  uint64_t result = sub_1001422E8(*v26, v67);
  if (result) {
    goto LABEL_4;
  }
  unsigned int v25 = v72 + v38;
  if (!__CFADD__(v72, v38))
  {
    *(_DWORD *)&v66[v64] = v25;
    int v73 = v52;
    MessageIdentifierSet.insert(_:)();
    uint64_t v23 = v68;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_10013F544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v204 = a6;
  uint64_t v245 = sub_10000566C(&qword_100709E38);
  uint64_t v11 = __chkstk_darwin(v245);
  uint64_t v202 = (char *)&v193 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v224 = (char *)&v193 - v13;
  uint64_t v14 = sub_10000566C(&qword_10070A000);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v201 = (uint64_t)&v193 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v225 = (uint64_t)&v193 - v17;
  uint64_t v228 = sub_10000566C(&qword_100709E30);
  uint64_t v18 = *(void *)(v228 - 8);
  uint64_t v19 = __chkstk_darwin(v228);
  uint64_t v198 = (uint64_t)&v193 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v218 = (uint64_t)&v193 - v22;
  __chkstk_darwin(v21);
  uint64_t v244 = (uint64_t)&v193 - v23;
  uint64_t v249 = _s18SectionDataRequestVMa();
  uint64_t v24 = *(void *)(v249 - 8);
  uint64_t v25 = __chkstk_darwin(v249);
  uint64_t v196 = (uint64_t)&v193 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v200 = (uint64_t)&v193 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v199 = (uint64_t)&v193 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v216 = (uint64_t)&v193 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v205 = (uint64_t)&v193 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v223 = (uint64_t)&v193 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v222 = (uint64_t)&v193 - v38;
  __chkstk_darwin(v37);
  uint64_t v247 = (uint64_t)&v193 - v39;
  uint64_t v253 = sub_10000566C(&qword_10070A640);
  uint64_t v227 = *(void *)(v253 - 8);
  __chkstk_darwin(v253);
  uint64_t v252 = (uint64_t)&v193 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v251 = type metadata accessor for DownloadTask.CommandID(0);
  uint64_t v254 = *(void *)(v251 - 8);
  uint64_t v41 = __chkstk_darwin(v251);
  uint64_t v219 = (uint64_t)&v193 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v239 = (uint64_t)&v193 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v250 = (uint64_t)&v193 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v255 = (uint64_t)&v193 - v48;
  __chkstk_darwin(v47);
  uint64_t v226 = (char *)&v193 - v49;
  uint64_t v212 = _s25MessageSectionsToDownloadVMa(0);
  uint64_t v50 = *(void *)(v212 - 8);
  uint64_t v51 = __chkstk_darwin(v212);
  int v241 = (int *)((char *)&v193 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v217 = (int *)((char *)&v193 - v54);
  __chkstk_darwin(v53);
  uint64_t v214 = (uint64_t)&v193 - v55;
  uint64_t v56 = sub_10000566C(&qword_10070D750);
  uint64_t v57 = __chkstk_darwin(v56 - 8);
  uint64_t v58 = __chkstk_darwin(v57);
  uint64_t v59 = __chkstk_darwin(v58);
  uint64_t v60 = __chkstk_darwin(v59);
  uint64_t v206 = (uint64_t)&v193 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v229 = (uint64_t)&v193 - v63;
  __chkstk_darwin(v62);
  unint64_t v209 = *(void *)(a5 + 16);
  uint64_t v215 = a5;
  if (!v209)
  {
    swift_bridgeObjectRetain();
    long long v95 = *(void (**)(uint64_t, uint64_t, uint64_t, void *))(v24 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v69 = (void *)v249;
LABEL_101:
    v95(v204, 1, 1, v69);
    goto LABEL_102;
  }
  uint64_t v208 = (uint64_t)&v193 - v64;
  uint64_t v197 = v67;
  uint64_t v194 = v66;
  uint64_t v195 = v65;
  uint64_t v211 = a5 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
  uint64_t v210 = *(void *)(v50 + 72);
  uint64_t v220 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  uint64_t v221 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  uint64_t v237 = (void **)(v24 + 48);
  uint64_t v238 = (void (**)(uint64_t, uint64_t, uint64_t, void *))(v24 + 56);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  unint64_t v68 = 0;
  uint64_t v240 = a3;
  uint64_t v69 = (void *)v249;
  uint64_t v232 = a1;
  uint64_t v233 = a2;
  uint64_t v231 = a4;
  while (1)
  {
    unint64_t v213 = v68;
    uint64_t v207 = v211 + v210 * v68;
    uint64_t v70 = v214;
    sub_1001421B8(v207, v214, _s25MessageSectionsToDownloadVMa);
    uint64_t v71 = *(void *)(v70 + *(int *)(v212 + 24));
    sub_1001421B8(v70, (uint64_t)v217, _s25MessageSectionsToDownloadVMa);
    sub_1001421B8(v70, (uint64_t)v241, _s25MessageSectionsToDownloadVMa);
    int v234 = *(void **)(v71 + 16);
    if (v234) {
      break;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v132 = v238;
LABEL_85:
    sub_100142288((uint64_t)v217, _s25MessageSectionsToDownloadVMa);
    long long v95 = *v132;
    uint64_t v172 = v208;
    (*v132)(v208, 1, 1, v69);
    swift_bridgeObjectRelease();
LABEL_97:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100142288((uint64_t)v241, _s25MessageSectionsToDownloadVMa);
    sub_100142288(v214, _s25MessageSectionsToDownloadVMa);
    swift_bridgeObjectRelease();
    uint64_t v88 = *v237;
    int v186 = ((uint64_t (*)(uint64_t, uint64_t, void *))*v237)(v172, 1, v69);
    sub_100007A48(v172, &qword_10070D750);
    if (v186 != 1) {
      goto LABEL_107;
    }
    unint64_t v68 = v213 + 1;
    if (v213 + 1 == v209)
    {
LABEL_108:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_101;
    }
  }
  int64_t v235 = *(void *)(a3 + 16);
  uint64_t v236 = v71 + 32;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unsigned int v72 = 0;
  uint64_t v243 = v71;
  while (1)
  {
    uint64_t v242 = v72;
    int v73 = (long long *)(v236 + 240 * (void)v72);
    long long v74 = *v73;
    long long v75 = v73[2];
    long long v272 = v73[1];
    long long v273 = v75;
    long long v271 = v74;
    long long v76 = v73[3];
    long long v77 = v73[4];
    long long v78 = v73[6];
    long long v276 = v73[5];
    long long v277 = v78;
    long long v274 = v76;
    long long v275 = v77;
    long long v79 = v73[7];
    long long v80 = v73[8];
    long long v81 = v73[10];
    long long v280 = v73[9];
    long long v281 = v81;
    long long v278 = v79;
    long long v279 = v80;
    long long v82 = v73[11];
    long long v83 = v73[12];
    long long v84 = v73[13];
    uint64_t v230 = v73;
    *(_OWORD *)((char *)v284 + 9) = *(long long *)((char *)v73 + 217);
    long long v283 = v83;
    v284[0] = v84;
    long long v282 = v82;
    uint64_t v292 = *((void *)&v271 + 1);
    long long v293 = v272;
    uint64_t v295 = *((void *)&v273 + 1);
    int v294 = v273;
    int v296 = v274;
    __int16 v297 = WORD2(v274);
    char v298 = BYTE6(v274);
    int v246 = *v241;
    int64_t v85 = v235;
    uint64_t v248 = *((void *)&v272 + 1);
    if (v235)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10013A9E4((uint64_t)&v271);
      *(void *)&long long v257 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_10001AB74(0, v85, 0);
      uint64_t v86 = a3 + ((*(unsigned __int8 *)(v227 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v227 + 80));
      uint64_t v87 = *(void *)(v227 + 72);
      uint64_t v88 = (void *)v257;
      int64_t v89 = v85;
      uint64_t v90 = (uint64_t)v226;
      do
      {
        uint64_t v91 = v252;
        sub_1000079E4(v86, v252, &qword_10070A640);
        sub_1001421B8(v91 + *(int *)(v253 + 52), v90, type metadata accessor for DownloadTask.CommandID);
        sub_100007A48(v91, &qword_10070A640);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10001AB74(0, v88[2] + 1, 1);
          uint64_t v88 = (void *)v257;
        }
        unint64_t v93 = v88[2];
        unint64_t v92 = v88[3];
        if (v93 >= v92 >> 1)
        {
          sub_10001AB74(v92 > 1, v93 + 1, 1);
          uint64_t v88 = (void *)v257;
        }
        v88[2] = v93 + 1;
        sub_100142220(v90, (uint64_t)v88+ ((*(unsigned __int8 *)(v254 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v254 + 80))+ *(void *)(v254 + 72) * v93, type metadata accessor for DownloadTask.CommandID);
        v86 += v87;
        --v89;
      }
      while (v89);
      a3 = v240;
      swift_bridgeObjectRelease();
      a4 = v88[2];
      if (a4)
      {
LABEL_13:
        uint64_t v94 = v254;
        a1 = (uint64_t)v88
           + ((*(unsigned __int8 *)(v254 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v254 + 80));
        swift_bridgeObjectRetain();
        long long v95 = *(void (**)(uint64_t, uint64_t, uint64_t, void *))(v94 + 72);
        uint64_t v69 = _swiftEmptyArrayStorage;
        while (1)
        {
          uint64_t v96 = v255;
          sub_1001421B8(a1, v255, type metadata accessor for DownloadTask.CommandID);
          uint64_t v97 = v96;
          uint64_t v98 = v250;
          sub_1001421B8(v97, v250, type metadata accessor for DownloadTask.CommandID);
          if (swift_getEnumCaseMultiPayload() == 3)
          {
            uint64_t v99 = v247;
            sub_100142220(v98, v247, (uint64_t (*)(void))_s18SectionDataRequestVMa);
            uint64_t v100 = swift_bridgeObjectRetain();
            char v101 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v100, v248);
            swift_bridgeObjectRelease();
            if (v101)
            {
              uint64_t v102 = v244;
              sub_1000079E4(v99, v244, &qword_100709E30);
              LODWORD(v257) = v246;
              char v103 = MessageIdentifierSet.contains(_:)();
              sub_100007A48(v102, &qword_100709E38);
              if (v103)
              {
                int v104 = *(void **)(v99 + *(int *)(v249 + 24));
                swift_bridgeObjectRetain();
                sub_100142288(v99, (uint64_t (*)(void))_s18SectionDataRequestVMa);
                goto LABEL_23;
              }
            }
            uint64_t v105 = (uint64_t (*)(void))_s18SectionDataRequestVMa;
            uint64_t v106 = v99;
          }
          else
          {
            uint64_t v105 = type metadata accessor for DownloadTask.CommandID;
            uint64_t v106 = v98;
          }
          sub_100142288(v106, v105);
          int v104 = _swiftEmptyArrayStorage;
LABEL_23:
          sub_100142288(v255, type metadata accessor for DownloadTask.CommandID);
          a3 = v104[2];
          int64_t v107 = v69[2];
          a2 = v107 + a3;
          if (__OFADD__(v107, a3))
          {
            __break(1u);
LABEL_104:
            __break(1u);
LABEL_105:
            __break(1u);
LABEL_106:
            __break(1u);
LABEL_107:
            if (v213 == v209) {
              goto LABEL_108;
            }
            os_log_t v203 = v95;
            if (v213 >= v209) {
              goto LABEL_117;
            }
            uint64_t v188 = v194;
            sub_100140EEC(v207, a1, a2, a3, a4, v194);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v189 = v195;
            sub_1000079E4(v188, v195, &qword_10070D750);
            if (((unsigned int (*)(uint64_t, uint64_t, void *))v88)(v189, 1, v69) == 1) {
              goto LABEL_122;
            }
            uint64_t v190 = v196;
            sub_100142220(v189, v196, (uint64_t (*)(void))_s18SectionDataRequestVMa);
            sub_100007A48(v188, &qword_10070D750);
            uint64_t v191 = v190;
            uint64_t v192 = v204;
            sub_100142220(v191, v204, (uint64_t (*)(void))_s18SectionDataRequestVMa);
            v203(v192, 0, 1, v69);
LABEL_102:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
          if (!isUniquelyReferenced_nonNull_native || a2 > v69[3] >> 1)
          {
            if (v107 <= a2) {
              int64_t v109 = v107 + a3;
            }
            else {
              int64_t v109 = v107;
            }
            uint64_t v69 = sub_1000178E4(isUniquelyReferenced_nonNull_native, v109, 1, v69);
          }
          if (v104[2])
          {
            uint64_t v110 = v69[2];
            if ((v69[3] >> 1) - v110 < a3) {
              goto LABEL_105;
            }
            int v111 = &v69[v110 + 4];
            if (v104 + 4 < &v111[a3] && v111 < &v104[a3 + 4]) {
              goto LABEL_121;
            }
            memcpy(v111, v104 + 4, 8 * a3);
            if (a3)
            {
              uint64_t v113 = v69[2];
              BOOL v114 = __OFADD__(v113, a3);
              uint64_t v115 = v113 + a3;
              if (v114) {
                goto LABEL_106;
              }
              v69[2] = v115;
            }
          }
          else if (a3)
          {
            goto LABEL_104;
          }
          swift_bridgeObjectRelease();
          a1 += (uint64_t)v95;
          if (!--a4)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            a3 = v240;
            goto LABEL_43;
          }
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_10013A9E4((uint64_t)&v271);
      swift_bridgeObjectRetain();
      uint64_t v88 = _swiftEmptyArrayStorage;
      a4 = _swiftEmptyArrayStorage[2];
      if (a4) {
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v69 = _swiftEmptyArrayStorage;
LABEL_43:
    unint64_t v116 = sub_100142734(1, v69);
    swift_bridgeObjectRelease();
    a1 = v232;
    a2 = v233;
    a4 = v231;
    if (v116[2])
    {
      LODWORD(v257) = *v241;
      sub_100063E18();
      swift_bridgeObjectRetain();
      uint64_t v117 = (uint64_t)v224;
      MessageIdentifierSet.init(_:)();
      MessageIdentifierSet.count.getter();
      uint64_t v69 = (void *)v249;
      if (v118 < 1)
      {
        sub_100007A48(v117, &qword_100709E38);
        uint64_t v122 = 1;
        uint64_t v121 = v225;
      }
      else
      {
        uint64_t v119 = v218;
        sub_10001FDF0(v117, v218, &qword_100709E38);
        uint64_t v120 = v119;
        uint64_t v121 = v225;
        sub_10001FDF0(v120, v225, &qword_100709E30);
        uint64_t v122 = 0;
      }
      uint64_t v125 = v228;
      (*v221)(v121, v122, 1, v228);
      if ((*v220)(v121, 1, v125) == 1) {
        goto LABEL_118;
      }
      uint64_t v126 = v223;
      sub_10001FDF0(v121, v223, &qword_100709E30);
      *(void *)(v126 + *((int *)v69 + 5)) = v248;
      *(void *)(v126 + *((int *)v69 + 6)) = v116;
      uint64_t v127 = v222;
      sub_100142220(v126, v222, (uint64_t (*)(void))_s18SectionDataRequestVMa);
      uint64_t v124 = v229;
      sub_100142220(v127, v229, (uint64_t (*)(void))_s18SectionDataRequestVMa);
      uint64_t v123 = *v238;
      (*v238)(v124, 0, 1, v69);
    }
    else
    {
      uint64_t v123 = *v238;
      uint64_t v124 = v229;
      uint64_t v69 = (void *)v249;
      (*v238)(v229, 1, 1, v249);
      swift_bridgeObjectRelease();
    }
    sub_10013AB64((uint64_t)&v271);
    swift_bridgeObjectRelease();
    uint64_t v128 = *v237;
    int v129 = ((uint64_t (*)(uint64_t, uint64_t, void *))*v237)(v124, 1, v69);
    uint64_t v130 = v124;
    int v131 = v129;
    sub_100007A48(v130, &qword_10070D750);
    if (v131 != 1) {
      break;
    }
    unsigned int v72 = (void *)((char *)v242 + 1);
    if ((void *)((char *)v242 + 1) == v234)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v132 = v238;
      goto LABEL_85;
    }
  }
  if ((unint64_t)v242 >= *(void *)(v243 + 16)) {
    goto LABEL_116;
  }
  long long v133 = *v230;
  long long v134 = v230[2];
  long long v258 = v230[1];
  long long v259 = v134;
  long long v257 = v133;
  long long v135 = v230[3];
  long long v136 = v230[4];
  long long v137 = v230[6];
  long long v262 = v230[5];
  long long v263 = v137;
  long long v260 = v135;
  long long v261 = v136;
  long long v138 = v230[7];
  long long v139 = v230[8];
  long long v140 = v230[10];
  long long v266 = v230[9];
  long long v267 = v140;
  long long v265 = v139;
  long long v264 = v138;
  long long v141 = v230[11];
  long long v142 = v230[12];
  long long v143 = v230[13];
  *(_OWORD *)((char *)v270 + 9) = *(long long *)((char *)v230 + 217);
  long long v269 = v142;
  v270[0] = v143;
  long long v268 = v141;
  uint64_t v144 = *((void *)&v258 + 1);
  uint64_t v285 = *((void *)&v257 + 1);
  long long v286 = v258;
  uint64_t v288 = *((void *)&v259 + 1);
  int v287 = v259;
  int v289 = v260;
  __int16 v290 = WORD2(v260);
  char v291 = BYTE6(v260);
  int v246 = *v217;
  sub_10013A9E4((uint64_t)&v257);
  swift_bridgeObjectRetain();
  uint64_t v145 = sub_100164B0C(a3);
  uint64_t v146 = v145[2];
  os_log_t v203 = v123;
  uint64_t v248 = v144;
  if (!v146)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v150 = _swiftEmptyArrayStorage;
LABEL_88:
    uint64_t v173 = sub_100142734(1, v150);
    swift_bridgeObjectRelease();
    a1 = v232;
    a2 = v233;
    a4 = v231;
    if (v173[2])
    {
      int v256 = *v217;
      sub_100063E18();
      swift_bridgeObjectRetain();
      uint64_t v174 = (uint64_t)v202;
      MessageIdentifierSet.init(_:)();
      MessageIdentifierSet.count.getter();
      uint64_t v69 = (void *)v249;
      if (v175 < 1)
      {
        sub_100007A48(v174, &qword_100709E38);
        uint64_t v179 = 1;
        uint64_t v178 = v201;
      }
      else
      {
        uint64_t v176 = v198;
        sub_10001FDF0(v174, v198, &qword_100709E38);
        uint64_t v177 = v176;
        uint64_t v178 = v201;
        sub_10001FDF0(v177, v201, &qword_100709E30);
        uint64_t v179 = 0;
      }
      uint64_t v181 = v228;
      (*v221)(v178, v179, 1, v228);
      if ((*v220)(v178, 1, v181) == 1) {
        goto LABEL_120;
      }
      uint64_t v182 = v200;
      sub_10001FDF0(v178, v200, &qword_100709E30);
      *(void *)(v182 + *((int *)v69 + 5)) = v248;
      *(void *)(v182 + *((int *)v69 + 6)) = v173;
      uint64_t v183 = v199;
      sub_100142220(v182, v199, (uint64_t (*)(void))_s18SectionDataRequestVMa);
      uint64_t v180 = v206;
      sub_100142220(v183, v206, (uint64_t (*)(void))_s18SectionDataRequestVMa);
      v123(v180, 0, 1, v69);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v180 = v206;
      uint64_t v69 = (void *)v249;
      v123(v206, 1, 1, (void *)v249);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a3 = v240;
    swift_bridgeObjectRelease();
    sub_100142288((uint64_t)v217, _s25MessageSectionsToDownloadVMa);
    sub_10013AB64((uint64_t)&v257);
    uint64_t v184 = v197;
    sub_1000079E4(v180, v197, &qword_10070D750);
    if (((unsigned int (*)(uint64_t, uint64_t, void *))v128)(v184, 1, v69) == 1) {
      goto LABEL_119;
    }
    uint64_t v185 = v205;
    sub_100142220(v184, v205, (uint64_t (*)(void))_s18SectionDataRequestVMa);
    sub_100007A48(v180, &qword_10070D750);
    uint64_t v172 = v208;
    sub_100142220(v185, v208, (uint64_t (*)(void))_s18SectionDataRequestVMa);
    long long v95 = v203;
    v203(v172, 0, 1, v69);
    swift_bridgeObjectRelease();
    goto LABEL_97;
  }
  uint64_t v147 = v254;
  uint64_t v148 = (uint64_t)v145 + ((*(unsigned __int8 *)(v254 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v254 + 80));
  uint64_t v242 = v145;
  swift_bridgeObjectRetain();
  uint64_t v149 = *(void *)(v147 + 72);
  uint64_t v150 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v151 = v239;
    sub_1001421B8(v148, v239, type metadata accessor for DownloadTask.CommandID);
    uint64_t v152 = v151;
    uint64_t v153 = v219;
    sub_1001421B8(v152, v219, type metadata accessor for DownloadTask.CommandID);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v154 = v216;
      sub_100142220(v153, v216, (uint64_t (*)(void))_s18SectionDataRequestVMa);
      uint64_t v155 = swift_bridgeObjectRetain();
      char v156 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v155, v248);
      swift_bridgeObjectRelease();
      if (v156)
      {
        uint64_t v157 = v244;
        sub_1000079E4(v154, v244, &qword_100709E30);
        int v256 = v246;
        char v158 = MessageIdentifierSet.contains(_:)();
        sub_100007A48(v157, &qword_100709E38);
        if (v158)
        {
          uint64_t v159 = *(void **)(v154 + *(int *)(v249 + 24));
          swift_bridgeObjectRetain();
          sub_100142288(v154, (uint64_t (*)(void))_s18SectionDataRequestVMa);
          goto LABEL_66;
        }
      }
      unint64_t v160 = (uint64_t (*)(void))_s18SectionDataRequestVMa;
      uint64_t v161 = v154;
    }
    else
    {
      unint64_t v160 = type metadata accessor for DownloadTask.CommandID;
      uint64_t v161 = v153;
    }
    sub_100142288(v161, v160);
    uint64_t v159 = _swiftEmptyArrayStorage;
LABEL_66:
    sub_100142288(v239, type metadata accessor for DownloadTask.CommandID);
    uint64_t v162 = v159[2];
    int64_t v163 = v150[2];
    int64_t v164 = v163 + v162;
    if (__OFADD__(v163, v162)) {
      break;
    }
    char v165 = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (v165 && v164 <= v150[3] >> 1)
    {
      if (v159[2]) {
        goto LABEL_75;
      }
    }
    else
    {
      if (v163 <= v164) {
        int64_t v166 = v163 + v162;
      }
      else {
        int64_t v166 = v163;
      }
      uint64_t v150 = sub_1000178E4(v165, v166, 1, v150);
      if (v159[2])
      {
LABEL_75:
        uint64_t v167 = v150[2];
        if ((v150[3] >> 1) - v167 < v162) {
          goto LABEL_114;
        }
        unint64_t v168 = &v150[v167 + 4];
        if (v159 + 4 < &v168[v162] && v168 < &v159[v162 + 4]) {
          goto LABEL_121;
        }
        memcpy(v168, v159 + 4, 8 * v162);
        if (v162)
        {
          uint64_t v170 = v150[2];
          BOOL v114 = __OFADD__(v170, v162);
          uint64_t v171 = v170 + v162;
          if (v114) {
            goto LABEL_115;
          }
          v150[2] = v171;
        }
        goto LABEL_58;
      }
    }
    if (v162) {
      goto LABEL_113;
    }
LABEL_58:
    swift_bridgeObjectRelease();
    v148 += v149;
    if (!--v146)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v123 = v203;
      goto LABEL_88;
    }
  }
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100142288((uint64_t)v241, _s25MessageSectionsToDownloadVMa);
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  sub_1005E3000();
  __break(1u);
LABEL_122:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_100140EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v154 = a6;
  uint64_t v181 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v181);
  uint64_t v175 = (char *)&v149 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v12 - 8);
  uint64_t v174 = (char *)&v149 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_10000566C(&qword_100709E30);
  uint64_t v184 = *(void *)(v161 - 8);
  uint64_t v14 = __chkstk_darwin(v161);
  uint64_t v158 = (uint64_t)&v149 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v180 = (uint64_t)&v149 - v16;
  uint64_t v185 = _s18SectionDataRequestVMa();
  uint64_t v156 = *(void *)(v185 - 8);
  uint64_t v17 = __chkstk_darwin(v185);
  uint64_t v191 = (char *)&v149 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v149 - v20;
  __chkstk_darwin(v19);
  uint64_t v183 = (uint64_t)&v149 - v22;
  uint64_t v189 = sub_10000566C(&qword_10070A640);
  uint64_t v163 = *(void *)(v189 - 8);
  __chkstk_darwin(v189);
  uint64_t v188 = (uint64_t *)((char *)&v149 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v187 = type metadata accessor for DownloadTask.CommandID(0);
  uint64_t v190 = *(void *)(v187 - 8);
  uint64_t v24 = __chkstk_darwin(v187);
  uint64_t v157 = (char *)&v149 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v164 = (uint64_t)&v149 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v186 = (uint64_t)&v149 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v192 = (uint64_t)&v149 - v31;
  __chkstk_darwin(v30);
  uint64_t v162 = (char *)&v149 - v32;
  uint64_t v33 = sub_10000566C(&qword_10070D750);
  uint64_t v34 = __chkstk_darwin(v33 - 8);
  uint64_t v152 = (uint64_t)&v149 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v151 = (char *)&v149 - v37;
  __chkstk_darwin(v36);
  uint64_t v173 = (uint64_t)&v149 - v38;
  uint64_t v39 = _s25MessageSectionsToDownloadVMa(0);
  uint64_t v40 = __chkstk_darwin(v39 - 8);
  uint64_t v42 = (char *)&v149 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = *(void *)(a1 + *(int *)(__chkstk_darwin(v40) + 32));
  uint64_t v155 = (_DWORD *)((char *)&v149 - v44);
  sub_1001421B8(a1, (uint64_t)&v149 - v44, _s25MessageSectionsToDownloadVMa);
  uint64_t v178 = (int *)v42;
  sub_1001421B8(a1, (uint64_t)v42, _s25MessageSectionsToDownloadVMa);
  uint64_t v168 = *(void *)(v43 + 16);
  if (!v168)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_52;
  }
  uint64_t v150 = v21;
  int64_t v169 = *(void *)(a4 + 16);
  uint64_t v170 = v43 + 32;
  uint64_t v159 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v184 + 48);
  unint64_t v160 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v184 + 56);
  uint64_t v176 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v156 + 56);
  uint64_t v171 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v156 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  unint64_t v45 = 0;
  uint64_t v177 = a4;
  uint64_t v172 = v43;
  uint64_t v166 = a5;
  uint64_t v167 = a3;
  uint64_t v153 = a2;
  while (1)
  {
    unint64_t v179 = v45;
    uint64_t v46 = (long long *)(v170 + 240 * v45);
    long long v47 = *v46;
    long long v48 = v46[2];
    long long v210 = v46[1];
    long long v211 = v48;
    long long v209 = v47;
    long long v49 = v46[3];
    long long v50 = v46[4];
    long long v51 = v46[6];
    long long v214 = v46[5];
    long long v215 = v51;
    long long v212 = v49;
    long long v213 = v50;
    long long v52 = v46[7];
    long long v53 = v46[8];
    long long v54 = v46[10];
    long long v218 = v46[9];
    long long v219 = v54;
    long long v216 = v52;
    long long v217 = v53;
    long long v55 = v46[11];
    long long v56 = v46[12];
    long long v57 = v46[13];
    char v165 = v46;
    *(_OWORD *)((char *)v222 + 9) = *(long long *)((char *)v46 + 217);
    long long v221 = v56;
    v222[0] = v57;
    long long v220 = v55;
    uint64_t v230 = *((void *)&v209 + 1);
    long long v231 = v210;
    uint64_t v233 = *((void *)&v211 + 1);
    int v232 = v211;
    int v234 = v212;
    __int16 v235 = WORD2(v212);
    char v236 = BYTE6(v212);
    int v182 = *v178;
    int64_t v58 = v169;
    uint64_t v184 = *((void *)&v210 + 1);
    if (!v169)
    {
      swift_bridgeObjectRetain();
      sub_10013A9E4((uint64_t)&v209);
      swift_bridgeObjectRetain();
      uint64_t v61 = _swiftEmptyArrayStorage;
      uint64_t v63 = (uint64_t)v191;
      uint64_t v68 = _swiftEmptyArrayStorage[2];
      if (v68) {
        break;
      }
      goto LABEL_40;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10013A9E4((uint64_t)&v209);
    *(void *)&long long v195 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10001AB74(0, v58, 0);
    uint64_t v59 = a4 + ((*(unsigned __int8 *)(v163 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v163 + 80));
    uint64_t v60 = *(void *)(v163 + 72);
    uint64_t v61 = (void *)v195;
    int64_t v62 = v58;
    uint64_t v63 = (uint64_t)v191;
    uint64_t v64 = (uint64_t)v162;
    do
    {
      uint64_t v65 = (uint64_t)v188;
      sub_1000079E4(v59, (uint64_t)v188, &qword_10070A640);
      sub_1001421B8(v65 + *(int *)(v189 + 52), v64, type metadata accessor for DownloadTask.CommandID);
      sub_100007A48(v65, &qword_10070A640);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10001AB74(0, v61[2] + 1, 1);
        uint64_t v61 = (void *)v195;
      }
      unint64_t v67 = v61[2];
      unint64_t v66 = v61[3];
      if (v67 >= v66 >> 1)
      {
        sub_10001AB74(v66 > 1, v67 + 1, 1);
        uint64_t v61 = (void *)v195;
      }
      v61[2] = v67 + 1;
      sub_100142220(v64, (uint64_t)v61+ ((*(unsigned __int8 *)(v190 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80))+ *(void *)(v190 + 72) * v67, type metadata accessor for DownloadTask.CommandID);
      v59 += v60;
      --v62;
    }
    while (v62);
    a4 = v177;
    swift_bridgeObjectRelease();
    uint64_t v68 = v61[2];
    if (v68) {
      break;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unsigned int v72 = _swiftEmptyArrayStorage;
LABEL_41:
    long long v95 = sub_100142734(1, v72);
    swift_bridgeObjectRelease();
    uint64_t v97 = (uint64_t)v174;
    uint64_t v96 = (uint64_t)v175;
    if (v95[2])
    {
      LODWORD(v195) = *v178;
      sub_100063E18();
      swift_bridgeObjectRetain();
      MessageIdentifierSet.init(_:)();
      MessageIdentifierSet.count.getter();
      uint64_t v98 = v172;
      if (v99 < 1)
      {
        sub_100007A48(v96, &qword_100709E38);
        uint64_t v101 = 1;
      }
      else
      {
        uint64_t v100 = v158;
        sub_10001FDF0(v96, v158, &qword_100709E38);
        sub_10001FDF0(v100, v97, &qword_100709E30);
        uint64_t v101 = 0;
      }
      uint64_t v105 = v161;
      (*v160)(v97, v101, 1, v161);
      int v106 = (*v159)(v97, 1, v105);
      uint64_t v104 = v185;
      uint64_t v103 = v173;
      if (v106 == 1) {
        goto LABEL_77;
      }
      sub_10001FDF0(v97, v173, &qword_100709E30);
      *(void *)(v103 + *(int *)(v104 + 20)) = v184;
      *(void *)(v103 + *(int *)(v104 + 24)) = v95;
      uint64_t v102 = *v176;
      (*v176)(v103, 0, 1, v104);
    }
    else
    {
      uint64_t v102 = *v176;
      uint64_t v103 = v173;
      uint64_t v104 = v185;
      (*v176)(v173, 1, 1, v185);
      swift_bridgeObjectRelease();
      uint64_t v98 = v172;
    }
    sub_10013AB64((uint64_t)&v209);
    swift_bridgeObjectRelease();
    int64_t v107 = *v171;
    unsigned int v108 = (*v171)(v103, 1, v104);
    sub_100007A48(v103, &qword_10070D750);
    if (v108 != 1)
    {
      if (v179 >= *(void *)(v98 + 16)) {
        goto LABEL_76;
      }
      long long v111 = *v165;
      long long v112 = v165[2];
      long long v196 = v165[1];
      long long v197 = v112;
      long long v195 = v111;
      long long v113 = v165[3];
      long long v114 = v165[4];
      long long v115 = v165[6];
      long long v200 = v165[5];
      long long v201 = v115;
      long long v198 = v113;
      long long v199 = v114;
      long long v116 = v165[7];
      long long v117 = v165[8];
      long long v118 = v165[10];
      long long v204 = v165[9];
      long long v205 = v118;
      long long v203 = v117;
      long long v202 = v116;
      long long v119 = v165[11];
      long long v120 = v165[12];
      long long v121 = v165[13];
      *(_OWORD *)((char *)v208 + 9) = *(long long *)((char *)v165 + 217);
      long long v207 = v120;
      v208[0] = v121;
      long long v206 = v119;
      uint64_t v122 = *((void *)&v196 + 1);
      uint64_t v223 = *((void *)&v195 + 1);
      long long v224 = v196;
      uint64_t v226 = *((void *)&v197 + 1);
      int v225 = v197;
      int v227 = v198;
      __int16 v228 = WORD2(v198);
      char v229 = BYTE6(v198);
      LODWORD(v189) = *v155;
      sub_10013A9E4((uint64_t)&v195);
      swift_bridgeObjectRetain();
      uint64_t v123 = sub_100164B0C(a4);
      uint64_t v194 = _swiftEmptyArrayStorage;
      uint64_t v124 = v123[2];
      if (v124)
      {
        uint64_t v192 = v122;
        uint64_t v125 = v190;
        uint64_t v126 = (uint64_t)v123
             + ((*(unsigned __int8 *)(v190 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80));
        uint64_t v188 = v123;
        swift_bridgeObjectRetain();
        uint64_t v127 = *(void *)(v125 + 72);
        uint64_t v128 = (uint64_t)v157;
        uint64_t v129 = v164;
        do
        {
          sub_1001421B8(v126, v129, type metadata accessor for DownloadTask.CommandID);
          sub_1001421B8(v129, v128, type metadata accessor for DownloadTask.CommandID);
          if (swift_getEnumCaseMultiPayload() == 3)
          {
            sub_100142220(v128, v63, (uint64_t (*)(void))_s18SectionDataRequestVMa);
            uint64_t v131 = swift_bridgeObjectRetain();
            uint64_t v132 = v63;
            char v133 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v131, v192);
            swift_bridgeObjectRelease();
            if ((v133 & 1) != 0
              && (uint64_t v134 = v180,
                  sub_1000079E4(v132, v180, &qword_100709E30),
                  int v193 = v189,
                  char v135 = MessageIdentifierSet.contains(_:)(),
                  sub_100007A48(v134, &qword_100709E38),
                  (v135 & 1) != 0))
            {
              uint64_t v130 = *(void **)(v132 + *(int *)(v185 + 24));
              swift_bridgeObjectRetain();
              sub_100142288(v132, (uint64_t (*)(void))_s18SectionDataRequestVMa);
            }
            else
            {
              sub_100142288(v132, (uint64_t (*)(void))_s18SectionDataRequestVMa);
              uint64_t v130 = _swiftEmptyArrayStorage;
            }
            uint64_t v128 = (uint64_t)v157;
          }
          else
          {
            sub_100142288(v128, type metadata accessor for DownloadTask.CommandID);
            uint64_t v130 = _swiftEmptyArrayStorage;
          }
          uint64_t v129 = v164;
          sub_100142288(v164, type metadata accessor for DownloadTask.CommandID);
          sub_100011CC0((uint64_t)v130);
          v126 += v127;
          --v124;
          uint64_t v63 = (uint64_t)v191;
        }
        while (v124);
        uint64_t v122 = v192;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        long long v136 = v194;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v136 = _swiftEmptyArrayStorage;
      }
      long long v137 = sub_100142734(1, v136);
      swift_bridgeObjectRelease();
      uint64_t v138 = (uint64_t)v151;
      if (v137[2])
      {
        long long v139 = v155;
        int v140 = *v155;
        swift_bridgeObjectRetain();
        sub_10013ED0C(v140, v122, (uint64_t)v137, v138);
        uint64_t v141 = v185;
        v102(v138, 0, 1, v185);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v142 = v185;
        v102((uint64_t)v151, 1, 1, v185);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v141 = v142;
        swift_bridgeObjectRelease();
        long long v139 = v155;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100142288((uint64_t)v139, _s25MessageSectionsToDownloadVMa);
      sub_10013AB64((uint64_t)&v195);
      uint64_t v143 = v152;
      sub_1000079E4(v138, v152, &qword_10070D750);
      if (v107(v143, 1, v141) == 1) {
        goto LABEL_78;
      }
      uint64_t v144 = v143;
      uint64_t v145 = (uint64_t)v150;
      sub_100142220(v144, (uint64_t)v150, (uint64_t (*)(void))_s18SectionDataRequestVMa);
      sub_100007A48(v138, &qword_10070D750);
      uint64_t v146 = v145;
      uint64_t v147 = v154;
      sub_100142220(v146, v154, (uint64_t (*)(void))_s18SectionDataRequestVMa);
      v102(v147, 0, 1, v141);
      swift_bridgeObjectRelease();
      goto LABEL_71;
    }
    unint64_t v45 = v179 + 1;
    if (v179 + 1 == v168)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_52:
      uint64_t v109 = v185;
      uint64_t v110 = v156;
      sub_100142288((uint64_t)v155, _s25MessageSectionsToDownloadVMa);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56))(v154, 1, 1, v109);
      swift_bridgeObjectRelease();
LABEL_71:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_100142288((uint64_t)v178, _s25MessageSectionsToDownloadVMa);
    }
  }
  uint64_t v69 = v190;
  uint64_t v70 = (uint64_t)v61 + ((*(unsigned __int8 *)(v190 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80));
  swift_bridgeObjectRetain();
  uint64_t v71 = *(void *)(v69 + 72);
  unsigned int v72 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v73 = v192;
    sub_1001421B8(v70, v192, type metadata accessor for DownloadTask.CommandID);
    uint64_t v74 = v73;
    uint64_t v75 = v186;
    sub_1001421B8(v74, v186, type metadata accessor for DownloadTask.CommandID);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v76 = v183;
      sub_100142220(v75, v183, (uint64_t (*)(void))_s18SectionDataRequestVMa);
      uint64_t v77 = swift_bridgeObjectRetain();
      char v78 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v77, v184);
      swift_bridgeObjectRelease();
      if (v78)
      {
        uint64_t v79 = v180;
        sub_1000079E4(v76, v180, &qword_100709E30);
        LODWORD(v195) = v182;
        char v80 = MessageIdentifierSet.contains(_:)();
        sub_100007A48(v79, &qword_100709E38);
        if (v80)
        {
          long long v81 = *(void **)(v76 + *(int *)(v185 + 24));
          swift_bridgeObjectRetain();
          sub_100142288(v76, (uint64_t (*)(void))_s18SectionDataRequestVMa);
          goto LABEL_21;
        }
      }
      long long v82 = (uint64_t (*)(void))_s18SectionDataRequestVMa;
      uint64_t v83 = v76;
    }
    else
    {
      long long v82 = type metadata accessor for DownloadTask.CommandID;
      uint64_t v83 = v75;
    }
    sub_100142288(v83, v82);
    long long v81 = _swiftEmptyArrayStorage;
LABEL_21:
    sub_100142288(v192, type metadata accessor for DownloadTask.CommandID);
    uint64_t v84 = v81[2];
    int64_t v85 = v72[2];
    int64_t v86 = v85 + v84;
    if (__OFADD__(v85, v84)) {
      break;
    }
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || v86 > v72[3] >> 1)
    {
      if (v85 <= v86) {
        int64_t v88 = v85 + v84;
      }
      else {
        int64_t v88 = v85;
      }
      unsigned int v72 = sub_1000178E4(isUniquelyReferenced_nonNull_native, v88, 1, v72);
    }
    uint64_t v63 = (uint64_t)v191;
    if (v81[2])
    {
      uint64_t v89 = v72[2];
      if ((v72[3] >> 1) - v89 < v84) {
        goto LABEL_74;
      }
      uint64_t v90 = &v72[v89 + 4];
      if (v81 + 4 < &v90[v84] && v90 < &v81[v84 + 4]) {
        goto LABEL_79;
      }
      memcpy(v90, v81 + 4, 8 * v84);
      if (v84)
      {
        uint64_t v92 = v72[2];
        BOOL v93 = __OFADD__(v92, v84);
        uint64_t v94 = v92 + v84;
        if (v93) {
          goto LABEL_75;
        }
        v72[2] = v94;
      }
    }
    else if (v84)
    {
      goto LABEL_73;
    }
    swift_bridgeObjectRelease();
    v70 += v71;
    if (!--v68)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      a4 = v177;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100142288((uint64_t)v178, _s25MessageSectionsToDownloadVMa);
  __break(1u);
LABEL_79:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1001421B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100142220(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100142288(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001422E8(int a1, uint64_t a2)
{
  int v29 = a1;
  uint64_t v3 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = _s18SectionDataRequestVMa();
  __chkstk_darwin(v30);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DownloadTask.CommandID(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v15 = sub_100164B0C(a2);
  uint64_t v16 = v15[2];
  if (v16)
  {
    uint64_t v17 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v28 = v15;
    uint64_t v18 = (uint64_t)v15 + ((v17 + 32) & ~v17);
    uint64_t v19 = *(void *)(v9 + 72);
    while (1)
    {
      sub_1001421B8(v18, (uint64_t)v14, type metadata accessor for DownloadTask.CommandID);
      sub_1001421B8((uint64_t)v14, (uint64_t)v12, type metadata accessor for DownloadTask.CommandID);
      if (swift_getEnumCaseMultiPayload() != 3) {
        break;
      }
      sub_100142220((uint64_t)v12, (uint64_t)v7, (uint64_t (*)(void))_s18SectionDataRequestVMa);
      uint64_t v20 = swift_bridgeObjectRetain();
      char v21 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v20, _swiftEmptyArrayStorage);
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0
        || (sub_1000079E4((uint64_t)v7, (uint64_t)v5, &qword_100709E30),
            int v31 = v29,
            sub_10000566C(&qword_100709E38),
            char v22 = MessageIdentifierSet.contains(_:)(),
            sub_100007A48((uint64_t)v5, &qword_100709E38),
            (v22 & 1) == 0)
        || (uint64_t v23 = *(void *)&v7[*(int *)(v30 + 24)], *(void *)(v23 + 16) != 1))
      {
        uint64_t v25 = (uint64_t (*)(void))_s18SectionDataRequestVMa;
        uint64_t v26 = (uint64_t)v7;
        goto LABEL_11;
      }
      int v24 = *(_DWORD *)(v23 + 32);
      sub_100142288((uint64_t)v7, (uint64_t (*)(void))_s18SectionDataRequestVMa);
      if (!v24)
      {
        sub_100142288((uint64_t)v14, type metadata accessor for DownloadTask.CommandID);
        swift_bridgeObjectRelease();
        return 1;
      }
LABEL_12:
      sub_100142288((uint64_t)v14, type metadata accessor for DownloadTask.CommandID);
      v18 += v19;
      if (!--v16) {
        goto LABEL_13;
      }
    }
    uint64_t v25 = type metadata accessor for DownloadTask.CommandID;
    uint64_t v26 = (uint64_t)v12;
LABEL_11:
    sub_100142288(v26, v25);
    goto LABEL_12;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100142644(uint64_t a1)
{
  unint64_t v1 = 393216 * (a1 / 393216);
  if ((v1 & 0x8000000000000000) == 0 && !HIDWORD(v1) && v1 <= 0xFFFA0000)
  {
    if ((int)v1 + 393215 >= v1) {
      return v1 | ((v1 + 393215) << 32);
    }
    __break(1u);
  }
  uint64_t result = sub_1005E2F10();
  __break(1u);
  return result;
}

void *sub_100142734(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_1005E0AA0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000566C(&qword_10070A168);
  uint64_t v64 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (_DWORD *)((char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v84 = sub_1005E0AD0();
  uint64_t v12 = *(void *)(v84 - 8);
  uint64_t v13 = __chkstk_darwin(v84);
  uint64_t v75 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v74 = (char *)&v63 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v73 = (char *)&v63 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  char v21 = (char *)&v63 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  int v24 = (char *)&v63 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  unsigned int v72 = (char *)&v63 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v83 = (char *)&v63 - v28;
  __chkstk_darwin(v27);
  long long v82 = (char *)&v63 - v29;
  uint64_t v71 = a1;
  if (a1 < 1 || (*(unsigned char *)(v2 + 46) & 1) != 0)
  {
    return _swiftEmptyArrayStorage;
  }
  else
  {
    *(void *)int64_t v86 = *(void *)(v2 + 32);
    *(void *)&v86[5] = *(void *)(v2 + 37);
    sub_100143028((int *)&v86[8], (uint64_t)&v87);
    uint64_t v63 = v2 + 24;
    uint64_t v77 = *(void *)v86;
    uint64_t v76 = *(void *)(*(void *)v86 + 16);
    uint64_t v30 = v6;
    int v31 = (void (**)(char *, char *, uint64_t))(v12 + 32);
    unint64_t v66 = (void (**)(char *, char *, uint64_t))(v12 + 16);
    long long v81 = (void (**)(char *, uint64_t))(v12 + 8);
    unint64_t v67 = (void (**)(char *, uint64_t))(v30 + 8);
    swift_bridgeObjectRetain();
    uint64_t v32 = _swiftEmptyArrayStorage;
    uint64_t v70 = v5;
    uint64_t v69 = v8;
    uint64_t v65 = v24;
    uint64_t v68 = v31;
    while (1)
    {
      sub_100143028(&v87, (uint64_t)v88);
      swift_bridgeObjectRetain();
      sub_1005E0A50();
      swift_bridgeObjectRetain();
      sub_1005E0AC0();
      if (v76) {
        break;
      }
LABEL_9:
      uint64_t v37 = *v31;
      (*v31)(v24, v21, v84);
      sub_10001D550((uint64_t)v86);
      uint64_t v38 = a2[2];
      if (v38)
      {
        swift_bridgeObjectRetain();
        uint64_t v39 = (_DWORD *)a2 + 9;
        while (*v39 != -1)
        {
          if ((*v39 + 1) < *(v39 - 1)) {
            goto LABEL_35;
          }
          sub_1005E0A80();
          v39 += 2;
          if (!--v38)
          {
            swift_bridgeObjectRelease();
            goto LABEL_15;
          }
        }
        goto LABEL_34;
      }
LABEL_15:
      uint64_t v79 = v32;
      char v80 = a2;
      uint64_t v40 = v37;
      char v78 = v37;
      uint64_t v41 = v72;
      uint64_t v42 = v24;
      uint64_t v43 = v84;
      v40(v72, v42, v84);
      uint64_t v44 = *v66;
      unint64_t v45 = v83;
      (*v66)(v74, v83, v43);
      v44(v75, v41, v43);
      sub_10014314C(&qword_10070D800, (void (*)(uint64_t))&type metadata accessor for IndexSet);
      uint64_t v46 = v73;
      sub_1005E2AA0();
      sub_1005E2A90();
      long long v47 = *v81;
      (*v81)(v46, v43);
      v47(v41, v43);
      long long v48 = v45;
      int v31 = v68;
      v78(v82, v48, v43);
      long long v49 = v69;
      sub_1005E0AB0();
      sub_10014314C(&qword_10070D808, (void (*)(uint64_t))&type metadata accessor for IndexSet.RangeView);
      uint64_t v50 = v70;
      sub_1005E2390();
      sub_1005E23E0();
      if (v85[4] == v85[0])
      {
        (*v67)(v49, v50);
        v47(v82, v84);
        swift_bridgeObjectRelease();
        uint64_t v32 = v79;
LABEL_31:
        swift_bridgeObjectRelease();
        return v32;
      }
      long long v51 = (void (*)(void *, void))sub_1005E24D0();
      uint64_t v53 = *v52;
      v51(v85, 0);
      (*v67)(v49, v50);
      unint64_t v54 = 393216 * (v53 / 393216);
      a2 = v80;
      if ((v54 & 0x8000000000000000) != 0) {
        goto LABEL_36;
      }
      int v24 = v65;
      uint64_t v32 = v79;
      if (HIDWORD(v54) || v54 >= 0xFFFA0001) {
        goto LABEL_36;
      }
      v47(v82, v84);
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a2 = sub_1000178E4(0, a2[2] + 1, 1, a2);
      }
      unint64_t v56 = a2[2];
      unint64_t v55 = a2[3];
      if (v56 >= v55 >> 1) {
        a2 = sub_1000178E4((void *)(v55 > 1), v56 + 1, 1, a2);
      }
      a2[2] = v56 + 1;
      long long v57 = &a2[v56];
      *((_DWORD *)v57 + 8) = v54;
      *((_DWORD *)v57 + 9) = v54 + 393215;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v32 = sub_1000178E4(0, v32[2] + 1, 1, v32);
      }
      unint64_t v59 = v32[2];
      unint64_t v58 = v32[3];
      uint64_t v60 = v59 + 1;
      if (v59 >= v58 >> 1) {
        uint64_t v32 = sub_1000178E4((void *)(v58 > 1), v59 + 1, 1, v32);
      }
      v32[2] = v60;
      uint64_t v61 = &v32[v59];
      *((_DWORD *)v61 + 8) = v54;
      *((_DWORD *)v61 + 9) = v54 + 393215;
      if (v60 >= v71) {
        goto LABEL_31;
      }
    }
    uint64_t v33 = v64;
    uint64_t v34 = v77 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
    swift_bridgeObjectRetain();
    uint64_t v35 = *(void *)(v33 + 72);
    uint64_t v36 = v76;
    while (1)
    {
      sub_100143084(v34, (uint64_t)v11);
      if (v11[1] < *v11) {
        break;
      }
      sub_1005E0A80();
      sub_1001430EC((uint64_t)v11);
      v34 += v35;
      if (!--v36)
      {
        sub_10001D550((uint64_t)v86);
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    uint64_t result = (void *)sub_1005E2F10();
    __break(1u);
  }
  return result;
}

uint64_t sub_100143028(int *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100143084(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070A168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001430EC(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_10070A168);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10014314C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s21SectionDownloadStatusVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_WORD *)(a1 + 44) = *(_WORD *)(a2 + 44);
  *(unsigned char *)(a1 + 46) = *(unsigned char *)(a2 + 46);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s21SectionDownloadStatusVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(_DWORD *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 45) = *(unsigned char *)(a2 + 45);
  *(unsigned char *)(a1 + 46) = *(unsigned char *)(a2 + 46);
  return a1;
}

__n128 _s21SectionDownloadStatusVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 31) = *(_OWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s21SectionDownloadStatusVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(unsigned char *)(a1 + 45) = *(unsigned char *)(a2 + 45);
  *(unsigned char *)(a1 + 46) = *(unsigned char *)(a2 + 46);
  return a1;
}

uint64_t _s21SectionDownloadStatusVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 47)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s21SectionDownloadStatusVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 46) = 0;
    *(_WORD *)(result + 44) = 0;
    *(_DWORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 47) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 47) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s21SectionDownloadStatusVMa()
{
  return &_s21SectionDownloadStatusVN;
}

Swift::Int sub_10014340C()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA120);
  qword_100761750 = result;
  return result;
}

uint64_t sub_100143434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v38 = _s15MissingMessagesO8CompleteVMa(0);
  __chkstk_darwin(v38);
  int v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s15MissingMessagesO11QueriedUIDsVMa(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s15MissingMessagesO10IncompleteVMa(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000566C(&qword_100709E38);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = _s15MissingMessagesOMa(0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100147A98(a1, (uint64_t)v22, _s15MissingMessagesOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10014B8DC((uint64_t)v22, (uint64_t)v4, _s15MissingMessagesO8CompleteVMa);
      sub_10001FC6C();
      sub_1005E3680();
      sub_100147B20(a1, _s15MissingMessagesOMa);
      sub_100147A98((uint64_t)&v4[*(int *)(v38 + 20)], (uint64_t)v7, _s15MissingMessagesO11QueriedUIDsVMa);
      sub_10001FDF0((uint64_t)v7, (uint64_t)v17, &qword_100709E38);
      int v24 = *(_DWORD *)v4;
      char v25 = v4[4];
      sub_100147B20((uint64_t)v4, _s15MissingMessagesO8CompleteVMa);
      uint64_t v26 = (uint64_t)v19;
      uint64_t v27 = v39;
      sub_10001FDF0(v26, v39, &qword_100709E38);
      uint64_t v28 = type metadata accessor for FetchMessages.MissingUIDs(0);
      uint64_t result = sub_10001FDF0((uint64_t)v17, v27 + *(int *)(v28 + 20), &qword_100709E38);
      uint64_t v30 = v27 + *(int *)(v28 + 24);
      *(_DWORD *)uint64_t v30 = v24;
    }
    else
    {
      sub_10001FC6C();
      sub_1005E3680();
      sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
      sub_100147B20(a1, _s15MissingMessagesOMa);
      uint64_t v36 = v39;
      sub_10001FDF0((uint64_t)v19, v39, &qword_100709E38);
      uint64_t v37 = type metadata accessor for FetchMessages.MissingUIDs(0);
      uint64_t result = sub_10001FDF0((uint64_t)v17, v36 + *(int *)(v37 + 20), &qword_100709E38);
      uint64_t v30 = v36 + *(int *)(v37 + 24);
      *(_DWORD *)uint64_t v30 = 0;
      char v25 = 1;
    }
  }
  else
  {
    sub_100147B20(a1, _s15MissingMessagesOMa);
    sub_10014B8DC((uint64_t)v22, (uint64_t)v13, _s15MissingMessagesO10IncompleteVMa);
    sub_1000079E4((uint64_t)v13, (uint64_t)v10, &qword_100709E30);
    sub_10001FDF0((uint64_t)v10, (uint64_t)v19, &qword_100709E38);
    sub_100147A98((uint64_t)&v13[*(int *)(v11 + 24)], (uint64_t)v7, _s15MissingMessagesO11QueriedUIDsVMa);
    sub_10001FDF0((uint64_t)v7, (uint64_t)v17, &qword_100709E38);
    int v31 = &v13[*(int *)(v11 + 20)];
    int v32 = *(_DWORD *)v31;
    char v25 = v31[4];
    sub_100147B20((uint64_t)v13, _s15MissingMessagesO10IncompleteVMa);
    uint64_t v33 = (uint64_t)v19;
    uint64_t v34 = v39;
    sub_10001FDF0(v33, v39, &qword_100709E38);
    uint64_t v35 = type metadata accessor for FetchMessages.MissingUIDs(0);
    uint64_t result = sub_10001FDF0((uint64_t)v17, v34 + *(int *)(v35 + 20), &qword_100709E38);
    uint64_t v30 = v34 + *(int *)(v35 + 24);
    *(_DWORD *)uint64_t v30 = v32;
  }
  *(unsigned char *)(v30 + 4) = v25;
  return result;
}

uint64_t sub_10014392C@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, unint64_t a6@<X5>, int a7@<W6>, int a8@<W7>, uint64_t a9@<X8>)
{
  int v48 = a7;
  int v49 = a8;
  unint64_t v50 = a6;
  int v56 = a5;
  uint64_t v55 = a4;
  uint64_t v59 = a3;
  uint64_t v57 = a2;
  uint64_t v11 = sub_10000566C(&qword_10070D810);
  __chkstk_darwin(v11 - 8);
  long long v51 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v58);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000566C(&qword_100709E30);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v47 = (uint64_t)&v47 - v23;
  *(void *)a9 = sub_10009A7D4((uint64_t)&off_1006BA5D8);
  *(unsigned char *)(a9 + 8) = 0;
  Messages = (int *)type metadata accessor for FetchMessages(0);
  uint64_t v25 = a9 + Messages[9];
  uint64_t v26 = (int *)type metadata accessor for NewServerMessages();
  uint64_t v27 = *((void *)v26 - 1);
  uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v27 + 56);
  uint64_t v54 = v25;
  uint64_t v52 = v27 + 56;
  v53(v25, 1, 1, v26);
  long long v28 = a1[1];
  long long v64 = *a1;
  uint64_t v62 = *((void *)a1 + 3);
  int v29 = *((_DWORD *)a1 + 8);
  *(_OWORD *)(a9 + 16) = v64;
  *(_OWORD *)(a9 + 32) = v28;
  *(_DWORD *)(a9 + 48) = v29;
  *(void *)(a9 + Messages[8]) = Messages;
  int v63 = v29;
  uint64_t v60 = *((void *)a1 + 3);
  int v61 = *((_DWORD *)a1 + 8);
  swift_bridgeObjectRetain();
  sub_10002292C((uint64_t)&v62);
  sub_10002292C((uint64_t)&v64);
  sub_10003BC88();
  uint64_t v30 = v57;
  sub_1005E2BF0();
  sub_100147A98(v30, a9 + Messages[7], type metadata accessor for MessageBatches);
  sub_100147A98(v59, a9 + Messages[10], type metadata accessor for FetchMessages.MissingUIDs);
  sub_10006654C(47, (uint64_t)v14);
  MessageIdentifierSet.count.getter();
  if (v31 < 1)
  {
    sub_100007A48((uint64_t)v14, &qword_100709E38);
    uint64_t v32 = 1;
  }
  else
  {
    sub_10001FDF0((uint64_t)v14, (uint64_t)v22, &qword_100709E38);
    sub_10001FDF0((uint64_t)v22, (uint64_t)v17, &qword_100709E30);
    uint64_t v32 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, v32, 1, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_10001D550((uint64_t)&v64);
    sub_10001D550((uint64_t)&v62);
    sub_100147B20(v59, type metadata accessor for FetchMessages.MissingUIDs);
    sub_100147B20(v30, type metadata accessor for MessageBatches);
    sub_100007A48((uint64_t)v17, &qword_10070A000);
    uint64_t v33 = v54;
    sub_100007A48(v54, &qword_10070D810);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))v53)(v33, 1, 1, v26);
  }
  else
  {
    char v35 = v48 & 1;
    char v36 = v49 & 1;
    uint64_t v37 = (uint64_t)v17;
    uint64_t v38 = v47;
    sub_10001FDF0(v37, v47, &qword_100709E30);
    uint64_t v39 = (uint64_t)v51;
    sub_1000079E4(v38, (uint64_t)&v51[v26[5]], &qword_100709E30);
    uint64_t v40 = v26[9];
    sub_10001D550((uint64_t)&v64);
    *(void *)(v39 + v40) = _swiftEmptyArrayStorage;
    *(_DWORD *)(v39 + 8) = v63;
    *(void *)uint64_t v39 = v62;
    uint64_t v41 = v39 + v26[6];
    unint64_t v42 = v50;
    *(unsigned char *)uint64_t v41 = v50 & 1;
    uint64x2_t v43 = (uint64x2_t)vdupq_n_s64(v42);
    int16x8_t v44 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v43, (uint64x2_t)xmmword_1005F66C0), (int32x4_t)vshlq_u64(v43, (uint64x2_t)xmmword_1005F66B0));
    *(int8x8_t *)v44.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v44), (int8x8_t)0x1000100010001);
    *(_DWORD *)(v41 + 1) = vmovn_s16(v44).u32[0];
    *(unsigned char *)(v39 + v26[7]) = v35;
    *(unsigned char *)(v39 + v26[8]) = v36;
    sub_100147B20(v59, type metadata accessor for FetchMessages.MissingUIDs);
    sub_100147B20(v30, type metadata accessor for MessageBatches);
    sub_100007A48(v38, &qword_100709E30);
    v53(v39, 0, 1, v26);
    uint64_t result = sub_100147B80(v39, v54);
  }
  char v45 = v56;
  uint64_t v46 = a9 + Messages[11];
  *(void *)uint64_t v46 = v55;
  *(unsigned char *)(v46 + 8) = v45 & 1;
  return result;
}

uint64_t sub_100143ED0(NSObject *a1)
{
  os_log_t v132 = a1;
  uint64_t Messages = type metadata accessor for FetchMessages(0);
  uint64_t v3 = __chkstk_darwin(Messages);
  uint64_t v127 = (uint64_t)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v126 = (uint64_t)&v116 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v124 = (uint64_t)&v116 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v123 = ((char *)&v116 - v10);
  __chkstk_darwin(v9);
  uint64_t v122 = (uint64_t)&v116 - v11;
  uint64_t v125 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v12 = __chkstk_darwin(v125);
  uint64_t v128 = (uint64_t)&v116 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v121 = (uint64_t)&v116 - v14;
  uint64_t v15 = sub_1005E0ED0();
  uint64_t v131 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v116 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v116 - v19;
  uint64_t v21 = sub_10000566C(&qword_10070D810);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v116 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10000566C(&qword_100709E30);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v27 = (char *)&v116 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v30 = (char *)&v116 - v29;
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v33 = (char *)&v116 - v32;
  __chkstk_darwin(v31);
  char v35 = (char *)&v116 - v34;
  uint64_t v130 = (int *)Messages;
  uint64_t v36 = v1;
  sub_10000566C(&qword_100709E60);
  char v37 = sub_1005E3630();
  os_log_t v38 = v132;
  if (v37)
  {
LABEL_4:
    uint64_t v41 = v131;
    (*(void (**)(char *, os_log_t, uint64_t))(v131 + 16))(v18, v38, v15);
    uint64_t v42 = v128;
    sub_100147A98((uint64_t)v38, v128, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v43 = v36;
    uint64_t v44 = v36;
    uint64_t v45 = v126;
    sub_100147A98(v44, v126, type metadata accessor for FetchMessages);
    uint64_t v46 = v127;
    sub_100147A98(v43, v127, type metadata accessor for FetchMessages);
    uint64_t v47 = sub_1005E0EB0();
    int v48 = sub_1005E25C0();
    uint64_t v49 = (uint64_t)v18;
    uint64_t v50 = v42;
    if (os_log_type_enabled(v47, (os_log_type_t)v48))
    {
      LODWORD(v132) = v48;
      uint64_t v122 = v49;
      uint64_t v123 = v47;
      uint64_t v129 = v15;
      uint64_t v51 = swift_slowAlloc();
      uint64_t v124 = swift_slowAlloc();
      v136[0] = v124;
      *(_DWORD *)uint64_t v51 = 68159747;
      LODWORD(v134) = 2;
      sub_1005E2960();
      *(_WORD *)(v51 + 8) = 256;
      uint64_t v52 = v42 + *(int *)(v125 + 20);
      LOBYTE(v134) = *(unsigned char *)v52;
      sub_1005E2960();
      *(_WORD *)(v51 + 11) = 2082;
      uint64_t v54 = *(void *)(v52 + 8);
      unint64_t v53 = *(void *)(v52 + 16);
      swift_bridgeObjectRetain();
      uint64_t v134 = sub_1000C6914(v54, v53, v136);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 21) = 1040;
      LODWORD(v134) = 2;
      sub_1005E2960();
      *(_WORD *)(v51 + 27) = 512;
      LOWORD(v134) = *(_WORD *)(v52 + 24);
      sub_1005E2960();
      *(_WORD *)(v51 + 31) = 2160;
      uint64_t v134 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v51 + 41) = 2085;
      int v55 = *(_DWORD *)(v52 + 40);
      uint64_t v134 = *(void *)(v52 + 32);
      LODWORD(v135) = v55;
      swift_bridgeObjectRetain();
      uint64_t v56 = sub_1005E1CC0();
      uint64_t v134 = sub_1000C6914(v56, v57, v136);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100147B20(v50, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v51 + 51) = 2080;
      uint64_t v58 = v45 + v130[11];
      if (*(unsigned char *)(v58 + 8))
      {
        unint64_t v59 = 0xE100000000000000;
        uint64_t v60 = 45;
      }
      else
      {
        uint64_t v103 = *(void *)v58;
        uint64_t v134 = 0;
        unint64_t v135 = 0xE000000000000000;
        uint64_t v133 = v103;
        sub_10000566C(&qword_10070A9B8);
        sub_1005E2E90();
        uint64_t v60 = v134;
        unint64_t v59 = v135;
      }
      uint64_t v104 = v129;
      uint64_t v106 = v122;
      uint64_t v105 = v123;
      uint64_t v134 = sub_1000C6914(v60, v59, v136);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100147B20(v45, type metadata accessor for FetchMessages);
      *(_WORD *)(v51 + 61) = 1024;
      uint64_t v107 = v130[10];
      uint64_t v108 = v46 + v107 + *(int *)(type metadata accessor for FetchMessages.MissingUIDs(0) + 24);
      if (*(unsigned char *)(v108 + 4)) {
        int v109 = 0;
      }
      else {
        int v109 = *(_DWORD *)v108;
      }
      sub_100147B20(v46, type metadata accessor for FetchMessages);
      LODWORD(v134) = v109;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v105, (os_log_type_t)v132, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task with fetched-window %s (persisted) -> %u (new)", (uint8_t *)v51, 0x43u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(uint64_t, uint64_t))(v131 + 8))(v106, v104);
    }
    else
    {
      sub_100147B20(v46, type metadata accessor for FetchMessages);
      sub_100147B20(v42, type metadata accessor for MailboxTaskLogger);
      sub_100147B20(v45, type metadata accessor for FetchMessages);

      return (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v49, v15);
    }
  }
  long long v119 = v20;
  long long v120 = v30;
  uint64_t v129 = v15;
  long long v117 = v27;
  long long v118 = v35;
  sub_1000079E4(v36 + v130[9], (uint64_t)v23, &qword_10070D810);
  uint64_t v39 = type metadata accessor for NewServerMessages();
  uint64_t v40 = v36;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v23, 1, v39) == 1)
  {
    sub_100007A48((uint64_t)v23, &qword_10070D810);
    uint64_t v15 = v129;
    os_log_t v38 = v132;
    goto LABEL_4;
  }
  sub_1000079E4((uint64_t)&v23[*(int *)(v39 + 20)], (uint64_t)v33, &qword_100709E30);
  sub_100147B20((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
  uint64_t v62 = (uint64_t)v118;
  sub_10001FDF0((uint64_t)v33, (uint64_t)v118, &qword_100709E30);
  uint64_t v64 = v131;
  os_log_t v63 = v132;
  uint64_t v65 = v119;
  (*(void (**)(char *, os_log_t, uint64_t))(v131 + 16))(v119, v132, v129);
  uint64_t v66 = (uint64_t)v63;
  uint64_t v67 = v121;
  sub_100147A98(v66, v121, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v68 = v40;
  uint64_t v69 = v40;
  uint64_t v70 = v122;
  sub_100147A98(v68, v122, type metadata accessor for FetchMessages);
  sub_1000079E4(v62, (uint64_t)v120, &qword_100709E30);
  uint64_t v71 = (uint64_t)v117;
  sub_1000079E4(v62, (uint64_t)v117, &qword_100709E30);
  uint64_t v72 = (uint64_t)v123;
  sub_100147A98(v69, (uint64_t)v123, type metadata accessor for FetchMessages);
  uint64_t v73 = v69;
  uint64_t v74 = v124;
  sub_100147A98(v73, v124, type metadata accessor for FetchMessages);
  uint64_t v75 = sub_1005E0EB0();
  int v76 = sub_1005E25C0();
  if (os_log_type_enabled(v75, (os_log_type_t)v76))
  {
    LODWORD(v128) = v76;
    os_log_t v132 = v75;
    uint64_t v77 = swift_slowAlloc();
    uint64_t v127 = swift_slowAlloc();
    v136[0] = v127;
    *(_DWORD *)uint64_t v77 = 68160515;
    LODWORD(v134) = 2;
    sub_1005E2960();
    *(_WORD *)(v77 + 8) = 256;
    uint64_t v78 = v67 + *(int *)(v125 + 20);
    LOBYTE(v134) = *(unsigned char *)v78;
    sub_1005E2960();
    *(_WORD *)(v77 + 11) = 2082;
    uint64_t v79 = *(void *)(v78 + 8);
    unint64_t v80 = *(void *)(v78 + 16);
    swift_bridgeObjectRetain();
    uint64_t v134 = sub_1000C6914(v79, v80, v136);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v77 + 21) = 1040;
    LODWORD(v134) = 2;
    uint64_t v81 = v129;
    sub_1005E2960();
    *(_WORD *)(v77 + 27) = 512;
    LOWORD(v134) = *(_WORD *)(v78 + 24);
    sub_1005E2960();
    *(_WORD *)(v77 + 31) = 2160;
    uint64_t v134 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v77 + 41) = 2085;
    int v82 = *(_DWORD *)(v78 + 40);
    uint64_t v134 = *(void *)(v78 + 32);
    LODWORD(v135) = v82;
    swift_bridgeObjectRetain();
    uint64_t v83 = sub_1005E1CC0();
    uint64_t v134 = sub_1000C6914(v83, v84, v136);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100147B20(v67, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v77 + 51) = 2048;
    int64_t v85 = v130;
    uint64_t v86 = v122;
    uint64_t v87 = sub_10000566C(&qword_100709E38);
    MessageIdentifierSet.count.getter();
    uint64_t v89 = v88;
    sub_100147B20(v86, type metadata accessor for FetchMessages);
    uint64_t v134 = v89;
    sub_1005E2960();
    *(_WORD *)(v77 + 61) = 2048;
    uint64_t v90 = (uint64_t)v120;
    MessageIdentifierSet.count.getter();
    uint64_t v92 = v91;
    sub_100007A48(v90, &qword_100709E30);
    uint64_t v134 = v92;
    sub_1005E2960();
    *(_WORD *)(v77 + 71) = 2082;
    uint64_t v93 = v87;
    uint64_t v94 = (uint64_t)v117;
    uint64_t v95 = MessageIdentifierSet.debugDescription.getter(v93);
    uint64_t v134 = sub_1000C6914(v95, v96, v136);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    uint64_t v97 = v94;
    uint64_t v98 = v119;
    sub_100007A48(v97, &qword_100709E30);
    *(_WORD *)(v77 + 81) = 2080;
    uint64_t v99 = (uint64_t)v123;
    uint64_t v100 = (char *)v123 + v85[11];
    if (v100[8])
    {
      unint64_t v101 = 0xE100000000000000;
      uint64_t v102 = 45;
    }
    else
    {
      uint64_t v111 = *(void *)v100;
      uint64_t v134 = 0;
      unint64_t v135 = 0xE000000000000000;
      uint64_t v133 = v111;
      sub_10000566C(&qword_10070A9B8);
      sub_1005E2E90();
      uint64_t v102 = v134;
      unint64_t v101 = v135;
    }
    uint64_t v134 = sub_1000C6914(v102, v101, v136);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100147B20(v99, type metadata accessor for FetchMessages);
    *(_WORD *)(v77 + 91) = 1024;
    uint64_t v112 = v130[10];
    long long v113 = (int *)(v124 + v112 + *(int *)(type metadata accessor for FetchMessages.MissingUIDs(0) + 24));
    if (*((unsigned char *)v113 + 4)) {
      int v114 = 0;
    }
    else {
      int v114 = *v113;
    }
    sub_100147B20(v124, type metadata accessor for FetchMessages);
    LODWORD(v134) = v114;
    sub_1005E2960();
    os_log_t v115 = v132;
    _os_log_impl((void *)&_mh_execute_header, v132, (os_log_type_t)v128, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task with missing %ld, batch %ld UIDs %{public}s, fetched-window %s (persisted) -> %u (new)", (uint8_t *)v77, 0x61u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v131 + 8))(v98, v81);
    uint64_t v110 = (uint64_t)v118;
  }
  else
  {
    sub_100147B20(v74, type metadata accessor for FetchMessages);
    sub_100007A48((uint64_t)v120, &qword_100709E30);
    sub_100147B20(v70, type metadata accessor for FetchMessages);

    sub_100147B20(v72, type metadata accessor for FetchMessages);
    sub_100007A48(v71, &qword_100709E30);
    sub_100147B20(v67, type metadata accessor for MailboxTaskLogger);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v129);
    uint64_t v110 = v62;
  }
  return sub_100007A48(v110, &qword_100709E30);
}

uint64_t sub_100144DD8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v38 = a1;
  uint64_t v5 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = sub_10000566C(&qword_10070D810);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for NewServerMessages();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Messages = type metadata accessor for FetchMessages(0);
  sub_1000079E4(v3 + *(int *)(Messages + 36), (uint64_t)v13, &qword_10070D810);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_100007A48((uint64_t)v13, &qword_10070D810);
    goto LABEL_14;
  }
  sub_10014B8DC((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
  uint64_t v19 = sub_1001A9BB4(v37);
  uint64_t v20 = v19[2];
  if (!v20)
  {
    swift_bridgeObjectRelease();
LABEL_16:
    sub_10019CE28(a3);
    sub_100147B20((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    uint64_t v30 = sub_10000566C(&qword_10070DA28);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a3, 0, 1, v30);
  }
  uint64_t v31 = v19;
  uint64_t v32 = v17;
  uint64_t v21 = 0;
  uint64_t v34 = v19 + 4;
  uint64_t v35 = a3;
  uint64_t v37 = *(void *)(v38 + 16);
  uint64_t v33 = v20;
  while (!v37)
  {
LABEL_6:
    if (++v21 == v20)
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = v32;
      goto LABEL_16;
    }
  }
  int v22 = *((_DWORD *)v34 + v21);
  uint64_t v23 = v36;
  uint64_t v24 = v38 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
  swift_bridgeObjectRetain();
  uint64_t v25 = *(void *)(v23 + 72);
  uint64_t v26 = v37;
  while (1)
  {
    sub_100147A98(v24, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    sub_100147A98((uint64_t)v10, (uint64_t)v8, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_100147B20((uint64_t)v8, type metadata accessor for TaskHistory.Previous);
LABEL_10:
    sub_100147B20((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    v24 += v25;
    if (!--v26)
    {
      swift_bridgeObjectRelease();
      a3 = v35;
      uint64_t v20 = v33;
      goto LABEL_6;
    }
  }
  int v27 = *(_DWORD *)&v8[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
  sub_100147B20((uint64_t)v8, type metadata accessor for ClientCommand);
  if (v27 != v22) {
    goto LABEL_10;
  }
  sub_100147B20((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100147B20((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
  a3 = v35;
LABEL_14:
  uint64_t v28 = sub_10000566C(&qword_10070DA28);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a3, 1, 1, v28);
}

uint64_t sub_100145248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v77 = a3;
  uint64_t v78 = a1;
  uint64_t v89 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v76 = *(void *)(v89 - 8);
  uint64_t v8 = __chkstk_darwin(v89);
  uint64_t v88 = (uint64_t)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v75 - v10;
  uint64_t v12 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v87 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v92 = (uint64_t)&v75 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v75 - v19;
  __chkstk_darwin(v18);
  int v22 = (char *)&v75 - v21;
  uint64_t v23 = sub_10000566C(&qword_10070D810);
  __chkstk_darwin(v23 - 8);
  unint64_t v80 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for NewServerMessages();
  uint64_t v79 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v81 = (uint64_t)&v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1001053D0(a4);
  int v27 = (void *)v26[2];
  uint64_t v91 = v11;
  if (v27)
  {
    uint64_t v75 = v4;
    uint64_t v28 = 0;
    unint64_t v84 = v26 + 4;
    int64_t v85 = v26;
    uint64_t v90 = *(void **)(a2 + 16);
    uint64_t v86 = a2;
    uint64_t v83 = v27;
    do
    {
      if (v90)
      {
        int v29 = *((_DWORD *)v84 + (void)v28);
        uint64_t v30 = v87;
        uint64_t v31 = a2 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
        swift_bridgeObjectRetain_n();
        uint64_t v32 = *(void *)(v30 + 72);
        uint64_t v33 = v90;
        do
        {
          sub_100147A98(v31, (uint64_t)v22, type metadata accessor for TaskHistory.Previous);
          sub_100147A98((uint64_t)v22, (uint64_t)v20, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            int v34 = *((_DWORD *)v20 + 2);
            sub_10007C4A4(*(void *)v20);
            if (v34 == v29)
            {
              sub_100147B20((uint64_t)v22, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              return 0xF000000000000007;
            }
          }
          else
          {
            sub_100147B20((uint64_t)v20, type metadata accessor for TaskHistory.Previous);
          }
          sub_100147B20((uint64_t)v22, type metadata accessor for TaskHistory.Previous);
          v31 += v32;
          uint64_t v33 = (void *)((char *)v33 - 1);
        }
        while (v33);
        a2 = v86;
        swift_bridgeObjectRelease_n();
        uint64_t v11 = v91;
        int v27 = v83;
      }
      uint64_t v28 = (void *)((char *)v28 + 1);
    }
    while (v28 != v27);
    swift_bridgeObjectRelease();
    uint64_t v5 = v75;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v36 = v79;
  uint64_t v35 = (uint64_t)v80;
  uint64_t Messages = type metadata accessor for FetchMessages(0);
  sub_1000079E4(v5 + *(int *)(Messages + 36), v35, &qword_10070D810);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v35, 1, v82) == 1)
  {
    sub_100007A48(v35, &qword_10070D810);
    uint64_t v38 = sub_100145AAC();
    if ((v39 & 1) == 0)
    {
      uint64_t v40 = v38;
      uint64_t v41 = swift_allocObject();
      uint64_t v42 = *(void *)(v5 + 24);
      *(void *)(v41 + 16) = *(void *)(v5 + 16);
      *(void *)(v41 + 24) = v42;
      *(void *)(v41 + 32) = _swiftEmptyArrayStorage;
      *(void *)(v41 + 40) = v40;
      *(unsigned char *)(v41 + 48) = 0;
      uint64_t v43 = v41 | 0x2000000000000004;
      swift_bridgeObjectRetain();
      return v43;
    }
    return 0xF000000000000007;
  }
  sub_10014B8DC(v35, v81, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
  uint64_t v44 = sub_1001A9BB4(v77);
  uint64_t v45 = (void *)v44[2];
  if (!v45)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    uint64_t v73 = v81;
LABEL_43:
    sub_100147B20(v73, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    return 0xF000000000000007;
  }
  uint64_t v46 = 0;
  uint64_t v83 = v44;
  unint64_t v84 = v45;
  uint64_t v90 = v44 + 4;
  uint64_t v47 = *(void **)(a2 + 16);
  uint64_t v75 = v5;
  int64_t v85 = v47;
  uint64_t v86 = a2;
  while (!v47)
  {
LABEL_20:
    if ((void *)++v46 == v45) {
      goto LABEL_42;
    }
  }
  int v48 = *((_DWORD *)v90 + v46);
  uint64_t v49 = v87;
  uint64_t v50 = a2 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
  swift_bridgeObjectRetain();
  uint64_t v51 = *(void *)(v49 + 72);
  uint64_t v52 = v47;
  uint64_t v53 = v92;
  while (1)
  {
    sub_100147A98(v50, v53, type metadata accessor for TaskHistory.Previous);
    sub_100147A98(v53, (uint64_t)v15, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_100147B20((uint64_t)v15, type metadata accessor for TaskHistory.Previous);
LABEL_24:
    uint64_t v53 = v92;
    sub_100147B20(v92, type metadata accessor for TaskHistory.Previous);
    v50 += v51;
    uint64_t v52 = (void *)((char *)v52 - 1);
    if (!v52)
    {
      uint64_t v47 = v85;
      a2 = v86;
LABEL_19:
      uint64_t v45 = v84;
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  int v54 = *(_DWORD *)&v15[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
  sub_100147B20((uint64_t)v15, type metadata accessor for ClientCommand);
  if (v54 != v48) {
    goto LABEL_24;
  }
  sub_100147B20(v92, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  uint64_t v55 = *(void *)(v78 + 16);
  if (v55)
  {
    uint64_t v56 = v76;
    uint64_t v57 = v78 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
    swift_bridgeObjectRetain();
    uint64_t v58 = *(void *)(v56 + 72);
    uint64_t v47 = v85;
    do
    {
      sub_100147A98(v57, (uint64_t)v11, type metadata accessor for TaskHistory.Running);
      uint64_t v59 = (uint64_t)v11;
      uint64_t v60 = v88;
      sub_100147A98(v59, v88, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_100147B20(v60, type metadata accessor for TaskHistory.Running);
      }
      else
      {
        int v61 = *(_DWORD *)(v60 + 8);
        uint64_t v62 = sub_10000566C(&qword_10070B6A0);
        sub_100147B20(v60 + *(int *)(v62 + 64), type metadata accessor for ClientCommand);
        if (v61 == v48)
        {
          uint64_t v11 = v91;
          sub_100147B20((uint64_t)v91, type metadata accessor for TaskHistory.Running);
          a2 = v86;
          goto LABEL_19;
        }
      }
      uint64_t v11 = v91;
      sub_100147B20((uint64_t)v91, type metadata accessor for TaskHistory.Running);
      v57 += v58;
      --v55;
    }
    while (v55);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v63 = v75;
  uint64_t v64 = sub_100145AAC();
  int v66 = v65 & 1;
  uint64_t v67 = v81;
  uint64_t v68 = *(void *)(v81 + *(int *)(v82 + 36));
  if (*(void *)(v68 + 16)) {
    BOOL v69 = 1;
  }
  else {
    BOOL v69 = v66 == 0;
  }
  if (!v69)
  {
    uint64_t v73 = v81;
    goto LABEL_43;
  }
  uint64_t v70 = v64;
  uint64_t v71 = swift_allocObject();
  uint64_t v72 = *(void *)(v63 + 24);
  *(void *)(v71 + 16) = *(void *)(v63 + 16);
  *(void *)(v71 + 24) = v72;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100147B20(v67, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
  *(void *)(v71 + 32) = v68;
  *(void *)(v71 + 40) = v70;
  *(unsigned char *)(v71 + 48) = v66;
  return v71 | 0x2000000000000004;
}

uint64_t sub_100145AAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_10070D810);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_100709E38);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = type metadata accessor for FetchMessages.MissingUIDs(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Messages = (int *)type metadata accessor for FetchMessages(0);
  sub_100147A98(v1 + Messages[10], (uint64_t)v16, type metadata accessor for FetchMessages.MissingUIDs);
  uint64_t v18 = v1 + Messages[11];
  unint64_t v19 = *(void *)v18;
  char v20 = *(unsigned char *)(v18 + 8);
  sub_1000079E4(v1 + Messages[9], (uint64_t)v7, &qword_10070D810);
  uint64_t v21 = type metadata accessor for NewServerMessages();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v7, 1, v21) == 1)
  {
    sub_100007A48((uint64_t)v7, &qword_10070D810);
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    sub_1000079E4((uint64_t)&v7[*(int *)(v21 + 20)], (uint64_t)v4, &qword_100709E30);
    sub_100147B20((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    sub_10001FDF0((uint64_t)v4, (uint64_t)v11, &qword_100709E38);
    sub_10001FDF0((uint64_t)v11, (uint64_t)v13, &qword_100709E38);
  }
  uint64_t v22 = sub_1001477E8(v19, v20, (uint64_t)v13);
  if ((v23 & 1) != 0 || (unint64_t v24 = v22, (v20 & 1) == 0) && static FetchedWindow.__derived_struct_equals(_:_:)(v22, v19))
  {
    sub_100007A48((uint64_t)v13, &qword_100709E38);
    sub_100147B20((uint64_t)v16, type metadata accessor for FetchMessages.MissingUIDs);
    return 0;
  }
  else
  {
    sub_100007A48((uint64_t)v13, &qword_100709E38);
    sub_100147B20((uint64_t)v16, type metadata accessor for FetchMessages.MissingUIDs);
    uint64_t v26 = *(void *)(v1 + Messages[7] + 8);
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27) {
      unsigned int v28 = *(_DWORD *)(v26 + 8 * v27 + 24);
    }
    else {
      unsigned int v28 = 1;
    }
    return sub_100145E0C(v28, v24);
  }
}

uint64_t sub_100145E0C(unsigned int a1, unint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070A9C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_100709E38);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v22 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v22 - v14;
  uint64_t result = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)a2);
  if (result >= a1) {
    return a2;
  }
  LODWORD(v23) = 1;
  if (a1 >= 2)
  {
    unint64_t v22 = HIDWORD(a2);
    unsigned int v24 = a1 - 1;
    sub_100063E18();
    static MessageIdentifier.... infix(_:_:)();
    unint64_t v23 = v25;
    Range<>.init<A>(_:)((uint64_t)&v23, (uint64_t)&type metadata for UID);
    unint64_t v23 = v17;
    sub_10001FC6C();
    sub_1005E36A0();
    unint64_t v25 = __PAIR64__(v22, a2);
    Range<>.init<A>(_:)((uint64_t)&v25, (uint64_t)&type metadata for UID);
    unint64_t v25 = v18;
    sub_1005E36A0();
    MessageIdentifierSet.subtracting(_:)((uint64_t)v15, v7);
    sub_100007A48((uint64_t)v10, &qword_100709E38);
    MessageIdentifierSet.ranges.getter((uint64_t)v6);
    sub_100007A48((uint64_t)v13, &qword_100709E38);
    v19.underlying = sub_100070018();
    char v21 = v20;
    sub_100007A48((uint64_t)v6, &qword_10070A9C0);
    if (v21) {
      a2 = 0;
    }
    else {
      a2 = UInt32.init(_:)(v19);
    }
    sub_100007A48((uint64_t)v15, &qword_100709E38);
    return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_100146098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v112 = a4;
  uint64_t v114 = a1;
  uint64_t v115 = a3;
  uint64_t v109 = a2;
  uint64_t v4 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v4 - 8);
  uint64_t v108 = (uint64_t)v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MessageMetadata(0);
  uint64_t v100 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v98 = (char *)v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_10000566C(&qword_100709E38);
  uint64_t v8 = __chkstk_darwin(v99);
  unint64_t v101 = (char *)v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v90 - v10;
  uint64_t v102 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v12 = __chkstk_darwin(v102);
  uint64_t v110 = (uint64_t)v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v90 - v14;
  uint64_t v113 = sub_1005E0ED0();
  uint64_t v16 = *(void *)(v113 - 8);
  uint64_t v17 = __chkstk_darwin(v113);
  uint64_t v111 = (char *)v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  char v20 = (char *)v90 - v19;
  uint64_t v21 = sub_10000566C(&qword_10070D810);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v106 = (char *)v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  unint64_t v25 = (char *)v90 - v24;
  uint64_t v26 = type metadata accessor for NewServerMessages();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)v90 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)v90 - v31;
  uint64_t Messages = type metadata accessor for FetchMessages(0);
  uint64_t v104 = v115 + *(int *)(Messages + 36);
  sub_1000079E4(v104, (uint64_t)v25, &qword_10070D810);
  uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  uint64_t v105 = v27 + 48;
  unsigned int v34 = v33(v25, 1, v26);
  uint64_t v35 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v33;
  uint64_t v103 = v16;
  if (v34 == 1)
  {
    sub_100007A48((uint64_t)v25, &qword_10070D810);
LABEL_7:
    uint64_t v56 = v112;
    uint64_t v41 = v113;
    uint64_t v58 = v110;
    uint64_t v57 = v111;
    uint64_t v46 = v114;
    uint64_t v47 = (uint64_t)v106;
    goto LABEL_11;
  }
  uint64_t v36 = v20;
  uint64_t v95 = v11;
  sub_10014B8DC((uint64_t)v25, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
  if (!*(void *)(*(void *)&v32[*(int *)(v26 + 36)] + 16))
  {
    sub_100147B20((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    goto LABEL_7;
  }
  uint64_t v94 = *(int *)(v26 + 36);
  uint64_t v37 = v16;
  uint64_t v38 = v36;
  char v39 = v36;
  uint64_t v40 = v112;
  uint64_t v41 = v113;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v39, v112, v113);
  sub_100147A98(v40, (uint64_t)v15, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v97 = v32;
  unint64_t v96 = v30;
  sub_100147A98((uint64_t)v32, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
  uint64_t v42 = sub_1005E0EB0();
  os_log_type_t v43 = sub_1005E25C0();
  int v44 = v43;
  BOOL v45 = os_log_type_enabled(v42, v43);
  uint64_t v46 = v114;
  uint64_t v47 = (uint64_t)v106;
  if (v45)
  {
    uint64_t v48 = swift_slowAlloc();
    uint64_t v93 = swift_slowAlloc();
    v118[0] = v93;
    *(_DWORD *)uint64_t v48 = 68159491;
    LODWORD(v116) = 2;
    v90[2] = (char *)&v116 + 4;
    sub_1005E2960();
    *(_WORD *)(v48 + 8) = 256;
    uint64_t v49 = &v15[*(int *)(v102 + 20)];
    LOBYTE(v116) = *v49;
    sub_1005E2960();
    *(_WORD *)(v48 + 11) = 2082;
    v90[1] = v48 + 13;
    uint64_t v91 = v38;
    int v92 = v44;
    uint64_t v50 = *((void *)v49 + 1);
    unint64_t v51 = *((void *)v49 + 2);
    swift_bridgeObjectRetain();
    uint64_t v116 = sub_1000C6914(v50, v51, v118);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 21) = 1040;
    LODWORD(v116) = 2;
    sub_1005E2960();
    *(_WORD *)(v48 + 27) = 512;
    LOWORD(v116) = *((_WORD *)v49 + 12);
    sub_1005E2960();
    *(_WORD *)(v48 + 31) = 2160;
    uint64_t v116 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v48 + 41) = 2085;
    int v52 = *((_DWORD *)v49 + 10);
    uint64_t v116 = *((void *)v49 + 4);
    int v117 = v52;
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1005E1CC0();
    uint64_t v116 = sub_1000C6914(v53, v54, v118);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100147B20((uint64_t)v15, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v48 + 51) = 2048;
    uint64_t v55 = *(void *)(*(void *)&v96[*(int *)(v26 + 36)] + 16);
    sub_100147B20((uint64_t)v96, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    uint64_t v116 = v55;
    uint64_t v46 = v114;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v92, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] %ld new message(s).", (uint8_t *)v48, 0x3Du);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v41 = v113;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v103 + 8))(v91, v41);
  }
  else
  {
    sub_100147B20((uint64_t)v96, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    sub_100147B20((uint64_t)v15, type metadata accessor for MailboxTaskLogger);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v41);
  }
  sub_1000935B0(9u);
  sub_100019080(&v116, 9);
  uint64_t v59 = v46 + *(int *)(type metadata accessor for MailboxSyncState() + 64);
  uint64_t v60 = type metadata accessor for NewestMessages();
  int v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48))(v59, 1, v60);
  uint64_t v63 = v100;
  uint64_t v62 = (uint64_t)v101;
  if (v61)
  {
    sub_100147B20((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    uint64_t v58 = v110;
    uint64_t v57 = v111;
    uint64_t v56 = v112;
  }
  else
  {
    uint64_t v99 = (uint64_t)v35;
    uint64_t v84 = *(void *)&v97[v94];
    sub_10001FC6C();
    swift_bridgeObjectRetain();
    sub_1005E3680();
    uint64_t v85 = *(void *)(v84 + 16);
    if (v85)
    {
      unint64_t v96 = (char *)v59;
      uint64_t v86 = v84 + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
      uint64_t v87 = *(void *)(v63 + 72);
      swift_bridgeObjectRetain();
      uint64_t v88 = v98;
      do
      {
        sub_100147A98(v86, (uint64_t)v88, type metadata accessor for MessageMetadata);
        LODWORD(v118[0]) = *v88;
        MessageIdentifierSet.insert(_:)();
        sub_100147B20((uint64_t)v88, type metadata accessor for MessageMetadata);
        v86 += v87;
        --v85;
      }
      while (v85);
      swift_bridgeObjectRelease();
      uint64_t v41 = v113;
      uint64_t v46 = v114;
    }
    uint64_t v89 = (uint64_t)v95;
    sub_10001FDF0(v62, (uint64_t)v95, &qword_100709E38);
    swift_bridgeObjectRelease();
    sub_100076250(v89);
    sub_100007A48(v89, &qword_100709E38);
    sub_100147B20((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    uint64_t v58 = v110;
    uint64_t v57 = v111;
    uint64_t v56 = v112;
    uint64_t v35 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v99;
  }
LABEL_11:
  sub_1000079E4(v104, v47, &qword_10070D810);
  if (v35(v47, 1, v26) == 1)
  {
    sub_100007A48(v47, &qword_10070D810);
    uint64_t v64 = sub_10000566C(&qword_100709E30);
    uint64_t v65 = v108;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v108, 1, 1, v64);
  }
  else
  {
    uint64_t v66 = v47 + *(int *)(v26 + 20);
    uint64_t v65 = v108;
    sub_1000079E4(v66, v108, &qword_100709E30);
    sub_100147B20(v47, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    uint64_t v67 = sub_10000566C(&qword_100709E30);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v65, 0, 1, v67);
  }
  uint64_t v68 = sub_10014ACB0(v46, v109 & 0x101010101FFFF01, v65, (uint64_t *)(v115 + *(int *)(Messages + 28)), v56);
  uint64_t v70 = v69;
  char v72 = v71;
  uint64_t result = sub_100007A48(v65, &qword_10070A000);
  if ((v72 & 1) == 0)
  {
    uint64_t v74 = v103;
    (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v57, v56, v41);
    sub_100147A98(v56, v58, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v75 = sub_1005E0EB0();
    os_log_type_t v76 = sub_1005E25C0();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = swift_slowAlloc();
      uint64_t v115 = swift_slowAlloc();
      v118[0] = v115;
      *(_DWORD *)uint64_t v77 = 68159747;
      LODWORD(v116) = 2;
      uint64_t v112 = v70;
      sub_1005E2960();
      *(_WORD *)(v77 + 8) = 256;
      uint64_t v78 = v58 + *(int *)(v102 + 20);
      LOBYTE(v116) = *(unsigned char *)v78;
      sub_1005E2960();
      *(_WORD *)(v77 + 11) = 2082;
      uint64_t v109 = v68;
      uint64_t v79 = *(void *)(v78 + 8);
      unint64_t v80 = *(void *)(v78 + 16);
      swift_bridgeObjectRetain();
      uint64_t v116 = sub_1000C6914(v79, v80, v118);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v77 + 21) = 1040;
      LODWORD(v116) = 2;
      sub_1005E2960();
      *(_WORD *)(v77 + 27) = 512;
      LOWORD(v116) = *(_WORD *)(v78 + 24);
      sub_1005E2960();
      *(_WORD *)(v77 + 31) = 2160;
      uint64_t v116 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v77 + 41) = 2085;
      int v81 = *(_DWORD *)(v78 + 40);
      uint64_t v116 = *(void *)(v78 + 32);
      int v117 = v81;
      swift_bridgeObjectRetain();
      uint64_t v82 = sub_1005E1CC0();
      uint64_t v116 = sub_1000C6914(v82, v83, v118);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100147B20(v110, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v77 + 51) = 2048;
      uint64_t v116 = v109;
      sub_1005E2960();
      *(_WORD *)(v77 + 61) = 2048;
      uint64_t v116 = v112;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v75, v76, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Still missing %ld messages (%ld completed). Will run again.", (uint8_t *)v77, 0x47u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v74 + 8))(v111, v113);
    }
    else
    {
      sub_100147B20(v58, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v74 + 8))(v57, v41);
    }
    sub_1000935B0(1u);
    return sub_100019080(&v116, 1);
  }
  return result;
}

uint64_t sub_100146FA0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v6);
  uint64_t v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1005E0ED0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((*(unsigned char *)(a1 + 8) & 1) != 0
    || (uint64_t result = static FetchedWindow.__derived_struct_equals(_:_:)(*(void *)a1, a2), (result & 1) == 0))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
    sub_100147A98(a3, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v14 = sub_1005E0EB0();
    os_log_type_t v15 = sub_1005E2590();
    int v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      unint64_t v33 = HIDWORD(a2);
      uint64_t v17 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v40 = v37;
      *(_DWORD *)uint64_t v17 = 68159491;
      LODWORD(v38) = 2;
      os_log_t v34 = v14;
      sub_1005E2960();
      *(_WORD *)(v17 + 8) = 256;
      uint64_t v18 = *(int *)(v6 + 20);
      uint64_t v36 = v10;
      uint64_t v19 = &v8[v18];
      LOBYTE(v38) = v8[v18];
      sub_1005E2960();
      *(_WORD *)(v17 + 11) = 2082;
      uint64_t v35 = v9;
      int v32 = v16;
      uint64_t v20 = a1;
      unint64_t v21 = a2;
      uint64_t v22 = *((void *)v19 + 1);
      unint64_t v23 = *((void *)v19 + 2);
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_1000C6914(v22, v23, &v40);
      sub_1005E2960();
      a2 = v21;
      a1 = v20;
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 21) = 1040;
      LODWORD(v38) = 2;
      sub_1005E2960();
      *(_WORD *)(v17 + 27) = 512;
      LOWORD(v38) = *((_WORD *)v19 + 12);
      sub_1005E2960();
      *(_WORD *)(v17 + 31) = 2160;
      uint64_t v38 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v17 + 41) = 2085;
      int v24 = *((_DWORD *)v19 + 10);
      uint64_t v38 = *((void *)v19 + 4);
      int v39 = v24;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_1005E1CC0();
      uint64_t v38 = sub_1000C6914(v25, v26, &v40);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100147B20((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v17 + 51) = 2082;
      uint64_t v38 = __PAIR64__(v33, a2);
      uint64_t v27 = sub_10000566C(&qword_10070A9B8);
      uint64_t v28 = MessageIdentifierRange.debugDescription.getter(v27);
      uint64_t v38 = sub_1000C6914(v28, v29, &v40);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      os_log_t v30 = v34;
      _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v32, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Updating fetched-window to %{public}s.", (uint8_t *)v17, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v36 + 8))(v12, v35);
    }
    else
    {
      sub_100147B20((uint64_t)v8, type metadata accessor for MailboxTaskLogger);

      uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    }
    *(void *)a1 = a2;
    *(unsigned char *)(a1 + 8) = 0;
  }
  return result;
}

uint64_t sub_100147454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10003C94C(v2 + *(int *)(a1 + 32), a2);
}

uint64_t sub_100147464()
{
  sub_10000566C(&qword_10070B898);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1005F6670;
  *(void *)(v0 + 32) = type metadata accessor for FetchSearchResultMessages(0);
  sub_10003BC88();
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  return v0;
}

uint64_t sub_100147504()
{
  if (qword_100709D88 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_100147568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_100145248(a1, a2, a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_100147590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10014A518(a1, a2, a3, a4, a6, a7);
}

unint64_t sub_10014759C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  return sub_1001DBDBC(a7, a2, a3, a4, a5);
}

uint64_t sub_1001475B8(long long *a1, uint64_t a2)
{
  uint64_t v20 = *(void **)(v2 + 40);
  unsigned int v19 = *(_DWORD *)(v2 + 48);
  v21[3] = a2;
  long long v4 = a1[13];
  long long v35 = a1[12];
  *(_OWORD *)uint64_t v36 = v4;
  long long v5 = a1[15];
  *(_OWORD *)&v36[16] = a1[14];
  long long v37 = v5;
  long long v6 = a1[9];
  long long v31 = a1[8];
  long long v32 = v6;
  long long v7 = a1[11];
  long long v33 = a1[10];
  long long v34 = v7;
  long long v8 = a1[5];
  long long v27 = a1[4];
  long long v28 = v8;
  long long v9 = a1[7];
  long long v29 = a1[6];
  long long v30 = v9;
  long long v10 = a1[1];
  long long v23 = *a1;
  long long v24 = v10;
  long long v11 = a1[3];
  long long v25 = a1[2];
  long long v26 = v11;
  v38[2] = v35;
  v39[0] = *(_OWORD *)v36;
  *(_OWORD *)((char *)v39 + 12) = *(_OWORD *)&v36[12];
  v38[0] = v33;
  v38[1] = v34;
  sub_100055A48(v38, v40);
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1000D8938();
  unint64_t v13 = sub_1000D8D74(v24, BYTE1(v24) & 1, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), SBYTE10(v23), v26, v12);
  sub_100055A48(v40, &v41);
  if (v42 == 1)
  {
    unint64_t v22 = v41;
    sub_100149CC0((uint64_t)v40);
    sub_1000498B8(&v22, v20, v19, 0, (void (*)(char *, unint64_t))sub_100149CAC, (uint64_t)v21, v13 & 0x101010101FFFF01);
    sub_100149CF4((uint64_t)v40);
    unint64_t v14 = v22;
    *((void *)a1 + 21) = 0;
    *((void *)a1 + 22) = 0;
    *((void *)a1 + 20) = v14;
    *((unsigned char *)a1 + 184) = 1;
  }
  uint64_t result = sub_100145AAC();
  if ((v16 & 1) == 0)
  {
    __chkstk_darwin(result);
    return sub_10004A960(v18, v17, (void (*)(uint64_t))sub_100149D28);
  }
  return result;
}

uint64_t sub_1001477C0()
{
  return 0x73654D6863746546;
}

uint64_t sub_1001477E8(unint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10000566C(&qword_100709E38);
  uint64_t v9 = __chkstk_darwin(v8);
  long long v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)v22 - v12;
  MessageIdentifierSet.subtracting(_:)(a3, v8);
  uint64_t v14 = type metadata accessor for FetchMessages.MissingUIDs(0);
  MessageIdentifierSet.subtracting(_:)((uint64_t)v13, v8);
  uint64_t v15 = 0;
  if ((a2 & 1) == 0) {
    uint64_t v15 = EngineAccountMailboxLoggerID.account.getter(a1);
  }
  char v16 = (unsigned int *)(v4 + *(int *)(v14 + 24));
  uint64_t v17 = *v16;
  LOBYTE(v23) = *((unsigned char *)v16 + 4);
  uint64_t v18 = sub_100149D4C(v15 | ((unint64_t)(a2 & 1) << 32), (uint64_t)v11, v17 | ((unint64_t)v23 << 32));
  if ((v18 & 0x100000000) != 0)
  {
    sub_100007A48((uint64_t)v11, &qword_100709E38);
    sub_100007A48((uint64_t)v13, &qword_100709E38);
    return 0;
  }
  else
  {
    int v19 = v18;
    if ((a2 & 1) == 0) {
      uint64_t v18 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)a1);
    }
    int v20 = sub_10014A1C4(v18, (uint64_t)v11);
    v22[0] = v19;
    v22[1] = v20;
    sub_100063E18();
    static MessageIdentifier.... infix(_:_:)();
    sub_100007A48((uint64_t)v11, &qword_100709E38);
    sub_100007A48((uint64_t)v13, &qword_100709E38);
    return UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v23);
  }
}

uint64_t sub_1001479C0(uint64_t a1, uint64_t a2)
{
  sub_10001FC6C();
  if ((sub_1005E35A0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for FetchMessages.MissingUIDs(0);
  if ((sub_1005E35A0() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  long long v6 = (_DWORD *)(a1 + v5);
  char v7 = *(unsigned char *)(a1 + v5 + 4);
  uint64_t v8 = (_DWORD *)(a2 + v5);
  char v9 = *(unsigned char *)(a2 + v5 + 4);
  if (v7)
  {
    if ((v9 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*v8 != *v6) {
      char v9 = 1;
    }
    if (v9) {
      return 0;
    }
  }
  return 1;
}

uint64_t type metadata accessor for FetchMessages(uint64_t a1)
{
  return sub_10003B314(a1, (uint64_t *)&unk_10070D908);
}

uint64_t sub_100147A98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for FetchMessages.MissingUIDs(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070D870);
}

uint64_t sub_100147B20(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100147B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070D810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100147BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100147BFC);
}

uint64_t sub_100147BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_100147C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100147C80);
}

uint64_t sub_100147C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

void sub_100147CF4()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100147D8C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    *(void *)(a1 + 40) = a2[5];
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    uint64_t v9 = a3[7];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    *uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
    v10[1] = v12;
    uint64_t v13 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
    uint64_t v14 = (char *)v10 + v13;
    uint64_t v15 = (const void *)(v11 + v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_10000566C(&qword_100709E30);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_10000566C(&qword_10070A000);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v15, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = v7 + v20;
    uint64_t v22 = (uint64_t)a2 + v20;
    *(void *)uint64_t v21 = *(void *)v22;
    long long v23 = *(_OWORD *)(v22 + 32);
    *(_OWORD *)(v21 + 32) = v23;
    (**(void (***)(uint64_t, uint64_t))(v23 - 8))(v21 + 8, v22 + 8);
    uint64_t v24 = a3[9];
    long long v25 = (_DWORD *)(v7 + v24);
    long long v26 = (_DWORD *)((char *)a2 + v24);
    long long v27 = (int *)type metadata accessor for NewServerMessages();
    uint64_t v28 = *((void *)v27 - 1);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_10000566C(&qword_10070D810);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      *(void *)long long v25 = *(void *)v26;
      void v25[2] = v26[2];
      uint64_t v30 = v27[5];
      long long v31 = (char *)v25 + v30;
      long long v32 = (char *)v26 + v30;
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      uint64_t v34 = v27[6];
      long long v35 = (char *)v25 + v34;
      uint64_t v36 = (char *)v26 + v34;
      *(_DWORD *)long long v35 = *(_DWORD *)v36;
      unsigned char v35[4] = v36[4];
      *((unsigned char *)v25 + v27[7]) = *((unsigned char *)v26 + v27[7]);
      *((unsigned char *)v25 + v27[8]) = *((unsigned char *)v26 + v27[8]);
      *(void *)((char *)v25 + v27[9]) = *(void *)((char *)v26 + v27[9]);
      long long v37 = *(void (**)(_DWORD *, void, uint64_t, int *))(v28 + 56);
      swift_bridgeObjectRetain();
      v37(v25, 0, 1, v27);
    }
    uint64_t v38 = a3[10];
    uint64_t v39 = v7 + v38;
    uint64_t v40 = (uint64_t)a2 + v38;
    uint64_t v41 = sub_10000566C(&qword_100709E60);
    char v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16);
    v42(v39, v40, v41);
    uint64_t v43 = type metadata accessor for FetchMessages.MissingUIDs(0);
    v42(v39 + *(int *)(v43 + 20), v40 + *(int *)(v43 + 20), v41);
    uint64_t v44 = *(int *)(v43 + 24);
    uint64_t v45 = v39 + v44;
    uint64_t v46 = v40 + v44;
    *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
    *(unsigned char *)(v45 + 4) = *(unsigned char *)(v46 + 4);
    uint64_t v47 = a3[11];
    uint64_t v48 = v7 + v47;
    uint64_t v49 = (uint64_t)a2 + v47;
    *(void *)uint64_t v48 = *(void *)v49;
    *(unsigned char *)(v48 + 8) = *(unsigned char *)(v49 + 8);
  }
  return v7;
}

uint64_t sub_1001481E8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for MessageBatches(0) + 24);
  uint64_t v6 = sub_10000566C(&qword_100709E30);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
  }
  _s13IMAP2Behavior4TaskOwxx_0(a1 + a2[8] + 8);
  uint64_t v8 = a1 + a2[9];
  uint64_t v9 = type metadata accessor for NewServerMessages();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + *(int *)(v9 + 20);
    uint64_t v11 = sub_10000566C(&qword_100709E60);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = a1 + a2[10];
  uint64_t v13 = sub_10000566C(&qword_100709E60);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v16)((void *)(v13 - 8), v12, v13);
  uint64_t v14 = v12 + *(int *)(type metadata accessor for FetchMessages.MissingUIDs(0) + 20);
  return v16(v14, v13);
}

uint64_t sub_100148410(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = (const void *)(v9 + v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_10000566C(&qword_100709E30);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_10000566C(&qword_10070A000);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = sub_10000566C(&qword_100709E60);
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v17 - 8) + 16))(v12, v13, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  long long v21 = *(_OWORD *)(v20 + 32);
  *(_OWORD *)(v19 + 32) = v21;
  (**(void (***)(uint64_t, uint64_t))(v21 - 8))(v19 + 8, v20 + 8);
  uint64_t v22 = a3[9];
  long long v23 = (_DWORD *)(a1 + v22);
  uint64_t v24 = (_DWORD *)(a2 + v22);
  long long v25 = (int *)type metadata accessor for NewServerMessages();
  uint64_t v26 = *((void *)v25 - 1);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = sub_10000566C(&qword_10070D810);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    *(void *)long long v23 = *(void *)v24;
    v23[2] = v24[2];
    uint64_t v28 = v25[5];
    uint64_t v29 = (char *)v23 + v28;
    uint64_t v30 = (char *)v24 + v28;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_10000566C(&qword_100709E60);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = v25[6];
    uint64_t v33 = (char *)v23 + v32;
    uint64_t v34 = (char *)v24 + v32;
    *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
    v33[4] = v34[4];
    *((unsigned char *)v23 + v25[7]) = *((unsigned char *)v24 + v25[7]);
    *((unsigned char *)v23 + v25[8]) = *((unsigned char *)v24 + v25[8]);
    *(void *)((char *)v23 + v25[9]) = *(void *)((char *)v24 + v25[9]);
    long long v35 = *(void (**)(_DWORD *, void, uint64_t, int *))(v26 + 56);
    swift_bridgeObjectRetain();
    v35(v23, 0, 1, v25);
  }
  uint64_t v36 = a3[10];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = sub_10000566C(&qword_100709E60);
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16);
  v40(v37, v38, v39);
  uint64_t v41 = type metadata accessor for FetchMessages.MissingUIDs(0);
  v40(v37 + *(int *)(v41 + 20), v38 + *(int *)(v41 + 20), v39);
  uint64_t v42 = *(int *)(v41 + 24);
  uint64_t v43 = v37 + v42;
  uint64_t v44 = v38 + v42;
  *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
  *(unsigned char *)(v43 + 4) = *(unsigned char *)(v44 + 4);
  uint64_t v45 = a3[11];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(void *)uint64_t v46 = *(void *)v47;
  *(unsigned char *)(v46 + 8) = *(unsigned char *)(v47 + 8);
  return a1;
}

uint64_t sub_100148820(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  *uint64_t v7 = *(void *)(a2 + v6);
  v7[1] = *(void *)(a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
  uint64_t v10 = (char *)v7 + v9;
  uint64_t v11 = (char *)(v8 + v9);
  uint64_t v12 = sub_10000566C(&qword_100709E30);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      uint64_t v17 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v10, v11, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_100007A48((uint64_t)v10, &qword_100709E30);
LABEL_6:
    uint64_t v18 = sub_10000566C(&qword_10070A000);
    memcpy(v10, v11, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v53 = sub_10000566C(&qword_100709E60);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 24))(v10, v11, v53);
LABEL_7:
  uint64_t v19 = a3[8];
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  sub_100022498((uint64_t *)(a1 + v19 + 8), (uint64_t *)(a2 + v19 + 8));
  uint64_t v20 = a3[9];
  long long v21 = (_DWORD *)(a1 + v20);
  uint64_t v22 = (_DWORD *)(a2 + v20);
  long long v23 = (int *)type metadata accessor for NewServerMessages();
  uint64_t v24 = *((void *)v23 - 1);
  long long v25 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      *(void *)long long v21 = *(void *)v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      void v21[2] = v22[2];
      uint64_t v54 = v23[5];
      uint64_t v55 = (char *)v21 + v54;
      uint64_t v56 = (char *)v22 + v54;
      uint64_t v57 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 24))(v55, v56, v57);
      uint64_t v58 = v23[6];
      uint64_t v59 = (char *)v21 + v58;
      uint64_t v60 = (char *)v22 + v58;
      *uint64_t v59 = *v60;
      v59[1] = v60[1];
      v59[2] = v60[2];
      v59[3] = v60[3];
      v59[4] = v60[4];
      *((unsigned char *)v21 + v23[7]) = *((unsigned char *)v22 + v23[7]);
      *((unsigned char *)v21 + v23[8]) = *((unsigned char *)v22 + v23[8]);
      *(void *)((char *)v21 + v23[9]) = *(void *)((char *)v22 + v23[9]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    sub_100147B20((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    uint64_t v37 = sub_10000566C(&qword_10070D810);
    memcpy(v21, v22, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  *(void *)long long v21 = *(void *)v22;
  void v21[2] = v22[2];
  uint64_t v28 = v23[5];
  uint64_t v29 = (char *)v21 + v28;
  uint64_t v30 = (char *)v22 + v28;
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_10000566C(&qword_100709E60);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  uint64_t v32 = v23[6];
  uint64_t v33 = (char *)v21 + v32;
  uint64_t v34 = (char *)v22 + v32;
  int v35 = *(_DWORD *)v34;
  v33[4] = v34[4];
  *(_DWORD *)uint64_t v33 = v35;
  *((unsigned char *)v21 + v23[7]) = *((unsigned char *)v22 + v23[7]);
  *((unsigned char *)v21 + v23[8]) = *((unsigned char *)v22 + v23[8]);
  *(void *)((char *)v21 + v23[9]) = *(void *)((char *)v22 + v23[9]);
  uint64_t v36 = *(void (**)(_DWORD *, void, uint64_t, int *))(v24 + 56);
  swift_bridgeObjectRetain();
  v36(v21, 0, 1, v23);
LABEL_13:
  uint64_t v38 = a3[10];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = sub_10000566C(&qword_100709E60);
  uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 24);
  v42(v39, v40, v41);
  uint64_t v43 = type metadata accessor for FetchMessages.MissingUIDs(0);
  v42(v39 + *(int *)(v43 + 20), v40 + *(int *)(v43 + 20), v41);
  uint64_t v44 = *(int *)(v43 + 24);
  uint64_t v45 = v39 + v44;
  uint64_t v46 = v40 + v44;
  char v47 = *(unsigned char *)(v46 + 4);
  *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
  *(unsigned char *)(v45 + 4) = v47;
  uint64_t v48 = a3[11];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  char v51 = *(unsigned char *)(v50 + 8);
  *(void *)uint64_t v49 = *(void *)v50;
  *(unsigned char *)(v49 + 8) = v51;
  return a1;
}

uint64_t sub_100148DB8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v10 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
  uint64_t v11 = (void *)(v8 + v10);
  uint64_t v12 = (const void *)(v9 + v10);
  uint64_t v13 = sub_10000566C(&qword_100709E30);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_10000566C(&qword_10070A000);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = sub_10000566C(&qword_100709E60);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v11, v12, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = (_OWORD *)(a1 + v17);
  uint64_t v20 = (_OWORD *)(a2 + v17);
  long long v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  v19[2] = v20[2];
  uint64_t v22 = (_DWORD *)(a1 + v18);
  long long v23 = (_DWORD *)(a2 + v18);
  uint64_t v24 = (int *)type metadata accessor for NewServerMessages();
  uint64_t v25 = *((void *)v24 - 1);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
  {
    uint64_t v26 = sub_10000566C(&qword_10070D810);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v22 = *(void *)v23;
    _DWORD v22[2] = v23[2];
    uint64_t v27 = v24[5];
    uint64_t v28 = (char *)v22 + v27;
    uint64_t v29 = (char *)v23 + v27;
    uint64_t v30 = sub_10000566C(&qword_100709E60);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
    uint64_t v31 = v24[6];
    uint64_t v32 = (char *)v22 + v31;
    uint64_t v33 = (char *)v23 + v31;
    *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
    *((unsigned char *)v22 + v24[7]) = *((unsigned char *)v23 + v24[7]);
    *((unsigned char *)v22 + v24[8]) = *((unsigned char *)v23 + v24[8]);
    *(void *)((char *)v22 + v24[9]) = *(void *)((char *)v23 + v24[9]);
    (*(void (**)(_DWORD *, void, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
  }
  uint64_t v34 = a3[10];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = sub_10000566C(&qword_100709E60);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 32);
  v38(v35, v36, v37);
  uint64_t v39 = type metadata accessor for FetchMessages.MissingUIDs(0);
  v38(v35 + *(int *)(v39 + 20), v36 + *(int *)(v39 + 20), v37);
  uint64_t v40 = *(int *)(v39 + 24);
  uint64_t v41 = v35 + v40;
  uint64_t v42 = v36 + v40;
  *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
  *(unsigned char *)(v41 + 4) = *(unsigned char *)(v42 + 4);
  uint64_t v43 = a3[11];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  *(void *)uint64_t v44 = *(void *)v45;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  return a1;
}

uint64_t sub_100149158(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  *uint64_t v7 = *(void *)(a2 + v6);
  v7[1] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = (char *)(v8 + v10);
  uint64_t v13 = sub_10000566C(&qword_100709E30);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v11, v12, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_100007A48((uint64_t)v11, &qword_100709E30);
LABEL_6:
    uint64_t v19 = sub_10000566C(&qword_10070A000);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v52 = sub_10000566C(&qword_100709E60);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 40))(v11, v12, v52);
LABEL_7:
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + v20 + 8);
  *(_OWORD *)(v21 + 8) = *(_OWORD *)(v22 + 8);
  *(_OWORD *)(v21 + 24) = *(_OWORD *)(v22 + 24);
  *(void *)(v21 + 40) = *(void *)(v22 + 40);
  uint64_t v23 = a3[9];
  uint64_t v24 = (_DWORD *)(a1 + v23);
  uint64_t v25 = (_DWORD *)(a2 + v23);
  uint64_t v26 = (int *)type metadata accessor for NewServerMessages();
  uint64_t v27 = *((void *)v26 - 1);
  uint64_t v28 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      *(void *)uint64_t v24 = *(void *)v25;
      swift_bridgeObjectRelease();
      void v24[2] = v25[2];
      uint64_t v53 = v26[5];
      uint64_t v54 = (char *)v24 + v53;
      uint64_t v55 = (char *)v25 + v53;
      uint64_t v56 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 40))(v54, v55, v56);
      uint64_t v57 = v26[6];
      uint64_t v58 = (char *)v24 + v57;
      uint64_t v59 = (char *)v25 + v57;
      *uint64_t v58 = *v59;
      v58[1] = v59[1];
      void v58[2] = v59[2];
      v58[3] = v59[3];
      v58[4] = v59[4];
      *((unsigned char *)v24 + v26[7]) = *((unsigned char *)v25 + v26[7]);
      *((unsigned char *)v24 + v26[8]) = *((unsigned char *)v25 + v26[8]);
      *(void *)((char *)v24 + v26[9]) = *(void *)((char *)v25 + v26[9]);
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    sub_100147B20((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v38 = sub_10000566C(&qword_10070D810);
    memcpy(v24, v25, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_13;
  }
  *(void *)uint64_t v24 = *(void *)v25;
  void v24[2] = v25[2];
  uint64_t v31 = v26[5];
  uint64_t v32 = (char *)v24 + v31;
  uint64_t v33 = (char *)v25 + v31;
  uint64_t v34 = sub_10000566C(&qword_100709E60);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = v26[6];
  uint64_t v36 = (char *)v24 + v35;
  uint64_t v37 = (char *)v25 + v35;
  *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
  v36[4] = v37[4];
  *((unsigned char *)v24 + v26[7]) = *((unsigned char *)v25 + v26[7]);
  *((unsigned char *)v24 + v26[8]) = *((unsigned char *)v25 + v26[8]);
  *(void *)((char *)v24 + v26[9]) = *(void *)((char *)v25 + v26[9]);
  (*(void (**)(_DWORD *, void, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
LABEL_13:
  uint64_t v39 = a3[10];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_10000566C(&qword_100709E60);
  uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40);
  v43(v40, v41, v42);
  uint64_t v44 = type metadata accessor for FetchMessages.MissingUIDs(0);
  v43(v40 + *(int *)(v44 + 20), v41 + *(int *)(v44 + 20), v42);
  uint64_t v45 = *(int *)(v44 + 24);
  uint64_t v46 = v40 + v45;
  uint64_t v47 = v41 + v45;
  *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
  *(unsigned char *)(v46 + 4) = *(unsigned char *)(v47 + 4);
  uint64_t v48 = a3[11];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  *(void *)uint64_t v49 = *(void *)v50;
  *(unsigned char *)(v49 + 8) = *(unsigned char *)(v50 + 8);
  return a1;
}

uint64_t sub_1001496CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001496E0);
}

uint64_t sub_1001496E0(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = type metadata accessor for MessageBatches(0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[7];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    return v13(&a1[v11], a2, v9);
  }
  uint64_t v12 = sub_10000566C(&qword_10070D810);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[9];
    goto LABEL_9;
  }
  uint64_t v14 = type metadata accessor for FetchMessages.MissingUIDs(0);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  int v17 = &a1[a3[10]];
  return v15(v17, a2, v16);
}

uint64_t sub_10014985C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100149870);
}

char *sub_100149870(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
    return result;
  }
  uint64_t v8 = type metadata accessor for MessageBatches(0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[7];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = sub_10000566C(&qword_10070D810);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_7;
  }
  uint64_t v14 = type metadata accessor for FetchMessages.MissingUIDs(0);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  int v17 = &v5[a4[10]];
  return (char *)v15(v17, a2, a2, v16);
}

void sub_1001499EC()
{
  type metadata accessor for MessageBatches(319);
  if (v0 <= 0x3F)
  {
    sub_100149B24();
    if (v1 <= 0x3F)
    {
      type metadata accessor for FetchMessages.MissingUIDs(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100149B24()
{
  if (!qword_10070D918)
  {
    type metadata accessor for NewServerMessages();
    unint64_t v0 = sub_1005E28C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10070D918);
    }
  }
}

unint64_t sub_100149B80()
{
  unint64_t result = qword_10070D960;
  if (!qword_10070D960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070D960);
  }
  return result;
}

unint64_t sub_100149BD8()
{
  unint64_t result = qword_10070D968;
  if (!qword_10070D968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070D968);
  }
  return result;
}

unint64_t sub_100149C2C(uint64_t a1)
{
  unint64_t result = sub_100149C54();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100149C54()
{
  unint64_t result = qword_10070DA20;
  if (!qword_10070DA20)
  {
    type metadata accessor for FetchMessages(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070DA20);
  }
  return result;
}

uint64_t sub_100149CAC(uint64_t a1, uint64_t a2)
{
  return sub_100146098(a1, a2 & 0x101010101FFFF01, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100149CC0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100149CF4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100149D28(uint64_t a1)
{
  return sub_100146FA0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100149D30(int a1, uint64_t a2, uint64_t a3)
{
  return sub_10014A73C(a1, a2, a3) & 1;
}

uint64_t sub_100149D4C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_10070A9C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v33[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10000566C(&qword_100709E38);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = &v33[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = &v33[-v14];
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = &v33[-v17];
  __chkstk_darwin(v16);
  uint64_t v20 = &v33[-v19];
  if ((a3 & 0x100000000) != 0)
  {
    uint64_t v28 = HIDWORD(a1) & 1;
    goto LABEL_19;
  }
  if (a3 != -1)
  {
    int v34 = -1;
    LODWORD(v35) = a3 + 1;
    sub_100063E18();
    static MessageIdentifier.... infix(_:_:)();
    uint64_t v35 = v36;
    Range<>.init<A>(_:)((uint64_t)&v35, (uint64_t)&type metadata for UID);
    uint64_t v35 = v29;
    sub_10001FC6C();
    sub_1005E36A0();
    MessageIdentifierSet.subtracting(_:)((uint64_t)v18, v9);
    sub_100007A48((uint64_t)v18, &qword_100709E38);
    if ((a1 & 0x100000000) == 0) {
      goto LABEL_4;
    }
LABEL_13:
    MessageIdentifierSet.ranges.getter((uint64_t)v8);
    unint64_t v30 = sub_100070018();
    char v32 = v31;
    sub_100007A48((uint64_t)v8, &qword_10070A9C0);
    LODWORD(v28) = v32 & 1;
    if (v28) {
      LODWORD(a1) = 0;
    }
    else {
      a1 = HIDWORD(v30);
    }
    sub_100007A48((uint64_t)v20, &qword_100709E38);
    goto LABEL_19;
  }
  sub_1000079E4(a2, (uint64_t)&v33[-v19], &qword_100709E38);
  if ((a1 & 0x100000000) != 0) {
    goto LABEL_13;
  }
LABEL_4:
  if (a1 == -1) {
    goto LABEL_17;
  }
  sub_100063E18();
  static MessageIdentifierRange.all.getter();
  uint64_t v35 = v36;
  Range<>.init<A>(_:)((uint64_t)&v35, (uint64_t)&type metadata for UID);
  uint64_t v35 = v21;
  sub_10001FC6C();
  sub_1005E36A0();
  MessageIdentifierSet.subtracting(_:)((uint64_t)v20, v9);
  sub_100007A48((uint64_t)v12, &qword_100709E38);
  int v34 = a1;
  LODWORD(v35) = 1;
  static MessageIdentifier.... infix(_:_:)();
  uint64_t v35 = v36;
  Range<>.init<A>(_:)((uint64_t)&v35, (uint64_t)&type metadata for UID);
  uint64_t v35 = v22;
  sub_1005E36A0();
  MessageIdentifierSet.subtracting(_:)((uint64_t)v12, v9);
  sub_100007A48((uint64_t)v12, &qword_100709E38);
  sub_100007A48((uint64_t)v15, &qword_100709E38);
  unint64_t v23 = sub_1000702CC();
  uint64_t result = sub_100007A48((uint64_t)v18, &qword_100709E38);
  if ((v23 & 0x100000000) != 0 || a1 >= v23) {
    goto LABEL_17;
  }
  if (v23 >= 2uLL)
  {
    int v25 = v23 - 1;
    if (a1 < (int)v23 - 1)
    {
      int v34 = v23 - 1;
      LODWORD(v35) = a1 + 1;
      static MessageIdentifier.... infix(_:_:)();
      uint64_t v35 = v36;
      Range<>.init<A>(_:)((uint64_t)&v35, (uint64_t)&type metadata for UID);
      uint64_t v35 = v26;
      sub_1005E36A0();
      sub_10000566C(&qword_100709E60);
      char v27 = sub_1005E3650();
      sub_100007A48((uint64_t)v18, &qword_100709E38);
      sub_100007A48((uint64_t)v20, &qword_100709E38);
      if (v27)
      {
        LOBYTE(v28) = 0;
        LODWORD(a1) = v25;
LABEL_19:
        LOBYTE(v36) = v28;
        return a1 | ((unint64_t)(v28 & 1) << 32);
      }
LABEL_18:
      LOBYTE(v28) = 0;
      goto LABEL_19;
    }
LABEL_17:
    sub_100007A48((uint64_t)v20, &qword_100709E38);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_10014A1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070A9C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_100709E38);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)v27 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v27 - v14;
  if (a1 >= 2)
  {
    sub_100063E18();
    static MessageIdentifierRange.all.getter();
    uint64_t v29 = v30;
    Range<>.init<A>(_:)((uint64_t)&v29, (uint64_t)&type metadata for UID);
    uint64_t v29 = v16;
    unint64_t v17 = sub_10001FC6C();
    sub_1005E36A0();
    v27[2] = a2;
    MessageIdentifierSet.subtracting(_:)(a2, v7);
    sub_100007A48((uint64_t)v10, &qword_100709E38);
    int v28 = -1;
    LODWORD(v29) = a1;
    static MessageIdentifier.... infix(_:_:)();
    uint64_t v29 = v30;
    Range<>.init<A>(_:)((uint64_t)&v29, (uint64_t)&type metadata for UID);
    uint64_t v29 = v18;
    v27[1] = v17;
    sub_1005E36A0();
    MessageIdentifierSet.subtracting(_:)((uint64_t)v10, v7);
    sub_100007A48((uint64_t)v10, &qword_100709E38);
    sub_100007A48((uint64_t)v13, &qword_100709E38);
    MessageIdentifierSet.ranges.getter((uint64_t)v6);
    unint64_t v19 = sub_100070018();
    char v21 = v20;
    sub_100007A48((uint64_t)v6, &qword_10070A9C0);
    if (v21)
    {
      sub_100007A48((uint64_t)v15, &qword_100709E38);
      unsigned int v23 = 1;
    }
    else
    {
      unint64_t v22 = HIDWORD(v19);
      sub_100007A48((uint64_t)v15, &qword_100709E38);
      if (v22 >= a1) {
        return a1;
      }
      unsigned int v23 = v22 + 1;
      if ((int)v22 + 1 >= a1) {
        return a1;
      }
    }
    int v28 = a1 - 1;
    LODWORD(v29) = v23;
    static MessageIdentifier.... infix(_:_:)();
    uint64_t v29 = v30;
    Range<>.init<A>(_:)((uint64_t)&v29, (uint64_t)&type metadata for UID);
    uint64_t v29 = v24;
    sub_1005E36A0();
    sub_10000566C(&qword_100709E60);
    char v25 = sub_1005E3650();
    sub_100007A48((uint64_t)v13, &qword_100709E38);
    if (v25) {
      return v23;
    }
    else {
      return a1;
    }
  }
  return a1;
}

uint64_t sub_10014A518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1001A9BB4(a4);
  uint64_t v15 = v14[2];
  if (v15)
  {
    uint64_t v26 = a6;
    uint64_t v16 = 0;
    while ((sub_10014A73C(*((_DWORD *)v14 + v16 + 8), a2, a3) & 1) == 0)
    {
      if (v15 == ++v16) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    sub_100147A98(a1, (uint64_t)v13, type metadata accessor for UntaggedResponse);
    if (swift_getEnumCaseMultiPayload() == 19)
    {
      memcpy(v28, v13, 0x248uLL);
      uint64_t Messages = type metadata accessor for FetchMessages(0);
      uint64_t v19 = *(void *)(v27 + *(int *)(Messages + 28) + 8);
      uint64_t v20 = *(void *)(v19 + 16);
      if (v20) {
        int v21 = *(_DWORD *)(v19 + 8 * v20 + 24);
      }
      else {
        int v21 = 1;
      }
      uint64_t v22 = v26;
      uint64_t v23 = v27 + *(int *)(Messages + 36);
      uint64_t v24 = type metadata accessor for NewServerMessages();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v23, 1, v24)) {
        sub_10019D09C((uint64_t)v28, v21, v22);
      }
      return sub_100061150((uint64_t)v28);
    }
    else
    {
      return sub_100147B20((uint64_t)v13, type metadata accessor for UntaggedResponse);
    }
  }
  else
  {
LABEL_5:
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10014A73C(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int v56 = a1;
  uint64_t v7 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v47 - v11;
  uint64_t v13 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v52 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  char v51 = (char *)v47 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)v47 - v19;
  __chkstk_darwin(v18);
  uint64_t v23 = (char *)v47 - v22;
  uint64_t v24 = *(void *)(a3 + 16);
  if (!v24) {
    return 0;
  }
  uint64_t v54 = a3;
  uint64_t v55 = v12;
  v47[0] = v10;
  v47[1] = v7;
  uint64_t v48 = a2;
  uint64_t v53 = v4;
  uint64_t v25 = a3 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  uint64_t v26 = *(void *)(v21 + 72);
  swift_bridgeObjectRetain();
  uint64_t v27 = v25;
  uint64_t v49 = v24;
  uint64_t v28 = v24;
  while (1)
  {
    sub_100147A98(v27, (uint64_t)v23, type metadata accessor for TaskHistory.Previous);
    sub_100147A98((uint64_t)v23, (uint64_t)v20, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_100147B20((uint64_t)v20, type metadata accessor for TaskHistory.Previous);
LABEL_4:
    sub_100147B20((uint64_t)v23, type metadata accessor for TaskHistory.Previous);
    v27 += v26;
    if (!--v28)
    {
      uint64_t v45 = 0;
      goto LABEL_23;
    }
  }
  uint64_t v29 = sub_10000566C(&qword_10070B308);
  uint64_t v30 = v26;
  uint64_t v31 = v13;
  int v32 = *(_DWORD *)&v20[*(int *)(v29 + 48)];
  sub_100147B20((uint64_t)v20, type metadata accessor for ClientCommand);
  BOOL v33 = v32 == v56;
  uint64_t v13 = v31;
  uint64_t v26 = v30;
  if (!v33) {
    goto LABEL_4;
  }
  sub_100147B20((uint64_t)v23, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v35 = (uint64_t)v51;
  uint64_t v34 = (uint64_t)v52;
  uint64_t v36 = v49;
  while (1)
  {
    sub_100147A98(v25, v35, type metadata accessor for TaskHistory.Previous);
    sub_100147A98(v35, v34, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_100147B20(v34, type metadata accessor for TaskHistory.Previous);
LABEL_10:
    sub_100147B20(v35, type metadata accessor for TaskHistory.Previous);
    v25 += v26;
    if (!--v36)
    {
      uint64_t v45 = 1;
      goto LABEL_23;
    }
  }
  int v37 = *(_DWORD *)(v34 + *(int *)(v29 + 48));
  sub_100147B20(v34, type metadata accessor for ClientCommand);
  if (v37 != v56) {
    goto LABEL_10;
  }
  sub_100147B20(v35, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(v48 + 16);
  if (!v38) {
    return 0;
  }
  uint64_t v39 = v48 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
  uint64_t v40 = *(void *)(v50 + 72);
  swift_bridgeObjectRetain();
  uint64_t v41 = v47[0];
  uint64_t v42 = (uint64_t)v55;
  do
  {
    sub_100147A98(v39, v42, type metadata accessor for TaskHistory.Running);
    sub_100147A98(v42, v41, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100147B20(v41, type metadata accessor for TaskHistory.Running);
    }
    else
    {
      int v43 = *(_DWORD *)(v41 + 8);
      uint64_t v44 = sub_10000566C(&qword_10070B6A0);
      sub_100147B20(v41 + *(int *)(v44 + 64), type metadata accessor for ClientCommand);
      if (v43 == v56)
      {
        sub_100147B20((uint64_t)v55, type metadata accessor for TaskHistory.Running);
        uint64_t v45 = 1;
        goto LABEL_23;
      }
    }
    uint64_t v42 = (uint64_t)v55;
    sub_100147B20((uint64_t)v55, type metadata accessor for TaskHistory.Running);
    v39 += v40;
    --v38;
  }
  while (v38);
  uint64_t v45 = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v45;
}

uint64_t sub_10014ACB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v93 = a5;
  uint64_t v91 = a2;
  uint64_t v94 = _s15MissingMessagesOMa(0);
  __chkstk_darwin(v94);
  uint64_t v9 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s15MissingMessagesO10IncompleteVMa(0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v89 = (uint64_t)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v92 = (uint64_t)&v80 - v13;
  uint64_t v86 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v14 = __chkstk_darwin(v86);
  uint64_t v88 = (uint64_t)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v87 = (uint64_t)&v80 - v16;
  uint64_t v17 = sub_1005E0ED0();
  uint64_t v95 = *(void *)(v17 - 8);
  uint64_t v96 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v90 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v80 - v20;
  uint64_t v22 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10000566C(&qword_100709E30);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v85 = (uint64_t)&v80 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v80 - v29;
  sub_1000079E4(a3, (uint64_t)v24, &qword_10070A000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    uint64_t v31 = &qword_10070A000;
    uint64_t v32 = (uint64_t)v24;
  }
  else
  {
    sub_10001FDF0((uint64_t)v24, (uint64_t)v30, &qword_100709E30);
    type metadata accessor for MailboxSyncState();
    sub_100072114((uint64_t)v30);
    uint64_t v32 = (uint64_t)v30;
    uint64_t v31 = &qword_100709E30;
  }
  sub_100007A48(v32, v31);
  uint64_t v33 = a1 + *(int *)(type metadata accessor for MailboxSyncState() + 68);
  uint64_t v34 = *a4;
  unint64_t v35 = sub_100067F58();
  char v36 = sub_100070D0C(v34, v35 | ((HIDWORD(v35) & 1) << 32));
  uint64_t v38 = v95;
  uint64_t v37 = v96;
  if ((v36 & 1) != 0 && (v91 & 0xFF00) == 0)
  {
    uint64_t v39 = sub_1000710CC();
    int v41 = v40;
    uint64_t v42 = v21;
    uint64_t v43 = v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v21, v93, v37);
    uint64_t v44 = v87;
    sub_100147A98(v43, v87, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v45 = sub_1005E0EB0();
    os_log_type_t v46 = sub_1005E25C0();
    LODWORD(v91) = v46;
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      int v82 = v41;
      uint64_t v48 = v47;
      uint64_t v84 = swift_slowAlloc();
      v99[0] = v84;
      *(_DWORD *)uint64_t v48 = 68159491;
      LODWORD(v97) = 2;
      sub_1005E2960();
      *(_WORD *)(v48 + 8) = 256;
      uint64_t v49 = *(int *)(v86 + 20);
      os_log_t v81 = v45;
      uint64_t v50 = v44 + v49;
      LOBYTE(v97) = *(unsigned char *)(v44 + v49);
      sub_1005E2960();
      *(_WORD *)(v48 + 11) = 2082;
      unint64_t v83 = v42;
      uint64_t v80 = v39;
      uint64_t v52 = *(void *)(v50 + 8);
      unint64_t v51 = *(void *)(v50 + 16);
      swift_bridgeObjectRetain();
      uint64_t v97 = sub_1000C6914(v52, v51, v99);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 21) = 1040;
      LODWORD(v97) = 2;
      sub_1005E2960();
      *(_WORD *)(v48 + 27) = 512;
      LOWORD(v97) = *(_WORD *)(v50 + 24);
      sub_1005E2960();
      *(_WORD *)(v48 + 31) = 2160;
      uint64_t v97 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v48 + 41) = 2085;
      int v53 = *(_DWORD *)(v50 + 40);
      uint64_t v97 = *(void *)(v50 + 32);
      int v98 = v53;
      swift_bridgeObjectRetain();
      uint64_t v54 = sub_1005E1CC0();
      uint64_t v97 = sub_1000C6914(v54, v55, v99);
      uint64_t v37 = v96;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100147B20(v44, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v48 + 51) = 2048;
      uint64_t v56 = v80;
      if (v82) {
        uint64_t v56 = 0;
      }
      uint64_t v97 = v56;
      uint64_t v38 = v95;
      sub_1005E2960();
      os_log_t v57 = v81;
      _os_log_impl((void *)&_mh_execute_header, v81, (os_log_type_t)v91, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] %ld remaining known-to-be-missing. Requesting FindMissingMessages to re-run.", (uint8_t *)v48, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v38 + 8))(v83, v37);
    }
    else
    {
      sub_100147B20(v44, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v42, v37);
    }
    sub_1000935B0(0xCu);
    sub_100019080(&v97, 12);
  }
  sub_100147A98(v33, (uint64_t)v9, _s15MissingMessagesOMa);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_100147B20((uint64_t)v9, _s15MissingMessagesOMa);
    return 0;
  }
  else
  {
    uint64_t v59 = v92;
    sub_10014B8DC((uint64_t)v9, v92, _s15MissingMessagesO10IncompleteVMa);
    uint64_t v60 = v90;
    uint64_t v61 = v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v90, v93, v37);
    uint64_t v62 = v88;
    sub_100147A98(v61, v88, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v63 = v89;
    sub_100147A98(v59, v89, _s15MissingMessagesO10IncompleteVMa);
    uint64_t v64 = sub_1005E0EB0();
    os_log_type_t v65 = sub_1005E25C0();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      v99[0] = v94;
      *(_DWORD *)uint64_t v66 = 68159491;
      LODWORD(v97) = 2;
      sub_1005E2960();
      *(_WORD *)(v66 + 8) = 256;
      uint64_t v67 = v62 + *(int *)(v86 + 20);
      LOBYTE(v97) = *(unsigned char *)v67;
      sub_1005E2960();
      *(_WORD *)(v66 + 11) = 2082;
      uint64_t v68 = *(void *)(v67 + 8);
      unint64_t v69 = *(void *)(v67 + 16);
      swift_bridgeObjectRetain();
      uint64_t v97 = sub_1000C6914(v68, v69, v99);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 21) = 1040;
      LODWORD(v97) = 2;
      sub_1005E2960();
      *(_WORD *)(v66 + 27) = 512;
      LOWORD(v97) = *(_WORD *)(v67 + 24);
      sub_1005E2960();
      *(_WORD *)(v66 + 31) = 2160;
      uint64_t v97 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v66 + 41) = 2085;
      int v70 = *(_DWORD *)(v67 + 40);
      uint64_t v97 = *(void *)(v67 + 32);
      int v98 = v70;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1005E1CC0();
      uint64_t v97 = sub_1000C6914(v71, v72, v99);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100147B20(v88, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v66 + 51) = 2048;
      uint64_t v73 = v89;
      uint64_t v74 = v85;
      sub_1000079E4(v89, v85, &qword_100709E30);
      sub_10000566C(&qword_100709E38);
      MessageIdentifierSet.count.getter();
      uint64_t v76 = v75;
      sub_100007A48(v74, &qword_100709E38);
      sub_100147B20(v73, _s15MissingMessagesO10IncompleteVMa);
      uint64_t v97 = v76;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Missing: %ld.", (uint8_t *)v66, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v95 + 8))(v90, v96);
    }
    else
    {
      sub_100147B20(v63, _s15MissingMessagesO10IncompleteVMa);
      sub_100147B20(v62, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v60, v37);
      uint64_t v74 = v85;
    }
    uint64_t v77 = v92;
    sub_1000079E4(v92, v74, &qword_100709E30);
    sub_10000566C(&qword_100709E38);
    MessageIdentifierSet.count.getter();
    uint64_t v58 = v78;
    sub_100007A48(v74, &qword_100709E38);
    _s15MissingMessagesO8ProgressVMa(0);
    MessageIdentifierSet.count.getter();
    sub_100147B20(v77, _s15MissingMessagesO10IncompleteVMa);
  }
  return v58;
}

uint64_t sub_10014B8DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10014B944()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 49, 7);
}

ValueMetadata *type metadata accessor for FetchMessages.CommandID()
{
  return &type metadata for FetchMessages.CommandID;
}

unsigned char *_s13IMAP2Behavior13FetchMessagesV9CommandIDOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10014BA34);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchMessages.ActionID()
{
  return &type metadata for FetchMessages.ActionID;
}

uint64_t sub_10014BA6C@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t a1)@<X2>, uint64_t a4@<X3>, char a5@<W4>, unint64_t a6@<X5>, int a7@<W6>, int a8@<W7>, uint64_t a9@<X8>)
{
  int v33 = a8;
  int v34 = a7;
  unint64_t v35 = a6;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v40 = a2;
  uint64_t v42 = a9;
  int v36 = a5 & 1;
  uint64_t v10 = sub_10000566C(&qword_10070DA30);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests(0);
  uint64_t v14 = *(void *)(SearchResult - 8);
  __chkstk_darwin(SearchResult);
  uint64_t v39 = (uint64_t)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  SearchResultuint64_t Messages = (int *)type metadata accessor for FetchSearchResultMessages(0);
  uint64_t v41 = *((void *)SearchResultMessages - 1);
  uint64_t v17 = __chkstk_darwin(SearchResultMessages);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v19 = &_swiftEmptySetSingleton;
  v19[8] = 0;
  uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 52)];
  uint64_t v21 = type metadata accessor for NewServerMessages();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v20, 1, 1, v21);
  sub_10014C130((uint64_t)v37, v38, v36, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, SearchResult) == 1)
  {
    sub_1001540D0(v40, type metadata accessor for MessageBatches);
    long long v45 = *a1;
    sub_10001D550((uint64_t)&v45);
    uint64_t v43 = *((void *)a1 + 3);
    int v44 = *((_DWORD *)a1 + 8);
    sub_10001D550((uint64_t)&v43);
    sub_100007A48((uint64_t)v12, &qword_10070DA30);
    swift_bridgeObjectRelease();
    sub_100007A48(v20, &qword_10070D810);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v41 + 56))(v42, 1, 1, SearchResultMessages);
  }
  else
  {
    LODWORD(v38) = v33 & 1;
    int v36 = v34 & 1;
    uint64_t v37 = type metadata accessor for FetchSearchResultMessages.Requests;
    sub_100154068((uint64_t)v12, v39, type metadata accessor for FetchSearchResultMessages.Requests);
    uint64_t v24 = *((void *)a1 + 3);
    int v25 = *((_DWORD *)a1 + 8);
    *(void *)&v19[SearchResultMessages[8]] = SearchResultMessages;
    *(void *)&long long v45 = v24;
    DWORD2(v45) = v25;
    sub_10003BC88();
    swift_bridgeObjectRetain();
    sub_1005E2BF0();
    long long v26 = a1[1];
    *((_OWORD *)v19 + 1) = *a1;
    *((_OWORD *)v19 + 2) = v26;
    *((_DWORD *)v19 + 12) = *((_DWORD *)a1 + 8);
    sub_100154068(v40, (uint64_t)&v19[SearchResultMessages[7]], type metadata accessor for MessageBatches);
    sub_100007A48(v20, &qword_10070D810);
    v22(v20, 1, 1, v21);
    uint64_t v27 = &v19[SearchResultMessages[9]];
    unint64_t v28 = v35;
    *uint64_t v27 = v35 & 1;
    uint64x2_t v29 = (uint64x2_t)vdupq_n_s64(v28);
    int16x8_t v30 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v29, (uint64x2_t)xmmword_1005F66C0), (int32x4_t)vshlq_u64(v29, (uint64x2_t)xmmword_1005F66B0));
    *(int8x8_t *)v30.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v30), (int8x8_t)0x1000100010001);
    *(_DWORD *)(v27 + 1) = vmovn_s16(v30).u32[0];
    v19[SearchResultMessages[10]] = v36;
    v19[SearchResultMessages[11]] = v38;
    sub_100154068(v39, (uint64_t)&v19[SearchResultMessages[12]], v37);
    uint64_t v31 = v42;
    sub_1001541B4((uint64_t)v19, v42, type metadata accessor for FetchSearchResultMessages);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v41 + 56))(v31, 0, 1, SearchResultMessages);
    return sub_1001540D0((uint64_t)v19, type metadata accessor for FetchSearchResultMessages);
  }
}

uint64_t sub_10014BEE8(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(unsigned __int8 *)(a2 + 4);
  unsigned int v3 = (*(_DWORD *)a1 == *(_DWORD *)a2) & ~v2;
  if (*(_DWORD *)a2) {
    unsigned int v4 = *(unsigned __int8 *)(a2 + 4);
  }
  else {
    unsigned int v4 = 0;
  }
  if (*(_DWORD *)a2) {
    unsigned int v2 = 0;
  }
  if (*(_DWORD *)a1) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = v2;
  }
  if (*(unsigned char *)(a1 + 4) == 1) {
    return v5;
  }
  else {
    return v3;
  }
}

Swift::Int sub_10014BF24()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA0D0);
  qword_100761758 = result;
  return result;
}

uint64_t sub_10014BF4C()
{
  sub_10000566C(&qword_10070B898);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1005F6710;
  *(void *)(v0 + 32) = &type metadata for DetectChangesToMessages;
  sub_10003BC88();
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(void *)(v0 + 80) = &type metadata for DetectChangesToMessagesInRecent;
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(void *)(v0 + 128) = &type metadata for DetectRemovedMessages;
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(void *)(v0 + 176) = &type metadata for DetectRemovedMessagesInRecent;
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(void *)(v0 + 224) = type metadata accessor for FetchMessages(0);
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(void *)(v0 + 272) = type metadata accessor for FindMissingMessages(0);
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(void *)(v0 + 320) = &type metadata for PurgeMessagesOutsideWindowOfInterest;
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  return v0;
}

uint64_t sub_10014C130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v122 = a3;
  uint64_t v121 = a2;
  uint64_t v123 = a4;
  uint64_t v136 = _s19UserInitiatedSearchV5StateOMa(0);
  __chkstk_darwin(v136);
  uint64_t v6 = (char *)&v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = _s19UserInitiatedSearchVMa(0);
  uint64_t v137 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v146 = (_DWORD *)((char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10000566C(&qword_10070DA38);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v147 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v151 = (char *)&v113 - v11;
  uint64_t v12 = sub_10000566C(&qword_10070DA40);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v145 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (_DWORD *)((char *)&v113 - v16);
  __chkstk_darwin(v15);
  uint64_t v144 = (char *)&v113 - v18;
  uint64_t v150 = sub_10000566C(&qword_10070DA48);
  uint64_t v141 = *(char **)(v150 - 8);
  uint64_t v19 = __chkstk_darwin(v150);
  uint64_t v126 = (uint64_t)&v113 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v125 = (uint64_t)&v113 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v139 = (uint64_t)&v113 - v24;
  __chkstk_darwin(v23);
  uint64_t v128 = (_DWORD *)((char *)&v113 - v25);
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests.Search(0);
  uint64_t v131 = *(void *)(SearchResult - 8);
  __chkstk_darwin(SearchResult);
  uint64_t v130 = (uint64_t)&v113 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10000566C(&qword_10070DA50);
  __chkstk_darwin(v27 - 8);
  uint64x2_t v29 = (char *)&v113 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  uint64_t v31 = *(void *)(MessagesVMa - 8);
  uint64_t v32 = __chkstk_darwin(MessagesVMa);
  uint64_t v134 = (uint64_t)&v113 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  unint64_t v35 = (char *)&v113 - v34;
  uint64_t v36 = type metadata accessor for FetchSearchResultMessages.Requests(0);
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v113 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = *(int *)(v38 + 28);
  long long v120 = v40;
  uint64_t v42 = (uint64_t)&v40[v41];
  uint64_t v43 = sub_10000566C(&qword_100709E38);
  uint64_t v44 = *(void *)(v43 - 8);
  long long v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56);
  uint64_t v119 = v43;
  long long v118 = v45;
  uint64_t v117 = v44 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v42, 1, 1);
  os_log_type_t v46 = (void *)swift_allocObject();
  v46[2] = sub_100151DC0;
  v46[3] = 0;
  unsigned char v46[4] = a1;
  v46[5] = sub_100151BE0;
  v46[6] = 0;
  v46[7] = sub_100153A1C;
  v46[8] = 0;
  v46[9] = sub_100153A80;
  v46[10] = 0;
  v153[0] = a1;
  v153[1] = (uint64_t)sub_100151BE0;
  v153[2] = 0;
  v153[3] = (uint64_t)sub_100153A1C;
  v153[4] = 0;
  v153[5] = (uint64_t)sub_1001541A8;
  v153[6] = (uint64_t)v46;
  swift_bridgeObjectRetain_n();
  sub_100151E10(v153, (uint64_t)v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, MessagesVMa) == 1)
  {
    swift_bridgeObjectRelease();
    sub_100007A48((uint64_t)v29, &qword_10070DA50);
    sub_100007A48(v42, &qword_10070A2D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v123, 1, 1, v36);
  }
  uint64_t v114 = v42;
  uint64_t v115 = v37;
  uint64_t v116 = v36;
  uint64_t v113 = v35;
  sub_100154068((uint64_t)v29, (uint64_t)v35, _s19UserInitiatedSearchV13FetchMessagesVMa);
  uint64_t v48 = *(unsigned __int8 *)(v131 + 80);
  uint64_t v127 = (v48 + 32) & ~v48;
  uint64_t v133 = _swiftEmptyArrayStorage;
  os_log_t v132 = (char *)_swiftEmptyArrayStorage + v127;
  uint64_t v142 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48);
  uint64_t v143 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v137 + 56);
  unint64_t v49 = *(void *)(a1 + 16);
  uint64_t v138 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v131 + 56);
  uint64_t v149 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v141 + 56);
  uint64_t v50 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48);
  unint64_t v51 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v131 + 48);
  uint64_t v124 = v48 | 7;
  uint64_t v135 = a1;
  uint64_t result = swift_bridgeObjectRetain_n();
  uint64_t v129 = 0;
  unint64_t v52 = 0;
  unint64_t v140 = v49;
  uint64_t v141 = v6;
  uint64_t v53 = (uint64_t)v147;
  uint64_t v54 = v148;
  while (2)
  {
    uint64_t v55 = (uint64_t)v151;
    if (v52 == v49)
    {
LABEL_5:
      uint64_t v56 = 1;
      unint64_t v52 = v49;
      goto LABEL_8;
    }
    while (1)
    {
      if (v52 >= *(void *)(v135 + 16))
      {
        __break(1u);
        goto LABEL_54;
      }
      sub_1001541B4(v135+ ((*(unsigned __int8 *)(v137 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80))+ *(void *)(v137 + 72) * v52, v55, _s19UserInitiatedSearchVMa);
      uint64_t v55 = (uint64_t)v151;
      uint64_t v56 = 0;
      ++v52;
LABEL_8:
      (*v143)(v55, v56, 1, v54);
      sub_10001FDF0(v55, v53, &qword_10070DA38);
      if ((*v142)(v53, 1, v54) == 1)
      {
        uint64_t v57 = v150;
        uint64_t v58 = *v149;
        (*v149)((uint64_t)v17, 1, 1, v150);
        uint64_t v60 = (uint64_t)v144;
        uint64_t v59 = (uint64_t)v145;
      }
      else
      {
        uint64_t v61 = v53;
        uint64_t v62 = v146;
        sub_100154068(v61, (uint64_t)v146, _s19UserInitiatedSearchVMa);
        sub_1001541B4((uint64_t)v62 + *(int *)(v54 + 20), (uint64_t)v6, _s19UserInitiatedSearchV5StateOMa);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v60 = (uint64_t)v144;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v64 = v134;
          sub_100154068((uint64_t)v6, v134, _s19UserInitiatedSearchV13FetchMessagesVMa);
          int v65 = *v146;
          uint64_t v66 = SearchResult;
          sub_1001541B4(v64, (uint64_t)v17 + *(int *)(SearchResult + 20), _s19UserInitiatedSearchV13FetchMessagesVMa);
          *uint64_t v17 = v65;
          uint64_t v62 = v146;
          sub_1001540D0(v64, _s19UserInitiatedSearchV13FetchMessagesVMa);
          uint64_t v67 = 0;
          uint64_t v59 = (uint64_t)v145;
        }
        else
        {
          sub_1001540D0((uint64_t)v6, _s19UserInitiatedSearchV5StateOMa);
          uint64_t v67 = 1;
          uint64_t v59 = (uint64_t)v145;
          uint64_t v66 = SearchResult;
        }
        (*v138)((uint64_t)v17, v67, 1, v66);
        sub_1001540D0((uint64_t)v62, _s19UserInitiatedSearchVMa);
        uint64_t v57 = v150;
        uint64_t v58 = *v149;
        (*v149)((uint64_t)v17, 0, 1, v150);
      }
      uint64_t v68 = *v50;
      if ((*v50)((uint64_t)v17, 1, v57) == 1)
      {
        sub_100007A48((uint64_t)v17, &qword_10070DA40);
        uint64_t v70 = 1;
        goto LABEL_20;
      }
      uint64_t v69 = v139;
      sub_10001FDF0((uint64_t)v17, v139, &qword_10070DA48);
      if ((*v51)(v69, 1, SearchResult) != 1) {
        break;
      }
      uint64_t result = sub_100007A48(v69, &qword_10070DA48);
      unint64_t v49 = v140;
      uint64_t v6 = v141;
      uint64_t v53 = (uint64_t)v147;
      uint64_t v54 = v148;
      uint64_t v55 = (uint64_t)v151;
      if (v52 == v140) {
        goto LABEL_5;
      }
    }
    sub_10001FDF0(v69, v60, &qword_10070DA48);
    uint64_t v70 = 0;
LABEL_20:
    uint64_t v71 = v150;
    v58(v60, v70, 1, v150);
    sub_10001FDF0(v60, v59, &qword_10070DA40);
    if (v68(v59, 1, v71) == 1)
    {
      uint64_t v72 = (uint64_t)v128;
      uint64_t v73 = SearchResult;
      (*v138)((uint64_t)v128, 1, 1, SearchResult);
      unsigned int v74 = (*v51)(v72, 1, v73);
      goto LABEL_24;
    }
    uint64_t v75 = v59;
    uint64_t v76 = v125;
    sub_10001FDF0(v75, v125, &qword_10070DA48);
    uint64_t v77 = v126;
    sub_1000079E4(v76, v126, &qword_10070DA48);
    uint64_t v78 = *v51;
    uint64_t v79 = SearchResult;
    uint64_t result = (*v51)(v77, 1, SearchResult);
    if (result != 1)
    {
      uint64_t v80 = v77;
      uint64_t v72 = (uint64_t)v128;
      sub_100154068(v80, (uint64_t)v128, type metadata accessor for FetchSearchResultMessages.Requests.Search);
      sub_100007A48(v76, &qword_10070DA48);
      (*v138)(v72, 0, 1, v79);
      unsigned int v74 = v78(v72, 1, v79);
LABEL_24:
      uint64_t v81 = v131;
      if (v74 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t result = sub_100007A48(v72, &qword_10070DA48);
        int v98 = v133;
        unint64_t v99 = v133[3];
        uint64_t v100 = v123;
        char v101 = v122;
        uint64_t v102 = v121;
        uint64_t v103 = v116;
        uint64_t v104 = v115;
        uint64_t v105 = v114;
        uint64_t v106 = (uint64_t)v113;
        if (v99 >= 2)
        {
          unint64_t v107 = v99 >> 1;
          BOOL v108 = __OFSUB__(v107, v129);
          unint64_t v109 = v107 - (void)v129;
          if (v108)
          {
LABEL_58:
            __break(1u);
            break;
          }
          v133[2] = v109;
        }
        uint64_t v110 = v98;
        swift_bridgeObjectRelease_n();
        uint64_t v111 = (uint64_t)v120;
        *long long v120 = v110;
        sub_100154068(v106, v111 + *(int *)(v103 + 20), _s19UserInitiatedSearchV13FetchMessagesVMa);
        uint64_t v112 = v111 + *(int *)(v103 + 24);
        *(void *)uint64_t v112 = v102;
        *(unsigned char *)(v112 + 8) = v101 & 1;
        sub_100007A48(v105, &qword_10070A2D0);
        v118(v105, 1, 1, v119);
        sub_1001541B4(v111, v100, type metadata accessor for FetchSearchResultMessages.Requests);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v104 + 56))(v100, 0, 1, v103);
        return sub_1001540D0(v111, type metadata accessor for FetchSearchResultMessages.Requests);
      }
      uint64_t result = sub_100154068(v72, v130, type metadata accessor for FetchSearchResultMessages.Requests.Search);
      if (v129)
      {
        int v82 = v133;
        unint64_t v49 = v140;
        uint64_t v6 = v141;
        uint64_t v53 = (uint64_t)v147;
        uint64_t v54 = v148;
        uint64_t v83 = (uint64_t)(v129 - 1);
        if (!__OFSUB__(v129, 1)) {
          goto LABEL_47;
        }
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
      unint64_t v84 = v133[3];
      if ((uint64_t)((v84 >> 1) + 0x4000000000000000) < 0)
      {
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      int64_t v85 = v84 & 0xFFFFFFFFFFFFFFFELL;
      if (v85 <= 1) {
        uint64_t v86 = 1;
      }
      else {
        uint64_t v86 = v85;
      }
      sub_10000566C(&qword_10070BA90);
      uint64_t v87 = *(void *)(v81 + 72);
      uint64_t v88 = v127;
      int v82 = (void *)swift_allocObject();
      uint64_t result = j__malloc_size(v82);
      if (!v87) {
        goto LABEL_56;
      }
      uint64_t v89 = result - v88;
      if (result - v88 == 0x8000000000000000 && v87 == -1) {
        goto LABEL_57;
      }
      uint64_t v91 = v89 / v87;
      v82[2] = v86;
      _OWORD v82[3] = 2 * (v89 / v87);
      uint64_t v92 = (char *)v82 + v88;
      uint64_t v93 = v133;
      uint64_t v94 = v133[3] >> 1;
      uint64_t v95 = v94 * v87;
      uint64_t v53 = (uint64_t)v147;
      uint64_t v54 = v148;
      unint64_t v49 = v140;
      if (!v133[2])
      {
LABEL_46:
        os_log_t v132 = &v92[v95];
        uint64_t v96 = (v91 & 0x7FFFFFFFFFFFFFFFLL) - v94;
        uint64_t result = swift_release();
        uint64_t v6 = v141;
        uint64_t v83 = v96 - 1;
        if (!__OFSUB__(v96, 1))
        {
LABEL_47:
          uint64_t v129 = (char *)v83;
          uint64_t v97 = (uint64_t)v132;
          uint64_t result = sub_100154068(v130, (uint64_t)v132, type metadata accessor for FetchSearchResultMessages.Requests.Search);
          os_log_t v132 = (char *)(v97 + *(void *)(v131 + 72));
          uint64_t v133 = v82;
          continue;
        }
        goto LABEL_54;
      }
      if (v82 < v133 || v92 >= (char *)v133 + v127 + v95)
      {
        os_log_t v132 = (char *)(v133[3] >> 1);
        uint64_t v129 = v92;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        if (v82 == v133)
        {
LABEL_45:
          v93[2] = 0;
          goto LABEL_46;
        }
        os_log_t v132 = (char *)(v133[3] >> 1);
        uint64_t v129 = v92;
        swift_arrayInitWithTakeBackToFront();
      }
      uint64_t v94 = (uint64_t)v132;
      uint64_t v92 = v129;
      uint64_t v93 = v133;
      goto LABEL_45;
    }
    break;
  }
  __break(1u);
  return result;
}

uint64_t sub_10014D0C8(uint64_t a1)
{
  uint64_t v2 = v1;
  SearchResultuint64_t Messages = type metadata accessor for FetchSearchResultMessages(0);
  uint64_t v5 = __chkstk_darwin(SearchResultMessages);
  uint64_t v80 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v76 = (uint64_t)&v71 - v7;
  uint64_t v75 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v8 = __chkstk_darwin(v75);
  uint64_t v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v74 = (uint64_t)&v71 - v11;
  uint64_t v12 = sub_1005E0ED0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v81 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  int v82 = (char *)&v71 - v16;
  uint64_t v17 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10000566C(&qword_100709E30);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v77 = (uint64_t)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v71 - v25;
  __chkstk_darwin(v24);
  uint64_t v78 = SearchResultMessages;
  uint64_t v79 = (uint64_t)&v71 - v27;
  sub_10014DC3C((uint64_t)v19);
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20);
  uint64_t v83 = v13;
  uint64x2_t v29 = (void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  if (v28 == 1)
  {
    sub_100007A48((uint64_t)v19, &qword_10070A000);
    uint64_t v30 = v12;
    (*v29)(v81, a1, v12);
    sub_1001541B4(a1, (uint64_t)v10, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_1001541B4(v2, (uint64_t)v80, type metadata accessor for FetchSearchResultMessages);
    uint64_t v31 = sub_1005E0EB0();
    os_log_type_t v32 = sub_1005E25C0();
    int v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v34 = swift_slowAlloc();
      int v82 = (char *)swift_slowAlloc();
      uint64_t v86 = v82;
      *(_DWORD *)uint64_t v34 = 68159491;
      LODWORD(v84) = 2;
      LODWORD(v79) = v33;
      sub_1005E2960();
      *(_WORD *)(v34 + 8) = 256;
      unint64_t v35 = &v10[*(int *)(v75 + 20)];
      LOBYTE(v84) = *v35;
      sub_1005E2960();
      *(_WORD *)(v34 + 11) = 2082;
      uint64_t v36 = *((void *)v35 + 1);
      unint64_t v37 = *((void *)v35 + 2);
      swift_bridgeObjectRetain();
      uint64_t v84 = sub_1000C6914(v36, v37, (uint64_t *)&v86);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 21) = 1040;
      LODWORD(v84) = 2;
      sub_1005E2960();
      *(_WORD *)(v34 + 27) = 512;
      LOWORD(v84) = *((_WORD *)v35 + 12);
      sub_1005E2960();
      *(_WORD *)(v34 + 31) = 2160;
      uint64_t v84 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v34 + 41) = 2085;
      int v38 = *((_DWORD *)v35 + 10);
      uint64_t v84 = *((void *)v35 + 4);
      int v85 = v38;
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1005E1CC0();
      uint64_t v84 = sub_1000C6914(v39, v40, (uint64_t *)&v86);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001540D0((uint64_t)v10, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v34 + 51) = 2048;
      uint64_t v41 = *(int *)(v78 + 48);
      uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests(0);
      uint64_t v43 = (uint64_t)v80;
      uint64_t v44 = v77;
      sub_1000079E4((uint64_t)&v80[v41 + *(int *)(SearchResult + 20)], v77, &qword_100709E30);
      sub_10000566C(&qword_100709E38);
      MessageIdentifierSet.count.getter();
      uint64_t v46 = v45;
      sub_100007A48(v44, &qword_100709E38);
      sub_1001540D0(v43, type metadata accessor for FetchSearchResultMessages);
      uint64_t v84 = v46;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v79, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. %ld UIDs total, no UIDs to fetch.", (uint8_t *)v34, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1001540D0((uint64_t)v80, type metadata accessor for FetchSearchResultMessages);
      sub_1001540D0((uint64_t)v10, type metadata accessor for MailboxTaskLogger);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v81, v30);
  }
  else
  {
    uint64_t v47 = v79;
    sub_10001FDF0((uint64_t)v19, v79, &qword_100709E30);
    uint64_t v48 = (char *)v12;
    (*v29)(v82, a1, v12);
    uint64_t v49 = v74;
    sub_1001541B4(a1, v74, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v50 = v76;
    sub_1001541B4(v2, v76, type metadata accessor for FetchSearchResultMessages);
    sub_1000079E4(v47, (uint64_t)v26, &qword_100709E30);
    unint64_t v51 = sub_1005E0EB0();
    os_log_type_t v52 = sub_1005E25C0();
    int v53 = v52;
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v54 = swift_slowAlloc();
      uint64_t v81 = v48;
      uint64_t v55 = v54;
      uint64_t v80 = (char *)swift_slowAlloc();
      uint64_t v86 = v80;
      *(_DWORD *)uint64_t v55 = 68159747;
      LODWORD(v84) = 2;
      os_log_t v72 = v51;
      int v73 = v53;
      sub_1005E2960();
      *(_WORD *)(v55 + 8) = 256;
      uint64_t v56 = v49 + *(int *)(v75 + 20);
      LOBYTE(v84) = *(unsigned char *)v56;
      sub_1005E2960();
      *(_WORD *)(v55 + 11) = 2082;
      uint64_t v57 = *(void *)(v56 + 8);
      unint64_t v58 = *(void *)(v56 + 16);
      swift_bridgeObjectRetain();
      uint64_t v84 = sub_1000C6914(v57, v58, (uint64_t *)&v86);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 21) = 1040;
      LODWORD(v84) = 2;
      sub_1005E2960();
      *(_WORD *)(v55 + 27) = 512;
      LOWORD(v84) = *(_WORD *)(v56 + 24);
      sub_1005E2960();
      *(_WORD *)(v55 + 31) = 2160;
      uint64_t v84 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v55 + 41) = 2085;
      int v59 = *(_DWORD *)(v56 + 40);
      uint64_t v84 = *(void *)(v56 + 32);
      int v85 = v59;
      swift_bridgeObjectRetain();
      uint64_t v60 = sub_1005E1CC0();
      uint64_t v84 = sub_1000C6914(v60, v61, (uint64_t *)&v86);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001540D0(v49, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v55 + 51) = 2048;
      uint64_t v62 = *(int *)(v78 + 48);
      uint64_t v63 = type metadata accessor for FetchSearchResultMessages.Requests(0);
      uint64_t v64 = v77;
      sub_1000079E4(v50 + v62 + *(int *)(v63 + 20), v77, &qword_100709E30);
      sub_10000566C(&qword_100709E38);
      MessageIdentifierSet.count.getter();
      uint64_t v66 = v65;
      sub_100007A48(v64, &qword_100709E38);
      sub_1001540D0(v50, type metadata accessor for FetchSearchResultMessages);
      uint64_t v84 = v66;
      sub_1005E2960();
      *(_WORD *)(v55 + 61) = 2048;
      MessageIdentifierSet.count.getter();
      uint64_t v68 = v67;
      sub_100007A48((uint64_t)v26, &qword_100709E30);
      uint64_t v84 = v68;
      sub_1005E2960();
      os_log_t v69 = v72;
      _os_log_impl((void *)&_mh_execute_header, v72, (os_log_type_t)v73, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. %ld UIDs total, %ld UIDs to fetch.", (uint8_t *)v55, 0x47u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, char *))(v83 + 8))(v82, v81);
    }
    else
    {
      sub_100007A48((uint64_t)v26, &qword_100709E30);
      sub_1001540D0(v50, type metadata accessor for FetchSearchResultMessages);

      sub_1001540D0(v49, type metadata accessor for MailboxTaskLogger);
      (*(void (**)(char *, char *))(v83 + 8))(v82, v48);
    }
    return sub_100007A48(v79, &qword_100709E30);
  }
}

uint64_t sub_10014DC3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v61 = a1;
  uint64_t v2 = sub_10000566C(&qword_10070A2D0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v62 = (uint64_t)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v52 - v5;
  uint64_t v7 = sub_10000566C(&qword_100709E30);
  uint64_t v59 = *(void *)(v7 - 8);
  uint64_t v60 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v54 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v52 - v10;
  uint64_t v12 = sub_10000566C(&qword_100709E38);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  int v53 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  unint64_t v58 = (char *)&v52 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v55 = (uint64_t)&v52 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v52 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v52 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  int v28 = (char *)&v52 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v56 = (char *)&v52 - v30;
  __chkstk_darwin(v29);
  uint64_t v57 = (char *)&v52 - v31;
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests(0);
  uint64_t v63 = v1;
  uint64_t v64 = SearchResult;
  uint64_t v33 = v1 + *(int *)(SearchResult + 20);
  sub_1000079E4(v33, (uint64_t)v11, &qword_100709E30);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  MessageIdentifierSet.subtracting(_:)(v33 + *(int *)(MessagesVMa + 20), v12);
  sub_100007A48((uint64_t)v11, &qword_100709E38);
  sub_1000079E4(v33 + *(int *)(MessagesVMa + 24), (uint64_t)v6, &qword_10070A2D0);
  unint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v35(v6, 1, v12) == 1)
  {
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
    sub_100007A48((uint64_t)v6, &qword_10070A2D0);
  }
  else
  {
    sub_10001FDF0((uint64_t)v6, (uint64_t)v22, &qword_100709E38);
  }
  uint64_t v36 = v60;
  MessageIdentifierSet.subtracting(_:)((uint64_t)v22, v12);
  sub_100007A48((uint64_t)v22, &qword_100709E38);
  sub_100007A48((uint64_t)v25, &qword_100709E38);
  uint64_t v37 = v63;
  uint64_t v38 = v62;
  sub_1000079E4(v63 + *(int *)(v64 + 28), v62, &qword_10070A2D0);
  if (v35((char *)v38, 1, v12) == 1)
  {
    uint64_t v39 = v55;
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
    sub_100007A48(v38, &qword_10070A2D0);
  }
  else
  {
    uint64_t v39 = v55;
    sub_10001FDF0(v38, v55, &qword_100709E38);
  }
  uint64_t v41 = (uint64_t)v58;
  uint64_t v40 = v59;
  uint64_t v42 = (uint64_t)v56;
  MessageIdentifierSet.subtracting(_:)(v39, v12);
  sub_100007A48(v39, &qword_100709E38);
  sub_100007A48((uint64_t)v28, &qword_100709E38);
  uint64_t v43 = (uint64_t *)(v37 + *(int *)(v64 + 24));
  if (v43[1])
  {
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    uint64_t v65 = *v43;
    sub_100063E18();
    Range<>.init<A>(_:)((uint64_t)&v65, (uint64_t)&type metadata for UID);
    uint64_t v65 = v44;
    sub_10001FC6C();
    uint64_t v45 = (uint64_t)v53;
    sub_1005E36A0();
    sub_10001FDF0(v45, v41, &qword_100709E38);
  }
  uint64_t v46 = v61;
  uint64_t v47 = (uint64_t)v57;
  MessageIdentifierSet.subtracting(_:)(v41, v12);
  sub_100007A48(v41, &qword_100709E38);
  sub_100007A48(v42, &qword_100709E38);
  MessageIdentifierSet.count.getter();
  if (v48 < 1)
  {
    sub_100007A48(v47, &qword_100709E38);
    uint64_t v50 = 1;
  }
  else
  {
    uint64_t v49 = v54;
    sub_10001FDF0(v47, v54, &qword_100709E38);
    sub_10001FDF0(v49, v46, &qword_100709E30);
    uint64_t v50 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v46, v50, 1, v36);
}

uint64_t sub_10014E1F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v68 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v68);
  uint64_t v78 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_10070A000);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v69 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v71 = (uint64_t)&v66 - v10;
  uint64_t v11 = sub_10000566C(&qword_100709E30);
  uint64_t v73 = *(void *)(v11 - 8);
  uint64_t v74 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v67 = (uint64_t)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v66 = (uint64_t)&v66 - v15;
  __chkstk_darwin(v14);
  uint64_t v70 = (uint64_t)&v66 - v16;
  uint64_t v17 = sub_10000566C(&qword_10070D810);
  __chkstk_darwin(v17 - 8);
  uint64_t v77 = (uint64_t)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for NewServerMessages();
  uint64_t v81 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v72 = (uint64_t)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v86 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v66 - v24;
  uint64_t v26 = sub_1001A9EB4(a2);
  uint64_t v27 = v26[2];
  if (v27)
  {
    uint64_t v75 = v26;
    uint64_t v76 = a3;
    uint64_t v28 = 0;
    uint64_t v84 = a1;
    int v85 = v26 + 4;
    uint64_t v29 = *(void *)(a1 + 16);
    uint64_t v82 = v29;
    uint64_t v83 = v27;
    do
    {
      if (v29)
      {
        uint64_t v30 = v86;
        int v31 = *((_DWORD *)v85 + v28);
        uint64_t v32 = a1 + ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80));
        swift_bridgeObjectRetain();
        uint64_t v33 = *(void *)(v30 + 72);
        while (1)
        {
          sub_1001541B4(v32, (uint64_t)v25, type metadata accessor for TaskHistory.Previous);
          sub_1001541B4((uint64_t)v25, (uint64_t)v23, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1001540D0((uint64_t)v23, type metadata accessor for TaskHistory.Previous);
          }
          else
          {
            int v34 = *(_DWORD *)&v23[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
            sub_1001540D0((uint64_t)v23, type metadata accessor for ClientCommand);
            if (v34 == v31)
            {
              sub_1001540D0((uint64_t)v25, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a3 = v76;
              goto LABEL_25;
            }
          }
          sub_1001540D0((uint64_t)v25, type metadata accessor for TaskHistory.Previous);
          v32 += v33;
          if (!--v29)
          {
            a1 = v84;
            swift_bridgeObjectRelease();
            uint64_t v29 = v82;
            uint64_t v27 = v83;
            break;
          }
        }
      }
      ++v28;
    }
    while (v28 != v27);
    swift_bridgeObjectRelease();
    a3 = v76;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  SearchResultuint64_t Messages = (int *)type metadata accessor for FetchSearchResultMessages(0);
  uint64_t v36 = v80;
  BOOL v37 = sub_10014EA38();
  uint64_t v38 = (uint64_t)v78;
  uint64_t v39 = (int *)v79;
  uint64_t v40 = v81;
  uint64_t v41 = v77;
  if (v37) {
    goto LABEL_25;
  }
  uint64_t v42 = v36 + SearchResultMessages[13];
  sub_1000079E4(v42, v77, &qword_10070D810);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v40 + 48))(v41, 1, v39) != 1)
  {
    uint64_t v50 = v72;
    sub_100154068(v41, v72, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    goto LABEL_19;
  }
  sub_100007A48(v41, &qword_10070D810);
  uint64_t v43 = v71;
  sub_10014DC3C(v71);
  uint64_t v44 = v43;
  uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
  if (v45(v43, 1, v74) != 1)
  {
    sub_10001FDF0(v43, v70, &qword_100709E30);
    sub_10006654C(47, v38);
    MessageIdentifierSet.count.getter();
    if (v46 < 1)
    {
      sub_100007A48(v38, &qword_100709E38);
      uint64_t v49 = 1;
      uint64_t v44 = v69;
    }
    else
    {
      uint64_t v47 = v67;
      sub_10001FDF0(v38, v67, &qword_100709E38);
      uint64_t v48 = v47;
      uint64_t v44 = v69;
      sub_10001FDF0(v48, v69, &qword_100709E30);
      uint64_t v49 = 0;
    }
    uint64_t v53 = v74;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56))(v44, v49, 1, v74);
    if (v45(v44, 1, v53) == 1)
    {
      sub_100007A48(v70, &qword_100709E30);
      goto LABEL_24;
    }
    uint64_t v55 = v66;
    sub_10001FDF0(v44, v66, &qword_100709E30);
    uint64_t v56 = *(void *)(v36 + 40);
    int v57 = *(_DWORD *)(v36 + 48);
    uint64_t v50 = v72;
    sub_1000079E4(v55, v72 + v39[5], &qword_100709E30);
    unint64_t v58 = (char *)(v36 + SearchResultMessages[9]);
    char v59 = *v58;
    char v60 = v58[1];
    char v61 = v58[2];
    char v62 = v58[3];
    char v63 = *(unsigned char *)(v36 + SearchResultMessages[10]);
    LOBYTE(v58) = v58[4];
    char v64 = *(unsigned char *)(v36 + SearchResultMessages[11]);
    *(void *)(v50 + v39[9]) = _swiftEmptyArrayStorage;
    *(void *)uint64_t v50 = v56;
    *(_DWORD *)(v50 + 8) = v57;
    uint64_t v65 = (unsigned char *)(v50 + v39[6]);
    *uint64_t v65 = v59;
    v65[1] = v60;
    v65[2] = v61;
    _OWORD v65[3] = v62;
    v65[4] = (_BYTE)v58;
    *(unsigned char *)(v50 + v39[7]) = v63;
    *(unsigned char *)(v50 + v39[8]) = v64;
    swift_bridgeObjectRetain();
    sub_100007A48(v55, &qword_100709E30);
    sub_100007A48(v70, &qword_100709E30);
    sub_100007A48(v42, &qword_10070D810);
    sub_1001541B4(v50, v42, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v81 + 56))(v42, 0, 1, v39);
LABEL_19:
    sub_10019CE28(a3);
    sub_1001540D0(v50, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    uint64_t v51 = sub_10000566C(&qword_10070DD00);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(a3, 0, 1, v51);
  }
LABEL_24:
  sub_100007A48(v44, &qword_10070A000);
LABEL_25:
  uint64_t v54 = sub_10000566C(&qword_10070DD00);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(a3, 1, 1, v54);
}

BOOL sub_10014EA38()
{
  uint64_t v1 = sub_10000566C(&qword_10070A2D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests(0);
  __chkstk_darwin(SearchResult);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10014FAB4((uint64_t)v9);
  uint64_t v10 = sub_10000566C(&qword_100709E30);
  int v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10);
  sub_100007A48((uint64_t)v9, &qword_10070A000);
  sub_1001541B4(v0, (uint64_t)v6, type metadata accessor for FetchSearchResultMessages.Requests);
  if (v11 == 1)
  {
    sub_1001540D0((uint64_t)v6, type metadata accessor for FetchSearchResultMessages.Requests);
    return 0;
  }
  else
  {
    sub_1000079E4((uint64_t)&v6[*(int *)(SearchResult + 28)], (uint64_t)v3, &qword_10070A2D0);
    sub_1001540D0((uint64_t)v6, type metadata accessor for FetchSearchResultMessages.Requests);
    uint64_t v13 = sub_10000566C(&qword_100709E38);
    BOOL v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v3, 1, v13) == 1;
    sub_100007A48((uint64_t)v3, &qword_10070A2D0);
  }
  return v12;
}

const mach_header_64 *sub_10014EC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v129 = a3;
  uint64_t v130 = a4;
  uint64_t v134 = a2;
  uint64_t v131 = a1;
  uint64_t v5 = sub_10000566C(&qword_10070DA48);
  __chkstk_darwin(v5 - 8);
  uint64_t v124 = (char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests.Search(0);
  uint64_t v122 = *(void *)(SearchResult - 8);
  uint64_t v123 = SearchResult;
  __chkstk_darwin(SearchResult);
  long long v120 = (unsigned int *)((char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10000566C(&qword_10070D810);
  __chkstk_darwin(v9 - 8);
  uint64_t v118 = (uint64_t)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v121 = *(void *)(v137 - 8);
  uint64_t v11 = __chkstk_darwin(v137);
  uint64_t v136 = (char **)((char *)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v115 - v13;
  uint64_t v15 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v133 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v138 = (uint64_t)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v140 = (uint64_t)&v115 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v115 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v115 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v115 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v115 - v29;
  uint64_t v31 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v31 - 8);
  uint64_t v33 = (char *)&v115 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_10000566C(&qword_100709E30);
  uint64_t v34 = *(void *)(v139 - 8);
  uint64_t v35 = __chkstk_darwin(v139);
  uint64_t v119 = (uint64_t)&v115 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v115 - v37;
  SearchResultuint64_t Messages = type metadata accessor for FetchSearchResultMessages(0);
  uint64_t v126 = v4;
  sub_10014FAB4((uint64_t)v33);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v33, 1, v139) == 1)
  {
    sub_100007A48((uint64_t)v33, &qword_10070A000);
    uint64_t v39 = v134;
    goto LABEL_14;
  }
  uint64_t v128 = v38;
  sub_10001FDF0((uint64_t)v33, (uint64_t)v38, &qword_100709E30);
  char v141 = 1;
  uint64_t v40 = sub_100105804(0x100000000, v130);
  unint64_t v41 = v40[2];
  if (!v41)
  {
LABEL_54:
    swift_bridgeObjectRelease();
    uint64_t v109 = v126;
    uint64_t v110 = (uint64_t)v128;
    uint64_t v111 = sub_10000566C(&qword_10070CC50);
    swift_allocBox();
    uint64_t v113 = (uint64_t)v112 + *(int *)(v111 + 48);
    uint64_t v114 = *(void *)(v109 + 24);
    *uint64_t v112 = *(void *)(v109 + 16);
    v112[1] = v114;
    sub_10001FDF0(v110, v113, &qword_100709E30);
    swift_bridgeObjectRetain();
    return &_mh_execute_header;
  }
  uint64_t v42 = 0;
  uint64_t v116 = v40;
  os_log_t v132 = v40 + 4;
  uint64_t v43 = v134;
  uint64_t v44 = *(void **)(v134 + 16);
  uint64_t v115 = v14;
  unint64_t v127 = v41;
  uint64_t v125 = v44;
  while (!v44)
  {
LABEL_6:
    if (++v42 == v41) {
      goto LABEL_54;
    }
  }
  uint64_t v139 = v42;
  uint64_t v45 = v133;
  int v46 = *((_DWORD *)v132 + v42);
  uint64_t v47 = v43 + ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80));
  swift_bridgeObjectRetain_n();
  uint64_t v48 = *(void *)(v45 + 72);
  uint64_t v49 = (char *)v44;
  while (1)
  {
    sub_1001541B4(v47, (uint64_t)v30, type metadata accessor for TaskHistory.Previous);
    sub_1001541B4((uint64_t)v30, (uint64_t)v28, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_1001540D0((uint64_t)v28, type metadata accessor for TaskHistory.Previous);
LABEL_10:
    sub_1001540D0((uint64_t)v30, type metadata accessor for TaskHistory.Previous);
    v47 += v48;
    if (!--v49)
    {
      uint64_t v43 = v134;
      swift_bridgeObjectRelease_n();
      unint64_t v41 = v127;
      uint64_t v42 = v139;
      uint64_t v44 = v125;
      goto LABEL_6;
    }
  }
  int v50 = *((_DWORD *)v28 + 2);
  sub_10007C4A4(*(void *)v28);
  if (v50 != v46) {
    goto LABEL_10;
  }
  sub_1001540D0((uint64_t)v30, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  uint64_t v39 = v134;
  swift_bridgeObjectRelease_n();
  sub_100007A48((uint64_t)v128, &qword_100709E30);
  uint64_t v14 = v115;
LABEL_14:
  uint64_t v51 = sub_1001A9EB4(v129);
  uint64_t v52 = (void *)v51[2];
  if (!v52)
  {
LABEL_49:
    swift_bridgeObjectRelease();
LABEL_50:
    uint64_t v89 = v126;
    uint64_t v93 = (uint64_t)v124;
    uint64_t v74 = v130;
    goto LABEL_51;
  }
  uint64_t v53 = 0;
  uint64_t v116 = v51;
  uint64_t v128 = v51 + 4;
  uint64_t v139 = *(void *)(v39 + 16);
  uint64_t v125 = v52;
  uint64_t v135 = v22;
  while (!v139)
  {
LABEL_18:
    uint64_t v53 = (void *)((char *)v53 + 1);
    if (v53 == v52) {
      goto LABEL_49;
    }
  }
  os_log_t v132 = v53;
  int v54 = *((_DWORD *)v128 + (void)v53);
  uint64_t v55 = v133;
  unint64_t v127 = (*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80);
  uint64_t v56 = v39 + v127;
  swift_bridgeObjectRetain();
  uint64_t v57 = *(void *)(v55 + 72);
  uint64_t v58 = v139;
  while (2)
  {
    sub_1001541B4(v56, (uint64_t)v25, type metadata accessor for TaskHistory.Previous);
    sub_1001541B4((uint64_t)v25, (uint64_t)v22, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1001540D0((uint64_t)v22, type metadata accessor for TaskHistory.Previous);
      goto LABEL_22;
    }
    int v59 = *(_DWORD *)&v22[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
    sub_1001540D0((uint64_t)v22, type metadata accessor for ClientCommand);
    if (v59 != v54)
    {
LABEL_22:
      sub_1001540D0((uint64_t)v25, type metadata accessor for TaskHistory.Previous);
      v56 += v57;
      if (!--v58)
      {
        uint64_t v39 = v134;
LABEL_17:
        uint64_t v52 = v125;
        uint64_t v53 = v132;
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      continue;
    }
    break;
  }
  sub_1001540D0((uint64_t)v25, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  uint64_t v60 = *(void *)(v131 + 16);
  if (v60)
  {
    uint64_t v61 = v121;
    uint64_t v62 = v131 + ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80));
    swift_bridgeObjectRetain();
    uint64_t v63 = *(void *)(v61 + 72);
    do
    {
      sub_1001541B4(v62, (uint64_t)v14, type metadata accessor for TaskHistory.Running);
      uint64_t v64 = (uint64_t)v136;
      sub_1001541B4((uint64_t)v14, (uint64_t)v136, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1001540D0(v64, type metadata accessor for TaskHistory.Running);
      }
      else
      {
        uint64_t v65 = v25;
        uint64_t v66 = v57;
        uint64_t v67 = v63;
        uint64_t v68 = v15;
        uint64_t v69 = v14;
        int v70 = *(_DWORD *)(v64 + 8);
        uint64_t v71 = sub_10000566C(&qword_10070B6A0);
        sub_1001540D0(v64 + *(int *)(v71 + 64), type metadata accessor for ClientCommand);
        BOOL v72 = v70 == v54;
        uint64_t v14 = v69;
        uint64_t v15 = v68;
        uint64_t v63 = v67;
        uint64_t v57 = v66;
        uint64_t v25 = v65;
        uint64_t v22 = v135;
        if (v72)
        {
          sub_1001540D0((uint64_t)v14, type metadata accessor for TaskHistory.Running);
          uint64_t v39 = v134;
          goto LABEL_17;
        }
      }
      sub_1001540D0((uint64_t)v14, type metadata accessor for TaskHistory.Running);
      v62 += v63;
      --v60;
    }
    while (v60);
    swift_bridgeObjectRelease();
    uint64_t v73 = v134;
  }
  else
  {
    uint64_t v73 = v134;
  }
  swift_bridgeObjectRelease();
  char v142 = 1;
  uint64_t v74 = v130;
  uint64_t v75 = sub_100105804(0x100000001, v130);
  uint64_t v137 = v75[2];
  if (v137)
  {
    uint64_t v76 = 0;
    uint64_t v77 = (uint64_t)(v75 + 4);
    uint64_t v78 = v73 + v127;
    uint64_t v135 = (char *)v75;
    uint64_t v136 = v75 + 4;
    uint64_t v79 = v140;
    while (2)
    {
      int v80 = *(_DWORD *)(v77 + 4 * v76++);
      uint64_t result = (const mach_header_64 *)swift_bridgeObjectRetain_n();
      uint64_t v82 = 0;
      uint64_t v83 = v78;
      uint64_t v84 = v78;
      do
      {
        uint64_t v85 = v82 + 1;
        if (__OFADD__(v82, 1))
        {
          __break(1u);
          return result;
        }
        sub_1001541B4(v84, v79, type metadata accessor for TaskHistory.Previous);
        uint64_t v86 = v138;
        sub_1001541B4(v79, v138, type metadata accessor for TaskHistory.Previous);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          unint64_t v87 = *(void *)v86;
          int v88 = *(_DWORD *)(v86 + 8);
          sub_10007C4A4(v87);
          if (v88 == v80)
          {
            sub_1001540D0(v140, type metadata accessor for TaskHistory.Previous);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            goto LABEL_50;
          }
        }
        else
        {
          sub_1001540D0(v86, type metadata accessor for TaskHistory.Previous);
        }
        uint64_t result = (const mach_header_64 *)sub_1001540D0(v140, type metadata accessor for TaskHistory.Previous);
        ++v82;
        v84 += v57;
      }
      while (v85 != v139);
      swift_bridgeObjectRelease_n();
      uint64_t v77 = (uint64_t)v136;
      uint64_t v78 = v83;
      if (v76 != v137) {
        continue;
      }
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v74 = v130;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v89 = v126;
  uint64_t v90 = v118;
  sub_1000079E4(v126 + *(int *)(SearchResultMessages + 52), v118, &qword_10070D810);
  uint64_t v91 = type metadata accessor for NewServerMessages();
  int v92 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 48))(v90, 1, v91);
  uint64_t v93 = (uint64_t)v124;
  if (v92 == 1)
  {
    sub_100007A48(v90, &qword_10070D810);
    goto LABEL_51;
  }
  uint64_t v94 = *(void *)(v90 + *(int *)(v91 + 36));
  swift_bridgeObjectRetain();
  sub_1001540D0(v90, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
  if (*(void *)(v94 + 16))
  {
    uint64_t v95 = swift_allocObject();
    uint64_t v96 = *(void *)(v89 + 24);
    *(void *)(v95 + 16) = *(void *)(v89 + 16);
    *(void *)(v95 + 24) = v96;
    *(void *)(v95 + 32) = v94;
    *(void *)(v95 + 40) = 0;
    *(unsigned char *)(v95 + 48) = 1;
    swift_bridgeObjectRetain();
    return &_mh_execute_header + 1;
  }
  swift_bridgeObjectRelease();
LABEL_51:
  sub_1001503E0(v131, v134, v129, v74, v93);
  uint64_t v98 = v123;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v93, 1, v123) == 1)
  {
    sub_100007A48(v93, &qword_10070DA48);
    return 0;
  }
  else
  {
    unint64_t v99 = v120;
    sub_100154068(v93, (uint64_t)v120, type metadata accessor for FetchSearchResultMessages.Requests.Search);
    uint64_t v97 = *v99;
    uint64_t v100 = swift_allocObject();
    *(_DWORD *)(v100 + 16) = v97;
    sub_10000566C(&qword_10070DCF8);
    uint64_t v101 = sub_10000566C(&qword_10070C120);
    unint64_t v102 = (*(unsigned __int8 *)(*(void *)(v101 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v101 - 8) + 80);
    uint64_t v103 = swift_allocObject();
    *(_OWORD *)(v103 + 16) = xmmword_1005F6670;
    unint64_t v104 = v103 + v102;
    uint64_t v105 = v104 + *(int *)(v101 + 48);
    int v106 = *(_DWORD *)(v89 + 48);
    *(void *)unint64_t v104 = *(void *)(v89 + 40);
    *(_DWORD *)(v104 + 8) = v106;
    uint64_t v107 = v119;
    sub_1000079E4((uint64_t)v99 + *(int *)(v98 + 20), v119, &qword_100709E30);
    sub_10001FDF0(v107, v105, &qword_100709E38);
    unint64_t v108 = sub_1000D5338(v103);
    swift_setDeallocating();
    swift_bridgeObjectRetain();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1001540D0((uint64_t)v99, type metadata accessor for FetchSearchResultMessages.Requests.Search);
    *(void *)(v100 + 24) = v108;
  }
  return (const mach_header_64 *)v97;
}

uint64_t sub_10014FAB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v100 = sub_10000566C(&qword_100709E60);
  uint64_t v95 = *(void (***)(char *, uint64_t, uint64_t))(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v96 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_100709E30);
  uint64_t v89 = *(void *)(v5 - 8);
  uint64_t v90 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v82 = (uint64_t)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v99 = (uint64_t)&v79 - v8;
  uint64_t v9 = sub_10000566C(&qword_10070A2D0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v97 = (uint64_t)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v79 - v12;
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests.Search(0);
  uint64_t v14 = *(void *)(SearchResult - 8);
  uint64_t v15 = __chkstk_darwin(SearchResult);
  uint64_t v17 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v79 - v18;
  uint64_t v102 = sub_10000566C(&qword_100709E38);
  uint64_t v88 = *(void *)(v102 - 8);
  uint64_t v20 = __chkstk_darwin(v102);
  uint64_t v81 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v83 = (uint64_t)&v79 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v84 = (char *)&v79 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v85 = (char *)&v79 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v94 = (uint64_t)&v79 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v86 = (uint64_t)&v79 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v79 - v33;
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v79 - v35;
  unint64_t v87 = v2;
  uint64_t v37 = *v2;
  swift_bridgeObjectRetain();
  uint64_t v98 = v34;
  sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v38 = *(void *)(v37 + 16);
  int v92 = v36;
  uint64_t v93 = a1;
  uint64_t v91 = v37;
  if (v38)
  {
    int v80 = v17;
    uint64_t v39 = v14;
    uint64_t v40 = v37 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v79 = v39;
    uint64_t v41 = *(void *)(v39 + 72);
    uint64_t v42 = (uint64_t (**)(char *, uint64_t, uint64_t))(v88 + 48);
    v95 += 2;
    swift_bridgeObjectRetain();
    do
    {
      sub_1001541B4(v40, (uint64_t)v19, type metadata accessor for FetchSearchResultMessages.Requests.Search);
      uint64_t v43 = &v19[*(int *)(SearchResult + 20)];
      uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
      sub_1000079E4((uint64_t)&v43[*(int *)(MessagesVMa + 24)], (uint64_t)v13, &qword_10070A2D0);
      int v45 = (*v42)(v13, 1, v102);
      sub_100007A48((uint64_t)v13, &qword_10070A2D0);
      if (v45 == 1)
      {
        uint64_t v46 = (uint64_t)v43;
        uint64_t v47 = v99;
        sub_1000079E4(v46, v99, &qword_100709E30);
        (*v95)(v96, v47, v100);
        sub_1005E3670();
        sub_100007A48(v47, &qword_100709E38);
      }
      sub_1001540D0((uint64_t)v19, type metadata accessor for FetchSearchResultMessages.Requests.Search);
      v40 += v41;
      --v38;
    }
    while (v38);
    uint64_t v37 = v91;
    swift_bridgeObjectRelease();
    uint64_t v36 = v92;
    a1 = v93;
    uint64_t v17 = v80;
    uint64_t v14 = v79;
  }
  sub_10001FDF0((uint64_t)v98, (uint64_t)v36, &qword_100709E38);
  swift_bridgeObjectRelease();
  if (sub_1005E3630())
  {
    sub_100007A48((uint64_t)v36, &qword_100709E38);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56))(a1, 1, 1, v90);
  }
  else
  {
    sub_1000079E4((uint64_t)v36, v94, &qword_100709E38);
    uint64_t v49 = *(void *)(v37 + 16);
    if (v49)
    {
      uint64_t v50 = v37 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v51 = *(void *)(v14 + 72);
      uint64_t v52 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
      swift_bridgeObjectRetain();
      do
      {
        sub_1001541B4(v50, (uint64_t)v17, type metadata accessor for FetchSearchResultMessages.Requests.Search);
        uint64_t v53 = (uint64_t)v17;
        uint64_t v54 = (uint64_t)&v17[*(int *)(SearchResult + 20)];
        uint64_t v55 = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
        uint64_t v56 = v97;
        sub_1000079E4(v54 + *(int *)(v55 + 24), v97, &qword_10070A2D0);
        int v57 = (*v52)(v56, 1, v102);
        sub_100007A48(v56, &qword_10070A2D0);
        if (v57 != 1)
        {
          uint64_t v58 = v99;
          sub_1000079E4(v54, v99, &qword_100709E30);
          sub_1005E3660();
          sub_100007A48(v58, &qword_100709E38);
        }
        uint64_t v17 = (char *)v53;
        sub_1001540D0(v53, type metadata accessor for FetchSearchResultMessages.Requests.Search);
        v50 += v51;
        --v49;
      }
      while (v49);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v59 = v86;
    sub_10001FDF0(v94, v86, &qword_100709E38);
    swift_bridgeObjectRelease();
    uint64_t v60 = type metadata accessor for FetchSearchResultMessages.Requests(0);
    uint64_t v61 = v87;
    uint64_t v62 = (char *)v87 + *(int *)(v60 + 24);
    if (v62[8])
    {
      uint64_t v63 = v83;
      sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
    }
    else
    {
      uint64_t v103 = *(void *)v62;
      sub_100063E18();
      Range<>.init<A>(_:)((uint64_t)&v103, (uint64_t)&type metadata for UID);
      uint64_t v103 = v64;
      sub_10001FC6C();
      uint64_t v65 = (uint64_t)v81;
      sub_1005E36A0();
      uint64_t v63 = v83;
      sub_10001FDF0(v65, v83, &qword_100709E38);
    }
    uint64_t v67 = v89;
    uint64_t v66 = v90;
    uint64_t v68 = (uint64_t)v84;
    uint64_t v69 = v102;
    MessageIdentifierSet.subtracting(_:)(v63, v102);
    sub_100007A48(v63, &qword_100709E38);
    uint64_t v70 = (uint64_t)v61 + *(int *)(v60 + 20);
    uint64_t v71 = v70 + *(int *)(_s19UserInitiatedSearchV13FetchMessagesVMa(0) + 20);
    uint64_t v72 = (uint64_t)v85;
    MessageIdentifierSet.subtracting(_:)(v71, v69);
    sub_100007A48(v68, &qword_100709E38);
    MessageIdentifierSet.count.getter();
    if (v73 < 1)
    {
      sub_100007A48(v72, &qword_100709E38);
      uint64_t v78 = 1;
      uint64_t v77 = v93;
    }
    else
    {
      uint64_t v74 = v72;
      uint64_t v75 = v82;
      sub_10001FDF0(v74, v82, &qword_100709E38);
      uint64_t v76 = v75;
      uint64_t v77 = v93;
      sub_10001FDF0(v76, v93, &qword_100709E30);
      uint64_t v78 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v77, v78, 1, v66);
    sub_100007A48(v59, &qword_100709E38);
    return sub_100007A48((uint64_t)v92, &qword_100709E38);
  }
}

uint64_t sub_1001503E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v54 = a5;
  uint64_t v64 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v61 = *(void *)(v64 - 8);
  uint64_t v9 = __chkstk_darwin(v64);
  uint64_t v11 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v49 - v12;
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests.Search(0);
  uint64_t v55 = *(void *)(SearchResult - 8);
  __chkstk_darwin(SearchResult);
  uint64_t v56 = (int *)((char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v57 = a4;
  LOBYTE(v68[0]) = 1;
  uint64_t v15 = sub_100105804(0x100000000, a4);
  uint64_t v16 = v15[2];
  if (v16)
  {
    uint64_t v17 = 0;
    while ((sub_1001652E0(*((_DWORD *)v15 + v17 + 8), a1, a2) & 1) == 0)
    {
      if (v16 == ++v17) {
        goto LABEL_5;
      }
    }
LABEL_35:
    uint64_t v46 = SearchResult;
    uint64_t v45 = v54;
    swift_bridgeObjectRelease();
    uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
    return v47(v45, 1, 1, v46);
  }
LABEL_5:
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1001A9EB4(a3);
  uint64_t v19 = v18[2];
  if (v19)
  {
    uint64_t v20 = 0;
    while ((sub_100149D30(*((_DWORD *)v18 + v20 + 8), a1, a2) & 1) == 0)
    {
      if (v19 == ++v20) {
        goto LABEL_9;
      }
    }
    goto LABEL_35;
  }
LABEL_9:
  swift_bridgeObjectRelease();
  LOBYTE(v68[0]) = 1;
  uint64_t v21 = sub_100105804(0x100000001, v57);
  uint64_t v22 = v21[2];
  if (v22)
  {
    uint64_t v23 = 0;
    while ((sub_1001652E0(*((_DWORD *)v21 + v23 + 8), a1, a2) & 1) == 0)
    {
      if (v22 == ++v23) {
        goto LABEL_13;
      }
    }
    goto LABEL_35;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  sub_100150A4C(v68);
  uint64_t v50 = *(void *)(v68[0] + 16);
  if (!v50) {
    goto LABEL_34;
  }
  unint64_t v52 = v68[0] + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
  uint64_t v51 = *(void *)(v55 + 72);
  v49[1] = v68[0];
  swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  uint64_t v60 = a2;
  uint64_t v25 = v56;
  do
  {
    uint64_t v26 = sub_1001541B4(v52 + v51 * v24, (uint64_t)v25, type metadata accessor for FetchSearchResultMessages.Requests.Search);
    int v66 = *v25;
    char v67 = 0;
    __chkstk_darwin(v26);
    v49[-2] = &v66;
    uint64_t v27 = v57;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_10002C37C((uint64_t)sub_100159284, (uint64_t)&v49[-4], v27);
    int64_t v29 = *(void *)(v28 + 16);
    if (v29)
    {
      uint64_t v59 = v24;
      uint64_t v65 = _swiftEmptyArrayStorage;
      sub_10001AA94(0, v29, 0);
      uint64_t v30 = v65;
      unint64_t v31 = v65[2];
      uint64_t v32 = 32;
      do
      {
        int v33 = *(_DWORD *)(v28 + v32);
        uint64_t v65 = v30;
        unint64_t v34 = v30[3];
        if (v31 >= v34 >> 1)
        {
          sub_10001AA94(v34 > 1, v31 + 1, 1);
          uint64_t v30 = v65;
        }
        v30[2] = v31 + 1;
        *((_DWORD *)v30 + v31 + 8) = v33;
        v32 += 12;
        ++v31;
        --v29;
      }
      while (v29);
      swift_bridgeObjectRelease();
      uint64_t v24 = v59;
      a2 = v60;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v30 = _swiftEmptyArrayStorage;
    }
    uint64_t v63 = v30[2];
    if (!v63)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_40;
    }
    uint64_t v59 = v24 + 1;
    uint64_t v62 = v30 + 4;
    uint64_t v35 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    uint64_t v36 = 0;
    uint64_t v58 = v35;
    while (!v35)
    {
LABEL_25:
      if (++v36 == v63)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
LABEL_40:
        uint64_t v44 = v54;
        sub_100154068((uint64_t)v56, v54, type metadata accessor for FetchSearchResultMessages.Requests.Search);
        uint64_t v42 = 0;
        uint64_t v43 = SearchResult;
        goto LABEL_41;
      }
    }
    uint64_t v37 = v61;
    int v38 = *((_DWORD *)v62 + v36);
    uint64_t v39 = a2 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80));
    swift_bridgeObjectRetain_n();
    uint64_t v40 = *(void *)(v37 + 72);
    while (1)
    {
      sub_1001541B4(v39, (uint64_t)v13, type metadata accessor for TaskHistory.Previous);
      sub_1001541B4((uint64_t)v13, (uint64_t)v11, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1) {
        break;
      }
      sub_1001540D0((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
LABEL_29:
      sub_1001540D0((uint64_t)v13, type metadata accessor for TaskHistory.Previous);
      v39 += v40;
      if (!--v35)
      {
        a2 = v60;
        swift_bridgeObjectRelease_n();
        uint64_t v35 = v58;
        goto LABEL_25;
      }
    }
    int v41 = *((_DWORD *)v11 + 2);
    sub_10007C4A4(*(void *)v11);
    if (v41 != v38) {
      goto LABEL_29;
    }
    sub_1001540D0((uint64_t)v13, type metadata accessor for TaskHistory.Previous);
    swift_bridgeObjectRelease_n();
    a2 = v60;
    swift_bridgeObjectRelease_n();
    uint64_t v25 = v56;
    sub_1001540D0((uint64_t)v56, type metadata accessor for FetchSearchResultMessages.Requests.Search);
    uint64_t v24 = v59;
  }
  while (v59 != v50);
  swift_bridgeObjectRelease();
LABEL_34:
  uint64_t v42 = 1;
  uint64_t v43 = SearchResult;
  uint64_t v44 = v54;
LABEL_41:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v44, v42, 1, v43);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100150A4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_10000566C(&qword_10070D810);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10000566C(&qword_10070A000);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v24[-v10];
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests(0);
  __chkstk_darwin(SearchResult - 8);
  uint64_t v14 = (uint64_t *)&v24[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  SearchResultuint64_t Messages = type metadata accessor for FetchSearchResultMessages(0);
  sub_1001541B4(v1 + *(int *)(SearchResultMessages + 48), (uint64_t)v14, type metadata accessor for FetchSearchResultMessages.Requests);
  sub_1000079E4(v1 + *(int *)(SearchResultMessages + 52), (uint64_t)v5, &qword_10070D810);
  uint64_t v16 = type metadata accessor for NewServerMessages();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v5, 1, v16) == 1)
  {
    sub_100007A48((uint64_t)v5, &qword_10070D810);
    uint64_t v17 = sub_10000566C(&qword_100709E30);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  }
  else
  {
    sub_1000079E4((uint64_t)&v5[*(int *)(v16 + 20)], (uint64_t)v11, &qword_100709E30);
    sub_1001540D0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    uint64_t v18 = sub_10000566C(&qword_100709E30);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 0, 1, v18);
  }
  sub_10014DC3C((uint64_t)v9);
  uint64_t v19 = sub_10000566C(&qword_100709E30);
  int v20 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v9, 1, v19);
  uint64_t v21 = sub_100007A48((uint64_t)v9, &qword_10070A000);
  uint64_t v22 = *v14;
  if (v20 == 1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    __chkstk_darwin(v21);
    *(void *)&v24[-16] = v14;
    *(void *)&v24[-8] = v11;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_10002B320((uint64_t (*)(char *))sub_1001591EC, (uint64_t)&v24[-32], v22);
  }
  *a1 = v22;
  sub_100007A48((uint64_t)v11, &qword_10070A000);
  return sub_1001540D0((uint64_t)v14, type metadata accessor for FetchSearchResultMessages.Requests);
}

uint64_t sub_100150DD4(long long *a1, void *a2)
{
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests.Search(0);
  uint64_t v6 = *(void *)(SearchResult - 8);
  __chkstk_darwin(SearchResult - 8);
  uint64_t v8 = (unsigned int *)((char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10000566C(&qword_100709E38);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v46 = (uint64_t *)((char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v42 - v12;
  sub_100150A4C((uint64_t *)&v48);
  *(void *)&v62[0] = &_swiftEmptySetSingleton;
  uint64_t v14 = *(void *)(v48 + 16);
  if (v14)
  {
    uint64_t v45 = a2;
    uint64_t v15 = v6;
    uint64_t v16 = v48 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v17 = *(void *)(v15 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1001541B4(v16, (uint64_t)v8, type metadata accessor for FetchSearchResultMessages.Requests.Search);
      sub_100019B30(&v65, *v8);
      sub_1001540D0((uint64_t)v8, type metadata accessor for FetchSearchResultMessages.Requests.Search);
      v16 += v17;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease_n();
    uint64_t v18 = *(void **)&v62[0];
    a2 = v45;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = &_swiftEmptySetSingleton;
  }
  uint64_t v19 = *(void *)(v2 + 16);
  uint64_t v20 = *(void *)(v2 + 24);
  sub_100044C88((uint64_t)v18, v19, v20);
  swift_bridgeObjectRelease();
  sub_1001511C0((uint64_t)v13);
  uint64_t v21 = (uint64_t)v46;
  sub_100151480((uint64_t)v46);
  sub_100044AC4(v19, v20, (uint64_t)v13, v21);
  sub_100007A48(v21, &qword_100709E38);
  uint64_t v22 = sub_100007A48((uint64_t)v13, &qword_100709E38);
  uint64_t v46 = &v42;
  uint64_t v45 = *(void **)(v2 + 40);
  unsigned int v44 = *(_DWORD *)(v2 + 48);
  __chkstk_darwin(v22);
  uint64_t v43 = &v42 - 4;
  long long v23 = a1[13];
  long long v60 = a1[12];
  v61[0] = v23;
  long long v24 = a1[15];
  v61[1] = a1[14];
  v61[2] = v24;
  long long v25 = a1[9];
  long long v56 = a1[8];
  long long v57 = v25;
  long long v26 = a1[11];
  long long v58 = a1[10];
  long long v59 = v26;
  long long v27 = a1[5];
  long long v52 = a1[4];
  long long v53 = v27;
  long long v28 = a1[7];
  long long v54 = a1[6];
  long long v55 = v28;
  long long v29 = a1[1];
  long long v48 = *a1;
  long long v49 = v29;
  long long v30 = a1[3];
  long long v50 = a1[2];
  long long v51 = v30;
  long long v31 = v58;
  v62[1] = v59;
  v62[2] = v60;
  v63[0] = v61[0];
  *(_OWORD *)((char *)v63 + 12) = *(_OWORD *)((char *)v61 + 12);
  *(&v42 - 2) = v2;
  *(&v42 - 1) = (uint64_t)a2;
  v62[0] = v31;
  sub_100055A48(v62, v64);
  LOBYTE(v19) = BYTE1(v49);
  uint64_t v32 = *((void *)&v49 + 1);
  char v33 = BYTE10(v48);
  uint64_t v34 = *((void *)&v50 + 1);
  uint64_t v35 = v51;
  char v36 = v50;
  char v37 = v49;
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_1000D8938();
  unint64_t v39 = sub_1000D8D74(v37, v19 & 1, v32, v36, v34, v33, v35, v38);
  uint64_t result = (uint64_t)sub_100055A48(v64, &v65);
  if (v66 == 1)
  {
    unint64_t v47 = v65;
    sub_100149CC0((uint64_t)v64);
    sub_1000498B8(&v47, v45, v44, 0, (void (*)(char *, unint64_t))sub_100158B44, (uint64_t)v43, v39 & 0x101010101FFFF01);
    uint64_t result = sub_100149CF4((uint64_t)v64);
    unint64_t v41 = v47;
    *((void *)a1 + 21) = 0;
    *((void *)a1 + 22) = 0;
    *((void *)a1 + 20) = v41;
    *((unsigned char *)a1 + 184) = 1;
  }
  return result;
}

uint64_t sub_1001511C0@<X0>(uint64_t a1@<X8>)
{
  v23[1] = a1;
  uint64_t v2 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_10070D810);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_100709E38);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)v23 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v23 - v15;
  SearchResultuint64_t Messages = type metadata accessor for FetchSearchResultMessages(0);
  uint64_t v18 = v1 + *(int *)(SearchResultMessages + 48);
  uint64_t v19 = *(int *)(type metadata accessor for FetchSearchResultMessages.Requests(0) + 20);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  sub_1000079E4(v18 + v19 + *(int *)(MessagesVMa + 20), (uint64_t)v16, &qword_100709E38);
  sub_1000079E4(v1 + *(int *)(SearchResultMessages + 52), (uint64_t)v7, &qword_10070D810);
  uint64_t v21 = type metadata accessor for NewServerMessages();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v7, 1, v21) == 1)
  {
    sub_100007A48((uint64_t)v7, &qword_10070D810);
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    sub_1000079E4((uint64_t)&v7[*(int *)(v21 + 20)], (uint64_t)v4, &qword_100709E30);
    sub_1001540D0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    sub_10001FDF0((uint64_t)v4, (uint64_t)v11, &qword_100709E38);
    sub_10001FDF0((uint64_t)v11, (uint64_t)v14, &qword_100709E38);
  }
  MessageIdentifierSet.union(_:)();
  sub_100007A48((uint64_t)v14, &qword_100709E38);
  return sub_100007A48((uint64_t)v16, &qword_100709E38);
}

uint64_t sub_100151480@<X0>(uint64_t a1@<X8>)
{
  v21[1] = a1;
  uint64_t v2 = sub_10000566C(&qword_10070A2D0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v21 - v6;
  uint64_t v8 = sub_10000566C(&qword_100709E38);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v21 - v13;
  uint64_t v15 = v1 + *(int *)(type metadata accessor for FetchSearchResultMessages(0) + 48);
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests(0);
  uint64_t v17 = *(int *)(SearchResult + 20);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  sub_1000079E4(v15 + v17 + *(int *)(MessagesVMa + 24), (uint64_t)v7, &qword_10070A2D0);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v19(v7, 1, v8) == 1)
  {
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
    sub_100007A48((uint64_t)v7, &qword_10070A2D0);
  }
  else
  {
    sub_10001FDF0((uint64_t)v7, (uint64_t)v14, &qword_100709E38);
  }
  sub_1000079E4(v15 + *(int *)(SearchResult + 28), (uint64_t)v5, &qword_10070A2D0);
  if (v19(v5, 1, v8) == 1)
  {
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
    sub_100007A48((uint64_t)v5, &qword_10070A2D0);
  }
  else
  {
    sub_10001FDF0((uint64_t)v5, (uint64_t)v12, &qword_100709E38);
  }
  MessageIdentifierSet.union(_:)();
  sub_100007A48((uint64_t)v12, &qword_100709E38);
  return sub_100007A48((uint64_t)v14, &qword_100709E38);
}

uint64_t sub_100151710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10000566C(&qword_10070D810);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  SearchResultuint64_t Messages = type metadata accessor for FetchSearchResultMessages(0);
  sub_1000079E4(a3 + *(int *)(SearchResultMessages + 52), (uint64_t)v10, &qword_10070D810);
  uint64_t v15 = type metadata accessor for NewServerMessages();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v10, 1, v15) == 1)
  {
    sub_100007A48((uint64_t)v10, &qword_10070D810);
    uint64_t v16 = sub_10000566C(&qword_100709E30);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 1, 1, v16);
  }
  else
  {
    sub_1000079E4((uint64_t)&v10[*(int *)(v15 + 20)], (uint64_t)v13, &qword_100709E30);
    sub_1001540D0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    uint64_t v17 = sub_10000566C(&qword_100709E30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v13, 0, 1, v17);
  }
  sub_10014ACB0(a1, a2 & 0x101010101FFFF01, (uint64_t)v13, (uint64_t *)(a3 + *(int *)(SearchResultMessages + 28)), a4);
  return sub_100007A48((uint64_t)v13, &qword_10070A000);
}

uint64_t sub_10015194C()
{
  if (qword_100709D90 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

const mach_header_64 *sub_1001519B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, const mach_header_64 **a5@<X8>)
{
  uint64_t result = sub_10014EC84(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  return result;
}

uint64_t sub_1001519D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100158B58(a1, a2, a3, a4, a6, a7);
}

uint64_t sub_1001519E4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100158D7C(a1, a2, a3, a5);
}

uint64_t sub_1001519F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_10000566C(&qword_10070A2D0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v19 - v12;
  if (*(unsigned char *)(a1 + 4) == 1 && !*(_DWORD *)a1)
  {
    uint64_t v14 = v4 + *(int *)(a4 + 48);
    uint64_t v15 = v14 + *(int *)(type metadata accessor for FetchSearchResultMessages.Requests(0) + 28);
    sub_1000079E4(v15, (uint64_t)v13, &qword_10070A2D0);
    uint64_t v16 = sub_10000566C(&qword_100709E38);
    uint64_t v17 = *(void *)(v16 - 8);
    int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16);
    uint64_t result = sub_100007A48((uint64_t)v13, &qword_10070A2D0);
    if (v18 == 1)
    {
      sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v16);
      return sub_10015421C((uint64_t)v10, v15);
    }
  }
  return result;
}

unint64_t sub_100151B98()
{
  return 0xD000000000000019;
}

BOOL sub_100151BB8(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  return *a1 == *a2 && sub_1001D85A4((uint64_t)a1 + *(int *)(a3 + 20), (uint64_t)a2 + *(int *)(a3 + 20));
}

uint64_t sub_100151BE0@<X0>(int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v4 = _s19UserInitiatedSearchV5StateOMa(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  __chkstk_darwin(MessagesVMa - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s19UserInitiatedSearchVMa(0);
  sub_1001541B4((uint64_t)a1 + *(int *)(v10 + 20), (uint64_t)v6, _s19UserInitiatedSearchV5StateOMa);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100154068((uint64_t)v6, (uint64_t)v9, _s19UserInitiatedSearchV13FetchMessagesVMa);
    int v11 = *a1;
    uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests.Search(0);
    sub_100154068((uint64_t)v9, (uint64_t)a2 + *(int *)(SearchResult + 20), _s19UserInitiatedSearchV13FetchMessagesVMa);
    *a2 = v11;
    return (*(uint64_t (**)(_DWORD *, void, uint64_t, uint64_t))(*(void *)(SearchResult - 8) + 56))(a2, 0, 1, SearchResult);
  }
  else
  {
    sub_1001540D0((uint64_t)v6, _s19UserInitiatedSearchV5StateOMa);
    uint64_t v14 = type metadata accessor for FetchSearchResultMessages.Requests.Search(0);
    return (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

uint64_t sub_100151DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests.Search(0);
  return sub_1001541B4(a1 + *(int *)(SearchResult + 20), a2, _s19UserInitiatedSearchV13FetchMessagesVMa);
}

uint64_t sub_100151E10@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v140 = a2;
  uint64_t v3 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v3 - 8);
  uint64_t v137 = (uint64_t)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_10000566C(&qword_100709E60);
  uint64_t v175 = *(char **)(v145 - 8);
  __chkstk_darwin(v145);
  uint64_t v144 = (char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_10000566C(&qword_100709E30);
  uint64_t v135 = *(void *)(v136 - 8);
  uint64_t v6 = __chkstk_darwin(v136);
  uint64_t v134 = (uint64_t)&v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v133 = (uint64_t)&v130 - v9;
  __chkstk_darwin(v8);
  uint64_t v151 = (uint64_t)&v130 - v10;
  uint64_t v11 = sub_10000566C(&qword_100709E38);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v131 = (uint64_t)&v130 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v138 = (uint64_t)&v130 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v142 = (uint64_t)&v130 - v18;
  __chkstk_darwin(v17);
  uint64_t v139 = (uint64_t)&v130 - v19;
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  uint64_t v168 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(MessagesVMa - 8);
  __chkstk_darwin(MessagesVMa - 8);
  uint64_t v183 = (uint64_t)&v130 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = _s19UserInitiatedSearchVMa(0);
  uint64_t v159 = *(void *)(v179 - 8);
  __chkstk_darwin(v179);
  uint64_t v155 = (uint64_t)&v130 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10000566C(&qword_10070DA38);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  long long v25 = (char *)&v130 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  long long v27 = (char *)&v130 - v26;
  uint64_t v182 = sub_10000566C(&qword_10070DA48);
  uint64_t v184 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v182 - 8);
  uint64_t v28 = __chkstk_darwin(v182);
  uint64_t v149 = (uint64_t)&v130 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v154 = (uint64_t)&v130 - v30;
  uint64_t v31 = sub_10000566C(&qword_10070DA40);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v170 = (uint64_t)&v130 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  char v36 = (char *)&v130 - v35;
  __chkstk_darwin(v34);
  uint64_t v178 = (char *)&v130 - v37;
  uint64_t v38 = sub_10000566C(&qword_10070DA50);
  __chkstk_darwin(v38 - 8);
  int64_t v169 = (char *)&v130 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10000566C(&qword_10070A2D0);
  uint64_t v41 = __chkstk_darwin(v40 - 8);
  uint64_t v132 = (uint64_t)&v130 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v147 = (uint64_t)&v130 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v146 = (uint64_t)&v130 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v166 = (uint64_t)&v130 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v165 = (uint64_t)&v130 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v141 = (uint64_t)&v130 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v164 = (uint64_t)&v130 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  long long v57 = (char *)&v130 - v56;
  uint64_t v58 = __chkstk_darwin(v55);
  long long v60 = (char *)&v130 - v59;
  __chkstk_darwin(v58);
  uint64_t v172 = (uint64_t)&v130 - v61;
  uint64_t v62 = *(void (**)(void))(v12 + 56);
  v62();
  uint64_t v174 = v60;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v62)(v60, 1, 1, v11);
  uint64_t v181 = v11;
  uint64_t v162 = v62;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v62)(v57, 1, 1, v11);
  uint64_t v63 = *a1;
  uint64_t v153 = (void (*)(uint64_t))a1[1];
  uint64_t v64 = a1[2];
  uint64_t v152 = (uint64_t (*)(uint64_t))a1[3];
  uint64_t v186 = v63;
  uint64_t v65 = a1[4];
  uint64_t v148 = (void (*)(uint64_t))a1[5];
  uint64_t v66 = a1[6];
  uint64_t v156 = v63;
  unint64_t v180 = *(void *)(v63 + 16);
  sub_10002292C((uint64_t)&v186);
  uint64_t v176 = (unsigned int (**)(char *, uint64_t, uint64_t))(v159 + 48);
  uint64_t v177 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v159 + 56);
  char v67 = v184;
  v184 += 6;
  uint64_t v185 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 7);
  uint64_t v173 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v168 + 7);
  v168 += 6;
  uint64_t v163 = v12 + 56;
  uint64_t v68 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  uint64_t v143 = (void (**)(char *, uint64_t, uint64_t))(v175 + 16);
  uint64_t v158 = v64;
  swift_retain();
  uint64_t v157 = v65;
  swift_retain();
  uint64_t v150 = v66;
  uint64_t result = swift_retain();
  unint64_t v70 = v180;
  unint64_t v71 = 0;
  uint64_t v167 = v57;
  uint64_t v175 = v36;
  uint64_t v161 = v27;
  unint64_t v160 = v25;
  while (1)
  {
    if (v71 == v70)
    {
      uint64_t v73 = 1;
      unint64_t v71 = v70;
      goto LABEL_9;
    }
    if (v71 >= *(void *)(v156 + 16)) {
      break;
    }
    sub_1001541B4(v156+ ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80))+ *(void *)(v159 + 72) * v71, (uint64_t)v27, _s19UserInitiatedSearchVMa);
    uint64_t v73 = 0;
    ++v71;
LABEL_9:
    uint64_t v74 = v179;
    (*v177)(v27, v73, 1, v179);
    sub_10001FDF0((uint64_t)v27, (uint64_t)v25, &qword_10070DA38);
    if ((*v176)(v25, 1, v74) == 1)
    {
      uint64_t v75 = *v185;
      uint64_t v76 = v36;
      uint64_t v77 = 1;
    }
    else
    {
      uint64_t v78 = v155;
      sub_100154068((uint64_t)v25, v155, _s19UserInitiatedSearchVMa);
      v153(v78);
      sub_1001540D0(v78, _s19UserInitiatedSearchVMa);
      uint64_t v75 = *v185;
      uint64_t v76 = v36;
      uint64_t v77 = 0;
    }
    uint64_t v79 = v182;
    v75(v76, v77, 1, v182);
    int v80 = *v184;
    if ((*v184)(v36, 1, v79) == 1)
    {
      sub_100007A48((uint64_t)v36, &qword_10070DA40);
      uint64_t v81 = 1;
    }
    else
    {
      uint64_t v82 = v154;
      sub_10001FDF0((uint64_t)v36, v154, &qword_10070DA48);
      if ((v152(v82) & 1) == 0)
      {
        uint64_t result = sub_100007A48(v82, &qword_10070DA48);
        goto LABEL_4;
      }
      sub_10001FDF0(v82, (uint64_t)v178, &qword_10070DA48);
      uint64_t v81 = 0;
      uint64_t v79 = v182;
    }
    uint64_t v83 = (uint64_t)v178;
    v75(v178, v81, 1, v79);
    uint64_t v84 = v170;
    sub_10001FDF0(v83, v170, &qword_10070DA40);
    if (v80((char *)v84, 1, v79) == 1)
    {
      uint64_t v85 = *v173;
      uint64_t v86 = (uint64_t)v169;
      unint64_t v87 = v169;
      uint64_t v88 = 1;
    }
    else
    {
      uint64_t v89 = v84;
      uint64_t v90 = v149;
      sub_10001FDF0(v89, v149, &qword_10070DA48);
      uint64_t v86 = (uint64_t)v169;
      v148(v90);
      sub_100007A48(v90, &qword_10070DA48);
      uint64_t v85 = *v173;
      unint64_t v87 = (char *)v86;
      uint64_t v88 = 0;
    }
    uint64_t v91 = MessagesVMa;
    v85(v87, v88, 1, MessagesVMa);
    uint64_t v92 = v181;
    if ((*v168)(v86, 1, v91) == 1)
    {
      sub_10001D550((uint64_t)&v186);
      swift_release();
      swift_release();
      swift_release();
      uint64_t v112 = v141;
      sub_1000079E4(v172, v141, &qword_10070A2D0);
      uint64_t v113 = *v68;
      if ((*v68)(v112, 1, v92) == 1)
      {
        sub_10001D550((uint64_t)&v186);
        swift_release();
        swift_release();
        swift_release();
        sub_100007A48(v112, &qword_10070A2D0);
        uint64_t v114 = 1;
        uint64_t v115 = v140;
        uint64_t v116 = (uint64_t)v174;
        goto LABEL_37;
      }
      uint64_t v118 = v139;
      sub_10001FDF0(v112, v139, &qword_100709E38);
      uint64_t v119 = v138;
      sub_1000079E4(v118, v138, &qword_100709E38);
      MessageIdentifierSet.count.getter();
      if (v120 <= 0)
      {
        sub_100007A48(v119, &qword_100709E38);
        uint64_t v124 = 1;
        uint64_t v123 = v137;
      }
      else
      {
        uint64_t v121 = v134;
        sub_10001FDF0(v119, v134, &qword_100709E38);
        uint64_t v122 = v121;
        uint64_t v123 = v137;
        sub_10001FDF0(v122, v137, &qword_100709E30);
        uint64_t v124 = 0;
      }
      uint64_t v125 = v136;
      uint64_t v126 = v135;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56))(v123, v124, 1, v136);
      sub_10001D550((uint64_t)&v186);
      swift_release();
      swift_release();
      swift_release();
      sub_100007A48(v118, &qword_100709E38);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v123, 1, v125) == 1)
      {
        sub_100007A48(v123, &qword_10070A000);
        uint64_t v114 = 1;
        uint64_t v115 = v140;
        uint64_t v117 = (uint64_t)v167;
        uint64_t v116 = (uint64_t)v174;
      }
      else
      {
        uint64_t v127 = v133;
        sub_10001FDF0(v123, v133, &qword_100709E30);
        uint64_t v116 = (uint64_t)v174;
        uint64_t v128 = v132;
        sub_1000079E4((uint64_t)v174, v132, &qword_10070A2D0);
        if (v113(v128, 1, v181) == 1)
        {
          sub_100007A48(v127, &qword_100709E30);
          sub_100007A48(v128, &qword_10070A2D0);
          uint64_t v114 = 1;
          uint64_t v115 = v140;
LABEL_37:
          uint64_t v117 = (uint64_t)v167;
        }
        else
        {
          uint64_t v129 = v131;
          sub_10001FDF0(v128, v131, &qword_100709E38);
          uint64_t v115 = v140;
          sub_10001FDF0(v127, v140, &qword_100709E30);
          sub_10001FDF0(v129, v115 + *(int *)(v91 + 20), &qword_100709E38);
          uint64_t v117 = (uint64_t)v167;
          sub_1000079E4((uint64_t)v167, v115 + *(int *)(v91 + 24), &qword_10070A2D0);
          uint64_t v114 = 0;
        }
      }
      sub_100007A48(v117, &qword_10070A2D0);
      sub_100007A48(v116, &qword_10070A2D0);
      sub_100007A48(v172, &qword_10070A2D0);
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v85)(v115, v114, 1, v91);
    }
    uint64_t v93 = v183;
    sub_100154068(v86, v183, _s19UserInitiatedSearchV13FetchMessagesVMa);
    uint64_t v94 = v172;
    uint64_t v95 = v164;
    sub_1000079E4(v172, v164, &qword_10070A2D0);
    uint64_t v96 = *v68;
    uint64_t v97 = v92;
    unsigned int v98 = (*v68)(v95, 1, v92);
    sub_100007A48(v95, &qword_10070A2D0);
    if (v98 == 1)
    {
      sub_100007A48(v94, &qword_10070A2D0);
      uint64_t v99 = v151;
      sub_1000079E4(v93, v151, &qword_100709E30);
      sub_10001FDF0(v99, v94, &qword_100709E38);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v162)(v94, 0, 1, v97);
    }
    else if (!v96(v94, 1, v97))
    {
      uint64_t v100 = v151;
      sub_1000079E4(v183, v151, &qword_100709E30);
      (*v143)(v144, v100, v145);
      sub_1005E3670();
      uint64_t v97 = v181;
      sub_100007A48(v100, &qword_100709E38);
    }
    uint64_t v101 = (uint64_t)v174;
    uint64_t v102 = v165;
    sub_1000079E4((uint64_t)v174, v165, &qword_10070A2D0);
    unsigned int v103 = v96(v102, 1, v97);
    sub_100007A48(v102, &qword_10070A2D0);
    if (v103 == 1)
    {
      sub_100007A48(v101, &qword_10070A2D0);
      uint64_t v104 = v183;
      sub_1000079E4(v183 + *(int *)(v91 + 20), v101, &qword_100709E38);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v162)(v101, 0, 1, v97);
      uint64_t v105 = (uint64_t)v167;
    }
    else
    {
      unsigned int v106 = v96(v101, 1, v97);
      uint64_t v104 = v183;
      uint64_t v105 = (uint64_t)v167;
      if (!v106)
      {
        (*v143)(v144, v183 + *(int *)(v91 + 20), v145);
        sub_1005E3670();
        uint64_t v97 = v181;
      }
    }
    uint64_t v107 = v166;
    sub_1000079E4(v105, v166, &qword_10070A2D0);
    unsigned int v108 = v96(v107, 1, v97);
    sub_100007A48(v107, &qword_10070A2D0);
    uint64_t v109 = v104 + *(int *)(v91 + 24);
    if (v108 == 1)
    {
      uint64_t v72 = v147;
      sub_1000079E4(v109, v147, &qword_10070A2D0);
      sub_1001540D0(v104, _s19UserInitiatedSearchV13FetchMessagesVMa);
      uint64_t result = sub_10015421C(v72, v105);
    }
    else
    {
      uint64_t v110 = v146;
      sub_1000079E4(v109, v146, &qword_10070A2D0);
      if (v96(v110, 1, v97) == 1)
      {
        sub_1001540D0(v104, _s19UserInitiatedSearchV13FetchMessagesVMa);
        uint64_t result = sub_100007A48(v110, &qword_10070A2D0);
      }
      else
      {
        uint64_t v111 = v142;
        sub_10001FDF0(v110, v142, &qword_100709E38);
        if (!v96(v105, 1, v97))
        {
          (*v143)(v144, v111, v145);
          sub_1005E3670();
        }
        sub_100007A48(v111, &qword_100709E38);
        uint64_t result = sub_1001540D0(v104, _s19UserInitiatedSearchV13FetchMessagesVMa);
      }
    }
    long long v25 = v160;
    long long v27 = v161;
LABEL_4:
    char v36 = v175;
    unint64_t v70 = v180;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001531D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_10070A2D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000566C(&qword_100709E38);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  __chkstk_darwin(MessagesVMa - 8);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests.Search(0);
  sub_1001541B4(a1 + *(int *)(SearchResult + 20), (uint64_t)v15, _s19UserInitiatedSearchV13FetchMessagesVMa);
  uint64_t v17 = type metadata accessor for FetchSearchResultMessages.Requests(0);
  sub_1000079E4(a2 + *(int *)(v17 + 28), (uint64_t)v8, &qword_10070A2D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
    sub_100007A48((uint64_t)v8, &qword_10070A2D0);
  }
  else
  {
    sub_10001FDF0((uint64_t)v8, (uint64_t)v12, &qword_100709E38);
  }
  char v18 = sub_100153434((uint64_t)v12, a3, *(void *)(a2 + *(int *)(v17 + 24)), *(unsigned __int8 *)(a2 + *(int *)(v17 + 24) + 8));
  sub_100007A48((uint64_t)v12, &qword_100709E38);
  sub_1001540D0((uint64_t)v15, _s19UserInitiatedSearchV13FetchMessagesVMa);
  return v18 & 1;
}

uint64_t sub_100153434(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v65 = a4;
  uint64_t v54 = a3;
  uint64_t v56 = a2;
  uint64_t v64 = a1;
  uint64_t v5 = sub_10000566C(&qword_10070A2D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v62 = (uint64_t)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10000566C(&qword_100709E30);
  uint64_t v10 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000566C(&qword_100709E38);
  uint64_t v57 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v53 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v63 = (char *)&v51 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v58 = (uint64_t)&v51 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v52 = (uint64_t)&v51 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v51 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  long long v27 = (char *)&v51 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v30 = (char *)&v51 - v29;
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v33 = (char *)&v51 - v32;
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v59 = (char *)&v51 - v35;
  __chkstk_darwin(v34);
  uint64_t v61 = (char *)&v51 - v36;
  sub_1000079E4(v4, (uint64_t)v12, &qword_100709E30);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  uint64_t v38 = *(int *)(MessagesVMa + 20);
  uint64_t v60 = v4;
  MessageIdentifierSet.subtracting(_:)(v4 + v38, v13);
  sub_100007A48((uint64_t)v12, &qword_100709E38);
  sub_1000079E4(v56, (uint64_t)v9, &qword_10070A000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v55) == 1)
  {
    sub_100007A48((uint64_t)v9, &qword_10070A000);
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    uint64_t v39 = v52;
    sub_1000079E4((uint64_t)v9, v52, &qword_100709E38);
    sub_100007A48((uint64_t)v9, &qword_100709E30);
    sub_10001FDF0(v39, (uint64_t)v24, &qword_100709E38);
  }
  MessageIdentifierSet.subtracting(_:)((uint64_t)v24, v13);
  sub_100007A48((uint64_t)v24, &qword_100709E38);
  sub_100007A48((uint64_t)v27, &qword_100709E38);
  uint64_t v40 = v60 + *(int *)(MessagesVMa + 24);
  uint64_t v41 = v62;
  sub_1000079E4(v40, v62, &qword_10070A2D0);
  int v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v41, 1, v13);
  uint64_t v43 = (uint64_t)v63;
  uint64_t v44 = (uint64_t)v59;
  uint64_t v45 = v58;
  if (v42 == 1)
  {
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
    sub_100007A48(v41, &qword_10070A2D0);
  }
  else
  {
    sub_10001FDF0(v41, v58, &qword_100709E38);
  }
  MessageIdentifierSet.subtracting(_:)(v45, v13);
  sub_100007A48(v45, &qword_100709E38);
  sub_100007A48((uint64_t)v30, &qword_100709E38);
  MessageIdentifierSet.subtracting(_:)(v64, v13);
  sub_100007A48((uint64_t)v33, &qword_100709E38);
  if (v65)
  {
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    uint64_t v66 = v54;
    sub_100063E18();
    Range<>.init<A>(_:)((uint64_t)&v66, (uint64_t)&type metadata for UID);
    uint64_t v66 = v46;
    sub_10001FC6C();
    uint64_t v47 = (uint64_t)v53;
    sub_1005E36A0();
    sub_10001FDF0(v47, v43, &qword_100709E38);
  }
  uint64_t v48 = (uint64_t)v61;
  MessageIdentifierSet.subtracting(_:)(v43, v13);
  sub_100007A48(v43, &qword_100709E38);
  sub_100007A48(v44, &qword_100709E38);
  sub_10000566C(&qword_100709E60);
  char v49 = sub_1005E3630();
  sub_100007A48(v48, &qword_100709E38);
  return v49 & 1;
}

BOOL sub_100153A1C(uint64_t a1)
{
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests.Search(0);
  return (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(SearchResult - 8) + 48))(a1, 1, SearchResult) != 1;
}

uint64_t sub_100153A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000566C(&qword_10070DA48);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000079E4(a1, (uint64_t)v6, &qword_10070DA48);
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests.Search(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(SearchResult - 8) + 48))(v6, 1, SearchResult);
  if (result != 1) {
    return sub_100154068((uint64_t)v6, a2, type metadata accessor for FetchSearchResultMessages.Requests.Search);
  }
  __break(1u);
  return result;
}

uint64_t sub_100153B74(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests.Search(0);
  __chkstk_darwin(SearchResult - 8);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(a4 + 40))(a1);
  a2(v9);
  return sub_1001540D0((uint64_t)v9, type metadata accessor for FetchSearchResultMessages.Requests.Search);
}

BOOL sub_100153C48(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_10070B2A8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000566C(&qword_10070A2D0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v29 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v29 - v18;
  if ((sub_100079308(*a1, *a2) & 1) == 0) {
    return 0;
  }
  uint64_t v30 = v5;
  uint64_t SearchResult = (int *)type metadata accessor for FetchSearchResultMessages.Requests(0);
  if (!sub_1001D85A4((uint64_t)a1 + SearchResult[5], (uint64_t)a2 + SearchResult[5])) {
    return 0;
  }
  uint64_t v21 = SearchResult[6];
  uint64_t v22 = (uint64_t *)((char *)a1 + v21);
  char v23 = *((unsigned char *)a1 + v21 + 8);
  uint64_t v24 = (char *)a2 + v21;
  if (v23)
  {
    if (!v24[8]) {
      return 0;
    }
  }
  else if ((v24[8] & 1) != 0 || !static FetchedWindow.__derived_struct_equals(_:_:)(*v22, *(void *)v24))
  {
    return 0;
  }
  sub_1000079E4((uint64_t)a1 + SearchResult[7], (uint64_t)v19, &qword_10070A2D0);
  sub_1000079E4((uint64_t)a2 + SearchResult[7], (uint64_t)v17, &qword_10070A2D0);
  uint64_t v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1000079E4((uint64_t)v19, (uint64_t)v10, &qword_10070A2D0);
  sub_1000079E4((uint64_t)v17, v25, &qword_10070A2D0);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  if (v26((uint64_t)v10, 1, v4) == 1)
  {
    sub_100007A48((uint64_t)v17, &qword_10070A2D0);
    sub_100007A48((uint64_t)v19, &qword_10070A2D0);
    if (v26(v25, 1, v4) == 1)
    {
      sub_100007A48((uint64_t)v10, &qword_10070A2D0);
      return 1;
    }
    goto LABEL_13;
  }
  sub_1000079E4((uint64_t)v10, (uint64_t)v14, &qword_10070A2D0);
  if (v26(v25, 1, v4) == 1)
  {
    sub_100007A48((uint64_t)v17, &qword_10070A2D0);
    sub_100007A48((uint64_t)v19, &qword_10070A2D0);
    sub_100007A48((uint64_t)v14, &qword_100709E38);
LABEL_13:
    sub_100007A48((uint64_t)v10, &qword_10070B2A8);
    return 0;
  }
  sub_10001FDF0(v25, (uint64_t)v7, &qword_100709E38);
  sub_10001FC6C();
  char v27 = sub_1005E35A0();
  sub_100007A48((uint64_t)v7, &qword_100709E38);
  sub_100007A48((uint64_t)v17, &qword_10070A2D0);
  sub_100007A48((uint64_t)v19, &qword_10070A2D0);
  sub_100007A48((uint64_t)v14, &qword_100709E38);
  sub_100007A48((uint64_t)v10, &qword_10070A2D0);
  return (v27 & 1) != 0;
}

uint64_t type metadata accessor for FetchSearchResultMessages.Requests(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070DB40);
}

uint64_t type metadata accessor for FetchSearchResultMessages(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070DBD8);
}

uint64_t sub_100154068(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001540D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for FetchSearchResultMessages.Requests.Search(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070DAB0);
}

uint64_t sub_100154150()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1001541A8(uint64_t a1)
{
  return sub_100153B74(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), v1 + 32);
}

uint64_t sub_1001541B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10015421C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070A2D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100154284(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_10000566C(&qword_100709E60);
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
    v9(v6, v7, v8);
    uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
    v9(&v6[*(int *)(MessagesVMa + 20)], &v7[*(int *)(MessagesVMa + 20)], v8);
    uint64_t v11 = *(int *)(MessagesVMa + 24);
    uint64_t v12 = &v6[v11];
    uint64_t v13 = &v7[v11];
    uint64_t v14 = sub_10000566C(&qword_100709E38);
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_10000566C(&qword_10070A2D0);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v9(v12, v13, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  return v3;
}

uint64_t sub_100154464(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_10000566C(&qword_100709E60);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v3 - 8), v2, v3);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  v8(v2 + *(int *)(MessagesVMa + 20), v3);
  uint64_t v5 = v2 + *(int *)(MessagesVMa + 24);
  uint64_t v6 = sub_10000566C(&qword_100709E38);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v5, v3);
  }
  return result;
}

_DWORD *sub_10015458C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10000566C(&qword_100709E60);
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  v8(v5, v6, v7);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  v8(&v5[*(int *)(MessagesVMa + 20)], &v6[*(int *)(MessagesVMa + 20)], v7);
  uint64_t v10 = *(int *)(MessagesVMa + 24);
  uint64_t v11 = &v5[v10];
  uint64_t v12 = &v6[v10];
  uint64_t v13 = sub_10000566C(&qword_100709E38);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_10000566C(&qword_10070A2D0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v8(v11, v12, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

_DWORD *sub_10015471C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (char *)a1 + v3;
  uint64_t v5 = (char *)a2 + v3;
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v19 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(v19 + 24);
  v7(v4, v5, v6);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  v7(&v4[*(int *)(MessagesVMa + 20)], &v5[*(int *)(MessagesVMa + 20)], v6);
  uint64_t v9 = *(int *)(MessagesVMa + 24);
  uint64_t v10 = &v4[v9];
  uint64_t v11 = &v5[v9];
  uint64_t v12 = sub_10000566C(&qword_100709E38);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      v7(v10, v11, v6);
      return a1;
    }
    sub_100007A48((uint64_t)v10, &qword_100709E38);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_10000566C(&qword_10070A2D0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

_DWORD *sub_10015492C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10000566C(&qword_100709E60);
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
  v8(v5, v6, v7);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  v8(&v5[*(int *)(MessagesVMa + 20)], &v6[*(int *)(MessagesVMa + 20)], v7);
  uint64_t v10 = *(int *)(MessagesVMa + 24);
  uint64_t v11 = &v5[v10];
  uint64_t v12 = &v6[v10];
  uint64_t v13 = sub_10000566C(&qword_100709E38);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_10000566C(&qword_10070A2D0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v8(v11, v12, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

_DWORD *sub_100154ABC(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (char *)a1 + v3;
  uint64_t v5 = (char *)a2 + v3;
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v19 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(v19 + 40);
  v7(v4, v5, v6);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  v7(&v4[*(int *)(MessagesVMa + 20)], &v5[*(int *)(MessagesVMa + 20)], v6);
  uint64_t v9 = *(int *)(MessagesVMa + 24);
  uint64_t v10 = &v4[v9];
  uint64_t v11 = &v5[v9];
  uint64_t v12 = sub_10000566C(&qword_100709E38);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      v7(v10, v11, v6);
      return a1;
    }
    sub_100007A48((uint64_t)v10, &qword_100709E38);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_10000566C(&qword_10070A2D0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_100154CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100154CE0);
}

uint64_t sub_100154CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(MessagesVMa - 8) + 48);
  return v6(v4, a2, MessagesVMa);
}

uint64_t sub_100154D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100154D64);
}

uint64_t sub_100154D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(MessagesVMa - 8) + 56);
  return v7(v5, a2, a2, MessagesVMa);
}

uint64_t sub_100154DD8()
{
  uint64_t result = _s19UserInitiatedSearchV13FetchMessagesVMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100154E74(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_10000566C(&qword_100709E60);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
    v12(&v9[*(int *)(MessagesVMa + 20)], &v10[*(int *)(MessagesVMa + 20)], v11);
    uint64_t v14 = *(int *)(MessagesVMa + 24);
    __dst = &v9[v14];
    int v15 = &v10[v14];
    uint64_t v16 = sub_10000566C(&qword_100709E38);
    uint64_t v17 = *(void *)(v16 - 8);
    char v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    if (v27(v15, 1, v16))
    {
      uint64_t v18 = sub_10000566C(&qword_10070A2D0);
      memcpy(__dst, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v12(__dst, v15, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    uint64_t v19 = a3[6];
    uint64_t v20 = a3[7];
    uint64_t v21 = (char *)a1 + v19;
    uint64_t v22 = (char *)a2 + v19;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    char v23 = (char *)a1 + v20;
    uint64_t v24 = (char *)a2 + v20;
    if (v27(v24, 1, v16))
    {
      uint64_t v25 = sub_10000566C(&qword_10070A2D0);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      v12(v23, v24, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v23, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t sub_100155120(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_10000566C(&qword_100709E60);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v12)((void *)(v5 - 8), v4, v5);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  v12(v4 + *(int *)(MessagesVMa + 20), v5);
  uint64_t v7 = v4 + *(int *)(MessagesVMa + 24);
  uint64_t v8 = sub_10000566C(&qword_100709E38);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8)) {
    v12(v7, v5);
  }
  uint64_t v10 = a1 + *(int *)(a2 + 28);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v10, 1, v8);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v10, v5);
  }
  return result;
}

void *sub_1001552B0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_10000566C(&qword_100709E60);
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  v8(v5, v6, v7);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  v8(&v5[*(int *)(MessagesVMa + 20)], &v6[*(int *)(MessagesVMa + 20)], v7);
  uint64_t v10 = *(int *)(MessagesVMa + 24);
  __dst = &v5[v10];
  uint64_t v11 = &v6[v10];
  uint64_t v12 = sub_10000566C(&qword_100709E38);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = sub_10000566C(&qword_10070A2D0);
    memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v8(__dst, v11, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  uint64_t v16 = v8;
  uint64_t v17 = a3[6];
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v17;
  uint64_t v20 = (char *)a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  uint64_t v21 = (char *)a1 + v18;
  uint64_t v22 = (char *)a2 + v18;
  if (v14(v22, 1, v12))
  {
    uint64_t v23 = sub_10000566C(&qword_10070A2D0);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v16(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
  }
  return a1;
}

char *sub_100155524(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  uint64_t v32 = *(void *)(v9 - 8);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v32 + 24);
  v10(v7, v8, v9);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  uint64_t v33 = v9;
  uint64_t v30 = v10;
  v10(&v7[*(int *)(MessagesVMa + 20)], &v8[*(int *)(MessagesVMa + 20)], v9);
  uint64_t v12 = *(int *)(MessagesVMa + 24);
  uint64_t v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  uint64_t v15 = sub_10000566C(&qword_100709E38);
  uint64_t v31 = *(void *)(v15 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  LODWORD(v10) = v16(v13, 1, v15);
  int v17 = v16(v14, 1, v15);
  if (v10)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v13, v14, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_100007A48((uint64_t)v13, &qword_100709E38);
LABEL_6:
    uint64_t v18 = sub_10000566C(&qword_10070A2D0);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v30(v13, v14, v33);
LABEL_7:
  uint64_t v19 = a3[6];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  v20[8] = v21[8];
  *(void *)uint64_t v20 = v22;
  uint64_t v23 = a3[7];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = (char *)a2 + v23;
  int v26 = v16(&a1[v23], 1, v15);
  int v27 = v16(v25, 1, v15);
  if (!v26)
  {
    if (!v27)
    {
      v30(v24, v25, v33);
      return a1;
    }
    sub_100007A48((uint64_t)v24, &qword_100709E38);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    uint64_t v28 = sub_10000566C(&qword_10070A2D0);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v24, v25, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v24, 0, 1, v15);
  return a1;
}

void *sub_100155860(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10000566C(&qword_100709E60);
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
  v8(v5, v6, v7);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  v8(&v5[*(int *)(MessagesVMa + 20)], &v6[*(int *)(MessagesVMa + 20)], v7);
  uint64_t v10 = *(int *)(MessagesVMa + 24);
  __dst = &v5[v10];
  uint64_t v11 = &v6[v10];
  uint64_t v12 = sub_10000566C(&qword_100709E38);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = sub_10000566C(&qword_10070A2D0);
    memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v8(__dst, v11, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  uint64_t v16 = v8;
  uint64_t v17 = a3[6];
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v17;
  uint64_t v20 = (char *)a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  uint64_t v21 = (char *)a1 + v18;
  uint64_t v22 = (char *)a2 + v18;
  if (v14(v22, 1, v12))
  {
    uint64_t v23 = sub_10000566C(&qword_10070A2D0);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v16(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
  }
  return a1;
}

char *sub_100155ACC(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v31 + 40);
  v10(v7, v8, v9);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  uint64_t v32 = v9;
  uint64_t v29 = v10;
  v10(&v7[*(int *)(MessagesVMa + 20)], &v8[*(int *)(MessagesVMa + 20)], v9);
  uint64_t v12 = *(int *)(MessagesVMa + 24);
  uint64_t v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  uint64_t v15 = sub_10000566C(&qword_100709E38);
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  LODWORD(v10) = v16(v13, 1, v15);
  int v17 = v16(v14, 1, v15);
  if (v10)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v13, v14, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_100007A48((uint64_t)v13, &qword_100709E38);
LABEL_6:
    uint64_t v18 = sub_10000566C(&qword_10070A2D0);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v29(v13, v14, v32);
LABEL_7:
  uint64_t v19 = a3[6];
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v19];
  uint64_t v22 = (char *)a2 + v19;
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  uint64_t v23 = &a1[v20];
  uint64_t v24 = (char *)a2 + v20;
  int v25 = v16(&a1[v20], 1, v15);
  int v26 = v16(v24, 1, v15);
  if (!v25)
  {
    if (!v26)
    {
      v29(v23, v24, v32);
      return a1;
    }
    sub_100007A48((uint64_t)v23, &qword_100709E38);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v27 = sub_10000566C(&qword_10070A2D0);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v23, v24, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v23, 0, 1, v15);
  return a1;
}

uint64_t sub_100155DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100155E10);
}

uint64_t sub_100155E10(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
    uint64_t v9 = *(void *)(MessagesVMa - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = MessagesVMa;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000566C(&qword_10070A2D0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100155F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100155F54);
}

void *sub_100155F54(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
    uint64_t v9 = *(void *)(MessagesVMa - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = MessagesVMa;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000566C(&qword_10070A2D0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_100156084()
{
  _s19UserInitiatedSearchV13FetchMessagesVMa(319);
  if (v0 <= 0x3F)
  {
    sub_10011EFF0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100156164(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    *(void *)(a1 + 40) = a2[5];
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    uint64_t v9 = a3[7];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    *uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
    v10[1] = v12;
    uint64_t v13 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
    uint64_t v14 = (char *)v10 + v13;
    uint64_t v15 = (const void *)(v11 + v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_10000566C(&qword_100709E30);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_10000566C(&qword_10070A000);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v15, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = v7 + v20;
    uint64_t v22 = (uint64_t)a2 + v20;
    *(void *)uint64_t v21 = *(void *)v22;
    long long v23 = *(_OWORD *)(v22 + 32);
    *(_OWORD *)(v21 + 32) = v23;
    (**(void (***)(uint64_t, uint64_t))(v23 - 8))(v21 + 8, v22 + 8);
    uint64_t v24 = a3[9];
    uint64_t v25 = a3[10];
    uint64_t v26 = v7 + v24;
    uint64_t v27 = (uint64_t)a2 + v24;
    *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
    *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
    *(unsigned char *)(v7 + v25) = *((unsigned char *)a2 + v25);
    uint64_t v28 = a3[12];
    *(unsigned char *)(v7 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    uint64_t v29 = v7 + v28;
    uint64_t v30 = (uint64_t)a2 + v28;
    *(void *)(v7 + v28) = *(uint64_t *)((char *)a2 + v28);
    uint64_t SearchResult = (int *)type metadata accessor for FetchSearchResultMessages.Requests(0);
    uint64_t v70 = v29;
    uint64_t v31 = SearchResult[5];
    uint64_t v32 = v29 + v31;
    uint64_t v71 = v30;
    uint64_t v33 = v30 + v31;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_10000566C(&qword_100709E60);
    uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
    v35(v32, v33, v34);
    uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
    v35(v32 + *(int *)(MessagesVMa + 20), v33 + *(int *)(MessagesVMa + 20), v34);
    uint64_t v37 = *(int *)(MessagesVMa + 24);
    __dst = (void *)(v32 + v37);
    uint64_t v38 = (const void *)(v33 + v37);
    uint64_t v39 = sub_10000566C(&qword_100709E38);
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v41 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48);
    uint64_t v72 = v35;
    if (v41(v38, 1, v39))
    {
      uint64_t v42 = sub_10000566C(&qword_10070A2D0);
      memcpy(__dst, v38, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      v35((uint64_t)__dst, (uint64_t)v38, v34);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(__dst, 0, 1, v39);
    }
    uint64_t v43 = v34;
    uint64_t v44 = v40;
    uint64_t v45 = SearchResult[6];
    uint64_t v46 = v70 + v45;
    uint64_t v47 = v71 + v45;
    *(void *)uint64_t v46 = *(void *)v47;
    *(unsigned char *)(v46 + 8) = *(unsigned char *)(v47 + 8);
    uint64_t v48 = SearchResult[7];
    char v49 = (void *)(v70 + v48);
    uint64_t v50 = (const void *)(v71 + v48);
    if (v41((const void *)(v71 + v48), 1, v39))
    {
      uint64_t v51 = sub_10000566C(&qword_10070A2D0);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
      uint64_t v53 = (void (*)(char *, char *, uint64_t))v72;
      uint64_t v52 = a3;
    }
    else
    {
      uint64_t v54 = v44;
      uint64_t v53 = (void (*)(char *, char *, uint64_t))v72;
      v72((uint64_t)v49, (uint64_t)v50, v43);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v49, 0, 1, v39);
      uint64_t v52 = a3;
    }
    uint64_t v55 = v52[13];
    uint64_t v56 = (_DWORD *)(v7 + v55);
    uint64_t v57 = (_DWORD *)((char *)a2 + v55);
    uint64_t v58 = (int *)type metadata accessor for NewServerMessages();
    uint64_t v59 = *((void *)v58 - 1);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v59 + 48))(v57, 1, v58))
    {
      uint64_t v60 = sub_10000566C(&qword_10070D810);
      memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v56 = *(void *)v57;
      v56[2] = v57[2];
      uint64_t v61 = v58[5];
      uint64_t v62 = (char *)v56 + v61;
      uint64_t v63 = (char *)v57 + v61;
      swift_bridgeObjectRetain();
      v53(v62, v63, v43);
      uint64_t v64 = v58[6];
      int v65 = (char *)v56 + v64;
      uint64_t v66 = (char *)v57 + v64;
      *(_DWORD *)int v65 = *(_DWORD *)v66;
      v65[4] = v66[4];
      *((unsigned char *)v56 + v58[7]) = *((unsigned char *)v57 + v58[7]);
      *((unsigned char *)v56 + v58[8]) = *((unsigned char *)v57 + v58[8]);
      *(void *)((char *)v56 + v58[9]) = *(void *)((char *)v57 + v58[9]);
      char v67 = *(void (**)(_DWORD *, void, uint64_t, int *))(v59 + 56);
      swift_bridgeObjectRetain();
      v67(v56, 0, 1, v58);
    }
  }
  return v7;
}

uint64_t sub_100156788(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for MessageBatches(0) + 24);
  uint64_t v6 = sub_10000566C(&qword_100709E30);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
  }
  _s13IMAP2Behavior4TaskOwxx_0(a1 + a2[8] + 8);
  uint64_t v21 = a2;
  uint64_t v8 = a1 + a2[12];
  swift_bridgeObjectRelease();
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests(0);
  uint64_t v10 = v8 + *(int *)(SearchResult + 20);
  uint64_t v11 = sub_10000566C(&qword_100709E60);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  v12(v10 + *(int *)(MessagesVMa + 20), v11);
  uint64_t v14 = v10 + *(int *)(MessagesVMa + 24);
  uint64_t v15 = sub_10000566C(&qword_100709E38);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  if (!v16(v14, 1, v15)) {
    v12(v14, v11);
  }
  uint64_t v17 = v8 + *(int *)(SearchResult + 28);
  if (!v16(v17, 1, v15)) {
    v12(v17, v11);
  }
  uint64_t v18 = a1 + v21[13];
  uint64_t v19 = type metadata accessor for NewServerMessages();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v18, 1, v19);
  if (!result)
  {
    swift_bridgeObjectRelease();
    v12(v18 + *(int *)(v19 + 20), v11);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100156A6C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = (const void *)(v9 + v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_10000566C(&qword_100709E30);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_10000566C(&qword_10070A000);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = sub_10000566C(&qword_100709E60);
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v17 - 8) + 16))(v12, v13, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  long long v21 = *(_OWORD *)(v20 + 32);
  *(_OWORD *)(v19 + 32) = v21;
  (**(void (***)(uint64_t, uint64_t))(v21 - 8))(v19 + 8, v20 + 8);
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(unsigned char *)(v24 + 4) = *(unsigned char *)(v25 + 4);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v26 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(void *)(a1 + v26) = *(void *)(a2 + v26);
  uint64_t SearchResult = (int *)type metadata accessor for FetchSearchResultMessages.Requests(0);
  uint64_t v68 = v27;
  uint64_t v29 = SearchResult[5];
  uint64_t v30 = v27 + v29;
  uint64_t v31 = v28 + v29;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_10000566C(&qword_100709E60);
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16);
  v33(v30, v31, v32);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  v33(v30 + *(int *)(MessagesVMa + 20), v31 + *(int *)(MessagesVMa + 20), v32);
  uint64_t v35 = *(int *)(MessagesVMa + 24);
  __dst = (void *)(v30 + v35);
  uint64_t v36 = (const void *)(v31 + v35);
  uint64_t v37 = sub_10000566C(&qword_100709E38);
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48);
  uint64_t v69 = v33;
  if (v39(v36, 1, v37))
  {
    uint64_t v40 = sub_10000566C(&qword_10070A2D0);
    memcpy(__dst, v36, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    v33((uint64_t)__dst, (uint64_t)v36, v32);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v37);
  }
  uint64_t v41 = v32;
  uint64_t v42 = v38;
  uint64_t v43 = SearchResult[6];
  uint64_t v44 = v68 + v43;
  uint64_t v45 = v28 + v43;
  *(void *)uint64_t v44 = *(void *)v45;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  uint64_t v46 = SearchResult[7];
  uint64_t v47 = (void *)(v68 + v46);
  uint64_t v48 = (const void *)(v28 + v46);
  if (v39((const void *)(v28 + v46), 1, v37))
  {
    uint64_t v49 = sub_10000566C(&qword_10070A2D0);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    uint64_t v51 = (void (*)(char *, char *, uint64_t))v69;
    uint64_t v50 = a3;
  }
  else
  {
    uint64_t v52 = v42;
    uint64_t v51 = (void (*)(char *, char *, uint64_t))v69;
    v69((uint64_t)v47, (uint64_t)v48, v41);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v47, 0, 1, v37);
    uint64_t v50 = a3;
  }
  uint64_t v53 = v50[13];
  uint64_t v54 = (_DWORD *)(a1 + v53);
  uint64_t v55 = (_DWORD *)(a2 + v53);
  uint64_t v56 = (int *)type metadata accessor for NewServerMessages();
  uint64_t v57 = *((void *)v56 - 1);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v57 + 48))(v55, 1, v56))
  {
    uint64_t v58 = sub_10000566C(&qword_10070D810);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v54 = *(void *)v55;
    v54[2] = v55[2];
    uint64_t v59 = v56[5];
    uint64_t v60 = (char *)v54 + v59;
    uint64_t v61 = (char *)v55 + v59;
    swift_bridgeObjectRetain();
    v51(v60, v61, v41);
    uint64_t v62 = v56[6];
    uint64_t v63 = (char *)v54 + v62;
    uint64_t v64 = (char *)v55 + v62;
    *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
    v63[4] = v64[4];
    *((unsigned char *)v54 + v56[7]) = *((unsigned char *)v55 + v56[7]);
    *((unsigned char *)v54 + v56[8]) = *((unsigned char *)v55 + v56[8]);
    *(void *)((char *)v54 + v56[9]) = *(void *)((char *)v55 + v56[9]);
    int v65 = *(void (**)(_DWORD *, void, uint64_t, int *))(v57 + 56);
    swift_bridgeObjectRetain();
    v65(v54, 0, 1, v56);
  }
  return a1;
}

uint64_t sub_100157044(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  *uint64_t v7 = *(void *)(a2 + v6);
  v7[1] = *(void *)(a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
  uint64_t v10 = (char *)v7 + v9;
  uint64_t v11 = (char *)(v8 + v9);
  uint64_t v12 = sub_10000566C(&qword_100709E30);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      uint64_t v17 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v10, v11, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_100007A48((uint64_t)v10, &qword_100709E30);
LABEL_6:
    uint64_t v18 = sub_10000566C(&qword_10070A000);
    memcpy(v10, v11, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v71 = sub_10000566C(&qword_100709E60);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 24))(v10, v11, v71);
LABEL_7:
  uint64_t v19 = a3[8];
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  sub_100022498((uint64_t *)(a1 + v19 + 8), (uint64_t *)(a2 + v19 + 8));
  uint64_t v20 = a3[9];
  long long v21 = (unsigned char *)(a1 + v20);
  uint64_t v22 = (unsigned char *)(a2 + v20);
  *long long v21 = *v22;
  v21[1] = v22[1];
  void v21[2] = v22[2];
  v21[3] = v22[3];
  _DWORD v21[4] = v22[4];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  int v80 = a3;
  uint64_t v23 = a3[12];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(void *)(a1 + v23) = *(void *)(a2 + v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t SearchResult = (int *)type metadata accessor for FetchSearchResultMessages.Requests(0);
  uint64_t v27 = SearchResult[5];
  uint64_t v28 = v24 + v27;
  uint64_t v78 = v25;
  uint64_t v29 = v25 + v27;
  uint64_t v30 = sub_10000566C(&qword_100709E60);
  uint64_t v77 = *(void *)(v30 - 8);
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 24);
  v31(v28, v29, v30);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  uint64_t v79 = v30;
  uint64_t v75 = (void (*)(void *, const void *, uint64_t))v31;
  v31(v28 + *(int *)(MessagesVMa + 20), v29 + *(int *)(MessagesVMa + 20), v30);
  uint64_t v33 = *(int *)(MessagesVMa + 24);
  uint64_t v34 = (void *)(v28 + v33);
  uint64_t v35 = (void *)(v29 + v33);
  uint64_t v36 = sub_10000566C(&qword_100709E38);
  uint64_t v76 = *(void *)(v36 - 8);
  uint64_t v37 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v76 + 48);
  LODWORD(v31) = v37(v34, 1, v36);
  int v38 = v37(v35, 1, v36);
  if (v31)
  {
    if (!v38)
    {
      uint64_t v39 = v79;
      (*(void (**)(void *, void *, uint64_t))(v77 + 16))(v34, v35, v79);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v76 + 56))(v34, 0, 1, v36);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v38)
  {
    sub_100007A48((uint64_t)v34, &qword_100709E38);
LABEL_12:
    uint64_t v40 = sub_10000566C(&qword_10070A2D0);
    memcpy(v34, v35, *(void *)(*(void *)(v40 - 8) + 64));
    uint64_t v39 = v79;
    goto LABEL_13;
  }
  uint64_t v39 = v79;
  v75(v34, v35, v79);
LABEL_13:
  uint64_t v41 = SearchResult[6];
  uint64_t v42 = v24 + v41;
  uint64_t v43 = (uint64_t *)(v78 + v41);
  uint64_t v44 = *v43;
  *(unsigned char *)(v42 + 8) = *((unsigned char *)v43 + 8);
  *(void *)uint64_t v42 = v44;
  uint64_t v45 = SearchResult[7];
  uint64_t v46 = (void *)(v24 + v45);
  uint64_t v47 = (void *)(v78 + v45);
  int v48 = v37((void *)(v24 + v45), 1, v36);
  int v49 = v37(v47, 1, v36);
  if (v48)
  {
    uint64_t v50 = v80;
    if (!v49)
    {
      (*(void (**)(void *, void *, uint64_t))(v77 + 16))(v46, v47, v39);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v76 + 56))(v46, 0, 1, v36);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v50 = v80;
  if (v49)
  {
    sub_100007A48((uint64_t)v46, &qword_100709E38);
LABEL_18:
    uint64_t v51 = sub_10000566C(&qword_10070A2D0);
    memcpy(v46, v47, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_19;
  }
  v75(v46, v47, v39);
LABEL_19:
  uint64_t v52 = v50[13];
  uint64_t v53 = (_DWORD *)(a1 + v52);
  uint64_t v54 = (_DWORD *)(a2 + v52);
  uint64_t v55 = (int *)type metadata accessor for NewServerMessages();
  uint64_t v56 = *((void *)v55 - 1);
  uint64_t v57 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v56 + 48);
  int v58 = v57(v53, 1, v55);
  int v59 = v57(v54, 1, v55);
  if (!v58)
  {
    if (!v59)
    {
      *(void *)uint64_t v53 = *(void *)v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      _OWORD v53[2] = v54[2];
      v75((char *)v53 + v55[5], (char *)v54 + v55[5], v39);
      uint64_t v72 = v55[6];
      uint64_t v73 = (char *)v53 + v72;
      uint64_t v74 = (char *)v54 + v72;
      unsigned char *v73 = *v74;
      v73[1] = v74[1];
      v73[2] = v74[2];
      v73[3] = v74[3];
      v73[4] = v74[4];
      *((unsigned char *)v53 + v55[7]) = *((unsigned char *)v54 + v55[7]);
      *((unsigned char *)v53 + v55[8]) = *((unsigned char *)v54 + v55[8]);
      *(void *)((char *)v53 + v55[9]) = *(void *)((char *)v54 + v55[9]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1001540D0((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    goto LABEL_24;
  }
  if (v59)
  {
LABEL_24:
    uint64_t v69 = sub_10000566C(&qword_10070D810);
    memcpy(v53, v54, *(void *)(*(void *)(v69 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v53 = *(void *)v54;
  _OWORD v53[2] = v54[2];
  uint64_t v60 = v55[5];
  uint64_t v61 = (char *)v53 + v60;
  uint64_t v62 = (char *)v54 + v60;
  uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
  swift_bridgeObjectRetain();
  v63(v61, v62, v39);
  uint64_t v64 = v55[6];
  int v65 = (char *)v53 + v64;
  uint64_t v66 = (char *)v54 + v64;
  int v67 = *(_DWORD *)v66;
  v65[4] = v66[4];
  *(_DWORD *)int v65 = v67;
  *((unsigned char *)v53 + v55[7]) = *((unsigned char *)v54 + v55[7]);
  *((unsigned char *)v53 + v55[8]) = *((unsigned char *)v54 + v55[8]);
  *(void *)((char *)v53 + v55[9]) = *(void *)((char *)v54 + v55[9]);
  uint64_t v68 = *(void (**)(_DWORD *, void, uint64_t, int *))(v56 + 56);
  swift_bridgeObjectRetain();
  v68(v53, 0, 1, v55);
  return a1;
}

uint64_t sub_100157870(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v10 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
  uint64_t v11 = (void *)(v8 + v10);
  uint64_t v12 = (const void *)(v9 + v10);
  uint64_t v13 = sub_10000566C(&qword_100709E30);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_10000566C(&qword_10070A000);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = sub_10000566C(&qword_100709E60);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v11, v12, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = (_OWORD *)(a1 + v17);
  uint64_t v20 = (_OWORD *)(a2 + v17);
  long long v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  v19[2] = v20[2];
  uint64_t v22 = a1 + v18;
  uint64_t v23 = a2 + v18;
  *(unsigned char *)(v22 + 4) = *(unsigned char *)(v23 + 4);
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  uint64_t v24 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  uint64_t v64 = a3;
  uint64_t v25 = a3[12];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(void *)(a1 + v25) = *(void *)(a2 + v25);
  uint64_t SearchResult = (int *)type metadata accessor for FetchSearchResultMessages.Requests(0);
  uint64_t v62 = v27;
  uint64_t v28 = SearchResult[5];
  uint64_t v29 = (char *)(v26 + v28);
  uint64_t v30 = (char *)(v27 + v28);
  uint64_t v31 = sub_10000566C(&qword_100709E60);
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32);
  v32(v29, v30, v31);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  v32(&v29[*(int *)(MessagesVMa + 20)], &v30[*(int *)(MessagesVMa + 20)], v31);
  uint64_t v34 = *(int *)(MessagesVMa + 24);
  __dst = &v29[v34];
  uint64_t v35 = &v30[v34];
  uint64_t v36 = sub_10000566C(&qword_100709E38);
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v60 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48);
  uint64_t v63 = v32;
  if (v60(v35, 1, v36))
  {
    uint64_t v38 = sub_10000566C(&qword_10070A2D0);
    memcpy(__dst, v35, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    v32(__dst, v35, v31);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v36);
  }
  uint64_t v39 = v31;
  uint64_t v40 = v37;
  uint64_t v41 = SearchResult[6];
  uint64_t v42 = v26 + v41;
  uint64_t v43 = v62 + v41;
  *(void *)uint64_t v42 = *(void *)v43;
  *(unsigned char *)(v42 + 8) = *(unsigned char *)(v43 + 8);
  uint64_t v44 = SearchResult[7];
  uint64_t v45 = (void *)(v26 + v44);
  uint64_t v46 = (void *)(v62 + v44);
  if (v60((const void *)(v62 + v44), 1, v36))
  {
    uint64_t v47 = sub_10000566C(&qword_10070A2D0);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    int v48 = v63;
  }
  else
  {
    int v49 = (char *)v46;
    int v48 = v63;
    v63((char *)v45, v49, v39);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v45, 0, 1, v36);
  }
  uint64_t v50 = v64[13];
  uint64_t v51 = (_DWORD *)(a1 + v50);
  uint64_t v52 = (_DWORD *)(a2 + v50);
  uint64_t v53 = (int *)type metadata accessor for NewServerMessages();
  uint64_t v54 = *((void *)v53 - 1);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v54 + 48))(v52, 1, v53))
  {
    uint64_t v55 = sub_10000566C(&qword_10070D810);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v51 = *(void *)v52;
    v51[2] = v52[2];
    v48((char *)v51 + v53[5], (char *)v52 + v53[5], v39);
    uint64_t v56 = v53[6];
    uint64_t v57 = (char *)v51 + v56;
    int v58 = (char *)v52 + v56;
    *(_DWORD *)uint64_t v57 = *(_DWORD *)v58;
    v57[4] = v58[4];
    *((unsigned char *)v51 + v53[7]) = *((unsigned char *)v52 + v53[7]);
    *((unsigned char *)v51 + v53[8]) = *((unsigned char *)v52 + v53[8]);
    *(void *)((char *)v51 + v53[9]) = *(void *)((char *)v52 + v53[9]);
    (*(void (**)(_DWORD *, void, uint64_t, int *))(v54 + 56))(v51, 0, 1, v53);
  }
  return a1;
}

uint64_t sub_100157DC4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  *uint64_t v7 = *(void *)(a2 + v6);
  v7[1] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = (char *)(v8 + v10);
  uint64_t v13 = sub_10000566C(&qword_100709E30);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v11, v12, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_100007A48((uint64_t)v11, &qword_100709E30);
LABEL_6:
    uint64_t v19 = sub_10000566C(&qword_10070A000);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v69 = sub_10000566C(&qword_100709E60);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 40))(v11, v12, v69);
LABEL_7:
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + v20 + 8);
  *(_OWORD *)(v21 + 8) = *(_OWORD *)(v22 + 8);
  *(_OWORD *)(v21 + 24) = *(_OWORD *)(v22 + 24);
  *(void *)(v21 + 40) = *(void *)(v22 + 40);
  uint64_t v23 = a3[9];
  uint64_t v24 = a3[10];
  uint64_t v25 = (unsigned char *)(a1 + v23);
  uint64_t v26 = (unsigned char *)(a2 + v23);
  unsigned char *v25 = *v26;
  v25[1] = v26[1];
  void v25[2] = v26[2];
  v25[3] = v26[3];
  v25[4] = v26[4];
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  uint64_t v27 = a3[12];
  uint64_t v77 = a3;
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(void *)(a1 + v27) = *(void *)(a2 + v27);
  swift_bridgeObjectRelease();
  uint64_t SearchResult = (int *)type metadata accessor for FetchSearchResultMessages.Requests(0);
  uint64_t v31 = SearchResult[5];
  uint64_t v32 = v28 + v31;
  uint64_t v75 = v29;
  uint64_t v33 = v29 + v31;
  uint64_t v34 = sub_10000566C(&qword_100709E60);
  uint64_t v74 = *(void *)(v34 - 8);
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 40);
  v35(v32, v33, v34);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  uint64_t v76 = v34;
  v35(v32 + *(int *)(MessagesVMa + 20), v33 + *(int *)(MessagesVMa + 20), v34);
  uint64_t v37 = *(int *)(MessagesVMa + 24);
  uint64_t v38 = (void *)(v32 + v37);
  uint64_t v39 = (void *)(v33 + v37);
  uint64_t v40 = sub_10000566C(&qword_100709E38);
  uint64_t v73 = *(void *)(v40 - 8);
  uint64_t v41 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v73 + 48);
  int v42 = v41(v38, 1, v40);
  int v43 = v41(v39, 1, v40);
  if (v42)
  {
    if (!v43)
    {
      uint64_t v44 = v76;
      (*(void (**)(void *, void *, uint64_t))(v74 + 32))(v38, v39, v76);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v73 + 56))(v38, 0, 1, v40);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v43)
  {
    sub_100007A48((uint64_t)v38, &qword_100709E38);
LABEL_12:
    uint64_t v45 = sub_10000566C(&qword_10070A2D0);
    memcpy(v38, v39, *(void *)(*(void *)(v45 - 8) + 64));
    uint64_t v44 = v76;
    goto LABEL_13;
  }
  uint64_t v44 = v76;
  v35((uint64_t)v38, (uint64_t)v39, v76);
LABEL_13:
  uint64_t v46 = SearchResult[6];
  uint64_t v47 = v28 + v46;
  uint64_t v48 = v75 + v46;
  *(void *)uint64_t v47 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
  uint64_t v49 = SearchResult[7];
  uint64_t v50 = (void *)(v28 + v49);
  uint64_t v51 = (void *)(v75 + v49);
  int v52 = v41((void *)(v28 + v49), 1, v40);
  int v53 = v41(v51, 1, v40);
  if (v52)
  {
    uint64_t v54 = v77;
    if (!v53)
    {
      (*(void (**)(void *, void *, uint64_t))(v74 + 32))(v50, v51, v44);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v73 + 56))(v50, 0, 1, v40);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v54 = v77;
  if (v53)
  {
    sub_100007A48((uint64_t)v50, &qword_100709E38);
LABEL_18:
    uint64_t v55 = sub_10000566C(&qword_10070A2D0);
    memcpy(v50, v51, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_19;
  }
  v35((uint64_t)v50, (uint64_t)v51, v44);
LABEL_19:
  uint64_t v56 = v54[13];
  uint64_t v57 = (_DWORD *)(a1 + v56);
  int v58 = (_DWORD *)(a2 + v56);
  int v59 = (int *)type metadata accessor for NewServerMessages();
  uint64_t v60 = *((void *)v59 - 1);
  uint64_t v61 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v60 + 48);
  int v62 = v61(v57, 1, v59);
  int v63 = v61(v58, 1, v59);
  if (!v62)
  {
    if (!v63)
    {
      *(void *)uint64_t v57 = *(void *)v58;
      swift_bridgeObjectRelease();
      v57[2] = v58[2];
      v35((uint64_t)v57 + v59[5], (uint64_t)v58 + v59[5], v44);
      uint64_t v70 = v59[6];
      uint64_t v71 = (char *)v57 + v70;
      uint64_t v72 = (char *)v58 + v70;
      *uint64_t v71 = *v72;
      v71[1] = v72[1];
      v71[2] = v72[2];
      v71[3] = v72[3];
      v71[4] = v72[4];
      *((unsigned char *)v57 + v59[7]) = *((unsigned char *)v58 + v59[7]);
      *((unsigned char *)v57 + v59[8]) = *((unsigned char *)v58 + v59[8]);
      *(void *)((char *)v57 + v59[9]) = *(void *)((char *)v58 + v59[9]);
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1001540D0((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for NewServerMessages);
    goto LABEL_24;
  }
  if (v63)
  {
LABEL_24:
    uint64_t v67 = sub_10000566C(&qword_10070D810);
    memcpy(v57, v58, *(void *)(*(void *)(v67 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v57 = *(void *)v58;
  v57[2] = v58[2];
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))((char *)v57 + v59[5], (char *)v58 + v59[5], v44);
  uint64_t v64 = v59[6];
  int v65 = (char *)v57 + v64;
  uint64_t v66 = (char *)v58 + v64;
  *(_DWORD *)int v65 = *(_DWORD *)v66;
  v65[4] = v66[4];
  *((unsigned char *)v57 + v59[7]) = *((unsigned char *)v58 + v59[7]);
  *((unsigned char *)v57 + v59[8]) = *((unsigned char *)v58 + v59[8]);
  *(void *)((char *)v57 + v59[9]) = *(void *)((char *)v58 + v59[9]);
  (*(void (**)(_DWORD *, void, uint64_t, int *))(v60 + 56))(v57, 0, 1, v59);
  return a1;
}

uint64_t sub_1001585B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001585C8);
}

uint64_t sub_1001585C8(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = type metadata accessor for MessageBatches(0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[7];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    return v13(&a1[v11], a2, v9);
  }
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests(0);
  if (*(_DWORD *)(*(void *)(SearchResult - 8) + 84) == a2)
  {
    uint64_t v9 = SearchResult;
    uint64_t v10 = *(void *)(SearchResult - 8);
    uint64_t v11 = a3[12];
    goto LABEL_9;
  }
  uint64_t v14 = sub_10000566C(&qword_10070D810);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  int v17 = &a1[a3[13]];
  return v15(v17, a2, v16);
}

uint64_t sub_100158744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100158758);
}

char *sub_100158758(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
    return result;
  }
  uint64_t v8 = type metadata accessor for MessageBatches(0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[7];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests(0);
  if (*(_DWORD *)(*(void *)(SearchResult - 8) + 84) == a3)
  {
    uint64_t v9 = SearchResult;
    uint64_t v10 = *(void *)(SearchResult - 8);
    uint64_t v11 = a4[12];
    goto LABEL_7;
  }
  uint64_t v14 = sub_10000566C(&qword_10070D810);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  int v17 = &v5[a4[13]];
  return (char *)v15(v17, a2, a2, v16);
}

void sub_1001588D4()
{
  type metadata accessor for MessageBatches(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for FetchSearchResultMessages.Requests(319);
    if (v1 <= 0x3F)
    {
      sub_100149B24();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

unint64_t sub_100158A18()
{
  unint64_t result = qword_10070DC30;
  if (!qword_10070DC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070DC30);
  }
  return result;
}

unint64_t sub_100158A70()
{
  unint64_t result = qword_10070DC38;
  if (!qword_10070DC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070DC38);
  }
  return result;
}

unint64_t sub_100158AC4(uint64_t a1)
{
  unint64_t result = sub_100158AEC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100158AEC()
{
  unint64_t result = qword_10070DCF0;
  if (!qword_10070DCF0)
  {
    type metadata accessor for FetchSearchResultMessages(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070DCF0);
  }
  return result;
}

uint64_t sub_100158B44(uint64_t a1, uint64_t a2)
{
  return sub_100151710(a1, a2 & 0x101010101FFFF01, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100158B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1001A9EB4(a4);
  uint64_t v15 = v14[2];
  if (v15)
  {
    uint64_t v26 = a6;
    uint64_t v16 = 0;
    while ((sub_100149D30(*((_DWORD *)v14 + v16 + 8), a2, a3) & 1) == 0)
    {
      if (v15 == ++v16) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    sub_1001541B4(a1, (uint64_t)v13, type metadata accessor for UntaggedResponse);
    if (swift_getEnumCaseMultiPayload() == 19)
    {
      memcpy(v28, v13, 0x248uLL);
      SearchResultuint64_t Messages = type metadata accessor for FetchSearchResultMessages(0);
      uint64_t v19 = *(void *)(v27 + *(int *)(SearchResultMessages + 28) + 8);
      uint64_t v20 = *(void *)(v19 + 16);
      if (v20) {
        int v21 = *(_DWORD *)(v19 + 8 * v20 + 24);
      }
      else {
        int v21 = 1;
      }
      uint64_t v22 = v26;
      uint64_t v23 = v27 + *(int *)(SearchResultMessages + 52);
      uint64_t v24 = type metadata accessor for NewServerMessages();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v23, 1, v24)) {
        sub_10019D09C((uint64_t)v28, v21, v22);
      }
      return sub_100061150((uint64_t)v28);
    }
    else
    {
      return sub_1001540D0((uint64_t)v13, type metadata accessor for UntaggedResponse);
    }
  }
  else
  {
LABEL_5:
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100158D7C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v44 = a1;
  uint64_t v43 = sub_10000566C(&qword_10070CC20);
  __chkstk_darwin(v43);
  int v42 = (uint64_t *)((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10000566C(&qword_100709E38);
  uint64_t v40 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v41 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000566C(&qword_100709E30);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v46 = 1;
  int v17 = sub_100105804(0x100000000, a4);
  uint64_t v18 = v17[2];
  if (v18)
  {
    uint64_t v39 = v8;
    uint64_t v19 = 0;
    while ((sub_1001652E0(*((_DWORD *)v17 + v19 + 8), a2, a3) & 1) == 0)
    {
      if (v18 == ++v19) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    SearchResultuint64_t Messages = type metadata accessor for FetchSearchResultMessages(0);
    uint64_t v22 = v45;
    uint64_t v23 = v45 + *(int *)(SearchResultMessages + 48);
    sub_10014FAB4((uint64_t)v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      uint64_t v24 = &qword_10070A000;
      uint64_t v25 = (uint64_t)v12;
    }
    else
    {
      sub_10001FDF0((uint64_t)v12, (uint64_t)v16, &qword_100709E30);
      if (((v44 >> 59) & 0x1E | (v44 >> 2) & 1) == 9)
      {
        uint64_t v26 = (uint64_t *)swift_projectBox();
        uint64_t v27 = v42;
        uint64_t v28 = *(int *)(v43 + 48);
        uint64_t v29 = (uint64_t)v42 + v28;
        uint64_t v30 = *(int *)(v43 + 64);
        uint64_t v31 = (uint64_t)v42 + v30;
        uint64_t v32 = (uint64_t)v26 + v30;
        uint64_t v34 = *v26;
        uint64_t v33 = v26[1];
        *int v42 = *v26;
        v27[1] = v33;
        sub_1000079E4((uint64_t)v26 + v28, v29, &qword_100709E38);
        sub_1000079E4(v32, v31, &qword_100709E30);
        if (*(void *)(v22 + 24) == v33 && sub_1000255D4(*(void *)(v22 + 16), v34))
        {
          uint64_t v35 = v41;
          sub_10001FDF0(v29, v41, &qword_100709E38);
          sub_10001FC6C();
          char v36 = sub_1005E35A0();
          sub_100007A48((uint64_t)v16, &qword_100709E30);
          sub_100007A48(v31, &qword_100709E30);
          if (v36)
          {
            uint64_t v37 = v23 + *(int *)(type metadata accessor for FetchSearchResultMessages.Requests(0) + 28);
            sub_100007A48(v37, &qword_10070A2D0);
            sub_10001FDF0(v35, v37, &qword_100709E38);
            return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
          }
          uint64_t v24 = &qword_100709E38;
          uint64_t v25 = v35;
        }
        else
        {
          sub_100007A48((uint64_t)v16, &qword_100709E30);
          sub_100007A48(v31, &qword_100709E30);
          uint64_t v24 = &qword_100709E38;
          uint64_t v25 = v29;
        }
      }
      else
      {
        uint64_t v24 = &qword_100709E30;
        uint64_t v25 = (uint64_t)v16;
      }
    }
    return sub_100007A48(v25, v24);
  }
  else
  {
LABEL_5:
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001591EC(uint64_t a1)
{
  return sub_1001531D8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_10015920C()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100159244()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_100159284(uint64_t a1)
{
  return sub_10010442C(a1, *(void *)(v1 + 16)) & 1;
}

unsigned char *storeEnumTagSinglePayload for FetchSearchResultMessages.CommandID(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100159340);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchSearchResultMessages.CommandID()
{
  return &type metadata for FetchSearchResultMessages.CommandID;
}

uint64_t getEnumTagSinglePayload for FetchSearchResultMessages.ActionID(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FetchSearchResultMessages.ActionID(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 5) = v3;
  return result;
}

uint64_t sub_1001593C4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1001593E0(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)unint64_t result = a2 - 1;
    *(unsigned char *)(result + 4) = 1;
  }
  else
  {
    *(unsigned char *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchSearchResultMessages.ActionID()
{
  return &type metadata for FetchSearchResultMessages.ActionID;
}

uint64_t sub_100159410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, unint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  int v46 = a8;
  uint64_t v42 = a7;
  uint64_t v47 = a9;
  uint64_t v48 = a1;
  int v13 = a5 & 1;
  uint64_t v14 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v14 - 8);
  uint64_t v43 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = _s15MissingMessagesOMa(0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for MessageBatches(0);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v24 = (uint64_t *)((char *)&v41 - v23);
  sub_10016300C(a2, (uint64_t)&v41 - v23, type metadata accessor for MessageBatches);
  sub_10016300C(a3, (uint64_t)v18, _s15MissingMessagesOMa);
  uint64_t v45 = a4;
  unint64_t v25 = a4;
  int v49 = v13;
  unsigned __int8 v26 = v42;
  unint64_t v44 = sub_1001707E8(v24, (uint64_t)v18, v25, v13, a6 | ((HIDWORD(a6) & 1) << 32), v42);
  unint64_t v28 = v27;
  unint64_t v30 = v29;
  unint64_t v31 = sub_100070700();
  uint64_t v50 = a2;
  sub_10016300C(a2, (uint64_t)v22, type metadata accessor for MessageBatches);
  swift_storeEnumTagMultiPayload();
  char v32 = sub_100074A7C(a3, (uint64_t)v18);
  uint64_t v33 = (uint64_t)v18;
  uint64_t v34 = (uint64_t)v43;
  sub_100163074(v33, _s15MissingMessagesOMa);
  sub_1000712BC(v34);
  if (v26)
  {
    char v35 = 0;
    if (v26 == 1) {
      uint64_t v36 = 3037;
    }
    else {
      uint64_t v36 = 191;
    }
  }
  else
  {
    uint64_t v36 = v26;
    char v35 = 1;
  }
  if (v49) {
    int v37 = 1;
  }
  else {
    int v37 = BYTE4(v31) & 1;
  }
  if (v45 >= v31) {
    unsigned int v38 = v31;
  }
  else {
    unsigned int v38 = v45;
  }
  if (v37) {
    uint64_t v39 = v31;
  }
  else {
    uint64_t v39 = v38;
  }
  char v53 = BYTE5(v28) & 1;
  char v52 = BYTE4(v30) & 1;
  char v51 = BYTE4(v31) & 1;
  sub_100159D1C(v48, (uint64_t)v22, v45, v49, (uint64_t)v44, v28 & 0xFFFFFFFFFFLL | (((v28 >> 40) & 1) << 40), v30 | ((HIDWORD(v30) & 1) << 32), v32 & 1, v47, v34, v36, v35, v46 & 0x101, v39 | ((unint64_t)(BYTE4(v31) & 1) << 32));
  sub_100163074(a3, _s15MissingMessagesOMa);
  return sub_100163074(v50, type metadata accessor for MessageBatches);
}

uint64_t sub_100159740@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10000566C(&qword_10070A638);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (_DWORD *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10000566C(&qword_10070DEB8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a2 + 16);
  if (v13)
  {
    uint64_t v21 = a3;
    uint64_t v14 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v15 = *(void *)(v7 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1000079E4(v14, (uint64_t)v9, &qword_10070A638);
      if (*v9 == a1) {
        break;
      }
      sub_100007A48((uint64_t)v9, &qword_10070A638);
      v14 += v15;
      if (!--v13)
      {
        uint64_t v16 = 1;
        goto LABEL_8;
      }
    }
    sub_10001FDF0((uint64_t)v9, (uint64_t)v12, &qword_10070A638);
    uint64_t v16 = 0;
LABEL_8:
    a3 = v21;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, v16, 1, v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    sub_100007A48((uint64_t)v12, &qword_10070DEB8);
    uint64_t Missing = type metadata accessor for FindMissingMessages.CommandID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(Missing - 8) + 56))(a3, 1, 1, Missing);
  }
  else
  {
    sub_10016300C((uint64_t)&v12[*(int *)(v6 + 52)], a3, type metadata accessor for FindMissingMessages.CommandID);
    sub_100007A48((uint64_t)v12, &qword_10070A638);
    uint64_t v19 = type metadata accessor for FindMissingMessages.CommandID(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a3, 0, 1, v19);
  }
}

uint64_t sub_1001599F0(uint64_t a1, unsigned __int8 a2)
{
  int v3 = a2;
  uint64_t Missing = type metadata accessor for FindMissingMessages.CommandID(0);
  __chkstk_darwin(Missing);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_10070A638);
  sub_10016300C(a1 + *(int *)(v7 + 52), (uint64_t)v6, type metadata accessor for FindMissingMessages.CommandID);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v3 == 2) {
      char v8 = 0;
    }
    else {
      char v8 = ((v3 & 1) == 0) ^ v6[8];
    }
  }
  else
  {
    sub_100163074((uint64_t)v6, type metadata accessor for FindMissingMessages.CommandID);
    char v8 = v3 == 2;
  }
  return v8 & 1;
}

BOOL sub_100159B0C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL result = v3 == 2 && v2 == 2;
  if (v2 != 2 && v3 != 2) {
    return ((v3 ^ v2) & 1) == 0;
  }
  return result;
}

uint64_t sub_100159B44()
{
  sub_10000566C(&qword_10070B898);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1005F6720;
  *(void *)(v0 + 32) = &type metadata for DetectChangesToMessages;
  sub_10003BC88();
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(void *)(v0 + 80) = &type metadata for DetectChangesToMessagesInRecent;
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(void *)(v0 + 128) = &type metadata for DetectRemovedMessages;
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(void *)(v0 + 176) = &type metadata for DetectRemovedMessagesInRecent;
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(void *)(v0 + 224) = type metadata accessor for FetchSearchResultMessages(0);
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(void *)(v0 + 272) = &type metadata for PurgeMessagesOutsideWindowOfInterest;
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  return v0;
}

Swift::Int sub_100159CF4()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA0F8);
  qword_100761760 = result;
  return result;
}

uint64_t sub_100159D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12, __int16 a13, uint64_t a14)
{
  *(void *)a9 = 0xD000000000000013;
  *(void *)(a9 + 8) = 0x80000001005F4160;
  *(void *)(a9 + 104) = sub_10001DF10((uint64_t)&off_1006BA5B0);
  *(unsigned char *)(a9 + 112) = 0;
  Missinguint64_t Messages = (int *)type metadata accessor for FindMissingMessages(0);
  sub_10001FC6C();
  sub_1005E3680();
  sub_1005E3680();
  uint64_t v20 = a9 + MissingMessages[18];
  *(_OWORD *)uint64_t v20 = 0u;
  *(_OWORD *)(v20 + 16) = 0u;
  int v21 = *(_DWORD *)(a1 + 32);
  long long v22 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(a9 + 80) = v22;
  *(_DWORD *)(a9 + 96) = v21;
  *(void *)(a9 + 16) = MissingMessages;
  sub_10003BC88();
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  sub_10016300C(a2, a9 + MissingMessages[9], type metadata accessor for MessageBatches);
  uint64_t v23 = a9 + MissingMessages[10];
  *(void *)uint64_t v23 = a3;
  *(unsigned char *)(v23 + 8) = a4 & 1;
  uint64_t v24 = a9 + MissingMessages[11];
  *(void *)uint64_t v24 = a5;
  *(unsigned char *)(v24 + 12) = BYTE4(a6);
  *(_DWORD *)(v24 + 8) = a6;
  *(unsigned char *)(v24 + 13) = BYTE5(a6) & 1;
  *(_DWORD *)(v24 + 16) = a7;
  *(unsigned char *)(v24 + 20) = BYTE4(a7) & 1;
  uint64_t v25 = a9 + MissingMessages[13];
  *(void *)uint64_t v25 = a11;
  *(unsigned char *)(v25 + 8) = a12 & 1;
  *(unsigned char *)(a9 + MissingMessages[14]) = a8;
  sub_1000079E4(a10, a9 + MissingMessages[15], &qword_100709E38);
  uint64_t v26 = 0;
  unint64_t v27 = 0;
  unint64_t v28 = 0;
  unint64_t v29 = 0;
  unint64_t v30 = (unsigned char *)(a9 + MissingMessages[12]);
  *unint64_t v30 = a13 & 1;
  v30[1] = HIBYTE(a13) & 1;
  if ((a14 & 0x100000000) == 0)
  {
    unint64_t v27 = a13 & 0x101 | (unint64_t)(a14 << 32);
    unint64_t v29 = _swiftEmptyArrayStorage;
    unint64_t v28 = &_mh_execute_header;
    uint64_t v26 = 94;
  }
  sub_100007A48(a10, &qword_100709E38);
  sub_100163074(a2, type metadata accessor for MessageBatches);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v20 = v26;
  *(void *)(v20 + 8) = v27;
  *(void *)(v20 + 16) = v28;
  *(void *)(v20 + 24) = v29;
  return result;
}

uint64_t sub_100159FBC(uint64_t a1)
{
  Missinguint64_t Messages = type metadata accessor for FindMissingMessages(0);
  uint64_t v4 = __chkstk_darwin(MissingMessages);
  uint64_t v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v65 = (uint64_t)&v56 - v8;
  __chkstk_darwin(v7);
  uint64_t v66 = (uint64_t)&v56 - v9;
  uint64_t v10 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005E0ED0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = MissingMessages;
  uint64_t v17 = v1 + *(int *)(MissingMessages + 44);
  if (*(unsigned char *)(v17 + 13))
  {
    unint64_t v18 = 0xE900000000000065;
    uint64_t v19 = 0x74616470752D6F6ELL;
  }
  else
  {
    unint64_t v20 = *(unsigned int *)(v17 + 8) | ((unint64_t)*(unsigned __int8 *)(v17 + 12) << 32);
    if ((v20 & 0x100000000) != 0)
    {
      unint64_t v18 = 0xE300000000000000;
      uint64_t v19 = 7104878;
    }
    else
    {
      uint64_t v69 = 0;
      unint64_t v70 = 0xE000000000000000;
      LODWORD(v72) = v20;
      sub_1005E2E90();
      uint64_t v19 = v69;
      unint64_t v18 = v70;
    }
  }
  uint64_t v63 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  sub_10016300C(a1, (uint64_t)v12, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_10016300C(v1, v66, type metadata accessor for FindMissingMessages);
  uint64_t v21 = v65;
  sub_10016300C(v1, v65, type metadata accessor for FindMissingMessages);
  sub_10016300C(v1, (uint64_t)v6, type metadata accessor for FindMissingMessages);
  swift_bridgeObjectRetain();
  long long v22 = sub_1005E0EB0();
  int v23 = sub_1005E25C0();
  if (os_log_type_enabled(v22, (os_log_type_t)v23))
  {
    int v57 = v23;
    os_log_t v58 = v22;
    int v59 = v6;
    uint64_t v60 = v16;
    uint64_t v61 = v14;
    uint64_t v62 = v13;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    uint64_t v72 = v56;
    *(_DWORD *)uint64_t v24 = 68160259;
    LODWORD(v69) = 2;
    sub_1005E2960();
    *(_WORD *)(v24 + 8) = 256;
    uint64_t v25 = &v12[*(int *)(v10 + 20)];
    LOBYTE(v69) = *v25;
    sub_1005E2960();
    *(_WORD *)(v24 + 11) = 2082;
    uint64_t v26 = *((void *)v25 + 1);
    unint64_t v27 = *((void *)v25 + 2);
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_1000C6914(v26, v27, &v72);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 21) = 1040;
    LODWORD(v69) = 2;
    sub_1005E2960();
    *(_WORD *)(v24 + 27) = 512;
    LOWORD(v69) = *((_WORD *)v25 + 12);
    sub_1005E2960();
    *(_WORD *)(v24 + 31) = 2160;
    uint64_t v69 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v24 + 41) = 2085;
    int v28 = *((_DWORD *)v25 + 10);
    uint64_t v69 = *((void *)v25 + 4);
    LODWORD(v70) = v28;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1005E1CC0();
    uint64_t v69 = sub_1000C6914(v29, v30, &v72);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100163074((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v24 + 51) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_1000C6914(v63, v18, &v72);
    sub_1005E2960();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 61) = 2080;
    uint64_t v31 = v66;
    uint64_t v32 = *(void *)(v66 + *(int *)(v64 + 44));
    int64_t v33 = *(void *)(v32 + 16);
    uint64_t v34 = _swiftEmptyArrayStorage;
    if (v33)
    {
      uint64_t v71 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_10001A574(0, v33, 0);
      uint64_t v34 = v71;
      uint64_t v63 = v32;
      char v35 = (unsigned char *)(v32 + 40);
      do
      {
        int v37 = *((_DWORD *)v35 - 2);
        int v36 = *((_DWORD *)v35 - 1);
        if (*v35)
        {
          uint64_t v69 = 14931;
          unint64_t v38 = 0xE200000000000000;
        }
        else
        {
          uint64_t v69 = 978332499;
          unint64_t v38 = 0xE400000000000000;
        }
        unint64_t v70 = v38;
        int v67 = v37;
        int v68 = v36;
        sub_10000566C(&qword_10070A9B8);
        v73._countAndFlagsBits = sub_1005E1CA0();
        sub_1005E1E30(v73);
        swift_bridgeObjectRelease();
        uint64_t v39 = v69;
        unint64_t v40 = v70;
        uint64_t v71 = v34;
        unint64_t v42 = v34[2];
        unint64_t v41 = v34[3];
        if (v42 >= v41 >> 1)
        {
          sub_10001A574(v41 > 1, v42 + 1, 1);
          uint64_t v34 = v71;
        }
        v35 += 12;
        _OWORD v34[2] = v42 + 1;
        uint64_t v43 = &v34[2 * v42];
        v43[4] = v39;
        v43[5] = v40;
        --v33;
      }
      while (v33);
      swift_bridgeObjectRelease();
      uint64_t v31 = v66;
    }
    uint64_t v69 = (uint64_t)v34;
    sub_10000566C(&qword_100709F58);
    sub_10001C548();
    uint64_t v45 = sub_1005E1A80();
    unint64_t v47 = v46;
    swift_bridgeObjectRelease();
    uint64_t v69 = sub_1000C6914(v45, v47, &v72);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100163074(v31, type metadata accessor for FindMissingMessages);
    *(_WORD *)(v24 + 71) = 2048;
    uint64_t v48 = v64;
    uint64_t v49 = v65 + *(int *)(v64 + 52);
    if (*(unsigned char *)(v49 + 8)) {
      uint64_t v50 = 0;
    }
    else {
      uint64_t v50 = *(void *)v49;
    }
    sub_100163074(v65, type metadata accessor for FindMissingMessages);
    uint64_t v69 = v50;
    sub_1005E2960();
    *(_WORD *)(v24 + 81) = 1024;
    char v51 = v60;
    char v52 = &v59[*(int *)(v48 + 72)];
    if (*((void *)v52 + 3)) {
      int v53 = *((_DWORD *)v52 + 3);
    }
    else {
      int v53 = 0;
    }
    uint64_t v54 = v61;
    sub_100163074((uint64_t)v59, type metadata accessor for FindMissingMessages);
    LODWORD(v69) = v53;
    sub_1005E2960();
    os_log_t v55 = v58;
    _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v57, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task with fetched-window-update %s, ranges %s, UID limit: %ld, grow: %u", (uint8_t *)v24, 0x57u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v51, v62);
  }
  else
  {
    sub_100163074((uint64_t)v6, type metadata accessor for FindMissingMessages);
    sub_100163074(v21, type metadata accessor for FindMissingMessages);
    sub_100163074((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
    swift_bridgeObjectRelease_n();
    sub_100163074(v66, type metadata accessor for FindMissingMessages);

    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

uint64_t sub_10015A824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (**a3)(char *, uint64_t, uint64_t)@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v89 = a2;
  uint64_t v90 = a4;
  uint64_t v97 = a5;
  unsigned int v98 = a3;
  uint64_t v88 = a1;
  uint64_t v101 = sub_10000566C(&qword_100709E60);
  uint64_t v87 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v100 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Missing = type metadata accessor for FindMissingMessages.CommandID(0);
  uint64_t v86 = *(void *)(Missing - 8);
  uint64_t v8 = __chkstk_darwin(Missing);
  uint64_t v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v83 - v11;
  uint64_t v13 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v13 - 8);
  uint64_t v92 = (uint64_t)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000566C(&qword_100709E30);
  uint64_t v93 = *(void *)(v15 - 8);
  uint64_t v94 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v99 = (uint64_t)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v85 = (uint64_t)&v83 - v18;
  uint64_t v19 = sub_10000566C(&qword_100709E38);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  long long v22 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v95 = (uint64_t)&v83 - v23;
  uint64_t v24 = sub_10000566C(&qword_10070DEC0);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10000566C(&qword_10070DEC8);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v84 = (char *)&v83 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  int64_t v33 = (char *)&v83 - v32;
  __chkstk_darwin(v31);
  char v35 = (char *)&v83 - v34;
  Missinguint64_t Messages = (int *)type metadata accessor for FindMissingMessages(0);
  uint64_t v36 = MissingMessages[18];
  uint64_t v96 = v6;
  int v37 = (unint64_t *)(v6 + v36);
  uint64_t v38 = v37[3];
  if (v38)
  {
    uint64_t v39 = v98;
    sub_10016812C(v88, v89, (uint64_t)v98, *v37, v37[1] & 0xFFFFFFFF00000101, v37[2] | ((HIDWORD(v37[2]) & 1) << 32), v38, v26);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) != 1)
    {
      uint64_t v40 = *(int *)(v27 + 48);
      uint64_t v41 = (uint64_t)&v35[v40];
      uint64_t v42 = (uint64_t)&v26[v40];
      uint64_t v43 = v97;
      uint64_t v44 = *(void *)v26;
      char v45 = v26[8];
      *(void *)char v35 = v44;
      v35[8] = v45;
      sub_100165A5C(v42, (uint64_t)&v35[v40], type metadata accessor for ClientCommand);
      uint64_t v46 = sub_10000566C(&qword_10070DED0);
      uint64_t v47 = v43 + *(int *)(v46 + 48);
      uint64_t v48 = (uint64_t)&v33[*(int *)(v27 + 48)];
      *(void *)int64_t v33 = v44;
      v33[8] = v45;
      sub_10016300C(v41, v48, type metadata accessor for ClientCommand);
      *(void *)uint64_t v43 = v44;
      *(unsigned char *)(v43 + 8) = v45;
      swift_storeEnumTagMultiPayload();
      uint64_t v49 = (uint64_t)&v84[*(int *)(v27 + 48)];
      sub_100165A5C(v41, v49, type metadata accessor for ClientCommand);
      sub_100165A5C(v49, v47, type metadata accessor for ClientCommand);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v43, 0, 1, v46);
      return sub_100163074(v48, type metadata accessor for ClientCommand);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v26, 1, 1, v27);
    uint64_t v39 = v98;
  }
  sub_100007A48((uint64_t)v26, &qword_10070DEC0);
  char v51 = sub_100164DE0((uint64_t)v39);
  sub_10001FC6C();
  sub_1005E3680();
  uint64_t v52 = v51[2];
  uint64_t v53 = v97;
  if (v52)
  {
    uint64_t v54 = (uint64_t)v51 + ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80));
    uint64_t v55 = *(void *)(v86 + 72);
    unsigned int v98 = (void (**)(char *, uint64_t, uint64_t))(v87 + 16);
    uint64_t v90 = v51;
    swift_bridgeObjectRetain();
    uint64_t v56 = v100;
    do
    {
      sub_10016300C(v54, (uint64_t)v12, type metadata accessor for FindMissingMessages.CommandID);
      sub_10016300C((uint64_t)v12, (uint64_t)v10, type metadata accessor for FindMissingMessages.CommandID);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_100163074((uint64_t)v10, type metadata accessor for FindMissingMessages.CommandID);
      }
      else
      {
        uint64_t v57 = (uint64_t)v10;
        os_log_t v58 = v12;
        int v59 = v10;
        uint64_t v60 = v99;
        sub_10001FDF0(v57, v99, &qword_100709E30);
        (*v98)(v56, v60, v101);
        sub_1005E3670();
        uint64_t v61 = v60;
        uint64_t v10 = v59;
        uint64_t v12 = v58;
        sub_100007A48(v61, &qword_100709E30);
      }
      sub_100163074((uint64_t)v12, type metadata accessor for FindMissingMessages.CommandID);
      v54 += v55;
      --v52;
    }
    while (v52);
    swift_bridgeObjectRelease();
    uint64_t v53 = v97;
  }
  uint64_t v62 = v95;
  sub_10001FDF0((uint64_t)v22, v95, &qword_100709E38);
  swift_bridgeObjectRelease();
  uint64_t v64 = MissingMessages;
  uint64_t v63 = v92;
  uint64_t v65 = v96;
  uint64_t v66 = v96 + MissingMessages[11];
  uint64_t v67 = *(void *)v66;
  unint64_t v68 = *(unsigned int *)(v66 + 8) | ((unint64_t)*(unsigned __int8 *)(v66 + 12) << 32);
  unsigned __int8 v69 = *(unsigned char *)(v66 + 13);
  uint64_t v70 = *(unsigned int *)(v66 + 16);
  LOBYTE(v66) = *(unsigned char *)(v66 + 20);
  uint64_t v71 = v96 + MissingMessages[9];
  unsigned __int8 v104 = v69;
  char v103 = v66;
  sub_10016DD64(v62, v71, v67, v68 | ((unint64_t)v69 << 40), v70 | ((unint64_t)v66 << 32), v92);
  uint64_t v73 = v93;
  uint64_t v72 = v94;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v63, 1, v94) == 1)
  {
    sub_100007A48(v62, &qword_100709E38);
    sub_100007A48(v63, &qword_10070A000);
    uint64_t v74 = sub_10000566C(&qword_10070DED0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v53, 1, 1, v74);
  }
  else
  {
    uint64_t v75 = v85;
    sub_10001FDF0(v63, v85, &qword_100709E30);
    sub_10000566C(&qword_10070CA08);
    uint64_t v76 = swift_allocBox();
    uint64_t v78 = v77;
    sub_1000079E4(v75, v77, &qword_100709E30);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v73 + 56))(v78, 0, 1, v72);
    unint64_t v79 = v76 | 0xA000000000000000;
    uint64_t v80 = sub_10000566C(&qword_10070DED0);
    uint64_t v81 = (unint64_t *)(v53 + *(int *)(v80 + 48));
    sub_1000079E4(v75, v53, &qword_100709E30);
    swift_storeEnumTagMultiPayload();
    if (*(unsigned char *)(v65 + v64[12] + 1) == 1)
    {
      *uint64_t v81 = v79;
    }
    else
    {
      sub_10000566C(&qword_10070CA10);
      type metadata accessor for SearchReturnOption();
      uint64_t v82 = swift_allocObject();
      *(_OWORD *)(v82 + 16) = xmmword_1005F6670;
      swift_storeEnumTagMultiPayload();
      *uint64_t v81 = v79;
      v81[1] = v82;
    }
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    sub_100007A48(v75, &qword_100709E30);
    sub_100007A48(v62, &qword_100709E38);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v53, 0, 1, v80);
  }
}

uint64_t sub_10015B208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v105 = sub_10000566C(&qword_10070A378);
  __chkstk_darwin(v105);
  unsigned int v106 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v99 = *(void *)(v110 - 8);
  uint64_t v12 = __chkstk_darwin(v110);
  uint64_t v96 = (uint64_t)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v97 = (unint64_t)&v89 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v111 = (uint64_t *)((char *)&v89 - v17);
  __chkstk_darwin(v16);
  uint64_t v112 = (uint64_t)&v89 - v18;
  uint64_t v19 = sub_10000566C(&qword_10070DEB0);
  __chkstk_darwin(v19 - 8);
  unsigned __int8 v104 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Missing = type metadata accessor for FindMissingMessages.CommandID(0);
  uint64_t v102 = *(void *)(Missing - 8);
  uint64_t v103 = Missing;
  uint64_t v22 = __chkstk_darwin(Missing);
  uint64_t v101 = (uint64_t)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v100 = (uint64_t)&v89 - v24;
  uint64_t v107 = type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin(v107);
  uint64_t v26 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10000566C(&qword_10070A2D0);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)&v89 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_10000566C(&qword_100709E38);
  uint64_t v30 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v108 = (uint64_t)&v89 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  Missinguint64_t Messages = type metadata accessor for FindMissingMessages(0);
  uint64_t v32 = *(int *)(MissingMessages + 72);
  uint64_t v109 = v5;
  if (*(void *)(v5 + v32 + 24)) {
    sub_100168DD4(a1, a2, a3, a4, a5);
  }
  uint64_t v33 = a1;
  uint64_t v98 = a5;
  uint64_t v34 = sub_100165B2C(2, a4);
  uint64_t v35 = v34[2];
  if (!v35)
  {
LABEL_7:
    return swift_bridgeObjectRelease();
  }
  uint64_t v95 = a4;
  uint64_t v36 = 0;
  while ((sub_100165D24(*((_DWORD *)v34 + v36 + 8), a2, a3) & 1) == 0)
  {
    if (v35 == ++v36) {
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v38 = v109;
  uint64_t v39 = (unsigned __int8 *)(v109 + *(int *)(MissingMessages + 48));
  __int16 v40 = *v39;
  if (v39[1]) {
    __int16 v41 = 256;
  }
  else {
    __int16 v41 = 0;
  }
  uint64_t v42 = v33;
  sub_1001DE688(v41 | v40, (uint64_t)v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v29, 1, v114) == 1)
  {
    uint64_t v43 = &qword_10070A2D0;
    uint64_t v44 = (uint64_t)v29;
    return sub_100007A48(v44, v43);
  }
  uint64_t v45 = v108;
  sub_10001FDF0((uint64_t)v29, v108, &qword_100709E38);
  sub_10016300C(v42, (uint64_t)v26, type metadata accessor for UntaggedResponse);
  if (swift_getEnumCaseMultiPayload() != 12)
  {
    sub_100163074((uint64_t)v26, type metadata accessor for UntaggedResponse);
    uint64_t v65 = (uint64_t)v106;
    uint64_t v50 = MissingMessages;
    uint64_t v49 = v114;
    goto LABEL_27;
  }
  uint64_t v46 = *(void *)v26;
  uint64_t v47 = (void *)*((void *)v26 + 1);
  uint64_t v48 = *((void *)v26 + 2);
  uint64_t v107 = *((void *)v26 + 3);
  int v94 = v26[32];
  uint64_t v91 = *((void *)v26 + 5);
  uint64_t v50 = MissingMessages;
  uint64_t v49 = v114;
  uint64_t v52 = v103;
  uint64_t v51 = (uint64_t)v104;
  uint64_t v92 = v48;
  if (!v47)
  {
LABEL_44:
    uint64_t v78 = v102;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56))(v51, 1, 1, v52);
    goto LABEL_45;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v53._countAndFlagsBits = v46;
  v53._object = v47;
  IMAP2Protocol::Tag_optional v118 = Tag.init(_:)(v53);
  if (v118.is_nil)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_43:
    sub_1000E8770(v46, (uint64_t)v47);
    goto LABEL_44;
  }
  uint64_t v89 = v46;
  unint64_t v54 = *(void *)(a2 + 16);
  if (!v54)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_42:
    uint64_t v46 = v89;
    goto LABEL_43;
  }
  unsigned int connectionIdentifier = v118.value.connectionIdentifier;
  uint64_t v90 = HIDWORD(*(void *)&v118.value);
  uint64_t v55 = a2 + ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80));
  uint64_t v56 = *(void *)(v99 + 72);
  swift_bridgeObjectRetain();
  unint64_t v57 = 0;
  int v59 = v111;
  uint64_t v58 = v112;
  while (1)
  {
    sub_10016300C(v55, v58, type metadata accessor for TaskHistory.Running);
    sub_10016300C(v58, (uint64_t)v59, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    swift_bridgeObjectRetain();
    sub_100163074((uint64_t)v59, type metadata accessor for TaskHistory.Running);
LABEL_21:
    uint64_t v58 = v112;
    sub_100163074(v112, type metadata accessor for TaskHistory.Running);
    swift_bridgeObjectRelease();
    ++v57;
    v55 += v56;
    if (v54 == v57) {
      goto LABEL_25;
    }
  }
  uint64_t v60 = *v59;
  uint64_t v61 = sub_10000566C(&qword_10070B6A0);
  uint64_t v62 = (char *)v111 + *(int *)(v61 + 64);
  swift_bridgeObjectRetain();
  uint64_t v63 = (uint64_t)v62;
  int v59 = v111;
  sub_100163074(v63, type metadata accessor for ClientCommand);
  unint64_t v64 = CommandID.tag.getter(v60);
  if (__PAIR64__(HIDWORD(v64), v64) != __PAIR64__(v90, connectionIdentifier)) {
    goto LABEL_21;
  }
  sub_100163074(v112, type metadata accessor for TaskHistory.Running);
  swift_bridgeObjectRelease();
  if (v54 == v57)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v50 = MissingMessages;
    uint64_t v49 = v114;
    uint64_t v52 = v103;
    uint64_t v51 = (uint64_t)v104;
    uint64_t v45 = v108;
    goto LABEL_42;
  }
  if (v57 >= v54)
  {
    __break(1u);
    goto LABEL_56;
  }
  unint64_t v54 = v97;
  sub_10016300C(v55, v97, type metadata accessor for TaskHistory.Running);
  uint64_t v55 = v96;
  sub_10016300C(v54, v96, type metadata accessor for TaskHistory.Running);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v52 = v103;
  uint64_t v51 = (uint64_t)v104;
  uint64_t v45 = v108;
  if (EnumCaseMultiPayload == 1)
  {
LABEL_56:
    sub_100163074(v55, type metadata accessor for TaskHistory.Running);
    goto LABEL_57;
  }
  uint64_t v84 = *(void *)v55;
  uint64_t v85 = v55;
  int v86 = *(_DWORD *)(v55 + 8);
  uint64_t v87 = sub_10000566C(&qword_10070B6A0);
  sub_100163074(v85 + *(int *)(v87 + 64), type metadata accessor for ClientCommand);
  unint64_t v88 = CommandID.tag.getter(v84);
  uint64_t v50 = MissingMessages;
  if (__PAIR64__(HIDWORD(v88), v88) != __PAIR64__(v90, connectionIdentifier))
  {
LABEL_57:
    uint64_t result = sub_100163074(v54, type metadata accessor for TaskHistory.Running);
    __break(1u);
    return result;
  }
  sub_100163074(v54, type metadata accessor for TaskHistory.Running);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v46 = v89;
  sub_1000E8770(v89, (uint64_t)v47);
  sub_100159740(v86, v95, v51);
  uint64_t v49 = v114;
  uint64_t v78 = v102;
LABEL_45:
  sub_1000E8770(v46, (uint64_t)v47);
  swift_bridgeObjectRelease();
  int v79 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v51, 1, v52);
  uint64_t v65 = (uint64_t)v106;
  if (v79 == 1)
  {
    sub_100007A48(v45, &qword_100709E38);
    uint64_t v43 = &qword_10070DEB0;
    uint64_t v44 = v51;
    return sub_100007A48(v44, v43);
  }
  uint64_t v80 = v100;
  sub_100165A5C(v51, v100, type metadata accessor for FindMissingMessages.CommandID);
  uint64_t v81 = v80;
  uint64_t v82 = v101;
  sub_100165A5C(v81, v101, type metadata accessor for FindMissingMessages.CommandID);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100007A48(v45, &qword_100709E38);
    return sub_100163074(v82, type metadata accessor for FindMissingMessages.CommandID);
  }
  sub_100163074(v82, type metadata accessor for FindMissingMessages.CommandID);
LABEL_27:
  sub_1000079E4(v45, v65, &qword_100709E38);
  uint64_t v66 = MessageIdentifierSet.startIndex.getter(v49);
  uint64_t v68 = v67;
LABEL_29:
  while (v66 != MessageIdentifierSet.endIndex.getter(v49) || v68 != v69)
  {
    MessageIdentifierSet.subscript.getter();
    unsigned int v70 = v116;
    MessageIdentifierSet.index(_:offsetBy:)();
    uint64_t v66 = v71;
    uint64_t v68 = v72;
    uint64_t v73 = *(void *)(v38 + *(int *)(v50 + 44));
    uint64_t v74 = *(void *)(v73 + 16);
    if (v74)
    {
      uint64_t v75 = (unsigned int *)(v73 + 36);
      while (v70 < *(v75 - 1) || *v75 < v70)
      {
        v75 += 3;
        if (!--v74) {
          goto LABEL_29;
        }
      }
      unsigned int v115 = v70;
      MessageIdentifierSet.insert(_:)();
    }
  }
  uint64_t v77 = (uint64_t *)(v65 + *(int *)(v105 + 36));
  uint64_t *v77 = v66;
  v77[1] = v68;
  sub_100007A48(v65, &qword_10070A378);
  uint64_t v43 = &qword_100709E38;
  uint64_t v44 = v45;
  return sub_100007A48(v44, v43);
}

uint64_t sub_10015BD74(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t Missing = type metadata accessor for FindMissingMessages.CommandID(0);
  __chkstk_darwin(Missing);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1001DBDBC(a7, a2, a3, a4, a5);
  if (!v7)
  {
    uint64_t v18 = v20[1];
    sub_10016300C(a1, (uint64_t)v16, type metadata accessor for FindMissingMessages.CommandID);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t result = type metadata accessor for FindMissingMessages(0);
      uint64_t v19 = v18 + *(int *)(result + 72);
      if (*(void *)(v19 + 24))
      {
        if (v16[8])
        {
          *(_DWORD *)(v19 + 16) = 0;
          *(unsigned char *)(v19 + 20) = 1;
        }
        else if (*(unsigned char *)(v19 + 20))
        {
          *(_DWORD *)(v19 + 16) = 1;
          *(unsigned char *)(v19 + 20) = 0;
        }
      }
    }
    else
    {
      return sub_100163074((uint64_t)v16, type metadata accessor for FindMissingMessages.CommandID);
    }
  }
  return result;
}

uint64_t sub_10015BEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v9 - 8);
  uint64_t v65 = (uint64_t)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000566C(&qword_100709E30);
  uint64_t v63 = *(void *)(v11 - 8);
  uint64_t v64 = v11;
  __chkstk_darwin(v11);
  uint64_t v61 = (uint64_t)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v66 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v56 - v17;
  Missinguint64_t Messages = type metadata accessor for FindMissingMessages(0);
  if (!*(void *)(v4 + *(int *)(MissingMessages + 72) + 24)
    || (uint64_t v19 = sub_10016A0EC(*(void *)(v4 + 64), *(void *)(v4 + 72), a1, a2, a3, a4),
        (~v20 & 0xF000000000000007) == 0))
  {
    uint64_t v67 = a2;
    uint64_t v59 = v4;
    uint64_t v21 = sub_1001652FC(1, a4);
    uint64_t v22 = v21[2];
    if (v22)
    {
      uint64_t v23 = 0;
      uint64_t v24 = v67;
      while ((sub_1001667A8(*((_DWORD *)v21 + v23 + 8), a1, v24) & 1) == 0)
      {
        if (v22 == ++v23) {
          goto LABEL_14;
        }
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = v67;
LABEL_14:
      swift_bridgeObjectRelease();
      uint64_t v31 = sub_1001054AC(0, 1, a4);
      uint64_t v32 = v31[2];
      if (v32)
      {
        uint64_t v33 = 0;
        uint64_t v60 = v31 + 4;
        uint64_t v34 = *(void *)(v24 + 16);
        uint64_t v58 = v32;
        v56[1] = v31;
        uint64_t v57 = v34;
        do
        {
          if (v34)
          {
            uint64_t v35 = v24;
            int v36 = *((_DWORD *)v60 + v33);
            uint64_t v37 = v66;
            uint64_t v38 = v35 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80));
            swift_bridgeObjectRetain_n();
            uint64_t v39 = *(void *)(v37 + 72);
            uint64_t v40 = v34;
            while (1)
            {
              sub_10016300C(v38, (uint64_t)v18, type metadata accessor for TaskHistory.Previous);
              sub_10016300C((uint64_t)v18, (uint64_t)v16, type metadata accessor for TaskHistory.Previous);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                int v41 = *((_DWORD *)v16 + 2);
                sub_10007C4A4(*(void *)v16);
                if (v41 == v36)
                {
                  sub_100163074((uint64_t)v18, type metadata accessor for TaskHistory.Previous);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  return 0;
                }
              }
              else
              {
                sub_100163074((uint64_t)v16, type metadata accessor for TaskHistory.Previous);
              }
              sub_100163074((uint64_t)v18, type metadata accessor for TaskHistory.Previous);
              v38 += v39;
              if (!--v40)
              {
                uint64_t v24 = v67;
                swift_bridgeObjectRelease_n();
                uint64_t v34 = v57;
                uint64_t v32 = v58;
                break;
              }
            }
          }
          ++v33;
        }
        while (v33 != v32);
      }
      swift_bridgeObjectRelease();
      uint64_t v42 = v59;
      uint64_t v43 = v64;
      uint64_t v44 = v65;
      uint64_t v45 = v63;
      uint64_t v46 = v59 + *(int *)(MissingMessages + 44);
      uint64_t v47 = *(void *)v46;
      char v48 = *(unsigned char *)(v46 + 13);
      LOBYTE(v46) = *(unsigned char *)(v46 + 20);
      char v69 = v48;
      char v68 = v46;
      sub_10016E4E0(v47, v65);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v44, 1, v43) != 1)
      {
        uint64_t v50 = v61;
        sub_10001FDF0(v44, v61, &qword_100709E30);
        uint64_t v51 = v42;
        uint64_t v52 = sub_10000566C(&qword_10070CC50);
        swift_allocBox();
        uint64_t v54 = (uint64_t)v53 + *(int *)(v52 + 48);
        uint64_t v55 = *(void *)(v51 + 72);
        *Swift::String v53 = *(void *)(v51 + 64);
        v53[1] = v55;
        sub_10001FDF0(v50, v54, &qword_100709E30);
        swift_bridgeObjectRetain();
        return 0;
      }
      sub_100007A48(v44, &qword_10070A000);
    }
    return 0;
  }
  uint64_t v25 = v19;
  unint64_t v26 = v20;
  uint64_t v27 = a2;
  uint64_t v28 = sub_1001054AC(0, 1, a4);
  uint64_t v29 = v28[2];
  if (v29)
  {
    uint64_t v30 = 0;
    while ((sub_1001667A8(*((_DWORD *)v28 + v30 + 8), a1, v27) & 1) == 0)
    {
      if (v29 == ++v30) {
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    sub_1000E88F8(v25, v26);
    return 0;
  }
LABEL_12:
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_10015C46C(unint64_t a1, char a2)
{
  uint64_t v5 = sub_10000566C(&qword_100709E38);
  uint64_t result = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    uint64_t result = type metadata accessor for FindMissingMessages(0);
    uint64_t v9 = v2 + *(int *)(result + 72);
    unint64_t v10 = *(void *)(v9 + 24);
    if (v10)
    {
      if ((a1 & 0x8000000000000000) == 0 && *(void *)(v10 + 16) > a1)
      {
        sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v9 + 24) = v10;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_100093570(v10);
          unint64_t v10 = result;
          *(void *)(v9 + 24) = result;
        }
        if (*(void *)(v10 + 16) <= a1)
        {
          __break(1u);
        }
        else
        {
          _s20GrowWindowOfInterestV6ResultVMa();
          sub_10016AA9C((uint64_t)v8);
          return sub_100007A48((uint64_t)v8, &qword_100709E38);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10015C5D8(long long *a1, void *a2)
{
  uint64_t v72 = a2;
  uint64_t v4 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v65 = (uint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s15MissingMessagesO10NewMissingVMa(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v71 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_100709E38);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = v11;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v56 - v13;
  uint64_t v62 = (uint64_t)&v56 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v56 - v16;
  uint64_t v63 = (uint64_t)&v56 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v56 - v18;
  uint64_t v66 = (uint64_t)&v56 - v18;
  uint64_t v20 = type metadata accessor for MessageBatches(0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = v22;
  uint64_t Missing = type metadata accessor for FindMissingMessages.Completed(0);
  __chkstk_darwin(Missing - 8);
  uint64_t v70 = (uint64_t)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  Missinguint64_t Messages = (int *)type metadata accessor for FindMissingMessages(0);
  int v68 = *(unsigned __int8 *)(v2 + MissingMessages[14]);
  char v69 = (uint64_t *)(v2 + MissingMessages[9]);
  sub_10016300C((uint64_t)v69, (uint64_t)v22, type metadata accessor for MessageBatches);
  uint64_t v26 = v2 + MissingMessages[16];
  sub_1000079E4(v26, (uint64_t)v19, &qword_100709E38);
  sub_1000079E4(v26, (uint64_t)v17, &qword_100709E38);
  sub_1000079E4(v2 + MissingMessages[17], (uint64_t)v14, &qword_100709E38);
  sub_1000079E4(v2 + MissingMessages[15], (uint64_t)v11, &qword_100709E38);
  uint64_t v27 = v2 + MissingMessages[13];
  uint64_t v60 = *(void *)v27;
  int v28 = *(unsigned __int8 *)(v27 + 8);
  uint64_t v29 = MissingMessages[11];
  uint64_t v30 = v2 + MissingMessages[10];
  unint64_t v57 = *(void *)v30;
  int v58 = *(unsigned __int8 *)(v30 + 8);
  int v59 = v28;
  uint64_t v31 = v2 + v29;
  uint64_t v32 = v2;
  uint64_t v64 = v2;
  uint64_t v33 = *(void *)(v2 + v29);
  unint64_t v34 = *(unsigned int *)(v2 + v29 + 8) | ((unint64_t)*(unsigned __int8 *)(v2 + v29 + 12) << 32);
  unsigned __int8 v35 = *(unsigned char *)(v2 + v29 + 13);
  uint64_t v36 = *(unsigned int *)(v31 + 16);
  LOBYTE(v11) = *(unsigned char *)(v31 + 20);
  uint64_t v37 = (long long *)(v32 + MissingMessages[18]);
  long long v56 = *v37;
  uint64_t v38 = *((void *)v37 + 2);
  uint64_t v39 = *((void *)v37 + 3);
  uint64_t v40 = v65;
  sub_10016300C((uint64_t)v72, v65, type metadata accessor for MailboxTaskLogger);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v74) = v35;
  char v73 = (char)v11;
  sub_10015CA70(v63, v62, (uint64_t)v61, v60, v59, v57, v58, v33, v71, v34 | ((unint64_t)v35 << 40), v36 | ((unint64_t)v11 << 32), v56, *((uint64_t *)&v56 + 1), v38, v39, v40);
  long long v41 = a1[13];
  long long v86 = a1[12];
  long long v87 = v41;
  long long v42 = a1[15];
  long long v88 = a1[14];
  long long v89 = v42;
  long long v43 = a1[9];
  long long v82 = a1[8];
  long long v83 = v43;
  long long v44 = a1[11];
  long long v84 = a1[10];
  long long v85 = v44;
  long long v45 = a1[5];
  long long v78 = a1[4];
  long long v79 = v45;
  long long v46 = a1[7];
  long long v80 = a1[6];
  long long v81 = v46;
  long long v47 = a1[1];
  long long v74 = *a1;
  long long v75 = v47;
  long long v48 = a1[3];
  long long v76 = a1[2];
  long long v77 = v48;
  LOBYTE(v40) = BYTE1(v75);
  uint64_t v49 = *((void *)&v75 + 1);
  LOBYTE(v33) = BYTE10(v74);
  uint64_t v50 = *((void *)&v76 + 1);
  uint64_t v51 = v48;
  LOBYTE(v39) = v76;
  LOBYTE(v34) = v75;
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_1000D8938();
  unint64_t v53 = sub_1000D8D74(v34, v40 & 1, v49, v39, v50, v33, v51, v52);
  uint64_t v54 = v70;
  sub_10015D908(v68, (uint64_t)v67, v66, v71, v53 & 0x101010101FFFF01, v70);
  sub_100165428(a1, *(void **)(v64 + 88), *(_DWORD *)(v64 + 96), *v69, v54, v72);
  return sub_100163074(v54, type metadata accessor for FindMissingMessages.Completed);
}

uint64_t sub_10015CA70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, unint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v133 = a8;
  int v122 = a7;
  unint64_t v132 = a6;
  LODWORD(v119) = a5;
  uint64_t v125 = a4;
  uint64_t v141 = a3;
  uint64_t v131 = a9;
  uint64_t v134 = a16;
  uint64_t v136 = a15;
  uint64_t v121 = a14;
  uint64_t v139 = a12;
  uint64_t v140 = a13;
  unint64_t v129 = a10;
  uint64_t v130 = a11;
  os_log_t v116 = (os_log_t)type metadata accessor for MailboxTaskLogger(0);
  uint64_t v18 = __chkstk_darwin(v116);
  uint64_t v128 = (uint64_t)&v112 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v118 = (uint64_t)&v112 - v21;
  __chkstk_darwin(v20);
  os_log_t v115 = (os_log_t)((char *)&v112 - v22);
  uint64_t v124 = sub_1005E0ED0();
  uint64_t v120 = *(void *)(v124 - 8);
  uint64_t v23 = __chkstk_darwin(v124);
  uint64_t v117 = (char *)&v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v112 - v25;
  uint64_t v27 = sub_10000566C(&qword_10070A9C0);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)&v112 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10000566C(&qword_100709E38);
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v127 = (uint64_t)&v112 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  unsigned __int8 v35 = (char *)&v112 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v38 = (char *)&v112 - v37;
  uint64_t v39 = __chkstk_darwin(v36);
  long long v41 = (char *)&v112 - v40;
  uint64_t v42 = __chkstk_darwin(v39);
  long long v44 = (char *)&v112 - v43;
  __chkstk_darwin(v42);
  long long v46 = (char *)&v112 - v45;
  uint64_t v123 = a2;
  MessageIdentifierSet.union(_:)();
  uint64_t v137 = v46;
  MessageIdentifierSet.union(_:)();
  uint64_t v135 = v44;
  uint64_t v47 = v136;
  sub_100007A48((uint64_t)v44, &qword_100709E38);
  uint64_t v138 = a1;
  if (v47)
  {
    swift_bridgeObjectRetain();
    uint64_t v48 = v121;
    sub_10016A384(v47, (uint64_t)v35);
    swift_bridgeObjectRelease();
    sub_10001FDF0((uint64_t)v35, (uint64_t)v38, &qword_100709E38);
    MessageIdentifierSet.union(_:)();
    sub_100007A48((uint64_t)v38, &qword_100709E38);
    LODWORD(v125) = 0;
    uint64_t v124 = 0;
    unsigned __int8 v49 = 1;
    uint64_t v50 = v123;
LABEL_10:
    char v81 = v122;
    goto LABEL_11;
  }
  uint64_t v51 = (uint64_t)v29;
  uint64_t v113 = v26;
  uint64_t v52 = v120;
  uint64_t v53 = v124;
  uint64_t v114 = v30;
  uint64_t v54 = v41;
  uint64_t v55 = v125;
  if ((v119 & 1) != 0 || (MessageIdentifierSet.count.getter(), v56 <= v55))
  {
    sub_1000079E4(v138, (uint64_t)v41, &qword_100709E38);
    uint64_t v124 = 0;
    LODWORD(v125) = 1;
    unsigned __int8 v49 = 1;
    uint64_t v50 = v123;
    uint64_t v48 = v121;
    goto LABEL_10;
  }
  uint64_t v57 = (uint64_t)v135;
  sub_10006654C(v55, (uint64_t)v135);
  MessageIdentifierSet.intersection(_:)(v138, v114);
  sub_100007A48(v57, &qword_100709E38);
  unint64_t v119 = sub_1000702CC();
  if ((v119 & 0x100000000) != 0
    || (MessageIdentifierSet.ranges.getter(v51),
        unint64_t v58 = sub_100070018(),
        char v60 = v59,
        sub_100007A48(v51, &qword_10070A9C0),
        (v60 & 1) != 0))
  {
    uint64_t v90 = v117;
    uint64_t v91 = v134;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v117, v134, v53);
    uint64_t v92 = v91;
    uint64_t v93 = v118;
    sub_10016300C(v92, v118, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    int v94 = sub_1005E0EB0();
    os_log_type_t v95 = sub_1005E25C0();
    int v96 = v95;
    if (os_log_type_enabled(v94, v95))
    {
      uint64_t v97 = swift_slowAlloc();
      os_log_t v115 = v94;
      LODWORD(v119) = v96;
      uint64_t v98 = v97;
      uint64_t v146 = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v98 = 68159491;
      LODWORD(v144) = 2;
      sub_1005E2960();
      *(_WORD *)(v98 + 8) = 256;
      uint64_t v99 = v93 + SHIDWORD(v116[2].isa);
      LOBYTE(v144) = *(unsigned char *)v99;
      sub_1005E2960();
      *(_WORD *)(v98 + 11) = 2082;
      uint64_t v100 = *(void *)(v99 + 8);
      unint64_t v101 = *(void *)(v99 + 16);
      swift_bridgeObjectRetain();
      uint64_t v144 = sub_1000C6914(v100, v101, (uint64_t *)&v146);
      sub_1005E2960();
      long long v41 = v54;
      swift_bridgeObjectRelease();
      *(_WORD *)(v98 + 21) = 1040;
      LODWORD(v144) = 2;
      sub_1005E2960();
      *(_WORD *)(v98 + 27) = 512;
      LOWORD(v144) = *(_WORD *)(v99 + 24);
      sub_1005E2960();
      *(_WORD *)(v98 + 31) = 2160;
      uint64_t v144 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v98 + 41) = 2085;
      int v102 = *(_DWORD *)(v99 + 40);
      uint64_t v144 = *(void *)(v99 + 32);
      int v145 = v102;
      swift_bridgeObjectRetain();
      uint64_t v103 = sub_1005E1CC0();
      uint64_t v144 = sub_1000C6914(v103, v104, (uint64_t *)&v146);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100163074(v118, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v98 + 51) = 2048;
      uint64_t v144 = v125;
      sub_1005E2960();
      os_log_t v105 = v115;
      _os_log_impl((void *)&_mh_execute_header, v115, (os_log_type_t)v119, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Limiting server UIDs to %ld UIDs.", (uint8_t *)v98, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v52 + 8))(v117, v124);
    }
    else
    {
      sub_100163074(v93, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v52 + 8))(v90, v53);
    }
    uint64_t v50 = v123;
    char v81 = v122;
    uint64_t v68 = v121;
  }
  else
  {
    uint64_t v61 = v52;
    uint64_t v62 = v113;
    uint64_t v63 = v134;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v113, v134, v53);
    os_log_t v64 = v115;
    sub_10016300C(v63, (uint64_t)v115, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v65 = sub_1005E0EB0();
    os_log_type_t v66 = sub_1005E25C0();
    LODWORD(v118) = v66;
    BOOL v67 = os_log_type_enabled(v65, v66);
    uint64_t v68 = v121;
    if (v67)
    {
      unint64_t v112 = HIDWORD(v58);
      uint64_t v69 = swift_slowAlloc();
      uint64_t v117 = (char *)swift_slowAlloc();
      uint64_t v146 = v117;
      *(_DWORD *)uint64_t v69 = 68159747;
      LODWORD(v144) = 2;
      sub_1005E2960();
      *(_WORD *)(v69 + 8) = 256;
      uint64_t v70 = (char *)v64 + SHIDWORD(v116[2].isa);
      LOBYTE(v144) = *v70;
      sub_1005E2960();
      *(_WORD *)(v69 + 11) = 2082;
      os_log_t v116 = v65;
      uint64_t v71 = *((void *)v70 + 1);
      unint64_t v72 = *((void *)v70 + 2);
      swift_bridgeObjectRetain();
      uint64_t v144 = sub_1000C6914(v71, v72, (uint64_t *)&v146);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v69 + 21) = 1040;
      LODWORD(v144) = 2;
      sub_1005E2960();
      *(_WORD *)(v69 + 27) = 512;
      LOWORD(v144) = *((_WORD *)v70 + 12);
      sub_1005E2960();
      *(_WORD *)(v69 + 31) = 2160;
      uint64_t v144 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v69 + 41) = 2085;
      uint64_t v73 = *((void *)v70 + 4);
      int v74 = *((_DWORD *)v70 + 10);
      long long v41 = v54;
      uint64_t v144 = v73;
      int v145 = v74;
      swift_bridgeObjectRetain();
      uint64_t v75 = sub_1005E1CC0();
      uint64_t v144 = sub_1000C6914(v75, v76, (uint64_t *)&v146);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100163074((uint64_t)v64, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v69 + 51) = 2048;
      uint64_t v144 = v125;
      sub_1005E2960();
      *(_WORD *)(v69 + 61) = 2082;
      int v142 = v112;
      int v143 = v119;
      sub_100063E18();
      static MessageIdentifier.... infix(_:_:)();
      uint64_t v77 = sub_10000566C(&qword_10070A9B8);
      uint64_t v78 = MessageIdentifierRange.debugDescription.getter(v77);
      uint64_t v144 = sub_1000C6914(v78, v79, (uint64_t *)&v146);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      os_log_t v80 = v116;
      _os_log_impl((void *)&_mh_execute_header, v116, (os_log_type_t)v118, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Limiting server UIDs to %ld UIDs in range %{public}s.", (uint8_t *)v69, 0x47u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v120 + 8))(v113, v124);
    }
    else
    {
      sub_100163074((uint64_t)v64, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v53);
    }
    uint64_t v50 = v123;
    char v81 = v122;
  }
  uint64_t v106 = v114;
  uint64_t v48 = v68;
  uint64_t v107 = MessageIdentifierSet.startIndex.getter(v114);
  uint64_t v109 = v108;
  if (v107 == MessageIdentifierSet.endIndex.getter(v106) && v109 == v110)
  {
    LODWORD(v125) = 0;
    uint64_t v124 = 0;
    unsigned __int8 v49 = 1;
    uint64_t v47 = v136;
  }
  else
  {
    MessageIdentifierSet.subscript.getter();
    LODWORD(v125) = 0;
    unsigned __int8 v49 = 0;
    uint64_t v124 = v144;
    uint64_t v47 = v136;
  }
LABEL_11:
  uint64_t v126 = v41;
  int v82 = v81 & 1;
  uint64_t v83 = (uint64_t)v135;
  sub_1000079E4((uint64_t)v41, (uint64_t)v135, &qword_100709E38);
  uint64_t v84 = v50;
  uint64_t v85 = v50;
  uint64_t v86 = v127;
  sub_1000079E4(v84, v127, &qword_100709E38);
  uint64_t v87 = v134;
  uint64_t v88 = v128;
  sub_10016300C(v134, v128, type metadata accessor for MailboxTaskLogger);
  LOBYTE(v144) = BYTE5(v129) & 1;
  LOBYTE(v146) = BYTE4(v130) & 1;
  unint64_t v111 = v130 | ((unint64_t)(BYTE4(v130) & 1) << 32);
  sub_100160880(v83, v124 | ((unint64_t)v49 << 32), v125, v86, v132, v82, v133, v129 & 0xFFFFFFFFFFLL | (((v129 >> 40) & 1) << 40), v131, v111, SBYTE4(v111), v139, v140, v48, v47, v88);
  sub_100163074(v87, type metadata accessor for MailboxTaskLogger);
  sub_100007A48(v141, &qword_100709E38);
  sub_100007A48(v85, &qword_100709E38);
  sub_100007A48(v138, &qword_100709E38);
  sub_100007A48((uint64_t)v126, &qword_100709E38);
  return sub_100007A48((uint64_t)v137, &qword_100709E38);
}

uint64_t sub_10015D908@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v44 = a5;
  uint64_t v45 = a3;
  uint64_t v46 = a2;
  int v43 = a1;
  uint64_t v8 = sub_10000566C(&qword_10070A9C0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v42 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v41 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v41 - v14;
  *(_DWORD *)a6 = 0;
  *(unsigned char *)(a6 + 4) = 1;
  *(_DWORD *)(a6 + 8) = 0;
  *(unsigned char *)(a6 + 12) = 1;
  uint64_t Missing = (int *)type metadata accessor for FindMissingMessages.Completed(0);
  uint64_t v17 = a6 + Missing[8];
  *(_DWORD *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 4) = 1;
  uint64_t v18 = a6 + Missing[9];
  *(_DWORD *)uint64_t v18 = 0;
  long long v41 = (_DWORD *)v18;
  *(unsigned char *)(v18 + 4) = 1;
  sub_10000566C(&qword_100709E38);
  MessageIdentifierSet.ranges.getter((uint64_t)v15);
  unint64_t v19 = sub_100070018();
  char v21 = v20;
  sub_100007A48((uint64_t)v15, &qword_10070A9C0);
  unint64_t v22 = HIDWORD(v19);
  if (v21) {
    LODWORD(v22) = 0;
  }
  *(_DWORD *)a6 = v22;
  *(unsigned char *)(a6 + 4) = v21 & 1;
  MessageIdentifierSet.ranges.getter((uint64_t)v13);
  unint64_t v23 = sub_100070018();
  char v25 = v24;
  uint64_t result = sub_100007A48((uint64_t)v13, &qword_10070A9C0);
  int v27 = 0;
  if ((v25 & 1) == 0)
  {
    if (HIDWORD(v23) == 0xFFFFFFFF)
    {
      __break(1u);
      return result;
    }
    int v27 = HIDWORD(v23) + 1;
  }
  *(_DWORD *)(a6 + 8) = v27;
  *(unsigned char *)(a6 + 12) = v25 & 1;
  sub_10016300C(a4, a6 + Missing[6], _s15MissingMessagesO10NewMissingVMa);
  if (v43) {
    char v28 = 1;
  }
  else {
    char v28 = 2;
  }
  if ((v44 & 0xFF00) != 0) {
    char v28 = 0;
  }
  *(unsigned char *)(a6 + Missing[7]) = v28;
  uint64_t v29 = a4;
  uint64_t v30 = v46;
  unint64_t v31 = sub_100067F58();
  *(_DWORD *)uint64_t v17 = v31;
  *(unsigned char *)(v17 + 4) = BYTE4(v31) & 1;
  uint64_t v32 = v42;
  uint64_t v33 = v45;
  MessageIdentifierSet.ranges.getter(v42);
  unint64_t v34 = sub_100070018();
  char v36 = v35;
  sub_100007A48(v32, &qword_10070A9C0);
  unint64_t v37 = HIDWORD(v34);
  char v38 = v36 & 1;
  if (v36) {
    int v39 = 0;
  }
  else {
    int v39 = v37;
  }
  sub_100163074(v29, _s15MissingMessagesO10NewMissingVMa);
  sub_100007A48(v33, &qword_100709E38);
  uint64_t result = sub_100163074(v30, type metadata accessor for MessageBatches);
  uint64_t v40 = v41;
  *long long v41 = v39;
  *((unsigned char *)v40 + 4) = v38;
  return result;
}

uint64_t sub_10015DBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v120 = a5;
  uint64_t v132 = _s15MissingMessagesOMa(0);
  uint64_t v8 = __chkstk_darwin(v132);
  uint64_t v131 = (uint64_t)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v130 = (uint64_t)&v117 - v11;
  __chkstk_darwin(v10);
  uint64_t v138 = (uint64_t)&v117 - v12;
  uint64_t Missing = type metadata accessor for FindMissingMessages.Completed(0);
  uint64_t v136 = Missing;
  uint64_t v14 = __chkstk_darwin(Missing);
  uint64_t v122 = (uint64_t)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v117 - v16;
  uint64_t v127 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v18 = __chkstk_darwin(v127);
  uint64_t v121 = (uint64_t)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v134 = (uint64_t)&v117 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v126 = (uint64_t)&v117 - v23;
  __chkstk_darwin(v22);
  char v25 = (char *)&v117 - v24;
  uint64_t v26 = sub_1005E0ED0();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v133 = (char *)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v124 = (char *)&v117 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v128 = (char *)&v117 - v33;
  __chkstk_darwin(v32);
  char v35 = (char *)&v117 - v34;
  uint64_t v36 = a3 + *(int *)(Missing + 24);
  sub_10000566C(&qword_100709E60);
  uint64_t v129 = v36;
  char v37 = sub_1005E3630();
  uint64_t v137 = v26;
  uint64_t v135 = v27;
  if ((v37 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v35, a4, v26);
    uint64_t v123 = a4;
    sub_10016300C(a4, (uint64_t)v25, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v38 = (uint64_t)v17;
    sub_10016300C(a3, (uint64_t)v17, type metadata accessor for FindMissingMessages.Completed);
    int v39 = sub_1005E0EB0();
    os_log_type_t v40 = sub_1005E25C0();
    int v41 = v40;
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v119 = a3;
      uint64_t v43 = v42;
      uint64_t v125 = swift_slowAlloc();
      v141[0] = v125;
      *(_DWORD *)uint64_t v43 = 68159491;
      LODWORD(v139) = 2;
      LODWORD(v118) = v41;
      sub_1005E2960();
      *(_WORD *)(v43 + 8) = 256;
      uint64_t v44 = &v25[*(int *)(v127 + 20)];
      LOBYTE(v139) = *v44;
      sub_1005E2960();
      *(_WORD *)(v43 + 11) = 2082;
      os_log_t v117 = v39;
      uint64_t v45 = *((void *)v44 + 1);
      unint64_t v46 = *((void *)v44 + 2);
      swift_bridgeObjectRetain();
      uint64_t v139 = sub_1000C6914(v45, v46, v141);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 21) = 1040;
      LODWORD(v139) = 2;
      sub_1005E2960();
      *(_WORD *)(v43 + 27) = 512;
      LOWORD(v139) = *((_WORD *)v44 + 12);
      sub_1005E2960();
      *(_WORD *)(v43 + 31) = 2160;
      uint64_t v139 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v43 + 41) = 2085;
      int v47 = *((_DWORD *)v44 + 10);
      uint64_t v139 = *((void *)v44 + 4);
      int v140 = v47;
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_1005E1CC0();
      uint64_t v139 = sub_1000C6914(v48, v49, v141);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100163074((uint64_t)v25, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v43 + 51) = 2048;
      sub_10000566C(&qword_100709E38);
      MessageIdentifierSet.count.getter();
      uint64_t v51 = v50;
      sub_100163074(v38, type metadata accessor for FindMissingMessages.Completed);
      uint64_t v139 = v51;
      sub_1005E2960();
      os_log_t v52 = v117;
      _os_log_impl((void *)&_mh_execute_header, v117, (os_log_type_t)v118, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Adding %ld new UID(s).", (uint8_t *)v43, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      a3 = v119;
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v135 + 8))(v35, v137);
    }
    else
    {
      sub_100163074((uint64_t)v17, type metadata accessor for FindMissingMessages.Completed);
      sub_100163074((uint64_t)v25, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v27 + 8))(v35, v26);
    }
    a4 = v123;
  }
  uint64_t v125 = type metadata accessor for MailboxSyncState();
  uint64_t v53 = a1 + *(int *)(v125 + 68);
  uint64_t v55 = v138;
  sub_10016300C(v53, v138, _s15MissingMessagesOMa);
  sub_100072678(v129);
  uint64_t v54 = v130;
  sub_10016300C(v53, v130, _s15MissingMessagesOMa);
  LODWORD(v55) = sub_100074A7C(v54, v55);
  sub_100163074(v54, _s15MissingMessagesOMa);
  sub_10015EEB4(a4, v53);
  uint64_t v57 = v133;
  uint64_t v56 = v134;
  if ((*(unsigned char *)(a3 + 12) & 1) == 0)
  {
    unsigned int v58 = *(_DWORD *)(a3 + 8);
    if (*(unsigned char *)(a1 + 12)) {
      goto LABEL_11;
    }
    unsigned int v59 = *(_DWORD *)(a1 + 8);
    BOOL v60 = v59 >= v58;
    if (v59 > v58) {
      unsigned int v58 = *(_DWORD *)(a1 + 8);
    }
    if (!v60)
    {
LABEL_11:
      *(_DWORD *)(a1 + 8) = v58;
      *(unsigned char *)(a1 + 12) = 0;
      (*(void (**)(char *, uint64_t, uint64_t))(v135 + 16))(v128, a4, v137);
      uint64_t v61 = v126;
      sub_10016300C(a4, v126, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v62 = sub_1005E0EB0();
      os_log_type_t v63 = sub_1005E25C0();
      LODWORD(v129) = v63;
      if (os_log_type_enabled(v62, v63))
      {
        uint64_t v64 = swift_slowAlloc();
        uint64_t v118 = swift_slowAlloc();
        v141[0] = v118;
        *(_DWORD *)uint64_t v64 = 68159491;
        LODWORD(v139) = 2;
        sub_1005E2960();
        *(_WORD *)(v64 + 8) = 256;
        uint64_t v65 = *(int *)(v127 + 20);
        LODWORD(v119) = v55;
        uint64_t v55 = v61 + v65;
        LOBYTE(v139) = *(unsigned char *)(v61 + v65);
        sub_1005E2960();
        *(_WORD *)(v64 + 11) = 2082;
        uint64_t v130 = a1;
        uint64_t v123 = a4;
        uint64_t v66 = a3;
        uint64_t v67 = *(void *)(v55 + 8);
        unint64_t v68 = *(void *)(v55 + 16);
        swift_bridgeObjectRetain();
        uint64_t v139 = sub_1000C6914(v67, v68, v141);
        sub_1005E2960();
        a3 = v66;
        swift_bridgeObjectRelease();
        *(_WORD *)(v64 + 21) = 1040;
        LODWORD(v139) = 2;
        sub_1005E2960();
        *(_WORD *)(v64 + 27) = 512;
        LOWORD(v139) = *(_WORD *)(v55 + 24);
        sub_1005E2960();
        *(_WORD *)(v64 + 31) = 2160;
        uint64_t v139 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v64 + 41) = 2085;
        uint64_t v69 = *(void *)(v55 + 32);
        int v70 = *(_DWORD *)(v55 + 40);
        LOBYTE(v55) = v119;
        uint64_t v139 = v69;
        int v140 = v70;
        swift_bridgeObjectRetain();
        uint64_t v71 = sub_1005E1CC0();
        uint64_t v139 = sub_1000C6914(v71, v72, v141);
        a1 = v130;
        sub_1005E2960();
        uint64_t v57 = v133;
        swift_bridgeObjectRelease();
        sub_100163074(v126, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v64 + 51) = 1024;
        LODWORD(v139) = v58;
        a4 = v123;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v62, (os_log_type_t)v129, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Updating sync state next UID to %u.", (uint8_t *)v64, 0x39u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v56 = v134;
        swift_slowDealloc();
      }
      else
      {
        sub_100163074(v61, type metadata accessor for MailboxTaskLogger);
      }

      (*(void (**)(char *, uint64_t))(v135 + 8))(v128, v137);
    }
  }
  uint64_t v73 = v136;
  if (*(unsigned char *)(a3 + *(int *)(v136 + 28)))
  {
    if (*(unsigned char *)(a3 + *(int *)(v136 + 28)) == 1)
    {
      uint64_t v74 = a4;
      uint64_t v75 = v135;
      uint64_t v57 = v124;
      uint64_t v76 = v137;
      (*(void (**)(char *, uint64_t, uint64_t))(v135 + 16))(v124, v74, v137);
      sub_10016300C(v74, v56, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v77 = v56;
      uint64_t v78 = sub_1005E0EB0();
      os_log_type_t v79 = sub_1005E25C0();
      int v80 = v79;
      if (os_log_type_enabled(v78, v79))
      {
        uint64_t v81 = swift_slowAlloc();
        LODWORD(v133) = v80;
        uint64_t v82 = v81;
        uint64_t v129 = swift_slowAlloc();
        v141[0] = v129;
        *(_DWORD *)uint64_t v82 = 68159235;
        LODWORD(v139) = 2;
        uint64_t v130 = a1;
        sub_1005E2960();
        *(_WORD *)(v82 + 8) = 256;
        uint64_t v83 = *(int *)(v127 + 20);
        uint64_t v119 = a3;
        uint64_t v84 = v77 + v83;
        LOBYTE(v139) = *(unsigned char *)(v77 + v83);
        sub_1005E2960();
        *(_WORD *)(v82 + 11) = 2082;
        uint64_t v85 = *(void *)(v84 + 8);
        unint64_t v86 = *(void *)(v84 + 16);
        swift_bridgeObjectRetain();
        uint64_t v139 = sub_1000C6914(v85, v86, v141);
        sub_1005E2960();
        uint64_t v73 = v136;
        swift_bridgeObjectRelease();
        *(_WORD *)(v82 + 21) = 1040;
        LODWORD(v139) = 2;
        sub_1005E2960();
        *(_WORD *)(v82 + 27) = 512;
        LOWORD(v139) = *(_WORD *)(v84 + 24);
        sub_1005E2960();
        *(_WORD *)(v82 + 31) = 2160;
        uint64_t v139 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v82 + 41) = 2085;
        uint64_t v87 = *(void *)(v84 + 32);
        int v88 = *(_DWORD *)(v84 + 40);
        a3 = v119;
        uint64_t v139 = v87;
        int v140 = v88;
        swift_bridgeObjectRetain();
        uint64_t v89 = sub_1005E1CC0();
        uint64_t v139 = sub_1000C6914(v89, v90, v141);
        a1 = v130;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100163074(v134, type metadata accessor for MailboxTaskLogger);
        _os_log_impl((void *)&_mh_execute_header, v78, (os_log_type_t)v133, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Requesting re-run after initial run.", (uint8_t *)v82, 0x33u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v75 + 8))(v124, v137);
LABEL_25:
        sub_1000935B0(0xCu);
        sub_100019080(&v139, 12);
        goto LABEL_26;
      }
      goto LABEL_24;
    }
    uint64_t v91 = v122;
    sub_10016300C(a3, v122, type metadata accessor for FindMissingMessages.Completed);
    if (v55)
    {
      sub_100163074(v91, type metadata accessor for FindMissingMessages.Completed);
      goto LABEL_26;
    }
    uint64_t v92 = (unsigned int *)(v91 + *(int *)(v73 + 32));
    uint64_t v93 = *v92;
    LOBYTE(v139) = *((unsigned char *)v92 + 4);
    char v94 = sub_100070D0C(v120, v93 | ((unint64_t)v139 << 32));
    uint64_t v77 = v121;
    uint64_t v95 = v91;
    char v96 = v94;
    sub_100163074(v95, type metadata accessor for FindMissingMessages.Completed);
    if (v96)
    {
      uint64_t v97 = a4;
      uint64_t v75 = v135;
      uint64_t v76 = v137;
      (*(void (**)(char *, uint64_t, uint64_t))(v135 + 16))(v57, v97, v137);
      sub_10016300C(v97, v77, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v78 = sub_1005E0EB0();
      os_log_type_t v98 = sub_1005E25C0();
      int v99 = v98;
      if (os_log_type_enabled(v78, v98))
      {
        uint64_t v100 = swift_slowAlloc();
        LODWORD(v134) = v99;
        uint64_t v101 = v100;
        uint64_t v129 = swift_slowAlloc();
        v141[0] = v129;
        *(_DWORD *)uint64_t v101 = 68159235;
        LODWORD(v139) = 2;
        uint64_t v130 = a1;
        sub_1005E2960();
        *(_WORD *)(v101 + 8) = 256;
        uint64_t v102 = *(int *)(v127 + 20);
        uint64_t v119 = a3;
        uint64_t v103 = v77 + v102;
        LOBYTE(v139) = *(unsigned char *)(v77 + v102);
        sub_1005E2960();
        *(_WORD *)(v101 + 11) = 2082;
        uint64_t v104 = *(void *)(v103 + 8);
        unint64_t v105 = *(void *)(v103 + 16);
        swift_bridgeObjectRetain();
        uint64_t v139 = sub_1000C6914(v104, v105, v141);
        sub_1005E2960();
        uint64_t v73 = v136;
        swift_bridgeObjectRelease();
        *(_WORD *)(v101 + 21) = 1040;
        LODWORD(v139) = 2;
        sub_1005E2960();
        *(_WORD *)(v101 + 27) = 512;
        LOWORD(v139) = *(_WORD *)(v103 + 24);
        sub_1005E2960();
        *(_WORD *)(v101 + 31) = 2160;
        uint64_t v139 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v101 + 41) = 2085;
        uint64_t v106 = *(void *)(v103 + 32);
        int v107 = *(_DWORD *)(v103 + 40);
        a3 = v119;
        uint64_t v139 = v106;
        int v140 = v107;
        swift_bridgeObjectRetain();
        uint64_t v108 = sub_1005E1CC0();
        uint64_t v139 = sub_1000C6914(v108, v109, v141);
        a1 = v130;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100163074(v121, type metadata accessor for MailboxTaskLogger);
        _os_log_impl((void *)&_mh_execute_header, v78, (os_log_type_t)v134, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Requesting re-run.", (uint8_t *)v101, 0x33u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v75 + 8))(v133, v137);
        goto LABEL_25;
      }
LABEL_24:
      sub_100163074(v77, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v75 + 8))(v57, v76);
      goto LABEL_25;
    }
  }
LABEL_26:
  uint64_t v110 = v131;
  sub_10016300C(v53, v131, _s15MissingMessagesOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_100163074(v110, _s15MissingMessagesOMa);
  if (!EnumCaseMultiPayload)
  {
    sub_1000935B0(1u);
    sub_100019080(&v139, 1);
  }
  unint64_t v112 = (unsigned int *)(a3 + *(int *)(v73 + 36));
  if ((v112[1] & 1) == 0)
  {
    uint64_t v113 = *v112;
    uint64_t v114 = a1 + *(int *)(v125 + 60);
    uint64_t v115 = type metadata accessor for MessageBatches(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 48))(v114, 1, v115))
    {
      LOBYTE(v139) = 0;
      sub_10006705C(v113);
    }
  }
  return sub_100163074(v138, _s15MissingMessagesOMa);
}

uint64_t sub_10015EEB4(uint64_t a1, uint64_t a2)
{
  long long v195 = (char *)a2;
  uint64_t v193 = a1;
  uint64_t v178 = _s15MissingMessagesO8CompleteVMa(0);
  uint64_t v2 = __chkstk_darwin(v178);
  uint64_t v176 = (uint64_t)&v171 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v183 = (uint64_t)&v171 - v5;
  __chkstk_darwin(v4);
  uint64_t v192 = (uint64_t)&v171 - v6;
  uint64_t v7 = _s15MissingMessagesO11QueriedUIDsVMa(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v187 = (uint64_t)&v171 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v188);
  uint64_t v189 = (uint64_t)&v171 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v10 - 8);
  uint64_t v177 = (uint64_t)&v171 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v12 = __chkstk_darwin(v186);
  uint64_t v180 = (uint64_t)&v171 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v179 = (uint64_t)&v171 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v185 = (char *)&v171 - v17;
  __chkstk_darwin(v16);
  uint64_t v184 = (char *)&v171 - v18;
  uint64_t v194 = sub_1005E0ED0();
  uint64_t v196 = *(void *)(v194 - 8);
  uint64_t v19 = __chkstk_darwin(v194);
  uint64_t v182 = (char *)&v171 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v181 = (char *)&v171 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  os_log_t v190 = (os_log_t)((char *)&v171 - v24);
  __chkstk_darwin(v23);
  os_log_t v191 = (os_log_t)((char *)&v171 - v25);
  uint64_t v26 = _s15MissingMessagesO10IncompleteVMa(0);
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v171 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v32 = (char *)&v171 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  char v35 = (char *)&v171 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v38 = (char *)&v171 - v37;
  uint64_t v39 = __chkstk_darwin(v36);
  int v41 = (char *)&v171 - v40;
  uint64_t v42 = __chkstk_darwin(v39);
  uint64_t v44 = (char *)&v171 - v43;
  __chkstk_darwin(v42);
  unint64_t v46 = (char *)&v171 - v45;
  uint64_t v47 = _s15MissingMessagesOMa(0);
  __chkstk_darwin(v47);
  unint64_t v49 = (char *)&v171 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10016300C((uint64_t)v195, (uint64_t)v49, _s15MissingMessagesOMa);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v173 = v44;
    uint64_t v174 = v35;
    long long v195 = v41;
    uint64_t v73 = (uint64_t)v184;
    uint64_t v72 = (uint64_t)v185;
    uint64_t v175 = v38;
    os_log_t v74 = v190;
    os_log_t v75 = v191;
    uint64_t v76 = (uint64_t)v49;
    uint64_t v77 = (uint64_t)v46;
    sub_100165A5C(v76, (uint64_t)v46, _s15MissingMessagesO10IncompleteVMa);
    uint64_t v78 = &v46[*(int *)(v26 + 20)];
    char v79 = v78[4];
    int v80 = *(void (**)(os_log_t, uint64_t, uint64_t))(v196 + 16);
    uint64_t v172 = v26;
    if (v79)
    {
      os_log_t v81 = v74;
      os_log_t v82 = v74;
      uint64_t v83 = v193;
      uint64_t v84 = v194;
      v80(v82, v193, v194);
      uint64_t v85 = v72;
      sub_10016300C(v83, v72, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v86 = (uint64_t)v174;
      sub_10016300C(v77, (uint64_t)v174, _s15MissingMessagesO10IncompleteVMa);
      sub_10016300C(v77, (uint64_t)v32, _s15MissingMessagesO10IncompleteVMa);
      sub_10016300C(v77, (uint64_t)v29, _s15MissingMessagesO10IncompleteVMa);
      uint64_t v87 = sub_1005E0EB0();
      os_log_type_t v88 = sub_1005E25C0();
      int v89 = v88;
      if (os_log_type_enabled(v87, v88))
      {
        uint64_t v90 = swift_slowAlloc();
        uint64_t v184 = v32;
        uint64_t v91 = v90;
        long long v195 = (char *)swift_slowAlloc();
        v199[0] = (uint64_t)v195;
        *(_DWORD *)uint64_t v91 = 68160003;
        LODWORD(v197) = 2;
        LODWORD(v192) = v89;
        sub_1005E2960();
        *(_WORD *)(v91 + 8) = 256;
        uint64_t v92 = *(int *)(v186 + 20);
        uint64_t v193 = v77;
        uint64_t v93 = v85 + v92;
        LOBYTE(v197) = *(unsigned char *)(v85 + v92);
        sub_1005E2960();
        *(_WORD *)(v91 + 11) = 2082;
        os_log_t v191 = v87;
        uint64_t v94 = (uint64_t)v29;
        uint64_t v95 = *(void *)(v93 + 8);
        unint64_t v96 = *(void *)(v93 + 16);
        swift_bridgeObjectRetain();
        uint64_t v197 = sub_1000C6914(v95, v96, v199);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v91 + 21) = 1040;
        LODWORD(v197) = 2;
        sub_1005E2960();
        *(_WORD *)(v91 + 27) = 512;
        LOWORD(v197) = *(_WORD *)(v93 + 24);
        sub_1005E2960();
        *(_WORD *)(v91 + 31) = 2160;
        uint64_t v197 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v91 + 41) = 2085;
        int v97 = *(_DWORD *)(v93 + 40);
        uint64_t v197 = *(void *)(v93 + 32);
        int v198 = v97;
        swift_bridgeObjectRetain();
        uint64_t v98 = sub_1005E1CC0();
        uint64_t v197 = sub_1000C6914(v98, v99, v199);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100163074(v85, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v91 + 51) = 2048;
        uint64_t v100 = (uint64_t)v174;
        uint64_t v101 = v177;
        sub_1000079E4((uint64_t)v174, v177, &qword_100709E30);
        uint64_t v102 = v188;
        MessageIdentifierSet.count.getter();
        uint64_t v104 = v103;
        sub_100007A48(v101, &qword_100709E38);
        sub_100163074(v100, _s15MissingMessagesO10IncompleteVMa);
        uint64_t v197 = v104;
        sub_1005E2960();
        *(_WORD *)(v91 + 61) = 2048;
        _s15MissingMessagesO8ProgressVMa(0);
        uint64_t v105 = (uint64_t)v184;
        MessageIdentifierSet.count.getter();
        uint64_t v107 = v106;
        sub_100163074(v105, _s15MissingMessagesO10IncompleteVMa);
        uint64_t v197 = v107;
        sub_1005E2960();
        *(_WORD *)(v91 + 71) = 2082;
        uint64_t v108 = v187;
        sub_10016300C(v94 + *(int *)(v172 + 24), v187, _s15MissingMessagesO11QueriedUIDsVMa);
        uint64_t v109 = v189;
        sub_10001FDF0(v108, v189, &qword_100709E38);
        uint64_t v110 = MessageIdentifierSet.debugDescription.getter(v102);
        unint64_t v112 = v111;
        sub_100007A48(v109, &qword_100709E38);
        uint64_t v197 = sub_1000C6914(v110, v112, v199);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100163074(v94, _s15MissingMessagesO10IncompleteVMa);
        os_log_t v113 = v191;
        _os_log_impl((void *)&_mh_execute_header, v191, (os_log_type_t)v192, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Total missing message count: %ld; %ld done; fetched-w"
          "indow upper bound: nil, queriedUIDs: %{public}s",
          (uint8_t *)v91,
          0x51u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(os_log_t, uint64_t))(v196 + 8))(v190, v194);
        uint64_t v114 = v193;
      }
      else
      {
        sub_100163074((uint64_t)v32, _s15MissingMessagesO10IncompleteVMa);
        sub_100163074(v86, _s15MissingMessagesO10IncompleteVMa);

        sub_100163074((uint64_t)v29, _s15MissingMessagesO10IncompleteVMa);
        sub_100163074(v85, type metadata accessor for MailboxTaskLogger);
        (*(void (**)(os_log_t, uint64_t))(v196 + 8))(v81, v84);
        uint64_t v114 = v77;
      }
      uint64_t v115 = _s15MissingMessagesO10IncompleteVMa;
      return sub_100163074(v114, v115);
    }
    int v137 = *(_DWORD *)v78;
    os_log_t v138 = v75;
    uint64_t v139 = v193;
    uint64_t v140 = v194;
    v80(v75, v193, v194);
    uint64_t v141 = v73;
    sub_10016300C(v139, v73, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v142 = (uint64_t)v173;
    sub_10016300C(v77, (uint64_t)v173, _s15MissingMessagesO10IncompleteVMa);
    uint64_t v143 = (uint64_t)v195;
    sub_10016300C(v77, (uint64_t)v195, _s15MissingMessagesO10IncompleteVMa);
    uint64_t v144 = (uint64_t)v175;
    sub_10016300C(v77, (uint64_t)v175, _s15MissingMessagesO10IncompleteVMa);
    int v145 = sub_1005E0EB0();
    os_log_type_t v146 = sub_1005E25C0();
    int v147 = v146;
    if (os_log_type_enabled(v145, v146))
    {
      uint64_t v148 = swift_slowAlloc();
      uint64_t v193 = v77;
      uint64_t v149 = v148;
      uint64_t v192 = swift_slowAlloc();
      v199[0] = v192;
      *(_DWORD *)uint64_t v149 = 68160259;
      LODWORD(v197) = 2;
      os_log_t v190 = v145;
      sub_1005E2960();
      *(_WORD *)(v149 + 8) = 256;
      uint64_t v150 = v141 + *(int *)(v186 + 20);
      LOBYTE(v197) = *(unsigned char *)v150;
      sub_1005E2960();
      *(_WORD *)(v149 + 11) = 2082;
      LODWORD(v186) = v147;
      LODWORD(v185) = v137;
      uint64_t v151 = *(void *)(v150 + 8);
      unint64_t v152 = *(void *)(v150 + 16);
      swift_bridgeObjectRetain();
      uint64_t v197 = sub_1000C6914(v151, v152, v199);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v149 + 21) = 1040;
      LODWORD(v197) = 2;
      sub_1005E2960();
      *(_WORD *)(v149 + 27) = 512;
      LOWORD(v197) = *(_WORD *)(v150 + 24);
      sub_1005E2960();
      *(_WORD *)(v149 + 31) = 2160;
      uint64_t v197 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v149 + 41) = 2085;
      int v153 = *(_DWORD *)(v150 + 40);
      uint64_t v197 = *(void *)(v150 + 32);
      int v198 = v153;
      swift_bridgeObjectRetain();
      uint64_t v154 = sub_1005E1CC0();
      uint64_t v197 = sub_1000C6914(v154, v155, v199);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100163074(v141, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v149 + 51) = 2048;
      uint64_t v156 = (uint64_t)v173;
      uint64_t v157 = v177;
      sub_1000079E4((uint64_t)v173, v177, &qword_100709E30);
      uint64_t v158 = v188;
      MessageIdentifierSet.count.getter();
      uint64_t v160 = v159;
      sub_100007A48(v157, &qword_100709E38);
      uint64_t v161 = _s15MissingMessagesO10IncompleteVMa;
      sub_100163074(v156, _s15MissingMessagesO10IncompleteVMa);
      uint64_t v197 = v160;
      sub_1005E2960();
      *(_WORD *)(v149 + 61) = 2048;
      _s15MissingMessagesO8ProgressVMa(0);
      MessageIdentifierSet.count.getter();
      uint64_t v163 = v162;
      sub_100163074(v143, _s15MissingMessagesO10IncompleteVMa);
      uint64_t v197 = v163;
      sub_1005E2960();
      *(_WORD *)(v149 + 71) = 1024;
      LODWORD(v197) = v185;
      sub_1005E2960();
      *(_WORD *)(v149 + 77) = 2082;
      uint64_t v164 = (uint64_t)v175;
      uint64_t v165 = v187;
      sub_10016300C((uint64_t)&v175[*(int *)(v172 + 24)], v187, _s15MissingMessagesO11QueriedUIDsVMa);
      uint64_t v166 = v189;
      sub_10001FDF0(v165, v189, &qword_100709E38);
      uint64_t v167 = MessageIdentifierSet.debugDescription.getter(v158);
      unint64_t v169 = v168;
      sub_100007A48(v166, &qword_100709E38);
      uint64_t v197 = sub_1000C6914(v167, v169, v199);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100163074(v164, _s15MissingMessagesO10IncompleteVMa);
      os_log_t v170 = v190;
      _os_log_impl((void *)&_mh_execute_header, v190, (os_log_type_t)v186, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Total missing message count: %ld; %ld done; fetched-win"
        "dow upper bound: %u, queriedUIDs: %{public}s",
        (uint8_t *)v149,
        0x57u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(os_log_t, uint64_t))(v196 + 8))(v191, v194);
      uint64_t v114 = v193;
    }
    else
    {
      uint64_t v161 = _s15MissingMessagesO10IncompleteVMa;
      sub_100163074(v143, _s15MissingMessagesO10IncompleteVMa);
      sub_100163074(v142, _s15MissingMessagesO10IncompleteVMa);

      sub_100163074(v144, _s15MissingMessagesO10IncompleteVMa);
      sub_100163074(v141, type metadata accessor for MailboxTaskLogger);
      (*(void (**)(os_log_t, uint64_t))(v196 + 8))(v138, v140);
      uint64_t v114 = v77;
    }
    goto LABEL_20;
  }
  if (result != 1) {
    return result;
  }
  uint64_t v51 = v192;
  sub_100165A5C((uint64_t)v49, v192, _s15MissingMessagesO8CompleteVMa);
  os_log_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v196 + 16);
  if ((*(unsigned char *)(v51 + 4) & 1) == 0)
  {
    int v116 = *(_DWORD *)v51;
    os_log_t v117 = v181;
    uint64_t v118 = v193;
    uint64_t v119 = v194;
    v52(v181, v193, v194);
    uint64_t v120 = v179;
    sub_10016300C(v118, v179, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v121 = v183;
    sub_10016300C(v51, v183, _s15MissingMessagesO8CompleteVMa);
    uint64_t v122 = sub_1005E0EB0();
    os_log_type_t v123 = sub_1005E25C0();
    if (os_log_type_enabled(v122, v123))
    {
      uint64_t v124 = swift_slowAlloc();
      long long v195 = (char *)swift_slowAlloc();
      v199[0] = (uint64_t)v195;
      *(_DWORD *)uint64_t v124 = 68159747;
      LODWORD(v197) = 2;
      LODWORD(v193) = v116;
      sub_1005E2960();
      *(_WORD *)(v124 + 8) = 256;
      uint64_t v125 = v120 + *(int *)(v186 + 20);
      LOBYTE(v197) = *(unsigned char *)v125;
      sub_1005E2960();
      *(_WORD *)(v124 + 11) = 2082;
      uint64_t v126 = *(void *)(v125 + 8);
      unint64_t v127 = *(void *)(v125 + 16);
      swift_bridgeObjectRetain();
      uint64_t v197 = sub_1000C6914(v126, v127, v199);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v124 + 21) = 1040;
      LODWORD(v197) = 2;
      sub_1005E2960();
      *(_WORD *)(v124 + 27) = 512;
      LOWORD(v197) = *(_WORD *)(v125 + 24);
      sub_1005E2960();
      *(_WORD *)(v124 + 31) = 2160;
      uint64_t v197 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v124 + 41) = 2085;
      int v128 = *(_DWORD *)(v125 + 40);
      uint64_t v197 = *(void *)(v125 + 32);
      int v198 = v128;
      swift_bridgeObjectRetain();
      uint64_t v129 = sub_1005E1CC0();
      uint64_t v197 = sub_1000C6914(v129, v130, v199);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100163074(v179, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v124 + 51) = 1024;
      LODWORD(v197) = v193;
      sub_1005E2960();
      *(_WORD *)(v124 + 57) = 2082;
      uint64_t v131 = v183;
      uint64_t v132 = v187;
      sub_10016300C(v183 + *(int *)(v178 + 20), v187, _s15MissingMessagesO11QueriedUIDsVMa);
      uint64_t v133 = v189;
      sub_10001FDF0(v132, v189, &qword_100709E38);
      uint64_t v134 = MessageIdentifierSet.debugDescription.getter(v188);
      unint64_t v136 = v135;
      sub_100007A48(v133, &qword_100709E38);
      uint64_t v197 = sub_1000C6914(v134, v136, v199);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100163074(v131, _s15MissingMessagesO8CompleteVMa);
      _os_log_impl((void *)&_mh_execute_header, v122, v123, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] No missing message; fetched window upper bound: %u, que"
        "riedUIDs: %{public}s",
        (uint8_t *)v124,
        0x43u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v196 + 8))(v181, v194);
      goto LABEL_12;
    }

    uint64_t v161 = _s15MissingMessagesO8CompleteVMa;
    sub_100163074(v121, _s15MissingMessagesO8CompleteVMa);
    sub_100163074(v120, type metadata accessor for MailboxTaskLogger);
    (*(void (**)(char *, uint64_t))(v196 + 8))(v117, v119);
    goto LABEL_18;
  }
  uint64_t v53 = v182;
  uint64_t v54 = v193;
  uint64_t v55 = v194;
  v52(v182, v193, v194);
  uint64_t v56 = v180;
  sub_10016300C(v54, v180, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v57 = v176;
  sub_10016300C(v51, v176, _s15MissingMessagesO8CompleteVMa);
  unsigned int v58 = sub_1005E0EB0();
  os_log_type_t v59 = sub_1005E25C0();
  if (!os_log_type_enabled(v58, v59))
  {

    uint64_t v161 = _s15MissingMessagesO8CompleteVMa;
    sub_100163074(v57, _s15MissingMessagesO8CompleteVMa);
    sub_100163074(v56, type metadata accessor for MailboxTaskLogger);
    (*(void (**)(char *, uint64_t))(v196 + 8))(v53, v55);
LABEL_18:
    uint64_t v114 = v51;
LABEL_20:
    uint64_t v115 = v161;
    return sub_100163074(v114, v115);
  }
  uint64_t v60 = swift_slowAlloc();
  long long v195 = (char *)swift_slowAlloc();
  v199[0] = (uint64_t)v195;
  *(_DWORD *)uint64_t v60 = 68159491;
  LODWORD(v197) = 2;
  sub_1005E2960();
  *(_WORD *)(v60 + 8) = 256;
  uint64_t v61 = v56 + *(int *)(v186 + 20);
  LOBYTE(v197) = *(unsigned char *)v61;
  sub_1005E2960();
  *(_WORD *)(v60 + 11) = 2082;
  uint64_t v62 = *(void *)(v61 + 8);
  unint64_t v63 = *(void *)(v61 + 16);
  swift_bridgeObjectRetain();
  uint64_t v197 = sub_1000C6914(v62, v63, v199);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  *(_WORD *)(v60 + 21) = 1040;
  LODWORD(v197) = 2;
  sub_1005E2960();
  *(_WORD *)(v60 + 27) = 512;
  LOWORD(v197) = *(_WORD *)(v61 + 24);
  sub_1005E2960();
  *(_WORD *)(v60 + 31) = 2160;
  uint64_t v197 = 0x786F626C69616DLL;
  sub_1005E2960();
  *(_WORD *)(v60 + 41) = 2085;
  int v64 = *(_DWORD *)(v61 + 40);
  uint64_t v197 = *(void *)(v61 + 32);
  int v198 = v64;
  swift_bridgeObjectRetain();
  uint64_t v65 = sub_1005E1CC0();
  uint64_t v197 = sub_1000C6914(v65, v66, v199);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  sub_100163074(v180, type metadata accessor for MailboxTaskLogger);
  *(_WORD *)(v60 + 51) = 2082;
  uint64_t v67 = v187;
  sub_10016300C(v57 + *(int *)(v178 + 20), v187, _s15MissingMessagesO11QueriedUIDsVMa);
  uint64_t v68 = v189;
  sub_10001FDF0(v67, v189, &qword_100709E38);
  uint64_t v69 = MessageIdentifierSet.debugDescription.getter(v188);
  unint64_t v71 = v70;
  sub_100007A48(v68, &qword_100709E38);
  uint64_t v197 = sub_1000C6914(v69, v71, v199);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  sub_100163074(v57, _s15MissingMessagesO8CompleteVMa);
  _os_log_impl((void *)&_mh_execute_header, v58, v59, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] No missing message; fetched-window upper bound: nil, querie"
    "dUIDs: %{public}s",
    (uint8_t *)v60,
    0x3Du);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  (*(void (**)(char *, uint64_t))(v196 + 8))(v182, v194);
LABEL_12:
  uint64_t v114 = v192;
  uint64_t v115 = _s15MissingMessagesO8CompleteVMa;
  return sub_100163074(v114, v115);
}

uint64_t sub_10016075C()
{
  if (qword_100709D98 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001607B8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001607C0()
{
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t sub_1001607D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_10015BEE4(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  a5[2] = v8;
  return result;
}

uint64_t sub_100160800(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  return sub_100166298(a1, a2, a3, a5, a6);
}

uint64_t sub_10016080C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  return sub_10015BD74(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_100160824(uint64_t a1)
{
  return sub_10015C46C(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t WatchOSHeaderInfo.from.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100160880@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, unint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, unsigned int a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v289 = a7;
  unint64_t v290 = a8;
  int v303 = a6;
  unint64_t v273 = a5;
  int v272 = a3;
  unint64_t v288 = a2;
  uint64_t v285 = a9;
  uint64_t v305 = a16;
  uint64_t v268 = sub_10000566C(&qword_100709E60);
  uint64_t v269 = *(void *)(v268 - 8);
  __chkstk_darwin(v268);
  long long v267 = (char *)&v253 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v270 = _s20GrowWindowOfInterestV6ResultVMa();
  uint64_t v266 = *(void *)(v270 - 8);
  __chkstk_darwin(v270);
  long long v265 = (char *)&v253 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10000566C(&qword_10070DEA0);
  __chkstk_darwin(v20 - 8);
  char v298 = (char *)&v253 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = _s15MissingMessagesO11QueriedUIDsVMa(0);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  long long v293 = (char *)&v253 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v281 = (uint64_t)&v253 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v282 = (uint64_t)&v253 - v28;
  __chkstk_darwin(v27);
  __int16 v297 = (char *)&v253 - v29;
  uint64_t v278 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v30 = __chkstk_darwin(v278);
  uint64_t v276 = (uint64_t)&v253 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v258 = (uint64_t)&v253 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v259 = (uint64_t)&v253 - v35;
  __chkstk_darwin(v34);
  uint64_t v284 = (uint64_t)&v253 - v36;
  uint64_t v37 = sub_1005E0ED0();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = __chkstk_darwin(v37);
  long long v280 = (char *)&v253 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  long long v264 = (char *)&v253 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  long long v263 = (char *)&v253 - v44;
  __chkstk_darwin(v43);
  long long v283 = (char *)&v253 - v45;
  uint64_t v46 = sub_10000566C(&qword_10070A9C0);
  uint64_t v47 = __chkstk_darwin(v46 - 8);
  uint64_t v287 = (uint64_t)&v253 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v286 = (uint64_t)&v253 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v260 = (uint64_t)&v253 - v52;
  __chkstk_darwin(v51);
  uint64_t v54 = (char *)&v253 - v53;
  uint64_t v55 = sub_10000566C(&qword_100709E38);
  uint64_t v56 = __chkstk_darwin(v55);
  long long v277 = (char *)&v253 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __chkstk_darwin(v56);
  uint64_t v279 = (uint64_t)&v253 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  uint64_t v294 = (uint64_t)&v253 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  long long v274 = (char *)&v253 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  uint64_t v275 = (uint64_t)&v253 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  uint64_t v295 = (uint64_t)&v253 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  uint64_t v262 = (uint64_t)&v253 - v69;
  uint64_t v70 = __chkstk_darwin(v68);
  uint64_t v256 = (uint64_t)&v253 - v71;
  uint64_t v72 = __chkstk_darwin(v70);
  uint64_t v255 = (uint64_t)&v253 - v73;
  uint64_t v74 = __chkstk_darwin(v72);
  os_log_t v271 = (os_log_t)((char *)&v253 - v75);
  uint64_t v76 = __chkstk_darwin(v74);
  uint64_t v257 = (uint64_t)&v253 - v77;
  uint64_t v78 = __chkstk_darwin(v76);
  uint64_t v261 = (uint64_t)&v253 - v79;
  uint64_t v80 = __chkstk_darwin(v78);
  uint64_t v254 = (uint64_t)&v253 - v81;
  uint64_t v82 = __chkstk_darwin(v80);
  uint64_t v292 = (uint64_t)&v253 - v83;
  uint64_t v84 = __chkstk_darwin(v82);
  uint64_t v291 = (uint64_t)&v253 - v85;
  __chkstk_darwin(v84);
  uint64_t v87 = (char *)&v253 - v86;
  MessageIdentifierSet.subtracting(_:)(a4, v55);
  MessageIdentifierSet.ranges.getter((uint64_t)v54);
  sub_10000566C(&qword_10070A8F8);
  uint64_t v88 = sub_1005E35B0();
  uint64_t v89 = sub_1005E35E0();
  sub_100007A48((uint64_t)v54, &qword_10070A9C0);
  BOOL v90 = v88 == v89;
  uint64_t v91 = v305;
  uint64_t v299 = a1;
  uint64_t v300 = v87;
  uint64_t v304 = a4;
  uint64_t v301 = v37;
  uint64_t v302 = v38;
  uint64_t v296 = v55;
  if (v90)
  {
    uint64_t v92 = v38;
    uint64_t v93 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
    uint64_t v94 = v283;
    v93(v283, v305, v37);
    uint64_t v95 = v284;
    sub_10016300C(v91, v284, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_1000079E4(a4, v291, &qword_100709E38);
    sub_1000079E4(a1, v292, &qword_100709E38);
    unint64_t v96 = sub_1005E0EB0();
    os_log_type_t v97 = sub_1005E25C0();
    int v98 = v97;
    if (os_log_type_enabled(v96, v97))
    {
      uint64_t v99 = swift_slowAlloc();
      os_log_t v271 = v96;
      uint64_t v100 = v99;
      long long v263 = (char *)swift_slowAlloc();
      uint64_t v308 = v263;
      *(_DWORD *)uint64_t v100 = 68159747;
      LODWORD(v306) = 2;
      sub_1005E2960();
      *(_WORD *)(v100 + 8) = 256;
      uint64_t v101 = v95 + *(int *)(v278 + 20);
      LOBYTE(v306) = *(unsigned char *)v101;
      sub_1005E2960();
      *(_WORD *)(v100 + 11) = 2082;
      LODWORD(v264) = v98;
      uint64_t v103 = *(void *)(v101 + 8);
      unint64_t v102 = *(void *)(v101 + 16);
      swift_bridgeObjectRetain();
      uint64_t v306 = sub_1000C6914(v103, v102, (uint64_t *)&v308);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v100 + 21) = 1040;
      LODWORD(v306) = 2;
      sub_1005E2960();
      *(_WORD *)(v100 + 27) = 512;
      LOWORD(v306) = *(_WORD *)(v101 + 24);
      sub_1005E2960();
      *(_WORD *)(v100 + 31) = 2160;
      uint64_t v306 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v100 + 41) = 2085;
      int v104 = *(_DWORD *)(v101 + 40);
      uint64_t v306 = *(void *)(v101 + 32);
      int v307 = v104;
      swift_bridgeObjectRetain();
      uint64_t v105 = sub_1005E1CC0();
      uint64_t v306 = sub_1000C6914(v105, v106, (uint64_t *)&v308);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100163074(v95, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v100 + 51) = 2048;
      uint64_t v107 = v291;
      MessageIdentifierSet.count.getter();
      uint64_t v109 = v108;
      sub_100007A48(v107, &qword_100709E38);
      uint64_t v306 = v109;
      sub_1005E2960();
      *(_WORD *)(v100 + 61) = 2048;
      os_log_t v110 = (os_log_t)v292;
      MessageIdentifierSet.count.getter();
      uint64_t v112 = v111;
      sub_100007A48((uint64_t)v110, &qword_100709E38);
      uint64_t v306 = v112;
      sub_1005E2960();
      os_log_t v113 = v271;
      _os_log_impl((void *)&_mh_execute_header, v271, (os_log_type_t)v264, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found no UIDs to be missing locally. (%ld locally, %ld on server)", (uint8_t *)v100, 0x47u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      os_log_t v271 = *(os_log_t *)(v302 + 8);
      ((void (*)(char *, uint64_t))v271)(v94, v301);
    }
    else
    {
      sub_100007A48(v292, &qword_100709E38);
      sub_100007A48(v291, &qword_100709E38);
      sub_100163074(v95, type metadata accessor for MailboxTaskLogger);

      os_log_t v271 = *(os_log_t *)(v92 + 8);
      ((void (*)(char *, uint64_t))v271)(v94, v37);
    }
    uint64_t v114 = (uint64_t)v297;
    uint64_t v115 = (uint64_t)v300;
    goto LABEL_21;
  }
  MessageIdentifierSet.ranges.getter((uint64_t)v54);
  uint64_t v116 = sub_1005E35B0();
  uint64_t v117 = sub_1005E35E0();
  uint64_t v118 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v116 < v118 || result < v116)
  {
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  uint64_t v120 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v117 < v120 || result < v117) {
    goto LABEL_55;
  }
  if (__OFSUB__(v117, v116))
  {
LABEL_56:
    __break(1u);
    return result;
  }
  sub_100007A48((uint64_t)v54, &qword_10070A9C0);
  uint64_t v121 = v302;
  uint64_t v122 = *(void (**)(char *, uint64_t, uint64_t))(v302 + 16);
  if (v117 - v116 > 19)
  {
    uint64_t v154 = v264;
    uint64_t v155 = v305;
    uint64_t v125 = v301;
    v122(v264, v305, v301);
    uint64_t v156 = v258;
    sub_10016300C(v155, v258, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v115 = (uint64_t)v300;
    uint64_t v157 = v255;
    sub_1000079E4((uint64_t)v300, v255, &qword_100709E38);
    uint64_t v158 = v256;
    sub_1000079E4(v304, v256, &qword_100709E38);
    uint64_t v159 = v262;
    sub_1000079E4(v299, v262, &qword_100709E38);
    uint64_t v160 = sub_1005E0EB0();
    os_log_type_t v161 = sub_1005E25C0();
    uint64_t v292 = (uint64_t)v160;
    LODWORD(v291) = v161;
    if (os_log_type_enabled(v160, v161))
    {
      uint64_t v162 = swift_slowAlloc();
      uint64_t v284 = swift_slowAlloc();
      uint64_t v308 = (char *)v284;
      *(_DWORD *)uint64_t v162 = 68160003;
      LODWORD(v306) = 2;
      sub_1005E2960();
      *(_WORD *)(v162 + 8) = 256;
      uint64_t v163 = v156 + *(int *)(v278 + 20);
      LOBYTE(v306) = *(unsigned char *)v163;
      sub_1005E2960();
      *(_WORD *)(v162 + 11) = 2082;
      uint64_t v164 = v157;
      uint64_t v165 = *(void *)(v163 + 8);
      unint64_t v166 = *(void *)(v163 + 16);
      swift_bridgeObjectRetain();
      uint64_t v306 = sub_1000C6914(v165, v166, (uint64_t *)&v308);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v162 + 21) = 1040;
      LODWORD(v306) = 2;
      sub_1005E2960();
      *(_WORD *)(v162 + 27) = 512;
      LOWORD(v306) = *(_WORD *)(v163 + 24);
      sub_1005E2960();
      *(_WORD *)(v162 + 31) = 2160;
      uint64_t v306 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v162 + 41) = 2085;
      int v167 = *(_DWORD *)(v163 + 40);
      uint64_t v306 = *(void *)(v163 + 32);
      int v307 = v167;
      swift_bridgeObjectRetain();
      uint64_t v168 = sub_1005E1CC0();
      uint64_t v306 = sub_1000C6914(v168, v169, (uint64_t *)&v308);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100163074(v156, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v162 + 51) = 2048;
      MessageIdentifierSet.count.getter();
      uint64_t v171 = v170;
      sub_100007A48(v164, &qword_100709E38);
      uint64_t v306 = v171;
      sub_1005E2960();
      *(_WORD *)(v162 + 61) = 2048;
      MessageIdentifierSet.count.getter();
      uint64_t v173 = v172;
      sub_100007A48(v158, &qword_100709E38);
      uint64_t v306 = v173;
      sub_1005E2960();
      *(_WORD *)(v162 + 71) = 2048;
      uint64_t v174 = v262;
      MessageIdentifierSet.count.getter();
      uint64_t v176 = v175;
      uint64_t v115 = (uint64_t)v300;
      sub_100007A48(v174, &qword_100709E38);
      uint64_t v306 = v176;
      sub_1005E2960();
      os_log_t v177 = (os_log_t)v292;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v292, (os_log_type_t)v291, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld new UIDs missing locally. (%ld locally, %ld on server)", (uint8_t *)v162, 0x51u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v152 = *(NSObject **)(v302 + 8);
      int v153 = &v296;
      goto LABEL_17;
    }
    sub_100007A48(v159, &qword_100709E38);
    sub_100007A48(v158, &qword_100709E38);
    sub_100007A48(v157, &qword_100709E38);
    sub_100163074(v156, type metadata accessor for MailboxTaskLogger);

    uint64_t v179 = *(NSObject **)(v121 + 8);
    uint64_t v180 = v154;
LABEL_20:
    os_log_t v271 = v179;
    ((void (*)(char *, uint64_t))v179)(v180, v125);
    uint64_t v114 = (uint64_t)v297;
    goto LABEL_21;
  }
  os_log_type_t v123 = v263;
  uint64_t v124 = v305;
  uint64_t v125 = v301;
  v122(v263, v305, v301);
  uint64_t v126 = v259;
  sub_10016300C(v124, v259, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v115 = (uint64_t)v300;
  uint64_t v127 = v254;
  sub_1000079E4((uint64_t)v300, v254, &qword_100709E38);
  uint64_t v128 = v261;
  sub_1000079E4(v115, v261, &qword_100709E38);
  uint64_t v129 = v257;
  sub_1000079E4(v304, v257, &qword_100709E38);
  sub_1000079E4(v299, (uint64_t)v271, &qword_100709E38);
  unint64_t v130 = sub_1005E0EB0();
  os_log_type_t v131 = sub_1005E25C0();
  uint64_t v292 = (uint64_t)v130;
  LODWORD(v291) = v131;
  if (!os_log_type_enabled(v130, v131))
  {
    sub_100007A48((uint64_t)v271, &qword_100709E38);
    sub_100007A48(v129, &qword_100709E38);
    sub_100007A48(v127, &qword_100709E38);
    sub_100163074(v126, type metadata accessor for MailboxTaskLogger);
    sub_100007A48(v128, &qword_100709E38);

    uint64_t v179 = *(NSObject **)(v121 + 8);
    uint64_t v180 = v123;
    goto LABEL_20;
  }
  uint64_t v132 = swift_slowAlloc();
  uint64_t v284 = swift_slowAlloc();
  uint64_t v308 = (char *)v284;
  *(_DWORD *)uint64_t v132 = 68160259;
  LODWORD(v306) = 2;
  sub_1005E2960();
  *(_WORD *)(v132 + 8) = 256;
  uint64_t v133 = v126 + *(int *)(v278 + 20);
  LOBYTE(v306) = *(unsigned char *)v133;
  sub_1005E2960();
  *(_WORD *)(v132 + 11) = 2082;
  uint64_t v134 = *(void *)(v133 + 8);
  unint64_t v135 = *(void *)(v133 + 16);
  swift_bridgeObjectRetain();
  uint64_t v306 = sub_1000C6914(v134, v135, (uint64_t *)&v308);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  *(_WORD *)(v132 + 21) = 1040;
  LODWORD(v306) = 2;
  sub_1005E2960();
  *(_WORD *)(v132 + 27) = 512;
  LOWORD(v306) = *(_WORD *)(v133 + 24);
  sub_1005E2960();
  *(_WORD *)(v132 + 31) = 2160;
  uint64_t v306 = 0x786F626C69616DLL;
  sub_1005E2960();
  *(_WORD *)(v132 + 41) = 2085;
  int v136 = *(_DWORD *)(v133 + 40);
  uint64_t v306 = *(void *)(v133 + 32);
  int v307 = v136;
  swift_bridgeObjectRetain();
  uint64_t v137 = sub_1005E1CC0();
  uint64_t v306 = sub_1000C6914(v137, v138, (uint64_t *)&v308);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  sub_100163074(v126, type metadata accessor for MailboxTaskLogger);
  *(_WORD *)(v132 + 51) = 2048;
  uint64_t v139 = v129;
  uint64_t v140 = v296;
  MessageIdentifierSet.count.getter();
  uint64_t v142 = v141;
  sub_100007A48(v127, &qword_100709E38);
  uint64_t v306 = v142;
  sub_1005E2960();
  *(_WORD *)(v132 + 61) = 2082;
  uint64_t v143 = v261;
  uint64_t v144 = MessageIdentifierSet.debugDescription.getter(v140);
  uint64_t v306 = sub_1000C6914(v144, v145, (uint64_t *)&v308);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  sub_100007A48(v143, &qword_100709E38);
  *(_WORD *)(v132 + 71) = 2048;
  MessageIdentifierSet.count.getter();
  uint64_t v147 = v146;
  sub_100007A48(v139, &qword_100709E38);
  uint64_t v306 = v147;
  sub_1005E2960();
  *(_WORD *)(v132 + 81) = 2048;
  uint64_t v115 = (uint64_t)v300;
  os_log_t v148 = v271;
  MessageIdentifierSet.count.getter();
  uint64_t v150 = v149;
  sub_100007A48((uint64_t)v148, &qword_100709E38);
  uint64_t v306 = v150;
  sub_1005E2960();
  os_log_t v151 = (os_log_t)v292;
  _os_log_impl((void *)&_mh_execute_header, (os_log_t)v292, (os_log_type_t)v291, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld UIDs %{public}s to be missing locally. (%ld locally, %ld on server)", (uint8_t *)v132, 0x5Bu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  unint64_t v152 = *(NSObject **)(v302 + 8);
  int v153 = &v295;
LABEL_17:
  uint64_t v178 = *(v153 - 32);
  os_log_t v271 = v152;
  ((void (*)(uint64_t, uint64_t))v152)(v178, v301);
  uint64_t v114 = (uint64_t)v297;
LABEL_21:
  unint64_t v181 = v290;
  if ((v290 & 0x10000000000) != 0)
  {
    LODWORD(v291) = 0;
    uint64_t v292 = 1;
  }
  else if (v272)
  {
    uint64_t v182 = v260;
    MessageIdentifierSet.ranges.getter(v260);
    unint64_t v183 = sub_100070018();
    char v185 = v184;
    sub_100007A48(v182, &qword_10070A9C0);
    if (v185)
    {
      uint64_t v292 = HIDWORD(v181) & 1;
      if ((v181 & (unint64_t)&_mh_execute_header) != 0) {
        LODWORD(v186) = 0;
      }
      else {
        LODWORD(v186) = v181;
      }
    }
    else
    {
      uint64_t v292 = 0;
      unint64_t v186 = HIDWORD(v183);
      if (v181 <= HIDWORD(v183)) {
        int v187 = HIDWORD(v183);
      }
      else {
        int v187 = v181;
      }
      if ((v181 & (unint64_t)&_mh_execute_header) == 0) {
        LODWORD(v186) = v187;
      }
    }
    LODWORD(v291) = v186;
  }
  else
  {
    uint64_t v292 = HIDWORD(v290) & 1;
    LODWORD(v291) = v290;
  }
  uint64_t v188 = v286;
  MessageIdentifierSet.ranges.getter(v286);
  long long v283 = (char *)sub_100070018();
  LODWORD(v284) = v189;
  sub_100007A48(v188, &qword_10070A9C0);
  if (v303) {
    LODWORD(v290) = 0;
  }
  else {
    LODWORD(v290) = EngineAccountMailboxLoggerID.account.getter(v273);
  }
  uint64_t v190 = v287;
  MessageIdentifierSet.ranges.getter(v287);
  unint64_t v191 = sub_100070018();
  char v193 = v192;
  sub_100007A48(v190, &qword_10070A9C0);
  unint64_t v194 = HIDWORD(v191);
  LOBYTE(v306) = v193 & 1;
  if (v193) {
    unint64_t v194 = 0;
  }
  LOBYTE(v306) = BYTE5(v181) & 1;
  LOBYTE(v308) = a11 & 1;
  sub_10016E894(v194 | ((unint64_t)(v193 & 1) << 32), v288 | ((HIDWORD(v288) & 1) << 32), v289, a10 | ((unint64_t)(a11 & 1) << 32), v114);
  swift_bridgeObjectRelease();
  if (a15)
  {
    sub_10016A384(a15, (uint64_t)v298);
    swift_bridgeObjectRetain();
    uint64_t v195 = (uint64_t)v274;
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v196 = *(void *)(a15 + 16);
    if (v196)
    {
      uint64_t v197 = a15 + ((*(unsigned __int8 *)(v266 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v266 + 80));
      uint64_t v198 = *(void *)(v266 + 72);
      long long v199 = (void (**)(char *, uint64_t, uint64_t))(v269 + 16);
      uint64_t v289 = a15;
      swift_bridgeObjectRetain();
      uint64_t v200 = v268;
      long long v201 = v267;
      uint64_t v202 = (uint64_t)v293;
      uint64_t v203 = v195;
      uint64_t v204 = (uint64_t)v265;
      uint64_t v205 = v270;
      do
      {
        sub_10016300C(v197, v204, (uint64_t (*)(void))_s20GrowWindowOfInterestV6ResultVMa);
        sub_10016300C(v204 + *(int *)(v205 + 20), v202, _s15MissingMessagesO11QueriedUIDsVMa);
        (*v199)(v201, v202, v200);
        sub_1005E3670();
        sub_100007A48(v202, &qword_100709E38);
        sub_100163074(v204, (uint64_t (*)(void))_s20GrowWindowOfInterestV6ResultVMa);
        v197 += v198;
        --v196;
      }
      while (v196);
      swift_bridgeObjectRelease();
      uint64_t v195 = v203;
    }
    uint64_t v206 = sub_10000566C(&qword_10070DEA8);
    uint64_t v207 = (uint64_t)v298;
    uint64_t v208 = (uint64_t)&v298[*(int *)(v206 + 48)];
    uint64_t v209 = v275;
    sub_10001FDF0(v195, v275, &qword_100709E38);
    swift_bridgeObjectRelease();
    sub_10001FDF0(v209, v208, &qword_100709E38);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v206 - 8) + 56))(v207, 0, 1, v206);
    uint64_t v210 = v207 + *(int *)(v206 + 48);
    uint64_t v211 = v295;
    sub_10001FDF0(v207, v295, &qword_100709E38);
    uint64_t v212 = v282;
    sub_100165A5C(v210, v282, _s15MissingMessagesO11QueriedUIDsVMa);
    uint64_t v213 = v301;
    long long v214 = v280;
    uint64_t v215 = v305;
    (*(void (**)(char *, uint64_t, uint64_t))(v302 + 16))(v280, v305, v301);
    uint64_t v216 = v276;
    sub_10016300C(v215, v276, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_1000079E4(v211, v294, &qword_100709E38);
    uint64_t v217 = v279;
    sub_1000079E4(v211, v279, &qword_100709E38);
    uint64_t v218 = v281;
    sub_10016300C(v212, v281, _s15MissingMessagesO11QueriedUIDsVMa);
    long long v219 = sub_1005E0EB0();
    os_log_type_t v220 = sub_1005E25C0();
    int v221 = v220;
    if (os_log_type_enabled(v219, v220))
    {
      uint64_t v222 = swift_slowAlloc();
      char v298 = (char *)swift_slowAlloc();
      uint64_t v308 = v298;
      *(_DWORD *)uint64_t v222 = 68160003;
      LODWORD(v306) = 2;
      sub_1005E2960();
      *(_WORD *)(v222 + 8) = 256;
      uint64_t v223 = v216 + *(int *)(v278 + 20);
      LOBYTE(v306) = *(unsigned char *)v223;
      sub_1005E2960();
      *(_WORD *)(v222 + 11) = 2082;
      LODWORD(v289) = v221;
      uint64_t v224 = v216;
      uint64_t v225 = *(void *)(v223 + 8);
      unint64_t v226 = *(void *)(v223 + 16);
      swift_bridgeObjectRetain();
      uint64_t v306 = sub_1000C6914(v225, v226, (uint64_t *)&v308);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v222 + 21) = 1040;
      LODWORD(v306) = 2;
      sub_1005E2960();
      *(_WORD *)(v222 + 27) = 512;
      LOWORD(v306) = *(_WORD *)(v223 + 24);
      sub_1005E2960();
      *(_WORD *)(v222 + 31) = 2160;
      uint64_t v306 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v222 + 41) = 2085;
      int v227 = *(_DWORD *)(v223 + 40);
      uint64_t v306 = *(void *)(v223 + 32);
      int v307 = v227;
      swift_bridgeObjectRetain();
      uint64_t v228 = sub_1005E1CC0();
      uint64_t v306 = sub_1000C6914(v228, v229, (uint64_t *)&v308);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100163074(v224, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v222 + 51) = 2048;
      uint64_t v230 = v296;
      uint64_t v231 = v294;
      MessageIdentifierSet.count.getter();
      uint64_t v233 = v232;
      sub_100007A48(v231, &qword_100709E38);
      uint64_t v306 = v233;
      sub_1005E2960();
      *(_WORD *)(v222 + 61) = 2082;
      uint64_t v234 = v279;
      uint64_t v235 = MessageIdentifierSet.debugDescription.getter(v230);
      uint64_t v306 = sub_1000C6914(v235, v236, (uint64_t *)&v308);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100007A48(v234, &qword_100709E38);
      *(_WORD *)(v222 + 71) = 2082;
      uint64_t v237 = v281;
      uint64_t v238 = MessageIdentifierSet.debugDescription.getter(v230);
      uint64_t v306 = sub_1000C6914(v238, v239, (uint64_t *)&v308);
      uint64_t v212 = v282;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100163074(v237, _s15MissingMessagesO11QueriedUIDsVMa);
      _os_log_impl((void *)&_mh_execute_header, v219, (os_log_type_t)v289, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received %ld UIDs for temporarily growing window-of-interest: %{public}s (did query %{public}s).", (uint8_t *)v222, 0x51u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v302 + 8))(v280, v301);
    }
    else
    {
      sub_100007A48(v294, &qword_100709E38);
      sub_100163074(v216, type metadata accessor for MailboxTaskLogger);
      sub_100007A48(v217, &qword_100709E38);
      sub_100163074(v218, _s15MissingMessagesO11QueriedUIDsVMa);

      ((void (*)(char *, uint64_t))v271)(v214, v213);
    }
    uint64_t v246 = v285;
    uint64_t v240 = v299;
    uint64_t v241 = (uint64_t)v297;
    uint64_t v245 = (uint64_t)v293;
    uint64_t v244 = (uint64_t)v277;
    uint64_t v247 = v295;
    uint64_t v248 = (uint64_t)v300;
    MessageIdentifierSet.union(_:)();
    MessageIdentifierSet.union(_:)();
    sub_100163074(v305, type metadata accessor for MailboxTaskLogger);
    sub_100007A48(v304, &qword_100709E38);
    sub_100007A48(v240, &qword_100709E38);
    sub_100163074(v212, _s15MissingMessagesO11QueriedUIDsVMa);
    sub_100007A48(v247, &qword_100709E38);
    sub_100163074(v241, _s15MissingMessagesO11QueriedUIDsVMa);
    sub_100007A48(v248, &qword_100709E38);
  }
  else
  {
    uint64_t v242 = sub_10000566C(&qword_10070DEA8);
    uint64_t v243 = (uint64_t)v298;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v242 - 8) + 56))(v298, 1, 1, v242);
    sub_100163074(v305, type metadata accessor for MailboxTaskLogger);
    sub_100007A48(v304, &qword_100709E38);
    sub_100007A48(v299, &qword_100709E38);
    sub_100007A48(v243, &qword_10070DEA0);
    uint64_t v244 = v115;
    uint64_t v245 = v114;
    uint64_t v246 = v285;
  }
  char v249 = v284 & 1;
  if (v284) {
    int v250 = 0;
  }
  else {
    int v250 = HIDWORD(v283);
  }
  sub_10001FDF0(v244, v246, &qword_100709E38);
  uint64_t v251 = _s15MissingMessagesO10NewMissingVMa(0);
  uint64_t v252 = v246 + *(int *)(v251 + 20);
  *(_DWORD *)uint64_t v252 = v250;
  *(unsigned char *)(v252 + 4) = v249;
  *(_DWORD *)(v252 + 8) = v290;
  *(unsigned char *)(v252 + 12) = v303 & 1;
  *(_DWORD *)(v252 + 16) = v291;
  *(unsigned char *)(v252 + 20) = v292;
  return sub_100165A5C(v245, v246 + *(int *)(v251 + 24), _s15MissingMessagesO11QueriedUIDsVMa);
}

uint64_t sub_1001629F4(void (*a1)(uint64_t))
{
  uint64_t v2 = sub_10000566C(&qword_100709E38);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v3);
  uint64_t v6 = MessageIdentifierSet.debugDescription.getter(v2);
  sub_100007A48((uint64_t)v5, &qword_100709E38);
  return v6;
}

BOOL sub_100162AB4(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = type metadata accessor for DownloadTask.CommandID(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_10000566C(&qword_10070A640);
  sub_10016300C(a1 + *(int *)(v8 + 52), (uint64_t)v6, type metadata accessor for DownloadTask.CommandID);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v10 = EnumCaseMultiPayload;
  switch(EnumCaseMultiPayload)
  {
    case 1u:
      uint64_t v10 = 1;
      goto LABEL_4;
    case 2u:
      return v10 == v7;
    case 3u:
      uint64_t v10 = 3;
      goto LABEL_4;
    default:
LABEL_4:
      sub_100163074((uint64_t)v6, type metadata accessor for DownloadTask.CommandID);
      return v10 == v7;
  }
}

uint64_t sub_100162BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Missing = type metadata accessor for FindMissingMessages.CommandID(0);
  uint64_t v8 = __chkstk_darwin(Missing);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v22 - v11;
  uint64_t v13 = sub_10000566C(&qword_10070DE98);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t)&v16[*(int *)(v14 + 56)];
  sub_10016300C(a1, (uint64_t)v16, type metadata accessor for FindMissingMessages.CommandID);
  sub_10016300C(a2, v17, type metadata accessor for FindMissingMessages.CommandID);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10016300C((uint64_t)v16, (uint64_t)v12, type metadata accessor for FindMissingMessages.CommandID);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_10001FDF0(v17, (uint64_t)v6, &qword_100709E30);
      sub_10001FC6C();
      char v20 = sub_1005E35A0();
      sub_100007A48((uint64_t)v6, &qword_100709E30);
      sub_100007A48((uint64_t)v12, &qword_100709E30);
      sub_100163074((uint64_t)v16, type metadata accessor for FindMissingMessages.CommandID);
      return v20 & 1;
    }
    sub_100007A48((uint64_t)v12, &qword_100709E30);
    goto LABEL_10;
  }
  sub_10016300C((uint64_t)v16, (uint64_t)v10, type metadata accessor for FindMissingMessages.CommandID);
  uint64_t v18 = *(void *)v10;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
LABEL_10:
    sub_100007A48((uint64_t)v16, &qword_10070DE98);
    goto LABEL_11;
  }
  int v19 = *(unsigned __int8 *)(v17 + 8);
  if ((v10[8] & 1) == 0)
  {
    if (v18 != *(void *)v17) {
      LOBYTE(v19) = 1;
    }
    if (v19) {
      goto LABEL_7;
    }
LABEL_16:
    sub_100163074((uint64_t)v16, type metadata accessor for FindMissingMessages.CommandID);
    char v20 = 1;
    return v20 & 1;
  }
  if (v18 != *(void *)v17) {
    int v19 = 0;
  }
  if (v19 == 1) {
    goto LABEL_16;
  }
LABEL_7:
  sub_100163074((uint64_t)v16, type metadata accessor for FindMissingMessages.CommandID);
LABEL_11:
  char v20 = 0;
  return v20 & 1;
}

BOOL sub_100162EEC(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 4);
  if (*(unsigned char *)(a1 + 4))
  {
    if (!*(unsigned char *)(a2 + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)a2 != *(_DWORD *)a1) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  char v5 = *(unsigned char *)(a2 + 12);
  if (*(unsigned char *)(a1 + 12))
  {
    if (!*(unsigned char *)(a2 + 12)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a2 + 8) != *(_DWORD *)(a1 + 8)) {
      char v5 = 1;
    }
    if (v5) {
      return 0;
    }
  }
  uint64_t Missing = (int *)type metadata accessor for FindMissingMessages.Completed(0);
  if ((sub_10007467C(a1 + Missing[6], a2 + Missing[6]) & 1) == 0
    || *(unsigned __int8 *)(a1 + Missing[7]) != *(unsigned __int8 *)(a2 + Missing[7]))
  {
    return 0;
  }
  uint64_t v7 = Missing[8];
  uint64_t v8 = (_DWORD *)(a1 + v7);
  char v9 = *(unsigned char *)(a1 + v7 + 4);
  uint64_t v10 = (_DWORD *)(a2 + v7);
  int v11 = *(unsigned __int8 *)(a2 + v7 + 4);
  if (v9)
  {
    if (!v11) {
      return 0;
    }
  }
  else
  {
    if (*v10 != *v8) {
      LOBYTE(v11) = 1;
    }
    if (v11) {
      return 0;
    }
  }
  uint64_t v12 = Missing[9];
  uint64_t v13 = (_DWORD *)(a1 + v12);
  char v14 = *(unsigned char *)(a1 + v12 + 4);
  uint64_t v15 = (_DWORD *)(a2 + v12);
  char v16 = *(unsigned char *)(a2 + v12 + 4);
  if ((v14 & 1) == 0)
  {
    if (*v15 != *v13) {
      char v16 = 1;
    }
    return (v16 & 1) == 0;
  }
  return (v16 & 1) != 0;
}

uint64_t sub_10016300C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100163074(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for FindMissingMessages(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070DD60);
}

uint64_t sub_1001630F4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v21 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    long long v7 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 48) = v7;
    uint64_t v8 = v7;
    char v9 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v7 - 8);
    swift_bridgeObjectRetain();
    v9(v4 + 24, a2 + 3, v8);
    uint64_t v10 = a2[9];
    *(void *)(v4 + 64) = a2[8];
    *(void *)(v4 + 72) = v10;
    *(_WORD *)(v4 + 80) = *((_WORD *)a2 + 40);
    *(void *)(v4 + 88) = a2[11];
    *(_DWORD *)(v4 + 96) = *((_DWORD *)a2 + 24);
    *(void *)(v4 + 104) = a2[13];
    *(unsigned char *)(v4 + 112) = *((unsigned char *)a2 + 112);
    uint64_t v11 = a3[9];
    uint64_t v12 = (void *)(v4 + v11);
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v14 = *(uint64_t *)((char *)a2 + v11 + 8);
    *uint64_t v12 = *(uint64_t *)((char *)a2 + v11);
    v12[1] = v14;
    uint64_t v15 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
    char v16 = (char *)v12 + v15;
    uint64_t v17 = (const void *)(v13 + v15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_10000566C(&qword_100709E30);
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = sub_10000566C(&qword_10070A000);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v22 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v22 - 8) + 16))(v16, v17, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    uint64_t v23 = a3[10];
    uint64_t v24 = a3[11];
    uint64_t v25 = v4 + v23;
    uint64_t v26 = (uint64_t)a2 + v23;
    *(void *)uint64_t v25 = *(void *)v26;
    *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
    uint64_t v27 = v4 + v24;
    uint64_t v28 = (uint64_t)a2 + v24;
    *(void *)uint64_t v27 = *(void *)v28;
    *(_WORD *)(v27 + 12) = *(_WORD *)(v28 + 12);
    *(_DWORD *)(v27 + 8) = *(_DWORD *)(v28 + 8);
    *(_DWORD *)(v27 + 16) = *(_DWORD *)(v28 + 16);
    *(unsigned char *)(v27 + 20) = *(unsigned char *)(v28 + 20);
    uint64_t v29 = a3[13];
    *(_WORD *)(v4 + a3[12]) = *(_WORD *)((char *)a2 + a3[12]);
    uint64_t v30 = v4 + v29;
    uint64_t v31 = (uint64_t)a2 + v29;
    *(void *)uint64_t v30 = *(void *)v31;
    *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
    uint64_t v32 = a3[15];
    *(unsigned char *)(v4 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    uint64_t v33 = v4 + v32;
    uint64_t v34 = (uint64_t)a2 + v32;
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_10000566C(&qword_100709E60);
    uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16);
    v36(v33, v34, v35);
    v36(v4 + a3[16], (uint64_t)a2 + a3[16], v35);
    v36(v4 + a3[17], (uint64_t)a2 + a3[17], v35);
    uint64_t v37 = a3[18];
    uint64_t v38 = v4 + v37;
    uint64_t v39 = (uint64_t)a2 + v37;
    *(void *)uint64_t v38 = *(void *)v39;
    *(_WORD *)(v38 + 8) = *(_WORD *)(v39 + 8);
    int v40 = *(_DWORD *)(v39 + 16);
    *(_DWORD *)(v38 + 12) = *(_DWORD *)(v39 + 12);
    *(_DWORD *)(v38 + 16) = v40;
    *(unsigned char *)(v38 + 20) = *(unsigned char *)(v39 + 20);
    *(void *)(v38 + 24) = *(void *)(v39 + 24);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100163494(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[9];
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for MessageBatches(0) + 24);
  uint64_t v6 = sub_10000566C(&qword_100709E30);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[15];
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(a1 + a2[16], v9);
  v10(a1 + a2[17], v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100163630(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = a1 + 24;
  uint64_t v7 = a2 + 24;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  v10(v6, v7, v9);
  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v11;
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v12 = a3[9];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *uint64_t v13 = *(void *)(a2 + v12);
  v13[1] = v15;
  uint64_t v16 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
  uint64_t v17 = (char *)v13 + v16;
  uint64_t v18 = (const void *)(v14 + v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_10000566C(&qword_100709E30);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_10000566C(&qword_10070A000);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_10000566C(&qword_100709E60);
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v18, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v23 = a3[10];
  uint64_t v24 = a3[11];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(void *)uint64_t v27 = *(void *)v28;
  *(_WORD *)(v27 + 12) = *(_WORD *)(v28 + 12);
  *(_DWORD *)(v27 + 8) = *(_DWORD *)(v28 + 8);
  *(_DWORD *)(v27 + 16) = *(_DWORD *)(v28 + 16);
  *(unsigned char *)(v27 + 20) = *(unsigned char *)(v28 + 20);
  uint64_t v29 = a3[13];
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)uint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  uint64_t v32 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_10000566C(&qword_100709E60);
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16);
  v36(v33, v34, v35);
  v36(a1 + a3[16], a2 + a3[16], v35);
  v36(a1 + a3[17], a2 + a3[17], v35);
  uint64_t v37 = a3[18];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  *(void *)uint64_t v38 = *(void *)v39;
  *(_WORD *)(v38 + 8) = *(_WORD *)(v39 + 8);
  int v40 = *(_DWORD *)(v39 + 16);
  *(_DWORD *)(v38 + 12) = *(_DWORD *)(v39 + 12);
  *(_DWORD *)(v38 + 16) = v40;
  *(unsigned char *)(v38 + 20) = *(unsigned char *)(v39 + 20);
  *(void *)(v38 + 24) = *(void *)(v39 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100163980(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_100022498((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  *uint64_t v7 = *(void *)(a2 + v6);
  v7[1] = *(void *)(a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
  uint64_t v10 = (char *)v7 + v9;
  uint64_t v11 = (char *)(v8 + v9);
  uint64_t v12 = sub_10000566C(&qword_100709E30);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      uint64_t v45 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 24))(v10, v11, v45);
      goto LABEL_7;
    }
    sub_100007A48((uint64_t)v10, &qword_100709E30);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v18 = sub_10000566C(&qword_10070A000);
    memcpy(v10, v11, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v17 = sub_10000566C(&qword_100709E60);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v10, v11, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  *(unsigned char *)(v20 + 8) = *((unsigned char *)v21 + 8);
  *(void *)uint64_t v20 = v22;
  uint64_t v23 = a3[11];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(void *)(a1 + v23) = *(void *)(a2 + v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v26 = *(_DWORD *)(v25 + 8);
  *(_WORD *)(v24 + 12) = *(_WORD *)(v25 + 12);
  *(_DWORD *)(v24 + 8) = v26;
  int v27 = *(_DWORD *)(v25 + 16);
  *(unsigned char *)(v24 + 20) = *(unsigned char *)(v25 + 20);
  *(_DWORD *)(v24 + 16) = v27;
  uint64_t v28 = a3[12];
  uint64_t v29 = (unsigned char *)(a1 + v28);
  uint64_t v30 = (unsigned char *)(a2 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  uint64_t v31 = a3[13];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v34 = *v33;
  *(unsigned char *)(v32 + 8) = *((unsigned char *)v33 + 8);
  *(void *)uint64_t v32 = v34;
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v35 = a3[15];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_10000566C(&qword_100709E60);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24);
  v39(v36, v37, v38);
  v39(a1 + a3[16], a2 + a3[16], v38);
  v39(a1 + a3[17], a2 + a3[17], v38);
  uint64_t v40 = a3[18];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  *(void *)uint64_t v41 = *(void *)v42;
  *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
  *(unsigned char *)(v41 + 9) = *(unsigned char *)(v42 + 9);
  *(_DWORD *)(v41 + 12) = *(_DWORD *)(v42 + 12);
  int v43 = *(_DWORD *)(v42 + 16);
  *(unsigned char *)(v41 + 20) = *(unsigned char *)(v42 + 20);
  *(_DWORD *)(v41 + 16) = v43;
  *(void *)(v41 + 24) = *(void *)(v42 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100163D90(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v9 = a3[9];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  uint64_t v12 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
  uint64_t v13 = (void *)(v10 + v12);
  uint64_t v14 = (const void *)(v11 + v12);
  uint64_t v15 = sub_10000566C(&qword_100709E30);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_10000566C(&qword_10070A000);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_10000566C(&qword_100709E60);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v13, v14, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v19 = a3[10];
  uint64_t v20 = a3[11];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(void *)(v23 + 13) = *(void *)(v24 + 13);
  uint64_t v25 = a3[13];
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = sub_10000566C(&qword_100709E60);
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32);
  v32(v29, v30, v31);
  v32(a1 + a3[16], a2 + a3[16], v31);
  v32(a1 + a3[17], a2 + a3[17], v31);
  uint64_t v33 = a3[18];
  uint64_t v34 = (_OWORD *)(a1 + v33);
  uint64_t v35 = (_OWORD *)(a2 + v33);
  long long v36 = v35[1];
  _OWORD *v34 = *v35;
  v34[1] = v36;
  return a1;
}

uint64_t sub_100164018(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v8 = a3[9];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)(a2 + v8 + 8);
  *uint64_t v9 = *(void *)(a2 + v8);
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
  uint64_t v13 = (char *)v9 + v12;
  uint64_t v14 = (char *)(v10 + v12);
  uint64_t v15 = sub_10000566C(&qword_100709E30);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      uint64_t v44 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 40))(v13, v14, v44);
      goto LABEL_7;
    }
    sub_100007A48((uint64_t)v13, &qword_100709E30);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v21 = sub_10000566C(&qword_10070A000);
    memcpy(v13, v14, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v20 = sub_10000566C(&qword_100709E60);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v13, v14, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  uint64_t v22 = a3[10];
  uint64_t v23 = a3[11];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(void *)(a1 + v23) = *(void *)(a2 + v23);
  swift_bridgeObjectRelease();
  *(_WORD *)(v26 + 12) = *(_WORD *)(v27 + 12);
  *(_DWORD *)(v26 + 8) = *(_DWORD *)(v27 + 8);
  *(_DWORD *)(v26 + 16) = *(_DWORD *)(v27 + 16);
  *(unsigned char *)(v26 + 20) = *(unsigned char *)(v27 + 20);
  uint64_t v28 = a3[12];
  uint64_t v29 = a3[13];
  uint64_t v30 = (unsigned char *)(a1 + v28);
  uint64_t v31 = (unsigned char *)(a2 + v28);
  *uint64_t v30 = *v31;
  v30[1] = v31[1];
  uint64_t v32 = a1 + v29;
  uint64_t v33 = a2 + v29;
  *(void *)uint64_t v32 = *(void *)v33;
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
  uint64_t v34 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = sub_10000566C(&qword_100709E60);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 40);
  v38(v35, v36, v37);
  v38(a1 + a3[16], a2 + a3[16], v37);
  v38(a1 + a3[17], a2 + a3[17], v37);
  uint64_t v39 = a3[18];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  *(void *)uint64_t v40 = *(void *)v41;
  *(unsigned char *)(v40 + 8) = *(unsigned char *)(v41 + 8);
  *(unsigned char *)(v40 + 9) = *(unsigned char *)(v41 + 9);
  int v42 = *(_DWORD *)(v41 + 16);
  *(_DWORD *)(v40 + 12) = *(_DWORD *)(v41 + 12);
  *(_DWORD *)(v40 + 16) = v42;
  *(unsigned char *)(v40 + 20) = *(unsigned char *)(v41 + 20);
  *(void *)(v40 + 24) = *(void *)(v41 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001643D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001643EC);
}

uint64_t sub_1001643EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MessageBatches(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000566C(&qword_100709E38);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 60);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10016451C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100164530);
}

uint64_t sub_100164530(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MessageBatches(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000566C(&qword_100709E38);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 60);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_100164660()
{
  type metadata accessor for MessageBatches(319);
  if (v0 <= 0x3F)
  {
    sub_100069220();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_100164798()
{
  unint64_t result = qword_10070DDD0;
  if (!qword_10070DDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070DDD0);
  }
  return result;
}

uint64_t sub_1001647EC()
{
  return sub_1001648AC(&qword_10070DDD8, (void (*)(uint64_t))type metadata accessor for FindMissingMessages.CommandID);
}

uint64_t type metadata accessor for FindMissingMessages.CommandID(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070DFE8);
}

uint64_t sub_100164854(uint64_t a1)
{
  uint64_t result = sub_1001648AC(&qword_10070DE90, (void (*)(uint64_t))type metadata accessor for FindMissingMessages);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001648AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FindMissingMessages.Completed(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070DF30);
}

void *sub_100164914(char a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070A640);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = (int *)((char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v19 = a1;
  v17[2] = &v19;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_10002B7F0((uint64_t (*)(char *))sub_100166CEC, v17, a2);
  int64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    int v18 = _swiftEmptyArrayStorage;
    sub_10001AA54(0, v9, 0);
    uint64_t v10 = v8 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v11 = *(void *)(v5 + 72);
    uint64_t v12 = v18;
    do
    {
      sub_1000079E4(v10, (uint64_t)v7, &qword_10070A640);
      int v13 = *v7;
      sub_100007A48((uint64_t)v7, &qword_10070A640);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10001AA54(0, v12[2] + 1, 1);
        uint64_t v12 = v18;
      }
      unint64_t v15 = v12[2];
      unint64_t v14 = v12[3];
      if (v15 >= v14 >> 1)
      {
        sub_10001AA54(v14 > 1, v15 + 1, 1);
        uint64_t v12 = v18;
      }
      v12[2] = v15 + 1;
      *((_DWORD *)v12 + v15 + 8) = v13;
      v10 += v11;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v12;
}

void *sub_100164B0C(uint64_t a1)
{
  uint64_t v18 = sub_10000566C(&qword_10070A640);
  uint64_t v2 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DownloadTask.CommandID(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    char v19 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10001AB74(0, v9, 0);
    uint64_t v11 = *(unsigned __int8 *)(v2 + 80);
    v17[1] = a1;
    uint64_t v12 = a1 + ((v11 + 32) & ~v11);
    uint64_t v13 = *(void *)(v2 + 72);
    uint64_t v10 = v19;
    do
    {
      sub_1000079E4(v12, (uint64_t)v4, &qword_10070A640);
      sub_10016300C((uint64_t)&v4[*(int *)(v18 + 52)], (uint64_t)v8, type metadata accessor for DownloadTask.CommandID);
      sub_100007A48((uint64_t)v4, &qword_10070A640);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10001AB74(0, v10[2] + 1, 1);
        uint64_t v10 = v19;
      }
      unint64_t v15 = v10[2];
      unint64_t v14 = v10[3];
      if (v15 >= v14 >> 1)
      {
        sub_10001AB74(v14 > 1, v15 + 1, 1);
        uint64_t v10 = v19;
      }
      v10[2] = v15 + 1;
      sub_100165A5C((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v15, type metadata accessor for DownloadTask.CommandID);
      v12 += v13;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  return v10;
}

void *sub_100164D84(char a1, uint64_t a2)
{
  return sub_1001651B0(a1, a2, (uint64_t)sub_100166D34, (uint64_t (*)(uint64_t, void *, uint64_t))sub_10002B8D0, (void (*)(BOOL, unint64_t, uint64_t))sub_10001AA54);
}

uint64_t sub_100164DC4(int a1, uint64_t a2, uint64_t a3)
{
  return sub_100165D24(a1, a2, a3) & 1;
}

void *sub_100164DE0(uint64_t a1)
{
  uint64_t v18 = sub_10000566C(&qword_10070A638);
  uint64_t v2 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Missing = type metadata accessor for FindMissingMessages.CommandID(0);
  uint64_t v6 = *(void *)(Missing - 8);
  __chkstk_darwin(Missing - 8);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    char v19 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10001AC94(0, v9, 0);
    uint64_t v11 = *(unsigned __int8 *)(v2 + 80);
    v17[1] = a1;
    uint64_t v12 = a1 + ((v11 + 32) & ~v11);
    uint64_t v13 = *(void *)(v2 + 72);
    uint64_t v10 = v19;
    do
    {
      sub_1000079E4(v12, (uint64_t)v4, &qword_10070A638);
      sub_10016300C((uint64_t)&v4[*(int *)(v18 + 52)], (uint64_t)v8, type metadata accessor for FindMissingMessages.CommandID);
      sub_100007A48((uint64_t)v4, &qword_10070A638);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10001AC94(0, v10[2] + 1, 1);
        uint64_t v10 = v19;
      }
      unint64_t v15 = v10[2];
      unint64_t v14 = v10[3];
      if (v15 >= v14 >> 1)
      {
        sub_10001AC94(v14 > 1, v15 + 1, 1);
        uint64_t v10 = v19;
      }
      v10[2] = v15 + 1;
      sub_100165A5C((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v15, type metadata accessor for FindMissingMessages.CommandID);
      v12 += v13;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  return v10;
}

void *sub_100165058(uint64_t a1)
{
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_10002BCFC((uint64_t)CredentialsRequestID.init(), (uint64_t)&v10, a1);
  int64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
    sub_10001AA54(0, v3, 0);
    uint64_t v4 = v11;
    unint64_t v5 = v11[2];
    uint64_t v6 = 32;
    do
    {
      int v7 = *(_DWORD *)(v2 + v6);
      uint64_t v11 = v4;
      unint64_t v8 = v4[3];
      if (v5 >= v8 >> 1)
      {
        sub_10001AA54(v8 > 1, v5 + 1, 1);
        uint64_t v4 = v11;
      }
      v4[2] = v5 + 1;
      *((_DWORD *)v4 + v5 + 8) = v7;
      v6 += 8;
      ++v5;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

void *sub_100165170(char a1, uint64_t a2)
{
  return sub_1001651B0(a1, a2, (uint64_t)sub_100166D0C, (uint64_t (*)(uint64_t, void *, uint64_t))sub_10002B87C, (void (*)(BOOL, unint64_t, uint64_t))sub_10001AA94);
}

void *sub_1001651B0(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void *, uint64_t), void (*a5)(BOOL, unint64_t, uint64_t))
{
  char v19 = a1;
  void v17[2] = &v19;
  swift_bridgeObjectRetain();
  uint64_t v9 = a4(a3, v17, a2);
  unint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    a5(0, v10, 0);
    uint64_t v11 = v18;
    unint64_t v12 = v18[2];
    uint64_t v13 = 32;
    do
    {
      int v14 = *(_DWORD *)(v9 + v13);
      uint64_t v18 = v11;
      unint64_t v15 = v11[3];
      if (v12 >= v15 >> 1)
      {
        a5(v15 > 1, v12 + 1, 1);
        uint64_t v11 = v18;
      }
      v11[2] = v12 + 1;
      *((_DWORD *)v11 + v12 + 8) = v14;
      v13 += 24;
      ++v12;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v11;
}

uint64_t sub_1001652E0(int a1, uint64_t a2, uint64_t a3)
{
  return sub_1001667A8(a1, a2, a3) & 1;
}

void *sub_1001652FC(char a1, uint64_t a2)
{
  char v13 = a1 & 1;
  v11[2] = &v13;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_10002BF6C((uint64_t)sub_100166CD4, (uint64_t)v11, a2);
  int64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    unint64_t v12 = _swiftEmptyArrayStorage;
    sub_10001AA94(0, v4, 0);
    unint64_t v5 = v12;
    unint64_t v6 = v12[2];
    uint64_t v7 = 32;
    do
    {
      int v8 = *(_DWORD *)(v3 + v7);
      unint64_t v12 = v5;
      unint64_t v9 = v5[3];
      if (v6 >= v9 >> 1)
      {
        sub_10001AA94(v9 > 1, v6 + 1, 1);
        unint64_t v5 = v12;
      }
      uint64_t v5[2] = v6 + 1;
      *((_DWORD *)v5 + v6 + 8) = v8;
      v7 += 24;
      ++v6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v5;
}

uint64_t sub_100165428(long long *a1, void *a2, unsigned int a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v68 = a4;
  uint64_t v63 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v63);
  uint64_t v67 = (void *)((char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_1005E0ED0();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v15) = *(unsigned char *)(a5 + 4);
  unsigned int v66 = a3;
  uint64_t v65 = a2;
  if ((v15 & 1) == 0)
  {
    unint64_t v17 = v14;
    int v18 = *(_DWORD *)a5;
    uint64_t v64 = a6;
    unint64_t v14 = sub_10008361C((uint64_t)a2, a3, v18);
    a6 = v64;
    if ((v14 & 0x100000000) == 0)
    {
      unint64_t v19 = v17;
      uint64_t v20 = v13;
      uint64_t v21 = v16;
      unint64_t v22 = v14;
      uint64_t v23 = v16;
      uint64_t v24 = v19;
      (*(void (**)(char *, void *, unint64_t))(v20 + 16))(v23, v64, v19);
      uint64_t v25 = (uint64_t)v67;
      sub_10016300C((uint64_t)a6, (uint64_t)v67, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v26 = sub_1005E0EB0();
      os_log_type_t v27 = sub_1005E2590();
      int v62 = v27;
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = swift_slowAlloc();
        os_log_t v60 = v26;
        uint64_t v29 = v28;
        uint64_t v61 = swift_slowAlloc();
        *(void *)&v84[0] = v61;
        *(_DWORD *)uint64_t v29 = 68159491;
        LODWORD(v70) = 2;
        void v58[2] = (char *)&v70 + 4;
        sub_1005E2960();
        *(_WORD *)(v29 + 8) = 256;
        uint64_t v30 = *(int *)(v63 + 20);
        unint64_t v59 = v22;
        uint64_t v31 = v25 + v30;
        LOBYTE(v70) = *(unsigned char *)(v25 + v30);
        sub_1005E2960();
        *(_WORD *)(v29 + 11) = 2082;
        v58[1] = v29 + 13;
        uint64_t v63 = v24;
        uint64_t v33 = *(void *)(v31 + 8);
        unint64_t v32 = *(void *)(v31 + 16);
        swift_bridgeObjectRetain();
        *(void *)&long long v70 = sub_1000C6914(v33, v32, (uint64_t *)v84);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v29 + 21) = 1040;
        LODWORD(v70) = 2;
        sub_1005E2960();
        *(_WORD *)(v29 + 27) = 512;
        LOWORD(v70) = *(_WORD *)(v31 + 24);
        sub_1005E2960();
        *(_WORD *)(v29 + 31) = 2160;
        *(void *)&long long v70 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v29 + 41) = 2085;
        int v34 = *(_DWORD *)(v31 + 40);
        *(void *)&long long v70 = *(void *)(v31 + 32);
        DWORD2(v70) = v34;
        swift_bridgeObjectRetain();
        uint64_t v35 = sub_1005E1CC0();
        *(void *)&long long v70 = sub_1000C6914(v35, v36, (uint64_t *)v84);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100163074((uint64_t)v67, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v29 + 51) = 1024;
        LODWORD(v70) = v59;
        sub_1005E2960();
        os_log_t v37 = v60;
        _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v62, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Updating server next UID to %u.", (uint8_t *)v29, 0x39u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        unint64_t v14 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v21, v63);
      }
      else
      {
        sub_100163074(v25, type metadata accessor for MailboxTaskLogger);

        unint64_t v14 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v21, v24);
      }
      a6 = v64;
    }
  }
  uint64_t v67 = v58;
  __chkstk_darwin(v14);
  uint64_t v64 = &v58[-6];
  long long v38 = a1[13];
  long long v82 = a1[12];
  v83[0] = v38;
  long long v39 = a1[15];
  v83[1] = a1[14];
  v83[2] = v39;
  long long v40 = a1[9];
  long long v78 = a1[8];
  long long v79 = v40;
  long long v41 = a1[11];
  long long v80 = a1[10];
  long long v81 = v41;
  long long v42 = a1[5];
  long long v74 = a1[4];
  long long v75 = v42;
  long long v43 = a1[7];
  long long v76 = a1[6];
  long long v77 = v43;
  long long v44 = a1[1];
  long long v70 = *a1;
  long long v71 = v44;
  long long v45 = a1[3];
  long long v72 = a1[2];
  long long v73 = v45;
  long long v46 = v80;
  v84[1] = v81;
  _OWORD v84[2] = v82;
  v85[0] = v83[0];
  *(_OWORD *)((char *)v85 + 12) = *(_OWORD *)((char *)v83 + 12);
  v58[-4] = a5;
  v58[-3] = a6;
  v58[-2] = v68;
  v84[0] = v46;
  sub_100055A48(v84, v86);
  char v47 = BYTE1(v71);
  uint64_t v48 = *((void *)&v71 + 1);
  char v49 = BYTE10(v70);
  uint64_t v50 = *((void *)&v72 + 1);
  uint64_t v51 = v73;
  char v52 = v72;
  char v53 = v71;
  swift_bridgeObjectRetain();
  uint64_t v54 = sub_1000D8938();
  unint64_t v55 = sub_1000D8D74(v53, v47 & 1, v48, v52, v50, v49, v51, v54);
  uint64_t result = (uint64_t)sub_100055A48(v86, &v87);
  if (v88 == 1)
  {
    unint64_t v69 = v87;
    sub_100149CC0((uint64_t)v86);
    sub_1000498B8(&v69, v65, v66, 0, (void (*)(char *, unint64_t))sub_100165A44, (uint64_t)v64, v55 & 0x101010101FFFF01);
    uint64_t result = sub_100149CF4((uint64_t)v86);
    unint64_t v57 = v69;
    *((void *)a1 + 21) = 0;
    *((void *)a1 + 22) = 0;
    *((void *)a1 + 20) = v57;
    *((unsigned char *)a1 + 184) = 1;
  }
  return result;
}

uint64_t sub_100165A44(uint64_t a1, uint64_t a2)
{
  return sub_10015DBD4(a1, a2 & 0x101010101FFFF01, v2[2], v2[3], v2[4]);
}

uint64_t sub_100165A5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100165AC4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(_DWORD *)(a2 + 32) == result)
  {
    uint64_t v3 = a2 + 40;
    return *(void *)v3;
  }
  if (v2 == 1) {
    return 0;
  }
  uint64_t v3 = a2 + 56;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v5 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    if (*(_DWORD *)(v3 - 8) == result) {
      return *(void *)v3;
    }
    v3 += 16;
    if (v5 == v2) {
      return 0;
    }
  }
  __break(1u);
  return result;
}

void *sub_100165B2C(char a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070A638);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = (int *)((char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v19 = a1;
  void v17[2] = &v19;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_10002C818((uint64_t (*)(char *))sub_100166CB0, v17, a2);
  int64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    int v18 = _swiftEmptyArrayStorage;
    sub_10001AA54(0, v9, 0);
    uint64_t v10 = v8 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v11 = *(void *)(v5 + 72);
    uint64_t v12 = v18;
    do
    {
      sub_1000079E4(v10, (uint64_t)v7, &qword_10070A638);
      int v13 = *v7;
      sub_100007A48((uint64_t)v7, &qword_10070A638);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10001AA54(0, v12[2] + 1, 1);
        uint64_t v12 = v18;
      }
      unint64_t v15 = v12[2];
      unint64_t v14 = v12[3];
      if (v15 >= v14 >> 1)
      {
        sub_10001AA54(v14 > 1, v15 + 1, 1);
        uint64_t v12 = v18;
      }
      v12[2] = v15 + 1;
      *((_DWORD *)v12 + v15 + 8) = v13;
      v10 += v11;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v12;
}

uint64_t sub_100165D24(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int v56 = a1;
  uint64_t v7 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v47 - v11;
  uint64_t v13 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v14 = __chkstk_darwin(v13);
  char v52 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v51 = (char *)v47 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)v47 - v19;
  __chkstk_darwin(v18);
  uint64_t v23 = (char *)v47 - v22;
  uint64_t v24 = *(void *)(a3 + 16);
  if (!v24) {
    return 0;
  }
  uint64_t v54 = a3;
  unint64_t v55 = v12;
  v47[0] = v10;
  v47[1] = v7;
  uint64_t v48 = a2;
  uint64_t v53 = v4;
  uint64_t v25 = a3 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  uint64_t v26 = *(void *)(v21 + 72);
  swift_bridgeObjectRetain();
  uint64_t v27 = v25;
  uint64_t v49 = v24;
  uint64_t v28 = v24;
  while (1)
  {
    sub_10016300C(v27, (uint64_t)v23, type metadata accessor for TaskHistory.Previous);
    sub_10016300C((uint64_t)v23, (uint64_t)v20, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_100163074((uint64_t)v20, type metadata accessor for TaskHistory.Previous);
LABEL_4:
    sub_100163074((uint64_t)v23, type metadata accessor for TaskHistory.Previous);
    v27 += v26;
    if (!--v28)
    {
      uint64_t v45 = 0;
      goto LABEL_23;
    }
  }
  uint64_t v29 = sub_10000566C(&qword_10070B308);
  uint64_t v30 = v26;
  uint64_t v31 = v13;
  int v32 = *(_DWORD *)&v20[*(int *)(v29 + 48)];
  sub_100163074((uint64_t)v20, type metadata accessor for ClientCommand);
  BOOL v33 = v32 == v56;
  uint64_t v13 = v31;
  uint64_t v26 = v30;
  if (!v33) {
    goto LABEL_4;
  }
  sub_100163074((uint64_t)v23, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v35 = (uint64_t)v51;
  uint64_t v34 = (uint64_t)v52;
  uint64_t v36 = v49;
  while (1)
  {
    sub_10016300C(v25, v35, type metadata accessor for TaskHistory.Previous);
    sub_10016300C(v35, v34, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_100163074(v34, type metadata accessor for TaskHistory.Previous);
LABEL_10:
    sub_100163074(v35, type metadata accessor for TaskHistory.Previous);
    v25 += v26;
    if (!--v36)
    {
      uint64_t v45 = 1;
      goto LABEL_23;
    }
  }
  int v37 = *(_DWORD *)(v34 + *(int *)(v29 + 48));
  sub_100163074(v34, type metadata accessor for ClientCommand);
  if (v37 != v56) {
    goto LABEL_10;
  }
  sub_100163074(v35, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(v48 + 16);
  if (!v38) {
    return 0;
  }
  uint64_t v39 = v48 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
  uint64_t v40 = *(void *)(v50 + 72);
  swift_bridgeObjectRetain();
  uint64_t v41 = v47[0];
  uint64_t v42 = (uint64_t)v55;
  do
  {
    sub_10016300C(v39, v42, type metadata accessor for TaskHistory.Running);
    sub_10016300C(v42, v41, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100163074(v41, type metadata accessor for TaskHistory.Running);
    }
    else
    {
      int v43 = *(_DWORD *)(v41 + 8);
      uint64_t v44 = sub_10000566C(&qword_10070B6A0);
      sub_100163074(v41 + *(int *)(v44 + 64), type metadata accessor for ClientCommand);
      if (v43 == v56)
      {
        sub_100163074((uint64_t)v55, type metadata accessor for TaskHistory.Running);
        uint64_t v45 = 1;
        goto LABEL_23;
      }
    }
    uint64_t v42 = (uint64_t)v55;
    sub_100163074((uint64_t)v55, type metadata accessor for TaskHistory.Running);
    v39 += v40;
    --v38;
  }
  while (v38);
  uint64_t v45 = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v45;
}

uint64_t sub_100166298(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v55 = a5;
  uint64_t v10 = sub_10000566C(&qword_100709E60);
  uint64_t v47 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  long long v46 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_10000566C(&qword_10070CC20);
  __chkstk_darwin(v50);
  uint64_t v49 = (uint64_t *)((char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v13 - 8);
  uint64_t v48 = (uint64_t)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000566C(&qword_100709E30);
  uint64_t v52 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v51 = (uint64_t)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v5 + 64);
  uint64_t v20 = *(void *)(v5 + 72);
  Missinguint64_t Messages = type metadata accessor for FindMissingMessages(0);
  uint64_t v53 = v5;
  uint64_t v54 = MissingMessages;
  if (*(void *)(v5 + *(int *)(MissingMessages + 72) + 24))
  {
    swift_bridgeObjectRetain();
    sub_10016C17C(a1, v21, v20, a2, a3, a4);
    swift_bridgeObjectRelease();
  }
  unint64_t v55 = a1;
  uint64_t v23 = sub_1001054AC(0, 1, a4);
  uint64_t v24 = v23[2];
  if (v24)
  {
    uint64_t v45 = v10;
    uint64_t v25 = 0;
    while ((sub_1001667A8(*((_DWORD *)v23 + v25 + 8), a2, a3) & 1) == 0)
    {
      if (v24 == ++v25) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v27 = v53 + *(int *)(v54 + 44);
    uint64_t v28 = *(void *)v27;
    char v29 = *(unsigned char *)(v27 + 13);
    LOBYTE(v27) = *(unsigned char *)(v27 + 20);
    char v57 = v29;
    char v56 = v27;
    sub_10016E4E0(v28, (uint64_t)v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v17, 1, v18) == 1)
    {
      uint64_t v30 = &qword_10070A000;
      uint64_t v31 = (uint64_t)v17;
    }
    else
    {
      uint64_t v32 = v51;
      sub_10001FDF0((uint64_t)v17, v51, &qword_100709E30);
      if (((v55 >> 59) & 0x1E | (v55 >> 2) & 1) == 9)
      {
        BOOL v33 = (uint64_t *)swift_projectBox();
        uint64_t v34 = v49;
        uint64_t v35 = *(int *)(v50 + 48);
        uint64_t v36 = (uint64_t)v49 + v35;
        uint64_t v37 = *(int *)(v50 + 64);
        uint64_t v38 = (uint64_t)v49 + v37;
        uint64_t v39 = (uint64_t)v33 + v37;
        uint64_t v40 = *v33;
        uint64_t v41 = v33[1];
        *uint64_t v49 = *v33;
        v34[1] = v41;
        sub_1000079E4((uint64_t)v33 + v35, v36, &qword_100709E38);
        sub_1000079E4(v39, v38, &qword_100709E30);
        if (v20 != v41 || !sub_1000255D4((uint64_t)v21, v40))
        {
          sub_100007A48(v32, &qword_100709E30);
          sub_100007A48(v38, &qword_100709E30);
          uint64_t v30 = &qword_100709E38;
          uint64_t v31 = v36;
          return sub_100007A48(v31, v30);
        }
        uint64_t v42 = v48;
        sub_10001FDF0(v36, v48, &qword_100709E38);
        sub_10001FC6C();
        char v43 = sub_1005E35A0();
        sub_100007A48(v38, &qword_100709E30);
        if (v43)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, v42, v45);
          sub_1005E3670();
        }
        sub_100007A48(v42, &qword_100709E38);
      }
      uint64_t v30 = &qword_100709E30;
      uint64_t v31 = v32;
    }
    return sub_100007A48(v31, v30);
  }
LABEL_7:
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001667A8(int a1, uint64_t a2, uint64_t a3)
{
  int v50 = a1;
  uint64_t v6 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v45 = (char *)&v40 - v10;
  uint64_t v11 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v47 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  long long v46 = (char *)&v40 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v40 - v17;
  __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v40 - v20;
  uint64_t v22 = *(void *)(a3 + 16);
  if (!v22) {
    return 0;
  }
  uint64_t v41 = v9;
  uint64_t v42 = v6;
  uint64_t v43 = a2;
  uint64_t v23 = a3 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  uint64_t v24 = a3;
  uint64_t v25 = *(void *)(v19 + 72);
  uint64_t v48 = v3;
  uint64_t v49 = v24;
  swift_bridgeObjectRetain_n();
  uint64_t v26 = v23;
  uint64_t v27 = v22;
  while (1)
  {
    sub_10016300C(v26, (uint64_t)v21, type metadata accessor for TaskHistory.Previous);
    sub_10016300C((uint64_t)v21, (uint64_t)v18, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_100163074((uint64_t)v18, type metadata accessor for TaskHistory.Previous);
LABEL_4:
    sub_100163074((uint64_t)v21, type metadata accessor for TaskHistory.Previous);
    v26 += v25;
    if (!--v27)
    {
      uint64_t v38 = 0;
      goto LABEL_22;
    }
  }
  int v28 = *((_DWORD *)v18 + 2);
  sub_10007C4A4(*(void *)v18);
  if (v28 != v50) {
    goto LABEL_4;
  }
  sub_100163074((uint64_t)v21, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain_n();
  uint64_t v30 = (uint64_t)v46;
  uint64_t v29 = (uint64_t)v47;
  while (1)
  {
    sub_10016300C(v23, v30, type metadata accessor for TaskHistory.Previous);
    sub_10016300C(v30, v29, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_100163074(v29, type metadata accessor for TaskHistory.Previous);
LABEL_9:
    sub_100163074(v30, type metadata accessor for TaskHistory.Previous);
    v23 += v25;
    if (!--v22)
    {
      uint64_t v38 = 1;
      goto LABEL_22;
    }
  }
  int v31 = *(_DWORD *)(v29 + 8);
  sub_10007C4A4(*(void *)v29);
  if (v31 != v50) {
    goto LABEL_9;
  }
  sub_100163074(v30, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease_n();
  uint64_t v32 = *(void *)(v43 + 16);
  if (!v32) {
    return 0;
  }
  uint64_t v33 = v43 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
  uint64_t v34 = *(void *)(v44 + 72);
  swift_bridgeObjectRetain_n();
  uint64_t v35 = (uint64_t)v41;
  uint64_t v36 = (uint64_t)v45;
  do
  {
    sub_10016300C(v33, v36, type metadata accessor for TaskHistory.Running);
    sub_10016300C(v36, v35, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      int v37 = *(_DWORD *)(v35 + 4);
      sub_10007C4A4(*(void *)(v35 + 8));
      if (v37 == v50)
      {
        sub_100163074(v36, type metadata accessor for TaskHistory.Running);
        uint64_t v38 = 1;
        goto LABEL_22;
      }
    }
    else
    {
      sub_100163074(v35, type metadata accessor for TaskHistory.Running);
    }
    sub_100163074(v36, type metadata accessor for TaskHistory.Running);
    v33 += v34;
    --v32;
  }
  while (v32);
  uint64_t v38 = 0;
LABEL_22:
  swift_bridgeObjectRelease_n();
  return v38;
}

uint64_t sub_100166CB0(uint64_t a1)
{
  return sub_1001599F0(a1, **(unsigned char **)(v1 + 16)) & 1;
}

uint64_t sub_100166CD4(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 16) ^ **(unsigned __int8 **)(v1 + 16)) & 1;
}

BOOL sub_100166CEC(uint64_t a1)
{
  return sub_100162AB4(a1, *(unsigned __int8 **)(v1 + 16));
}

BOOL sub_100166D0C(uint64_t a1)
{
  return qword_1005F44E0[(*(void *)(a1 + 16) >> 60) & 3] == **(unsigned __int8 **)(v1 + 16);
}

BOOL sub_100166D34(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16) >> 60;
  uint64_t v3 = 1;
  if (v2 == 11) {
    uint64_t v3 = 2;
  }
  if (v2 == 15) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = v3;
  }
  return v4 == **(unsigned __int8 **)(v1 + 16);
}

void *sub_100166D64(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
    uint64_t v7 = a3[6];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_10000566C(&qword_100709E60);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = _s15MissingMessagesO10NewMissingVMa(0);
    uint64_t v13 = *(int *)(v12 + 20);
    uint64_t v14 = v8 + v13;
    uint64_t v15 = v9 + v13;
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(void *)(v14 + 13) = *(void *)(v15 + 13);
    v11(v8 + *(int *)(v12 + 24), v9 + *(int *)(v12 + 24), v10);
    uint64_t v16 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
    v17[4] = *(unsigned char *)(v18 + 4);
    uint64_t v19 = a3[9];
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (uint64_t)a2 + v19;
    *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
    v20[4] = *(unsigned char *)(v21 + 4);
  }
  return v4;
}

uint64_t sub_100166EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_10000566C(&qword_100709E60);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v6)((void *)(v3 - 8), v2, v3);
  uint64_t v4 = v2 + *(int *)(_s15MissingMessagesO10NewMissingVMa(0) + 24);
  return v6(v4, v3);
}

uint64_t sub_100166F8C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = _s15MissingMessagesO10NewMissingVMa(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = v7 + v12;
  uint64_t v14 = v8 + v12;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(void *)(v13 + 13) = *(void *)(v14 + 13);
  v10(v7 + *(int *)(v11 + 24), v8 + *(int *)(v11 + 24), v9);
  uint64_t v15 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(unsigned char *)(v16 + 4) = *(unsigned char *)(v17 + 4);
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  *(unsigned char *)(v19 + 4) = *(unsigned char *)(v20 + 4);
  return a1;
}

uint64_t sub_1001670C0(uint64_t a1, int *a2, int *a3)
{
  int v6 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v6;
  int v7 = a2[2];
  *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (uint64_t)a2 + v8;
  uint64_t v11 = sub_10000566C(&qword_100709E60);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24);
  v12(v9, v10, v11);
  uint64_t v13 = _s15MissingMessagesO10NewMissingVMa(0);
  uint64_t v14 = *(int *)(v13 + 20);
  uint64_t v15 = v9 + v14;
  uint64_t v16 = v10 + v14;
  char v17 = *(unsigned char *)(v16 + 4);
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(v15 + 4) = v17;
  char v18 = *(unsigned char *)(v16 + 12);
  *(_DWORD *)(v15 + 8) = *(_DWORD *)(v16 + 8);
  *(unsigned char *)(v15 + 12) = v18;
  char v19 = *(unsigned char *)(v16 + 20);
  *(_DWORD *)(v15 + 16) = *(_DWORD *)(v16 + 16);
  *(unsigned char *)(v15 + 20) = v19;
  v12(v9 + *(int *)(v13 + 24), v10 + *(int *)(v13 + 24), v11);
  *(unsigned char *)(a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (uint64_t)a2 + v20;
  char v23 = *(unsigned char *)(v22 + 4);
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(unsigned char *)(v21 + 4) = v23;
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = (uint64_t)a2 + v24;
  char v27 = *(unsigned char *)(v26 + 4);
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  *(unsigned char *)(v25 + 4) = v27;
  return a1;
}

uint64_t sub_100167218(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = _s15MissingMessagesO10NewMissingVMa(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = v7 + v12;
  uint64_t v14 = v8 + v12;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(void *)(v13 + 13) = *(void *)(v14 + 13);
  v10(v7 + *(int *)(v11 + 24), v8 + *(int *)(v11 + 24), v9);
  uint64_t v15 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(unsigned char *)(v16 + 4) = *(unsigned char *)(v17 + 4);
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  *(unsigned char *)(v19 + 4) = *(unsigned char *)(v20 + 4);
  return a1;
}

uint64_t sub_10016734C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  uint64_t v11 = _s15MissingMessagesO10NewMissingVMa(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = v7 + v12;
  uint64_t v14 = v8 + v12;
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  *(unsigned char *)(v13 + 4) = *(unsigned char *)(v14 + 4);
  *(_DWORD *)(v13 + 8) = *(_DWORD *)(v14 + 8);
  *(unsigned char *)(v13 + 12) = *(unsigned char *)(v14 + 12);
  *(_DWORD *)(v13 + 16) = *(_DWORD *)(v14 + 16);
  *(unsigned char *)(v13 + 20) = *(unsigned char *)(v14 + 20);
  v10(v7 + *(int *)(v11 + 24), v8 + *(int *)(v11 + 24), v9);
  uint64_t v15 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(unsigned char *)(v16 + 4) = *(unsigned char *)(v17 + 4);
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  *(unsigned char *)(v19 + 4) = *(unsigned char *)(v20 + 4);
  return a1;
}

uint64_t sub_1001674A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001674B4);
}

uint64_t sub_1001674B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _s15MissingMessagesO10NewMissingVMa(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 3) {
      return v12 - 2;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100167574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100167588);
}

uint64_t sub_100167588(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = _s15MissingMessagesO10NewMissingVMa(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 2;
  }
  return result;
}

uint64_t sub_100167648()
{
  uint64_t result = _s15MissingMessagesO10NewMissingVMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1001676EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_10000566C(&qword_100709E60);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1001677E8(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v3 = sub_10000566C(&qword_100709E60);
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_100167864(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_10000566C(&qword_100709E60);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10016791C(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100163074((uint64_t)a1, type metadata accessor for FindMissingMessages.CommandID);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_10000566C(&qword_100709E60);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_1001679F8(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_10000566C(&qword_100709E60);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100167AB0(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100163074((uint64_t)a1, type metadata accessor for FindMissingMessages.CommandID);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_10000566C(&qword_100709E60);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_100167B8C()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

ValueMetadata *type metadata accessor for FindMissingMessages.ActionID()
{
  return &type metadata for FindMissingMessages.ActionID;
}

unint64_t sub_100167C30()
{
  unint64_t result = qword_10070E020;
  if (!qword_10070E020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E020);
  }
  return result;
}

unint64_t sub_100167C88()
{
  unint64_t result = qword_10070E048;
  if (!qword_10070E048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E048);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FindMissingMessages.CommandID.Kind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100167D88);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = v7 - 2;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for FindMissingMessages.CommandID.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x100167E70);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_100167E98(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 2) {
    return v1 - 1;
  }
  else {
    return 0;
  }
}

unsigned char *sub_100167EAC(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FindMissingMessages.CommandID.Kind()
{
  return &type metadata for FindMissingMessages.CommandID.Kind;
}

unsigned char *storeEnumTagSinglePayload for FindMissingMessages.ActionID.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100167F98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FindMissingMessages.ActionID.Kind()
{
  return &type metadata for FindMissingMessages.ActionID.Kind;
}

unsigned char *storeEnumTagSinglePayload for FindMissingMessages.Completed.ReRunTask(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10016809CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FindMissingMessages.Completed.ReRunTask()
{
  return &type metadata for FindMissingMessages.Completed.ReRunTask;
}

unint64_t sub_1001680D8()
{
  unint64_t result = qword_10070E070;
  if (!qword_10070E070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E070);
  }
  return result;
}

uint64_t sub_10016812C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>)
{
  uint64_t v99 = a6;
  *(void *)&long long v100 = a2;
  *(void *)&long long v101 = a5;
  uint64_t v93 = sub_10000566C(&qword_10070AB30);
  uint64_t v13 = __chkstk_darwin(v93);
  unint64_t v96 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v92 = (uint64_t)&v88 - v15;
  uint64_t v16 = sub_10000566C(&qword_10070D0E8);
  __chkstk_darwin(v16 - 8);
  uint64_t v94 = (uint64_t)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_10000566C(&qword_10070AB48);
  uint64_t v97 = *(void *)(v98 - 8);
  uint64_t v18 = __chkstk_darwin(v98);
  uint64_t v91 = (uint64_t)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v95 = (uint64_t)&v88 - v20;
  uint64_t Missing = type metadata accessor for FindMissingMessages.CommandID(0);
  uint64_t v22 = *(void *)(Missing - 8);
  uint64_t v23 = __chkstk_darwin(Missing);
  uint64_t v25 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23);
  int v28 = (char *)&v88 - v27;
  uint64_t result = sub_10016ACCC(v26, v29, v30, a7);
  if ((unsigned __int128)((uint64_t)a4 * (__int128)3) >> 64 != (uint64_t)(3 * a4) >> 63)
  {
    __break(1u);
    goto LABEL_41;
  }
  if (result < (uint64_t)(3 * a4) / 4)
  {
    unint64_t v33 = sub_10016B018(result, v101 & 0xFFFFFFFF00000101, v32, a7);
    if ((v33 & 0x100000000) == 0 && v33 >= 2)
    {
      unint64_t v89 = a4;
      unint64_t v88 = v33;
      BOOL v90 = a8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_10016B81C(a1, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v35 = v34[2];
      if (v35)
      {
        uint64_t v36 = (uint64_t)v34
            + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
        uint64_t v37 = *(void *)(v22 + 72);
        swift_bridgeObjectRetain();
        unint64_t v38 = v89;
        while (1)
        {
          sub_10016CBDC(v36, (uint64_t)v28, type metadata accessor for FindMissingMessages.CommandID);
          sub_10016CBDC((uint64_t)v28, (uint64_t)v25, type metadata accessor for FindMissingMessages.CommandID);
          if (swift_getEnumCaseMultiPayload() == 1) {
            break;
          }
          sub_10016CB7C((uint64_t)v25, type metadata accessor for FindMissingMessages.CommandID);
          sub_10016CB7C((uint64_t)v28, type metadata accessor for FindMissingMessages.CommandID);
          v36 += v37;
          if (!--v35)
          {
            uint64_t result = swift_bridgeObjectRelease_n();
            goto LABEL_14;
          }
        }
        sub_10016CB7C((uint64_t)v28, type metadata accessor for FindMissingMessages.CommandID);
        swift_bridgeObjectRelease_n();
        goto LABEL_22;
      }
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v38 = v89;
LABEL_14:
      uint64_t v41 = *(void *)(a7 + 16);
      uint64_t v42 = v90;
      if ((v101 & 0x101) != 0)
      {
        int v43 = v99;
        if ((v99 & 0x100000000) == 0)
        {
          if ((v99 & 0xFFFFFFFE) == 0)
          {
LABEL_22:
            uint64_t v55 = sub_10000566C(&qword_10070DEC8);
            return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v90, 1, 1, v55);
          }
          unint64_t v44 = v99 & 0xFFFFFFFE;
          sub_10000566C(&qword_10070E090);
          uint64_t result = swift_initStackObject();
          long long v100 = xmmword_1005F6670;
          *(_OWORD *)(result + 16) = xmmword_1005F6670;
          LODWORD(v104) = 1;
          if (v44 <= 0xFFFFFFF5)
          {
            uint64_t v45 = result;
            LODWORD(v102) = v43 + 10;
            sub_100064094();
            static MessageIdentifier.... infix(_:_:)();
            uint64_t v46 = (uint64_t)v96;
            sub_1000630FC(v45);
            uint64_t result = v38 + 20;
            uint64_t v47 = v98;
            uint64_t v48 = v97;
            if (!__OFADD__(v38, 20))
            {
              uint64_t v49 = v92;
              sub_100066A80(result, v92);
              sub_100007A48(v46, &qword_10070AB30);
              MessageIdentifierSet.count.getter();
              if (v50 < 1)
              {
                sub_100007A48(v49, &qword_10070AB30);
                uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
                uint64_t v53 = v94;
                v54(v94, 1, 1, v47);
              }
              else
              {
                uint64_t v51 = v49;
                uint64_t v52 = v91;
                sub_10001FDF0(v51, v91, &qword_10070AB30);
                uint64_t v53 = v94;
                sub_10001FDF0(v52, v94, &qword_10070AB48);
                uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
                v54(v53, 0, 1, v47);
              }
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v53, 1, v47) == 1)
              {
                sub_100007A48(v53, &qword_10070D0E8);
                goto LABEL_22;
              }
              uint64_t v80 = v95;
              sub_10001FDF0(v53, v95, &qword_10070AB48);
              sub_10000566C(&qword_10070D0F8);
              uint64_t v81 = swift_allocBox();
              uint64_t v83 = v82;
              sub_1000079E4(v80, v82, &qword_10070AB48);
              v54(v83, 0, 1, v47);
              unint64_t v84 = v81 | 0xB000000000000004;
              uint64_t v58 = sub_10000566C(&qword_10070DEC8);
              uint64_t v85 = v90;
              uint64_t v86 = (void *)((char *)v90 + *(int *)(v58 + 48));
              *BOOL v90 = v41;
              *((unsigned char *)v85 + 8) = 1;
              if ((v101 & 0x100) != 0)
              {
                *uint64_t v86 = v84;
              }
              else
              {
                sub_10000566C(&qword_10070CA10);
                type metadata accessor for SearchReturnOption();
                uint64_t v87 = swift_allocObject();
                *(_OWORD *)(v87 + 16) = v100;
                swift_storeEnumTagMultiPayload();
                *uint64_t v86 = v84;
                v86[1] = v87;
              }
              type metadata accessor for ClientCommand(0);
              swift_storeEnumTagMultiPayload();
              sub_100007A48(v95, &qword_10070AB48);
              unint64_t v69 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56);
              long long v70 = v90;
              return v69(v70, 0, 1, v58);
            }
            goto LABEL_46;
          }
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return result;
        }
        sub_10000566C(&qword_10070CA08);
        uint64_t v71 = swift_allocBox();
        uint64_t v73 = v72;
        LODWORD(v102) = v88;
        int v103 = v88;
        sub_100063E18();
        static MessageIdentifier.... infix(_:_:)();
        uint64_t v102 = v104;
        Range<>.init<A>(_:)((uint64_t)&v102, (uint64_t)&type metadata for UID);
        uint64_t v102 = v74;
        sub_10001FC6C();
        sub_1005E36A0();
        uint64_t v75 = sub_10000566C(&qword_100709E30);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v73, 0, 1, v75);
        unint64_t v76 = v71 | 0xA000000000000000;
        uint64_t v58 = sub_10000566C(&qword_10070DEC8);
        long long v77 = v90;
        long long v78 = (void *)((char *)v90 + *(int *)(v58 + 48));
        *BOOL v90 = v41;
        *((unsigned char *)v77 + 8) = 0;
        if ((v101 & 0x100) != 0)
        {
          unint64_t *v78 = v76;
        }
        else
        {
          sub_10000566C(&qword_10070CA10);
          type metadata accessor for SearchReturnOption();
          uint64_t v79 = swift_allocObject();
          *(_OWORD *)(v79 + 16) = xmmword_1005F6670;
          swift_storeEnumTagMultiPayload();
          unint64_t *v78 = v76;
          v78[1] = v79;
        }
        type metadata accessor for ClientCommand(0);
        swift_storeEnumTagMultiPayload();
        unint64_t v69 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56);
        long long v70 = v77;
        return v69(v70, 0, 1, v58);
      }
      uint64_t v56 = v38 - 1;
      if (!__OFSUB__(v38, 1))
      {
        if (v56 <= 0xFFFFFFFFLL)
        {
          if ((unint64_t)v56 <= 0x7FFFFFFFFFFFFFFELL)
          {
            if (!HIDWORD(v38))
            {
              LODWORD(v102) = 1;
              int v103 = v38;
              sub_100064094();
              static MessageIdentifier.... infix(_:_:)();
              uint64_t v57 = v104;
              uint64_t v58 = sub_10000566C(&qword_10070DEC8);
              unint64_t v59 = (void *)((char *)v42 + *(int *)(v58 + 48));
              *uint64_t v42 = v41;
              *((unsigned char *)v42 + 8) = 1;
              sub_10000566C(&qword_10070CA08);
              uint64_t v60 = swift_allocBox();
              uint64_t v62 = v61;
              sub_10000566C(&qword_100709FF8);
              uint64_t inited = swift_initStackObject();
              long long v101 = xmmword_1005F6670;
              *(_OWORD *)(inited + 16) = xmmword_1005F6670;
              LODWORD(v104) = 1;
              LODWORD(v102) = v88;
              sub_100063E18();
              static MessageIdentifier.... infix(_:_:)();
              sub_1000630DC(inited);
              uint64_t v64 = sub_10000566C(&qword_100709E30);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v62, 0, 1, v64);
              sub_10000566C(&qword_10070CA10);
              uint64_t v65 = *(void *)(type metadata accessor for SearchReturnOption() - 8);
              unint64_t v66 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
              uint64_t v67 = swift_allocObject();
              *(_OWORD *)(v67 + 16) = v101;
              unint64_t v68 = v67 + v66;
              *(void *)unint64_t v68 = v57;
              *(unsigned char *)(v68 + 8) = 1;
              swift_storeEnumTagMultiPayload();
              *unint64_t v59 = v60 | 0xA000000000000000;
              v59[1] = v67;
              type metadata accessor for ClientCommand(0);
              swift_storeEnumTagMultiPayload();
              unint64_t v69 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56);
              long long v70 = v42;
              return v69(v70, 0, 1, v58);
            }
LABEL_44:
            __break(1u);
            goto LABEL_45;
          }
LABEL_43:
          __break(1u);
          goto LABEL_44;
        }
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
  }
  uint64_t v39 = sub_10000566C(&qword_10070DEC8);
  uint64_t v40 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56);
  return v40(a8, 1, 1, v39);
}

uint64_t sub_100168DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v144 = a5;
  uint64_t v168 = a1;
  uint64_t v8 = _s20GrowWindowOfInterestV6ResultVMa();
  uint64_t v147 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v146 = (uint64_t)&v140 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000566C(&qword_10070A2D0);
  __chkstk_darwin(v10 - 8);
  uint64_t v158 = (char *)&v140 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000566C(&qword_100709E38);
  uint64_t v156 = *(void *)(v12 - 8);
  uint64_t v157 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v145 = (uint64_t)&v140 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v154 = (uint64_t)&v140 - v15;
  uint64_t v16 = sub_10000566C(&qword_10070AB10);
  __chkstk_darwin(v16 - 8);
  uint64_t v153 = (uint64_t)&v140 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000566C(&qword_10070E078);
  __chkstk_darwin(v18 - 8);
  uint64_t v162 = (char *)&v140 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v148 = *(void *)(v166 - 8);
  uint64_t v20 = __chkstk_darwin(v166);
  uint64_t v140 = (uint64_t)&v140 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  unint64_t v141 = (unint64_t)&v140 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v164 = (uint64_t *)((char *)&v140 - v25);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v165 = (uint64_t)&v140 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v142 = (uint64_t)&v140 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v143 = (uint64_t *)((char *)&v140 - v31);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (uint64_t *)((char *)&v140 - v33);
  __chkstk_darwin(v32);
  uint64_t v163 = (char *)&v140 - v35;
  uint64_t v36 = sub_10000566C(&qword_10070DEB0);
  uint64_t v37 = __chkstk_darwin(v36 - 8);
  uint64_t v155 = (uint64_t)&v140 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v159 = (uint64_t)&v140 - v39;
  uint64_t Missing = type metadata accessor for FindMissingMessages.CommandID(0);
  uint64_t v160 = *(void *)(Missing - 8);
  uint64_t v161 = Missing;
  uint64_t v41 = __chkstk_darwin(Missing);
  uint64_t v150 = (uint64_t)&v140 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v149 = (uint64_t)&v140 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v152 = (uint64_t)&v140 - v46;
  __chkstk_darwin(v45);
  uint64_t v151 = (uint64_t)&v140 - v47;
  uint64_t v48 = type metadata accessor for UntaggedResponse(0);
  uint64_t v49 = __chkstk_darwin(v48);
  uint64_t v51 = (char *)&v140 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v49);
  uint64_t v53 = (char *)&v140 - v52;
  uint64_t v169 = a4;
  uint64_t v54 = sub_100165B2C(0, a4);
  uint64_t v55 = v54[2];
  if (!v55)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v57 = sub_100165B2C(1, v169);
    uint64_t v58 = v57[2];
    if (v58)
    {
      for (uint64_t i = 0; i != v58; ++i)
      {
        if (sub_100164DC4(*((_DWORD *)v57 + i + 8), a2, a3))
        {
          swift_bridgeObjectRelease();
          sub_10016CBDC(v168, (uint64_t)v51, type metadata accessor for UntaggedResponse);
          if (swift_getEnumCaseMultiPayload() != 12)
          {
            sub_10016CB7C((uint64_t)v51, type metadata accessor for UntaggedResponse);
            uint64_t v96 = v167;
            uint64_t v97 = (uint64_t)v158;
            goto LABEL_41;
          }
          uint64_t v77 = *(void *)v51;
          uint64_t v69 = *((void *)v51 + 1);
          uint64_t v78 = *((void *)v51 + 2);
          uint64_t v79 = *((void *)v51 + 3);
          uint64_t v80 = *((void *)v51 + 5);
          LODWORD(v162) = v51[32];
          if (v69)
          {
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            v81._countAndFlagsBits = v77;
            v81._object = (void *)v69;
            IMAP2Protocol::Tag_optional v172 = Tag.init(_:)(v81);
            if (!v172.is_nil)
            {
              unint64_t v71 = *(void *)(a2 + 16);
              if (v71)
              {
                uint64_t v153 = v79;
                uint64_t v143 = (uint64_t *)v80;
                uint64_t v151 = v77;
                uint64_t v152 = v78;
                LODWORD(v163) = v172.value.connectionIdentifier;
                uint64_t v159 = HIDWORD(*(void *)&v172.value);
                uint64_t v82 = a2
                    + ((*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80));
                uint64_t v61 = *(void *)(v148 + 72);
                swift_bridgeObjectRetain();
                unint64_t v83 = 0;
                unint64_t v68 = v164;
                uint64_t v84 = v165;
                while (1)
                {
                  sub_10016CBDC(v82, v84, type metadata accessor for TaskHistory.Running);
                  sub_10016CBDC(v84, (uint64_t)v68, type metadata accessor for TaskHistory.Running);
                  if (swift_getEnumCaseMultiPayload() == 1)
                  {
                    swift_bridgeObjectRetain();
                    sub_10016CB7C((uint64_t)v68, type metadata accessor for TaskHistory.Running);
                  }
                  else
                  {
                    uint64_t v85 = *v68;
                    uint64_t v86 = sub_10000566C(&qword_10070B6A0);
                    uint64_t v87 = (char *)v164 + *(int *)(v86 + 64);
                    swift_bridgeObjectRetain();
                    uint64_t v88 = (uint64_t)v87;
                    unint64_t v68 = v164;
                    sub_10016CB7C(v88, type metadata accessor for ClientCommand);
                    unint64_t v89 = CommandID.tag.getter(v85);
                    if (__PAIR64__(HIDWORD(v89), v89) == __PAIR64__(v159, v163))
                    {
                      sub_10016CB7C(v165, type metadata accessor for TaskHistory.Running);
                      swift_bridgeObjectRelease();
                      if (v71 == v83)
                      {
LABEL_33:
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        uint64_t v77 = v151;
                        goto LABEL_59;
                      }
                      if (v83 < v71)
                      {
                        unint64_t v71 = v141;
                        sub_10016CBDC(v82, v141, type metadata accessor for TaskHistory.Running);
                        uint64_t v61 = v140;
                        sub_10016CBDC(v71, v140, type metadata accessor for TaskHistory.Running);
                        if (swift_getEnumCaseMultiPayload() != 1)
                        {
                          uint64_t v136 = *(void *)v61;
                          int v137 = *(_DWORD *)(v61 + 8);
                          uint64_t v138 = sub_10000566C(&qword_10070B6A0);
                          sub_10016CB7C(v61 + *(int *)(v138 + 64), type metadata accessor for ClientCommand);
                          unint64_t v139 = CommandID.tag.getter(v136);
                          if (__PAIR64__(HIDWORD(v139), v139) == __PAIR64__(v159, v163))
                          {
                            sub_10016CB7C(v71, type metadata accessor for TaskHistory.Running);
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            uint64_t v77 = v151;
                            sub_1000E8770(v151, v69);
                            uint64_t v120 = v155;
                            sub_100159740(v137, v169, v155);
                            uint64_t v118 = v160;
                            uint64_t v119 = v161;
LABEL_61:
                            sub_1000E8770(v77, v69);
                            swift_bridgeObjectRelease();
                            int v121 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 48))(v120, 1, v119);
                            uint64_t v96 = v167;
                            if (v121 == 1)
                            {
                              uint64_t v94 = &qword_10070DEB0;
                              uint64_t v95 = v120;
                              return sub_100007A48(v95, v94);
                            }
                            uint64_t v122 = v149;
                            sub_10016CB08(v120, v149, type metadata accessor for FindMissingMessages.CommandID);
                            uint64_t v123 = v122;
                            uint64_t v124 = v150;
                            sub_10016CB08(v123, v150, type metadata accessor for FindMissingMessages.CommandID);
                            uint64_t result = swift_getEnumCaseMultiPayload();
                            if (result != 1) {
                              return sub_10016CB7C(v124, type metadata accessor for FindMissingMessages.CommandID);
                            }
                            uint64_t v97 = (uint64_t)v158;
                            if (*(unsigned char *)(v124 + 8) != 1) {
                              return result;
                            }
LABEL_41:
                            uint64_t v98 = *(unsigned __int8 *)(v96 + 8);
                            int v99 = *(unsigned __int8 *)(v96 + 9);
                            if (*(unsigned char *)(v96 + 9)) {
                              __int16 v100 = 256;
                            }
                            else {
                              __int16 v100 = 0;
                            }
                            sub_1001DE688(v100 | v98, v97);
                            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v156 + 48))(v97, 1, v157) == 1)
                            {
                              uint64_t v94 = &qword_10070A2D0;
                              uint64_t v95 = v97;
                              return sub_100007A48(v95, v94);
                            }
                            uint64_t v105 = v154;
                            uint64_t v106 = sub_10001FDF0(v97, v154, &qword_100709E38);
                            uint64_t v108 = *(void *)v96;
                            unint64_t v109 = *(void *)(v96 + 24);
                            uint64_t v110 = 256;
                            if (!v99) {
                              uint64_t v110 = 0;
                            }
                            unint64_t v111 = sub_10016B018(v106, v110 | v98 | ((unint64_t)*(unsigned int *)(v96 + 12) << 32), v107, *(void *)(v96 + 24));
                            if ((v111 & 0x100000000) == 0)
                            {
                              unsigned int v112 = v111;
                              uint64_t v113 = v145;
                              sub_1000079E4(v105, v145, &qword_100709E38);
                              uint64_t v114 = v146;
                              sub_10016A7C0(v113, v112, v108, v146);
                              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                                unint64_t v109 = sub_10001809C(0, *(void *)(v109 + 16) + 1, 1, v109);
                              }
                              uint64_t v115 = v147;
                              unint64_t v117 = *(void *)(v109 + 16);
                              unint64_t v116 = *(void *)(v109 + 24);
                              if (v117 >= v116 >> 1) {
                                unint64_t v109 = sub_10001809C(v116 > 1, v117 + 1, 1, v109);
                              }
                              *(void *)(v109 + 16) = v117 + 1;
                              sub_10016CB08(v114, v109+ ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80))+ *(void *)(v115 + 72) * v117, (uint64_t (*)(void))_s20GrowWindowOfInterestV6ResultVMa);
                              *(void *)(v96 + 24) = v109;
                              uint64_t v105 = v154;
                            }
                            uint64_t v94 = &qword_100709E38;
LABEL_73:
                            uint64_t v95 = v105;
                            return sub_100007A48(v95, v94);
                          }
LABEL_92:
                          uint64_t result = sub_10016CB7C(v71, type metadata accessor for TaskHistory.Running);
                          __break(1u);
                          return result;
                        }
LABEL_91:
                        sub_10016CB7C(v61, type metadata accessor for TaskHistory.Running);
                        goto LABEL_92;
                      }
LABEL_88:
                      __break(1u);
                      goto LABEL_89;
                    }
                  }
                  uint64_t v84 = v165;
                  sub_10016CB7C(v165, type metadata accessor for TaskHistory.Running);
                  swift_bridgeObjectRelease();
                  ++v83;
                  v82 += v61;
                  if (v71 == v83) {
                    goto LABEL_33;
                  }
                }
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_59:
            sub_1000E8770(v77, v69);
          }
          uint64_t v118 = v160;
          uint64_t v119 = v161;
          uint64_t v120 = v155;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v160 + 56))(v155, 1, 1, v161);
          goto LABEL_61;
        }
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v56 = 0;
  while ((sub_100164DC4(*((_DWORD *)v54 + v56 + 8), a2, a3) & 1) == 0)
  {
    if (v55 == ++v56) {
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
  sub_10016CBDC(v168, (uint64_t)v53, type metadata accessor for UntaggedResponse);
  if (swift_getEnumCaseMultiPayload() != 12)
  {
    sub_10016CB7C((uint64_t)v53, type metadata accessor for UntaggedResponse);
    uint64_t v90 = v167;
    uint64_t v91 = (uint64_t)v162;
    goto LABEL_35;
  }
  uint64_t v62 = *(void *)v53;
  uint64_t v61 = *((void *)v53 + 1);
  uint64_t v64 = *((void *)v53 + 2);
  uint64_t v63 = (uint64_t *)*((void *)v53 + 3);
  uint64_t v65 = *((void *)v53 + 5);
  LODWORD(v158) = v53[32];
  uint64_t v164 = v63;
  if (!v61)
  {
LABEL_70:
    uint64_t v105 = v159;
    uint64_t v125 = v160;
    uint64_t v126 = v161;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v160 + 56))(v159, 1, 1, v161);
    goto LABEL_71;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v66._countAndFlagsBits = v62;
  v66._object = (void *)v61;
  IMAP2Protocol::Tag_optional v171 = Tag.init(_:)(v66);
  if (v171.is_nil || (v156 = v65, (unint64_t v67 = *(void *)(a2 + 16)) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_69:
    sub_1000E8770(v62, v61);
    goto LABEL_70;
  }
  uint64_t v154 = v62;
  uint64_t v155 = v64;
  LODWORD(v165) = v171.value.connectionIdentifier;
  uint64_t v157 = HIDWORD(*(void *)&v171.value);
  unint64_t v68 = (uint64_t *)(a2 + ((*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80)));
  uint64_t v69 = *(void *)(v148 + 72);
  swift_bridgeObjectRetain();
  unint64_t v70 = 0;
  unint64_t v71 = v166;
  uint64_t v72 = (uint64_t)v163;
  while (1)
  {
    sub_10016CBDC((uint64_t)v68, v72, type metadata accessor for TaskHistory.Running);
    sub_10016CBDC(v72, (uint64_t)v34, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    swift_bridgeObjectRetain();
    sub_10016CB7C((uint64_t)v34, type metadata accessor for TaskHistory.Running);
LABEL_18:
    sub_10016CB7C(v72, type metadata accessor for TaskHistory.Running);
    swift_bridgeObjectRelease();
    ++v70;
    unint64_t v68 = (uint64_t *)((char *)v68 + v69);
    if (v67 == v70) {
      goto LABEL_22;
    }
  }
  uint64_t v73 = *v34;
  uint64_t v74 = (char *)v34 + *(int *)(sub_10000566C(&qword_10070B6A0) + 64);
  swift_bridgeObjectRetain();
  uint64_t v75 = (uint64_t)v74;
  uint64_t v72 = (uint64_t)v163;
  sub_10016CB7C(v75, type metadata accessor for ClientCommand);
  unint64_t v76 = CommandID.tag.getter(v73);
  if (__PAIR64__(HIDWORD(v76), v76) != __PAIR64__(v157, v165)) {
    goto LABEL_18;
  }
  sub_10016CB7C(v72, type metadata accessor for TaskHistory.Running);
  swift_bridgeObjectRelease();
  if (v67 == v70)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v62 = v154;
    goto LABEL_69;
  }
  if (v70 >= v67)
  {
    __break(1u);
    goto LABEL_88;
  }
  unint64_t v71 = (unint64_t)type metadata accessor for TaskHistory.Running;
  uint64_t v132 = (uint64_t)v68;
  unint64_t v68 = v143;
  sub_10016CBDC(v132, (uint64_t)v143, type metadata accessor for TaskHistory.Running);
  uint64_t v69 = v142;
  sub_10016CBDC((uint64_t)v68, v142, type metadata accessor for TaskHistory.Running);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
LABEL_89:
    sub_10016CB7C(v69, type metadata accessor for TaskHistory.Running);
    goto LABEL_90;
  }
  uint64_t v133 = *(void *)v69;
  unint64_t v71 = *(unsigned int *)(v69 + 8);
  uint64_t v134 = sub_10000566C(&qword_10070B6A0);
  sub_10016CB7C(v69 + *(int *)(v134 + 64), type metadata accessor for ClientCommand);
  unint64_t v135 = CommandID.tag.getter(v133);
  if (__PAIR64__(HIDWORD(v135), v135) != __PAIR64__(v157, v165))
  {
LABEL_90:
    sub_10016CB7C((uint64_t)v68, type metadata accessor for TaskHistory.Running);
    __break(1u);
    goto LABEL_91;
  }
  sub_10016CB7C((uint64_t)v68, type metadata accessor for TaskHistory.Running);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v62 = v154;
  sub_1000E8770(v154, v61);
  uint64_t v105 = v159;
  sub_100159740(v71, v169, v159);
  uint64_t v125 = v160;
  uint64_t v126 = v161;
LABEL_71:
  sub_1000E8770(v62, v61);
  swift_bridgeObjectRelease();
  int v127 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))(v105, 1, v126);
  uint64_t v90 = v167;
  uint64_t v91 = (uint64_t)v162;
  if (v127 == 1)
  {
    uint64_t v94 = &qword_10070DEB0;
    goto LABEL_73;
  }
  uint64_t v128 = v105;
  uint64_t v129 = v151;
  sub_10016CB08(v128, v151, type metadata accessor for FindMissingMessages.CommandID);
  uint64_t v130 = v129;
  uint64_t v131 = v152;
  sub_10016CB08(v130, v152, type metadata accessor for FindMissingMessages.CommandID);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 1) {
    return sub_10016CB7C(v131, type metadata accessor for FindMissingMessages.CommandID);
  }
  if ((*(unsigned char *)(v131 + 8) & 1) == 0)
  {
LABEL_35:
    if (*(unsigned char *)(v90 + 9)) {
      __int16 v92 = 256;
    }
    else {
      __int16 v92 = 0;
    }
    sub_1001DE6A8(v92 | *(unsigned __int8 *)(v90 + 8), v91);
    uint64_t v93 = sub_10000566C(&qword_10070AB30);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 48))(v91, 1, v93) == 1)
    {
      uint64_t v94 = &qword_10070E078;
      uint64_t v95 = v91;
      return sub_100007A48(v95, v94);
    }
    uint64_t v101 = v153;
    MessageIdentifierSet.ranges.getter(v153);
    uint64_t v102 = sub_1000701EC();
    char v104 = v103;
    sub_100007A48(v101, &qword_10070AB10);
    if ((v104 & 1) == 0)
    {
      uint64_t result = sub_100007A48(v91, &qword_10070AB30);
      *(_DWORD *)(v90 + 16) = HIDWORD(v102);
      *(unsigned char *)(v90 + 20) = 0;
      return result;
    }
    uint64_t v94 = &qword_10070AB30;
    uint64_t v95 = v91;
    return sub_100007A48(v95, v94);
  }
  return result;
}

uint64_t sub_10016A0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_10000566C(&qword_10070E080);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (uint64_t *)&v30[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = &v30[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_10016BD9C(v18, (void (*)(uint64_t, uint64_t))sub_10016CB70);
  swift_bridgeObjectRelease();
  uint64_t v20 = v19[2];
  uint64_t v21 = sub_10000566C(&qword_10070A118);
  uint64_t v22 = *(void *)(v21 - 8);
  if (v20)
  {
    sub_1000079E4((uint64_t)v19+ ((*(unsigned __int8 *)(*(void *)(v21 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v21 - 8) + 80)), (uint64_t)v14, &qword_10070A118);
    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v23 = 1;
  }
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v14, v23, 1, v21);
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_10000566C(&qword_10070A118);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v14, 1, v24) == 1)
  {
    sub_100007A48((uint64_t)v14, &qword_10070E080);
    return 0;
  }
  else
  {
    uint64_t v25 = *v14;
    sub_10001FDF0((uint64_t)v14 + *(int *)(v24 + 48), (uint64_t)v17, &qword_100709E30);
    uint64_t v26 = sub_10000566C(&qword_10070CC50);
    swift_allocBox();
    uint64_t v28 = (uint64_t)v27 + *(int *)(v26 + 48);
    *uint64_t v27 = a1;
    v27[1] = a2;
    sub_10001FDF0((uint64_t)v17, v28, &qword_100709E30);
    swift_bridgeObjectRetain();
  }
  return v25;
}

uint64_t sub_10016A384@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000566C(&qword_10070A2D0);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_100709E60);
  uint64_t v29 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = _s20GrowWindowOfInterestV6ResultVMa();
  uint64_t v10 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10000566C(&qword_100709E38);
  uint64_t v13 = *(void *)(v33 - 8);
  uint64_t v14 = __chkstk_darwin(v33);
  uint64_t v31 = (uint64_t)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v27 - v16;
  swift_bridgeObjectRetain();
  sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    uint64_t v28 = a2;
    uint64_t v19 = a1;
    uint64_t v20 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v32 = *(void *)(v10 + 72);
    uint64_t v21 = (void (**)(char *, char *, uint64_t))(v29 + 16);
    uint64_t v22 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    uint64_t v29 = v19;
    swift_bridgeObjectRetain();
    uint64_t v30 = v12;
    do
    {
      sub_10016CBDC(v20, (uint64_t)v12, (uint64_t (*)(void))_s20GrowWindowOfInterestV6ResultVMa);
      (*v21)(v9, v12, v7);
      sub_1005E3670();
      sub_1000079E4((uint64_t)&v12[*(int *)(v34 + 24)], (uint64_t)v6, &qword_10070A2D0);
      if ((*v22)(v6, 1, v33) == 1)
      {
        uint64_t v23 = (uint64_t)v6;
        uint64_t v24 = &qword_10070A2D0;
      }
      else
      {
        uint64_t v25 = v31;
        sub_10001FDF0((uint64_t)v6, v31, &qword_100709E38);
        sub_1005E3660();
        uint64_t v23 = v25;
        uint64_t v24 = &qword_100709E38;
        uint64_t v12 = v30;
      }
      sub_100007A48(v23, v24);
      sub_10016CB7C((uint64_t)v12, (uint64_t (*)(void))_s20GrowWindowOfInterestV6ResultVMa);
      v20 += v32;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    a2 = v28;
  }
  sub_10001FDF0((uint64_t)v17, a2, &qword_100709E38);
  return swift_bridgeObjectRelease();
}

uint64_t _s20GrowWindowOfInterestV6ResultVMa()
{
  uint64_t result = qword_10070E0F0;
  if (!qword_10070E0F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10016A79C(uint64_t a1, uint64_t a2)
{
  return (*(void *)a1 == *(void *)a2) & ~(*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8));
}

uint64_t sub_10016A7C0@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v26 = a4;
  uint64_t v7 = sub_10000566C(&qword_100709E38);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v23 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v23 - v14;
  sub_10000566C(&qword_100709FF8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6670;
  LODWORD(v29) = 1;
  LODWORD(v27) = a2;
  sub_100063E18();
  static MessageIdentifier.... infix(_:_:)();
  sub_1000630DC(inited);
  uint64_t v25 = v7;
  MessageIdentifierSet.intersection(_:)((uint64_t)v10, v7);
  sub_100007A48((uint64_t)v10, &qword_100709E38);
  sub_10006654C(a3, (uint64_t)v15);
  sub_100007A48((uint64_t)v13, &qword_100709E38);
  unint64_t v17 = sub_1000702CC();
  if ((v17 & 0x100000000) != 0 || (int v18 = v17, v17 > a2))
  {
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
    LODWORD(v27) = 1;
  }
  else
  {
    sub_1000079E4((uint64_t)v15, (uint64_t)v13, &qword_100709E38);
    LODWORD(v27) = v18;
  }
  unsigned int v28 = a2;
  static MessageIdentifier.... infix(_:_:)();
  uint64_t v27 = v29;
  Range<>.init<A>(_:)((uint64_t)&v27, (uint64_t)&type metadata for UID);
  uint64_t v27 = v19;
  sub_10001FC6C();
  sub_1005E36A0();
  sub_100007A48(a1, &qword_100709E38);
  sub_100007A48((uint64_t)v15, &qword_100709E38);
  uint64_t v20 = _s20GrowWindowOfInterestV6ResultVMa();
  uint64_t v21 = v26;
  sub_10001FDF0((uint64_t)v10, v26 + *(int *)(v20 + 20), &qword_100709E38);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v21 + *(int *)(v20 + 24), 1, 1, v25);
  return sub_10001FDF0((uint64_t)v13, v21, &qword_100709E38);
}

uint64_t sub_10016AA9C(uint64_t a1)
{
  uint64_t v3 = sub_10000566C(&qword_10070A2D0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unsigned int v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_10000566C(&qword_100709E38);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v1 + *(int *)(_s20GrowWindowOfInterestV6ResultVMa() + 24);
  sub_1000079E4(v13, (uint64_t)v8, &qword_10070A2D0);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v15 = (uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56);
  if (v14(v8, 1, v9) == 1)
  {
    sub_100007A48((uint64_t)v8, &qword_10070A2D0);
    sub_100007A48(v13, &qword_10070A2D0);
    sub_1000079E4(a1, v13, &qword_100709E38);
    return (*v15)(v13, 0, 1, v9);
  }
  else
  {
    sub_10001FDF0((uint64_t)v8, (uint64_t)v12, &qword_100709E38);
    MessageIdentifierSet.union(_:)();
    sub_100007A48((uint64_t)v12, &qword_100709E38);
    (*v15)((uint64_t)v6, 0, 1, v9);
    return sub_10015421C((uint64_t)v6, v13);
  }
}

uint64_t sub_10016ACCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_10000566C(&qword_10070A2D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v31 = (uint64_t)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10000566C(&qword_100709E38);
  uint64_t v7 = *(void *)(v32 - 8);
  uint64_t v8 = __chkstk_darwin(v32);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v27 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v30 = _s20GrowWindowOfInterestV6ResultVMa();
  __chkstk_darwin(v30);
  int v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a4 + 16);
  if (v19)
  {
    uint64_t v20 = a4 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v28 = *(void *)(v16 + 72);
    uint64_t v29 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v27 = a4;
    swift_bridgeObjectRetain();
    uint64_t v21 = 0;
    while (1)
    {
      sub_10016CBDC(v20, (uint64_t)v18, (uint64_t (*)(void))_s20GrowWindowOfInterestV6ResultVMa);
      sub_1000079E4((uint64_t)v18, (uint64_t)v13, &qword_100709E38);
      uint64_t v22 = v31;
      sub_1000079E4((uint64_t)&v18[*(int *)(v30 + 24)], v31, &qword_10070A2D0);
      if ((*v29)(v22, 1, v32) == 1)
      {
        sub_10001FC6C();
        sub_1005E3680();
        sub_100007A48(v22, &qword_10070A2D0);
      }
      else
      {
        sub_10001FDF0(v22, (uint64_t)v10, &qword_100709E38);
      }
      MessageIdentifierSet.subtracting(_:)((uint64_t)v10, v32);
      sub_100007A48((uint64_t)v10, &qword_100709E38);
      sub_100007A48((uint64_t)v13, &qword_100709E38);
      MessageIdentifierSet.count.getter();
      uint64_t v24 = v23;
      uint64_t result = sub_100007A48((uint64_t)v15, &qword_100709E38);
      BOOL v26 = __OFADD__(v21, v24);
      v21 += v24;
      if (v26) {
        break;
      }
      sub_10016CB7C((uint64_t)v18, (uint64_t (*)(void))_s20GrowWindowOfInterestV6ResultVMa);
      v20 += v28;
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        return v21;
      }
    }
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

unint64_t sub_10016B018(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_10000566C(&qword_100709E38);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v18[-v10];
  uint64_t v12 = *(void *)(a4 + 16);
  if (v12)
  {
    uint64_t v13 = v12 - 1;
    uint64_t v14 = *(void *)(_s20GrowWindowOfInterestV6ResultVMa() - 8);
    sub_1000079E4(a4+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v13, (uint64_t)v9, &qword_100709E38);
    sub_10001FDF0((uint64_t)v9, (uint64_t)v11, &qword_100709E38);
    unint64_t v15 = sub_1000702CC();
    if ((v15 & 0x100000000) != 0 || (v15 & 0xFFFFFFFE) == 0)
    {
      sub_100007A48((uint64_t)v11, &qword_100709E38);
      unint64_t v16 = 0;
      LOBYTE(v12) = 1;
    }
    else
    {
      unint64_t v16 = (v15 - 1);
      sub_100007A48((uint64_t)v11, &qword_100709E38);
      LOBYTE(v12) = 0;
    }
  }
  else
  {
    unint64_t v16 = HIDWORD(a2);
  }
  return v16 | ((unint64_t)v12 << 32);
}

uint64_t sub_10016B198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, void *a5@<X8>)
{
  uint64_t v50 = a4;
  uint64_t v57 = a3;
  uint64_t v58 = a5;
  uint64_t v59 = a2;
  uint64_t v52 = a1;
  uint64_t v5 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v49 - v9;
  uint64_t v60 = sub_10000566C(&qword_100709E38);
  uint64_t v11 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v56 = (uint64_t *)((char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = _s15MissingMessagesO11QueriedUIDsVMa(0);
  __chkstk_darwin(v13 - 8);
  uint64_t v55 = (uint64_t)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000566C(&qword_10070A2D0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10000566C(&qword_100709E30);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v51 = (uint64_t)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v54 = (uint64_t)&v49 - v25;
  uint64_t v26 = _s20GrowWindowOfInterestV6ResultVMa();
  sub_1000079E4(v59 + *(int *)(v26 + 24), (uint64_t)v17, &qword_10070A2D0);
  LODWORD(v11) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v17, 1, v60);
  sub_100007A48((uint64_t)v17, &qword_10070A2D0);
  if (v11 != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
LABEL_7:
    uint64_t v32 = &qword_10070A000;
    uint64_t v33 = (uint64_t)v20;
    goto LABEL_8;
  }
  uint64_t v27 = v55;
  sub_10016CBDC(v59 + *(int *)(v26 + 20), v55, _s15MissingMessagesO11QueriedUIDsVMa);
  uint64_t v28 = (uint64_t)v56;
  sub_10001FDF0(v27, (uint64_t)v56, &qword_100709E38);
  MessageIdentifierSet.count.getter();
  if (v29 < 1)
  {
    sub_100007A48(v28, &qword_100709E38);
    uint64_t v31 = 1;
  }
  else
  {
    uint64_t v30 = v51;
    sub_10001FDF0(v28, v51, &qword_100709E38);
    sub_10001FDF0(v30, (uint64_t)v20, &qword_100709E30);
    uint64_t v31 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, v31, 1, v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1) {
    goto LABEL_7;
  }
  sub_10001FDF0((uint64_t)v20, v54, &qword_100709E30);
  uint64_t v36 = sub_1001054AC(v52, 0, v50);
  uint64_t v37 = v36[2];
  if (!v37)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_10000566C(&qword_10070A118);
    uint64_t v47 = v58;
    uint64_t v48 = (uint64_t)v58 + *(int *)(v46 + 48);
    *uint64_t v58 = v52;
    sub_10001FDF0(v54, v48, &qword_100709E30);
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v47, 0, 1, v46);
  }
  uint64_t v38 = 0;
  uint64_t v56 = v36;
  uint64_t v59 = v37;
  uint64_t v60 = (uint64_t)(v36 + 4);
  uint64_t v39 = *(void *)(v57 + 16);
  while (!v39)
  {
LABEL_12:
    if (++v38 == v37) {
      goto LABEL_20;
    }
  }
  int v40 = *(_DWORD *)(v60 + 4 * v38);
  uint64_t v41 = v53;
  uint64_t v42 = v57 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
  swift_bridgeObjectRetain_n();
  uint64_t v43 = *(void *)(v41 + 72);
  uint64_t v44 = v39;
  while (1)
  {
    sub_10016CBDC(v42, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    sub_10016CBDC((uint64_t)v10, (uint64_t)v8, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_10016CB7C((uint64_t)v8, type metadata accessor for TaskHistory.Previous);
LABEL_16:
    sub_10016CB7C((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    v42 += v43;
    if (!--v44)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v37 = v59;
      goto LABEL_12;
    }
  }
  int v45 = *((_DWORD *)v8 + 2);
  sub_10007C4A4(*(void *)v8);
  if (v45 != v40) {
    goto LABEL_16;
  }
  sub_10016CB7C((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v32 = &qword_100709E30;
  uint64_t v33 = v54;
LABEL_8:
  sub_100007A48(v33, v32);
  uint64_t v34 = sub_10000566C(&qword_10070A118);
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v58, 1, 1, v34);
}

void *sub_10016B81C(uint64_t a1, uint64_t a2)
{
  uint64_t v49 = sub_10000566C(&qword_10070A638);
  uint64_t v5 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v7 = (_DWORD *)((char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10000566C(&qword_10070DEB8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Missing = type metadata accessor for FindMissingMessages.CommandID(0);
  uint64_t v42 = *(void *)(Missing - 8);
  uint64_t v16 = __chkstk_darwin(Missing - 8);
  uint64_t v48 = (uint64_t)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v41 = (uint64_t)v39 - v19;
  __chkstk_darwin(v18);
  uint64_t v40 = (uint64_t)v39 - v20;
  uint64_t v53 = *(void *)(a1 + 16);
  if (!v53) {
    return _swiftEmptyArrayStorage;
  }
  v39[1] = a1;
  _OWORD v39[2] = v2;
  uint64_t v52 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v44 = v5;
  uint64_t v46 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v47 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v51 = *(void *)(v12 + 72);
  swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  uint64_t v50 = _swiftEmptyArrayStorage;
  uint64_t v22 = v49;
  uint64_t v43 = a2;
  uint64_t v45 = v11;
  do
  {
    sub_10016CBDC(v52 + v51 * v21, (uint64_t)v14, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_10016CB7C((uint64_t)v14, type metadata accessor for TaskHistory.Running);
    }
    else
    {
      uint64_t v23 = (uint64_t)v10;
      int v24 = *((_DWORD *)v14 + 2);
      uint64_t v25 = sub_10000566C(&qword_10070B6A0);
      sub_10016CB7C((uint64_t)&v14[*(int *)(v25 + 64)], type metadata accessor for ClientCommand);
      uint64_t v26 = *(void *)(a2 + 16);
      if (v26)
      {
        uint64_t v27 = v44;
        uint64_t v28 = a2 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
        swift_bridgeObjectRetain();
        uint64_t v29 = *(void *)(v27 + 72);
        while (1)
        {
          sub_1000079E4(v28, (uint64_t)v7, &qword_10070A638);
          if (*v7 == v24) {
            break;
          }
          sub_100007A48((uint64_t)v7, &qword_10070A638);
          v28 += v29;
          if (!--v26)
          {
            uint64_t v30 = 1;
            a2 = v43;
            uint64_t v22 = v49;
            goto LABEL_12;
          }
        }
        uint64_t v10 = (char *)v23;
        sub_10001FDF0((uint64_t)v7, v23, &qword_10070A638);
        uint64_t v30 = 0;
        a2 = v43;
        uint64_t v22 = v49;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = 1;
LABEL_12:
        uint64_t v10 = (char *)v23;
      }
      (*v47)(v10, v30, 1, v22);
      swift_bridgeObjectRelease();
      if ((*v46)(v10, 1, v22) == 1)
      {
        sub_100007A48((uint64_t)v10, &qword_10070DEB8);
      }
      else
      {
        uint64_t v31 = v41;
        sub_10016CBDC((uint64_t)&v10[*(int *)(v22 + 52)], v41, type metadata accessor for FindMissingMessages.CommandID);
        sub_100007A48((uint64_t)v10, &qword_10070A638);
        uint64_t v32 = v31;
        uint64_t v33 = v40;
        sub_10016CB08(v32, v40, type metadata accessor for FindMissingMessages.CommandID);
        sub_10016CB08(v33, v48, type metadata accessor for FindMissingMessages.CommandID);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v34 = (unint64_t)v50;
        }
        else {
          unint64_t v34 = sub_100017B20(0, v50[2] + 1, 1, (unint64_t)v50);
        }
        unint64_t v36 = *(void *)(v34 + 16);
        unint64_t v35 = *(void *)(v34 + 24);
        if (v36 >= v35 >> 1) {
          unint64_t v34 = sub_100017B20(v35 > 1, v36 + 1, 1, v34);
        }
        *(void *)(v34 + 16) = v36 + 1;
        unint64_t v37 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
        uint64_t v50 = (void *)v34;
        sub_10016CB08(v48, v34 + v37 + *(void *)(v42 + 72) * v36, type metadata accessor for FindMissingMessages.CommandID);
        uint64_t v22 = v49;
      }
    }
    ++v21;
  }
  while (v21 != v53);
  swift_bridgeObjectRelease();
  return v50;
}

void *sub_10016BD9C(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  unint64_t v36 = a2;
  uint64_t v3 = sub_10000566C(&qword_10070E080);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_10000566C(&qword_10070A118);
  uint64_t v6 = *(void *)(v35 - 8);
  uint64_t v7 = __chkstk_darwin(v35);
  uint64_t v34 = (uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v29 = (uint64_t)&v27 - v9;
  uint64_t v33 = sub_10000566C(&qword_10070E088);
  uint64_t v10 = __chkstk_darwin(v33);
  uint64_t v32 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v27 - v12);
  uint64_t v14 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v31 = v14;
  uint64_t v27 = a1;
  if (v14)
  {
    uint64_t v15 = 0;
    uint64_t v16 = *(void *)(_s20GrowWindowOfInterestV6ResultVMa() - 8);
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v30 = *(void *)(v16 + 72);
    uint64_t v28 = v6;
    uint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v19 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v20 = v33;
      uint64_t v21 = (uint64_t)&v32[*(int *)(v33 + 48)];
      sub_10016CBDC(v17, v21, (uint64_t (*)(void))_s20GrowWindowOfInterestV6ResultVMa);
      uint64_t v22 = (uint64_t)v13 + *(int *)(v20 + 48);
      *uint64_t v13 = v15;
      sub_10016CB08(v21, v22, (uint64_t (*)(void))_s20GrowWindowOfInterestV6ResultVMa);
      v36(v15, v22);
      sub_100007A48((uint64_t)v13, &qword_10070E088);
      if ((*v18)(v5, 1, v35) == 1)
      {
        sub_100007A48((uint64_t)v5, &qword_10070E080);
      }
      else
      {
        uint64_t v23 = v29;
        sub_10001FDF0((uint64_t)v5, v29, &qword_10070A118);
        sub_10001FDF0(v23, v34, &qword_10070A118);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = (void *)sub_100017EF8(0, v19[2] + 1, 1, (unint64_t)v19);
        }
        unint64_t v25 = v19[2];
        unint64_t v24 = v19[3];
        if (v25 >= v24 >> 1) {
          uint64_t v19 = (void *)sub_100017EF8(v24 > 1, v25 + 1, 1, (unint64_t)v19);
        }
        v19[2] = v25 + 1;
        sub_10001FDF0(v34, (uint64_t)v19+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v25, &qword_10070A118);
      }
      ++v15;
      v17 += v30;
    }
    while (v31 != v15);
  }
  else
  {
    uint64_t v19 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_10016C17C(unint64_t a1, uint64_t (**a2)(uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v92 = a4;
  uint64_t v93 = a5;
  uint64_t v102 = a2;
  uint64_t v103 = a3;
  uint64_t v109 = sub_10000566C(&qword_10070A9B0);
  __chkstk_darwin(v109);
  uint64_t v10 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s15MissingMessagesO11QueriedUIDsVMa(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v105 = (uint64_t)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000566C(&qword_10070A2D0);
  __chkstk_darwin(v13 - 8);
  uint64_t v108 = (uint64_t)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000566C(&qword_10070A000);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v107 = (uint64_t)&v88 - v20;
  __chkstk_darwin(v19);
  uint64_t v111 = (uint64_t)&v88 - v21;
  uint64_t v22 = sub_10000566C(&qword_10070CC20);
  __chkstk_darwin(v22);
  unint64_t v24 = (uint64_t *)((char *)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = sub_10000566C(&qword_100709E30);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v88 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v95 = (uint64_t)&v88 - v31;
  __chkstk_darwin(v30);
  uint64_t v110 = (uint64_t)&v88 - v32;
  uint64_t v33 = sub_10000566C(&qword_100709E38);
  uint64_t v34 = __chkstk_darwin(v33);
  uint64_t v104 = (uint64_t)&v88 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v34);
  if (((a1 >> 59) & 0x1E | (a1 >> 2) & 1) != 9) {
    return result;
  }
  unint64_t v100 = v38;
  uint64_t v106 = result;
  uint64_t v91 = v29;
  uint64_t v94 = v18;
  uint64_t v90 = (uint64_t)&v88 - v37;
  uint64_t v88 = a6;
  uint64_t v89 = v6;
  uint64_t v39 = (uint64_t *)swift_projectBox();
  uint64_t v40 = *(int *)(v22 + 48);
  uint64_t v41 = (uint64_t)v24 + v40;
  uint64_t v42 = *(int *)(v22 + 64);
  uint64_t v43 = (uint64_t)v24 + v42;
  uint64_t v44 = (uint64_t)v39 + v42;
  uint64_t v46 = *v39;
  uint64_t v45 = v39[1];
  *unint64_t v24 = *v39;
  v24[1] = v45;
  sub_1000079E4((uint64_t)v39 + v40, (uint64_t)v24 + v40, &qword_100709E38);
  sub_1000079E4(v44, v43, &qword_100709E30);
  if (v45 != v103 || !sub_1000255D4((uint64_t)v102, v46))
  {
    sub_100007A48(v43, &qword_100709E30);
    uint64_t v78 = &qword_100709E38;
    uint64_t v79 = v41;
    return sub_100007A48(v79, v78);
  }
  uint64_t v47 = v90;
  sub_10001FDF0(v41, v90, &qword_100709E38);
  sub_10001FDF0(v43, v110, &qword_100709E30);
  uint64_t v48 = *(void *)(v89 + 24);
  uint64_t v103 = *(void *)(v48 + 16);
  if (!v103)
  {
LABEL_28:
    sub_100007A48(v47, &qword_100709E38);
    uint64_t v78 = &qword_100709E30;
    uint64_t v79 = v110;
    return sub_100007A48(v79, v78);
  }
  uint64_t v49 = _s20GrowWindowOfInterestV6ResultVMa();
  unint64_t v50 = (*(unsigned __int8 *)(*(void *)(v49 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v49 - 8) + 80);
  uint64_t v96 = *(void *)(*(void *)(v49 - 8) + 72);
  uint64_t v102 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 48);
  uint64_t v51 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  swift_bridgeObjectRetain();
  unint64_t v52 = 0;
  uint64_t v98 = v48;
  int v99 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
  unint64_t v100 = (v26 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  uint64_t v101 = v10;
  uint64_t v97 = v49;
  while (1)
  {
    uint64_t v54 = v51;
    uint64_t v55 = v48 + v50;
    uint64_t v56 = v108;
    sub_1000079E4(v55 + *(int *)(v49 + 24), v108, &qword_10070A2D0);
    uint64_t v57 = v49;
    int v58 = (*v102)(v56, 1, v106);
    sub_100007A48(v56, &qword_10070A2D0);
    if (v58 == 1)
    {
      uint64_t v59 = v55 + *(int *)(v57 + 20);
      uint64_t v60 = v105;
      sub_10016CBDC(v59, v105, _s15MissingMessagesO11QueriedUIDsVMa);
      uint64_t v61 = v60;
      uint64_t v62 = v104;
      sub_10001FDF0(v61, v104, &qword_100709E38);
      MessageIdentifierSet.count.getter();
      BOOL v64 = v63 <= 0;
      uint64_t v65 = v111;
      uint64_t v66 = v62;
      if (v64)
      {
        sub_100007A48(v62, &qword_100709E38);
        unint64_t v68 = *v99;
        uint64_t v69 = v65;
        uint64_t v70 = 1;
      }
      else
      {
        uint64_t v67 = v95;
        sub_10001FDF0(v66, v95, &qword_100709E38);
        sub_10001FDF0(v67, v65, &qword_100709E30);
        unint64_t v68 = *v99;
        uint64_t v69 = v65;
        uint64_t v70 = 0;
      }
      v68(v69, v70, 1, v25);
    }
    else
    {
      unint64_t v68 = *v99;
      uint64_t v65 = v111;
      (*v99)(v111, 1, 1, v25);
    }
    uint64_t v51 = v54;
    uint64_t v71 = v107;
    sub_1000079E4(v110, v107, &qword_100709E30);
    v68(v71, 0, 1, v25);
    uint64_t v72 = (uint64_t)v101;
    uint64_t v73 = (uint64_t)&v101[*(int *)(v109 + 48)];
    sub_1000079E4(v65, (uint64_t)v101, &qword_10070A000);
    sub_1000079E4(v71, v73, &qword_10070A000);
    uint64_t v74 = *v54;
    if ((*v54)(v72, 1, v25) == 1) {
      break;
    }
    uint64_t v75 = (uint64_t)v94;
    sub_1000079E4(v72, (uint64_t)v94, &qword_10070A000);
    if (v74(v73, 1, v25) == 1)
    {
      sub_100007A48(v71, &qword_10070A000);
      sub_100007A48(v111, &qword_10070A000);
      sub_100007A48(v75, &qword_100709E30);
      uint64_t v48 = v98;
      goto LABEL_7;
    }
    uint64_t v76 = (uint64_t)v91;
    sub_10001FDF0(v73, (uint64_t)v91, &qword_100709E30);
    sub_10001FC6C();
    char v77 = sub_1005E35A0();
    sub_100007A48(v76, &qword_100709E30);
    sub_100007A48(v71, &qword_10070A000);
    sub_100007A48(v111, &qword_10070A000);
    sub_100007A48(v75, &qword_100709E30);
    sub_100007A48(v72, &qword_10070A000);
    uint64_t v48 = v98;
    if (v77) {
      goto LABEL_23;
    }
LABEL_8:
    ++v52;
    uint64_t v49 = v97;
    v50 += v96;
    if (v103 == v52) {
      goto LABEL_27;
    }
  }
  sub_100007A48(v71, &qword_10070A000);
  sub_100007A48(v65, &qword_10070A000);
  unsigned int v53 = v74(v73, 1, v25);
  uint64_t v48 = v98;
  if (v53 != 1)
  {
LABEL_7:
    sub_100007A48(v72, &qword_10070A9B0);
    goto LABEL_8;
  }
  sub_100007A48(v72, &qword_10070A000);
LABEL_23:
  swift_bridgeObjectRelease();
  uint64_t v80 = sub_1001054AC(v52, 0, v88);
  uint64_t v81 = v80[2];
  if (!v81)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v47 = v90;
    goto LABEL_28;
  }
  uint64_t v82 = 0;
  uint64_t v84 = v92;
  uint64_t v83 = v93;
  while ((sub_1001652E0(*((_DWORD *)v80 + v82 + 8), v84, v83) & 1) == 0)
  {
    if (v81 == ++v82) {
      goto LABEL_27;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v85 = *(void *)(v89 + 24);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_100093570(v85);
    unint64_t v85 = result;
  }
  uint64_t v86 = v110;
  if (v52 >= *(void *)(v85 + 16))
  {
    __break(1u);
  }
  else
  {
    uint64_t v87 = v90;
    sub_10016AA9C(v90);
    *(void *)(v89 + 24) = v85;
    sub_100007A48(v87, &qword_100709E38);
    uint64_t v78 = &qword_100709E30;
    uint64_t v79 = v86;
    return sub_100007A48(v79, v78);
  }
  return result;
}

uint64_t sub_10016CB08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10016CB70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_10016B198(a1, a2, *(void *)(v3 + 24), *(void *)(v3 + 40), a3);
}

uint64_t sub_10016CB7C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10016CBDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

ValueMetadata *_s20GrowWindowOfInterestV9CommandIDOMa()
{
  return &_s20GrowWindowOfInterestV9CommandIDON;
}

uint64_t *sub_10016CC54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_10000566C(&qword_100709E38);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_10000566C(&qword_10070A2D0);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t sub_10016CE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E60);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v4 - 8), a1, v4);
  v8(a1 + *(int *)(a2 + 20), v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_10000566C(&qword_100709E38);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v5, v4);
  }
  return result;
}

char *sub_10016CF38(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_10000566C(&qword_100709E38);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_10000566C(&qword_10070A2D0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_10016D0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v19 = a1;
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_10000566C(&qword_100709E38);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      v7((uint64_t)v9, (uint64_t)v10, v6);
      return v19;
    }
    sub_100007A48((uint64_t)v9, &qword_100709E38);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_10000566C(&qword_10070A2D0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return v19;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v9, v10, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return v19;
}

char *sub_10016D2C4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_10000566C(&qword_100709E38);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_10000566C(&qword_10070A2D0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_10016D43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v19 = a1;
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_10000566C(&qword_100709E38);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      v7((uint64_t)v9, (uint64_t)v10, v6);
      return v19;
    }
    sub_100007A48((uint64_t)v9, &qword_100709E38);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_10000566C(&qword_10070A2D0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return v19;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v9, v10, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return v19;
}

uint64_t sub_10016D650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10016D664);
}

uint64_t sub_10016D664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E38);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = _s15MissingMessagesO11QueriedUIDsVMa(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_10000566C(&qword_10070A2D0);
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);
  return v15(v17, a2, v16);
}

uint64_t sub_10016D7B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10016D7CC);
}

uint64_t sub_10016D7CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_10000566C(&qword_100709E38);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = _s15MissingMessagesO11QueriedUIDsVMa(0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_10000566C(&qword_10070A2D0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);
  return v17(v19, a2, a2, v18);
}

void sub_10016D92C()
{
  sub_100069220();
  if (v0 <= 0x3F)
  {
    sub_10011EFF0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t _s20GrowWindowOfInterestVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  int v3 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s20GrowWindowOfInterestVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  int v3 = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s20GrowWindowOfInterestVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  int v3 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s20GrowWindowOfInterestVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s20GrowWindowOfInterestVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s20GrowWindowOfInterestVMa()
{
  return &_s20GrowWindowOfInterestVN;
}

void *_s20GrowWindowOfInterestV8ActionIDOwCP(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FetchedWindow(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FetchedWindow(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *_s20GrowWindowOfInterestV8ActionIDOMa()
{
  return &_s20GrowWindowOfInterestV8ActionIDON;
}

unsigned char *_s20GrowWindowOfInterestV9CommandIDO4KindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10016DCD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s20GrowWindowOfInterestV9CommandIDO4KindOMa()
{
  return &_s20GrowWindowOfInterestV9CommandIDO4KindON;
}

unint64_t sub_10016DD10()
{
  unint64_t result = qword_10070E130;
  if (!qword_10070E130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E130);
  }
  return result;
}

uint64_t sub_10016DD64@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v7 = BYTE5(a4);
  uint64_t v80 = a3;
  uint64_t v81 = a6;
  uint64_t v78 = a2;
  unint64_t v83 = a1;
  uint64_t v84 = sub_10000566C(&qword_100709E38);
  uint64_t v8 = __chkstk_darwin(v84);
  uint64_t v75 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v74 = (char *)&v70 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v76 = (char *)&v70 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v70 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v70 - v17;
  uint64_t v19 = type metadata accessor for MessageBatches(0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10000566C(&qword_100709E30);
  uint64_t v82 = *(void *)(v22 - 8);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v70 - v27;
  __chkstk_darwin(v26);
  uint64_t v77 = (uint64_t)&v70 - v29;
  uint64_t v30 = sub_10000566C(&qword_10070A000);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  uint64_t v33 = (char *)&v70 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  LOBYTE(v87) = v7 & 1;
  LOBYTE(v85) = BYTE4(a5) & 1;
  uint64_t v79 = a5;
  uint64_t v34 = a5;
  unint64_t v36 = (char *)&v70 - v35;
  sub_10016F994(v80, v83, (uint64_t)&v70 - v35);
  uint64_t v37 = v82;
  sub_1000079E4((uint64_t)v36, (uint64_t)v33, &qword_10070A000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v33, 1, v22) == 1)
  {
    sub_100007A48((uint64_t)v36, &qword_10070A000);
    sub_100007A48((uint64_t)v33, &qword_10070A000);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v81, 1, 1, v22);
  }
  else
  {
    uint64_t v71 = v28;
    uint64_t v72 = v25;
    uint64_t v39 = v77;
    sub_10001FDF0((uint64_t)v33, v77, &qword_100709E30);
    sub_100170AEC(v78, (uint64_t)v21, type metadata accessor for MessageBatches);
    LOBYTE(v87) = 0;
    uint64_t v40 = 0xFFFFFFFFLL;
    if ((v79 & (unint64_t)&_mh_execute_header) == 0) {
      uint64_t v40 = v34;
    }
    sub_10006705C(v40);
    uint64_t v41 = *((void *)v21 + 1);
    swift_bridgeObjectRetain();
    sub_100170B54((uint64_t)v21, type metadata accessor for MessageBatches);
    uint64_t v42 = *(void *)(v41 + 16);
    uint64_t v43 = v81;
    if (v42)
    {
      uint64_t v73 = v36;
      uint64_t v78 = v22;
      unint64_t v83 = sub_100063E18();
      swift_bridgeObjectRetain();
      uint64_t v80 = v41;
      uint64_t v44 = (unsigned int *)(v41 + 36);
      while (1)
      {
        unsigned int v45 = *(v44 - 1);
        unsigned int v46 = *v44;
        unint64_t v87 = __PAIR64__(*v44, v45);
        Range<>.init<A>(_:)((uint64_t)&v87, (uint64_t)&type metadata for UID);
        unint64_t v87 = v47;
        sub_10001FC6C();
        sub_1005E36A0();
        MessageIdentifierSet.intersection(_:)(v39, v84);
        sub_10000566C(&qword_100709E60);
        char v48 = sub_1005E3630();
        sub_100007A48((uint64_t)v16, &qword_100709E38);
        sub_100007A48((uint64_t)v18, &qword_100709E38);
        if ((v48 & 1) == 0) {
          break;
        }
        v44 += 2;
        if (!--v42)
        {
          swift_bridgeObjectRelease();
          uint64_t v43 = v81;
          uint64_t v37 = v82;
          uint64_t v22 = v78;
          unint64_t v36 = v73;
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease_n();
      unint64_t v87 = __PAIR64__(v46, v45);
      Range<>.init<A>(_:)((uint64_t)&v87, (uint64_t)&type metadata for UID);
      unint64_t v87 = v49;
      sub_1005E36A0();
      uint64_t v50 = (uint64_t)v76;
      MessageIdentifierSet.intersection(_:)(v39, v84);
      sub_100007A48((uint64_t)v18, &qword_100709E38);
      int v51 = v79;
      if ((v79 & 0x100000000) != 0 || (LODWORD(v87) = v79, (MessageIdentifierSet.contains(_:)() & 1) == 0))
      {
        uint64_t v60 = v75;
        sub_1000079E4(v50, v75, &qword_100709E38);
        MessageIdentifierSet.count.getter();
        uint64_t v61 = v81;
        uint64_t v62 = v82;
        uint64_t v63 = v78;
        uint64_t v64 = (uint64_t)v73;
        if (v65 < 1)
        {
          sub_100007A48(v60, &qword_100709E38);
          uint64_t v68 = 1;
        }
        else
        {
          uint64_t v66 = v60;
          uint64_t v67 = (uint64_t)v72;
          sub_10001FDF0(v66, (uint64_t)v72, &qword_100709E38);
          sub_10001FDF0(v67, v61, &qword_100709E30);
          uint64_t v68 = 0;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v61, v68, 1, v63);
        sub_100007A48(v50, &qword_100709E38);
        uint64_t v69 = v64;
      }
      else
      {
        LODWORD(v85) = v51;
        int v86 = -1;
        static MessageIdentifier.... infix(_:_:)();
        unint64_t v85 = v87;
        Range<>.init<A>(_:)((uint64_t)&v85, (uint64_t)&type metadata for UID);
        unint64_t v85 = v52;
        sub_1005E36A0();
        uint64_t v53 = (uint64_t)v74;
        MessageIdentifierSet.union(_:)();
        sub_100007A48((uint64_t)v18, &qword_100709E38);
        MessageIdentifierSet.count.getter();
        uint64_t v54 = v81;
        uint64_t v55 = v82;
        uint64_t v56 = (uint64_t)v73;
        if (v57 < 1)
        {
          sub_100007A48(v53, &qword_100709E38);
          uint64_t v59 = 1;
        }
        else
        {
          uint64_t v58 = (uint64_t)v71;
          sub_10001FDF0(v53, (uint64_t)v71, &qword_100709E38);
          sub_10001FDF0(v58, v54, &qword_100709E30);
          uint64_t v59 = 0;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v54, v59, 1, v78);
        sub_100007A48(v50, &qword_100709E38);
        uint64_t v69 = v56;
      }
      sub_100007A48(v69, &qword_10070A000);
      return sub_100007A48(v39, &qword_100709E30);
    }
    else
    {
LABEL_10:
      swift_bridgeObjectRelease();
      sub_100007A48((uint64_t)v36, &qword_10070A000);
      sub_100007A48(v39, &qword_100709E30);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v43, 1, 1, v22);
    }
  }
}

uint64_t sub_10016E4E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000566C(&qword_100709E60);
  uint64_t v33 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unsigned int v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_100709E30);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v34 = (uint64_t)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10000566C(&qword_100709E38);
  uint64_t v10 = __chkstk_darwin(v36);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v35 = (uint64_t)&v29 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v29 - v16;
  __chkstk_darwin(v15);
  uint64_t v37 = (uint64_t)&v29 - v18;
  sub_10001FC6C();
  swift_bridgeObjectRetain();
  sub_1005E3680();
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19)
  {
    uint64_t v30 = v8;
    uint64_t v31 = v7;
    uint64_t v32 = a2;
    uint64_t v20 = (void (**)(char *, char *, uint64_t))(v33 + 16);
    uint64_t v33 = swift_bridgeObjectRetain();
    uint64_t v21 = (unsigned char *)(v33 + 40);
    do
    {
      if ((*v21 & 1) == 0)
      {
        uint64_t v38 = *((void *)v21 - 1);
        sub_100063E18();
        Range<>.init<A>(_:)((uint64_t)&v38, (uint64_t)&type metadata for UID);
        uint64_t v38 = v22;
        sub_1005E36A0();
        (*v20)(v6, v12, v4);
        sub_1005E3670();
        sub_100007A48((uint64_t)v12, &qword_100709E38);
      }
      v21 += 12;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    uint64_t v7 = v31;
    a2 = v32;
    uint64_t v8 = v30;
  }
  uint64_t v23 = v37;
  sub_10001FDF0((uint64_t)v17, v37, &qword_100709E38);
  swift_bridgeObjectRelease();
  uint64_t v24 = v35;
  sub_1000079E4(v23, v35, &qword_100709E38);
  MessageIdentifierSet.count.getter();
  if (v25 <= 0)
  {
    sub_100007A48(v24, &qword_100709E38);
    uint64_t v27 = 1;
  }
  else
  {
    uint64_t v26 = v34;
    sub_10001FDF0(v24, v34, &qword_100709E38);
    sub_10001FDF0(v26, a2, &qword_100709E30);
    uint64_t v27 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v27, 1, v7);
  return sub_100007A48(v23, &qword_100709E38);
}

uint64_t sub_10016E894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  unsigned int v10 = a1;
  uint64_t v11 = sub_10000566C(&qword_100709E60);
  uint64_t v49 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = &v46[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_10000566C(&qword_100709E38);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = &v46[-v17];
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = &v46[-v20];
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v55 = &v46[-v23];
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t result = __chkstk_darwin(v24);
  if ((a1 & 0x100000000) == 0)
  {
    if (a1 == -1)
    {
      __break(1u);
      return result;
    }
    ++v10;
    if ((a4 & 0x100000000) != 0) {
      goto LABEL_12;
    }
    goto LABEL_6;
  }
  if ((a4 & 0x100000000) == 0)
  {
LABEL_6:
    if (v10 <= a4) {
      unsigned int v29 = a4;
    }
    else {
      unsigned int v29 = v10;
    }
    if ((a1 & (unint64_t)&_mh_execute_header) != 0) {
      unsigned int v10 = a4;
    }
    else {
      unsigned int v10 = v29;
    }
LABEL_12:
    uint64_t v50 = &v46[-v26];
    uint64_t v51 = v28;
    uint64_t v52 = a2;
    uint64_t v53 = v27;
    uint64_t v54 = result;
    unint64_t v30 = sub_10001FC6C();
    uint64_t v31 = a5;
    uint64_t v32 = a3;
    swift_bridgeObjectRetain();
    unint64_t v56 = v30;
    sub_1005E3680();
    uint64_t v33 = *(void *)(a3 + 16);
    if (v33)
    {
      unsigned int v47 = v10;
      uint64_t v48 = v31;
      sub_100063E18();
      uint64_t v34 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v49 + 16);
      swift_bridgeObjectRetain();
      uint64_t v35 = 32;
      do
      {
        uint64_t v59 = *(void *)(v32 + v35);
        Range<>.init<A>(_:)((uint64_t)&v59, (uint64_t)&type metadata for UID);
        uint64_t v59 = v36;
        sub_1005E36A0();
        (*v34)(v13, v18, v11);
        sub_1005E3670();
        sub_100007A48((uint64_t)v18, &qword_100709E38);
        v35 += 12;
        --v33;
      }
      while (v33);
      swift_bridgeObjectRelease();
      uint64_t v31 = v48;
      unsigned int v10 = v47;
    }
    uint64_t v37 = v55;
    sub_10001FDF0((uint64_t)v21, (uint64_t)v55, &qword_100709E38);
    swift_bridgeObjectRelease();
    sub_10000566C(&qword_100709FF8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005F6670;
    LODWORD(v59) = v10;
    uint64_t v39 = v31;
    LODWORD(v57) = -1;
    sub_100063E18();
    static MessageIdentifier.... infix(_:_:)();
    sub_1000630DC(inited);
    uint64_t v40 = v51;
    uint64_t v41 = v54;
    MessageIdentifierSet.subtracting(_:)((uint64_t)v18, v54);
    sub_100007A48((uint64_t)v18, &qword_100709E38);
    sub_100007A48((uint64_t)v37, &qword_100709E38);
    if ((v52 & (unint64_t)&_mh_execute_header) != 0) {
      int v42 = 1;
    }
    else {
      int v42 = v52;
    }
    LODWORD(v57) = v42;
    int v58 = -1;
    static MessageIdentifier.... infix(_:_:)();
    uint64_t v57 = v59;
    Range<>.init<A>(_:)((uint64_t)&v57, (uint64_t)&type metadata for UID);
    uint64_t v57 = v43;
    uint64_t v44 = v53;
    sub_1005E36A0();
    uint64_t v45 = (uint64_t)v50;
    MessageIdentifierSet.intersection(_:)(v44, v41);
    sub_100007A48(v44, &qword_100709E38);
    sub_100007A48(v40, &qword_100709E38);
    return sub_10001FDF0(v45, v39, &qword_100709E38);
  }
  sub_10001FC6C();
  return sub_1005E3680();
}

uint64_t sub_10016ED38(unsigned int *a1, unsigned int *a2)
{
  char v3 = *((unsigned char *)a1 + 5);
  uint64_t result = *((unsigned __int8 *)a2 + 5);
  if ((v3 & 1) == 0)
  {
    if ((result & 1) == 0)
    {
      unint64_t v5 = *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32);
      unint64_t v6 = *a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32);
      if ((v6 & 0x100000000) != 0)
      {
        if ((v5 & 0x100000000) != 0) {
          return 1;
        }
      }
      else if ((v5 & 0x100000000) == 0 && v6 == *a2)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_10016ED90(uint64_t a1, uint64_t a2)
{
  BOOL v3 = *(_DWORD *)a2 == *(_DWORD *)a1 && *(_DWORD *)(a2 + 4) == *(_DWORD *)(a1 + 4);
  return v3 & (*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8) ^ 1u);
}

uint64_t sub_10016EDBC(uint64_t a1, uint64_t a2)
{
  return sub_10016FD78(*(void *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 13) << 40), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int8 *)(a1 + 20) << 32), *(void *)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 13) << 40), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int8 *)(a2 + 20) << 32));
}

uint64_t sub_10016EE34(uint64_t a1, char a2)
{
  if (a2) {
    uint64_t v2 = 14931;
  }
  else {
    uint64_t v2 = 978332499;
  }
  uint64_t v4 = v2;
  sub_10000566C(&qword_10070A9B8);
  v5._countAndFlagsBits = sub_1005E1CA0();
  sub_1005E1E30(v5);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10016EEB0()
{
  return sub_10016EE34(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_10016EEBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000566C(&qword_100709E30);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = *(void *)v3;
  unint64_t v17 = *(unsigned int *)(v3 + 8) | ((unint64_t)*(unsigned __int8 *)(v3 + 12) << 32);
  uint64_t v18 = *(unsigned int *)(v3 + 16);
  unsigned __int8 v19 = *(unsigned char *)(v3 + 20);
  LOBYTE(v27) = *(unsigned char *)(v3 + 13);
  LOBYTE(v25) = v19;
  sub_10016F258(a1, a2, v16, v17 | ((unint64_t)v27 << 40), v18 | ((unint64_t)v19 << 32), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100007A48((uint64_t)v8, &qword_10070A000);
    uint64_t result = sub_100067EE0();
    if (v21) {
      return result;
    }
    LODWORD(v25) = result;
    int v26 = -1;
    sub_100063E18();
    static MessageIdentifier.... infix(_:_:)();
    uint64_t v25 = v27;
    Range<>.init<A>(_:)((uint64_t)&v25, (uint64_t)&type metadata for UID);
    uint64_t v25 = v22;
    sub_10001FC6C();
    sub_1005E36A0();
    sub_10016F6A4((uint64_t)v13);
    uint64_t v23 = (uint64_t)v13;
  }
  else
  {
    sub_10001FDF0((uint64_t)v8, (uint64_t)v15, &qword_100709E30);
    sub_10016F6A4((uint64_t)v15);
    uint64_t v23 = (uint64_t)v15;
  }
  return sub_100007A48(v23, &qword_100709E30);
}

uint64_t sub_10016F120(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E30);
  uint64_t result = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a2 + 8);
  unint64_t v9 = *(void *)(v8 + 16);
  if ((uint64_t)v9 > a1)
  {
    unint64_t v10 = a1 - 1;
    if (__OFSUB__(a1, 1))
    {
      __break(1u);
    }
    else if (v10 < v9)
    {
      LODWORD(v13) = *(_DWORD *)(v8 + 8 * v10 + 32);
      int v14 = -1;
      sub_100063E18();
      static MessageIdentifier.... infix(_:_:)();
      uint64_t v13 = v15;
      Range<>.init<A>(_:)((uint64_t)&v13, (uint64_t)&type metadata for UID);
      uint64_t v13 = v11;
      sub_10001FC6C();
      sub_1005E36A0();
      sub_10016F6A4((uint64_t)v7);
      return sub_100007A48((uint64_t)v7, &qword_100709E30);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10016F258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v53 = a3;
  uint64_t v50 = sub_10000566C(&qword_100709E60);
  uint64_t v48 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v49 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v12 - 8);
  int v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000566C(&qword_100709E30);
  uint64_t v45 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v41 - v19;
  uint64_t v21 = sub_10000566C(&qword_100709E38);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v23 = __chkstk_darwin(v22);
  int v26 = (char *)&v41 - v25;
  uint64_t v52 = a2;
  if (*(void *)(*(void *)(a2 + 8) + 16) <= a1)
  {
    uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56);
    return v33(a6, 1, 1, v15);
  }
  else
  {
    uint64_t v43 = v23;
    uint64_t v44 = v24;
    uint64_t v41 = v18;
    uint64_t v42 = a6;
    uint64_t v51 = v15;
    sub_10001FC6C();
    sub_1005E3680();
    if (a1 >= 1)
    {
      uint64_t v27 = a5;
      uint64_t v28 = (unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
      unint64_t v29 = a5;
      unint64_t v30 = v49;
      uint64_t v31 = (void (**)(char *, char *, uint64_t))(v48 + 16);
      uint64_t v32 = HIDWORD(v29) & 1;
      unint64_t v47 = a4 & 0xFFFFFFFFFFLL | (((a4 >> 40) & 1) << 40);
      uint64_t v48 = (a4 >> 40) & 1;
      uint64_t v46 = v27 | (v32 << 32);
      while (1)
      {
        char v55 = v48;
        char v54 = v32;
        sub_10016DD64((unint64_t)v26, v52, v53, v47, v46, (uint64_t)v14);
        if ((*v28)(v14, 1, v51) == 1) {
          break;
        }
        sub_10001FDF0((uint64_t)v14, (uint64_t)v20, &qword_100709E30);
        (*v31)(v30, v20, v50);
        sub_1005E3670();
        sub_100007A48((uint64_t)v20, &qword_100709E30);
        if (!--a1) {
          goto LABEL_11;
        }
      }
      sub_100007A48((uint64_t)v14, &qword_10070A000);
    }
LABEL_11:
    uint64_t v35 = v44;
    sub_1000079E4((uint64_t)v26, v44, &qword_100709E38);
    MessageIdentifierSet.count.getter();
    if (v36 < 1)
    {
      sub_100007A48(v35, &qword_100709E38);
      uint64_t v40 = 1;
      uint64_t v39 = v42;
    }
    else
    {
      uint64_t v37 = (uint64_t)v41;
      sub_10001FDF0(v35, (uint64_t)v41, &qword_100709E38);
      uint64_t v38 = v37;
      uint64_t v39 = v42;
      sub_10001FDF0(v38, v42, &qword_100709E30);
      uint64_t v40 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(v39, v40, 1, v51);
    return sub_100007A48((uint64_t)v26, &qword_100709E38);
  }
}

uint64_t sub_10016F6A4(uint64_t a1)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v5[2] = a1;
  swift_bridgeObjectRetain();
  uint64_t v3 = (uint64_t)sub_100064D58((void (*)(void *__return_ptr, void))sub_100170A44, (uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  *(void *)uint64_t v1 = v3;
  LOBYTE(v3) = sub_10007995C(v3, v2);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v3 & 1) == 0
    && (*(unsigned char *)(v1 + 13) & 1) == 0
    && ((*(unsigned int *)(v1 + 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 12) << 32)) & 0x100000000) == 0)
  {
    if (*(_DWORD *)(v1 + 8) == -1)
    {
      __break(1u);
    }
    else
    {
      int v6 = *(_DWORD *)(v1 + 8) + 1;
      sub_10000566C(&qword_100709E38);
      uint64_t result = MessageIdentifierSet.contains(_:)();
      if ((result & 1) == 0)
      {
        *(_WORD *)(v1 + 12) = 256;
        *(_DWORD *)(v1 + 8) = 0;
      }
    }
  }
  return result;
}

uint64_t sub_10016F78C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070A9C0);
  __chkstk_darwin(v4 - 8);
  int v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_100709E38);
  uint64_t v8 = __chkstk_darwin(v7);
  unint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v21 = a2;
  sub_100063E18();
  Range<>.init<A>(_:)((uint64_t)&v21, (uint64_t)&type metadata for UID);
  uint64_t v21 = v13;
  sub_10001FC6C();
  sub_1005E36A0();
  MessageIdentifierSet.intersection(_:)(a1, v7);
  sub_100007A48((uint64_t)v10, &qword_100709E38);
  unint64_t v14 = sub_1000702CC();
  if ((v14 & 0x100000000) != 0
    || (int v15 = v14,
        MessageIdentifierSet.ranges.getter((uint64_t)v6),
        int v16 = (unint64_t)sub_100070018() >> 32,
        char v18 = v17,
        sub_100007A48((uint64_t)v6, &qword_10070A9C0),
        (v18 & 1) != 0))
  {
    sub_100007A48((uint64_t)v12, &qword_100709E38);
    return 0;
  }
  else
  {
    v20[0] = v16;
    v20[1] = v15;
    static MessageIdentifier.... infix(_:_:)();
    sub_100007A48((uint64_t)v12, &qword_100709E38);
    return v21;
  }
}

uint64_t sub_10016F994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v5 = sub_10000566C(&qword_100709E60);
  uint64_t v39 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_100709E30);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v40 = (uint64_t)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_10000566C(&qword_100709E38);
  uint64_t v11 = __chkstk_darwin(v43);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v42 = (uint64_t)&v35 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  char v18 = (char *)&v35 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v41 = (uint64_t)&v35 - v20;
  __chkstk_darwin(v19);
  uint64_t v44 = (char *)&v35 - v21;
  sub_10001FC6C();
  swift_bridgeObjectRetain();
  sub_1005E3680();
  uint64_t v22 = a1;
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23)
  {
    uint64_t v36 = v9;
    uint64_t v37 = v8;
    uint64_t v38 = a3;
    sub_100063E18();
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v39 + 16);
    swift_bridgeObjectRetain();
    uint64_t v25 = 32;
    do
    {
      uint64_t v46 = *(void *)(v22 + v25);
      Range<>.init<A>(_:)((uint64_t)&v46, (uint64_t)&type metadata for UID);
      uint64_t v46 = v26;
      sub_1005E36A0();
      (*v24)(v7, v13, v5);
      sub_1005E3670();
      sub_100007A48((uint64_t)v13, &qword_100709E38);
      v25 += 12;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    uint64_t v8 = v37;
    a3 = v38;
    uint64_t v9 = v36;
  }
  uint64_t v27 = (uint64_t)v18;
  uint64_t v28 = v41;
  sub_10001FDF0(v27, v41, &qword_100709E38);
  swift_bridgeObjectRelease();
  uint64_t v29 = (uint64_t)v44;
  MessageIdentifierSet.subtracting(_:)(v45, v43);
  sub_100007A48(v28, &qword_100709E38);
  uint64_t v30 = v42;
  sub_1000079E4(v29, v42, &qword_100709E38);
  MessageIdentifierSet.count.getter();
  if (v31 <= 0)
  {
    sub_100007A48(v30, &qword_100709E38);
    uint64_t v33 = 1;
  }
  else
  {
    uint64_t v32 = v40;
    sub_10001FDF0(v30, v40, &qword_100709E38);
    sub_10001FDF0(v32, a3, &qword_100709E30);
    uint64_t v33 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, v33, 1, v8);
  return sub_100007A48(v29, &qword_100709E38);
}

uint64_t sub_10016FD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!sub_10007995C(a1, a4)) {
    return 0;
  }
  if ((a2 & 0x10000000000) != 0)
  {
    if ((a5 & 0x10000000000) == 0) {
      return 0;
    }
  }
  else
  {
    if ((a5 & 0x10000000000) != 0) {
      return 0;
    }
    if ((a2 & 0x100000000) != 0)
    {
      if ((a5 & 0x100000000) == 0) {
        return 0;
      }
    }
    else if ((a5 & 0x100000000) != 0 || a5 != a2)
    {
      return 0;
    }
  }
  if ((a3 & 0x100000000) != 0)
  {
    if ((a6 & 0x100000000) != 0) {
      return 1;
    }
  }
  else if ((a6 & 0x100000000) == 0 && a6 == a3)
  {
    return 1;
  }
  return 0;
}

void *sub_10016FE00(uint64_t a1, unint64_t a2, int a3, uint64_t a4, int a5)
{
  LODWORD(v81) = a5;
  uint64_t v89 = a4;
  int v90 = a3;
  unint64_t v83 = a2;
  uint64_t v7 = sub_10000566C(&qword_10070A9C0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v82 = (uint64_t)v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v86 = (uint64_t)v80 - v10;
  uint64_t v87 = sub_10000566C(&qword_10070E138);
  uint64_t v11 = __chkstk_darwin(v87);
  uint64_t v85 = (uint64_t)v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v80 - v13;
  uint64_t v15 = _s15MissingMessagesO11QueriedUIDsVMa(0);
  __chkstk_darwin(v15 - 8);
  uint64_t v84 = (uint64_t)v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000566C(&qword_100709E38);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (uint64_t)v80 - v21;
  uint64_t v23 = _s15MissingMessagesO30WindowUpperBoundAndQueriedUIDsVMa(0);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)v80 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10000566C(&qword_10070E140);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)v80 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = a1;
  sub_1000709B8((uint64_t)v29);
  uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  uint64_t v30 = (void *)(v24 + 48);
  if (v31(v29, 1, v23) == 1)
  {
    if (v90)
    {
      LODWORD(v92) = 1;
      int v91 = -1;
      sub_100063E18();
      static MessageIdentifier.... infix(_:_:)();
      uint64_t v32 = v93;
      uint64_t v30 = sub_1000169C0(0, 1, 1, _swiftEmptyArrayStorage);
      unint64_t v34 = v30[2];
      unint64_t v33 = v30[3];
      if (v34 >= v33 >> 1) {
        uint64_t v30 = sub_1000169C0((void *)(v33 > 1), v34 + 1, 1, v30);
      }
      v30[2] = v34 + 1;
      uint64_t v35 = (char *)v30 + 12 * v34;
      *((void *)v35 + 4) = v32;
      v35[40] = 0;
LABEL_55:
      sub_100170B54(v88, _s15MissingMessagesOMa);
      goto LABEL_56;
    }
    if (v81 > 1u)
    {
      int v74 = EngineAccountMailboxLoggerID.account.getter(v83);
      if (v74 != -1)
      {
        int v91 = -1;
        LODWORD(v92) = v74 + 1;
        sub_100063E18();
        static MessageIdentifier.... infix(_:_:)();
        uint64_t v5 = v93;
        uint64_t v30 = sub_1000169C0(0, 1, 1, _swiftEmptyArrayStorage);
        unint64_t v76 = v30[2];
        unint64_t v75 = v30[3];
LABEL_52:
        if (v76 >= v75 >> 1) {
          uint64_t v30 = sub_1000169C0((void *)(v75 > 1), v76 + 1, 1, v30);
        }
        v30[2] = v76 + 1;
        uint64_t v78 = (char *)v30 + 12 * v76;
        *((void *)v78 + 4) = v5;
        v78[40] = 0;
        goto LABEL_55;
      }
      __break(1u);
    }
    else
    {
      unint64_t v48 = v83;
      Swift::UInt32 v49 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v83);
      if (v49 < 2)
      {
        uint64_t v30 = _swiftEmptyArrayStorage;
      }
      else
      {
        LODWORD(v92) = 1;
        int v91 = v49 - 1;
        sub_100063E18();
        static MessageIdentifier.... infix(_:_:)();
        uint64_t v50 = v93;
        uint64_t v30 = sub_1000169C0(0, 1, 1, _swiftEmptyArrayStorage);
        unint64_t v52 = v30[2];
        unint64_t v51 = v30[3];
        if (v52 >= v51 >> 1) {
          uint64_t v30 = sub_1000169C0((void *)(v51 > 1), v52 + 1, 1, v30);
        }
        v30[2] = v52 + 1;
        uint64_t v53 = (char *)v30 + 12 * v52;
        *((void *)v53 + 4) = v50;
        v53[40] = 0;
      }
      int v77 = EngineAccountMailboxLoggerID.account.getter(v48);
      if (v77 == -1) {
        goto LABEL_55;
      }
      int v91 = -1;
      LODWORD(v92) = v77 + 1;
      sub_100063E18();
      static MessageIdentifier.... infix(_:_:)();
      uint64_t v5 = v93;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_51;
      }
    }
    uint64_t v30 = sub_1000169C0(0, v30[2] + 1, 1, v30);
LABEL_51:
    unint64_t v76 = v30[2];
    unint64_t v75 = v30[3];
    goto LABEL_52;
  }
  sub_100170A88((uint64_t)v29, (uint64_t)v26);
  unint64_t v36 = sub_100063E18();
  static MessageIdentifierRange.all.getter();
  uint64_t v92 = v93;
  v80[1] = v36;
  Range<>.init<A>(_:)((uint64_t)&v92, (uint64_t)&type metadata for UID);
  uint64_t v92 = v37;
  sub_10001FC6C();
  sub_1005E36A0();
  uint64_t v38 = *(int *)(v23 + 20);
  uint64_t v81 = v26;
  uint64_t v39 = (uint64_t)&v26[v38];
  uint64_t v40 = v84;
  sub_100170AEC(v39, v84, _s15MissingMessagesO11QueriedUIDsVMa);
  MessageIdentifierSet.subtracting(_:)(v40, v17);
  sub_100007A48((uint64_t)v20, &qword_100709E38);
  sub_100007A48(v40, &qword_100709E38);
  uint64_t v41 = v86;
  MessageIdentifierSet.ranges.getter(v86);
  uint64_t v42 = v85;
  sub_1000079E4(v41, v85, &qword_10070A9C0);
  uint64_t v43 = sub_10000566C(&qword_10070A8F8);
  uint64_t v44 = sub_1005E35B0();
  sub_100007A48(v41, &qword_10070A9C0);
  uint64_t v45 = v87;
  *(void *)(v42 + *(int *)(v87 + 36)) = v44;
  sub_10001FDF0(v42, (uint64_t)v14, &qword_10070E138);
  uint64_t v46 = *(int *)(v45 + 36);
  uint64_t v47 = *(void *)&v14[v46];
  if (v47 != sub_1005E35E0())
  {
    uint64_t v87 = v22;
    uint64_t v30 = _swiftEmptyArrayStorage;
    uint64_t v22 = 12;
    while (1)
    {
      MessageIdentifierSet.RangeView.subscript.getter();
      uint64_t v54 = v93;
      uint64_t v55 = sub_1005E35B0();
      uint64_t v56 = sub_1005E35E0();
      if (v47 < v55 || v47 >= v56) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v30 = sub_1000169C0(0, v30[2] + 1, 1, v30);
      }
      unint64_t v58 = v30[2];
      unint64_t v57 = v30[3];
      if (v58 >= v57 >> 1) {
        uint64_t v30 = sub_1000169C0((void *)(v57 > 1), v58 + 1, 1, v30);
      }
      ++v47;
      v30[2] = v58 + 1;
      uint64_t v59 = (char *)v30 + 12 * v58;
      *((void *)v59 + 4) = v54;
      v59[40] = 0;
      if (v47 == sub_1005E35E0())
      {
        *(void *)&v14[v46] = v47;
        uint64_t v22 = v87;
        goto LABEL_22;
      }
    }
    __break(1u);
    goto LABEL_58;
  }
  uint64_t v30 = _swiftEmptyArrayStorage;
LABEL_22:
  sub_100007A48((uint64_t)v14, &qword_10070E138);
  uint64_t v60 = v82;
  MessageIdentifierSet.ranges.getter(v82);
  uint64_t v61 = sub_100070018();
  char v63 = v62;
  sub_100007A48(v60, &qword_10070A9C0);
  uint64_t v43 = (uint64_t)v81;
  unsigned int v64 = *(_DWORD *)v81;
  int v65 = v81[4];
  int v66 = v90;
  if (v90)
  {
    unsigned int v67 = 0;
    unsigned int v68 = *(_DWORD *)v81;
  }
  else
  {
    unsigned int v68 = EngineAccountMailboxLoggerID.account.getter(v83);
    unsigned int v67 = v68;
  }
  if (v67 <= v64) {
    unsigned int v67 = v64;
  }
  if (v66) {
    unsigned int v67 = v64;
  }
  if (v65) {
    unsigned int v67 = v68;
  }
  int v69 = v65 & v66;
  if (v63)
  {
    if (v69)
    {
      int v70 = 1;
      goto LABEL_41;
    }
  }
  else
  {
    if (v67 <= HIDWORD(v61)) {
      unsigned int v67 = HIDWORD(v61);
    }
    if (v69) {
      unsigned int v67 = HIDWORD(v61);
    }
  }
  if (v67 != -1)
  {
    int v70 = v67 + 1;
LABEL_41:
    LODWORD(v92) = v70;
    int v91 = -1;
    static MessageIdentifier.... infix(_:_:)();
    uint64_t v54 = v93;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_42:
      unint64_t v72 = v30[2];
      unint64_t v71 = v30[3];
      if (v72 >= v71 >> 1) {
        uint64_t v30 = sub_1000169C0((void *)(v71 > 1), v72 + 1, 1, v30);
      }
      v30[2] = v72 + 1;
      uint64_t v73 = (char *)v30 + 12 * v72;
      *((void *)v73 + 4) = v54;
      v73[40] = 1;
      goto LABEL_45;
    }
LABEL_58:
    uint64_t v30 = sub_1000169C0(0, v30[2] + 1, 1, v30);
    goto LABEL_42;
  }
LABEL_45:
  sub_100170B54(v88, _s15MissingMessagesOMa);
  sub_100007A48(v22, &qword_100709E38);
  sub_100170B54(v43, _s15MissingMessagesO30WindowUpperBoundAndQueriedUIDsVMa);
LABEL_56:
  LOBYTE(v93) = 0;
  LOBYTE(v92) = BYTE4(v89) & 1;
  return v30;
}

void *sub_1001707E8(uint64_t *a1, uint64_t a2, unint64_t a3, char a4, unint64_t a5, int a6)
{
  int v11 = a4 & 1;
  uint64_t v12 = _s15MissingMessagesOMa(0);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = &v29[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  uint64_t v17 = &v29[-v16];
  sub_100170AEC(a2, (uint64_t)&v29[-v16], _s15MissingMessagesOMa);
  uint64_t v30 = sub_10016FE00((uint64_t)v17, a3, v11, a5 | ((HIDWORD(a5) & 1) << 32), a6);
  int v31 = v18;
  char v32 = v19;
  char v33 = v20 & 1;
  int v34 = v21;
  char v35 = v22 & 1;
  if ((_BYTE)a6)
  {
    if (a6 == 1) {
      uint64_t v23 = 2;
    }
    else {
      uint64_t v23 = 1;
    }
    sub_10016F120(v23, (uint64_t)a1);
  }
  else
  {
    sub_100170AEC(a2, (uint64_t)v15, _s15MissingMessagesOMa);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_100170B54((uint64_t)v15, _s15MissingMessagesOMa);
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v25 = 1;
    }
    else
    {
      uint64_t v26 = *a1;
      unint64_t v27 = sub_100067F58();
      if (sub_100070D0C(v26, v27 | ((HIDWORD(v27) & 1) << 32))) {
        uint64_t v25 = 3;
      }
      else {
        uint64_t v25 = 1;
      }
    }
    sub_10016EEBC(v25, (uint64_t)a1);
  }
  sub_100170B54(a2, _s15MissingMessagesOMa);
  sub_100170B54((uint64_t)a1, type metadata accessor for MessageBatches);
  return v30;
}

uint64_t sub_100170A44@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10016F78C(*(void *)(v2 + 16), *a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_100170A88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s15MissingMessagesO30WindowUpperBoundAndQueriedUIDsVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100170AEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100170B54(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s11QueryRangesVwCP(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s11QueryRangesVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 8);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v4;
  int v5 = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v5;
  return a1;
}

__n128 _s11QueryRangesVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(void *)(a1 + 13) = *(void *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s11QueryRangesVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  return a1;
}

uint64_t _s11QueryRangesVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 21)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s11QueryRangesVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 21) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 21) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s11QueryRangesVMa()
{
  return &_s11QueryRangesVN;
}

uint64_t _s11QueryRangesV7ElementVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s11QueryRangesV7ElementVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *_s11QueryRangesV7ElementVMa()
{
  return &_s11QueryRangesV7ElementVN;
}

uint64_t _s11QueryRangesV19FetchedWindowUpdateOwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 6)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s11QueryRangesV19FetchedWindowUpdateOwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 6) = v3;
  return result;
}

uint64_t sub_100170E58(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100170E74(uint64_t result, int a2)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    *(unsigned char *)(result + 5) = 1;
  }
  else
  {
    *(unsigned char *)(result + 5) = 0;
  }
  return result;
}

ValueMetadata *_s11QueryRangesV19FetchedWindowUpdateOMa()
{
  return &_s11QueryRangesV19FetchedWindowUpdateON;
}

unsigned char *_s11QueryRangesV7ElementV11PersistenceOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100170F74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11QueryRangesV7ElementV11PersistenceOMa()
{
  return &_s11QueryRangesV7ElementV11PersistenceON;
}

unint64_t sub_100170FB0()
{
  unint64_t result = qword_10070E148;
  if (!qword_10070E148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E148);
  }
  return result;
}

uint64_t sub_100171008@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v30 = a4;
  uint64_t v33 = a1;
  uint64_t v31 = a5;
  int v32 = a2 & 1;
  uint64_t v7 = sub_10000566C(&qword_100709E38);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = &v29[-v12];
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = &v29[-v15];
  __chkstk_darwin(v14);
  int v18 = &v29[-v17];
  uint64_t v19 = type metadata accessor for MessagesPendingDownload();
  __chkstk_darwin(v19 - 8);
  int v21 = &v29[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = type metadata accessor for PendingPersistenceUpdates();
  uint64_t v23 = a3 + *(int *)(v22 + 28);
  if (a2) {
    v23 += *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
  }
  sub_10017616C(v23, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  sub_100026334(a3 + *(int *)(v22 + 32), (uint64_t)v18);
  if (*(void *)(*(void *)v21 + 16) < 0x11AuLL || (unint64_t v24 = sub_10006A268(), (v24 & 0x100000000) != 0))
  {
    uint64_t v26 = swift_bridgeObjectRetain();
    sub_100171300(v26);
  }
  else
  {
    LODWORD(v34) = 1;
    int v35 = v24;
    sub_100063E18();
    static MessageIdentifier.... infix(_:_:)();
    uint64_t v34 = v36;
    Range<>.init<A>(_:)((uint64_t)&v34, (uint64_t)&type metadata for UID);
    uint64_t v34 = v25;
    sub_10001FC6C();
    sub_1005E36A0();
  }
  MessageIdentifierSet.union(_:)();
  sub_100007A48((uint64_t)v13, &qword_100709E38);
  sub_100026334((uint64_t)v16, (uint64_t)v10);
  if (v30) {
    uint64_t v27 = 47;
  }
  else {
    uint64_t v27 = 0;
  }
  sub_100171490(v33, v32, (uint64_t)v10, v27, !(v30 & 1), v31);
  sub_1001761D4(a3, (uint64_t (*)(void))type metadata accessor for PendingPersistenceUpdates);
  sub_100007A48((uint64_t)v16, &qword_100709E38);
  sub_100007A48((uint64_t)v18, &qword_100709E38);
  return sub_1001761D4((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
}

void sub_100171300(uint64_t a1)
{
  sub_10001FC6C();
  sub_1005E3680();
  int64_t v2 = 0;
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    int64_t v8 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v8 >= v7) {
      goto LABEL_23;
    }
    uint64_t v9 = *(void *)(v3 + 8 * v8);
    ++v2;
    if (!v9)
    {
      int64_t v2 = v8 + 1;
      if (v8 + 1 >= v7) {
        goto LABEL_23;
      }
      uint64_t v9 = *(void *)(v3 + 8 * v2);
      if (!v9)
      {
        int64_t v2 = v8 + 2;
        if (v8 + 2 >= v7) {
          goto LABEL_23;
        }
        uint64_t v9 = *(void *)(v3 + 8 * v2);
        if (!v9)
        {
          int64_t v2 = v8 + 3;
          if (v8 + 3 >= v7) {
            goto LABEL_23;
          }
          uint64_t v9 = *(void *)(v3 + 8 * v2);
          if (!v9) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v6 = (v9 - 1) & v9;
LABEL_5:
    sub_10000566C(&qword_100709E38);
    MessageIdentifierSet.insert(_:)();
  }
  int64_t v10 = v8 + 4;
  if (v10 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  uint64_t v9 = *(void *)(v3 + 8 * v10);
  if (v9)
  {
    int64_t v2 = v10;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v2 >= v7) {
      goto LABEL_23;
    }
    uint64_t v9 = *(void *)(v3 + 8 * v2);
    ++v10;
    if (v9) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

double sub_100171490@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(void *)a6 = 0;
  *(unsigned char *)(a6 + 56) = 0;
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a6 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a6 + 24) = v11;
  *(_DWORD *)(a6 + 40) = *(_DWORD *)(a1 + 32);
  sub_10000566C(&qword_10070A018);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6670;
  if (a2) {
    char v13 = 10;
  }
  else {
    char v13 = 9;
  }
  *(unsigned char *)(inited + 32) = v13;
  Swift::Int v14 = sub_10001DF10(inited);
  swift_setDeallocating();
  *(void *)(a6 + 48) = v14;
  *(unsigned char *)(a6 + 57) = a2 & 1;
  PendingDownload = (int *)type metadata accessor for FindPendingDownload();
  sub_100026334(a3, a6 + PendingDownload[9]);
  *(void *)&long long v19 = PendingDownload;
  sub_100174FD8();
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  sub_100007A48(a3, &qword_100709E38);
  uint64_t v16 = (_OWORD *)(a6 + PendingDownload[11]);
  *uint64_t v16 = v19;
  v16[1] = v20;
  double result = *(double *)&v21;
  v16[2] = v21;
  uint64_t v18 = a6 + PendingDownload[10];
  *(void *)uint64_t v18 = a4;
  *(unsigned char *)(v18 + 8) = a5 & 1;
  return result;
}

Swift::Int sub_1001715F8()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA198);
  qword_100761768 = result;
  return result;
}

uint64_t sub_100171620(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t PendingDownload = type metadata accessor for FindPendingDownload();
  uint64_t v5 = PendingDownload - 8;
  uint64_t v6 = __chkstk_darwin(PendingDownload);
  uint64_t v101 = (uint64_t)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v106 = (char *)&v97 - v8;
  uint64_t v9 = sub_10000566C(&qword_10070A9C0);
  __chkstk_darwin(v9 - 8);
  long long v11 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v12 = __chkstk_darwin(v108);
  uint64_t v104 = (uint64_t)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v100 = (uint64_t)&v97 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v97 - v16;
  uint64_t v18 = sub_1005E0ED0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v105 = (char *)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v102 = (char *)&v97 - v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v97 - v24;
  uint64_t v26 = sub_10000566C(&qword_100709E38);
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v99 = (uint64_t)&v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v103 = (uint64_t)&v97 - v30;
  __chkstk_darwin(v29);
  int v32 = (char *)&v97 - v31;
  uint64_t v33 = *(int *)(v5 + 44);
  uint64_t v107 = v2;
  sub_100026334(v2 + v33, (uint64_t)&v97 - v31);
  sub_10000566C(&qword_100709E60);
  char v34 = sub_1005E3630();
  uint64_t v109 = v32;
  if (v34)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v25, a1, v18);
    sub_10017616C(a1, (uint64_t)v17, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    int v35 = sub_1005E0EB0();
    os_log_type_t v36 = sub_1005E25C0();
    int v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v38 = swift_slowAlloc();
      LODWORD(v106) = v37;
      uint64_t v39 = v38;
      uint64_t v105 = (char *)swift_slowAlloc();
      unsigned int v112 = v105;
      *(_DWORD *)uint64_t v39 = 68159235;
      LODWORD(v110) = 2;
      sub_1005E2960();
      *(_WORD *)(v39 + 8) = 256;
      uint64_t v40 = *(int *)(v108 + 20);
      uint64_t v107 = v18;
      uint64_t v41 = &v17[v40];
      LOBYTE(v110) = v17[v40];
      sub_1005E2960();
      *(_WORD *)(v39 + 11) = 2082;
      uint64_t v108 = v19;
      uint64_t v42 = *((void *)v41 + 1);
      unint64_t v43 = *((void *)v41 + 2);
      swift_bridgeObjectRetain();
      uint64_t v110 = sub_1000C6914(v42, v43, (uint64_t *)&v112);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 21) = 1040;
      LODWORD(v110) = 2;
      sub_1005E2960();
      *(_WORD *)(v39 + 27) = 512;
      LOWORD(v110) = *((_WORD *)v41 + 12);
      sub_1005E2960();
      *(_WORD *)(v39 + 31) = 2160;
      uint64_t v110 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v39 + 41) = 2085;
      int v44 = *((_DWORD *)v41 + 10);
      uint64_t v110 = *((void *)v41 + 4);
      int v111 = v44;
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_1005E1CC0();
      uint64_t v110 = sub_1000C6914(v45, v46, (uint64_t *)&v112);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001761D4((uint64_t)v17, type metadata accessor for MailboxTaskLogger);
      _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v106, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task.", (uint8_t *)v39, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v108 + 8))(v25, v107);
    }
    else
    {

      sub_1001761D4((uint64_t)v17, type metadata accessor for MailboxTaskLogger);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
    }
    uint64_t v75 = (uint64_t)v109;
    return sub_100007A48(v75, &qword_100709E38);
  }
  uint64_t v98 = v26;
  MessageIdentifierSet.ranges.getter((uint64_t)v11);
  sub_10000566C(&qword_10070A8F8);
  uint64_t v47 = sub_1005E35B0();
  uint64_t v48 = sub_1005E35E0();
  uint64_t v49 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v47 < v49 || result < v47)
  {
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v51 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v48 < v51 || result < v48) {
    goto LABEL_26;
  }
  if (!__OFSUB__(v48, v47))
  {
    sub_100007A48((uint64_t)v11, &qword_10070A9C0);
    uint64_t v52 = v19;
    uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    if (v48 - v47 > 19)
    {
      unint64_t v76 = v105;
      v53(v105, a1, v18);
      uint64_t v77 = a1;
      uint64_t v78 = v104;
      sub_10017616C(v77, v104, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v79 = (uint64_t)v109;
      uint64_t v80 = v99;
      sub_100026334((uint64_t)v109, v99);
      uint64_t v81 = v101;
      sub_10017616C(v107, v101, (uint64_t (*)(void))type metadata accessor for FindPendingDownload);
      uint64_t v82 = sub_1005E0EB0();
      os_log_type_t v83 = sub_1005E25C0();
      int v84 = v83;
      if (os_log_type_enabled(v82, v83))
      {
        uint64_t v85 = swift_slowAlloc();
        uint64_t v107 = v18;
        uint64_t v86 = v85;
        uint64_t v106 = (char *)swift_slowAlloc();
        unsigned int v112 = v106;
        *(_DWORD *)uint64_t v86 = 68159747;
        LODWORD(v110) = 2;
        LODWORD(v103) = v84;
        sub_1005E2960();
        *(_WORD *)(v86 + 8) = 256;
        uint64_t v87 = *(int *)(v108 + 20);
        uint64_t v108 = v19;
        uint64_t v88 = v78 + v87;
        LOBYTE(v110) = *(unsigned char *)(v78 + v87);
        sub_1005E2960();
        *(_WORD *)(v86 + 11) = 2082;
        uint64_t v89 = *(void *)(v88 + 8);
        unint64_t v90 = *(void *)(v88 + 16);
        swift_bridgeObjectRetain();
        uint64_t v110 = sub_1000C6914(v89, v90, (uint64_t *)&v112);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v86 + 21) = 1040;
        LODWORD(v110) = 2;
        sub_1005E2960();
        *(_WORD *)(v86 + 27) = 512;
        LOWORD(v110) = *(_WORD *)(v88 + 24);
        sub_1005E2960();
        *(_WORD *)(v86 + 31) = 2160;
        uint64_t v110 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v86 + 41) = 2085;
        int v91 = *(_DWORD *)(v88 + 40);
        uint64_t v110 = *(void *)(v88 + 32);
        int v111 = v91;
        swift_bridgeObjectRetain();
        uint64_t v92 = sub_1005E1CC0();
        uint64_t v110 = sub_1000C6914(v92, v93, (uint64_t *)&v112);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1001761D4(v104, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v86 + 51) = 2048;
        MessageIdentifierSet.count.getter();
        uint64_t v95 = v94;
        sub_100007A48(v80, &qword_100709E38);
        uint64_t v110 = v95;
        sub_1005E2960();
        *(_WORD *)(v86 + 61) = 2082;
        if (*(unsigned char *)(v81 + 57)) {
          uint64_t v96 = 6581810;
        }
        else {
          uint64_t v96 = 7631665;
        }
        uint64_t v110 = sub_1000C6914(v96, 0xE300000000000000, (uint64_t *)&v112);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1001761D4(v81, (uint64_t (*)(void))type metadata accessor for FindPendingDownload);
        _os_log_impl((void *)&_mh_execute_header, v82, (os_log_type_t)v103, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. Excluding %ld, UIDs %{public}s", (uint8_t *)v86, 0x47u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v108 + 8))(v105, v107);
        uint64_t v75 = (uint64_t)v109;
      }
      else
      {
        sub_100007A48(v80, &qword_100709E38);

        sub_1001761D4(v81, (uint64_t (*)(void))type metadata accessor for FindPendingDownload);
        sub_1001761D4(v78, type metadata accessor for MailboxTaskLogger);
        (*(void (**)(char *, uint64_t))(v19 + 8))(v76, v18);
        uint64_t v75 = v79;
      }
    }
    else
    {
      uint64_t v54 = v102;
      uint64_t v55 = v18;
      v53(v102, a1, v18);
      uint64_t v56 = v100;
      sub_10017616C(a1, v100, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v57 = (uint64_t)v109;
      uint64_t v58 = v103;
      sub_100026334((uint64_t)v109, v103);
      uint64_t v59 = (uint64_t)v106;
      sub_10017616C(v107, (uint64_t)v106, (uint64_t (*)(void))type metadata accessor for FindPendingDownload);
      uint64_t v60 = sub_1005E0EB0();
      os_log_type_t v61 = sub_1005E25C0();
      if (os_log_type_enabled(v60, v61))
      {
        uint64_t v62 = swift_slowAlloc();
        uint64_t v105 = (char *)swift_slowAlloc();
        unsigned int v112 = v105;
        *(_DWORD *)uint64_t v62 = 68159747;
        LODWORD(v110) = 2;
        sub_1005E2960();
        *(_WORD *)(v62 + 8) = 256;
        uint64_t v63 = *(int *)(v108 + 20);
        uint64_t v107 = v55;
        uint64_t v108 = v52;
        uint64_t v64 = v56 + v63;
        LOBYTE(v110) = *(unsigned char *)(v56 + v63);
        sub_1005E2960();
        *(_WORD *)(v62 + 11) = 2082;
        uint64_t v65 = *(void *)(v64 + 8);
        unint64_t v66 = *(void *)(v64 + 16);
        swift_bridgeObjectRetain();
        uint64_t v110 = sub_1000C6914(v65, v66, (uint64_t *)&v112);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v62 + 21) = 1040;
        LODWORD(v110) = 2;
        sub_1005E2960();
        *(_WORD *)(v62 + 27) = 512;
        LOWORD(v110) = *(_WORD *)(v64 + 24);
        sub_1005E2960();
        *(_WORD *)(v62 + 31) = 2160;
        uint64_t v110 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v62 + 41) = 2085;
        int v67 = *(_DWORD *)(v64 + 40);
        uint64_t v110 = *(void *)(v64 + 32);
        int v111 = v67;
        swift_bridgeObjectRetain();
        uint64_t v68 = sub_1005E1CC0();
        uint64_t v110 = sub_1000C6914(v68, v69, (uint64_t *)&v112);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1001761D4(v56, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v62 + 51) = 2082;
        uint64_t v70 = v103;
        uint64_t v71 = MessageIdentifierSet.debugDescription.getter(v98);
        uint64_t v110 = sub_1000C6914(v71, v72, (uint64_t *)&v112);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100007A48(v70, &qword_100709E38);
        *(_WORD *)(v62 + 61) = 2082;
        uint64_t v73 = (uint64_t)v106;
        if (v106[57]) {
          uint64_t v74 = 6581810;
        }
        else {
          uint64_t v74 = 7631665;
        }
        uint64_t v110 = sub_1000C6914(v74, 0xE300000000000000, (uint64_t *)&v112);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1001761D4(v73, (uint64_t (*)(void))type metadata accessor for FindPendingDownload);
        _os_log_impl((void *)&_mh_execute_header, v60, v61, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. Excluding UIDs %{public}s, %{public}s", (uint8_t *)v62, 0x47u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v108 + 8))(v102, v107);
        uint64_t v75 = (uint64_t)v109;
      }
      else
      {

        sub_1001761D4(v59, (uint64_t (*)(void))type metadata accessor for FindPendingDownload);
        sub_100007A48(v58, &qword_100709E38);
        sub_1001761D4(v56, type metadata accessor for MailboxTaskLogger);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v55);
        uint64_t v75 = v57;
      }
    }
    return sub_100007A48(v75, &qword_100709E38);
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100172598(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v165 = a1;
  os_log_t v160 = (os_log_t)type metadata accessor for MailboxTaskLogger(0);
  uint64_t v5 = __chkstk_darwin(v160);
  uint64_t v7 = (char *)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v152 = (uint64_t)&v148 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v154 = (uint64_t)&v148 - v11;
  __chkstk_darwin(v10);
  uint64_t v157 = ((char *)&v148 - v12);
  uint64_t v13 = sub_1005E0ED0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v148 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v153 = (char *)&v148 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v155 = (char *)&v148 - v21;
  __chkstk_darwin(v20);
  uint64_t v158 = (char *)&v148 - v22;
  uint64_t v23 = sub_10000566C(&qword_10070A9C0);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v151 = (uint64_t)&v148 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v148 - v26;
  uint64_t v28 = sub_10000566C(&qword_100709E38);
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v31 = __chkstk_darwin(v30);
  __chkstk_darwin(v31);
  uint64_t v33 = __chkstk_darwin((char *)&v148 - v32);
  int v35 = (char *)&v148 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v163 = (uint64_t)&v148 - v40;
  uint64_t v41 = *(void *)v3;
  if (!*(void *)v3)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a2, v13);
    sub_10017616C(a2, (uint64_t)v7, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v81 = sub_1005E0EB0();
    os_log_type_t v82 = sub_1005E2590();
    int v83 = v82;
    uint64_t v84 = v13;
    uint64_t v79 = a2;
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v85 = swift_slowAlloc();
      uint64_t v163 = swift_slowAlloc();
      v168[0] = v163;
      *(_DWORD *)uint64_t v85 = 68159235;
      LODWORD(v166) = 2;
      uint64_t v162 = v3;
      LODWORD(v158) = v83;
      sub_1005E2960();
      *(_WORD *)(v85 + 8) = 256;
      uint64_t isa_high = SHIDWORD(v160[2].isa);
      uint64_t v159 = a2;
      uint64_t v87 = &v7[isa_high];
      LOBYTE(v166) = v7[isa_high];
      sub_1005E2960();
      *(_WORD *)(v85 + 11) = 2082;
      uint64_t v164 = v84;
      uint64_t v161 = v14;
      uint64_t v88 = *((void *)v87 + 1);
      unint64_t v89 = *((void *)v87 + 2);
      swift_bridgeObjectRetain();
      uint64_t v166 = sub_1000C6914(v88, v89, v168);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v85 + 21) = 1040;
      LODWORD(v166) = 2;
      sub_1005E2960();
      *(_WORD *)(v85 + 27) = 512;
      LOWORD(v166) = *((_WORD *)v87 + 12);
      sub_1005E2960();
      *(_WORD *)(v85 + 31) = 2160;
      uint64_t v166 = 0x786F626C69616DLL;
      uint64_t v76 = v165;
      sub_1005E2960();
      *(_WORD *)(v85 + 41) = 2085;
      uint64_t v90 = *((void *)v87 + 4);
      int v91 = *((_DWORD *)v87 + 10);
      uint64_t v92 = v159;
      uint64_t v166 = v90;
      int v167 = v91;
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_1005E1CC0();
      uint64_t v166 = sub_1000C6914(v93, v94, v168);
      uint64_t v3 = v162;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001761D4((uint64_t)v7, type metadata accessor for MailboxTaskLogger);
      _os_log_impl((void *)&_mh_execute_header, v81, (os_log_type_t)v158, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence returned no messages to download.", (uint8_t *)v85, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v79 = v92;
      swift_slowDealloc();

      uint64_t v80 = (*(uint64_t (**)(char *, uint64_t))(v161 + 8))(v17, v164);
      goto LABEL_34;
    }
    sub_1001761D4((uint64_t)v7, type metadata accessor for MailboxTaskLogger);

    uint64_t v80 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    goto LABEL_33;
  }
  uint64_t v156 = v36;
  uint64_t v149 = v39;
  uint64_t v150 = v38;
  uint64_t v148 = v37;
  uint64_t v164 = v13;
  uint64_t v161 = v14;
  uint64_t v162 = v3;
  int64_t v42 = *(void *)(v41 + 16);
  unint64_t v43 = _swiftEmptyArrayStorage;
  if (v42)
  {
    uint64_t v159 = a2;
    uint64_t v166 = (uint64_t)_swiftEmptyArrayStorage;
    sub_10001A5B4(0, v42, 0);
    unint64_t v43 = (void *)v166;
    int v44 = (int *)(v41 + 32);
    unint64_t v45 = *(void *)(v166 + 16);
    do
    {
      int v47 = *v44;
      v44 += 6;
      int v46 = v47;
      uint64_t v166 = (uint64_t)v43;
      unint64_t v48 = v43[3];
      if (v45 >= v48 >> 1)
      {
        sub_10001A5B4(v48 > 1, v45 + 1, 1);
        unint64_t v43 = (void *)v166;
      }
      v43[2] = v45 + 1;
      *((_DWORD *)v43 + v45++ + 8) = v46;
      --v42;
    }
    while (v42);
    a2 = v159;
  }
  sub_10001FC6C();
  sub_1005E3680();
  uint64_t v49 = v43[2];
  uint64_t v50 = v163;
  if (v49)
  {
    uint64_t v51 = (int *)(v43 + 4);
    do
    {
      int v52 = *v51++;
      LODWORD(v168[0]) = v52;
      MessageIdentifierSet.insert(_:)();
      --v49;
    }
    while (v49);
  }
  swift_bridgeObjectRelease();
  sub_10006B1BC((uint64_t)v35, v50);
  MessageIdentifierSet.ranges.getter((uint64_t)v27);
  sub_10000566C(&qword_10070A8F8);
  uint64_t v53 = sub_1005E35B0();
  uint64_t v54 = sub_1005E35E0();
  uint64_t v55 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v53 < v55 || result < v53)
  {
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v57 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v54 < v57 || result < v54) {
    goto LABEL_38;
  }
  BOOL v58 = __OFSUB__(v54, v53);
  uint64_t v59 = v54 - v53;
  if (v58)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  sub_100007A48((uint64_t)v27, &qword_10070A9C0);
  if ((unint64_t)(v59 - 21) >= 0xFFFFFFFFFFFFFFECLL)
  {
    uint64_t v95 = v161;
    uint64_t v96 = v158;
    uint64_t v79 = a2;
    uint64_t v97 = v164;
    (*(void (**)(char *, uint64_t, uint64_t))(v161 + 16))(v158, a2, v164);
    uint64_t v98 = (uint64_t)v157;
    sub_10017616C(a2, (uint64_t)v157, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_100026334(v50, v156);
    uint64_t v99 = sub_1005E0EB0();
    os_log_type_t v100 = sub_1005E2590();
    int v101 = v100;
    if (os_log_type_enabled(v99, v100))
    {
      uint64_t v102 = swift_slowAlloc();
      uint64_t v159 = swift_slowAlloc();
      v168[0] = v159;
      *(_DWORD *)uint64_t v102 = 68159491;
      LODWORD(v166) = 2;
      LODWORD(v155) = v101;
      sub_1005E2960();
      *(_WORD *)(v102 + 8) = 256;
      uint64_t v103 = SHIDWORD(v160[2].isa);
      os_log_t v160 = v99;
      uint64_t v104 = v98 + v103;
      LOBYTE(v166) = *(unsigned char *)(v98 + v103);
      sub_1005E2960();
      *(_WORD *)(v102 + 11) = 2082;
      uint64_t v106 = *(void *)(v104 + 8);
      unint64_t v105 = *(void *)(v104 + 16);
      swift_bridgeObjectRetain();
      uint64_t v166 = sub_1000C6914(v106, v105, v168);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v102 + 21) = 1040;
      LODWORD(v166) = 2;
      sub_1005E2960();
      *(_WORD *)(v102 + 27) = 512;
      LOWORD(v166) = *(_WORD *)(v104 + 24);
      sub_1005E2960();
      *(_WORD *)(v102 + 31) = 2160;
      uint64_t v166 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v102 + 41) = 2085;
      int v107 = *(_DWORD *)(v104 + 40);
      uint64_t v166 = *(void *)(v104 + 32);
      int v167 = v107;
      swift_bridgeObjectRetain();
      uint64_t v108 = sub_1005E1CC0();
      uint64_t v166 = sub_1000C6914(v108, v109, v168);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001761D4((uint64_t)v157, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v102 + 51) = 2082;
      uint64_t v110 = v156;
      uint64_t v111 = MessageIdentifierSet.debugDescription.getter(v28);
      uint64_t v166 = sub_1000C6914(v111, v112, v168);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100007A48(v110, &qword_100709E38);
      os_log_t v113 = v160;
      _os_log_impl((void *)&_mh_execute_header, v160, (os_log_type_t)v155, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence returned UIDs %{public}s to download.", (uint8_t *)v102, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v79 = a2;
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v95 + 8))(v158, v164);
    }
    else
    {

      sub_100007A48(v156, &qword_100709E38);
      sub_1001761D4(v98, type metadata accessor for MailboxTaskLogger);
      (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v97);
    }
    uint64_t v80 = sub_100007A48(v50, &qword_100709E38);
    uint64_t v3 = v162;
  }
  else
  {
    sub_10000566C(&qword_100709E60);
    char v60 = sub_1005E3630();
    uint64_t v61 = v161;
    uint64_t v3 = v162;
    uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(v161 + 16);
    uint64_t v63 = v164;
    if (v60)
    {
      uint64_t v64 = v155;
      uint64_t v65 = a2;
      v62(v155, a2, v164);
      uint64_t v66 = a2;
      uint64_t v67 = v154;
      sub_10017616C(v66, v154, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v68 = sub_1005E0EB0();
      os_log_type_t v69 = sub_1005E2590();
      if (os_log_type_enabled(v68, v69))
      {
        uint64_t v70 = swift_slowAlloc();
        v168[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v70 = 68159235;
        LODWORD(v166) = 2;
        sub_1005E2960();
        *(_WORD *)(v70 + 8) = 256;
        uint64_t v71 = v67 + SHIDWORD(v160[2].isa);
        LOBYTE(v166) = *(unsigned char *)v71;
        sub_1005E2960();
        *(_WORD *)(v70 + 11) = 2082;
        uint64_t v159 = v65;
        uint64_t v72 = *(void *)(v71 + 8);
        unint64_t v73 = *(void *)(v71 + 16);
        swift_bridgeObjectRetain();
        uint64_t v166 = sub_1000C6914(v72, v73, v168);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v70 + 21) = 1040;
        LODWORD(v166) = 2;
        sub_1005E2960();
        *(_WORD *)(v70 + 27) = 512;
        LOWORD(v166) = *(_WORD *)(v71 + 24);
        sub_1005E2960();
        *(_WORD *)(v70 + 31) = 2160;
        uint64_t v166 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v70 + 41) = 2085;
        uint64_t v74 = *(void *)(v71 + 32);
        int v75 = *(_DWORD *)(v71 + 40);
        uint64_t v76 = v165;
        uint64_t v166 = v74;
        int v167 = v75;
        swift_bridgeObjectRetain();
        uint64_t v77 = sub_1005E1CC0();
        uint64_t v166 = sub_1000C6914(v77, v78, v168);
        sub_1005E2960();
        uint64_t v79 = v159;
        swift_bridgeObjectRelease();
        sub_1001761D4(v154, type metadata accessor for MailboxTaskLogger);
        _os_log_impl((void *)&_mh_execute_header, v68, v69, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence returned no messages to download.", (uint8_t *)v70, 0x33u);
        swift_arrayDestroy();
        uint64_t v3 = v162;
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v161 + 8))(v155, v164);
        uint64_t v80 = sub_100007A48(v163, &qword_100709E38);
        goto LABEL_34;
      }

      sub_1001761D4(v67, type metadata accessor for MailboxTaskLogger);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v64, v63);
      uint64_t v80 = sub_100007A48(v50, &qword_100709E38);
      uint64_t v79 = v65;
      goto LABEL_33;
    }
    uint64_t v114 = v153;
    uint64_t v115 = a2;
    v62(v153, a2, v164);
    uint64_t v116 = a2;
    uint64_t v117 = v152;
    sub_10017616C(v116, v152, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_100026334(v50, v149);
    sub_100026334(v50, v150);
    uint64_t v118 = v148;
    sub_100026334(v50, v148);
    uint64_t v119 = sub_1005E0EB0();
    LODWORD(v158) = sub_1005E2590();
    if (os_log_type_enabled(v119, (os_log_type_t)v158))
    {
      uint64_t v157 = v119;
      uint64_t v159 = v115;
      uint64_t v120 = swift_slowAlloc();
      uint64_t v156 = swift_slowAlloc();
      v168[0] = v156;
      *(_DWORD *)uint64_t v120 = 68160003;
      LODWORD(v166) = 2;
      sub_1005E2960();
      *(_WORD *)(v120 + 8) = 256;
      uint64_t v121 = v117 + SHIDWORD(v160[2].isa);
      LOBYTE(v166) = *(unsigned char *)v121;
      sub_1005E2960();
      *(_WORD *)(v120 + 11) = 2082;
      uint64_t v122 = v117;
      uint64_t v123 = *(void *)(v121 + 8);
      unint64_t v124 = *(void *)(v121 + 16);
      swift_bridgeObjectRetain();
      uint64_t v166 = sub_1000C6914(v123, v124, v168);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v120 + 21) = 1040;
      LODWORD(v166) = 2;
      sub_1005E2960();
      *(_WORD *)(v120 + 27) = 512;
      LOWORD(v166) = *(_WORD *)(v121 + 24);
      sub_1005E2960();
      *(_WORD *)(v120 + 31) = 2160;
      uint64_t v166 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v120 + 41) = 2085;
      int v125 = *(_DWORD *)(v121 + 40);
      uint64_t v166 = *(void *)(v121 + 32);
      int v167 = v125;
      swift_bridgeObjectRetain();
      uint64_t v126 = sub_1005E1CC0();
      uint64_t v166 = sub_1000C6914(v126, v127, v168);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001761D4(v122, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v120 + 51) = 2048;
      uint64_t v128 = v149;
      MessageIdentifierSet.count.getter();
      uint64_t v130 = v129;
      sub_100007A48(v128, &qword_100709E38);
      uint64_t v166 = v130;
      sub_1005E2960();
      *(_WORD *)(v120 + 61) = 1024;
      uint64_t v131 = v150;
      uint64_t result = sub_1000702CC();
      if ((result & 0x100000000) == 0)
      {
        int v132 = result;
        sub_100007A48(v131, &qword_100709E38);
        LODWORD(v166) = v132;
        sub_1005E2960();
        *(_WORD *)(v120 + 67) = 1024;
        uint64_t v133 = v151;
        uint64_t v134 = v148;
        MessageIdentifierSet.ranges.getter(v151);
        uint64_t v135 = sub_100070018();
        char v137 = v136;
        uint64_t result = sub_100007A48(v133, &qword_10070A9C0);
        uint64_t v138 = v161;
        uint64_t v139 = v164;
        uint64_t v140 = v153;
        unint64_t v141 = v157;
        if ((v137 & 1) == 0)
        {
          sub_100007A48(v134, &qword_100709E38);
          LODWORD(v166) = HIDWORD(v135);
          sub_1005E2960();
          _os_log_impl((void *)&_mh_execute_header, v141, (os_log_type_t)v158, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence returned %ld (min:  %u, max: %u) messages to download.", (uint8_t *)v120, 0x49u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v138 + 8))(v140, v139);
          uint64_t v80 = sub_100007A48(v163, &qword_100709E38);
          uint64_t v76 = v165;
          uint64_t v79 = v159;
          uint64_t v3 = v162;
          goto LABEL_34;
        }
LABEL_41:
        __break(1u);
        return result;
      }
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_100007A48(v118, &qword_100709E38);
    sub_100007A48(v150, &qword_100709E38);
    sub_100007A48(v149, &qword_100709E38);

    sub_1001761D4(v117, type metadata accessor for MailboxTaskLogger);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v114, v63);
    uint64_t v80 = sub_100007A48(v50, &qword_100709E38);
    uint64_t v79 = v115;
  }
LABEL_33:
  uint64_t v76 = v165;
LABEL_34:
  uint64_t v142 = *(void **)(v3 + 32);
  unsigned int v143 = *(_DWORD *)(v3 + 40);
  uint64_t result = __chkstk_darwin(v80);
  *(&v148 - 2) = v3;
  *(&v148 - 1) = v79;
  if (*(unsigned char *)(v76 + 184) == 1)
  {
    uint64_t v145 = *(void *)(v76 + 168);
    uint64_t v144 = *(void *)(v76 + 176);
    uint64_t v166 = *(void *)(v76 + 160);
    uint64_t v146 = v166;
    swift_bridgeObjectRetain();
    sub_10004A48C((uint64_t)&v166, v142, v143, 0, (void (*)(char *))sub_100175C6C, &v148 - 4);
    uint64_t result = sub_10000F0D4(v146, v145, v144, 1);
    uint64_t v147 = v166;
    *(void *)(v76 + 168) = 0;
    *(void *)(v76 + 176) = 0;
    *(void *)(v76 + 160) = v147;
    *(unsigned char *)(v76 + 184) = 1;
  }
  return result;
}

uint64_t sub_100173A3C(uint64_t a1, uint64_t a2, NSObject *a3)
{
  os_log_t v143 = a3;
  uint64_t v133 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v5 = __chkstk_darwin(v133);
  uint64_t v138 = (uint64_t)&v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v137 = (uint64_t)&v122 - v7;
  uint64_t v8 = sub_1005E0ED0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v139 = (char *)&v122 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  os_log_t v140 = (os_log_t)((char *)&v122 - v12);
  uint64_t v13 = sub_10000566C(&qword_10070A9C0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v122 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000566C(&qword_100709E38);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v122 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v135 = (uint64_t)&v122 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v136 = (uint64_t)&v122 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v134 = (uint64_t)&v122 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v122 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v122 - v29;
  uint64_t v31 = type metadata accessor for MessagesPendingDownload();
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t result = __chkstk_darwin(v33);
  uint64_t v38 = (char *)&v122 - v37;
  uint64_t v144 = *(void *)a2;
  if (v144)
  {
    uint64_t v132 = v36;
    uint64_t v142 = v8;
    uint64_t v124 = result;
    uint64_t v128 = v35;
    int v125 = v19;
    uint64_t v129 = a2;
    int v39 = *(unsigned __int8 *)(a2 + 57);
    uint64_t v40 = *(int *)(type metadata accessor for MailboxSyncState() + 52);
    uint64_t v126 = a1;
    uint64_t v41 = a1 + v40 + *(int *)(type metadata accessor for PendingPersistenceUpdates() + 28);
    uint64_t v42 = v41;
    if (v39 == 1) {
      uint64_t v42 = v41 + *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
    }
    uint64_t v127 = v41;
    uint64_t v141 = v9;
    uint64_t v43 = sub_10017616C(v42, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    __chkstk_darwin(v43);
    uint64_t v130 = v38;
    *(&v122 - 2) = (uint64_t)v38;
    uint64_t v44 = v144;
    swift_bridgeObjectRetain_n();
    uint64_t v45 = sub_10002B17C((uint64_t)sub_100175C74, (uint64_t)(&v122 - 4), v44);
    int64_t v46 = *(void *)(v45 + 16);
    int v47 = _swiftEmptyArrayStorage;
    uint64_t v131 = v45;
    if (v46)
    {
      uint64_t v48 = v45;
      uint64_t v123 = v30;
      uint64_t v145 = (uint64_t)_swiftEmptyArrayStorage;
      sub_10001A5B4(0, v46, 0);
      int v47 = (void *)v145;
      uint64_t v49 = (int *)(v48 + 32);
      unint64_t v50 = *(void *)(v145 + 16);
      do
      {
        int v52 = *v49;
        v49 += 6;
        int v51 = v52;
        uint64_t v145 = (uint64_t)v47;
        unint64_t v53 = v47[3];
        if (v50 >= v53 >> 1)
        {
          sub_10001A5B4(v53 > 1, v50 + 1, 1);
          int v47 = (void *)v145;
        }
        void v47[2] = v50 + 1;
        *((_DWORD *)v47 + v50++ + 8) = v51;
        --v46;
      }
      while (v46);
      uint64_t v30 = v123;
    }
    sub_10001FC6C();
    sub_1005E3680();
    uint64_t v54 = v47[2];
    if (v54)
    {
      uint64_t v55 = (int *)(v47 + 4);
      do
      {
        int v56 = *v55++;
        LODWORD(v147[0]) = v56;
        MessageIdentifierSet.insert(_:)();
        --v54;
      }
      while (v54);
    }
    swift_bridgeObjectRelease();
    sub_10006B1BC((uint64_t)v28, (uint64_t)v30);
    MessageIdentifierSet.ranges.getter((uint64_t)v15);
    sub_10000566C(&qword_10070A8F8);
    uint64_t v57 = sub_1005E35B0();
    uint64_t v58 = sub_1005E35E0();
    uint64_t v59 = sub_1005E35B0();
    uint64_t result = sub_1005E35E0();
    if (v57 < v59 || result < v57)
    {
      __break(1u);
    }
    else
    {
      uint64_t v60 = sub_1005E35B0();
      uint64_t result = sub_1005E35E0();
      if (v58 >= v60 && result >= v58)
      {
        BOOL v61 = __OFSUB__(v58, v57);
        uint64_t v62 = v58 - v57;
        if (!v61)
        {
          sub_100007A48((uint64_t)v15, &qword_10070A9C0);
          uint64_t v63 = v141;
          uint64_t v64 = *(void (**)(os_log_t, os_log_t, uint64_t))(v141 + 16);
          if ((unint64_t)(v62 - 21) >= 0xFFFFFFFFFFFFFFECLL)
          {
            os_log_t v87 = v140;
            uint64_t v89 = v142;
            os_log_t v88 = v143;
            v64(v140, v143, v142);
            uint64_t v90 = v137;
            sub_10017616C((uint64_t)v88, v137, type metadata accessor for MailboxTaskLogger);
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            uint64_t v91 = v134;
            sub_100026334((uint64_t)v30, v134);
            uint64_t v92 = v136;
            sub_100026334((uint64_t)v30, v136);
            swift_bridgeObjectRetain();
            uint64_t v93 = sub_1005E0EB0();
            os_log_type_t v94 = sub_1005E25C0();
            os_log_t v143 = v93;
            LODWORD(v139) = v94;
            if (os_log_type_enabled(v93, v94))
            {
              uint64_t v95 = v90;
              uint64_t v96 = swift_slowAlloc();
              uint64_t v138 = swift_slowAlloc();
              v147[0] = v138;
              *(_DWORD *)uint64_t v96 = 68160003;
              LODWORD(v145) = 2;
              sub_1005E2960();
              *(_WORD *)(v96 + 8) = 256;
              uint64_t v97 = v95 + *(int *)(v133 + 20);
              LOBYTE(v145) = *(unsigned char *)v97;
              sub_1005E2960();
              *(_WORD *)(v96 + 11) = 2082;
              uint64_t v98 = *(void *)(v97 + 8);
              unint64_t v99 = *(void *)(v97 + 16);
              swift_bridgeObjectRetain();
              uint64_t v145 = sub_1000C6914(v98, v99, v147);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              *(_WORD *)(v96 + 21) = 1040;
              LODWORD(v145) = 2;
              sub_1005E2960();
              *(_WORD *)(v96 + 27) = 512;
              LOWORD(v145) = *(_WORD *)(v97 + 24);
              sub_1005E2960();
              *(_WORD *)(v96 + 31) = 2160;
              uint64_t v145 = 0x786F626C69616DLL;
              sub_1005E2960();
              *(_WORD *)(v96 + 41) = 2085;
              int v100 = *(_DWORD *)(v97 + 40);
              uint64_t v145 = *(void *)(v97 + 32);
              int v146 = v100;
              swift_bridgeObjectRetain();
              uint64_t v101 = sub_1005E1CC0();
              uint64_t v145 = sub_1000C6914(v101, v102, v147);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              sub_1001761D4(v137, type metadata accessor for MailboxTaskLogger);
              *(_WORD *)(v96 + 51) = 2082;
              uint64_t v103 = MessageIdentifierSet.debugDescription.getter(v16);
              uint64_t v145 = sub_1000C6914(v103, v104, v147);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              sub_100007A48(v91, &qword_100709E38);
              *(_WORD *)(v96 + 61) = 2048;
              uint64_t v105 = v136;
              MessageIdentifierSet.count.getter();
              uint64_t v107 = v106;
              sub_100007A48(v105, &qword_100709E38);
              uint64_t v145 = v107;
              sub_1005E2960();
              *(_WORD *)(v96 + 71) = 2048;
              uint64_t v108 = *(void *)(v144 + 16);
              swift_bridgeObjectRelease();
              uint64_t v145 = v108;
              sub_1005E2960();
              swift_bridgeObjectRelease();
              os_log_t v109 = v143;
              _os_log_impl((void *)&_mh_execute_header, v143, (os_log_type_t)v139, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Adding %{public}s (%ld out of %ld) to download.", (uint8_t *)v96, 0x51u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(os_log_t, uint64_t))(v141 + 8))(v140, v142);
            }
            else
            {
              swift_bridgeObjectRelease();
              sub_100007A48(v92, &qword_100709E38);
              sub_1001761D4(v90, type metadata accessor for MailboxTaskLogger);
              sub_100007A48(v91, &qword_100709E38);

              swift_bridgeObjectRelease();
              (*(void (**)(os_log_t, uint64_t))(v63 + 8))(v87, v89);
            }
          }
          else
          {
            uint64_t v65 = v139;
            uint64_t v67 = v142;
            os_log_t v66 = v143;
            v64((os_log_t)v139, v143, v142);
            uint64_t v68 = v138;
            sub_10017616C((uint64_t)v66, v138, type metadata accessor for MailboxTaskLogger);
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            uint64_t v69 = v135;
            sub_100026334((uint64_t)v30, v135);
            uint64_t v70 = v144;
            swift_bridgeObjectRetain();
            uint64_t v71 = sub_1005E0EB0();
            os_log_type_t v72 = sub_1005E25C0();
            int v73 = v72;
            if (os_log_type_enabled(v71, v72))
            {
              uint64_t v74 = swift_slowAlloc();
              os_log_t v140 = v71;
              uint64_t v75 = v74;
              os_log_t v143 = (os_log_t)swift_slowAlloc();
              v147[0] = (uint64_t)v143;
              *(_DWORD *)uint64_t v75 = 68159747;
              LODWORD(v145) = 2;
              sub_1005E2960();
              *(_WORD *)(v75 + 8) = 256;
              uint64_t v76 = v68 + *(int *)(v133 + 20);
              LOBYTE(v145) = *(unsigned char *)v76;
              sub_1005E2960();
              *(_WORD *)(v75 + 11) = 2082;
              LODWORD(v137) = v73;
              uint64_t v78 = *(void *)(v76 + 8);
              unint64_t v77 = *(void *)(v76 + 16);
              swift_bridgeObjectRetain();
              uint64_t v145 = sub_1000C6914(v78, v77, v147);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              *(_WORD *)(v75 + 21) = 1040;
              LODWORD(v145) = 2;
              sub_1005E2960();
              *(_WORD *)(v75 + 27) = 512;
              LOWORD(v145) = *(_WORD *)(v76 + 24);
              sub_1005E2960();
              *(_WORD *)(v75 + 31) = 2160;
              uint64_t v145 = 0x786F626C69616DLL;
              sub_1005E2960();
              *(_WORD *)(v75 + 41) = 2085;
              int v79 = *(_DWORD *)(v76 + 40);
              uint64_t v145 = *(void *)(v76 + 32);
              int v146 = v79;
              swift_bridgeObjectRetain();
              uint64_t v80 = sub_1005E1CC0();
              uint64_t v145 = sub_1000C6914(v80, v81, v147);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              sub_1001761D4(v138, type metadata accessor for MailboxTaskLogger);
              *(_WORD *)(v75 + 51) = 2048;
              uint64_t v82 = v135;
              MessageIdentifierSet.count.getter();
              uint64_t v84 = v83;
              sub_100007A48(v82, &qword_100709E38);
              uint64_t v145 = v84;
              sub_1005E2960();
              *(_WORD *)(v75 + 61) = 2048;
              uint64_t v85 = *(void *)(v70 + 16);
              swift_bridgeObjectRelease();
              uint64_t v145 = v85;
              sub_1005E2960();
              swift_bridgeObjectRelease();
              os_log_t v86 = v140;
              _os_log_impl((void *)&_mh_execute_header, v140, (os_log_type_t)v137, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Adding %ld messages (out of %ld) to download.", (uint8_t *)v75, 0x47u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(char *, uint64_t))(v141 + 8))(v139, v142);
            }
            else
            {
              swift_bridgeObjectRelease();
              sub_100007A48(v69, &qword_100709E38);
              sub_1001761D4(v68, type metadata accessor for MailboxTaskLogger);

              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v67);
            }
          }
          uint64_t v110 = (uint64_t)v130;
          uint64_t v111 = v128;
          uint64_t v112 = v127;
          int v113 = *(unsigned __int8 *)(v129 + 57);
          if (v113 == 1)
          {
            uint64_t v114 = type metadata accessor for MessagesPendingDownloadPerPass();
            uint64_t v115 = v132;
            sub_10017616C(v112 + *(int *)(v114 + 20), v132, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
            sub_10006A5F8(v131);
            swift_bridgeObjectRelease();
            sub_100125C5C(v115, v112 + *(int *)(v114 + 20));
            uint64_t v116 = v112 + *(int *)(v114 + 20);
          }
          else
          {
            uint64_t v117 = v132;
            sub_10017616C(v127, v132, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
            sub_10006A5F8(v131);
            swift_bridgeObjectRelease();
            sub_100125C5C(v117, v112);
            uint64_t v116 = v112;
          }
          sub_10017616C(v116, v111, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
          if (*(void *)(*(void *)v111 + 16))
          {
            if (v113) {
              goto LABEL_30;
            }
          }
          else
          {
            unint64_t v120 = sub_1000D41B8((uint64_t)_swiftEmptyArrayStorage);
            swift_bridgeObjectRelease();
            *(void *)uint64_t v111 = v120;
            uint64_t v121 = (uint64_t)v125;
            sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
            sub_100175C94(v121, v111 + *(int *)(v124 + 20));
            if (v113)
            {
LABEL_30:
              uint64_t v118 = type metadata accessor for MessagesPendingDownloadPerPass();
              sub_100125C5C(v111, v112 + *(int *)(v118 + 20));
              char v119 = sub_1005E3290();
              swift_bridgeObjectRelease();
              if ((v119 & 1) == 0) {
                goto LABEL_35;
              }
              goto LABEL_34;
            }
          }
          sub_100125C5C(v111, v112);
          swift_bridgeObjectRelease();
LABEL_34:
          sub_1000935B0(0xAu);
          sub_100019080(&v145, 10);
LABEL_35:
          sub_100007A48((uint64_t)v30, &qword_100709E38);
          return sub_1001761D4(v110, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
        }
LABEL_39:
        __break(1u);
        return result;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
  return result;
}

uint64_t sub_100174A0C(int *a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MessagesPendingDownload();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *a1;
  int v17 = *a1;
  LOBYTE(a1) = MessageIdentifierSet.contains(_:)();
  sub_10017616C(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  if (a1)
  {
    sub_1001761D4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    char v11 = 0;
  }
  else
  {
    uint64_t v12 = swift_bridgeObjectRetain();
    sub_100171300(v12);
    int v16 = v10;
    char v13 = MessageIdentifierSet.contains(_:)();
    sub_100007A48((uint64_t)v6, &qword_100709E38);
    sub_1001761D4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    char v11 = v13 ^ 1;
  }
  return v11 & 1;
}

uint64_t sub_100174BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10003C94C(v2 + *(int *)(a1 + 44), a2);
}

uint64_t sub_100174BBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  __int16 v3 = *(_WORD *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  int v5 = *(_DWORD *)(v1 + 40);
  *(void *)a1 = *(void *)(v1 + 8);
  *(void *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_100174C10()
{
  if (qword_100709DA0 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t Envelope.sender.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100174C74()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t sub_100174C7C()
{
  BYTE8(v2) = 0;
  *(void *)&long long v2 = *(unsigned __int8 *)(v0 + 57);
  sub_1005E2E90();
  return *(void *)((char *)&v2 + 1);
}

unint64_t sub_100174CD4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, unint64_t *a3@<X8>)
{
  unint64_t result = sub_100175CFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100174D0C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100175FE0(a1, a2, a3, a5);
}

unint64_t sub_100174D1C()
{
  return 0xD000000000000016;
}

Swift::Int sub_100174D4C()
{
  uint64_t v1 = *(unsigned int *)(v0 + 8);
  sub_1005E33F0();
  sub_1005E3410(v1 | (v1 << 32));
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  return sub_1005E3470();
}

uint64_t sub_100174DCC()
{
  sub_1005E3410(*(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned int *)(v0 + 8) << 32));
  sub_1005E1DB0();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_100174E40()
{
  uint64_t v1 = *(unsigned int *)(v0 + 8);
  sub_1005E33F0();
  sub_1005E3410(v1 | (v1 << 32));
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  return sub_1005E3470();
}

uint64_t sub_100174EBC(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 12)) {
    long long v2 = &_mh_execute_header;
  }
  else {
    long long v2 = 0;
  }
  if (*(unsigned char *)(a2 + 12)) {
    __int16 v3 = &_mh_execute_header;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_100174EF8(*(void *)a1, (unint64_t)v2 | *(unsigned int *)(a1 + 8), *(void *)a2, (unint64_t)v3 | *(unsigned int *)(a2 + 8));
}

uint64_t sub_100174EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a4 || !sub_1000255D4(a1, a3))
  {
    char v8 = 0;
  }
  else
  {
    if ((a2 & (unint64_t)&_mh_execute_header) != 0) {
      uint64_t v6 = 6581810;
    }
    else {
      uint64_t v6 = 7631665;
    }
    if ((a4 & (unint64_t)&_mh_execute_header) != 0) {
      uint64_t v7 = 6581810;
    }
    else {
      uint64_t v7 = 7631665;
    }
    if (v6 == v7) {
      char v8 = 1;
    }
    else {
      char v8 = sub_1005E3290();
    }
    swift_bridgeObjectRelease_n();
  }
  return v8 & 1;
}

uint64_t type metadata accessor for FindPendingDownload()
{
  uint64_t result = qword_10070E1B0;
  if (!qword_10070E1B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_100174FD8()
{
  unint64_t result = qword_10070E150;
  if (!qword_10070E150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E150);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MessagesToRemoveHelper(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MailboxPath(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  return a1;
}

uint64_t assignWithTake for MailboxPath(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagesToRemoveHelper(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 13)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxPath(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 13) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 13) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FindPendingDownload.TaskIDValue()
{
  return &type metadata for FindPendingDownload.TaskIDValue;
}

uint64_t sub_1001751AC(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v8;
    *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
    *(void *)(a1 + 32) = a2[4];
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    uint64_t v9 = a2[6];
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    *(unsigned char *)(a1 + 57) = *((unsigned char *)a2 + 57);
    uint64_t v10 = a3[9];
    uint64_t v11 = a1 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    *(void *)(a1 + 48) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_10000566C(&qword_100709E60);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = a3[10];
    uint64_t v15 = a3[11];
    uint64_t v16 = a1 + v14;
    uint64_t v17 = (uint64_t)a2 + v14;
    *(void *)uint64_t v16 = *(void *)v17;
    *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
    uint64_t v18 = a1 + v15;
    uint64_t v19 = (uint64_t)a2 + v15;
    *(void *)uint64_t v18 = *(void *)v19;
    long long v20 = *(_OWORD *)(v19 + 32);
    *(_OWORD *)(v18 + 32) = v20;
    (**(void (***)(uint64_t, uint64_t))(v20 - 8))(v18 + 8, v19 + 8);
  }
  return a1;
}

uint64_t sub_10017535C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v4 + *(int *)(a2 + 44);
  return _s13IMAP2Behavior4TaskOwxx_0(v7);
}

uint64_t sub_100175408(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  uint64_t v8 = a3[9];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = a3[11];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  uint64_t v16 = a1 + v13;
  uint64_t v17 = a2 + v13;
  *(void *)uint64_t v16 = *(void *)v17;
  long long v18 = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 32) = v18;
  (**(void (***)(uint64_t, uint64_t))(v18 - 8))(v16 + 8, v17 + 8);
  return a1;
}

uint64_t sub_100175570(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  uint64_t v6 = a3[9];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[10];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = *v12;
  *(unsigned char *)(v11 + 8) = *((unsigned char *)v12 + 8);
  *(void *)uint64_t v11 = v13;
  uint64_t v14 = a3[11];
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  sub_100022498((uint64_t *)(a1 + v14 + 8), (uint64_t *)(a2 + v14 + 8));
  return a1;
}

uint64_t sub_1001756B4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 24) = v6;
  uint64_t v10 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[10];
  uint64_t v12 = a3[11];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  uint64_t v15 = (_OWORD *)(a1 + v12);
  uint64_t v16 = (_OWORD *)(a2 + v12);
  long long v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  v15[2] = v16[2];
  return a1;
}

uint64_t sub_1001757A8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  uint64_t v6 = a3[9];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[10];
  uint64_t v11 = a3[11];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  uint64_t v14 = a1 + v11;
  uint64_t v15 = a2 + v11;
  *(void *)(a1 + v11) = *(void *)v15;
  _s13IMAP2Behavior4TaskOwxx_0(a1 + v11 + 8);
  *(_OWORD *)(v14 + 8) = *(_OWORD *)(v15 + 8);
  *(_OWORD *)(v14 + 24) = *(_OWORD *)(v15 + 24);
  *(void *)(v14 + 40) = *(void *)(v15 + 40);
  return a1;
}

uint64_t sub_1001758E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001758F8);
}

uint64_t sub_1001758F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000566C(&qword_100709E38);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1001759AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001759C0);
}

uint64_t sub_1001759C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E38);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100175A6C()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_100175B40()
{
  unint64_t result = qword_10070E200;
  if (!qword_10070E200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E200);
  }
  return result;
}

unint64_t sub_100175B94(uint64_t a1)
{
  unint64_t result = sub_100175BBC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100175BBC()
{
  unint64_t result = qword_10070E2B8;
  if (!qword_10070E2B8)
  {
    type metadata accessor for FindPendingDownload();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E2B8);
  }
  return result;
}

unint64_t sub_100175C18()
{
  unint64_t result = qword_10070E2C0;
  if (!qword_10070E2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E2C0);
  }
  return result;
}

uint64_t sub_100175C6C(uint64_t a1)
{
  return sub_100173A3C(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_100175C74(int *a1)
{
  return sub_100174A0C(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_100175C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_100175CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = sub_1001054D8(a2);
  uint64_t v12 = v11[2];
  uint64_t v36 = v2;
  if (!v12)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v22 = (int *)sub_10000566C(&qword_10070E2C8);
    uint64_t v23 = swift_allocBox();
    uint64_t v25 = v24;
    uint64_t v26 = v24 + v22[16];
    uint64_t v27 = v24 + v22[20];
    uint64_t v28 = v22[24];
    uint64_t v29 = v36;
    uint64_t v30 = *(void *)(v36 + 16);
    *(void *)uint64_t v24 = *(void *)(v36 + 8);
    *(void *)(v24 + 8) = v30;
    *(unsigned char *)(v24 + 16) = *(unsigned char *)(v29 + 57);
    uint64_t PendingDownload = type metadata accessor for FindPendingDownload();
    sub_100026334(v29 + *(int *)(PendingDownload + 36), v26);
    uint64_t v32 = (uint64_t *)(v29 + *(int *)(PendingDownload + 40));
    uint64_t v33 = *v32;
    LOBYTE(v32) = *((unsigned char *)v32 + 8);
    *(void *)uint64_t v27 = v33;
    *(unsigned char *)(v27 + 8) = (_BYTE)v32;
    *(void *)(v25 + v28) = 563;
    uint64_t v21 = v23 | 0x4000000000000002;
    swift_bridgeObjectRetain();
    return v21;
  }
  uint64_t v13 = 0;
  uint64_t v35 = v11;
  uint64_t v38 = v11 + 4;
  uint64_t v39 = a1;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v37 = v12;
  while (!v14)
  {
LABEL_4:
    if (++v13 == v12) {
      goto LABEL_12;
    }
  }
  int v15 = *((_DWORD *)v38 + v13);
  uint64_t v16 = v40;
  uint64_t v17 = a1 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
  swift_bridgeObjectRetain_n();
  uint64_t v18 = *(void *)(v16 + 72);
  uint64_t v19 = v14;
  while (1)
  {
    sub_10017616C(v17, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    sub_10017616C((uint64_t)v10, (uint64_t)v8, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_1001761D4((uint64_t)v8, type metadata accessor for TaskHistory.Previous);
LABEL_8:
    sub_1001761D4((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    v17 += v18;
    if (!--v19)
    {
      a1 = v39;
      swift_bridgeObjectRelease_n();
      uint64_t v12 = v37;
      goto LABEL_4;
    }
  }
  int v20 = *((_DWORD *)v8 + 2);
  sub_10007C4A4(*(void *)v8);
  if (v20 != v15) {
    goto LABEL_8;
  }
  sub_1001761D4((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return 0xF000000000000007;
}

uint64_t sub_100175FE0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1001054D8(a4);
  uint64_t v9 = v8[2];
  if (!v9)
  {
LABEL_5:
    return swift_bridgeObjectRelease();
  }
  uint64_t v10 = 0;
  while ((sub_1001652E0(*((_DWORD *)v8 + v10 + 8), a2, a3) & 1) == 0)
  {
    if (v9 == ++v10) {
      goto LABEL_5;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)v4) {
    BOOL v12 = 0;
  }
  else {
    BOOL v12 = ((a1 >> 59) & 0x1E | (a1 >> 2) & 1) == 11;
  }
  if (v12)
  {
    uint64_t v13 = a1 & 0xFFFFFFFFFFFFFFBLL;
    if (*(void *)(v4 + 16) == *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18))
    {
      int v14 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      uint64_t result = sub_1000255D4(*(void *)(v4 + 8), *(void *)(v13 + 16));
      if (result)
      {
        if (*(unsigned char *)(v4 + 57)) {
          uint64_t v16 = 6581810;
        }
        else {
          uint64_t v16 = 7631665;
        }
        if (v14) {
          uint64_t v17 = 6581810;
        }
        else {
          uint64_t v17 = 7631665;
        }
        if (v16 == v17)
        {
          swift_bridgeObjectRetain();
          uint64_t result = swift_bridgeObjectRelease_n();
LABEL_24:
          *(void *)uint64_t v4 = v15;
          return result;
        }
        char v18 = sub_1005E3290();
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRelease_n();
        if (v18) {
          goto LABEL_24;
        }
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_10017616C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001761D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FindPendingDownload.ActionID(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001762D0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FindPendingDownload.ActionID()
{
  return &type metadata for FindPendingDownload.ActionID;
}

double sub_100176308@<D0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v17 = &_swiftEmptySetSingleton;
  char v18 = 0;
  unint64_t v19 = sub_1000C0450((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v8 = sub_1000CE8AC(a3, a2);
  swift_bridgeObjectRelease();
  if (v8[2])
  {
    uint64_t v9 = *((void *)a1 + 3);
    int v10 = *((_DWORD *)a1 + 8);
    long long v11 = a1[1];
    v13[0] = *a1;
    v13[1] = v11;
    int v14 = v10;
    uint64_t v15 = v8;
    uint64_t v16 = &type metadata for GetUIDsForDownloadRequests;
    *(void *)&long long v22 = v9;
    DWORD2(v22) = v10;
    sub_10003BC88();
    swift_bridgeObjectRetain();
    sub_1005E2BF0();
    sub_10003B1D4((uint64_t)v13, a4);
    sub_10003B230((uint64_t)v13);
  }
  else
  {
    swift_release();
    long long v22 = *a1;
    sub_10001D550((uint64_t)&v22);
    uint64_t v20 = *((void *)a1 + 3);
    int v21 = *((_DWORD *)a1 + 8);
    sub_10001D550((uint64_t)&v20);
    swift_bridgeObjectRelease();
    *(void *)(a4 + 112) = 0;
    double result = 0.0;
    *(_OWORD *)(a4 + 80) = 0u;
    *(_OWORD *)(a4 + 96) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)a4 = 0u;
  }
  return result;
}

uint64_t sub_100176450@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (v4)
  {
    uint64_t v7 = (v4 - 1) & v4;
    unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
    uint64_t v9 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
    uint64_t v10 = *v9;
    unint64_t v11 = v9[1];
    uint64_t v12 = *(void *)(v3 + 56) + 24 * v8;
    LODWORD(v9) = *(_DWORD *)v12;
    uint64_t v13 = *(void *)(v12 + 8);
    char v14 = *(unsigned char *)(v12 + 16);
    LOBYTE(v12) = *(unsigned char *)(v12 + 17);
    v1[3] = v6;
    v1[4] = v7;
    uint64_t v15 = (void (*)(void *))v1[5];
    v23[0] = v10;
    v23[1] = v11;
    int v24 = (int)v9;
    uint64_t v25 = v13;
    char v26 = v14;
    char v27 = v12;
    sub_100008D24(v10, v11);
    v15(v23);
    return sub_1000094D4(v10, v11);
  }
  int64_t v17 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    int64_t v18 = (unint64_t)(v1[2] + 64) >> 6;
    if (v17 < v18)
    {
      uint64_t v19 = v1[1];
      unint64_t v20 = *(void *)(v19 + 8 * v17);
      if (v20)
      {
LABEL_7:
        uint64_t v7 = (v20 - 1) & v20;
        unint64_t v8 = __clz(__rbit64(v20)) + (v17 << 6);
        int64_t v6 = v17;
        goto LABEL_3;
      }
      int64_t v21 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v18)
      {
        unint64_t v20 = *(void *)(v19 + 8 * v21);
        if (v20)
        {
LABEL_10:
          int64_t v17 = v21;
          goto LABEL_7;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v18)
        {
          unint64_t v20 = *(void *)(v19 + 8 * (v5 + 3));
          if (v20)
          {
            int64_t v17 = v5 + 3;
            goto LABEL_7;
          }
          int64_t v21 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v18)
          {
            unint64_t v20 = *(void *)(v19 + 8 * v21);
            if (v20) {
              goto LABEL_10;
            }
            int64_t v17 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v18)
            {
              unint64_t v20 = *(void *)(v19 + 8 * v17);
              if (v20) {
                goto LABEL_7;
              }
              int64_t v6 = v18 - 1;
              int64_t v22 = v5 + 6;
              while (v18 != v22)
              {
                unint64_t v20 = *(void *)(v19 + 8 * v22++);
                if (v20)
                {
                  int64_t v17 = v22 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_WORD *)(a1 + 32) = 512;
  }
  return result;
}

uint64_t sub_100176608@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (v4)
  {
    uint64_t v7 = (v4 - 1) & v4;
    unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
    int v9 = *(_DWORD *)(*(void *)(v3 + 48) + 4 * v8);
    uint64_t v10 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v8);
    uint64_t v11 = *v10;
    unint64_t v12 = v10[1];
    v1[3] = v6;
    v1[4] = v7;
    uint64_t v13 = (void (*)(int *))v1[5];
    int v21 = v9;
    uint64_t v22 = v11;
    unint64_t v23 = v12;
    sub_100008D24(v11, v12);
    v13(&v21);
    return sub_1000094D4(v11, v12);
  }
  int64_t v15 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    int64_t v16 = (unint64_t)(v1[2] + 64) >> 6;
    if (v15 < v16)
    {
      uint64_t v17 = v1[1];
      unint64_t v18 = *(void *)(v17 + 8 * v15);
      if (v18)
      {
LABEL_7:
        uint64_t v7 = (v18 - 1) & v18;
        unint64_t v8 = __clz(__rbit64(v18)) + (v15 << 6);
        int64_t v6 = v15;
        goto LABEL_3;
      }
      int64_t v19 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v16)
      {
        unint64_t v18 = *(void *)(v17 + 8 * v19);
        if (v18)
        {
LABEL_10:
          int64_t v15 = v19;
          goto LABEL_7;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v16)
        {
          unint64_t v18 = *(void *)(v17 + 8 * (v5 + 3));
          if (v18)
          {
            int64_t v15 = v5 + 3;
            goto LABEL_7;
          }
          int64_t v19 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v16)
          {
            unint64_t v18 = *(void *)(v17 + 8 * v19);
            if (v18) {
              goto LABEL_10;
            }
            int64_t v15 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v16)
            {
              unint64_t v18 = *(void *)(v17 + 8 * v15);
              if (v18) {
                goto LABEL_7;
              }
              int64_t v6 = v16 - 1;
              int64_t v20 = v5 + 6;
              while (v16 != v20)
              {
                unint64_t v18 = *(void *)(v17 + 8 * v20++);
                if (v18)
                {
                  int64_t v15 = v20 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0xF000000000000000;
  }
  return result;
}

void sub_10017679C(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (!v4)
  {
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return;
    }
    int64_t v16 = (unint64_t)(v1[2] + 64) >> 6;
    if (v15 < v16)
    {
      uint64_t v17 = v1[1];
      unint64_t v18 = *(void *)(v17 + 8 * v15);
      if (v18)
      {
LABEL_9:
        uint64_t v7 = (v18 - 1) & v18;
        unint64_t v8 = __clz(__rbit64(v18)) + (v15 << 6);
        int64_t v6 = v15;
        goto LABEL_3;
      }
      int64_t v19 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v16)
      {
        unint64_t v18 = *(void *)(v17 + 8 * v19);
        if (v18)
        {
LABEL_12:
          int64_t v15 = v19;
          goto LABEL_9;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v16)
        {
          unint64_t v18 = *(void *)(v17 + 8 * (v5 + 3));
          if (v18)
          {
            int64_t v15 = v5 + 3;
            goto LABEL_9;
          }
          int64_t v19 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v16)
          {
            unint64_t v18 = *(void *)(v17 + 8 * v19);
            if (v18) {
              goto LABEL_12;
            }
            int64_t v15 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v16)
            {
              unint64_t v18 = *(void *)(v17 + 8 * v15);
              if (v18) {
                goto LABEL_9;
              }
              int64_t v6 = v16 - 1;
              int64_t v20 = v5 + 6;
              while (v16 != v20)
              {
                unint64_t v18 = *(void *)(v17 + 8 * v20++);
                if (v18)
                {
                  int64_t v15 = v20 - 1;
                  goto LABEL_9;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *(_OWORD *)a1 = xmmword_1005F6730;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    return;
  }
  uint64_t v7 = (v4 - 1) & v4;
  unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
  int v9 = *(_DWORD *)(*(void *)(v3 + 48) + 4 * v8);
  uint64_t v10 = *(void *)(v3 + 56) + 24 * v8;
  char v11 = *(unsigned char *)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  unint64_t v13 = *(void *)(v10 + 16);
  v1[3] = v6;
  v1[4] = v7;
  char v14 = (void (*)(int *))v1[5];
  int v21 = v9;
  char v22 = v11;
  uint64_t v23 = v12;
  unint64_t v24 = v13;
  sub_100008D24(v12, v13);
  v14(&v21);
  sub_1000094D4(v12, v13);
}

Swift::Int sub_100176960()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA6F0);
  qword_100761770 = result;
  return result;
}

uint64_t sub_100176988(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v4);
  int64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_100177CC0(a1, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_10003B1D4(v2, (uint64_t)v34);
  char v11 = sub_1005E0EB0();
  os_log_type_t v12 = sub_1005E25C0();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    int v29 = v13;
    uint64_t v15 = v14;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v33 = v28;
    *(_DWORD *)uint64_t v15 = 68159491;
    LODWORD(v31) = 2;
    os_log_t v27 = v11;
    sub_1005E2960();
    *(_WORD *)(v15 + 8) = 256;
    uint64_t v16 = *(int *)(v4 + 20);
    uint64_t v30 = v7;
    uint64_t v17 = &v6[v16];
    LOBYTE(v31) = v6[v16];
    sub_1005E2960();
    *(_WORD *)(v15 + 11) = 2082;
    uint64_t v19 = *((void *)v17 + 1);
    unint64_t v18 = *((void *)v17 + 2);
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1000C6914(v19, v18, &v33);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 21) = 1040;
    LODWORD(v31) = 2;
    sub_1005E2960();
    *(_WORD *)(v15 + 27) = 512;
    LOWORD(v31) = *((_WORD *)v17 + 12);
    sub_1005E2960();
    *(_WORD *)(v15 + 31) = 2160;
    uint64_t v31 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v15 + 41) = 2085;
    int v20 = *((_DWORD *)v17 + 10);
    uint64_t v31 = *((void *)v17 + 4);
    int v32 = v20;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1005E1CC0();
    uint64_t v31 = sub_1000C6914(v21, v22, &v33);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100177D28((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v15 + 51) = 2048;
    uint64_t v23 = *(void *)(v35 + 16);
    sub_10003B230((uint64_t)v34);
    uint64_t v31 = v23;
    sub_1005E2960();
    os_log_t v24 = v27;
    _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v29, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. %ld identifier(s).", (uint8_t *)v15, 0x3Du);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v30);
  }
  else
  {
    sub_10003B230((uint64_t)v34);
    sub_100177D28((uint64_t)v6, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_100176DE0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 40);
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  int64_t v6 = sub_1000CE8AC(v5, v4);
  swift_bridgeObjectRelease();
  if (v6[2])
  {
    uint64_t v7 = *(void **)(v2 + 24);
    unsigned int v8 = *(_DWORD *)(v2 + 32);
    sub_100047810((uint64_t)v6, (uint64_t)v7, v8);
    uint64_t v9 = swift_release();
  }
  else
  {
    uint64_t v9 = swift_release();
    uint64_t v7 = *(void **)(v2 + 24);
    unsigned int v8 = *(_DWORD *)(v2 + 32);
  }
  uint64_t result = __chkstk_darwin(v9);
  v15[2] = v2;
  if (*(unsigned char *)(a1 + 184) == 1)
  {
    uint64_t v12 = *(void *)(a1 + 168);
    uint64_t v11 = *(void *)(a1 + 176);
    uint64_t v16 = *(void *)(a1 + 160);
    uint64_t v13 = v16;
    swift_bridgeObjectRetain();
    sub_10004A48C((uint64_t)&v16, v7, v8, 0, (void (*)(char *))sub_100177548, v15);
    uint64_t result = sub_10000F0D4(v13, v12, v11, 1);
    uint64_t v14 = v16;
    *(void *)(a1 + 168) = 0;
    *(void *)(a1 + 176) = 0;
    *(void *)(a1 + 160) = v14;
    *(unsigned char *)(a1 + 184) = 1;
  }
  return result;
}

uint64_t sub_100176F28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 112);
  uint64_t v4 = *(int *)(type metadata accessor for MailboxSyncState() + 56);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *(void *)(a1 + v4);
  *(void *)(a1 + v4) = 0x8000000000000000;
  sub_100177550(v3, (uint64_t)sub_1001778E4, 0, isUniquelyReferenced_nonNull_native, &v7);
  *(void *)(a1 + v4) = v7;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100176FD0@<X0>(uint64_t a1@<X8>)
{
  return sub_10003C94C(v1 + 48, a1);
}

uint64_t sub_100176FDC()
{
  if (qword_100709DA8 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_100177038()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100177040()
{
  return *(unsigned __int8 *)(v0 + 104);
}

unint64_t sub_10017704C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, unint64_t *a3@<X8>)
{
  unint64_t result = sub_100177914(a1, a2);
  *a3 = result;
  return result;
}

unint64_t sub_100177084(unint64_t result)
{
  return sub_100177BB0(result);
}

unint64_t sub_100177090()
{
  return 0xD00000000000001ALL;
}

uint64_t destroy for GetUIDsForDownloadRequests(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 56);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GetUIDsForDownloadRequests(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = a2 + 56;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v7 = v6;
  unsigned int v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 56, v5, v7);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GetUIDsForDownloadRequests(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_100022498((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for GetUIDsForDownloadRequests(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for GetUIDsForDownloadRequests(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v4 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GetUIDsForDownloadRequests(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9MultipartVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GetUIDsForDownloadRequests()
{
  return &type metadata for GetUIDsForDownloadRequests;
}

unint64_t sub_100177478()
{
  unint64_t result = qword_10070E2D0;
  if (!qword_10070E2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E2D0);
  }
  return result;
}

unint64_t sub_1001774CC(uint64_t a1)
{
  unint64_t result = sub_1001774F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001774F4()
{
  unint64_t result = qword_10070E388;
  if (!qword_10070E388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E388);
  }
  return result;
}

uint64_t sub_100177548(uint64_t a1)
{
  return sub_100176F28(a1, *(void *)(v1 + 16));
}

uint64_t sub_100177550(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = ~v8;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = -v8;
  uint64_t v54 = a1;
  uint64_t v55 = a1 + 64;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  uint64_t v56 = v9;
  uint64_t v57 = 0;
  uint64_t v58 = v12 & v10;
  uint64_t v59 = a2;
  uint64_t v60 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100176450((uint64_t)&v49);
  __int16 v13 = v53;
  if ((v53 & 0xFF00) == 0x200)
  {
LABEL_16:
    swift_release();
    swift_bridgeObjectRelease();
    sub_10003BC80();
    return swift_release();
  }
  else
  {
    uint64_t v15 = v49;
    unint64_t v14 = v50;
    unsigned int v48 = v51;
    uint64_t v16 = v52;
    uint64_t v17 = (void *)*a5;
    unint64_t v19 = sub_10002445C(v49, v50);
    uint64_t v20 = v17[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      goto LABEL_27;
    }
    LOBYTE(v5) = v18;
    if (v17[3] >= v22)
    {
      if ((a4 & 1) == 0) {
        goto LABEL_29;
      }
      goto LABEL_10;
    }
    sub_10004EB40(v22, a4 & 1);
    unint64_t v23 = sub_10002445C(v15, v14);
    if ((v5 & 1) == (v24 & 1))
    {
      unint64_t v19 = v23;
LABEL_10:
      uint64_t v25 = v16;
      while (1)
      {
        char v26 = HIBYTE(v13) & 1;
        uint64_t v16 = (void *)*a5;
        if (v5)
        {
          sub_1000094D4(v15, v14);
          uint64_t v27 = v16[7] + 24 * v19;
          *(_DWORD *)uint64_t v27 = v48;
          *(void *)(v27 + 8) = v25;
          *(unsigned char *)(v27 + 16) = v13 & 1;
          *(unsigned char *)(v27 + 17) = v26;
        }
        else
        {
          v16[(v19 >> 6) + 8] |= 1 << v19;
          uint64_t v28 = (uint64_t *)(v16[6] + 16 * v19);
          uint64_t *v28 = v15;
          v28[1] = v14;
          uint64_t v29 = v16[7] + 24 * v19;
          *(_DWORD *)uint64_t v29 = v48;
          *(void *)(v29 + 8) = v25;
          *(unsigned char *)(v29 + 16) = v13 & 1;
          *(unsigned char *)(v29 + 17) = v26;
          uint64_t v30 = v16[2];
          BOOL v31 = __OFADD__(v30, 1);
          uint64_t v32 = v30 + 1;
          if (v31) {
            goto LABEL_28;
          }
          v16[2] = v32;
        }
        sub_100176450((uint64_t)&v49);
        __int16 v13 = v53;
        if ((v53 & 0xFF00) == 0x200) {
          goto LABEL_16;
        }
        BOOL v61 = a5;
        while (1)
        {
          uint64_t v15 = v49;
          unint64_t v14 = v50;
          unint64_t v19 = v51;
          uint64_t v16 = v52;
          uint64_t v35 = *a5;
          unint64_t v5 = sub_10002445C(v49, v50);
          uint64_t v37 = *(void *)(v35 + 16);
          BOOL v38 = (v36 & 1) == 0;
          uint64_t v39 = v37 + v38;
          if (__OFADD__(v37, v38)) {
            break;
          }
          char v40 = v36;
          if (*(void *)(v35 + 24) < v39)
          {
            sub_10004EB40(v39, 1);
            unint64_t v41 = sub_10002445C(v15, v14);
            if ((v40 & 1) != (v42 & 1)) {
              goto LABEL_30;
            }
            unint64_t v5 = v41;
          }
          char v43 = HIBYTE(v13) & 1;
          a5 = (void *)*a5;
          if (v40)
          {
            sub_1000094D4(v15, v14);
            uint64_t v34 = a5[7] + 24 * v5;
            *(_DWORD *)uint64_t v34 = v19;
            *(void *)(v34 + 8) = v16;
            *(unsigned char *)(v34 + 16) = v13 & 1;
            *(unsigned char *)(v34 + 17) = v43;
          }
          else
          {
            a5[(v5 >> 6) + 8] |= 1 << v5;
            uint64_t v44 = (uint64_t *)(a5[6] + 16 * v5);
            *uint64_t v44 = v15;
            v44[1] = v14;
            uint64_t v45 = a5[7] + 24 * v5;
            *(_DWORD *)uint64_t v45 = v19;
            *(void *)(v45 + 8) = v16;
            *(unsigned char *)(v45 + 16) = v13 & 1;
            *(unsigned char *)(v45 + 17) = v43;
            uint64_t v46 = a5[2];
            BOOL v31 = __OFADD__(v46, 1);
            uint64_t v47 = v46 + 1;
            if (v31) {
              goto LABEL_28;
            }
            a5[2] = v47;
          }
          sub_100176450((uint64_t)&v49);
          __int16 v13 = v53;
          a5 = v61;
          if ((v53 & 0xFF00) == 0x200) {
            goto LABEL_16;
          }
        }
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        uint64_t v25 = v16;
        sub_100096AA8();
      }
    }
LABEL_30:
    uint64_t result = sub_1005E3380();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001778E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  unint64_t v2 = *(void *)(a1 + 8);
  int v4 = *(_DWORD *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 33);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(_DWORD *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  *(unsigned char *)(a2 + 32) = v6;
  *(unsigned char *)(a2 + 33) = v7;
  return sub_100008D24(v3, v2);
}

unint64_t sub_100177914(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v29 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v25 - v9;
  uint64_t v11 = sub_100105934(a2);
  uint64_t v12 = v11[2];
  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v22 = swift_allocObject();
    int v23 = *(_DWORD *)(v2 + 32);
    *(void *)(v22 + 16) = *(void *)(v2 + 24);
    *(_DWORD *)(v22 + 24) = v23;
    *(void *)(v22 + 32) = *(void *)(v2 + 40);
    unint64_t v21 = v22 | 0xA000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v21;
  }
  v25[0] = v2;
  v25[1] = v11;
  uint64_t v13 = 0;
  uint64_t v27 = v11 + 4;
  uint64_t v28 = a1;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v26 = v12;
  while (!v14)
  {
LABEL_4:
    if (++v13 == v12)
    {
      swift_bridgeObjectRelease();
      uint64_t v2 = v25[0];
      goto LABEL_13;
    }
  }
  int v15 = *((_DWORD *)v27 + v13);
  uint64_t v16 = v29;
  uint64_t v17 = a1 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  swift_bridgeObjectRetain_n();
  uint64_t v18 = *(void *)(v16 + 72);
  uint64_t v19 = v14;
  while (1)
  {
    sub_100177CC0(v17, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    sub_100177CC0((uint64_t)v10, (uint64_t)v8, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_100177D28((uint64_t)v8, type metadata accessor for TaskHistory.Previous);
LABEL_8:
    sub_100177D28((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    v17 += v18;
    if (!--v19)
    {
      a1 = v28;
      swift_bridgeObjectRelease_n();
      uint64_t v12 = v26;
      goto LABEL_4;
    }
  }
  int v20 = *((_DWORD *)v8 + 2);
  sub_10007C4A4(*(void *)v8);
  if (v20 != v15) {
    goto LABEL_8;
  }
  sub_100177D28((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return 0xF000000000000007;
}

unint64_t sub_100177BB0(unint64_t result)
{
  if (((result >> 59) & 0x1E | (result >> 2) & 1) == 0x14
    && (*(unsigned int *)(v1 + 32) | ((unint64_t)*(unsigned int *)(v1 + 32) << 32)) == (*(unsigned int *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32)))
  {
    uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x20);
    uint64_t result = sub_1000255D4(*(void *)(v1 + 24), *(void *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x10));
    if (result)
    {
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v4 = *(void *)(v1 + 112);
      *(void *)(v1 + 112) = 0x8000000000000000;
      sub_100177550(v2, (uint64_t)sub_1001778E4, 0, isUniquelyReferenced_nonNull_native, &v4);
      *(void *)(v1 + 112) = v4;
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100177C80()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100177CC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100177D28(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for GetUIDsForDownloadRequests.ActionID(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100177E24);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GetUIDsForDownloadRequests.ActionID()
{
  return &type metadata for GetUIDsForDownloadRequests.ActionID;
}

uint64_t sub_100177E5C()
{
  qword_100761778 = (uint64_t)&type metadata for ListMailboxes;
  return sub_1005E2BF0();
}

uint64_t destroy for ListMailboxes(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 24);
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 88);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ListMailboxes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = a2 + 24;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(a1 + 24, v4, v6);
  uint64_t v8 = *(void *)(a2 + 88);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t v10 = *(void *)(a2 + 96);
    uint64_t v11 = *(void *)(a2 + 104);
    *(void *)(a1 + 88) = v8;
    *(void *)(a1 + 96) = v10;
    *(void *)(a1 + 104) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
  }
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  return a1;
}

uint64_t assignWithCopy for ListMailboxes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_100022498((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 88);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v7 = (_OWORD *)(a2 + 88);
  uint64_t v6 = *(void *)(a2 + 88);
  if (v5)
  {
    if (v6)
    {
      *(void *)(a1 + 88) = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10008245C(a1 + 88);
      uint64_t v8 = *(void *)(a2 + 104);
      *uint64_t v4 = *v7;
      *(void *)(a1 + 104) = v8;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 88) = v6;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v7;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *uint64_t v4 = v9;
  }
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  return a1;
}

__n128 initializeWithTake for ListMailboxes(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_WORD *)(a1 + 112) = *((_WORD *)a2 + 56);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for ListMailboxes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 88);
  uint64_t v5 = *(void *)(a1 + 88);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  if (!v5) {
    goto LABEL_5;
  }
  if (!v4)
  {
    sub_10008245C(a1 + 88);
LABEL_5:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    goto LABEL_6;
  }
  *(void *)(a1 + 88) = v4;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListMailboxes(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 114)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListMailboxes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 112) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 114) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 114) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListMailboxes()
{
  return &type metadata for ListMailboxes;
}

uint64_t sub_10017834C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Task.Logger(0);
  __chkstk_darwin(v4);
  uint64_t v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_100100BCC(a1, (uint64_t)v6, type metadata accessor for Task.Logger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_10009B300(v2, (uint64_t)v32);
  sub_10009B300(v2, (uint64_t)v31);
  uint64_t v11 = sub_1005E0EB0();
  os_log_type_t v12 = sub_1005E25C0();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    int v26 = v13;
    uint64_t v15 = v14;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v30 = v27;
    *(_DWORD *)uint64_t v15 = 68158722;
    LODWORD(v29) = 2;
    uint64_t v28 = v7;
    sub_1005E2960();
    *(_WORD *)(v15 + 8) = 256;
    uint64_t v16 = &v6[*(int *)(v4 + 20)];
    uint64_t v17 = v16[1];
    unint64_t v18 = v16[2];
    LOBYTE(v29) = *v16;
    sub_1005E2960();
    *(_WORD *)(v15 + 11) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1000C6914(v17, v18, &v30);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10017C75C((uint64_t)v6, type metadata accessor for Task.Logger);
    *(_WORD *)(v15 + 21) = 2080;
    if (v33) {
      uint64_t v19 = 0x616C696176616E75;
    }
    else {
      uint64_t v19 = 0x6574726F70707573;
    }
    if (v33) {
      unint64_t v20 = 0xEB00000000656C62;
    }
    else {
      unint64_t v20 = 0xE900000000000064;
    }
    uint64_t v29 = sub_1000C6914(v19, v20, &v30);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10009B35C((uint64_t)v32);
    *(_WORD *)(v15 + 31) = 2080;
    if (v31[113]) {
      __int16 v21 = 256;
    }
    else {
      __int16 v21 = 0;
    }
    uint64_t v22 = sub_10008349C(v21 | v31[112]);
    uint64_t v29 = sub_1000C6914(v22, v23, &v30);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10009B35C((uint64_t)v31);
    _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v26, "[%.*hhx-%{public}s] Created task (NAMESPACE: %s; LIST: %s).",
      (uint8_t *)v15,
      0x29u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v28);
  }
  else
  {
    sub_10017C75C((uint64_t)v6, type metadata accessor for Task.Logger);
    sub_10009B35C((uint64_t)v32);
    sub_10009B35C((uint64_t)v31);

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_100178768@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v57 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  int v13 = (char *)&v50 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v50 - v15;
  __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v50 - v17;
  char v19 = *(unsigned char *)(v3 + 80);
  uint64_t v58 = a1;
  if ((v19 & 1) != 0 || *(void *)(v3 + 88))
  {
LABEL_14:
    uint64_t v30 = sub_1001A9A88(0, a2);
    BOOL v31 = (void *)v30[2];
    if (v31)
    {
      uint64_t v52 = v3;
      __int16 v53 = v30;
      uint64_t v54 = a3;
      uint64_t v55 = v31;
      uint64_t v32 = 0;
      uint64_t v56 = v30 + 4;
      uint64_t v59 = *(void *)(a1 + 16);
      do
      {
        if (v59)
        {
          uint64_t v33 = v57;
          int v34 = *((_DWORD *)v56 + (void)v32);
          uint64_t v35 = a1 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
          swift_bridgeObjectRetain();
          uint64_t v36 = *(void *)(v33 + 72);
          uint64_t v37 = v59;
          while (1)
          {
            sub_100100BCC(v35, (uint64_t)v13, type metadata accessor for TaskHistory.Previous);
            sub_100100BCC((uint64_t)v13, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              sub_10017C75C((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
            }
            else
            {
              int v38 = *(_DWORD *)&v10[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
              sub_10017C75C((uint64_t)v10, type metadata accessor for ClientCommand);
              if (v38 == v34)
              {
                sub_10017C75C((uint64_t)v13, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v39 = sub_10000566C(&qword_10070E428);
                return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v54, 1, 1, v39);
              }
            }
            sub_10017C75C((uint64_t)v13, type metadata accessor for TaskHistory.Previous);
            v35 += v36;
            if (!--v37)
            {
              a1 = v58;
              swift_bridgeObjectRelease();
              BOOL v31 = v55;
              break;
            }
          }
        }
        uint64_t v32 = (void *)((char *)v32 + 1);
      }
      while (v32 != v31);
      swift_bridgeObjectRelease();
      a3 = v54;
      uint64_t v3 = v52;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (*(unsigned char *)(v3 + 113)) {
      __int16 v41 = 256;
    }
    else {
      __int16 v41 = 0;
    }
    char v42 = sub_100178D38(v41 | *(unsigned __int8 *)(v3 + 112));
    uint64_t v43 = sub_10000566C(&qword_10070E428);
    uint64_t v44 = &a3[*(int *)(v43 + 48)];
    *a3 = 0;
    uint64_t v45 = ByteBufferAllocator.buffer(string:)(42, 0xE100000000000000, (uint64_t)j__malloc, (uint64_t)j__realloc, (uint64_t)sub_10002336C);
    unint64_t v48 = MailboxName.init(_:)(v45, v47, v46 & 0xFFFFFFFFFFFFFFLL);
    *(void *)uint64_t v44 = 0;
    *((_DWORD *)v44 + 2) = 0;
    *((void *)v44 + 2) = v48;
    *((_DWORD *)v44 + 6) = v49;
    *((void *)v44 + 4) = v42;
    type metadata accessor for ClientCommand(0);
  }
  else
  {
    unint64_t v20 = sub_1001A9A88(1, a2);
    __int16 v21 = (void *)v20[2];
    if (v21)
    {
      uint64_t v22 = 0;
      __int16 v53 = v20 + 4;
      uint64_t v54 = a3;
      uint64_t v59 = *(void *)(a1 + 16);
      unsigned int v51 = v21;
      uint64_t v52 = v3;
      uint64_t v50 = a2;
      uint64_t v55 = v20;
      do
      {
        if (v59)
        {
          uint64_t v23 = a1;
          uint64_t v56 = v22;
          int v24 = *((_DWORD *)v53 + (void)v22);
          uint64_t v25 = v57;
          uint64_t v26 = v23 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
          swift_bridgeObjectRetain();
          uint64_t v27 = *(void *)(v25 + 72);
          uint64_t v28 = v59;
          while (1)
          {
            sub_100100BCC(v26, (uint64_t)v18, type metadata accessor for TaskHistory.Previous);
            sub_100100BCC((uint64_t)v18, (uint64_t)v16, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              sub_10017C75C((uint64_t)v16, type metadata accessor for TaskHistory.Previous);
            }
            else
            {
              int v29 = *(_DWORD *)&v16[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
              sub_10017C75C((uint64_t)v16, type metadata accessor for ClientCommand);
              if (v29 == v24)
              {
                sub_10017C75C((uint64_t)v18, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                a1 = v58;
                swift_bridgeObjectRelease();
                a3 = v54;
                uint64_t v3 = v52;
                a2 = v50;
                goto LABEL_14;
              }
            }
            sub_10017C75C((uint64_t)v18, type metadata accessor for TaskHistory.Previous);
            v26 += v27;
            if (!--v28)
            {
              a1 = v58;
              swift_bridgeObjectRelease();
              a3 = v54;
              __int16 v21 = v51;
              uint64_t v22 = v56;
              break;
            }
          }
        }
        uint64_t v22 = (void *)((char *)v22 + 1);
      }
      while (v22 != v21);
    }
    swift_bridgeObjectRelease();
    uint64_t v43 = sub_10000566C(&qword_10070E428);
    *a3 = 1;
    type metadata accessor for ClientCommand(0);
  }
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(a3, 0, 1, v43);
}

void *sub_100178D38(__int16 a1)
{
  if (!(_BYTE)a1)
  {
    uint64_t v2 = _swiftEmptyArrayStorage;
    if ((a1 & 0x100) != 0) {
      return v2;
    }
    goto LABEL_12;
  }
  if (a1 == 1)
  {
    uint64_t v2 = sub_1000177D4(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v4 = v2[2];
    unint64_t v3 = v2[3];
    if (v4 >= v3 >> 1) {
      uint64_t v2 = sub_1000177D4((void *)(v3 > 1), v4 + 1, 1, v2);
    }
    v2[2] = v4 + 1;
    uint64_t v5 = &v2[8 * v4];
    uint64_t v6 = &off_1006BA718;
  }
  else
  {
    uint64_t v2 = sub_1000177D4(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v8 = v2[2];
    unint64_t v7 = v2[3];
    if (v8 >= v7 >> 1) {
      uint64_t v2 = sub_1000177D4((void *)(v7 > 1), v8 + 1, 1, v2);
    }
    v2[2] = v8 + 1;
    uint64_t v5 = &v2[8 * v8];
    uint64_t v6 = &off_1006BA740;
  }
  void v5[4] = v6;
  uint64_t v9 = v5 + 4;
  v9[7] = 0;
  *(_OWORD *)(v9 + 5) = 0u;
  *(_OWORD *)(v9 + 3) = 0u;
  *(_OWORD *)(v9 + 1) = 0u;
  if ((a1 & 0x100) == 0)
  {
LABEL_12:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_1000177D4(0, v2[2] + 1, 1, v2);
    }
    unint64_t v11 = v2[2];
    unint64_t v10 = v2[3];
    if (v11 >= v10 >> 1) {
      uint64_t v2 = sub_1000177D4((void *)(v10 > 1), v11 + 1, 1, v2);
    }
    v2[2] = v11 + 1;
    uint64_t v12 = &v2[8 * v11];
    void v12[4] = 2;
    v12[5] = 0;
    v12[6] = 0;
    v12[7] = 0;
    v12[8] = 0x8000000000000000;
    v12[9] = 0;
    v12[10] = 0;
    v12[11] = 0;
  }
  return v2;
}

NSObject *sub_100178ED0(char a1, NSObject *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  int v33 = a5;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v10 = type metadata accessor for Task.Logger(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005E0ED0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0 && !*(void *)(*(void *)v6 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a6, v13);
    sub_100100BCC(a6, (uint64_t)v12, type metadata accessor for Task.Logger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v17 = sub_1005E0EB0();
    os_log_type_t v18 = sub_1005E25A0();
    int v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v20 = swift_slowAlloc();
      int v29 = v19;
      uint64_t v21 = v20;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v35 = v30;
      *(_DWORD *)uint64_t v21 = 68158210;
      LODWORD(v34) = 2;
      sub_1005E2960();
      *(_WORD *)(v21 + 8) = 256;
      uint64_t v22 = &v12[*(int *)(v10 + 20)];
      uint64_t v23 = *(void *)v22;
      uint64_t v27 = *((void *)v22 + 1);
      os_log_t v28 = v17;
      unint64_t v24 = *((void *)v22 + 2);
      LOBYTE(v34) = v23;
      sub_1005E2960();
      *(_WORD *)(v21 + 11) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_1000C6914(v27, v24, &v35);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10017C75C((uint64_t)v12, type metadata accessor for Task.Logger);
      uint64_t v17 = v28;
      _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v29, "[%.*hhx-%{public}s] LIST completed, but we didn’t get any mailboxes, notably no INBOX.", (uint8_t *)v21, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10017C75C((uint64_t)v12, type metadata accessor for Task.Logger);
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return sub_1001DAC80(a6, a2, v31, v32, v33);
}

uint64_t sub_100179218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v125 = a4;
  uint64_t v126 = (void *)a3;
  uint64_t v127 = a1;
  uint64_t v138 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v122 = *(void *)(v138 - 8);
  uint64_t v6 = __chkstk_darwin(v138);
  uint64_t v131 = (uint64_t)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v115 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v134 = (uint64_t *)((char *)&v115 - v12);
  __chkstk_darwin(v11);
  unint64_t v136 = (unint64_t)&v115 - v13;
  uint64_t v141 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v129 = *(void *)(v141 - 8);
  uint64_t v14 = __chkstk_darwin(v141);
  uint64_t v133 = (uint64_t)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v140 = (uint64_t)&v115 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v115 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v115 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v132 = (uint64_t *)((char *)&v115 - v25);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v139 = (uint64_t)&v115 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v115 - v29;
  uint64_t v31 = __chkstk_darwin(v28);
  int v33 = (char *)&v115 - v32;
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v36 = (char *)&v115 - v35;
  __chkstk_darwin(v34);
  int v38 = (char *)&v115 - v37;
  uint64_t v124 = v4;
  uint64_t v39 = *(void *)(v4 + 88);
  uint64_t v130 = a2;
  uint64_t v135 = v10;
  uint64_t v128 = v23;
  if (v39)
  {
    char v40 = *(void **)(v124 + 104);
    uint64_t v115 = *(void *)(v124 + 96);
    uint64_t v120 = v39;
    swift_bridgeObjectRetain();
    char v119 = v40;
    swift_bridgeObjectRetain();
    __int16 v41 = sub_100104D60(0, v125);
    char v42 = (void *)v41[2];
    if (v42)
    {
      uint64_t v43 = 0;
      uint64_t v123 = v41 + 4;
      uint64_t v44 = *(void *)(a2 + 16);
      unint64_t v121 = (unint64_t)v41;
      uint64_t v118 = v42;
      uint64_t v117 = v44;
      do
      {
        if (v44)
        {
          uint64_t v45 = a2;
          uint64_t v137 = v43;
          int v46 = *((_DWORD *)v123 + (void)v43);
          uint64_t v47 = v129;
          uint64_t v48 = v45 + ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80));
          swift_bridgeObjectRetain_n();
          uint64_t v49 = *(void *)(v47 + 72);
          do
          {
            sub_100100BCC(v48, (uint64_t)v38, type metadata accessor for TaskHistory.Previous);
            sub_100100BCC((uint64_t)v38, (uint64_t)v36, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              int v50 = *((_DWORD *)v36 + 2);
              sub_10007C4A4(*(void *)v36);
              if (v50 == v46)
              {
                sub_10017C75C((uint64_t)v38, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                a2 = v130;
                swift_bridgeObjectRelease_n();
                uint64_t v10 = v135;
                uint64_t v23 = v128;
                goto LABEL_13;
              }
            }
            else
            {
              sub_10017C75C((uint64_t)v36, type metadata accessor for TaskHistory.Previous);
            }
            sub_10017C75C((uint64_t)v38, type metadata accessor for TaskHistory.Previous);
            v48 += v49;
            --v44;
          }
          while (v44);
          a2 = v130;
          swift_bridgeObjectRelease_n();
          char v42 = v118;
          uint64_t v43 = v137;
          uint64_t v44 = v117;
        }
        uint64_t v43 = (void *)((char *)v43 + 1);
      }
      while (v43 != v42);
    }
    swift_bridgeObjectRelease();
    uint64_t v82 = v119;
    uint64_t v83 = v115;
    uint64_t v84 = (void *)swift_allocObject();
    uint64_t result = 0;
    _OWORD v84[2] = v120;
    long long v84[3] = v83;
    v84[4] = v82;
    return result;
  }
LABEL_13:
  unsigned int v51 = sub_1001A9A88(0, (uint64_t)v126);
  uint64_t v52 = v51[2];
  if (!v52)
  {
LABEL_45:
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  uint64_t v53 = 0;
  char v119 = v51;
  uint64_t v123 = v51 + 4;
  uint64_t v137 = *(void **)(a2 + 16);
  uint64_t v116 = v20;
  uint64_t v120 = v52;
  while (!v137)
  {
LABEL_17:
    if (++v53 == v52) {
      goto LABEL_45;
    }
  }
  uint64_t v126 = (void *)v53;
  int v54 = *((_DWORD *)v123 + v53);
  uint64_t v55 = v129;
  unint64_t v121 = (*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80);
  uint64_t v56 = a2 + v121;
  swift_bridgeObjectRetain();
  uint64_t v57 = *(void *)(v55 + 72);
  uint64_t v58 = v137;
  while (1)
  {
    sub_100100BCC(v56, (uint64_t)v33, type metadata accessor for TaskHistory.Previous);
    sub_100100BCC((uint64_t)v33, (uint64_t)v30, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_10017C75C((uint64_t)v30, type metadata accessor for TaskHistory.Previous);
LABEL_21:
    sub_10017C75C((uint64_t)v33, type metadata accessor for TaskHistory.Previous);
    v56 += v57;
    uint64_t v58 = (void *)((char *)v58 - 1);
    if (!v58)
    {
      uint64_t v10 = v135;
      uint64_t v23 = v128;
LABEL_16:
      uint64_t v52 = v120;
      uint64_t v53 = (uint64_t)v126;
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  int v59 = *(_DWORD *)&v30[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
  sub_10017C75C((uint64_t)v30, type metadata accessor for ClientCommand);
  if (v59 != v54) {
    goto LABEL_21;
  }
  sub_10017C75C((uint64_t)v33, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  uint64_t v60 = *(void *)(v127 + 16);
  if (v60)
  {
    uint64_t v61 = v122;
    uint64_t v62 = v127 + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
    swift_bridgeObjectRetain();
    uint64_t v63 = *(void *)(v61 + 72);
    uint64_t v64 = v136;
    do
    {
      sub_100100BCC(v62, v64, type metadata accessor for TaskHistory.Running);
      uint64_t v65 = (uint64_t)v134;
      sub_100100BCC(v64, (uint64_t)v134, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_10017C75C(v65, type metadata accessor for TaskHistory.Running);
      }
      else
      {
        int v66 = *(_DWORD *)(v65 + 8);
        uint64_t v67 = sub_10000566C(&qword_10070B6A0);
        sub_10017C75C(v65 + *(int *)(v67 + 64), type metadata accessor for ClientCommand);
        if (v66 == v54)
        {
          sub_10017C75C(v136, type metadata accessor for TaskHistory.Running);
          uint64_t v23 = v128;
          a2 = v130;
          uint64_t v10 = v135;
          uint64_t v20 = v116;
          goto LABEL_16;
        }
      }
      uint64_t v64 = v136;
      sub_10017C75C(v136, type metadata accessor for TaskHistory.Running);
      v62 += v63;
      --v60;
    }
    while (v60);
    swift_bridgeObjectRelease();
    uint64_t v23 = v128;
    a2 = v130;
    uint64_t v10 = v135;
    uint64_t v20 = v116;
  }
  else
  {
    a2 = v130;
    uint64_t v10 = v135;
    uint64_t v23 = v128;
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned char *)(v124 + 80) & 1) != 0 || *(void *)(v124 + 88))
  {
    uint64_t v68 = sub_100104D60(1, v125);
    unint64_t v136 = v68[2];
    if (v136)
    {
      uint64_t v69 = a2;
      uint64_t v70 = 0;
      uint64_t v126 = v68;
      uint64_t v71 = (uint64_t)(v68 + 4);
      uint64_t v72 = v69 + v121;
      uint64_t v134 = v68 + 4;
      uint64_t v73 = v139;
      do
      {
        int v74 = *(_DWORD *)(v71 + 4 * v70++);
        uint64_t result = swift_bridgeObjectRetain_n();
        uint64_t v76 = 0;
        uint64_t v77 = v72;
        do
        {
          uint64_t v78 = (void *)(v76 + 1);
          if (__OFADD__(v76, 1))
          {
LABEL_84:
            __break(1u);
            return result;
          }
          sub_100100BCC(v72, v73, type metadata accessor for TaskHistory.Previous);
          uint64_t v79 = (uint64_t)v132;
          sub_100100BCC(v73, (uint64_t)v132, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            unint64_t v80 = *(void *)v79;
            int v81 = *(_DWORD *)(v79 + 8);
            sub_10007C4A4(v80);
            if (v81 == v74)
            {
              sub_10017C75C(v139, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              a2 = v130;
              swift_bridgeObjectRelease_n();
              uint64_t v10 = v135;
              uint64_t v23 = v128;
              goto LABEL_46;
            }
          }
          else
          {
            sub_10017C75C(v79, type metadata accessor for TaskHistory.Previous);
          }
          uint64_t result = sub_10017C75C(v139, type metadata accessor for TaskHistory.Previous);
          ++v76;
          v72 += v57;
        }
        while (v78 != v137);
        swift_bridgeObjectRelease_n();
        uint64_t v71 = (uint64_t)v134;
        uint64_t v72 = v77;
      }
      while (v70 != v136);
    }
    swift_bridgeObjectRelease();
    *(void *)(swift_allocObject() + 16) = *(void *)v124;
    swift_bridgeObjectRetain();
    return 1;
  }
LABEL_46:
  uint64_t v85 = sub_100104D60(1, v125);
  uint64_t v86 = v85[2];
  if (!v86)
  {
LABEL_76:
    swift_bridgeObjectRelease();
    return 3;
  }
  uint64_t v87 = 0;
  uint64_t v132 = v85;
  uint64_t v137 = v85 + 4;
  uint64_t v139 = *(void *)(a2 + 16);
  uint64_t v134 = (void *)v86;
  while (!v139)
  {
LABEL_50:
    if (++v87 == v86) {
      goto LABEL_76;
    }
  }
  int v88 = *((_DWORD *)v137 + v87);
  uint64_t v89 = v129;
  unint64_t v136 = (*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80);
  uint64_t v90 = a2 + v136;
  swift_bridgeObjectRetain_n();
  uint64_t v91 = *(void *)(v89 + 72);
  uint64_t v92 = v139;
  while (2)
  {
    sub_100100BCC(v90, (uint64_t)v23, type metadata accessor for TaskHistory.Previous);
    sub_100100BCC((uint64_t)v23, (uint64_t)v20, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_10017C75C((uint64_t)v20, type metadata accessor for TaskHistory.Previous);
      goto LABEL_54;
    }
    int v93 = *((_DWORD *)v20 + 2);
    sub_10007C4A4(*(void *)v20);
    if (v93 != v88)
    {
LABEL_54:
      sub_10017C75C((uint64_t)v23, type metadata accessor for TaskHistory.Previous);
      v90 += v91;
      if (!--v92)
      {
        a2 = v130;
LABEL_49:
        swift_bridgeObjectRelease_n();
        uint64_t v86 = (uint64_t)v134;
        goto LABEL_50;
      }
      continue;
    }
    break;
  }
  sub_10017C75C((uint64_t)v23, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease_n();
  uint64_t v94 = *(void *)(v127 + 16);
  if (v94)
  {
    uint64_t v95 = v122;
    uint64_t v96 = v127 + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
    swift_bridgeObjectRetain_n();
    uint64_t v97 = *(void *)(v95 + 72);
    do
    {
      sub_100100BCC(v96, (uint64_t)v10, type metadata accessor for TaskHistory.Running);
      uint64_t v98 = v131;
      sub_100100BCC((uint64_t)v10, v131, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        int v99 = *(_DWORD *)(v98 + 4);
        sub_10007C4A4(*(void *)(v98 + 8));
        BOOL v100 = v99 == v88;
        uint64_t v10 = v135;
        if (v100)
        {
          sub_10017C75C((uint64_t)v135, type metadata accessor for TaskHistory.Running);
          uint64_t v23 = v128;
          a2 = v130;
          goto LABEL_49;
        }
      }
      else
      {
        sub_10017C75C(v98, type metadata accessor for TaskHistory.Running);
        uint64_t v10 = v135;
      }
      sub_10017C75C((uint64_t)v10, type metadata accessor for TaskHistory.Running);
      v96 += v97;
      --v94;
    }
    while (v94);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v101 = sub_100104D60(2, v125);
  uint64_t v102 = v139;
  uint64_t v138 = v101[2];
  if (v138)
  {
    uint64_t v103 = 0;
    uint64_t v135 = (char *)v101;
    unint64_t v104 = v101 + 4;
    uint64_t v105 = v130 + v136;
    uint64_t v137 = v101 + 4;
    uint64_t v106 = v140;
LABEL_69:
    int v107 = *((_DWORD *)v104 + v103++);
    uint64_t result = swift_bridgeObjectRetain_n();
    uint64_t v108 = 0;
    uint64_t v109 = v105;
    while (1)
    {
      uint64_t v110 = v108 + 1;
      if (__OFADD__(v108, 1)) {
        break;
      }
      sub_100100BCC(v105, v106, type metadata accessor for TaskHistory.Previous);
      uint64_t v111 = v133;
      sub_100100BCC(v106, v133, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        unint64_t v112 = *(void *)v111;
        int v113 = *(_DWORD *)(v111 + 8);
        sub_10007C4A4(v112);
        if (v113 == v107)
        {
          sub_10017C75C(v140, type metadata accessor for TaskHistory.Previous);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 3;
        }
      }
      else
      {
        sub_10017C75C(v111, type metadata accessor for TaskHistory.Previous);
      }
      uint64_t result = sub_10017C75C(v140, type metadata accessor for TaskHistory.Previous);
      ++v108;
      v105 += v91;
      if (v110 == v102)
      {
        swift_bridgeObjectRelease_n();
        unint64_t v104 = v137;
        uint64_t v105 = v109;
        if (v103 == v138) {
          goto LABEL_81;
        }
        goto LABEL_69;
      }
    }
    __break(1u);
    goto LABEL_84;
  }
LABEL_81:
  swift_bridgeObjectRelease();
  uint64_t v114 = *(void *)(v124 + 8);
  if (!*(void *)(v114 + 16)) {
    return 3;
  }
  *(void *)(swift_allocObject() + 16) = v114;
  swift_bridgeObjectRetain();
  return 2;
}

uint64_t sub_10017A040(char **a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v202 = type metadata accessor for Task.Logger(0);
  uint64_t v6 = __chkstk_darwin(v202);
  uint64_t v200 = (char *)&v180 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v213 = (uint64_t)&v180 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v210 = (char *)&v180 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v212 = (char *)&v180 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  os_log_t v216 = (os_log_t)((char *)&v180 - v15);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v180 - v16;
  uint64_t v18 = sub_1005E0ED0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  long long v201 = (char *)&v180 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v214 = (uint64_t)&v180 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v211 = (char *)&v180 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  unint64_t v217 = (unint64_t)&v180 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v215 = (char *)&v180 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v180 - v31;
  int v33 = a1[14];
  uint64_t v203 = a2;
  uint64_t v204 = v30;
  uint64_t v218 = v19;
  long long v219 = v3;
  if (!v33) {
    goto LABEL_12;
  }
  uint64_t v34 = *((void *)v33 + 2);
  __chkstk_darwin(v30);
  *(&v180 - 2) = v35;
  uint64_t v36 = swift_bridgeObjectRetain();
  uint64_t v37 = sub_10017C4DC(v36, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_10017BAA4, (uint64_t)(&v180 - 4));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[14] = (char *)v37;
  uint64_t v38 = v34 - *(void *)(v37 + 16);
  if (v38 < 1)
  {
    uint64_t v18 = v204;
    uint64_t v19 = v218;
    unint64_t v3 = v219;
    if (!v37) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v19 = v218;
    uint64_t v39 = v204;
    (*(void (**)(char *, uint64_t, uint64_t))(v218 + 16))(v32, a2, v204);
    sub_100100BCC(a2, (uint64_t)v17, type metadata accessor for Task.Logger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    char v40 = sub_1005E0EB0();
    os_log_type_t v41 = sub_1005E25C0();
    int v42 = v41;
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v209 = (void *)swift_slowAlloc();
      v275.bytes._rawValue = v209;
      *(_DWORD *)uint64_t v43 = 68158466;
      LODWORD(v238) = 2;
      sub_1005E2960();
      *(_WORD *)(v43 + 8) = 256;
      uint64_t v44 = &v17[*(int *)(v202 + 20)];
      uint64_t v45 = *(void *)v44;
      uint64_t v46 = *((void *)v44 + 1);
      LODWORD(v208) = v42;
      unint64_t v47 = *((void *)v44 + 2);
      LOBYTE(v238) = v45;
      sub_1005E2960();
      *(_WORD *)(v43 + 11) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v238 = (char *)sub_1000C6914(v46, v47, (uint64_t *)&v275);
      uint64_t v19 = v218;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10017C75C((uint64_t)v17, type metadata accessor for Task.Logger);
      *(_WORD *)(v43 + 21) = 2048;
      uint64_t v238 = (char *)v38;
      a2 = v203;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v208, "[%.*hhx-%{public}s] Did remove %ld mailbox(es)", (uint8_t *)v43, 0x1Fu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v18 = v204;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v32, v204);
    }
    else
    {
      sub_10017C75C((uint64_t)v17, type metadata accessor for Task.Logger);

      (*(void (**)(char *, uint64_t))(v19 + 8))(v32, v39);
      uint64_t v18 = v39;
    }
    unint64_t v3 = v219;
    if (!a1[14])
    {
LABEL_12:
      uint64_t v62 = v215;
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v215, a2, v18);
      os_log_t v63 = v216;
      sub_100100BCC(a2, (uint64_t)v216, type metadata accessor for Task.Logger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v64 = sub_1005E0EB0();
      os_log_type_t v65 = sub_1005E25A0();
      if (os_log_type_enabled(v64, v65))
      {
        os_log_t v66 = v63;
        uint64_t v67 = swift_slowAlloc();
        v275.bytes._rawValue = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v67 = 68158210;
        LODWORD(v238) = 2;
        sub_1005E2960();
        *(_WORD *)(v67 + 8) = 256;
        uint64_t v68 = (Class *)((char *)&v66->isa + *(int *)(v202 + 20));
        uint64_t v69 = v68[1];
        unint64_t v70 = v68[2];
        LOBYTE(v238) = *v68;
        sub_1005E2960();
        *(_WORD *)(v67 + 11) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v71 = v69;
        uint64_t v19 = v218;
        uint64_t v238 = (char *)sub_1000C6914(v71, v70, (uint64_t *)&v275);
        a2 = v203;
        uint64_t v18 = v204;
        sub_1005E2960();
        unint64_t v3 = v219;
        swift_bridgeObjectRelease();
        sub_10017C75C((uint64_t)v216, type metadata accessor for Task.Logger);
        _os_log_impl((void *)&_mh_execute_header, v64, v65, "[%.*hhx-%{public}s] Setting empty list of mailboxes.", (uint8_t *)v67, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v19 + 8))(v215, v18);
      }
      else
      {
        sub_10017C75C((uint64_t)v63, type metadata accessor for Task.Logger);

        (*(void (**)(char *, uint64_t))(v19 + 8))(v62, v18);
      }
      unint64_t v72 = sub_1000D4CCC((uint64_t)_swiftEmptyArrayStorage);
      swift_bridgeObjectRelease();
      a1[14] = (char *)v72;
      if (!v3[11]) {
        goto LABEL_16;
      }
LABEL_7:
      unint64_t v48 = v3[13];
      uint64_t v215 = (char *)v3[12];
      unint64_t v49 = v217;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 16))(v217, a2, v18);
      uint64_t v50 = a2;
      uint64_t v51 = (uint64_t)v212;
      sub_100100BCC(v50, (uint64_t)v212, type metadata accessor for Task.Logger);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v52 = sub_1005E0EB0();
      os_log_type_t v53 = sub_1005E25C0();
      os_log_t v216 = v52;
      LODWORD(v211) = v53;
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v54 = swift_slowAlloc();
        uint64_t v210 = (char *)swift_slowAlloc();
        uint64_t v238 = v210;
        *(_DWORD *)uint64_t v54 = 68158979;
        LODWORD(v275.bytes._rawValue) = 2;
        sub_1005E2960();
        *(_WORD *)(v54 + 8) = 256;
        uint64_t v55 = (void *)(v51 + *(int *)(v202 + 20));
        uint64_t v56 = v55[1];
        unint64_t v57 = v55[2];
        LOBYTE(v275.bytes._rawValue) = *v55;
        sub_1005E2960();
        *(_WORD *)(v54 + 11) = 2082;
        swift_bridgeObjectRetain();
        v275.bytes._rawValue = (void *)sub_1000C6914(v56, v57, (uint64_t *)&v238);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_10017C75C(v51, type metadata accessor for Task.Logger);
        *(_WORD *)(v54 + 21) = 2160;
        v275.bytes._rawValue = (void *)0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v54 + 31) = 2085;
        uint64_t v58 = swift_bridgeObjectRetain();
        NIOIMAPCore2::MailboxName v275 = MailboxName.init(_:)((Swift::OpaquePointer)v58);
        uint64_t v59 = sub_1005E1CC0();
        v275.bytes._rawValue = (void *)sub_1000C6914(v59, v60, (uint64_t *)&v238);
        unint64_t v3 = v219;
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v54 + 41) = 2080;
        swift_bridgeObjectRetain();
        v275.bytes._rawValue = (void *)sub_1000C6914((uint64_t)v215, v48, (uint64_t *)&v238);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        os_log_t v61 = v216;
        _os_log_impl((void *)&_mh_execute_header, v216, (os_log_type_t)v211, "[%.*hhx-%{public}s] Server is namespaced: %{sensitive,mask.mailbox}s (%s)", (uint8_t *)v54, 0x33u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(unint64_t, uint64_t))(v218 + 8))(v217, v204);
      }
      else
      {
        sub_10017C75C(v51, type metadata accessor for Task.Logger);

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v49, v18);
      }
      goto LABEL_20;
    }
  }
  if (v3[11]) {
    goto LABEL_7;
  }
LABEL_16:
  uint64_t v73 = v211;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v211, a2, v18);
  uint64_t v74 = a2;
  uint64_t v75 = v210;
  sub_100100BCC(v74, (uint64_t)v210, type metadata accessor for Task.Logger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v76 = sub_1005E0EB0();
  os_log_type_t v77 = sub_1005E25C0();
  if (os_log_type_enabled(v76, v77))
  {
    uint64_t v78 = swift_slowAlloc();
    v275.bytes._rawValue = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v78 = 68158210;
    LODWORD(v238) = 2;
    sub_1005E2960();
    *(_WORD *)(v78 + 8) = 256;
    uint64_t v79 = &v75[*(int *)(v202 + 20)];
    uint64_t v80 = *((void *)v79 + 1);
    unint64_t v81 = *((void *)v79 + 2);
    LOBYTE(v238) = *(void *)v79;
    sub_1005E2960();
    *(_WORD *)(v78 + 11) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v238 = (char *)sub_1000C6914(v80, v81, (uint64_t *)&v275);
    sub_1005E2960();
    unint64_t v3 = v219;
    swift_bridgeObjectRelease();
    sub_10017C75C((uint64_t)v75, type metadata accessor for Task.Logger);
    _os_log_impl((void *)&_mh_execute_header, v76, v77, "[%.*hhx-%{public}s] Server isn't namespaced.", (uint8_t *)v78, 0x15u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v218 + 8))(v211, v204);
  }
  else
  {
    sub_10017C75C((uint64_t)v75, type metadata accessor for Task.Logger);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v73, v18);
  }
LABEL_20:
  uint64_t v82 = v3[11];
  uint64_t v83 = (char *)v3[12];
  uint64_t v84 = (char *)v3[13];
  uint64_t v85 = (uint64_t)a1[17];
  a1[17] = (char *)v82;
  a1[18] = v83;
  a1[19] = v84;
  sub_100064054(v82);
  sub_1000852BC(v85);
  *((unsigned char *)a1 + 129) = 0;
  uint64_t v86 = static MonotonicTime.now()();
  a1[15] = (char *)v86;
  *((unsigned char *)a1 + 128) = 0;
  uint64_t v87 = *a1;
  int v88 = *((unsigned __int8 *)a1 + 8);
  LODWORD(v215) = *((unsigned __int8 *)a1 + 9);
  LODWORD(v219) = *((unsigned __int8 *)a1 + 10);
  LODWORD(v217) = *((unsigned __int8 *)a1 + 16);
  LODWORD(v216) = *((unsigned __int8 *)a1 + 17);
  int v89 = *((unsigned __int8 *)a1 + 18);
  uint64_t v90 = a1[3];
  int v91 = *((unsigned __int8 *)a1 + 32);
  uint64_t v92 = a1[5];
  uint64_t v93 = (uint64_t)a1[6];
  uint64_t v94 = a1[7];
  uint64_t v95 = a1[8];
  uint64_t v96 = a1[9];
  uint64_t v97 = a1[10];
  uint64_t v98 = a1[11];
  int v99 = a1[12];
  int v100 = *((unsigned __int16 *)a1 + 52);
  uint64_t v101 = a1[14];
  uint64_t v102 = (uint64_t)a1[20];
  uint64_t v103 = (uint64_t)a1[21];
  uint64_t v180 = a1 + 21;
  unint64_t v181 = v101;
  uint64_t v104 = (uint64_t)a1[22];
  char v105 = *((unsigned char *)a1 + 184);
  uint64_t v106 = a1[24];
  int v107 = a1[25];
  uint64_t v108 = a1[27];
  uint64_t v182 = a1[26];
  uint64_t v109 = a1[28];
  char v230 = 0;
  char v229 = v105;
  char v292 = 0;
  char v300 = v105;
  int v110 = *((_DWORD *)a1 + 58);
  char v231 = v88;
  long long v199 = v87;
  v275.bytes._rawValue = v87;
  uint64_t v111 = v102;
  int v188 = v88;
  LOBYTE(v275._hashValue._value) = v88;
  BYTE1(v275._hashValue._value) = (_BYTE)v215;
  BYTE2(v275._hashValue._value) = (_BYTE)v219;
  char v276 = v217;
  char v277 = (char)v216;
  LODWORD(v198) = v89;
  char v278 = v89;
  uint64_t v209 = v90;
  uint64_t v279 = v90;
  LODWORD(v208) = v91;
  char v280 = v91;
  uint64_t v206 = v93;
  uint64_t v207 = v92;
  uint64_t v281 = v92;
  uint64_t v282 = v93;
  uint64_t v197 = v94;
  long long v283 = v94;
  uint64_t v195 = v96;
  *(void *)&long long v196 = v95;
  uint64_t v284 = v95;
  uint64_t v285 = v96;
  char v193 = v98;
  unint64_t v194 = v97;
  uint64_t v286 = v97;
  uint64_t v287 = v98;
  char v192 = v99;
  unint64_t v288 = v99;
  int v190 = v100;
  __int16 v289 = v100;
  unint64_t v112 = v181;
  unint64_t v290 = v181;
  os_log_t v205 = v86;
  uint64_t v291 = v86;
  char v293 = 0;
  uint64_t v211 = v83;
  uint64_t v212 = (unsigned char *)v82;
  uint64_t v294 = v82;
  uint64_t v295 = v83;
  uint64_t v210 = v84;
  uint64_t v296 = v84;
  uint64_t v297 = v102;
  uint64_t v113 = v103;
  uint64_t v298 = v103;
  uint64_t v114 = v104;
  uint64_t v299 = v104;
  unint64_t v191 = v106;
  uint64_t v301 = v106;
  int v189 = v107;
  uint64_t v302 = v107;
  uint64_t v115 = v182;
  int v303 = v182;
  unint64_t v186 = v109;
  int v187 = v108;
  uint64_t v304 = v108;
  uint64_t v305 = v109;
  char v116 = v105;
  int v185 = v110;
  int v306 = v110;
  uint64_t v117 = a1[31];
  unint64_t v183 = a1[30];
  char v184 = v117;
  int v307 = v183;
  uint64_t v308 = v117;
  uint64_t v118 = sub_100061B60();
  char v119 = sub_100091474();
  uint64_t v120 = sub_1000C0D4C((uint64_t)v119, (uint64_t)v118);
  if (v116)
  {
    uint64_t v238 = (char *)v111;
    swift_bridgeObjectRetain();
    uint64_t v121 = v203;
    sub_100043714((uint64_t)&v238, v120, v203);
    sub_10000F0D4(v111, v113, v114, 1);
    swift_bridgeObjectRelease();
    uint64_t v113 = 0;
    uint64_t v114 = 0;
    uint64_t v111 = (uint64_t)v238;
    a1[20] = v238;
    uint64_t v122 = v180;
    *uint64_t v180 = 0;
    v122[1] = 0;
    *((unsigned char *)a1 + 184) = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v121 = v203;
  }
  char v226 = v116;
  uint64_t v238 = v199;
  char v228 = v188;
  char v239 = v188;
  char v240 = (char)v215;
  char v244 = (char)v198;
  char v249 = v197;
  uint64_t v250 = v196;
  uint64_t v251 = v195;
  uint64_t v252 = v194;
  uint64_t v253 = v193;
  uint64_t v254 = v192;
  __int16 v255 = v190;
  uint64_t v256 = v112;
  char v227 = 0;
  os_log_t v257 = v205;
  char v258 = 0;
  uint64_t v260 = (uint64_t)v212;
  uint64_t v261 = v211;
  uint64_t v262 = (void (*)(void, void, void))v210;
  uint64_t v263 = v111;
  uint64_t v264 = v113;
  uint64_t v265 = v114;
  char v266 = v116;
  long long v267 = v191;
  uint64_t v268 = v189;
  uint64_t v269 = v115;
  uint64_t v270 = v187;
  os_log_t v271 = v186;
  int v272 = v185;
  unint64_t v273 = v183;
  long long v274 = v184;
  char v123 = (char)v219;
  char v241 = (char)v219;
  char v124 = v217;
  char v242 = v217;
  unsigned __int8 v125 = v216;
  char v243 = (char)v216;
  uint64_t v126 = (uint64_t)v209;
  uint64_t v245 = v209;
  char v127 = v208;
  char v246 = v208;
  uint64_t v129 = v206;
  uint64_t v128 = (uint64_t)v207;
  uint64_t v247 = v207;
  uint64_t v248 = v206;
  char v259 = 0;
  uint64_t v215 = (char *)sub_100061B60();
  uint64_t v212 = (unsigned char *)*((void *)v215 + 2);
  swift_bridgeObjectRetain();
  uint64_t v130 = sub_1000D8938();
  unint64_t v131 = sub_1000D8D74(v124, v125, v126, v127, v128, v123, v129, v130);
  uint64_t v132 = v218;
  uint64_t v133 = v214;
  uint64_t v134 = v204;
  uint64_t v210 = *(char **)(v218 + 16);
  uint64_t v211 = (char *)(v218 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v210)(v214, v121, v204);
  uint64_t v135 = v213;
  sub_100100BCC(v121, v213, type metadata accessor for Task.Logger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  unint64_t v136 = sub_1005E0EB0();
  os_log_type_t v137 = sub_1005E25C0();
  if (os_log_type_enabled(v136, v137))
  {
    uint64_t v138 = swift_slowAlloc();
    unint64_t v217 = v131;
    uint64_t v139 = v138;
    long long v219 = (void *)swift_slowAlloc();
    v232[0] = (uint64_t)v219;
    *(_DWORD *)uint64_t v139 = 68158722;
    LODWORD(v220) = 2;
    sub_1005E2960();
    *(_WORD *)(v139 + 8) = 256;
    uint64_t v140 = (void *)(v135 + *(int *)(v202 + 20));
    uint64_t v141 = v140[1];
    unint64_t v142 = v140[2];
    LOBYTE(v220) = *v140;
    sub_1005E2960();
    *(_WORD *)(v139 + 11) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v220 = sub_1000C6914(v141, v142, v232);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10017C75C(v135, type metadata accessor for Task.Logger);
    *(_WORD *)(v139 + 21) = 2048;
    uint64_t v220 = (uint64_t)v212;
    sub_1005E2960();
    *(_WORD *)(v139 + 31) = 2080;
    if ((v217 & (unint64_t)&_mh_execute_header) != 0) {
      uint64_t v143 = 0xD000000000000014;
    }
    else {
      uint64_t v143 = 0x746C7561666564;
    }
    if ((v217 & (unint64_t)&_mh_execute_header) != 0) {
      unint64_t v144 = 0x80000001005E56C0;
    }
    else {
      unint64_t v144 = 0xE700000000000000;
    }
    uint64_t v220 = sub_1000C6914(v143, v144, v232);
    uint64_t v145 = v203;
    uint64_t v134 = v204;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v136, v137, "[%.*hhx-%{public}s] There are (still) %ld mailbox(es) to sync. Sync behavior: %s.", (uint8_t *)v139, 0x29u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    int v146 = *(char **)(v132 + 8);
    uint64_t v147 = v214;
  }
  else
  {
    uint64_t v145 = v121;
    sub_10017C75C(v135, type metadata accessor for Task.Logger);

    int v146 = *(char **)(v132 + 8);
    uint64_t v147 = v133;
  }
  uint64_t v207 = v146;
  ((void (*)(uint64_t, uint64_t))v146)(v147, v134);
  uint64_t v148 = (uint64_t)v200;
  sub_10009BF8C(4, (uint64_t)v215, (uint64_t)v232);
  uint64_t v150 = (char *)v232[0];
  uint64_t v149 = v232[1];
  char v151 = v233;
  long long v219 = (void *)v234;
  uint64_t v213 = v235;
  char v152 = v236;
  uint64_t v153 = v237;
  swift_bridgeObjectRelease();
  char v225 = v151;
  char v224 = v152;
  uint64_t v214 = v149;
  uint64_t v215 = v150;
  uint64_t result = sub_10009AF40((uint64_t)v150, v149, v151);
  uint64_t v156 = v201;
  if ((v151 & 1) == 0)
  {
    uint64_t v157 = v153;
    uint64_t v158 = 0;
    uint64_t v212 = v153 + 56;
    uint64_t v208 = v218 + 8;
    uint64_t v198 = (char *)&v220 + 1;
    long long v199 = (char *)&v220 + 4;
    uint64_t v197 = (char *)&v221;
    *(void *)&long long v155 = 68158979;
    long long v196 = v155;
    uint64_t v195 = (char *)&type metadata for Any + 8;
    uint64_t v159 = v214;
    uint64_t v160 = (uint64_t)v215;
    uint64_t v209 = v153;
    while ((v224 & 1) == 0)
    {
      uint64_t v161 = v213;
      if (v159 != v213)
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
        break;
      }
      if ((void *)v160 == v219)
      {
        uint64_t v178 = v159;
        sub_100060FF0((uint64_t)v215, v214, v225);
        uint64_t v179 = (uint64_t)v219;
        sub_100060FF0((uint64_t)v219, v161, 0);
        swift_bridgeObjectRelease();
        return sub_100060FF0(v179, v178, 0);
      }
      if (v225) {
        goto LABEL_60;
      }
      if (v160 < (uint64_t)v215) {
        goto LABEL_52;
      }
      if (v213 != v214) {
        goto LABEL_53;
      }
      if (v160 >= (uint64_t)v219) {
        goto LABEL_54;
      }
      if (v160 < 0 || v160 >= 1 << v157[32]) {
        goto LABEL_55;
      }
      if (((*(void *)&v212[((unint64_t)v160 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v160) & 1) == 0) {
        goto LABEL_56;
      }
      if (*((_DWORD *)v157 + 9) != v213) {
        goto LABEL_57;
      }
      uint64_t v162 = *((void *)v157 + 6) + 16 * v160;
      uint64_t v163 = *(void *)v162;
      int v164 = *(_DWORD *)(v162 + 8);
      uint64_t result = sub_1000D3970(v160, v159, 0, v157);
      char v223 = v166 & 1;
      uint64_t v167 = v158 + 1;
      if (__OFADD__(v158, 1)) {
        goto LABEL_58;
      }
      uint64_t v160 = result;
      unint64_t v217 = (unint64_t)v165;
      uint64_t v218 = v158;
      ((void (*)(char *, uint64_t, uint64_t))v210)(v156, v145, v134);
      sub_100100BCC(v145, v148, type metadata accessor for Task.Logger);
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain();
      uint64_t v168 = sub_1005E0EB0();
      os_log_type_t v169 = sub_1005E25C0();
      LODWORD(v216) = v169;
      if (os_log_type_enabled(v168, v169))
      {
        uint64_t v170 = swift_slowAlloc();
        uint64_t v206 = swift_slowAlloc();
        uint64_t v222 = v206;
        *(_DWORD *)uint64_t v170 = v196;
        LODWORD(v220) = 2;
        sub_1005E2960();
        *(_WORD *)(v170 + 8) = 256;
        IMAP2Protocol::Tag_optional v171 = (void *)(v148 + *(int *)(v202 + 20));
        uint64_t v172 = v171[1];
        unint64_t v173 = v171[2];
        LOBYTE(v220) = *v171;
        sub_1005E2960();
        *(_WORD *)(v170 + 11) = 2082;
        swift_bridgeObjectRetain();
        os_log_t v205 = v168;
        uint64_t v174 = (uint64_t)v200;
        uint64_t v220 = sub_1000C6914(v172, v173, &v222);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_10017C75C(v174, type metadata accessor for Task.Logger);
        *(_WORD *)(v170 + 21) = 2048;
        uint64_t v220 = v167;
        sub_1005E2960();
        *(_WORD *)(v170 + 31) = 2160;
        uint64_t v220 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v170 + 41) = 2085;
        uint64_t v220 = v163;
        int v221 = v164;
        swift_bridgeObjectRetain();
        uint64_t v175 = sub_1005E1CC0();
        uint64_t v220 = sub_1000C6914(v175, v176, &v222);
        uint64_t v148 = v174;
        uint64_t v156 = v201;
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        uint64_t v134 = v204;
        swift_bridgeObjectRelease();
        os_log_t v177 = v205;
        _os_log_impl((void *)&_mh_execute_header, v205, (os_log_type_t)v216, "[%.*hhx-%{public}s] [%ld] mailbox to sync: '%{sensitive,mask.mailbox}s'", (uint8_t *)v170, 0x33u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v145 = v203;
        swift_slowDealloc();
      }
      else
      {
        sub_10017C75C(v148, type metadata accessor for Task.Logger);

        swift_bridgeObjectRelease_n();
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v207)(v156, v134);
      uint64_t v159 = v217;
      uint64_t v158 = v218 + 1;
      uint64_t v157 = v209;
      if (v223) {
        break;
      }
    }
  }
  __break(1u);
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_10017B8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_100179218(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  return result;
}

NSObject *sub_10017B928(char *a1, NSObject *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  return sub_100178ED0(*a1, a2, a3, a4, a5, a6);
}

uint64_t ServerID.vendor.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_10017B97C()
{
  unint64_t result = qword_10070E390;
  if (!qword_10070E390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E390);
  }
  return result;
}

unint64_t sub_10017B9D4()
{
  unint64_t result = qword_10070E398;
  if (!qword_10070E398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E398);
  }
  return result;
}

unint64_t sub_10017BA28(uint64_t a1)
{
  unint64_t result = sub_10017BA50();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10017BA50()
{
  unint64_t result = qword_10070E418;
  if (!qword_10070E418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E418);
  }
  return result;
}

uint64_t sub_10017BAA4(uint64_t a1, unsigned int a2)
{
  if (*(void *)(**(void **)(v2 + 16) + 16)) {
    sub_100024264(a1, a2);
  }
  else {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_10017BAE0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (unsigned int *)((char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100100BCC(a1, (uint64_t)v6, type metadata accessor for UntaggedResponse);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 10:
      uint64_t v17 = *(void *)v6;
      if (*(void *)(*(void *)v6 + 16))
      {
        long long v18 = *(_OWORD *)(v17 + 48);
        long long v19 = *(_OWORD *)(v17 + 32);
        long long v20 = *(_OWORD *)(v17 + 80);
        *(_OWORD *)&v49.nextUID.is_nil = *(_OWORD *)(v17 + 64);
        *(_OWORD *)&v49.unseenCount.value = v20;
        *(_OWORD *)&v49.messageCount.value = v19;
        *(_OWORD *)&v49.recentCount.value = v18;
        uint64_t v44 = *(void *)(v17 + 32);
        uint64_t v43 = *(void *)(v17 + 40);
        v42[1] = *(void *)(v17 + 56);
        uint64_t v46 = *(void *)(v17 + 64);
        uint64_t v45 = *(void *)(v17 + 72);
        sub_10017C654((uint64_t)&v49);
        sub_10017C654((uint64_t)&v49);
        uint64_t v21 = Namespace.init(_:)((uint64_t)&v49);
        uint64_t v23 = v22;
        uint64_t v25 = v24;
        swift_bridgeObjectRelease();
        uint64_t v26 = v44;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v21 = 0;
        uint64_t v23 = 0;
        uint64_t v25 = 0;
        uint64_t v26 = 0;
        uint64_t v46 = 0;
        uint64_t v45 = 0;
      }
      swift_bridgeObjectRelease();
      sub_10017C6B8(v26);
      uint64_t result = sub_1000852BC(*(void *)(v2 + 88));
      *(void *)(v2 + 88) = v21;
      *(void *)(v2 + 96) = v23;
      *(void *)(v2 + 104) = v25;
      break;
    case 9:
      uint64_t v27 = *(void *)v6;
      unsigned int v28 = v6[2];
      long long v29 = *((_OWORD *)v6 + 6);
      *(_OWORD *)&v49.size.value = *((_OWORD *)v6 + 5);
      *(_OWORD *)&v49.highestModificationSequence.value.value = v29;
      *(_OWORD *)v49.gap59 = *(_OWORD *)((char *)v6 + 105);
      long long v30 = *((_OWORD *)v6 + 2);
      *(_OWORD *)&v49.messageCount.value = *((_OWORD *)v6 + 1);
      *(_OWORD *)&v49.recentCount.value = v30;
      long long v31 = *((_OWORD *)v6 + 4);
      *(_OWORD *)&v49.nextUID.is_nil = *((_OWORD *)v6 + 3);
      *(_OWORD *)&v49.unseenCount.value = v31;
      int v33 = sub_1000832D0(v47, v27, v28);
      if (*v32)
      {
        uint64_t v34 = v32;
        RemoteMailbox.Status.init(_:)(&v48, &v49);
        sub_10001FDF0((uint64_t)&v48, (uint64_t)(v34 + 3), &qword_10070B410);
      }
      v33(v47, 0);
      return swift_bridgeObjectRelease();
    case 7:
      uint64_t v8 = *((void *)v6 + 1);
      uint64_t v44 = v6[4];
      uint64_t v9 = *((unsigned __int8 *)v6 + 20);
      uint64_t v10 = *((void *)v6 + 3);
      uint64_t v11 = *((void *)v6 + 4);
      if (*(unsigned char *)(v2 + 80) == 1 && !*(void *)(v2 + 88))
      {
        uint64_t v12 = sub_1000B2114(*((unsigned char *)v6 + 20));
        if (v13)
        {
          uint64_t v14 = v13;
          v15._countAndFlagsBits = v12;
          v15._object = v14;
          *(IMAP2Protocol::Namespace *)(v2 + 88) = Namespace.init(prefix:separator:)((Swift::OpaquePointer)_swiftEmptyArrayStorage, v15);
        }
      }
      uint64_t v16 = *(void *)(v2 + 88);
      uint64_t v46 = v10;
      uint64_t v45 = v11;
      uint64_t v43 = v9;
      if (!v16)
      {
        v36._countAndFlagsBits = 47;
        v36._object = (void *)0xE100000000000000;
        Namespace.init(prefix:separator:)((Swift::OpaquePointer)_swiftEmptyArrayStorage, v36);
      }
      sub_100064054(v16);
      v50.bytes._rawValue = (void *)swift_bridgeObjectRetain();
      uint64_t v37 = v44;
      v50._hashValue._value = v44;
      Swift::Bool v38 = Namespace.isNotes(_:)(v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v38)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v39 = v37 | (v43 << 32);
        swift_bridgeObjectRetain_n();
        uint64_t v40 = swift_bridgeObjectRetain();
        RemoteMailbox.init(attributes:path:)(v40, v8, v39, (uint64_t)&v49);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v48.value.messageCount = *(void *)v2;
        *(void *)uint64_t v2 = 0x8000000000000000;
        sub_100103478((uint64_t)&v49, v8, v37, isUniquelyReferenced_nonNull_native);
        *(void *)uint64_t v2 = v48.value.messageCount;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRelease();
      return swift_release();
    default:
      return sub_10017C75C((uint64_t)v6, type metadata accessor for UntaggedResponse);
  }
  return result;
}

unint64_t sub_10017BF98(unint64_t result)
{
  if (*(unsigned char *)(v1 + 112) != 2 || ((result >> 59) & 0x1E | (result >> 2) & 1) != 4) {
    return result;
  }
  uint64_t v3 = *(void *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return result;
  }
  uint64_t v5 = (void *)v1;
  swift_bridgeObjectRetain();
  for (uint64_t i = 32; ; i += 96)
  {
    long long v8 = *(_OWORD *)(v3 + i + 32);
    long long v9 = *(_OWORD *)(v3 + i + 48);
    long long v10 = *(_OWORD *)(v3 + i + 64);
    *(_OWORD *)&v46[9] = *(_OWORD *)(v3 + i + 73);
    *(_OWORD *)uint64_t v46 = v10;
    long long v11 = *(_OWORD *)(v3 + i + 16);
    long long v42 = *(_OWORD *)(v3 + i);
    long long v43 = v11;
    long long v44 = v8;
    long long v45 = v9;
    uint64_t v12 = *(unsigned int *)&v46[16];
    uint64_t v13 = *((void *)&v10 + 1);
    sub_100057150((uint64_t)&v42);
    if ((static MailboxOfInterest.LocalModification.__derived_enum_equals(_:_:)(v13, v12, 0, 0) & 1) == 0) {
      goto LABEL_10;
    }
    sub_10001FDF0((uint64_t)&v46[20], (uint64_t)v47, &qword_10070E420);
    sub_10001FDF0((uint64_t)v47, (uint64_t)v48, &qword_10070E420);
    if (v48[4] != 1) {
      goto LABEL_10;
    }
    uint64_t v14 = *v5;
    if (!*(void *)(*v5 + 16)) {
      goto LABEL_10;
    }
    unint64_t v15 = sub_100024264(v43, DWORD2(v43));
    if ((v16 & 1) == 0) {
      goto LABEL_10;
    }
    uint64_t v17 = *(void *)(v14 + 56) + 72 * v15;
    uint64_t v18 = *(void *)(v17 + 40);
    uint64_t v41 = *(void *)(v17 + 48);
    uint64_t v19 = *(void *)(v17 + 56);
    char v20 = *(unsigned char *)(v17 + 64);
    char v21 = *(unsigned char *)(v17 + 65);
    if (!swift_bridgeObjectRetain()) {
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_10;
    }
    if (v20) {
      goto LABEL_10;
    }
    uint64_t v22 = MailboxOfInterest.highestModificationSequenceValue.getter();
    if (v23) {
      goto LABEL_10;
    }
    if ((v22 | v19) < 0) {
      break;
    }
    if (v19 != v22) {
      goto LABEL_10;
    }
    long long v24 = v42;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = (void *)v5[1];
    v5[1] = 0x8000000000000000;
    unint64_t v26 = sub_1000242DC(v24, *((Swift::UInt *)&v24 + 1));
    uint64_t v28 = v25[2];
    BOOL v29 = (v27 & 1) == 0;
    BOOL v30 = __OFADD__(v28, v29);
    uint64_t v31 = v28 + v29;
    if (v30) {
      goto LABEL_33;
    }
    char v32 = v27;
    if (v25[3] < v31)
    {
      sub_100051D50(v31, isUniquelyReferenced_nonNull_native);
      unint64_t v26 = sub_1000242DC(v24, *((Swift::UInt *)&v24 + 1));
      if ((BYTE8(v24) & 1) != (v33 & 1)) {
        goto LABEL_35;
      }
LABEL_26:
      uint64_t v34 = v25;
      if ((v32 & 1) == 0) {
        goto LABEL_27;
      }
      goto LABEL_8;
    }
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_26;
    }
    char v38 = v27;
    unint64_t v39 = v26;
    sub_100098410();
    unint64_t v26 = v39;
    LOBYTE(v39) = v38;
    uint64_t v34 = v25;
    if ((v39 & 1) == 0)
    {
LABEL_27:
      v34[(v26 >> 6) + 8] |= 1 << v26;
      *(_OWORD *)(v34[6] + 16 * v26) = v24;
      uint64_t v35 = v34[7] + 24 * v26;
      *(_DWORD *)uint64_t v35 = 0;
      *(unsigned char *)(v35 + 4) = 1;
      *(void *)(v35 + 8) = v18;
      *(unsigned char *)(v35 + 16) = v41 & 1;
      uint64_t v36 = v34[2];
      BOOL v30 = __OFADD__(v36, 1);
      uint64_t v37 = v36 + 1;
      if (v30) {
        goto LABEL_34;
      }
      _OWORD v34[2] = v37;
      swift_bridgeObjectRetain();
      goto LABEL_9;
    }
LABEL_8:
    uint64_t v7 = v34[7] + 24 * v26;
    *(_DWORD *)uint64_t v7 = 0;
    *(unsigned char *)(v7 + 4) = 1;
    *(void *)(v7 + 8) = v18;
    *(unsigned char *)(v7 + 16) = v41 & 1;
LABEL_9:
    v5[1] = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_10:
    sub_1000571A4((uint64_t)&v42);
    if (!--v4) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

uint64_t sub_10017C2C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, _OWORD *))
{
  uint64_t v25 = (unint64_t *)result;
  uint64_t v26 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 64);
  int64_t v29 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v20 >= v29) {
      return sub_10006CAA4(v25, a2, v26, a3);
    }
    unint64_t v21 = *(void *)(v7 + 8 * v20);
    ++v6;
    if (!v21)
    {
      int64_t v6 = v20 + 1;
      if (v20 + 1 >= v29) {
        return sub_10006CAA4(v25, a2, v26, a3);
      }
      unint64_t v21 = *(void *)(v7 + 8 * v6);
      if (!v21)
      {
        int64_t v6 = v20 + 2;
        if (v20 + 2 >= v29) {
          return sub_10006CAA4(v25, a2, v26, a3);
        }
        unint64_t v21 = *(void *)(v7 + 8 * v6);
        if (!v21) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v21 - 1) & v21;
    unint64_t v12 = __clz(__rbit64(v21)) + (v6 << 6);
LABEL_5:
    uint64_t v13 = *(void *)(a3 + 48) + 16 * v12;
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = *(unsigned int *)(v13 + 8);
    uint64_t v16 = *(void *)(a3 + 56) + 72 * v12;
    v27[0] = *(_OWORD *)v16;
    long long v18 = *(_OWORD *)(v16 + 32);
    long long v17 = *(_OWORD *)(v16 + 48);
    long long v19 = *(_OWORD *)(v16 + 16);
    __int16 v28 = *(_WORD *)(v16 + 64);
    v27[2] = v18;
    void v27[3] = v17;
    v27[1] = v19;
    swift_bridgeObjectRetain();
    sub_10002292C((uint64_t)v27);
    LOBYTE(v15) = a4(v14, v15, v27);
    sub_10001D550((uint64_t)v27);
    uint64_t result = swift_bridgeObjectRelease();
    if (v15)
    {
      *(unint64_t *)((char *)v25 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
        return sub_10006CAA4(v25, a2, v26, a3);
      }
    }
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v29) {
    return sub_10006CAA4(v25, a2, v26, a3);
  }
  unint64_t v21 = *(void *)(v7 + 8 * v22);
  if (v21)
  {
    int64_t v6 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v6 >= v29) {
      return sub_10006CAA4(v25, a2, v26, a3);
    }
    unint64_t v21 = *(void *)(v7 + 8 * v6);
    ++v22;
    if (v21) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10017C4DC(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t, _OWORD *), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_10017C2C4((uint64_t)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    unint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_10017C2C4((uint64_t)v11, v8, v6, a2);
    swift_slowDealloc();
  }
  return a3;
}

uint64_t sub_10017C654(uint64_t a1)
{
  return a1;
}

uint64_t sub_10017C6B8(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_10017C724()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10017C75C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10017C7BC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

unsigned char *storeEnumTagSinglePayload for ListMailboxes.CommandID(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10017C8C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListMailboxes.CommandID()
{
  return &type metadata for ListMailboxes.CommandID;
}

unsigned char *storeEnumTagSinglePayload for ListMailboxes.ActionID(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10017C9CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListMailboxes.ActionID()
{
  return &type metadata for ListMailboxes.ActionID;
}

uint64_t sub_10017CA08(uint64_t a1)
{
  uint64_t v43 = sub_10000566C(&qword_10070A9C0);
  uint64_t v2 = __chkstk_darwin(v43);
  unsigned int v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  unsigned int v6 = (void *)((char *)v38 - v5);
  uint64_t v44 = type metadata accessor for MessagesToRemoveHelper.Range();
  uint64_t v7 = *(void *)(v44 - 8);
  uint64_t v8 = __chkstk_darwin(v44);
  uint64_t v40 = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)v38 - v10;
  unint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return 32123;
  }
  v38[1] = a1;
  if (v12 > 9)
  {
    unint64_t v39 = v4;
    uint64_t v22 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v42 = *(void *)(v7 + 72);
    swift_bridgeObjectRetain();
    unsigned int v23 = -1;
    uint64_t v24 = v22;
    unint64_t v25 = v12;
    do
    {
      sub_100189D6C(v24, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
      uint64_t v41 = sub_10000566C(&qword_100709E38);
      MessageIdentifierSet.ranges.getter((uint64_t)v6);
      sub_10000566C(&qword_10070A8F8);
      uint64_t v26 = sub_1005E35B0();
      if (v26 == sub_1005E35E0())
      {
LABEL_26:
        sub_100007A48((uint64_t)v6, &qword_10070A9C0);
        __break(1u);
        goto LABEL_27;
      }
      MessageIdentifierSet.RangeView.subscript.getter();
      unsigned int v27 = v46;
      sub_100007A48((uint64_t)v6, &qword_10070A9C0);
      if (v23 >= v27) {
        unsigned int v23 = v27;
      }
      sub_100189DD4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
      v24 += v42;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unsigned int v28 = 1;
    unsigned int v6 = &qword_10070A9C0;
    uint64_t v26 = (uint64_t)v39;
    uint64_t v29 = v40;
    while (1)
    {
      sub_100189D6C(v22, v29, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
      MessageIdentifierSet.ranges.getter(v26);
      uint64_t v30 = sub_1005E35B0();
      if (v30 == sub_1005E35E0()) {
        break;
      }
      uint64_t v31 = sub_1005E35E0();
      uint64_t v32 = v31 - 1;
      if (__OFSUB__(v31, 1))
      {
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      uint64_t v26 = sub_1005E35B0();
      uint64_t v33 = sub_1005E35E0();
      if (v32 < v26 || v32 >= v33) {
        goto LABEL_25;
      }
      uint64_t v26 = (uint64_t)v39;
      MessageIdentifierSet.RangeView.subscript.getter();
      unsigned int v34 = HIDWORD(v46);
      sub_100007A48(v26, &qword_10070A9C0);
      if (v34 < v28) {
        unsigned int v28 = v34;
      }
      uint64_t v29 = v40;
      sub_100189DD4(v40, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
      v22 += v42;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        uint64_t v46 = 0;
        unint64_t v47 = 0xE000000000000000;
        LODWORD(v45) = v23;
        sub_1005E2E90();
        v48._countAndFlagsBits = 58;
        v48._object = (void *)0xE100000000000000;
        sub_1005E1E30(v48);
        LODWORD(v45) = v28;
        sub_1005E2E90();
        return v46;
      }
    }
LABEL_27:
    uint64_t result = sub_100007A48(v26, &qword_10070A9C0);
    __break(1u);
  }
  else
  {
    long long v45 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10001A574(0, v12, 0);
    uint64_t v13 = v45;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v15 = *(void *)(v7 + 72);
    do
    {
      sub_100187354(v14, &v46);
      uint64_t v16 = v46;
      unint64_t v17 = v47;
      long long v45 = v13;
      unint64_t v19 = v13[2];
      unint64_t v18 = v13[3];
      if (v19 >= v18 >> 1)
      {
        sub_10001A574(v18 > 1, v19 + 1, 1);
        uint64_t v13 = v45;
      }
      _OWORD v13[2] = v19 + 1;
      int64_t v20 = &v13[2 * v19];
      v20[4] = v16;
      v20[5] = v17;
      v14 += v15;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    uint64_t v46 = (uint64_t)v13;
    sub_10000566C(&qword_100709F58);
    sub_10001C548();
    uint64_t v35 = sub_1005E1A80();
    uint64_t v37 = v36;
    swift_release();
    uint64_t v46 = 123;
    unint64_t v47 = 0xE100000000000000;
    v49._countAndFlagsBits = v35;
    v49._object = v37;
    sub_1005E1E30(v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v50._countAndFlagsBits = 125;
    v50._object = (void *)0xE100000000000000;
    sub_1005E1E30(v50);
    swift_bridgeObjectRelease();
    return v46;
  }
  return result;
}

uint64_t sub_10017CF68(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v136 = a7;
  LODWORD(v132) = a6;
  unint64_t v130 = a2;
  uint64_t v131 = a3;
  uint64_t v14 = sub_10000566C(&qword_10070A9C0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v17 - 8);
  uint64_t v133 = ((char *)v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v125 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v19 = __chkstk_darwin(v125);
  uint64_t v126 = (uint64_t)v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v123 = (uint64_t)v114 - v22;
  __chkstk_darwin(v21);
  os_log_t v122 = (os_log_t)((char *)v114 - v23);
  uint64_t v24 = sub_1005E0ED0();
  uint64_t v134 = *(void *)(v24 - 8);
  uint64_t v135 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  char v127 = ((char *)v114 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = __chkstk_darwin(v25);
  os_log_t v128 = (os_log_t)((char *)v114 - v28);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)v114 - v29;
  uint64_t v31 = type metadata accessor for MessagesToRemoveHelper.Range();
  uint64_t v32 = __chkstk_darwin(v31);
  unsigned int v34 = (char *)v114 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v36 = __chkstk_darwin(v35);
  uint64_t v37 = __chkstk_darwin(v36);
  unint64_t v39 = (void *)((char *)v114 - v38);
  uint64_t result = __chkstk_darwin(v37);
  uint64_t v137 = (uint64_t)v114 - v44;
  uint64_t v45 = *(void *)(a8 + 16);
  if (v45)
  {
    uint64_t v117 = v34;
    uint64_t v118 = v43;
    uint64_t v119 = v42;
    uint64_t v120 = a4;
    uint64_t v124 = result;
    int v121 = a5;
    uint64_t v129 = v9;
    uint64_t v46 = a8 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
    uint64_t v47 = *(void *)(v41 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100189D6C(v46, (uint64_t)v39, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
      uint64_t v48 = *v39;
      sub_100189DD4((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
      if (v48 == a1) {
        break;
      }
      v46 += v47;
      if (!--v45) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v49 = v137;
    sub_100189D6C(v46, v137, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
    uint64_t v51 = v134;
    uint64_t v50 = v135;
    uint64_t v52 = v124;
    if ((v132 & 1) != 0 && (*(unsigned char *)(v49 + *(int *)(v124 + 32)) & 1) == 0)
    {
      os_log_type_t v53 = v30;
      uint64_t v54 = v136;
      (*(void (**)(char *, uint64_t, uint64_t))(v134 + 16))(v30, v136, v135);
      os_log_t v55 = v122;
      sub_100189D6C(v54, (uint64_t)v122, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v56 = sub_1005E0EB0();
      os_log_type_t v57 = sub_1005E25A0();
      int v58 = v57;
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v59 = swift_slowAlloc();
        uint64_t v116 = swift_slowAlloc();
        uint64_t v140 = v116;
        *(_DWORD *)uint64_t v59 = 68159491;
        LODWORD(v138) = 2;
        v114[1] = (char *)&v138 + 4;
        sub_1005E2960();
        *(_WORD *)(v59 + 8) = 256;
        uint64_t v60 = *(int *)(v125 + 20);
        uint64_t v132 = (uint64_t)v53;
        os_log_t v61 = (char *)v55 + v60;
        LOBYTE(v138) = *((unsigned char *)&v55->isa + v60);
        sub_1005E2960();
        *(_WORD *)(v59 + 11) = 2082;
        int v115 = v58;
        uint64_t v62 = *((void *)v61 + 1);
        unint64_t v63 = *((void *)v61 + 2);
        swift_bridgeObjectRetain();
        uint64_t v138 = sub_1000C6914(v62, v63, (uint64_t *)&v140);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v59 + 21) = 1040;
        LODWORD(v138) = 2;
        uint64_t v50 = v135;
        sub_1005E2960();
        *(_WORD *)(v59 + 27) = 512;
        LOWORD(v138) = *((_WORD *)v61 + 12);
        sub_1005E2960();
        *(_WORD *)(v59 + 31) = 2160;
        uint64_t v138 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v59 + 41) = 2085;
        int v64 = *((_DWORD *)v61 + 10);
        uint64_t v138 = *((void *)v61 + 4);
        int v139 = v64;
        swift_bridgeObjectRetain();
        uint64_t v65 = sub_1005E1CC0();
        uint64_t v138 = sub_1000C6914(v65, v66, (uint64_t *)&v140);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100189DD4((uint64_t)v122, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v59 + 51) = 2048;
        uint64_t v138 = a1;
        uint64_t v51 = v134;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v115, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Search completed for range #%ld, but server never sent a response. rdar://127003347", (uint8_t *)v59, 0x3Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v49 = v137;
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v132, v50);
      }
      else
      {
        sub_100189DD4((uint64_t)v55, type metadata accessor for MailboxTaskLogger);

        (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v50);
      }
      uint64_t v52 = v124;
    }
    uint64_t v67 = (uint64_t)v133;
    sub_1000079E4(v49 + *(int *)(v52 + 20), (uint64_t)v133, &qword_100709E30);
    uint64_t v132 = sub_10000566C(&qword_100709E38);
    MessageIdentifierSet.ranges.getter((uint64_t)v16);
    sub_100007A48(v67, &qword_100709E38);
    sub_10000566C(&qword_10070A8F8);
    uint64_t v68 = sub_1005E35B0();
    uint64_t v69 = sub_1005E35E0();
    uint64_t v70 = sub_1005E35B0();
    uint64_t result = sub_1005E35E0();
    if (v68 < v70 || result < v68)
    {
      __break(1u);
    }
    else
    {
      uint64_t v71 = sub_1005E35B0();
      uint64_t result = sub_1005E35E0();
      if (v69 >= v71 && result >= v69)
      {
        if (!__OFSUB__(v69, v68))
        {
          sub_100007A48((uint64_t)v16, &qword_10070A9C0);
          unint64_t v72 = *(void (**)(NSObject *, uint64_t, uint64_t))(v51 + 16);
          if (v69 - v68 > 9)
          {
            os_log_t v73 = v127;
            uint64_t v98 = v136;
            v72(v127, v136, v50);
            uint64_t v99 = v126;
            sub_100189D6C(v98, v126, type metadata accessor for MailboxTaskLogger);
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            uint64_t v76 = v137;
            uint64_t v100 = (uint64_t)v117;
            sub_100189D6C(v137, (uint64_t)v117, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
            uint64_t v101 = sub_1005E0EB0();
            os_log_type_t v102 = sub_1005E25C0();
            int v103 = v102;
            if (os_log_type_enabled(v101, v102))
            {
              uint64_t v104 = swift_slowAlloc();
              uint64_t v133 = swift_slowAlloc();
              uint64_t v140 = v133;
              *(_DWORD *)uint64_t v104 = 68159747;
              LODWORD(v138) = 2;
              os_log_t v128 = v101;
              sub_1005E2960();
              *(_WORD *)(v104 + 8) = 256;
              uint64_t v105 = v99 + *(int *)(v125 + 20);
              LOBYTE(v138) = *(unsigned char *)v105;
              sub_1005E2960();
              *(_WORD *)(v104 + 11) = 2082;
              LODWORD(v125) = v103;
              uint64_t v106 = *(void *)(v105 + 8);
              unint64_t v107 = *(void *)(v105 + 16);
              swift_bridgeObjectRetain();
              uint64_t v138 = sub_1000C6914(v106, v107, (uint64_t *)&v140);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              *(_WORD *)(v104 + 21) = 1040;
              LODWORD(v138) = 2;
              sub_1005E2960();
              *(_WORD *)(v104 + 27) = 512;
              LOWORD(v138) = *(_WORD *)(v105 + 24);
              sub_1005E2960();
              *(_WORD *)(v104 + 31) = 2160;
              uint64_t v138 = 0x786F626C69616DLL;
              sub_1005E2960();
              *(_WORD *)(v104 + 41) = 2085;
              int v108 = *(_DWORD *)(v105 + 40);
              uint64_t v138 = *(void *)(v105 + 32);
              int v139 = v108;
              swift_bridgeObjectRetain();
              uint64_t v109 = sub_1005E1CC0();
              uint64_t v138 = sub_1000C6914(v109, v110, (uint64_t *)&v140);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              sub_100189DD4(v126, type metadata accessor for MailboxTaskLogger);
              *(_WORD *)(v104 + 51) = 2048;
              uint64_t v138 = a1;
              sub_1005E2960();
              *(_WORD *)(v104 + 61) = 2048;
              MessageIdentifierSet.count.getter();
              uint64_t v112 = v111;
              sub_100189DD4(v100, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
              uint64_t v138 = v112;
              sub_1005E2960();
              os_log_t v113 = v128;
              _os_log_impl((void *)&_mh_execute_header, v128, (os_log_type_t)v125, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Search completed for range #%ld. Got %ld UIDs.", (uint8_t *)v104, 0x47u);
              swift_arrayDestroy();
              swift_slowDealloc();
              uint64_t v76 = v137;
              swift_slowDealloc();

              (*(void (**)(NSObject *, uint64_t))(v134 + 8))(v127, v135);
              goto LABEL_25;
            }
            sub_100189DD4(v100, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
            sub_100189DD4(v99, type metadata accessor for MailboxTaskLogger);
          }
          else
          {
            os_log_t v73 = v128;
            uint64_t v74 = v136;
            v72(v128, v136, v50);
            uint64_t v75 = v123;
            sub_100189D6C(v74, v123, type metadata accessor for MailboxTaskLogger);
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            uint64_t v76 = v137;
            uint64_t v77 = v118;
            sub_100189D6C(v137, v118, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
            sub_100189D6C(v76, v119, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
            uint64_t v78 = sub_1005E0EB0();
            os_log_type_t v79 = sub_1005E25C0();
            int v80 = v79;
            if (os_log_type_enabled(v78, v79))
            {
              uint64_t v81 = swift_slowAlloc();
              char v127 = swift_slowAlloc();
              uint64_t v140 = v127;
              *(_DWORD *)uint64_t v81 = 68160003;
              LODWORD(v138) = 2;
              os_log_t v122 = v78;
              LODWORD(v126) = v80;
              sub_1005E2960();
              *(_WORD *)(v81 + 8) = 256;
              uint64_t v82 = v75;
              uint64_t v83 = v75 + *(int *)(v125 + 20);
              LOBYTE(v138) = *(unsigned char *)v83;
              sub_1005E2960();
              *(_WORD *)(v81 + 11) = 2082;
              uint64_t v84 = *(void *)(v83 + 8);
              unint64_t v85 = *(void *)(v83 + 16);
              swift_bridgeObjectRetain();
              uint64_t v138 = sub_1000C6914(v84, v85, (uint64_t *)&v140);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              *(_WORD *)(v81 + 21) = 1040;
              LODWORD(v138) = 2;
              sub_1005E2960();
              *(_WORD *)(v81 + 27) = 512;
              LOWORD(v138) = *(_WORD *)(v83 + 24);
              sub_1005E2960();
              *(_WORD *)(v81 + 31) = 2160;
              uint64_t v138 = 0x786F626C69616DLL;
              sub_1005E2960();
              *(_WORD *)(v81 + 41) = 2085;
              int v86 = *(_DWORD *)(v83 + 40);
              uint64_t v138 = *(void *)(v83 + 32);
              int v139 = v86;
              swift_bridgeObjectRetain();
              uint64_t v87 = sub_1005E1CC0();
              uint64_t v138 = sub_1000C6914(v87, v88, (uint64_t *)&v140);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              sub_100189DD4(v82, type metadata accessor for MailboxTaskLogger);
              *(_WORD *)(v81 + 51) = 2048;
              uint64_t v138 = a1;
              sub_1005E2960();
              *(_WORD *)(v81 + 61) = 2082;
              uint64_t v89 = v118;
              uint64_t v90 = (uint64_t)v133;
              sub_1000079E4(v118 + *(int *)(v124 + 20), (uint64_t)v133, &qword_100709E30);
              uint64_t v91 = MessageIdentifierSet.debugDescription.getter(v132);
              unint64_t v93 = v92;
              sub_100007A48(v90, &qword_100709E38);
              uint64_t v138 = sub_1000C6914(v91, v93, (uint64_t *)&v140);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              sub_100189DD4(v89, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
              *(_WORD *)(v81 + 71) = 2048;
              uint64_t v94 = v119;
              MessageIdentifierSet.count.getter();
              uint64_t v96 = v95;
              sub_100189DD4(v94, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
              uint64_t v138 = v96;
              uint64_t v76 = v137;
              sub_1005E2960();
              os_log_t v97 = v122;
              _os_log_impl((void *)&_mh_execute_header, v122, (os_log_type_t)v126, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Search completed for range #%ld %{public}s. Got %ld UIDs.", (uint8_t *)v81, 0x51u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(os_log_t, uint64_t))(v134 + 8))(v128, v135);
LABEL_25:
              sub_1001DBDBC(v136, v130, v131, v120, v121);
              return sub_100189DD4(v76, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
            }
            sub_100189DD4(v119, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
            sub_100189DD4(v75, type metadata accessor for MailboxTaskLogger);
            sub_100189DD4(v77, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
          }
          (*(void (**)(os_log_t, uint64_t))(v51 + 8))(v73, v50);
          goto LABEL_25;
        }
LABEL_29:
        __break(1u);
        return result;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  return result;
}

uint64_t sub_10017E064(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  unint64_t v625 = a6;
  uint64_t v633 = a4;
  LODWORD(v626) = a3;
  uint64_t v617 = a2;
  uint64_t v630 = a1;
  v631 = 0;
  uint64_t v7 = sub_10000566C(&qword_10070CEA0);
  __chkstk_darwin(v7 - 8);
  os_log_t v619 = (os_log_t)((char *)&v583 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v618 = _s15MissingMessagesO10NewMissingVMa(0);
  uint64_t v624 = *(void *)(v618 - 8);
  uint64_t v9 = __chkstk_darwin(v618);
  uint64_t v613 = v10;
  uint64_t v614 = (uint64_t)&v583 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v620 = (uint64_t)&v583 - v11;
  uint64_t v12 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v632 = *(void *)(v12 - 8);
  uint64_t v13 = *(char **)(v632 + 64);
  __chkstk_darwin(v12 - 8);
  uint64_t v635 = sub_1005E0ED0();
  uint64_t v14 = *(void *)(v635 - 8);
  uint64_t v15 = __chkstk_darwin(v635);
  v628 = (char *)&v583 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  v627 = (char *)&v583 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = ((char *)&v583 - v20);
  uint64_t v22 = __chkstk_darwin(v19);
  v616 = ((char *)&v583 - v23);
  uint64_t v24 = __chkstk_darwin(v22);
  os_log_t v615 = (os_log_t)((char *)&v583 - v25);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v583 - v27;
  __chkstk_darwin(v26);
  v622 = ((char *)&v583 - v29);
  uint64_t v30 = sub_10000566C(&qword_10070A9C0);
  __chkstk_darwin(v30 - 8);
  uint64_t v32 = (char *)&v583 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10000566C(&qword_100709E38);
  uint64_t v34 = __chkstk_darwin(v33);
  __chkstk_darwin(v34);
  unint64_t v39 = (char *)&v583 - v35;
  uint64_t v40 = *(void *)(a5 + 16);
  uint64_t v634 = v14;
  if (v40)
  {
    uint64_t v41 = a5;
    v609 = v38;
    uint64_t v610 = v37;
    uint64_t v611 = v36;
    uint64_t v612 = (uint64_t)v28;
    uint64_t v42 = v633;
    uint64_t v43 = v635;
    v628 = v13;
    v629 = ((char *)&v583 - ((unint64_t)(v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v44 = v41;
    sub_100186310(v41, (uint64_t)&v583 - v35);
    char v45 = sub_100063284();
    v623 = v39;
    os_log_t v621 = v21;
    if (v45)
    {
      uint64_t v46 = v14;
      uint64_t v47 = v42;
      goto LABEL_94;
    }
    uint64_t v608 = v44;
    MessageIdentifierSet.ranges.getter((uint64_t)v32);
    uint64_t v116 = sub_10008C44C();
    sub_100007A48((uint64_t)v32, &qword_10070A9C0);
    uint64_t v117 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    if (v116 > 19)
    {
      v117(v612, v42, v43);
      uint64_t v198 = (uint64_t)v629;
      sub_100189D6C(v42, (uint64_t)v629, type metadata accessor for MailboxTaskLogger);
      unint64_t v199 = (*(unsigned __int8 *)(v632 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v632 + 80);
      uint64_t v200 = swift_allocObject();
      sub_1001892B0(v198, v200 + v199, type metadata accessor for MailboxTaskLogger);
      uint64_t v201 = swift_allocObject();
      *(void *)(v201 + 16) = sub_100188DC0;
      *(void *)(v201 + 24) = v200;
      uint64_t v202 = swift_allocObject();
      *(void *)(v202 + 16) = sub_100188DC4;
      *(void *)(v202 + 24) = v201;
      swift_retain();
      swift_retain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_release();
      uint64_t v203 = swift_allocObject();
      *(void *)(v203 + 16) = sub_100188DC0;
      *(void *)(v203 + 24) = v200;
      uint64_t v204 = swift_allocObject();
      *(void *)(v204 + 16) = sub_100188DD4;
      *(void *)(v204 + 24) = v203;
      uint64_t v205 = swift_allocObject();
      *(void *)(v205 + 16) = sub_100188DC0;
      *(void *)(v205 + 24) = v200;
      uint64_t v206 = swift_allocObject();
      v622 = v206;
      *(void *)(v206 + 16) = sub_100188DE4;
      *(void *)(v206 + 24) = v205;
      swift_retain_n();
      swift_retain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_release();
      uint64_t v207 = swift_allocObject();
      *(void *)(v207 + 16) = sub_100188DC0;
      *(void *)(v207 + 24) = v200;
      uint64_t v208 = swift_allocObject();
      uint64_t v604 = v208;
      *(void *)(v208 + 16) = sub_100188DF4;
      *(void *)(v208 + 24) = v207;
      uint64_t v209 = (uint64_t)v623;
      uint64_t v210 = v611;
      sub_1000079E4((uint64_t)v623, v611, &qword_100709E38);
      unint64_t v211 = (v609[80] + 16) & ~(unint64_t)v609[80];
      uint64_t v605 = swift_allocObject();
      sub_10001FDF0(v210, v605 + v211, &qword_100709E38);
      sub_1000079E4(v209, v210, &qword_100709E38);
      uint64_t v212 = swift_allocObject();
      sub_10001FDF0(v210, v212 + v211, &qword_100709E38);
      uint64_t v213 = swift_allocObject();
      uint64_t v602 = v213;
      *(void *)(v213 + 16) = sub_100188E10;
      *(void *)(v213 + 24) = v212;
      os_log_t v589 = (os_log_t)sub_1005E0EB0();
      LODWORD(v588) = sub_1005E25C0();
      os_log_t v592 = (os_log_t)swift_allocObject();
      LOBYTE(v592[2].isa) = 16;
      uint64_t v606 = swift_allocObject();
      *(unsigned char *)(v606 + 16) = 4;
      v609 = (uint8_t *)swift_allocObject();
      v609[16] = 0;
      os_log_t v595 = (os_log_t)swift_allocObject();
      LOBYTE(v595[2].isa) = 1;
      uint64_t v214 = swift_allocObject();
      *(void *)(v214 + 16) = sub_100188DCC;
      *(void *)(v214 + 24) = v202;
      uint64_t v215 = swift_allocObject();
      uint64_t v594 = v215;
      *(void *)(v215 + 16) = sub_100188ECC;
      *(void *)(v215 + 24) = v214;
      uint64_t v596 = swift_allocObject();
      *(unsigned char *)(v596 + 16) = 34;
      uint64_t v597 = swift_allocObject();
      *(unsigned char *)(v597 + 16) = 8;
      uint64_t v216 = swift_allocObject();
      *(void *)(v216 + 16) = sub_100188DDC;
      *(void *)(v216 + 24) = v204;
      uint64_t v217 = swift_allocObject();
      uint64_t v610 = v217;
      *(void *)(v217 + 16) = sub_100188EFC;
      *(void *)(v217 + 24) = v216;
      uint64_t v218 = swift_allocObject();
      *(unsigned char *)(v218 + 16) = 16;
      uint64_t v611 = swift_allocObject();
      *(unsigned char *)(v611 + 16) = 4;
      v593 = (uint8_t *)swift_allocObject();
      v593[16] = 0;
      uint64_t v219 = swift_allocObject();
      *(unsigned char *)(v219 + 16) = 2;
      uint64_t v220 = swift_allocObject();
      int v221 = v622;
      *(void *)(v220 + 16) = sub_100188DEC;
      *(void *)(v220 + 24) = v221;
      uint64_t v222 = swift_allocObject();
      uint64_t v599 = v222;
      *(void *)(v222 + 16) = sub_100188F4C;
      *(void *)(v222 + 24) = v220;
      char v223 = (uint8_t *)swift_allocObject();
      v223[16] = 112;
      uint64_t v585 = swift_allocObject();
      *(unsigned char *)(v585 + 16) = 8;
      uint64_t v224 = swift_allocObject();
      *(void *)(v224 + 16) = 0x786F626C69616DLL;
      uint64_t v225 = swift_allocObject();
      v607 = (uint8_t *)v225;
      *(void *)(v225 + 16) = sub_100188F8C;
      *(void *)(v225 + 24) = v224;
      v622 = swift_allocObject();
      LOBYTE(v622[2].isa) = 37;
      uint64_t v226 = swift_allocObject();
      *(unsigned char *)(v226 + 16) = 8;
      uint64_t v227 = swift_allocObject();
      uint64_t v228 = v604;
      *(void *)(v227 + 16) = sub_100188DFC;
      *(void *)(v227 + 24) = v228;
      uint64_t v229 = swift_allocObject();
      v586 = v229;
      *(void *)(v229 + 16) = sub_100189E9C;
      *(void *)(v229 + 24) = v227;
      os_log_t v601 = (os_log_t)swift_allocObject();
      LOBYTE(v601[2].isa) = 0;
      uint64_t v604 = swift_allocObject();
      *(unsigned char *)(v604 + 16) = 8;
      uint64_t v230 = swift_allocObject();
      uint64_t v231 = v605;
      *(void *)(v230 + 16) = sub_100188E08;
      *(void *)(v230 + 24) = v231;
      uint64_t v232 = swift_allocObject();
      uint64_t v603 = v232;
      *(void *)(v232 + 16) = sub_100188FDC;
      *(void *)(v232 + 24) = v230;
      uint64_t v605 = swift_allocObject();
      *(unsigned char *)(v605 + 16) = 34;
      uint64_t v587 = swift_allocObject();
      *(unsigned char *)(v587 + 16) = 8;
      v590 = v223;
      v591 = v226;
      uint64_t v600 = v219;
      uint64_t v233 = v218;
      uint64_t v598 = v218;
      uint64_t v234 = swift_allocObject();
      uint64_t v235 = v602;
      *(void *)(v234 + 16) = sub_100188E7C;
      *(void *)(v234 + 24) = v235;
      uint64_t v236 = swift_allocObject();
      uint64_t v602 = v236;
      *(void *)(v236 + 16) = sub_100189E9C;
      *(void *)(v236 + 24) = v234;
      sub_10000566C(&qword_10070E4D8);
      uint64_t inited = swift_initStackObject();
      v584 = (uint8_t *)sub_1001D5938(inited, 27);
      os_log_t v238 = v592;
      *char v239 = sub_100188E94;
      v239[1] = v238;
      uint64_t v240 = v606;
      v239[2] = sub_100189ED8;
      v239[3] = v240;
      v239[4] = sub_100187A80;
      v239[5] = 0;
      char v241 = v609;
      v239[6] = sub_100189ED8;
      v239[7] = v241;
      uint64_t v242 = v594;
      os_log_t v243 = v595;
      v239[8] = sub_100189ED8;
      v239[9] = v243;
      v239[10] = sub_100188ED4;
      v239[11] = v242;
      uint64_t v245 = v596;
      uint64_t v244 = v597;
      v239[12] = sub_100189ED8;
      v239[13] = v245;
      v239[14] = sub_100189ED8;
      v239[15] = v244;
      uint64_t v246 = v610;
      v239[16] = sub_100188F04;
      v239[17] = v246;
      v239[18] = sub_100189ED8;
      v239[19] = v233;
      uint64_t v247 = v611;
      v239[20] = sub_100189ED8;
      v239[21] = v247;
      v239[22] = sub_10018A128;
      v239[23] = 0;
      uint64_t v248 = v593;
      v239[24] = sub_100189ED8;
      v239[25] = v248;
      v239[26] = sub_100189ED8;
      v239[27] = v219;
      uint64_t v249 = v599;
      v239[28] = sub_100188F54;
      v239[29] = v249;
      v239[30] = sub_100189ED8;
      v239[31] = v223;
      uint64_t v250 = v585;
      v239[32] = sub_100189ED8;
      v239[33] = v250;
      uint64_t v251 = v607;
      v239[34] = sub_100188F94;
      v239[35] = v251;
      uint64_t v252 = v622;
      v239[36] = sub_100189ED8;
      v239[37] = v252;
      v239[38] = sub_100189ED8;
      v239[39] = v226;
      uint64_t v254 = v586;
      uint64_t v253 = v587;
      v239[40] = sub_100189EC4;
      v239[41] = v254;
      os_log_t v255 = v601;
      v239[42] = sub_100189ED8;
      v239[43] = v255;
      uint64_t v256 = v604;
      v239[44] = sub_100189ED8;
      v239[45] = v256;
      uint64_t v257 = v603;
      v239[46] = sub_100188F94;
      v239[47] = v257;
      uint64_t v258 = v605;
      v239[48] = sub_100189ED8;
      v239[49] = v258;
      v239[50] = sub_100189ED8;
      v239[51] = v253;
      uint64_t v259 = v602;
      v239[52] = sub_100189EC4;
      v239[53] = v259;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      os_log_t v260 = v589;
      if (os_log_type_enabled(v589, (os_log_type_t)v588))
      {
        uint64_t v261 = v606;
        uint64_t v262 = (uint8_t *)sub_1000C6564();
        v638 = swift_slowAlloc();
        uint64_t v639 = 0;
        v583 = v638;
        v584 = v262;
        *(_WORD *)uint64_t v262 = 2307;
        v640[0] = v262 + 2;
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100188E94;
        os_log_t v637 = v592;
        uint64_t v263 = v631;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        if (v263) {
          goto LABEL_222;
        }
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = v261;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        os_log_t v264 = v621;
        uint64_t v47 = v633;
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100187A80;
        os_log_t v637 = 0;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        uint64_t v265 = v590;
        os_log_t v266 = v595;
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v609;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        uint64_t v268 = v596;
        long long v267 = v597;
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = v266;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        uint64_t v269 = v611;
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100188ED4;
        os_log_t v637 = (os_log_t)v594;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = v268;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = v267;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        uint64_t v46 = v634;
        uint64_t v44 = v608;
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100188F04;
        os_log_t v637 = (os_log_t)v610;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v598;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v269;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10018A128;
        os_log_t v637 = 0;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        uint64_t v21 = v264;
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v593;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        uint64_t v270 = v591;
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v600;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100188F54;
        os_log_t v637 = (os_log_t)v599;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v265;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        os_log_t v271 = v607;
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v585;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        int v272 = v604;
        swift_release();
        v636 = sub_100188F94;
        os_log_t v637 = (os_log_t)v271;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = v622;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = v270;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC4;
        os_log_t v637 = v586;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = v601;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = v272;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = sub_100188F94;
        os_log_t v637 = (os_log_t)v603;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v605;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v587;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC4;
        os_log_t v637 = (os_log_t)v602;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        v631 = 0;
        uint64_t v273 = v612;
        swift_release();
        os_log_t v274 = v589;
        _os_log_impl((void *)&_mh_execute_header, v589, (os_log_type_t)v588, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed %ld UIDs: ... %{public}s", v584, 0x47u);
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_1000C65A8();

        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v273, v635);
LABEL_94:
        uint64_t v275 = v625;
        uint64_t v276 = HIDWORD(v625) & 1;
        uint64_t v277 = sub_1001865EC(v44, v625 | (unint64_t)(v276 << 32));
        if (v277 < 1) {
          goto LABEL_97;
        }
        unint64_t v278 = v277;
        unint64_t v279 = v275 | (v276 << 32);
        os_log_t v280 = v619;
        sub_1001867F4(1109, v44, v279, (uint64_t)v619);
        if ((*(unsigned int (**)(os_log_t, uint64_t, uint64_t))(v624 + 48))(v280, 1, v618) == 1)
        {
          sub_100007A48((uint64_t)v280, &qword_10070CEA0);
LABEL_97:
          uint64_t v281 = v630;
          if ((v626 & 1) == 0)
          {
LABEL_98:
            uint64_t v282 = v281 + *(int *)(type metadata accessor for MailboxSyncState() + 48);
            uint64_t v283 = v617;
            sub_10007B438(v617);
            uint64_t v284 = sub_10007AE00(*(void *)(v282 + 40), *(unsigned char *)(v282 + 48));
            (*(void (**)(NSObject *, uint64_t, uint64_t))(v46 + 16))(v21, v47, v635);
            uint64_t v285 = (uint64_t)v629;
            sub_100189D6C(v47, (uint64_t)v629, type metadata accessor for MailboxTaskLogger);
            unint64_t v286 = (*(unsigned __int8 *)(v632 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v632 + 80);
            uint64_t v287 = swift_allocObject();
            sub_1001892B0(v285, v287 + v286, type metadata accessor for MailboxTaskLogger);
            uint64_t v288 = swift_allocObject();
            *(void *)(v288 + 16) = sub_100188DC0;
            *(void *)(v288 + 24) = v287;
            uint64_t v289 = swift_allocObject();
            *(void *)(v289 + 16) = sub_100189EA0;
            *(void *)(v289 + 24) = v288;
            swift_retain();
            swift_retain();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            swift_release();
            uint64_t v290 = swift_allocObject();
            *(void *)(v290 + 16) = sub_100188DC0;
            *(void *)(v290 + 24) = v287;
            uint64_t v291 = swift_allocObject();
            *(void *)(v291 + 16) = sub_100189EA8;
            *(void *)(v291 + 24) = v290;
            uint64_t v292 = swift_allocObject();
            *(void *)(v292 + 16) = sub_100188DC0;
            *(void *)(v292 + 24) = v287;
            uint64_t v293 = swift_allocObject();
            *(void *)(v293 + 16) = sub_100189EB0;
            *(void *)(v293 + 24) = v292;
            swift_retain_n();
            swift_retain();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            swift_release();
            uint64_t v294 = swift_allocObject();
            *(void *)(v294 + 16) = sub_100188DC0;
            *(void *)(v294 + 24) = v287;
            uint64_t v295 = swift_allocObject();
            *(void *)(v295 + 16) = sub_100189EB8;
            *(void *)(v295 + 24) = v294;
            uint64_t v296 = swift_allocObject();
            *(void *)(v296 + 16) = v283;
            uint64_t v297 = v296;
            v616 = swift_allocObject();
            v616[2].char isa = (Class)v284;
            os_log_t v615 = (os_log_t)sub_1005E0EB0();
            LODWORD(v611) = sub_1005E25C0();
            uint64_t v613 = swift_allocObject();
            *(unsigned char *)(v613 + 16) = 16;
            uint64_t v617 = swift_allocObject();
            *(unsigned char *)(v617 + 16) = 4;
            v607 = (uint8_t *)swift_allocObject();
            v607[16] = 0;
            uint64_t v608 = swift_allocObject();
            *(unsigned char *)(v608 + 16) = 1;
            uint64_t v298 = swift_allocObject();
            *(void *)(v298 + 16) = sub_100189EA4;
            *(void *)(v298 + 24) = v289;
            uint64_t v299 = swift_allocObject();
            *(void *)(v299 + 16) = sub_10018A12C;
            *(void *)(v299 + 24) = v298;
            uint64_t v620 = swift_allocObject();
            *(unsigned char *)(v620 + 16) = 34;
            v622 = swift_allocObject();
            LOBYTE(v622[2].isa) = 8;
            uint64_t v300 = swift_allocObject();
            *(void *)(v300 + 16) = sub_100189EAC;
            *(void *)(v300 + 24) = v291;
            uint64_t v301 = swift_allocObject();
            unint64_t v625 = v301;
            *(void *)(v301 + 16) = sub_100189E9C;
            *(void *)(v301 + 24) = v300;
            uint64_t v626 = swift_allocObject();
            *(unsigned char *)(v626 + 16) = 16;
            v627 = (char *)swift_allocObject();
            v627[16] = 4;
            uint64_t v614 = swift_allocObject();
            *(unsigned char *)(v614 + 16) = 0;
            v628 = (char *)swift_allocObject();
            v628[16] = 2;
            uint64_t v302 = swift_allocObject();
            *(void *)(v302 + 16) = sub_100189EB4;
            *(void *)(v302 + 24) = v293;
            uint64_t v303 = swift_allocObject();
            v629 = v303;
            *(void *)(v303 + 16) = sub_10018A130;
            *(void *)(v303 + 24) = v302;
            uint64_t v304 = swift_allocObject();
            *(unsigned char *)(v304 + 16) = 112;
            uint64_t v630 = swift_allocObject();
            *(unsigned char *)(v630 + 16) = 8;
            uint64_t v305 = swift_allocObject();
            *(void *)(v305 + 16) = 0x786F626C69616DLL;
            uint64_t v306 = swift_allocObject();
            uint64_t v618 = v306;
            *(void *)(v306 + 16) = sub_100189ED4;
            *(void *)(v306 + 24) = v305;
            v609 = (uint8_t *)swift_allocObject();
            v609[16] = 37;
            uint64_t v633 = swift_allocObject();
            *(unsigned char *)(v633 + 16) = 8;
            uint64_t v307 = swift_allocObject();
            *(void *)(v307 + 16) = sub_100189EBC;
            *(void *)(v307 + 24) = v295;
            uint64_t v308 = swift_allocObject();
            uint64_t v610 = v308;
            *(void *)(v308 + 16) = sub_100189E9C;
            *(void *)(v308 + 24) = v307;
            uint64_t v632 = swift_allocObject();
            *(unsigned char *)(v632 + 16) = 0;
            uint64_t v624 = swift_allocObject();
            *(unsigned char *)(v624 + 16) = 8;
            uint64_t v309 = swift_allocObject();
            *(void *)(v309 + 16) = j___s15IMAP2Connection07CommandB0C12RecentErrorsV10StatisticsV17networkErrorCountSivg;
            *(void *)(v309 + 24) = v297;
            uint64_t v310 = swift_allocObject();
            os_log_t v619 = v310;
            v310[2].char isa = (Class)sub_10018A134;
            v310[3].char isa = (Class)v309;
            uint64_t v311 = swift_allocObject();
            *(unsigned char *)(v311 + 16) = 0;
            uint64_t v312 = v311;
            uint64_t v612 = swift_allocObject();
            *(unsigned char *)(v612 + 16) = 8;
            uint64_t v313 = swift_allocObject();
            uint64_t v314 = v616;
            *(void *)(v313 + 16) = j___s15IMAP2Connection07CommandB0C12RecentErrorsV10StatisticsV17networkErrorCountSivg;
            *(void *)(v313 + 24) = v314;
            uint64_t v315 = swift_allocObject();
            v616 = v315;
            *(void *)(v315 + 16) = sub_10018A134;
            *(void *)(v315 + 24) = v313;
            sub_10000566C(&qword_10070E4D8);
            uint64_t v316 = swift_allocObject();
            uint64_t v606 = sub_1001D5938(v316, 27);
            uint64_t v317 = v613;
            *uint64_t v318 = sub_100189ED8;
            v318[1] = v317;
            uint64_t v319 = v617;
            v318[2] = sub_100189ED8;
            v318[3] = v319;
            v318[4] = sub_100187A80;
            v318[5] = 0;
            uint64_t v320 = v607;
            uint64_t v321 = v608;
            v318[6] = sub_100189ED8;
            v318[7] = v320;
            v318[8] = sub_100189ED8;
            v318[9] = v321;
            v318[10] = sub_100189EC8;
            v318[11] = v299;
            uint64_t v322 = v620;
            v318[12] = sub_100189ED8;
            v318[13] = v322;
            v323 = v622;
            v318[14] = sub_100189ED8;
            v318[15] = v323;
            unint64_t v324 = v625;
            v318[16] = sub_100189EC4;
            v318[17] = v324;
            uint64_t v325 = v626;
            v318[18] = sub_100189ED8;
            v318[19] = v325;
            v326 = v627;
            v318[20] = sub_100189ED8;
            v318[21] = v326;
            v318[22] = sub_10018A128;
            v318[23] = 0;
            uint64_t v327 = v614;
            v318[24] = sub_100189ED8;
            v318[25] = v327;
            v328 = v628;
            v318[26] = sub_100189ED8;
            v318[27] = v328;
            uint64_t v329 = (uint64_t)v629;
            v318[28] = sub_100189ECC;
            v318[29] = v329;
            v318[30] = sub_100189ED8;
            v318[31] = v304;
            uint64_t v330 = v630;
            v318[32] = sub_100189ED8;
            v318[33] = v330;
            uint64_t v331 = v618;
            v318[34] = sub_100189ED0;
            v318[35] = v331;
            uint64_t v333 = v609;
            uint64_t v332 = v610;
            v318[36] = sub_100189ED8;
            v318[37] = v333;
            uint64_t v334 = v633;
            v318[38] = sub_100189ED8;
            v318[39] = v334;
            v318[40] = sub_100189EC4;
            v318[41] = v332;
            uint64_t v335 = v632;
            v318[42] = sub_100189ED8;
            v318[43] = v335;
            uint64_t v336 = v624;
            v318[44] = sub_100189ED8;
            v318[45] = v336;
            os_log_t v337 = v619;
            v318[46] = sub_100189ED0;
            v318[47] = v337;
            v318[48] = sub_100189ED8;
            v318[49] = v312;
            uint64_t v338 = v312;
            uint64_t v339 = v612;
            v318[50] = sub_100189ED8;
            v318[51] = v339;
            uint64_t v340 = v616;
            v318[52] = sub_100189ED0;
            v318[53] = v340;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (!os_log_type_enabled(v615, (os_log_type_t)v611))
            {
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();

LABEL_158:
              (*(void (**)(os_log_t, uint64_t))(v634 + 8))(v621, v635);
              return sub_100007A48((uint64_t)v623, &qword_100709E38);
            }
            uint64_t v604 = v299;
            uint64_t v605 = v304;
            uint64_t v606 = v338;
            v341 = (uint8_t *)sub_1000C6564();
            v638 = swift_slowAlloc();
            uint64_t v639 = 0;
            uint64_t v603 = (uint64_t)v638;
            *(_WORD *)v341 = 2307;
            v640[0] = v341 + 2;
            v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
            os_log_t v637 = (os_log_t)v613;
            v342 = v631;
            sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
            if (!v342)
            {
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v617;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              uint64_t v343 = v620;
              v344 = v607;
              v345 = v608;
              v631 = v341;
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100187A80;
              os_log_t v637 = 0;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              v346 = v618;
              v347 = v605;
              v348 = v628;
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v344;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              unint64_t v349 = v626;
              uint64_t v350 = v627;
              uint64_t v351 = v625;
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v345;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC8;
              os_log_t v637 = (os_log_t)v604;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v343;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v622;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC4;
              os_log_t v637 = v351;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v349;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v350;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              os_log_t v352 = v619;
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10018A128;
              os_log_t v637 = 0;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              uint64_t v353 = v624;
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v614;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              v354 = v632;
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v348;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              uint64_t v355 = v610;
              v356 = v633;
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ECC;
              os_log_t v637 = v629;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v347;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v630;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = sub_100189ED0;
              os_log_t v637 = v346;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v609;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v356;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC4;
              os_log_t v637 = v355;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v354;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v353;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = sub_100189ED0;
              os_log_t v637 = v352;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v606;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v612;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = sub_100189ED0;
              os_log_t v637 = v616;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              os_log_t v357 = v615;
              _os_log_impl((void *)&_mh_execute_header, v615, (os_log_type_t)v611, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed %ld pending expunge, %ld remaining.", v631, 0x47u);
              swift_arrayDestroy();
              swift_slowDealloc();
              sub_1000C65A8();

              goto LABEL_158;
            }
            goto LABEL_222;
          }
          goto LABEL_196;
        }
        uint64_t v358 = v620;
        sub_1001892B0((uint64_t)v280, v620, _s15MissingMessagesO10NewMissingVMa);
        unint64_t v359 = *(void (**)(NSObject *, uint64_t, uint64_t))(v46 + 16);
        uint64_t v360 = v632;
        if (v278 > 0x13)
        {
          v359(v616, v47, v635);
          uint64_t v439 = v47;
          uint64_t v440 = (uint64_t)v629;
          sub_100189D6C(v439, (uint64_t)v629, type metadata accessor for MailboxTaskLogger);
          unint64_t v441 = (*(unsigned __int8 *)(v360 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v360 + 80);
          uint64_t v442 = swift_allocObject();
          sub_1001892B0(v440, v442 + v441, type metadata accessor for MailboxTaskLogger);
          uint64_t v443 = swift_allocObject();
          *(void *)(v443 + 16) = sub_100188DC0;
          *(void *)(v443 + 24) = v442;
          uint64_t v444 = swift_allocObject();
          *(void *)(v444 + 16) = sub_100189EA0;
          *(void *)(v444 + 24) = v443;
          swift_retain();
          swift_retain();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          swift_release();
          uint64_t v445 = swift_allocObject();
          *(void *)(v445 + 16) = sub_100188DC0;
          *(void *)(v445 + 24) = v442;
          uint64_t v446 = swift_allocObject();
          v622 = v446;
          *(void *)(v446 + 16) = sub_100189EA8;
          *(void *)(v446 + 24) = v445;
          uint64_t v447 = swift_allocObject();
          *(void *)(v447 + 16) = sub_100188DC0;
          *(void *)(v447 + 24) = v442;
          uint64_t v448 = swift_allocObject();
          unint64_t v625 = v448;
          *(void *)(v448 + 16) = sub_100189EB0;
          *(void *)(v448 + 24) = v447;
          swift_retain_n();
          swift_retain();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          swift_release();
          uint64_t v449 = swift_allocObject();
          *(void *)(v449 + 16) = sub_100188DC0;
          *(void *)(v449 + 24) = v442;
          uint64_t v450 = swift_allocObject();
          uint64_t v608 = v450;
          *(void *)(v450 + 16) = sub_100189EB8;
          *(void *)(v450 + 24) = v449;
          v609 = (uint8_t *)swift_allocObject();
          *((void *)v609 + 2) = v278;
          uint64_t v451 = v614;
          sub_100189D6C(v358, v614, _s15MissingMessagesO10NewMissingVMa);
          unint64_t v452 = (*(unsigned __int8 *)(v624 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v624 + 80);
          uint64_t v610 = swift_allocObject();
          sub_1001892B0(v451, v610 + v452, _s15MissingMessagesO10NewMissingVMa);
          sub_100189D6C(v358, v451, _s15MissingMessagesO10NewMissingVMa);
          uint64_t v453 = swift_allocObject();
          sub_1001892B0(v451, v453 + v452, _s15MissingMessagesO10NewMissingVMa);
          uint64_t v454 = swift_allocObject();
          *(void *)(v454 + 16) = sub_10018939C;
          *(void *)(v454 + 24) = v453;
          os_log_t v595 = (os_log_t)sub_1005E0EB0();
          LODWORD(v594) = sub_1005E25A0();
          uint64_t v598 = swift_allocObject();
          *(unsigned char *)(v598 + 16) = 16;
          uint64_t v455 = swift_allocObject();
          *(unsigned char *)(v455 + 16) = 4;
          uint64_t v611 = swift_allocObject();
          *(unsigned char *)(v611 + 16) = 0;
          uint64_t v613 = swift_allocObject();
          *(unsigned char *)(v613 + 16) = 1;
          uint64_t v456 = swift_allocObject();
          *(void *)(v456 + 16) = sub_100189EA4;
          *(void *)(v456 + 24) = v444;
          uint64_t v457 = swift_allocObject();
          uint64_t v612 = v457;
          *(void *)(v457 + 16) = sub_10018A12C;
          *(void *)(v457 + 24) = v456;
          uint64_t v614 = swift_allocObject();
          *(unsigned char *)(v614 + 16) = 34;
          uint64_t v599 = swift_allocObject();
          *(unsigned char *)(v599 + 16) = 8;
          uint64_t v458 = swift_allocObject();
          v459 = v622;
          *(void *)(v458 + 16) = sub_100189EAC;
          *(void *)(v458 + 24) = v459;
          v460 = swift_allocObject();
          os_log_t v615 = v460;
          v460[2].char isa = (Class)sub_100189E9C;
          v460[3].char isa = (Class)v458;
          uint64_t v600 = swift_allocObject();
          *(unsigned char *)(v600 + 16) = 16;
          uint64_t v618 = swift_allocObject();
          *(unsigned char *)(v618 + 16) = 4;
          os_log_t v601 = (os_log_t)swift_allocObject();
          LOBYTE(v601[2].isa) = 0;
          v622 = swift_allocObject();
          LOBYTE(v622[2].isa) = 2;
          uint64_t v461 = swift_allocObject();
          unint64_t v462 = v625;
          *(void *)(v461 + 16) = sub_100189EB4;
          *(void *)(v461 + 24) = v462;
          v463 = swift_allocObject();
          os_log_t v619 = v463;
          v463[2].char isa = (Class)sub_10018A130;
          v463[3].char isa = (Class)v461;
          uint64_t v464 = swift_allocObject();
          *(unsigned char *)(v464 + 16) = 112;
          uint64_t v465 = v464;
          uint64_t v624 = swift_allocObject();
          *(unsigned char *)(v624 + 16) = 8;
          uint64_t v466 = swift_allocObject();
          *(void *)(v466 + 16) = 0x786F626C69616DLL;
          uint64_t v467 = swift_allocObject();
          uint64_t v602 = v467;
          *(void *)(v467 + 16) = sub_100189ED4;
          *(void *)(v467 + 24) = v466;
          unint64_t v625 = swift_allocObject();
          *(unsigned char *)(v625 + 16) = 37;
          uint64_t v603 = swift_allocObject();
          *(unsigned char *)(v603 + 16) = 8;
          uint64_t v468 = swift_allocObject();
          uint64_t v469 = v608;
          *(void *)(v468 + 16) = sub_100189EBC;
          *(void *)(v468 + 24) = v469;
          uint64_t v470 = swift_allocObject();
          *(void *)(v470 + 16) = sub_100189E9C;
          *(void *)(v470 + 24) = v468;
          v593 = (uint8_t *)swift_allocObject();
          v593[16] = 0;
          uint64_t v596 = swift_allocObject();
          *(unsigned char *)(v596 + 16) = 8;
          uint64_t v471 = swift_allocObject();
          v472 = v609;
          *(void *)(v471 + 16) = j___s15IMAP2Connection07CommandB0C12RecentErrorsV10StatisticsV17networkErrorCountSivg;
          *(void *)(v471 + 24) = v472;
          uint64_t v473 = swift_allocObject();
          uint64_t v604 = v473;
          *(void *)(v473 + 16) = sub_10018A134;
          *(void *)(v473 + 24) = v471;
          uint64_t v605 = swift_allocObject();
          *(unsigned char *)(v605 + 16) = 0;
          v607 = (uint8_t *)swift_allocObject();
          v607[16] = 8;
          uint64_t v474 = swift_allocObject();
          uint64_t v475 = v610;
          *(void *)(v474 + 16) = sub_100189330;
          *(void *)(v474 + 24) = v475;
          uint64_t v476 = swift_allocObject();
          uint64_t v606 = v476;
          *(void *)(v476 + 16) = sub_10018A134;
          *(void *)(v476 + 24) = v474;
          uint64_t v608 = swift_allocObject();
          *(unsigned char *)(v608 + 16) = 34;
          v609 = (uint8_t *)swift_allocObject();
          v609[16] = 8;
          uint64_t v597 = v455;
          uint64_t v477 = swift_allocObject();
          *(void *)(v477 + 16) = sub_100189EC0;
          *(void *)(v477 + 24) = v454;
          uint64_t v478 = swift_allocObject();
          uint64_t v610 = v478;
          *(void *)(v478 + 16) = sub_100189E9C;
          *(void *)(v478 + 24) = v477;
          sub_10000566C(&qword_10070E4D8);
          uint64_t v479 = swift_allocObject();
          v590 = (uint8_t *)sub_1001D5938(v479, 30);
          uint64_t v480 = v598;
          void *v481 = sub_100189ED8;
          v481[1] = v480;
          v481[2] = sub_100189ED8;
          v481[3] = v455;
          v481[4] = sub_100187A80;
          v481[5] = 0;
          uint64_t v482 = v611;
          v481[6] = sub_100189ED8;
          v481[7] = v482;
          uint64_t v483 = v613;
          v481[8] = sub_100189ED8;
          v481[9] = v483;
          uint64_t v484 = v612;
          v481[10] = sub_100189EC8;
          v481[11] = v484;
          uint64_t v485 = v614;
          v481[12] = sub_100189ED8;
          v481[13] = v485;
          uint64_t v487 = v599;
          uint64_t v486 = v600;
          v481[14] = sub_100189ED8;
          v481[15] = v487;
          os_log_t v488 = v615;
          v481[16] = sub_100189EC4;
          v481[17] = v488;
          v481[18] = sub_100189ED8;
          v481[19] = v486;
          uint64_t v489 = v618;
          v481[20] = sub_100189ED8;
          v481[21] = v489;
          v481[22] = sub_10018A128;
          v481[23] = 0;
          os_log_t v491 = v601;
          uint64_t v490 = v602;
          v481[24] = sub_100189ED8;
          v481[25] = v491;
          v492 = v622;
          v481[26] = sub_100189ED8;
          v481[27] = v492;
          os_log_t v493 = v619;
          v481[28] = sub_100189ECC;
          v481[29] = v493;
          v481[30] = sub_100189ED8;
          v481[31] = v465;
          v494 = v465;
          uint64_t v495 = v624;
          v481[32] = sub_100189ED8;
          v481[33] = v495;
          v481[34] = sub_100189ED0;
          v481[35] = v490;
          unint64_t v496 = v625;
          v481[36] = sub_100189ED8;
          v481[37] = v496;
          uint64_t v498 = v603;
          uint64_t v497 = v604;
          v481[38] = sub_100189ED8;
          v481[39] = v498;
          v481[40] = sub_100189EC4;
          v481[41] = v470;
          v499 = v470;
          v500 = v593;
          v481[42] = sub_100189ED8;
          v481[43] = v500;
          uint64_t v501 = v596;
          v481[44] = sub_100189ED8;
          v481[45] = v501;
          v481[46] = sub_100189ED0;
          v481[47] = v497;
          uint64_t v502 = v605;
          v481[48] = sub_100189ED8;
          v481[49] = v502;
          v503 = v607;
          v481[50] = sub_100189ED8;
          v481[51] = v503;
          uint64_t v504 = v606;
          v481[52] = sub_100189ED0;
          v481[53] = v504;
          uint64_t v505 = v608;
          v481[54] = sub_100189ED8;
          v481[55] = v505;
          v506 = v609;
          v481[56] = sub_100189ED8;
          v481[57] = v506;
          uint64_t v507 = v610;
          v481[58] = sub_100189EC4;
          v481[59] = v507;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v591 = v494;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          os_log_t v592 = v499;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          os_log_t v508 = v595;
          if (os_log_type_enabled(v595, (os_log_type_t)v594))
          {
            v509 = (uint8_t *)sub_1000C6564();
            v638 = swift_slowAlloc();
            uint64_t v639 = 0;
            os_log_t v589 = v638;
            *(_WORD *)v509 = 2563;
            v640[0] = v509 + 2;
            v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
            os_log_t v637 = (os_log_t)v598;
            v510 = v631;
            sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
            uint64_t v46 = v634;
            if (!v510)
            {
              v590 = v509;
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v597;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              uint64_t v511 = v620;
              os_log_t v512 = v601;
              v513 = v618;
              v514 = v599;
              v515 = v613;
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100187A80;
              os_log_t v637 = 0;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              v516 = v600;
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v611;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v515;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC8;
              os_log_t v637 = (os_log_t)v612;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              uint64_t v433 = v511;
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v614;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v514;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC4;
              os_log_t v637 = v615;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v516;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v513;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              uint64_t v21 = v621;
              uint64_t v47 = v633;
              v517 = v607;
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10018A128;
              os_log_t v637 = 0;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v512;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v622;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ECC;
              os_log_t v637 = v619;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v591;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v624;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              v518 = v616;
              swift_release();
              v636 = sub_100189ED0;
              os_log_t v637 = (os_log_t)v602;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v625;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v603;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC4;
              os_log_t v637 = v592;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v593;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v596;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = sub_100189ED0;
              os_log_t v637 = (os_log_t)v604;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v605;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v517;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = sub_100189ED0;
              os_log_t v637 = (os_log_t)v606;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v608;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v609;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC4;
              os_log_t v637 = (os_log_t)v610;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              v631 = 0;
              swift_release();
              os_log_t v519 = v595;
              _os_log_impl((void *)&_mh_execute_header, v595, (os_log_type_t)v594, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld missing UIDs, adding %ld UIDs as missing: ... %{public}s", v590, 0x51u);
              swift_arrayDestroy();
              swift_slowDealloc();
              sub_1000C65A8();

              (*(void (**)(NSObject *, uint64_t))(v46 + 8))(v518, v635);
LABEL_195:
              uint64_t v281 = v630;
              type metadata accessor for MailboxSyncState();
              sub_100072678(v433);
              sub_100189DD4(v433, _s15MissingMessagesO10NewMissingVMa);
              if ((v626 & 1) == 0) {
                goto LABEL_98;
              }
LABEL_196:
              (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v627, v47, v635);
              uint64_t v520 = (uint64_t)v629;
              sub_100189D6C(v47, (uint64_t)v629, type metadata accessor for MailboxTaskLogger);
              unint64_t v521 = (*(unsigned __int8 *)(v632 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v632 + 80);
              uint64_t v522 = swift_allocObject();
              sub_1001892B0(v520, v522 + v521, type metadata accessor for MailboxTaskLogger);
              uint64_t v523 = swift_allocObject();
              *(void *)(v523 + 16) = sub_100188DC0;
              *(void *)(v523 + 24) = v522;
              uint64_t v524 = swift_allocObject();
              *(void *)(v524 + 16) = sub_100189EA0;
              *(void *)(v524 + 24) = v523;
              swift_retain();
              swift_retain();
              variable initialization expression of Engine.isProcessingUpdates();
              variable initialization expression of Engine.isProcessingUpdates();
              variable initialization expression of Engine.isProcessingUpdates();
              swift_release();
              uint64_t v525 = swift_allocObject();
              *(void *)(v525 + 16) = sub_100188DC0;
              *(void *)(v525 + 24) = v522;
              uint64_t v526 = swift_allocObject();
              *(void *)(v526 + 16) = sub_100189EA8;
              *(void *)(v526 + 24) = v525;
              uint64_t v527 = swift_allocObject();
              *(void *)(v527 + 16) = sub_100188DC0;
              *(void *)(v527 + 24) = v522;
              uint64_t v528 = swift_allocObject();
              *(void *)(v528 + 16) = sub_100189EB0;
              *(void *)(v528 + 24) = v527;
              swift_retain_n();
              swift_retain();
              variable initialization expression of Engine.isProcessingUpdates();
              variable initialization expression of Engine.isProcessingUpdates();
              variable initialization expression of Engine.isProcessingUpdates();
              swift_release();
              uint64_t v529 = swift_allocObject();
              *(void *)(v529 + 16) = sub_100188DC0;
              *(void *)(v529 + 24) = v522;
              uint64_t v530 = swift_allocObject();
              *(void *)(v530 + 16) = sub_100189EB8;
              *(void *)(v530 + 24) = v529;
              os_log_t v621 = (os_log_t)sub_1005E0EB0();
              LODWORD(v618) = sub_1005E25C0();
              uint64_t v531 = swift_allocObject();
              *(unsigned char *)(v531 + 16) = 16;
              uint64_t v532 = v531;
              unint64_t v625 = swift_allocObject();
              *(unsigned char *)(v625 + 16) = 4;
              uint64_t v626 = swift_allocObject();
              *(unsigned char *)(v626 + 16) = 0;
              v628 = (char *)swift_allocObject();
              v628[16] = 1;
              uint64_t v533 = swift_allocObject();
              *(void *)(v533 + 16) = sub_100189EA4;
              *(void *)(v533 + 24) = v524;
              uint64_t v534 = swift_allocObject();
              v629 = v534;
              *(void *)(v534 + 16) = sub_10018A12C;
              *(void *)(v534 + 24) = v533;
              os_log_t v619 = (os_log_t)swift_allocObject();
              LOBYTE(v619[2].isa) = 34;
              uint64_t v630 = swift_allocObject();
              *(unsigned char *)(v630 + 16) = 8;
              uint64_t v535 = swift_allocObject();
              *(void *)(v535 + 16) = sub_100189EAC;
              *(void *)(v535 + 24) = v526;
              uint64_t v536 = swift_allocObject();
              uint64_t v624 = v536;
              *(void *)(v536 + 16) = sub_100189E9C;
              *(void *)(v536 + 24) = v535;
              v622 = swift_allocObject();
              LOBYTE(v622[2].isa) = 16;
              uint64_t v632 = swift_allocObject();
              *(unsigned char *)(v632 + 16) = 4;
              uint64_t v537 = swift_allocObject();
              *(unsigned char *)(v537 + 16) = 0;
              uint64_t v538 = swift_allocObject();
              *(unsigned char *)(v538 + 16) = 2;
              uint64_t v539 = swift_allocObject();
              *(void *)(v539 + 16) = sub_100189EB4;
              *(void *)(v539 + 24) = v528;
              uint64_t v540 = swift_allocObject();
              *(void *)(v540 + 16) = sub_10018A130;
              *(void *)(v540 + 24) = v539;
              v541 = v540;
              uint64_t v542 = swift_allocObject();
              *(unsigned char *)(v542 + 16) = 112;
              v616 = swift_allocObject();
              LOBYTE(v616[2].isa) = 8;
              uint64_t v543 = swift_allocObject();
              *(void *)(v543 + 16) = 0x786F626C69616DLL;
              uint64_t v544 = swift_allocObject();
              *(void *)(v544 + 16) = sub_100189ED4;
              *(void *)(v544 + 24) = v543;
              uint64_t v545 = v544;
              uint64_t v617 = swift_allocObject();
              *(unsigned char *)(v617 + 16) = 37;
              uint64_t v620 = swift_allocObject();
              *(unsigned char *)(v620 + 16) = 8;
              uint64_t v546 = swift_allocObject();
              *(void *)(v546 + 16) = sub_100189EBC;
              *(void *)(v546 + 24) = v530;
              uint64_t v547 = swift_allocObject();
              uint64_t v633 = v547;
              *(void *)(v547 + 16) = sub_100189E9C;
              *(void *)(v547 + 24) = v546;
              sub_10000566C(&qword_10070E4D8);
              uint64_t v548 = swift_allocObject();
              uint64_t v611 = sub_1001D5938(v548, 21);
              void *v549 = sub_100189ED8;
              v549[1] = v532;
              uint64_t v550 = v532;
              unint64_t v551 = v625;
              v549[2] = sub_100189ED8;
              v549[3] = v551;
              v549[4] = sub_100187A80;
              v549[5] = 0;
              uint64_t v552 = v626;
              v549[6] = sub_100189ED8;
              v549[7] = v552;
              v553 = v628;
              v549[8] = sub_100189ED8;
              v549[9] = v553;
              uint64_t v554 = (uint64_t)v629;
              v549[10] = sub_100189EC8;
              v549[11] = v554;
              os_log_t v555 = v619;
              v549[12] = sub_100189ED8;
              v549[13] = v555;
              uint64_t v556 = v630;
              v549[14] = sub_100189ED8;
              v549[15] = v556;
              uint64_t v557 = v624;
              v549[16] = sub_100189EC4;
              v549[17] = v557;
              v558 = v622;
              v549[18] = sub_100189ED8;
              v549[19] = v558;
              uint64_t v559 = v632;
              v549[20] = sub_100189ED8;
              v549[21] = v559;
              v549[22] = sub_10018A128;
              v549[23] = 0;
              v549[24] = sub_100189ED8;
              v549[25] = v537;
              v549[26] = sub_100189ED8;
              v549[27] = v538;
              v549[28] = sub_100189ECC;
              v549[29] = v541;
              v560 = v541;
              v549[30] = sub_100189ED8;
              v549[31] = v542;
              v562 = v616;
              uint64_t v561 = v617;
              v549[32] = sub_100189ED8;
              v549[33] = v562;
              v549[34] = sub_100189ED0;
              v549[35] = v545;
              uint64_t v563 = v545;
              v549[36] = sub_100189ED8;
              v549[37] = v561;
              uint64_t v564 = v620;
              v549[38] = sub_100189ED8;
              v549[39] = v564;
              uint64_t v565 = v633;
              v549[40] = sub_100189EC4;
              v549[41] = v565;
              uint64_t v612 = v550;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              uint64_t v614 = v537;
              swift_retain();
              uint64_t v613 = v538;
              swift_retain();
              os_log_t v615 = v560;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_bridgeObjectRelease();
              if (!os_log_type_enabled(v621, (os_log_type_t)v618))
              {
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();

                (*(void (**)(char *, uint64_t))(v634 + 8))(v627, v635);
                return sub_100007A48((uint64_t)v623, &qword_100709E38);
              }
              uint64_t v566 = v624;
              uint64_t v610 = v542;
              uint64_t v611 = v563;
              uint64_t v567 = v634;
              v568 = (uint8_t *)sub_1000C6564();
              v638 = swift_slowAlloc();
              uint64_t v639 = 0;
              uint64_t v608 = (uint64_t)v638;
              v609 = v568;
              *(_WORD *)v568 = 1795;
              v640[0] = v568 + 2;
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v612;
              v569 = v631;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              if (!v569)
              {
                swift_release();
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
                os_log_t v637 = (os_log_t)v625;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                v570 = v632;
                v571 = v566;
                os_log_t v572 = v619;
                v573 = v628;
                uint64_t v574 = v567;
                swift_release();
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100187A80;
                os_log_t v637 = 0;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                v575 = v613;
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
                os_log_t v637 = (os_log_t)v626;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                uint64_t v576 = v614;
                swift_release();
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
                os_log_t v637 = v573;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                swift_release();
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC8;
                os_log_t v637 = v629;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                swift_release();
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
                os_log_t v637 = v572;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                swift_release();
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
                os_log_t v637 = (os_log_t)v630;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                swift_release();
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC4;
                os_log_t v637 = v571;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                swift_release();
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
                os_log_t v637 = v622;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                swift_release();
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
                os_log_t v637 = v570;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                v577 = v627;
                v578 = v610;
                swift_release();
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10018A128;
                os_log_t v637 = 0;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                uint64_t v579 = v620;
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
                os_log_t v637 = (os_log_t)v576;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                uint64_t v580 = v611;
                swift_release();
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
                os_log_t v637 = v575;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                v581 = v616;
                swift_release();
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ECC;
                os_log_t v637 = v615;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                swift_release();
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
                os_log_t v637 = v578;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                swift_release();
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
                os_log_t v637 = v581;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                swift_release();
                v636 = sub_100189ED0;
                os_log_t v637 = (os_log_t)v580;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                swift_release();
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
                os_log_t v637 = (os_log_t)v617;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                swift_release();
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
                os_log_t v637 = (os_log_t)v579;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                swift_release();
                v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC4;
                os_log_t v637 = (os_log_t)v633;
                sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
                swift_release();
                os_log_t v582 = v621;
                _os_log_impl((void *)&_mh_execute_header, v621, (os_log_type_t)v618, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Did not remove any pending expunge.", v609, 0x33u);
                swift_arrayDestroy();
                swift_slowDealloc();
                sub_1000C65A8();

                (*(void (**)(char *, uint64_t))(v574 + 8))(v577, v635);
                return sub_100007A48((uint64_t)v623, &qword_100709E38);
              }
            }
LABEL_222:
            swift_errorRelease();
            __break(1u);
            uint64_t result = swift_errorRelease();
            __break(1u);
            return result;
          }

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v46 = v634;
          (*(void (**)(NSObject *, uint64_t))(v634 + 8))(v616, v635);
        }
        else
        {
          v359(v615, v47, v635);
          uint64_t v361 = v47;
          uint64_t v362 = (uint64_t)v629;
          sub_100189D6C(v361, (uint64_t)v629, type metadata accessor for MailboxTaskLogger);
          unint64_t v363 = (*(unsigned __int8 *)(v360 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v360 + 80);
          uint64_t v364 = swift_allocObject();
          sub_1001892B0(v362, v364 + v363, type metadata accessor for MailboxTaskLogger);
          uint64_t v365 = swift_allocObject();
          *(void *)(v365 + 16) = sub_100188DC0;
          *(void *)(v365 + 24) = v364;
          uint64_t v366 = swift_allocObject();
          unint64_t v625 = v366;
          *(void *)(v366 + 16) = sub_100189EA0;
          *(void *)(v366 + 24) = v365;
          swift_retain();
          swift_retain();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          swift_release();
          uint64_t v367 = swift_allocObject();
          *(void *)(v367 + 16) = sub_100188DC0;
          *(void *)(v367 + 24) = v364;
          uint64_t v368 = swift_allocObject();
          *(void *)(v368 + 16) = sub_100189EA8;
          *(void *)(v368 + 24) = v367;
          uint64_t v369 = swift_allocObject();
          *(void *)(v369 + 16) = sub_100188DC0;
          *(void *)(v369 + 24) = v364;
          uint64_t v370 = swift_allocObject();
          *(void *)(v370 + 16) = sub_100189EB0;
          *(void *)(v370 + 24) = v369;
          swift_retain_n();
          swift_retain();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          swift_release();
          uint64_t v371 = swift_allocObject();
          *(void *)(v371 + 16) = sub_100188DC0;
          *(void *)(v371 + 24) = v364;
          uint64_t v372 = swift_allocObject();
          *(void *)(v372 + 16) = sub_100189EB8;
          *(void *)(v372 + 24) = v371;
          uint64_t v610 = swift_allocObject();
          *(void *)(v610 + 16) = v278;
          uint64_t v373 = v358;
          uint64_t v374 = v614;
          sub_100189D6C(v373, v614, _s15MissingMessagesO10NewMissingVMa);
          unint64_t v375 = (*(unsigned __int8 *)(v624 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v624 + 80);
          uint64_t v376 = swift_allocObject();
          sub_1001892B0(v374, v376 + v375, _s15MissingMessagesO10NewMissingVMa);
          uint64_t v377 = swift_allocObject();
          *(void *)(v377 + 16) = sub_100189678;
          *(void *)(v377 + 24) = v376;
          os_log_t v601 = (os_log_t)sub_1005E0EB0();
          LODWORD(v600) = sub_1005E25A0();
          uint64_t v603 = swift_allocObject();
          *(unsigned char *)(v603 + 16) = 16;
          uint64_t v602 = swift_allocObject();
          *(unsigned char *)(v602 + 16) = 4;
          uint64_t v611 = swift_allocObject();
          *(unsigned char *)(v611 + 16) = 0;
          uint64_t v612 = swift_allocObject();
          *(unsigned char *)(v612 + 16) = 1;
          uint64_t v378 = swift_allocObject();
          unint64_t v379 = v625;
          *(void *)(v378 + 16) = sub_100189EA4;
          *(void *)(v378 + 24) = v379;
          uint64_t v380 = swift_allocObject();
          *(void *)(v380 + 16) = sub_10018A12C;
          *(void *)(v380 + 24) = v378;
          uint64_t v381 = v380;
          uint64_t v613 = swift_allocObject();
          *(unsigned char *)(v613 + 16) = 34;
          v616 = swift_allocObject();
          LOBYTE(v616[2].isa) = 8;
          uint64_t v382 = swift_allocObject();
          *(void *)(v382 + 16) = sub_100189EAC;
          *(void *)(v382 + 24) = v368;
          uint64_t v383 = swift_allocObject();
          uint64_t v614 = v383;
          *(void *)(v383 + 16) = sub_100189E9C;
          *(void *)(v383 + 24) = v382;
          uint64_t v604 = swift_allocObject();
          *(unsigned char *)(v604 + 16) = 16;
          uint64_t v618 = swift_allocObject();
          *(unsigned char *)(v618 + 16) = 4;
          os_log_t v619 = (os_log_t)swift_allocObject();
          LOBYTE(v619[2].isa) = 0;
          uint64_t v624 = swift_allocObject();
          *(unsigned char *)(v624 + 16) = 2;
          uint64_t v384 = swift_allocObject();
          *(void *)(v384 + 16) = sub_100189EB4;
          *(void *)(v384 + 24) = v370;
          uint64_t v385 = swift_allocObject();
          v622 = v385;
          *(void *)(v385 + 16) = sub_10018A130;
          *(void *)(v385 + 24) = v384;
          uint64_t v386 = swift_allocObject();
          *(unsigned char *)(v386 + 16) = 112;
          unint64_t v625 = swift_allocObject();
          *(unsigned char *)(v625 + 16) = 8;
          uint64_t v387 = swift_allocObject();
          *(void *)(v387 + 16) = 0x786F626C69616DLL;
          uint64_t v388 = swift_allocObject();
          *(void *)(v388 + 16) = sub_100189ED4;
          *(void *)(v388 + 24) = v387;
          uint64_t v389 = v388;
          uint64_t v605 = swift_allocObject();
          *(unsigned char *)(v605 + 16) = 37;
          uint64_t v390 = swift_allocObject();
          *(unsigned char *)(v390 + 16) = 8;
          uint64_t v391 = swift_allocObject();
          *(void *)(v391 + 16) = sub_100189EBC;
          *(void *)(v391 + 24) = v372;
          uint64_t v392 = swift_allocObject();
          uint64_t v599 = v392;
          *(void *)(v392 + 16) = sub_100189E9C;
          *(void *)(v392 + 24) = v391;
          uint64_t v597 = swift_allocObject();
          *(unsigned char *)(v597 + 16) = 0;
          uint64_t v598 = swift_allocObject();
          *(unsigned char *)(v598 + 16) = 8;
          uint64_t v393 = swift_allocObject();
          uint64_t v394 = v610;
          *(void *)(v393 + 16) = j___s15IMAP2Connection07CommandB0C12RecentErrorsV10StatisticsV17networkErrorCountSivg;
          *(void *)(v393 + 24) = v394;
          uint64_t v395 = swift_allocObject();
          uint64_t v608 = v395;
          *(void *)(v395 + 16) = sub_10018A134;
          *(void *)(v395 + 24) = v393;
          v609 = (uint8_t *)swift_allocObject();
          v609[16] = 34;
          uint64_t v610 = swift_allocObject();
          *(unsigned char *)(v610 + 16) = 8;
          uint64_t v396 = v390;
          uint64_t v606 = v390;
          uint64_t v397 = swift_allocObject();
          *(void *)(v397 + 16) = sub_100189EC0;
          *(void *)(v397 + 24) = v377;
          uint64_t v398 = swift_allocObject();
          v607 = (uint8_t *)v398;
          *(void *)(v398 + 16) = sub_100189E9C;
          *(void *)(v398 + 24) = v397;
          uint64_t v399 = v602;
          sub_10000566C(&qword_10070E4D8);
          uint64_t v400 = swift_allocObject();
          uint64_t v594 = sub_1001D5938(v400, 27);
          uint64_t v401 = v603;
          void *v402 = sub_100189ED8;
          v402[1] = v401;
          v402[2] = sub_100189ED8;
          v402[3] = v399;
          v402[4] = sub_100187A80;
          v402[5] = 0;
          uint64_t v403 = v611;
          v402[6] = sub_100189ED8;
          v402[7] = v403;
          uint64_t v404 = v612;
          v402[8] = sub_100189ED8;
          v402[9] = v404;
          v402[10] = sub_100189EC8;
          v402[11] = v381;
          v405 = v381;
          uint64_t v406 = v613;
          v402[12] = sub_100189ED8;
          v402[13] = v406;
          v407 = v616;
          v402[14] = sub_100189ED8;
          v402[15] = v407;
          uint64_t v408 = v614;
          v402[16] = sub_100189EC4;
          v402[17] = v408;
          uint64_t v409 = v604;
          v402[18] = sub_100189ED8;
          v402[19] = v409;
          uint64_t v410 = v618;
          v402[20] = sub_100189ED8;
          v402[21] = v410;
          v402[22] = sub_10018A128;
          v402[23] = 0;
          os_log_t v411 = v619;
          v402[24] = sub_100189ED8;
          v402[25] = v411;
          uint64_t v412 = v624;
          v402[26] = sub_100189ED8;
          v402[27] = v412;
          v413 = v622;
          v402[28] = sub_100189ECC;
          v402[29] = v413;
          v402[30] = sub_100189ED8;
          v402[31] = v386;
          unint64_t v414 = v625;
          v402[32] = sub_100189ED8;
          v402[33] = v414;
          v402[34] = sub_100189ED0;
          v402[35] = v389;
          uint64_t v415 = v389;
          uint64_t v416 = v605;
          v402[36] = sub_100189ED8;
          v402[37] = v416;
          v402[38] = sub_100189ED8;
          v402[39] = v396;
          uint64_t v418 = v598;
          uint64_t v417 = v599;
          v402[40] = sub_100189EC4;
          v402[41] = v417;
          uint64_t v419 = v597;
          v402[42] = sub_100189ED8;
          v402[43] = v419;
          v402[44] = sub_100189ED8;
          v402[45] = v418;
          uint64_t v420 = v608;
          v402[46] = sub_100189ED0;
          v402[47] = v420;
          v421 = v609;
          v402[48] = sub_100189ED8;
          v402[49] = v421;
          uint64_t v422 = v610;
          v402[50] = sub_100189ED8;
          v402[51] = v422;
          v423 = v607;
          v402[52] = sub_100189EC4;
          v402[53] = v423;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          os_log_t v595 = v405;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v596 = v415;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          os_log_t v424 = v601;
          if (os_log_type_enabled(v601, (os_log_type_t)v600))
          {
            uint64_t v594 = v386;
            v425 = (uint8_t *)sub_1000C6564();
            v638 = swift_slowAlloc();
            uint64_t v639 = 0;
            os_log_t v592 = v638;
            v593 = v425;
            *(_WORD *)v425 = 2307;
            v640[0] = v425 + 2;
            v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
            os_log_t v637 = (os_log_t)v603;
            v426 = v631;
            sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
            uint64_t v46 = v634;
            if (!v426)
            {
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v602;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              uint64_t v427 = v620;
              v428 = v618;
              v429 = v604;
              v430 = v613;
              uint64_t v431 = v611;
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100187A80;
              os_log_t v637 = 0;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              v432 = v616;
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v431;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              uint64_t v433 = v427;
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v612;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC8;
              os_log_t v637 = v595;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v430;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v432;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              uint64_t v21 = v621;
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC4;
              os_log_t v637 = (os_log_t)v614;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              v434 = v625;
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v429;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              v435 = v624;
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v428;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10018A128;
              os_log_t v637 = 0;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              v436 = v598;
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v619;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              v437 = v594;
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v435;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ECC;
              os_log_t v637 = v622;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v437;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v434;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              uint64_t v47 = v633;
              swift_release();
              v636 = sub_100189ED0;
              os_log_t v637 = (os_log_t)v596;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v605;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v606;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC4;
              os_log_t v637 = (os_log_t)v599;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v597;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = v436;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = sub_100189ED0;
              os_log_t v637 = (os_log_t)v608;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v609;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
              os_log_t v637 = (os_log_t)v610;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              swift_release();
              v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC4;
              os_log_t v637 = (os_log_t)v607;
              sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
              v631 = 0;
              swift_release();
              os_log_t v438 = v601;
              _os_log_impl((void *)&_mh_execute_header, v601, (os_log_type_t)v600, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Found %ld missing UIDs: %{public}s", v593, 0x47u);
              swift_arrayDestroy();
              swift_slowDealloc();
              sub_1000C65A8();

              (*(void (**)(os_log_t, uint64_t))(v46 + 8))(v615, v635);
              goto LABEL_195;
            }
            goto LABEL_222;
          }

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v46 = v634;
          (*(void (**)(os_log_t, uint64_t))(v634 + 8))(v615, v635);
        }
        uint64_t v433 = v620;
        uint64_t v21 = v621;
        uint64_t v47 = v633;
        goto LABEL_195;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v46 = v634;
      (*(void (**)(uint64_t, uint64_t))(v634 + 8))(v612, v635);
    }
    else
    {
      v117((uint64_t)v622, v42, v43);
      uint64_t v118 = (uint64_t)v629;
      sub_100189D6C(v42, (uint64_t)v629, type metadata accessor for MailboxTaskLogger);
      unint64_t v119 = (*(unsigned __int8 *)(v632 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v632 + 80);
      uint64_t v120 = swift_allocObject();
      sub_1001892B0(v118, v120 + v119, type metadata accessor for MailboxTaskLogger);
      uint64_t v121 = swift_allocObject();
      *(void *)(v121 + 16) = sub_100188DC0;
      *(void *)(v121 + 24) = v120;
      uint64_t v122 = swift_allocObject();
      *(void *)(v122 + 16) = sub_100189EA0;
      *(void *)(v122 + 24) = v121;
      swift_retain();
      swift_retain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_release();
      uint64_t v123 = swift_allocObject();
      *(void *)(v123 + 16) = sub_100188DC0;
      *(void *)(v123 + 24) = v120;
      uint64_t v124 = swift_allocObject();
      *(void *)(v124 + 16) = sub_100189EA8;
      *(void *)(v124 + 24) = v123;
      uint64_t v125 = swift_allocObject();
      *(void *)(v125 + 16) = sub_100188DC0;
      *(void *)(v125 + 24) = v120;
      uint64_t v126 = swift_allocObject();
      uint64_t v612 = v126;
      *(void *)(v126 + 16) = sub_100189EB0;
      *(void *)(v126 + 24) = v125;
      swift_retain_n();
      swift_retain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_release();
      uint64_t v127 = swift_allocObject();
      *(void *)(v127 + 16) = sub_100188DC0;
      *(void *)(v127 + 24) = v120;
      uint64_t v128 = swift_allocObject();
      *(void *)(v128 + 16) = sub_100189EB8;
      *(void *)(v128 + 24) = v127;
      uint64_t v129 = (uint64_t)v623;
      uint64_t v130 = v611;
      sub_1000079E4((uint64_t)v623, v611, &qword_100709E38);
      unint64_t v131 = (v609[80] + 16) & ~(unint64_t)v609[80];
      uint64_t v603 = swift_allocObject();
      sub_10001FDF0(v130, v603 + v131, &qword_100709E38);
      sub_1000079E4(v129, v130, &qword_100709E38);
      uint64_t v132 = swift_allocObject();
      sub_10001FDF0(v130, v132 + v131, &qword_100709E38);
      uint64_t v133 = swift_allocObject();
      uint64_t v599 = v133;
      *(void *)(v133 + 16) = sub_100189964;
      *(void *)(v133 + 24) = v132;
      os_log_t v592 = (os_log_t)sub_1005E0EB0();
      LODWORD(v593) = sub_1005E25C0();
      os_log_t v595 = (os_log_t)swift_allocObject();
      LOBYTE(v595[2].isa) = 16;
      uint64_t v604 = swift_allocObject();
      *(unsigned char *)(v604 + 16) = 4;
      uint64_t v605 = swift_allocObject();
      *(unsigned char *)(v605 + 16) = 0;
      v607 = (uint8_t *)swift_allocObject();
      v607[16] = 1;
      uint64_t v134 = swift_allocObject();
      *(void *)(v134 + 16) = sub_100189EA4;
      *(void *)(v134 + 24) = v122;
      uint64_t v135 = swift_allocObject();
      uint64_t v606 = v135;
      *(void *)(v135 + 16) = sub_10018A12C;
      *(void *)(v135 + 24) = v134;
      v609 = (uint8_t *)swift_allocObject();
      v609[16] = 34;
      uint64_t v136 = swift_allocObject();
      *(unsigned char *)(v136 + 16) = 8;
      uint64_t v137 = v136;
      uint64_t v596 = v136;
      uint64_t v138 = swift_allocObject();
      *(void *)(v138 + 16) = sub_100189EAC;
      *(void *)(v138 + 24) = v124;
      uint64_t v139 = swift_allocObject();
      uint64_t v610 = v139;
      *(void *)(v139 + 16) = sub_100189E9C;
      *(void *)(v139 + 24) = v138;
      uint64_t v597 = swift_allocObject();
      *(unsigned char *)(v597 + 16) = 16;
      uint64_t v140 = swift_allocObject();
      *(unsigned char *)(v140 + 16) = 4;
      uint64_t v141 = v140;
      uint64_t v142 = swift_allocObject();
      *(unsigned char *)(v142 + 16) = 0;
      uint64_t v143 = v142;
      uint64_t v611 = swift_allocObject();
      *(unsigned char *)(v611 + 16) = 2;
      uint64_t v144 = swift_allocObject();
      uint64_t v145 = v612;
      *(void *)(v144 + 16) = sub_100189EB4;
      *(void *)(v144 + 24) = v145;
      uint64_t v146 = swift_allocObject();
      *(void *)(v146 + 16) = sub_10018A130;
      *(void *)(v146 + 24) = v144;
      uint64_t v147 = v146;
      uint64_t v598 = swift_allocObject();
      *(unsigned char *)(v598 + 16) = 112;
      uint64_t v612 = swift_allocObject();
      *(unsigned char *)(v612 + 16) = 8;
      uint64_t v148 = swift_allocObject();
      *(void *)(v148 + 16) = 0x786F626C69616DLL;
      uint64_t v149 = swift_allocObject();
      *(void *)(v149 + 16) = sub_100189ED4;
      *(void *)(v149 + 24) = v148;
      v590 = (uint8_t *)swift_allocObject();
      v590[16] = 37;
      uint64_t v150 = swift_allocObject();
      *(unsigned char *)(v150 + 16) = 8;
      uint64_t v151 = swift_allocObject();
      *(void *)(v151 + 16) = sub_100189EBC;
      *(void *)(v151 + 24) = v128;
      uint64_t v152 = swift_allocObject();
      v591 = v152;
      *(void *)(v152 + 16) = sub_100189E9C;
      *(void *)(v152 + 24) = v151;
      os_log_t v589 = (os_log_t)swift_allocObject();
      LOBYTE(v589[2].isa) = 0;
      uint64_t v600 = swift_allocObject();
      *(unsigned char *)(v600 + 16) = 8;
      uint64_t v153 = swift_allocObject();
      uint64_t v154 = v603;
      *(void *)(v153 + 16) = sub_100188E08;
      *(void *)(v153 + 24) = v154;
      long long v155 = swift_allocObject();
      os_log_t v601 = v155;
      v155[2].char isa = (Class)sub_10018A134;
      v155[3].char isa = (Class)v153;
      uint64_t v602 = swift_allocObject();
      *(unsigned char *)(v602 + 16) = 34;
      uint64_t v603 = swift_allocObject();
      *(unsigned char *)(v603 + 16) = 8;
      uint64_t v156 = swift_allocObject();
      uint64_t v157 = v599;
      *(void *)(v156 + 16) = sub_100189EC0;
      *(void *)(v156 + 24) = v157;
      uint64_t v158 = v150;
      uint64_t v594 = v150;
      uint64_t v159 = swift_allocObject();
      uint64_t v599 = v159;
      *(void *)(v159 + 16) = sub_100189E9C;
      *(void *)(v159 + 24) = v156;
      sub_10000566C(&qword_10070E4D8);
      uint64_t v160 = swift_allocObject();
      v584 = (uint8_t *)sub_1001D5938(v160, 27);
      os_log_t v161 = v595;
      *uint64_t v162 = sub_100189ED8;
      v162[1] = v161;
      uint64_t v163 = v604;
      v162[2] = sub_100189ED8;
      v162[3] = v163;
      v162[4] = sub_100187A80;
      v162[5] = 0;
      uint64_t v164 = v605;
      v162[6] = sub_100189ED8;
      v162[7] = v164;
      uint64_t v165 = v607;
      v162[8] = sub_100189ED8;
      v162[9] = v165;
      uint64_t v166 = v606;
      v162[10] = sub_100189EC8;
      v162[11] = v166;
      uint64_t v167 = v609;
      v162[12] = sub_100189ED8;
      v162[13] = v167;
      v162[14] = sub_100189ED8;
      v162[15] = v137;
      uint64_t v168 = v610;
      v162[16] = sub_100189EC4;
      v162[17] = v168;
      uint64_t v169 = v597;
      v162[18] = sub_100189ED8;
      v162[19] = v169;
      v162[20] = sub_100189ED8;
      v162[21] = v141;
      uint64_t v170 = v141;
      v162[22] = sub_10018A128;
      v162[23] = 0;
      v162[24] = sub_100189ED8;
      v162[25] = v143;
      uint64_t v171 = v143;
      uint64_t v172 = v611;
      v162[26] = sub_100189ED8;
      v162[27] = v172;
      v162[28] = sub_100189ECC;
      v162[29] = v147;
      unint64_t v173 = v147;
      uint64_t v174 = v598;
      v162[30] = sub_100189ED8;
      v162[31] = v174;
      uint64_t v175 = v612;
      v162[32] = sub_100189ED8;
      v162[33] = v175;
      v162[34] = sub_100189ED0;
      v162[35] = v149;
      uint64_t v176 = v149;
      os_log_t v177 = v590;
      uint64_t v178 = v591;
      v162[36] = sub_100189ED8;
      v162[37] = v177;
      v162[38] = sub_100189ED8;
      v162[39] = v158;
      v162[40] = sub_100189EC4;
      v162[41] = v178;
      os_log_t v179 = v589;
      v162[42] = sub_100189ED8;
      v162[43] = v179;
      uint64_t v180 = v600;
      v162[44] = sub_100189ED8;
      v162[45] = v180;
      os_log_t v181 = v601;
      v162[46] = sub_100189ED0;
      v162[47] = v181;
      uint64_t v182 = v602;
      v162[48] = sub_100189ED8;
      v162[49] = v182;
      uint64_t v183 = v603;
      v162[50] = sub_100189ED8;
      v162[51] = v183;
      uint64_t v184 = v599;
      v162[52] = sub_100189EC4;
      v162[53] = v184;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v586 = v170;
      swift_retain();
      uint64_t v587 = v171;
      swift_retain();
      swift_retain();
      v588 = v173;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v585 = v176;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      int v185 = v592;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v185, (os_log_type_t)v593))
      {
        unint64_t v186 = (uint8_t *)sub_1000C6564();
        v638 = swift_slowAlloc();
        uint64_t v639 = 0;
        v583 = v638;
        v584 = v186;
        *(_WORD *)unint64_t v186 = 2307;
        v640[0] = v186 + 2;
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = v595;
        int v187 = v631;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        if (v187) {
          goto LABEL_222;
        }
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v604;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        uint64_t v21 = v621;
        uint64_t v47 = v633;
        uint64_t v188 = v611;
        int v189 = v586;
        int v190 = v596;
        unint64_t v191 = v607;
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100187A80;
        os_log_t v637 = 0;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v605;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        char v192 = v597;
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v191;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC8;
        os_log_t v637 = (os_log_t)v606;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v609;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = v190;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC4;
        os_log_t v637 = (os_log_t)v610;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = v192;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = v189;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        char v193 = v622;
        os_log_t v194 = v589;
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10018A128;
        os_log_t v637 = 0;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        uint64_t v195 = v612;
        long long v196 = v598;
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v587;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v188;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ECC;
        os_log_t v637 = v588;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = v196;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = v195;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        uint64_t v46 = v634;
        uint64_t v44 = v608;
        swift_release();
        v636 = sub_100189ED0;
        os_log_t v637 = (os_log_t)v585;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v590;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v594;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC4;
        os_log_t v637 = v591;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = v194;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v600;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = sub_100189ED0;
        os_log_t v637 = v601;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v602;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
        os_log_t v637 = (os_log_t)v603;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        swift_release();
        v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC4;
        os_log_t v637 = (os_log_t)v599;
        sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
        v631 = 0;
        swift_release();
        os_log_t v197 = v592;
        _os_log_impl((void *)&_mh_execute_header, v592, (os_log_type_t)v593, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removed %ld UIDs: %{public}s", v584, 0x47u);
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_1000C65A8();

        (*(void (**)(NSObject *, uint64_t))(v46 + 8))(v193, v635);
        goto LABEL_94;
      }

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v46 = v634;
      (*(void (**)(NSObject *, uint64_t))(v634 + 8))(v622, v635);
    }
    uint64_t v21 = v621;
    uint64_t v47 = v633;
    uint64_t v44 = v608;
    goto LABEL_94;
  }
  uint64_t v48 = v630 + *(int *)(type metadata accessor for MailboxSyncState() + 48);
  uint64_t v49 = *(void *)(v48 + 40);
  char v50 = *(unsigned char *)(v48 + 48);
  uint64_t v630 = sub_10007AE00(v49, v50);
  sub_10005A3F4(v49, v50);
  *(void *)(v48 + 40) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v48 + 48) = 0;
  uint64_t v51 = v633;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v628, v633, v635);
  sub_100189D6C(v51, (uint64_t)&v583 - ((unint64_t)(v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MailboxTaskLogger);
  unint64_t v52 = (*(unsigned __int8 *)(v632 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v632 + 80);
  uint64_t v53 = swift_allocObject();
  sub_1001892B0((uint64_t)&v583 - ((unint64_t)(v13 + 15) & 0xFFFFFFFFFFFFFFF0), v53 + v52, type metadata accessor for MailboxTaskLogger);
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = sub_100188DC0;
  *(void *)(v54 + 24) = v53;
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = sub_100189EA0;
  *(void *)(v55 + 24) = v54;
  swift_retain();
  swift_retain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_release();
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = sub_100188DC0;
  *(void *)(v56 + 24) = v53;
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = sub_100189EA8;
  *(void *)(v57 + 24) = v56;
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = sub_100188DC0;
  *(void *)(v58 + 24) = v53;
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = sub_100189EB0;
  *(void *)(v59 + 24) = v58;
  swift_retain_n();
  swift_retain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_release();
  uint64_t v60 = swift_allocObject();
  *(void *)(v60 + 16) = sub_100188DC0;
  *(void *)(v60 + 24) = v53;
  uint64_t v61 = swift_allocObject();
  *(void *)(v61 + 16) = sub_100189EB8;
  *(void *)(v61 + 24) = v60;
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = v630;
  os_log_t v619 = (os_log_t)sub_1005E0EB0();
  LODWORD(v615) = sub_1005E25C0();
  v616 = swift_allocObject();
  LOBYTE(v616[2].isa) = 16;
  uint64_t v624 = swift_allocObject();
  *(unsigned char *)(v624 + 16) = 4;
  unint64_t v625 = swift_allocObject();
  *(unsigned char *)(v625 + 16) = 0;
  v627 = (char *)swift_allocObject();
  v627[16] = 1;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = sub_100189EA4;
  *(void *)(v63 + 24) = v55;
  uint64_t v64 = swift_allocObject();
  uint64_t v626 = v64;
  *(void *)(v64 + 16) = sub_10018A12C;
  *(void *)(v64 + 24) = v63;
  uint64_t v65 = swift_allocObject();
  *(unsigned char *)(v65 + 16) = 34;
  uint64_t v630 = swift_allocObject();
  *(unsigned char *)(v630 + 16) = 8;
  uint64_t v66 = swift_allocObject();
  *(void *)(v66 + 16) = sub_100189EAC;
  *(void *)(v66 + 24) = v57;
  uint64_t v67 = swift_allocObject();
  v629 = v67;
  *(void *)(v67 + 16) = sub_100189E9C;
  *(void *)(v67 + 24) = v66;
  uint64_t v620 = swift_allocObject();
  *(unsigned char *)(v620 + 16) = 16;
  uint64_t v632 = swift_allocObject();
  *(unsigned char *)(v632 + 16) = 4;
  uint64_t v617 = swift_allocObject();
  *(unsigned char *)(v617 + 16) = 0;
  uint64_t v618 = swift_allocObject();
  *(unsigned char *)(v618 + 16) = 2;
  uint64_t v68 = swift_allocObject();
  *(void *)(v68 + 16) = sub_100189EB4;
  *(void *)(v68 + 24) = v59;
  uint64_t v69 = swift_allocObject();
  uint64_t v633 = v69;
  *(void *)(v69 + 16) = sub_10018A130;
  *(void *)(v69 + 24) = v68;
  uint64_t v70 = swift_allocObject();
  *(unsigned char *)(v70 + 16) = 112;
  uint64_t v71 = swift_allocObject();
  *(unsigned char *)(v71 + 16) = 8;
  uint64_t v72 = swift_allocObject();
  *(void *)(v72 + 16) = 0x786F626C69616DLL;
  uint64_t v73 = swift_allocObject();
  uint64_t v613 = v73;
  *(void *)(v73 + 16) = sub_100189ED4;
  *(void *)(v73 + 24) = v72;
  uint64_t v74 = swift_allocObject();
  *(unsigned char *)(v74 + 16) = 37;
  uint64_t v75 = v74;
  v609 = (uint8_t *)swift_allocObject();
  v609[16] = 8;
  uint64_t v76 = swift_allocObject();
  *(void *)(v76 + 16) = sub_100189EBC;
  *(void *)(v76 + 24) = v61;
  uint64_t v77 = swift_allocObject();
  uint64_t v614 = v77;
  *(void *)(v77 + 16) = sub_100189E9C;
  *(void *)(v77 + 24) = v76;
  os_log_t v621 = (os_log_t)swift_allocObject();
  LOBYTE(v621[2].isa) = 0;
  v622 = swift_allocObject();
  LOBYTE(v622[2].isa) = 8;
  uint64_t v78 = swift_allocObject();
  *(void *)(v78 + 16) = CommandConnection.RecentErrors.Statistics.networkErrorCount.getter;
  *(void *)(v78 + 24) = v62;
  uint64_t v79 = swift_allocObject();
  v623 = (char *)v79;
  *(void *)(v79 + 16) = sub_10018A134;
  *(void *)(v79 + 24) = v78;
  sub_10000566C(&qword_10070E4D8);
  uint64_t v80 = swift_allocObject();
  uint64_t v610 = sub_1001D5938(v80, 24);
  uint64_t v81 = v616;
  *uint64_t v82 = sub_100189ED8;
  v82[1] = v81;
  uint64_t v83 = v624;
  v82[2] = sub_100189ED8;
  _OWORD v82[3] = v83;
  v82[4] = sub_100187A80;
  v82[5] = 0;
  unint64_t v84 = v625;
  v82[6] = sub_100189ED8;
  v82[7] = v84;
  unint64_t v85 = v627;
  v82[8] = sub_100189ED8;
  v82[9] = v85;
  uint64_t v86 = v626;
  v82[10] = sub_100189EC8;
  long long v82[11] = v86;
  v82[12] = sub_100189ED8;
  v82[13] = v65;
  uint64_t v87 = v630;
  v82[14] = sub_100189ED8;
  v82[15] = v87;
  uint64_t v88 = (uint64_t)v629;
  v82[16] = sub_100189EC4;
  v82[17] = v88;
  uint64_t v89 = v620;
  v82[18] = sub_100189ED8;
  v82[19] = v89;
  uint64_t v90 = v632;
  v82[20] = sub_100189ED8;
  v82[21] = v90;
  v82[22] = sub_10018A128;
  v82[23] = 0;
  uint64_t v91 = v617;
  uint64_t v92 = v618;
  v82[24] = sub_100189ED8;
  v82[25] = v91;
  v82[26] = sub_100189ED8;
  v82[27] = v92;
  uint64_t v93 = v633;
  v82[28] = sub_100189ECC;
  v82[29] = v93;
  v82[30] = sub_100189ED8;
  v82[31] = v70;
  v82[32] = sub_100189ED8;
  v82[33] = v71;
  uint64_t v94 = v613;
  v82[34] = sub_100189ED0;
  v82[35] = v94;
  v82[36] = sub_100189ED8;
  v82[37] = v75;
  uint64_t v95 = v75;
  uint64_t v96 = v609;
  v82[38] = sub_100189ED8;
  v82[39] = v96;
  uint64_t v97 = v614;
  v82[40] = sub_100189EC4;
  v82[41] = v97;
  os_log_t v98 = v621;
  v82[42] = sub_100189ED8;
  v82[43] = v98;
  uint64_t v99 = v622;
  v82[44] = sub_100189ED8;
  v82[45] = v99;
  uint64_t v100 = (uint64_t)v623;
  v82[46] = sub_100189ED0;
  v82[47] = v100;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v612 = v65;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v611 = v71;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (!os_log_type_enabled(v619, (os_log_type_t)v615))
  {

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v634 + 8))(v628, v635);
  }
  uint64_t v610 = v70;
  uint64_t v101 = v611;
  uint64_t v608 = v95;
  os_log_type_t v102 = v96;
  uint64_t v103 = v634;
  uint64_t v104 = (uint8_t *)sub_1000C6564();
  v638 = swift_slowAlloc();
  uint64_t v639 = 0;
  uint64_t v606 = (uint64_t)v638;
  v607 = v104;
  *(_WORD *)uint64_t v104 = 2051;
  v640[0] = v104 + 2;
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
  os_log_t v637 = v616;
  uint64_t v105 = v631;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  if (v105) {
    goto LABEL_222;
  }
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
  os_log_t v637 = (os_log_t)v624;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  uint64_t v106 = v632;
  unint64_t v107 = v630;
  int v108 = v627;
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100187A80;
  os_log_t v637 = 0;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  uint64_t v109 = v618;
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
  os_log_t v637 = (os_log_t)v625;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
  os_log_t v637 = v108;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC8;
  os_log_t v637 = (os_log_t)v626;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
  os_log_t v637 = (os_log_t)v612;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
  os_log_t v637 = v107;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC4;
  os_log_t v637 = v629;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
  os_log_t v637 = (os_log_t)v620;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
  os_log_t v637 = v106;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10018A128;
  os_log_t v637 = 0;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
  os_log_t v637 = (os_log_t)v617;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
  os_log_t v637 = v109;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ECC;
  os_log_t v637 = (os_log_t)v633;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
  os_log_t v637 = (os_log_t)v610;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
  os_log_t v637 = (os_log_t)v101;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  swift_release();
  v636 = sub_100189ED0;
  os_log_t v637 = (os_log_t)v613;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  uint64_t v110 = v614;
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
  os_log_t v637 = (os_log_t)v608;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
  os_log_t v637 = (os_log_t)v102;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  uint64_t v111 = v628;
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189EC4;
  os_log_t v637 = (os_log_t)v110;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  os_log_t v113 = v622;
  uint64_t v112 = (uint64_t)v623;
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
  os_log_t v637 = v621;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  swift_release();
  v636 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100189ED8;
  os_log_t v637 = v113;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  swift_release();
  v636 = sub_100189ED0;
  os_log_t v637 = (os_log_t)v112;
  sub_1000C656C(&v636, (uint64_t)v640, (uint64_t)&v639, (uint64_t)&v638);
  swift_release();
  os_log_t v114 = v619;
  _os_log_impl((void *)&_mh_execute_header, v619, (os_log_type_t)v615, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Local mailbox is empty. Removed %ld pending expunge.", v607, 0x3Du);
  swift_arrayDestroy();
  swift_slowDealloc();
  sub_1000C65A8();

  return (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v111, v635);
}

uint64_t sub_100186310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000566C(&qword_100709E60);
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  __chkstk_darwin(v4);
  unsigned int v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MessagesToRemoveHelper.Range();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000566C(&qword_100709E38);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v24 - v15;
  sub_10001FC6C();
  swift_bridgeObjectRetain();
  uint64_t v27 = v16;
  sub_1005E3680();
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17)
  {
    uint64_t v24 = a2;
    uint64_t v18 = a1;
    uint64_t v19 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v20 = *(void *)(v8 + 72);
    uint64_t v28 = v11;
    uint64_t v29 = v20;
    uint64_t v21 = v26;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v25 + 16);
    uint64_t v25 = v18;
    swift_bridgeObjectRetain();
    do
    {
      sub_100189D6C(v19, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
      MessageIdentifierSet.subtracting(_:)((uint64_t)&v10[*(int *)(v7 + 24)], v28);
      (*v22)(v6, v14, v21);
      sub_1005E3670();
      sub_100007A48((uint64_t)v14, &qword_100709E38);
      sub_100189DD4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
      v19 += v29;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    a2 = v24;
  }
  sub_10001FDF0((uint64_t)v27, a2, &qword_100709E38);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001865EC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)v21 - v9;
  __chkstk_darwin(v8);
  uint64_t v22 = (uint64_t)v21 - v11;
  sub_100187950(a1, a2 | ((HIDWORD(a2) & 1) << 32));
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v13 = type metadata accessor for MessagesToRemoveHelper.Range();
    unint64_t v14 = a1
        + ((*(unsigned __int8 *)(*(void *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80));
    uint64_t v15 = *(void *)(*(void *)(v13 - 8) + 72);
    v21[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v16 = 0;
    while (1)
    {
      MessageIdentifierSet.subtracting(_:)(v14 + *(int *)(v13 + 28), v4);
      MessageIdentifierSet.subtracting(_:)(v22, v4);
      sub_100007A48((uint64_t)v7, &qword_100709E38);
      MessageIdentifierSet.count.getter();
      uint64_t v18 = v17;
      uint64_t result = sub_100007A48((uint64_t)v10, &qword_100709E38);
      BOOL v20 = __OFADD__(v16, v18);
      v16 += v18;
      if (v20) {
        break;
      }
      v14 += v15;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v16 = 0;
LABEL_7:
    sub_100007A48(v22, &qword_100709E38);
    return v16;
  }
  return result;
}

void sub_1001867F4(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v63 = a1;
  uint64_t v7 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v7 - 8);
  uint64_t v65 = (uint64_t)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_10000566C(&qword_100709E60);
  uint64_t v67 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v70 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_10000566C(&qword_10070A9C0);
  __chkstk_darwin(v61);
  uint64_t v69 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s15MissingMessagesO10NewMissingVMa(0);
  uint64_t v57 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000566C(&qword_100709E38);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v60 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v59 = (char *)&v55 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v71 = (char *)&v55 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v55 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v55 - v25;
  __chkstk_darwin(v24);
  uint64_t v75 = (uint64_t)&v55 - v27;
  sub_100187950(a2, a3 | ((HIDWORD(a3) & 1) << 32));
  swift_bridgeObjectRetain();
  sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v64 = &v13[*(int *)(v11 + 24)];
  sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v58 = v11;
  uint64_t v28 = *(int *)(v11 + 20);
  uint64_t v72 = v13;
  uint64_t v29 = &v13[v28];
  *(_DWORD *)uint64_t v29 = 0;
  v29[4] = 1;
  *((_DWORD *)v29 + 2) = 0;
  unsigned char v29[12] = 1;
  *((_DWORD *)v29 + 4) = 0;
  v29[20] = 1;
  uint64_t v30 = *(void *)(a2 + 16);
  if (!v30)
  {
LABEL_18:
    sub_1001892B0((uint64_t)v72, a4, _s15MissingMessagesO10NewMissingVMa);
    swift_bridgeObjectRelease();
    sub_100007A48(v75, &qword_100709E38);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(a4, 0, 1, v58);
    return;
  }
  uint64_t v56 = a4;
  uint64_t v73 = type metadata accessor for MessagesToRemoveHelper.Range();
  unint64_t v31 = a2
      + ((*(unsigned __int8 *)(*(void *)(v73 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v73 - 8) + 80));
  uint64_t v32 = *(void *)(*(void *)(v73 - 8) + 72);
  uint64_t v66 = (void (**)(char *, char *, uint64_t))(v67 + 16);
  uint64_t v55 = a2;
  swift_bridgeObjectRetain();
  uint64_t v33 = v63;
  uint64_t v67 = v32;
  uint64_t v68 = v26;
  while (1)
  {
    MessageIdentifierSet.count.getter();
    if (v39 >= v33) {
      goto LABEL_6;
    }
    MessageIdentifierSet.subtracting(_:)(v31 + *(int *)(v73 + 28), v14);
    MessageIdentifierSet.subtracting(_:)(v75, v14);
    sub_100007A48((uint64_t)v23, &qword_100709E38);
    if ((sub_1005E3630() & 1) == 0) {
      break;
    }
LABEL_5:
    sub_100007A48((uint64_t)v26, &qword_100709E38);
LABEL_6:
    v31 += v32;
    if (!--v30)
    {
      swift_bridgeObjectRelease();
      a4 = v56;
      goto LABEL_18;
    }
  }
  MessageIdentifierSet.count.getter();
  uint64_t v41 = v40;
  MessageIdentifierSet.count.getter();
  if (!__OFADD__(v41, v42))
  {
    if (v41 + v42 <= v33)
    {
      uint64_t v34 = *v66;
      uint64_t v35 = v70;
      uint64_t v36 = v74;
      (*v66)(v70, v68, v74);
      sub_1005E3670();
      uint64_t v37 = v65;
      sub_1000079E4(v31 + *(int *)(v73 + 20), v65, &qword_100709E30);
      MessageIdentifierSet.subtracting(_:)(v75, v14);
      sub_100007A48(v37, &qword_100709E38);
      v34(v35, v23, v36);
      uint64_t v32 = v67;
      uint64_t v26 = v68;
      sub_1005E3670();
      uint64_t v38 = (uint64_t)v23;
    }
    else
    {
      MessageIdentifierSet.count.getter();
      uint64_t v44 = v43;
      MessageIdentifierSet.count.getter();
      uint64_t v46 = v44 + v45;
      if (__OFADD__(v44, v45)) {
        goto LABEL_20;
      }
      if (__OFSUB__(v46, v33)) {
        goto LABEL_21;
      }
      sub_10006654C(v46 - v33, (uint64_t)v71);
      MessageIdentifierSet.ranges.getter(v69);
      sub_10000566C(&qword_10070A8F8);
      uint64_t v47 = sub_1005E35B0();
      if (v47 == sub_1005E35E0())
      {
        sub_100007A48(v69, &qword_10070A9C0);
      }
      else
      {
        uint64_t v48 = v69;
        MessageIdentifierSet.RangeView.subscript.getter();
        int v49 = v78;
        sub_100007A48(v48, &qword_10070A9C0);
        uint64_t v62 = *v66;
        uint64_t v50 = v74;
        v62(v70, v71, v74);
        sub_1005E3670();
        uint64_t v51 = v65;
        sub_1000079E4(v31 + *(int *)(v73 + 20), v65, &qword_100709E30);
        uint64_t v52 = (uint64_t)v59;
        MessageIdentifierSet.subtracting(_:)(v75, v14);
        sub_100007A48(v51, &qword_100709E38);
        LODWORD(v76) = v49;
        int v77 = -1;
        sub_100063E18();
        static MessageIdentifier.... infix(_:_:)();
        uint64_t v76 = v78;
        Range<>.init<A>(_:)((uint64_t)&v76, (uint64_t)&type metadata for UID);
        uint64_t v76 = v53;
        sub_10001FC6C();
        uint64_t v54 = (uint64_t)v60;
        sub_1005E36A0();
        MessageIdentifierSet.intersection(_:)(v54, v14);
        sub_100007A48(v54, &qword_100709E38);
        sub_100007A48(v52, &qword_100709E38);
        v62(v70, v23, v50);
        sub_1005E3670();
        sub_100007A48((uint64_t)v23, &qword_100709E38);
      }
      uint64_t v38 = (uint64_t)v71;
      uint64_t v33 = v63;
      uint64_t v32 = v67;
    }
    sub_100007A48(v38, &qword_100709E38);
    goto LABEL_5;
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
}